basePath: /
definitions:
  AddRulesRequest:
    properties:
      add:
        items:
          $ref: '#/definitions/RuleNoId'
        type: array
    required:
      - add
    type: object
  AddRulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Rule'
        type: array
      meta:
        $ref: '#/definitions/RulesResponseMetadata'
    required:
      - data
      - meta
    type: object
  AnimatedGif:
    allOf:
      - $ref: '#/definitions/CommonMediaFields'
    properties:
      preview_image_url:
        format: uri
        type: string
      type:
        enum:
          - animated_gif
        type: string
    type: object
  CashtagEntity:
    allOf:
      - $ref: '#/definitions/EntityIndices'
      - $ref: '#/definitions/CashtagFields'
  CashtagFields:
    description: >-
      Represent the portion of text recognized as a Cashtag, and its start and
      end position within the text.
    properties:
      tag:
        type: string
    required:
      - tag
    type: object
  ClientDisconnectedProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: Your client has gone away.
    properties:
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/client-disconnected'
        type: string
    type: object
  ClientForbiddenProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: >-
      A problem that indicates your client is forbidden from making this
      request.
    properties:
      reason:
        enum:
          - official-client-forbidden
          - client-not-enrolled
        type: string
      registration_url:
        format: uri
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/client-forbidden'
        type: string
    type: object
  CommonMediaFields:
    description: >-
      This contains the list of the fields that are common to all media
      returned.
    properties:
      height:
        $ref: '#/definitions/MediaHeight'
      media_key:
        $ref: '#/definitions/MediaKey'
      width:
        $ref: '#/definitions/MediaWidth'
    required:
      - media_key
      - height
      - width
    type: object
  CompactPlace:
    allOf:
      - $ref: '#/definitions/CompactPlaceFields'
    properties:
      format:
        pattern: compact
        type: string
  CompactPlaceFields:
    properties:
      country_code:
        $ref: '#/definitions/CountryCode'
      id:
        $ref: '#/definitions/PlaceId'
      name:
        description: The human readable name of this place.
        type: string
    required:
      - id
      - name
      - country_code
    type: object
  CompactTweet:
    allOf:
      - $ref: '#/definitions/CompactTweetFields'
    properties:
      format:
        pattern: compact
        type: string
  CompactTweetFields:
    description: >-
      This is the list of fields returned when requesting a `compact` response
      format for a Tweet object.
    properties:
      attachments:
        description: Specifies the type of attachments (if any) present in this Tweet.
        properties:
          media_keys:
            description: >-
              A list of Media Keys for each one of the media attachments (if
              media are attached).
            items:
              $ref: '#/definitions/MediaKey'
            minItems: 1
            type: array
          poll_ids:
            description: A list of poll IDs (if polls are attached).
            items:
              $ref: '#/definitions/PollId'
            minItems: 1
            type: array
        type: object
      author_id:
        $ref: '#/definitions/UserID'
      created_at:
        description: Creation time of the Tweet.
        format: date-time
        type: string
      id:
        $ref: '#/definitions/TweetID'
      in_reply_to_user_id:
        $ref: '#/definitions/UserID'
      referenced_tweets:
        description: >-
          A list of Tweets this Tweet refers to. For example, if the parent
          Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the
          related Tweet referenced to by its parent.
        items:
          properties:
            id:
              $ref: '#/definitions/TweetID'
            type:
              enum:
                - retweeted
                - quoted
                - replied_to
              type: string
          required:
            - type
            - id
          type: object
        minItems: 1
        type: array
      text:
        description: The content of the Tweet.
        type: string
      withheld:
        $ref: '#/definitions/TweetWithheld'
    required:
      - id
      - created_at
      - text
      - author_id
    type: object
  CompactUser:
    allOf:
      - $ref: '#/definitions/CompactUserFields'
    properties:
      format:
        pattern: compact
        type: string
  CompactUserFields:
    description: >-
      This is the list of fields returned when requesting a `compact` response
      format for a User object.
    properties:
      created_at:
        description: Creation time of this user.
        format: date-time
        type: string
      id:
        $ref: '#/definitions/UserID'
      name:
        description: 'The friendly name of this user, as shown on their profile.'
        type: string
      profile_image_url:
        description: The URL to the profile image for this user.
        format: uri
        type: string
      protected:
        description: >-
          Indicates if this user has chosen to protect their Tweets (in other
          words, if this user's Tweets are private).
        type: boolean
      username:
        $ref: '#/definitions/UserName'
      verified:
        description: Indicate if this user is a verified Twitter User.
        type: boolean
      withheld:
        $ref: '#/definitions/UserWithheld'
    required:
      - id
      - created_at
      - name
      - username
      - protected
      - verified
    type: object
  ConnectionExceptionProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: A problem that indicates something is wrong with the connection
    properties:
      connection_issue:
        enum:
          - TooManyConnections
          - ProvisioningSubscription
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/streaming-connection'
        type: string
    type: object
  ContextAnnotation:
    description: Annotation inferred from the tweet text.
    properties:
      domain:
        $ref: '#/definitions/ContextAnnotationDomainFields'
      entity:
        $ref: '#/definitions/ContextAnnotationEntityFields'
    required:
      - domain
      - entity
    type: object
  ContextAnnotationDomainFields:
    description: Represents the data for the context annotation domain.
    properties:
      description:
        description: Description of the context annotation domain.
        type: string
      id:
        description: The unique id for a context annotation domain.
        pattern: '^[0-9]{1,19}$'
        type: string
      name:
        description: Name of the context annotation domain.
        type: string
    required:
      - id
    type: object
  ContextAnnotationEntityFields:
    description: Represents the data for the context annotation entity.
    properties:
      description:
        description: Description of the context annotation entity.
        type: string
      id:
        description: The unique id for a context annotation entity.
        pattern: '^[0-9]{1,19}$'
        type: string
      name:
        description: Name of the context annotation entity.
        type: string
    required:
      - id
    type: object
  CountryCode:
    pattern: '^[A-Z]{2}$'
    type: string
  DefaultPlace:
    allOf:
      - $ref: '#/definitions/CompactPlaceFields'
      - $ref: '#/definitions/DefaultPlaceFields'
    properties:
      format:
        pattern: default
        type: string
  DefaultPlaceFields:
    properties:
      contained_within:
        items:
          $ref: '#/definitions/PlaceId'
        minItems: 1
        type: array
      country:
        type: string
      full_name:
        type: string
      place_type:
        $ref: '#/definitions/PlaceType'
    required:
      - place_type
      - full_name
      - country
    type: object
  DefaultTweet:
    allOf:
      - $ref: '#/definitions/CompactTweetFields'
      - $ref: '#/definitions/DefaultTweetFields'
    properties:
      format:
        pattern: default
        type: string
  DefaultTweetFields:
    description: >-
      This is the list of fields returned by default for a Tweet object, for
      example when `format` or `tweet.format` are omitted, or when they are set
      to `default`.
    properties:
      entities:
        $ref: '#/definitions/FullTextEntities'
      geo:
        description: 'The location tagged on the Tweet, if the user provided one.'
        properties:
          coordinates:
            $ref: '#/definitions/Point'
          place_id:
            $ref: '#/definitions/PlaceId'
        type: object
    type: object
  DefaultUser:
    allOf:
      - $ref: '#/definitions/CompactUserFields'
      - $ref: '#/definitions/DefaultUserFields'
    properties:
      format:
        pattern: default
        type: string
  DefaultUserFields:
    description: >-
      This is the list of fields returned by default for a User object, for
      example when `format` or `user.format` are omitted, or when they are set
      to `default`.
    properties:
      description:
        description: >-
          The text of this user's profile description (also known as bio), if
          the user provided one.
        type: string
      entities:
        description: A list of metadata found in the user's profile description.
        properties:
          description:
            $ref: '#/definitions/FullTextEntities'
          url:
            description: >-
              Expanded details for the URL specified in the user's profile, with
              start and end indices.
            properties:
              urls:
                items:
                  $ref: '#/definitions/UrlEntity'
                minItems: 1
                type: array
            type: object
        type: object
      location:
        description: >-
          The location specified in the user's profile, if the user provided
          one. As this is a freeform value, it may not indicate a valid
          location, but it may be fuzzily evaluated when performing searches
          with location queries.
        type: string
      most_recent_tweet_id:
        $ref: '#/definitions/TweetID'
      pinned_tweet_id:
        $ref: '#/definitions/TweetID'
      url:
        description: The URL specified in the user's profile.
        type: string
    required:
      - url
      - description
    type: object
  DeleteRulesRequest:
    properties:
      ids:
        items:
          $ref: '#/definitions/RuleId'
        type: array
      values:
        items:
          $ref: '#/definitions/RuleValue'
        type: array
    type: object
  DeleteRulesResponse:
    properties:
      meta:
        $ref: '#/definitions/RulesResponseMetadata'
    required:
      - meta
    type: object
  DetailedPlace:
    allOf:
      - $ref: '#/definitions/CompactPlaceFields'
      - $ref: '#/definitions/DefaultPlaceFields'
      - $ref: '#/definitions/DetailedPlaceFields'
    properties:
      format:
        pattern: detailed
        type: string
  DetailedPlaceFields:
    properties:
      geo:
        $ref: '#/definitions/Geo'
    type: object
  DetailedTweet:
    allOf:
      - $ref: '#/definitions/CompactTweetFields'
      - $ref: '#/definitions/DefaultTweetFields'
      - $ref: '#/definitions/DetailedTweetFields'
    properties:
      format:
        pattern: detailed
        type: string
  DetailedTweetFields:
    description: >-
      This is the list of fields for a Tweet object when `format` or
      `tweet.format` are set to `detailed`.
    properties:
      context_annotations:
        items:
          $ref: '#/definitions/ContextAnnotation'
        minItems: 1
        type: array
      lang:
        description: >-
          Language of the Tweet, if detected by Twitter. Returned as a BCP47
          language tag.
        type: string
      possibly_sensitive:
        description: >-
          Indicates if this Tweet contains URLs marked as sensitive, for example
          content suitable for mature audiences.
        type: boolean
      source:
        description: The name of the app the user Tweeted from.
        type: string
      stats:
        description: Engagement metrics for the Tweet at the time of the request.
        properties:
          like_count:
            description: Number of times this Tweet has been liked.
            type: integer
          quote_count:
            description: Number of times this Tweet has been quoted.
            type: integer
          reply_count:
            description: Number of times this Tweet has been replied to.
            type: integer
          retweet_count:
            description: Number of times this Tweet has been Retweeted.
            type: integer
        required:
          - retweet_count
          - reply_count
          - like_count
        type: object
    required:
      - stats
      - possibly_sensitive
    type: object
  DetailedUser:
    allOf:
      - $ref: '#/definitions/CompactUserFields'
      - $ref: '#/definitions/DefaultUserFields'
      - $ref: '#/definitions/DetailedUserFields'
    properties:
      format:
        pattern: detailed
        type: string
  DetailedUserFields:
    description: >-
      This is the list of fields for a User object when `format` or
      `user.format` are set to `detailed`.
    properties:
      stats:
        description: A list of metrics for this user
        properties:
          followers_count:
            description: Number of users who are following this user.
            type: integer
          following_count:
            description: Number of users this user is following.
            type: integer
          listed_count:
            description: The number of lists that include this user.
            type: integer
          tweet_count:
            description: The number of Tweets (including Retweets) posted by this user.
            type: integer
        required:
          - followers_count
          - following_count
          - tweet_count
          - listed_count
        type: object
    type: object
  DisallowedResourceProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: >-
      A problem that indicates that the resource requested violates the precepts
      of this API.
    properties:
      resource_id:
        type: string
      resource_type:
        enum:
          - tweet
        type: string
      section:
        enum:
          - data
          - includes
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/disallowed-resource'
        type: string
    required:
      - resource_id
      - resource_type
      - section
    type: object
  DuplicateRuleProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: The rule you have submitted is a duplicate.
    properties:
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/duplicate-rules'
        type: string
    type: object
  EntityIndices:
    description: >-
      Represent a boundary range (start and end index) for a recognized entity
      (for example a hashtag or a mention). `start` must be smaller than `end`.
    properties:
      end:
        description: Index (zero-based) at which position this entity ends.
        minimum: 0
        type: integer
      start:
        description: Index (zero-based) at which position this entity starts.
        minimum: 0
        type: integer
    required:
      - start
      - end
    type: object
  Error:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    required:
      - code
      - message
  Expansions:
    properties:
      media:
        items:
          $ref: '#/definitions/Media'
        minItems: 1
        type: array
      places:
        items:
          $ref: '#/definitions/Place'
        minItems: 1
        type: array
      polls:
        items:
          $ref: '#/definitions/Poll'
        minItems: 1
        type: array
      tweets:
        items:
          $ref: '#/definitions/Tweet'
        minItems: 1
        type: array
      users:
        items:
          $ref: '#/definitions/User'
        minItems: 1
        type: array
    type: object
  FormatParamType:
    description: >-
      Specifies the level of detail the response body should return. Allowed
      values are `default` (return most fields in the response body), `compact`
      (return only a minimum subset with the most important fields) and
      `detailed` (return all the available fields).
    enum:
      - compact
      - default
      - detailed
    example: detailed
    type: string
  FullTextEntities:
    properties:
      annotations:
        items:
          allOf:
            - $ref: '#/definitions/EntityIndices'
            - description: Represents the data for the annotation.
              properties:
                normalized_text:
                  description: Text used to determine annotation.
                  type: string
                probability:
                  description: Confidence factor for annotation type.
                  format: double
                  maximum: 1
                  minimum: 0
                  type: number
                type:
                  description: Annotation type.
                  type: string
              type: object
          description: Annotation for entities based on the tweet text.
        minItems: 1
        type: array
      cashtags:
        items:
          $ref: '#/definitions/CashtagEntity'
        minItems: 1
        type: array
      hashtags:
        items:
          $ref: '#/definitions/HashtagEntity'
        minItems: 1
        type: array
      mentions:
        items:
          $ref: '#/definitions/MentionEntity'
        minItems: 1
        type: array
      urls:
        items:
          $ref: '#/definitions/UrlEntity'
        minItems: 1
        type: array
    type: object
  GenericProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: >-
      A generic problem with no additional information beyond that provided by
      the HTTP status code.
    properties:
      status:
        type: integer
      type:
        enum:
          - 'about:blank'
        type: string
    required:
      - status
  Geo:
    properties:
      bbox:
        items:
          format: double
          maximum: 180
          minimum: -180
          type: number
        maxItems: 4
        minItems: 4
        type: array
      geometry:
        $ref: '#/definitions/Point'
      properties:
        type: object
      type:
        enum:
          - Feature
        type: string
    required:
      - type
      - bbox
      - properties
    type: object
  GetRulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Rule'
        type: array
      meta:
        $ref: '#/definitions/RulesResponseMetadata'
    required:
      - data
      - meta
    type: object
  HTTPStatusCode:
    description: HTTP Status Code.
    maximum: 599
    minimum: 100
    type: integer
  HashtagEntity:
    allOf:
      - $ref: '#/definitions/EntityIndices'
      - $ref: '#/definitions/HashtagFields'
  HashtagFields:
    description: >-
      Represent the portion of text recognized as a Hashtag, and its start and
      end position within the text.
    properties:
      tag:
        description: The text of the Hashtag
        type: string
    required:
      - tag
    type: object
  HideReplyRequest:
    properties:
      hidden:
        enum:
          - true
        type: boolean
    type: object
  HideReplyResponse:
    properties:
      data:
        properties:
          hidden:
            enum:
              - true
            type: boolean
        type: object
    type: object
  InvalidRequestProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: A problem that indicates this request is invalid.
    properties:
      errors:
        items:
          properties:
            message:
              type: string
            parameters:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
          type: object
        type: array
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/invalid-request'
        type: string
    type: object
  InvalidRuleProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: The rule you have submitted is invalid.
    properties:
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/invalid-rules'
        type: string
    type: object
  Media:
    required:
      - type
  MediaHeight:
    description: The height of the media in pixels
    minimum: 0
    type: integer
  MediaKey:
    description: The Media Key identifier for this attachment.
    pattern: '^([0-9]+)_([0-9]+)$'
    type: string
  MediaWidth:
    description: The width of the media in pixels
    minimum: 0
    type: integer
  MentionEntity:
    allOf:
      - $ref: '#/definitions/EntityIndices'
      - $ref: '#/definitions/MentionFields'
  MentionFields:
    description: >-
      Represent the portion of text recognized as a User mention, and its start
      and end position within the text.
    properties:
      username:
        $ref: '#/definitions/UserName'
    required:
      - username
    type: object
  OperationalDisconnectProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: You have been disconnected for operational reasons.
    properties:
      disconnect_type:
        enum:
          - OperationalDisconnect
          - UpstreamOperationalDisconnect
          - ForceDisconnect
          - UpstreamUncleanDisconnect
          - SlowReader
          - InternalError
          - PackageUpgraded
          - PackageDowngraded
          - ClientApplicationStateDegraded
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/operational-disconnect'
        type: string
    type: object
  Photo:
    allOf:
      - $ref: '#/definitions/CommonMediaFields'
    properties:
      type:
        enum:
          - photo
        type: string
      url:
        format: uri
        type: string
    type: object
  Place:
    required:
      - format
  PlaceId:
    description: The identifier for this place
    type: string
  PlaceType:
    enum:
      - poi
      - neighborhood
      - city
      - admin
      - country
      - unknown
    type: string
  Point:
    description: >-
      A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2)
      geometry object.
    properties:
      coordinates:
        $ref: '#/definitions/Position'
      type:
        enum:
          - Point
        type: string
    required:
      - type
      - coordinates
    type: object
  Poll:
    description: Represent a Poll attached to a Tweet
    properties:
      duration_minutes:
        type: integer
      end_datetime:
        format: date-time
        type: string
      id:
        $ref: '#/definitions/PollId'
      options:
        items:
          $ref: '#/definitions/PollOption'
        maxItems: 4
        minItems: 2
        type: array
      voting_status:
        enum:
          - open
          - closed
        type: string
    required:
      - id
      - options
      - voting_status
      - end_datetime
    type: object
  PollId:
    description: Unique identifier of this poll.
    pattern: '^[0-9]{1,19}$'
    type: string
  PollOption:
    description: Describes a choice in a Poll object.
    properties:
      label:
        description: The text of a poll choice.
        type: string
      position:
        description: Position of this choice in the poll.
        type: integer
      votes:
        description: Number of users who voted for this choice.
        type: integer
    required:
      - position
      - label
      - votes
    type: object
  Position:
    description: >-
      A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in
      the format `[longitude,latitude]`.
    items:
      type: number
    maxItems: 2
    minItems: 2
    type: array
  Problem:
    description: >-
      An HTTP Problem Details object, as defined in IETF RFC 7807
      (https://tools.ietf.org/html/rfc7807).
  ProblemFields:
    properties:
      detail:
        type: string
      title:
        type: string
      type:
        format: uri
        type: string
    required:
      - type
      - title
      - detail
    type: object
  ResourceNotFoundProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: 'A problem that indicates that a given Tweet, User, etc. does not exist.'
    properties:
      parameter:
        minLength: 1
        type: string
      resource_type:
        enum:
          - user
          - tweet
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/resource-not-found'
        type: string
      value:
        description: Value will match the schema of the field.
    required:
      - parameter
      - value
      - resource_type
    type: object
  ResourceUnauthorizedProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: >-
      A problem that indicates you are not allowed to see a particular Tweet,
      User, etc.
    properties:
      resource_id:
        type: string
      resource_type:
        enum:
          - tweet
        type: string
      section:
        enum:
          - data
          - includes
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/not-authorized-for-resource'
        type: string
    required:
      - resource_id
      - resource_type
      - section
    type: object
  Rule:
    properties:
      id:
        $ref: '#/definitions/RuleId'
      tag:
        $ref: '#/definitions/RuleTag'
      value:
        $ref: '#/definitions/RuleValue'
    required:
      - value
    type: object
  RuleId:
    description: Unique identifier of this rule.
    example: '120897978112909812'
    pattern: '^[0-9]{1,19}$'
    type: string
  RuleNoId:
    properties:
      tag:
        $ref: '#/definitions/RuleTag'
      value:
        $ref: '#/definitions/RuleValue'
    required:
      - value
    type: object
  RuleTag:
    description: A tag meant for the labeling of user provided rules.
    example: Non-retweeted coffee tweets
    type: string
  RuleValue:
    description: The filterlang value of the rule.
    example: 'coffee -is:retweet'
    type: string
  RulesCapProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: You have exceeded the maximum number of rules.
    properties:
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/rule-cap'
        type: string
    type: object
  RulesRequestSummary:
    type: object
  RulesResponseMetadata:
    properties:
      sent:
        type: string
      summary:
        $ref: '#/definitions/RulesRequestSummary'
    required:
      - sent
    type: object
  SingleTweetLookupResponse:
    properties:
      data:
        $ref: '#/definitions/Tweet'
      errors:
        items:
          $ref: '#/definitions/Problem'
        minItems: 1
        type: array
      includes:
        $ref: '#/definitions/Expansions'
    type: object
  Tweet:
    example:
      author_id: '712089797812'
      created_at: 'Wed Jun 20 16:53:49 +0000 2018'
      format: compact
      id: '12234'
      text: Some great insight into the human condition.
    required:
      - format
  TweetExpansionsParamType:
    description: >-
      The list of fields you can expand for a [Tweet](#Tweet) object. If the
      field has an ID, it can be expanded into a full object.
    example: author_id
    items:
      enum:
        - author_id
        - referenced_tweets.id
        - in_reply_to_user_id
        - geo.place_id
        - attachments.media_keys
        - attachments.poll_ids
        - entities.mentions.username
        - referenced_tweets.id.author_id
      type: string
    minItems: 1
    type: array
    uniqueItems: true
  TweetID:
    description: >-
      Unique identifier of this Tweet. This is returned as a string in order to
      avoid complications with languages and tools that cannot handle large
      integers.
    example: '120897978112909812'
    pattern: '^[0-9]{1,19}$'
    type: string
  TweetInteractionMetrics:
    description: Interaction metrics for a Tweet.
    example:
      impression_count: 100
      like_count: 1
      quote_count: 3
      reply_count: 4
      retweet_count: 2
    properties:
      impression_count:
        description: Number of times this Tweet has been viewed.
        format: int32
        type: integer
      like_count:
        description: Number of times this Tweet has been liked.
        format: int32
        type: integer
      quote_count:
        description: Number of times this Tweet has been quoted.
        format: int32
        type: integer
      reply_count:
        description: Number of times this Tweet has been replied to.
        format: int32
        type: integer
      retweet_count:
        description: Number of times this Tweet has been Retweeted.
        format: int32
        type: integer
    required:
      - like_count
      - retweet_count
      - quote_count
      - reply_count
    type: object
  TweetLookupResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Tweet'
        minItems: 1
        type: array
      errors:
        items:
          $ref: '#/definitions/Problem'
        minItems: 1
        type: array
      includes:
        $ref: '#/definitions/Expansions'
    type: object
  TweetMetrics:
    description: Metrics for a Tweet.
    properties:
      tweet:
        $ref: '#/definitions/TweetInteractionMetrics'
      tweet_id:
        $ref: '#/definitions/TweetID'
      video:
        $ref: '#/definitions/VideoMetrics'
    required:
      - tweet_id
      - tweet
    type: object
  TweetMetricsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/TweetMetrics'
        minItems: 1
        type: array
      errors:
        items:
          $ref: '#/definitions/Problem'
        minItems: 1
        type: array
    type: object
  TweetSearchResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Tweet'
        minItems: 1
        type: array
      errors:
        items:
          $ref: '#/definitions/Problem'
        minItems: 1
        type: array
      includes:
        $ref: '#/definitions/Expansions'
      meta:
        properties:
          newest_id:
            description: Most recent Tweet Id returned by search query
            pattern: '^[0-9]{1,19}$'
            type: string
          next_token:
            description: >-
              This value is used to get the next 'page' of results by providing
              it to the next_token parameter.
            type: string
          oldest_id:
            description: Oldest Tweet Id returned by search query
            pattern: '^[0-9]{1,19}$'
            type: string
          result_count:
            description: Number of search query results
            format: int32
            type: integer
        type: object
    type: object
  TweetWithheld:
    description: >-
      Indicates withholding details for [withheld
      content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
    properties:
      copyright:
        description: >-
          Indicates if the content is being withheld for on the basis of
          copyright infringement.
        type: boolean
      country_codes:
        description: Provides a list of countries where this content is not available.
        items:
          $ref: '#/definitions/CountryCode'
        minItems: 1
        type: array
        uniqueItems: true
      scope:
        description: >-
          Indicates whether the content being withheld is the `tweet` or a
          `user`.
        enum:
          - tweet
          - user
        type: string
    required:
      - copyright
      - country_codes
    type: object
  URL:
    description: A validly formatted URL.
    example: 'https://example.com'
    format: uri
    type: string
  URLFields:
    description: Represent the portion of text recognized as a URL.
    properties:
      description:
        description: Description of the URL landing page.
        type: string
      display_url:
        description: The URL as displayed in the Twitter client.
        type: string
      expanded_url:
        $ref: '#/definitions/URL'
      images:
        items:
          $ref: '#/definitions/URLImage'
        minItems: 1
        type: array
      status:
        $ref: '#/definitions/HTTPStatusCode'
      title:
        description: Title of the page the URL points to.
        type: string
      url:
        $ref: '#/definitions/URL'
    required:
      - url
    type: object
  URLImage:
    description: Represent the information for the URL image
    properties:
      height:
        $ref: '#/definitions/MediaHeight'
      url:
        $ref: '#/definitions/URL'
      width:
        $ref: '#/definitions/MediaWidth'
    type: object
  UnsupportedAuthenticationProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: A problem that indicates that the authentication used is not supported.
    properties:
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/unsupported-authentication'
        type: string
    type: object
  UrlEntity:
    allOf:
      - $ref: '#/definitions/EntityIndices'
      - $ref: '#/definitions/URLFields'
    description: >-
      Represent the portion of text recognized as a URL, and its start and end
      position within the text.
  UsageCapExceededProblem:
    allOf:
      - $ref: '#/definitions/ProblemFields'
    description: A problem that indicates that a usage cap has been exceeded.
    properties:
      period:
        enum:
          - Daily
          - Monthly
        type: string
      scope:
        enum:
          - Account
          - Product
        type: string
      type:
        enum:
          - 'https://api.twitter.com/labs/1/problems/usage-capped'
        type: string
    type: object
  User:
    example:
      created_at: '2017-10-09T17:16:24.000Z'
      format: compact
      id: '1234'
      name: Twitter API
      protected: false
      username: twitterapi
    required:
      - format
  UserExpansionsParamType:
    description: >-
      The list of fields you can expand for a [User](#User) object. If the field
      has an ID, it can be expanded into a full object.
    example: most_recent_tweet_id
    items:
      enum:
        - most_recent_tweet_id
        - pinned_tweet_id
      type: string
    minItems: 1
    type: array
    uniqueItems: true
  UserID:
    description: >-
      Unique identifier of this User. This is returned as a string in order to
      avoid complications with languages and tools that cannot handle large
      integers.
    example: '712089797812'
    pattern: '^[0-9]{1,19}$'
    type: string
  UserLookupResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/User'
        minItems: 1
        type: array
      errors:
        items:
          $ref: '#/definitions/Problem'
        minItems: 1
        type: array
      includes:
        $ref: '#/definitions/Expansions'
        type: object
    type: object
  UserName:
    description: The Twitter handle (screen name) of this user.
    pattern: '^[A-Za-z0-9_]{1,15}$'
    type: string
  UserWithheld:
    description: >-
      Indicates withholding details for [withheld
      content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
    properties:
      country_codes:
        description: Provides a list of countries where this content is not available.
        items:
          $ref: '#/definitions/CountryCode'
        minItems: 1
        type: array
        uniqueItems: true
      scope:
        description: Indicates that the content being withheld is a `user`.
        enum:
          - user
        type: string
    required:
      - country_codes
    type: object
  Video:
    allOf:
      - $ref: '#/definitions/CommonMediaFields'
    properties:
      duration_ms:
        type: integer
      preview_image_url:
        format: uri
        type: string
      type:
        enum:
          - video
        type: string
    type: object
  VideoMetrics:
    description: Metrics corresponding to a Video.
    properties:
      media_key:
        $ref: '#/definitions/MediaKey'
      playback_0_count:
        description: Number of users who made it through 0% of the video.
        format: int32
        type: integer
      playback_100_count:
        description: Number of users who made it through 100% of the video.
        format: int32
        type: integer
      playback_25_count:
        description: Number of users who made it through 25% of the video.
        format: int32
        type: integer
      playback_50_count:
        description: Number of users who made it through 50% of the video.
        format: int32
        type: integer
      playback_75_count:
        description: Number of users who made it through 75% of the video.
        format: int32
        type: integer
      view_count:
        description: Number of times this video has been viewed.
        format: int32
        type: integer
    required:
      - media_key
      - view_count
    type: object
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
host: api.twitter.com
info:
  contact:
    name: Twitter Developers
    url: 'https://developer.twitter.com/'
    x-twitter: twitter
  description: API Reference — Labs v1
  license:
    name: Twitter Developer Agreement and Policy
    url: 'https://developer.twitter.com/en/developer-terms/agreement-and-policy.html'
  termsOfService: 'https://developer.twitter.com/en/developer-terms/agreement-and-policy.html'
  title: Tweets and Users
  version: '1.14'
  x-apisguru-categories:
    - social
  x-logo:
    url: 'https://twitter.com/twitter/profile_image?size=original'
  x-origin:
    - format: openapi
      url: 'https://api.twitter.com/labs/1/openapi.json'
      version: '3.0'
  x-preferred: false
  x-providerName: twitter.com
  x-serviceName: labs
paths:
  /labs/1/openapi.json:
    get:
      description: >-
        Full open api spec in JSON format. (See
        https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
      operationId: getOpenApiSpec
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: The request was successful
          schema:
            type: string
      summary: Returns the open api spec document.
      tags:
        - General
  /labs/1/tweets/metrics/private:
    get:
      description: >-
        Returns various metrics about a Tweet, including metrics for an embedded
        Video if one exists
      operationId: findPrivateTweetMetricsById
      parameters:
        - collectionFormat: csv
          description: >-
            A comma separated list of Tweet IDs. Up to 50 are allowed in a
            single request.
          in: query
          items:
            $ref: '#/definitions/TweetID'
          maxItems: 50
          minItems: 1
          name: ids
          required: true
          type: array
      produces:
        - application/json
        - application/problem+json
      responses:
        '200':
          description: The request was successful
          schema:
            $ref: '#/definitions/TweetMetricsResponse'
        default:
          description: The request has failed.
          schema:
            $ref: '#/definitions/Error'
      summary: Returns private metrics corresponding to a Tweet
      tags:
        - Tweets
  /labs/1/tweets/stream/filter:
    get:
      description: Streams tweets matching a user's active rule set.
      operationId: streamFilter
      parameters:
        - collectionFormat: multi
          description: A comma-separated list of tweet expansions.
          in: query
          items:
            $ref: '#/definitions/TweetExpansionsParamType'
          name: expansions
          required: false
          type: array
      produces:
        - application/json
        - application/problem+json
      responses:
        '200':
          description: >-
            The request was successful. Successful responses will return a
            stream of individual JSON Tweet payloads.
          schema:
            description: A tweet or error that can be returned by the streaming tweet API
            type: object
        default:
          description: The request has failed.
          schema:
            $ref: '#/definitions/Error'
      summary: Streams tweets matching a user's active rule set.
      tags:
        - Tweets
  /labs/1/tweets/stream/filter/rules:
    get:
      description: >-
        Returns rules from a user's active rule set. Users can fetch all of
        their rules or a subset, specified by the provided rule ids.
      operationId: getRules
      parameters:
        - collectionFormat: multi
          description: A comma-separated list of Rule IDs.
          in: query
          items:
            $ref: '#/definitions/RuleId'
          name: ids
          required: false
          type: array
      produces:
        - application/json
        - application/problem+json
      responses:
        '200':
          description: The request was successful
          schema:
            $ref: '#/definitions/GetRulesResponse'
        default:
          description: The request has failed.
          schema:
            $ref: '#/definitions/Error'
      summary: Returns rules from a user's active rule set.
      tags:
        - Rules
        - Tweets
    post:
      consumes:
        - application/json
      description: >-
        Add or delete rules from a user's active rule set. Users can provide
        unique, optionally tagged rules to add. Users can delete their entire
        rule set or a subset specified by rule ids or values.
      operationId: addOrDeleteRules
      parameters:
        - description: >-
            Dry Run can be used with both the add and delete action, with the
            expected result given, but without actually taking any action in the
            system (meaning the end state will always be as it was when the
            request was submitted). This is particularly useful to validate rule
            changes.
          in: query
          name: dry_run
          required: false
          type: boolean
        - description: ''
          in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
        - application/problem+json
      responses:
        '200':
          description: The request was successful
          schema: {}
        default:
          description: The request has failed.
          schema:
            $ref: '#/definitions/Error'
      summary: Add or delete rules from a user's active rule set.
      tags:
        - Rules
        - Tweets
  /labs/1/tweets/stream/sample:
    get:
      description: Streams a deterministic 1% of public tweets.
      operationId: streamSample
      parameters:
        - collectionFormat: multi
          description: A comma-separated list of tweet expansions.
          in: query
          items:
            $ref: '#/definitions/TweetExpansionsParamType'
          name: expansions
          required: false
          type: array
      produces:
        - application/json
        - application/problem+json
      responses:
        '200':
          description: >-
            The request was successful. Successful responses will return a
            stream of individual JSON Tweet payloads.
          schema:
            description: A tweet or error that can be returned by the streaming tweet API.
            type: object
        default:
          description: The request has failed.
          schema:
            $ref: '#/definitions/Error'
      summary: Streams a deterministic 1% of public tweets.
      tags:
        - Tweets
schemes:
  - https
swagger: '2.0'
tags:
  - description: Miscellaneous endpoints for general API functionality
    externalDocs:
      description: Find out more
      url: 'https://developer.twitter.com/en/docs/labs'
    name: General
  - description: APIs related to Rules For Tweet APIs
    externalDocs:
      description: Find out more
      url: 'https://developer.twitter.com/en/docs/labs/filtered-stream/api-reference'
    name: Rules
  - description: APIs related to Recent Search
    externalDocs:
      description: Find out more
      url: 'https://developer.twitter.com/en/docs/labs/recent-search/overview'
    name: Search
  - description: APIs related to Tweets
    externalDocs:
      description: Find out more
      url: 'https://developer.twitter.com/en/docs/labs/tweets-and-users/overview'
    name: Tweets
  - description: APIs related to Users
    externalDocs:
      description: Find out more
      url: 'https://developer.twitter.com/en/docs/labs/tweets-and-users/overview'
    name: Users
x-components:
  parameters:
    DefaultFormat:
      description: >-
        Format for all the objects returned as part of the response, including
        expansions.
      in: query
      name: format
      required: false
      schema:
        $ref: '#/definitions/FormatParamType'
    PlaceFormat:
      description: Format for all place objects returned in response.
      in: query
      name: place.format
      required: false
      schema:
        $ref: '#/definitions/FormatParamType'
    TweetFormat:
      description: >-
        Format for all [Tweet](#Tweet) objects returned in response. Can be used
        together with other format parameters to expand or reduce Tweet objects
        only.
      in: query
      name: tweet.format
      required: false
      schema:
        $ref: '#/definitions/FormatParamType'
    UserFormat:
      description: >-
        Format for all [User](#User) objects returned in response. Can be used
        together with other format parameters to expand or reduce User objects
        only.
      in: query
      name: user.format
      required: false
      schema:
        $ref: '#/definitions/FormatParamType'
  responses:
    HttpErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: The request has failed.

