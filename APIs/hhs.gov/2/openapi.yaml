basePath: /api/v2
definitions:
  AlternateImage:
    properties:
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      name:
        type: string
      url:
        type: string
      width:
        format: int32
        type: integer
    type: object
  AlternateImageWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/AlternateImage'
        type: array
    type: object
  Campaign:
    properties:
      contactEmail:
        type: string
      description:
        type: string
      endDate:
        format: date
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      startDate:
        format: date
        type: string
    type: object
  CampaignWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Campaign'
        type: array
    type: object
  Collection:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    type: object
  CollectionWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Collection'
        type: array
    type: object
  ExtendedAttribute:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      value:
        type: string
    type: object
  ExtendedAttributeWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
    type: object
  Html:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    type: object
  HtmlWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Html'
        type: array
    type: object
  Image:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      width:
        format: int32
        type: integer
    type: object
  ImageWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Image'
        type: array
    type: object
  Infographic:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      width:
        format: int32
        type: integer
    type: object
  InfographicWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Infographic'
        type: array
    type: object
  Language:
    properties:
      id:
        format: int64
        type: integer
      isActive:
        type: boolean
      isoCode:
        type: string
      name:
        type: string
    type: object
  LanguageWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Language'
        type: array
    type: object
  MediaItem:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    type: object
  MediaItemWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
    type: object
  MediaTypeHolder:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  MediaTypeHolderWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/MediaTypeHolder'
        type: array
    type: object
  Message:
    properties:
      errorCode:
        type: string
      errorDetail:
        type: string
      errorMessage:
        type: string
      userMessage:
        type: string
    type: object
  MessageWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Message'
        type: array
    type: object
  Meta:
    properties:
      messages:
        items:
          $ref: '#/definitions/Message'
        type: array
      pagination:
        $ref: '#/definitions/Pagination'
      status:
        type: integer
    type: object
  MetaWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Meta'
        type: array
    type: object
  PDF:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    type: object
  PDFWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/PDF'
        type: array
    type: object
  Pagination:
    properties:
      count:
        type: integer
      currentUrl:
        type: string
      max:
        type: integer
      nextUrl:
        type: string
      offset:
        type: integer
      pageNum:
        type: integer
      previousUrl:
        type: string
      sort:
        type: string
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  PaginationWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Pagination'
        type: array
    type: object
  ResourceWrapped: {}
  Source:
    properties:
      acronym:
        type: string
      contactEmail:
        type: string
      id:
        format: int64
        type: integer
      largeLogoUrl:
        type: string
      name:
        type: string
      smallLogoUrl:
        type: string
      websiteUrl:
        type: string
    type: object
  SourceWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Source'
        type: array
    type: object
  SyndicateMarshaller:
    properties:
      content:
        type: string
      description:
        type: string
      id:
        type: integer
      mediaType:
        type: string
      name:
        type: string
      sourceUrl:
        type: string
    type: object
  SyndicateMarshallerWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/SyndicateMarshaller'
        type: array
    type: object
  TagLanguageMarshaller:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
      isoCode:
        type: string
      name:
        type: string
    type: object
  TagLanguageMarshallerWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/TagLanguageMarshaller'
        type: array
    type: object
  TagMarshaller:
    properties:
      id:
        type: integer
      language:
        $ref: '#/definitions/TagLanguageMarshaller'
      name:
        type: string
      type:
        $ref: '#/definitions/TagTypeMarshaller'
    type: object
  TagMarshallerWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/TagMarshaller'
        type: array
    type: object
  TagTypeMarshaller:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  TagTypeMarshallerWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/TagTypeMarshaller'
        type: array
    type: object
  Tweet:
    properties:
      account:
        $ref: '#/definitions/TwitterAccount'
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      mediaUrl:
        type: string
      messageText:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      tweetDate:
        format: date
        type: string
      tweetId:
        format: int32
        type: integer
      videoVariantUrl:
        type: string
    type: object
  TweetWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Tweet'
        type: array
    type: object
  TwitterAccount: {}
  Video:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        items:
          $ref: '#/definitions/ExtendedAttribute'
        type: array
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    type: object
  VideoWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Video'
        type: array
    type: object
  YoutubeMetadata:
    properties: {}
    type: object
  YoutubeMetadataWrapped:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/YoutubeMetadata'
        type: array
    type: object
  test: {}
info:
  contact:
    email: syndicationadmin@hhs.gov
  description: >-
    <div class="swagger-ui-wrap extraFooter"><h3>Common Features /
    Behaviors</h3> <div class="features"> <ul> <li><strong>* "sort"
    param:</strong> supports multi column sorting through the use of commas as
    delimiters, and a hyphen to denote descending order. <br/>
    <strong><span>Examples:</span></strong> <ul> <li><span
    class="example">name</span><span class="description">sort results by name
    ascending</span></li> <li><span class="example">-name</span><span
    class="description">sort results by name descending</span></li> <li><span
    class="example">-name,id</span><span class="description">sort results by
    name descending and then by id ascending</span></li> <li><span
    class="example">id,-dateContentAuthored</span><span class="description">sort
    results by id ascending and then date descending</span></li> </ul> </li>
    <li><strong>Date formats:</strong> Date input format is expected to be based
    on <a href="http://www.ietf.org/rfc/rfc3339.txt">RFC 3339</a>. <br/>
    <span><strong>Example:</strong></span>
    <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: 'http://www.gnu.org/licenses/gpl.html'
  termsOfService: 'http://www.hhs.gov/web/socialmedia/policies/tos.html#ready'
  title: HHS Media Services API
  version: '2'
  x-apisguru-categories:
    - open_data
  x-logo:
    backgroundColor: '#185394'
    url: 'http://www.hhs.gov/sites/all/themes/project_h/css/images/hhs_logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/mermade/oas-kit'
        version: 2.6.0
      format: openapi
      url: 'https://api.digitalmedia.hhs.gov/swagger'
      version: '3.0'
  x-providerName: hhs.gov
paths:
  /resources.json:
    get:
      description: Global search
      parameters:
        - allowEmptyValue: false
          description: The search query supplied by the user
          format: ''
          in: query
          name: q
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            "Returns the list of Resources matching the search query 'q'.<p>The
            search query 'q' is a Lucene query.<br>The syntax for a Lucene query
            can be found <a
            href="http://lucene.apache.org/core/2_9_4/queryparsersyntax.html">here</a>."
          schema:
            items:
              $ref: '#/definitions/ResourceWrapped'
            title: ArrayOfResources
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Resources by search query
      tags:
        - resources
  /resources/campaigns.json:
    get:
      description: Media Listings for a specific campaign
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: '* Set of fields to sort the records by.'
          format: ''
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list of Campaigns.
          schema:
            $ref: '#/definitions/CampaignWrapped'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get Campaigns
      tags:
        - campaigns
  '/resources/campaigns/{id}.json':
    get:
      description: Information about a specific campaign
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Returns the Campaign identified by the 'id'.
          schema:
            $ref: '#/definitions/CampaignWrapped'
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Campaign by ID
      tags:
        - campaigns
  '/resources/campaigns/{id}/media.json':
    get:
      description: Campaign Listings
      parameters:
        - description: The id of the campaign to find media items for
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of MediaItems for the Campaign identified by the
            'id'.
          schema:
            $ref: '#/definitions/MediaItemWrapped'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get MediaItems by Campaign ID
      tags:
        - campaigns
  '/resources/campaigns/{id}/syndicate.{format}':
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          format: ''
          in: query
          name: displayMethod
          required: false
          type: string
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Renders the list of MediaItems associated with the Tag identified by
            the 'id'.
          schema:
            $ref: '#/definitions/SyndicateMarshallerWrapped'
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaItems for Campaign
      tags:
        - campaigns
  /resources/languages.json:
    get:
      description: Language Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list Languages.
          schema:
            items:
              $ref: '#/definitions/LanguageWrapped'
            title: ArrayOfLanguages
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get Languages
      tags:
        - languages
  '/resources/languages/{id}.json':
    get:
      description: Information about a specific language
      parameters:
        - description: The id of the language to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Returns the Language identified by the 'id'.
          schema:
            items:
              $ref: '#/definitions/LanguageWrapped'
            title: ArrayOfLanguages
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Language by ID
      tags:
        - languages
  /resources/media.json:
    get:
      description: Media Items Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: '* Set of fields to sort the records by.'
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: '* The ascending or descending order.'
          format: ''
          in: query
          name: order
          required: false
          type: string
        - allowEmptyValue: false
          description: 'Find all media items belonging to the specified media type[s].'
          format: ''
          in: query
          name: mediaTypes
          required: false
          type: string
        - allowEmptyValue: false
          description: 'Find all media items containing the provided name, case insensitive.'
          format: ''
          in: query
          name: name
          required: false
          type: string
        - allowEmptyValue: false
          description: Restrict filtering to media items in a specific collection.
          format: int32
          in: query
          name: collectionId
          required: false
          type: integer
        - allowEmptyValue: false
          description: 'Find all media items containing the partial name, case insensitive.'
          format: ''
          in: query
          name: nameContains
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items containing the provided partial description,
            case insensitive.
          format: ''
          in: query
          name: descriptionContains
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which have the provided sourceUrl, case
            insensitive.
          format: ''
          in: query
          name: sourceUrl
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which contain the provided partial sourceUrl,
            case insensitive.
          format: ''
          in: query
          name: sourceUrlContains
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which have the provided customThumbnailUrl,
            case insensitive.
          format: ''
          in: query
          name: customThumbnailUrl
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which contain the provided partial
            customThumbnailUrl, case insensitive.
          format: ''
          in: query
          name: customThumbnailUrlContains
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored on the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: dateContentAuthored
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated on the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: dateContentUpdated
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items published on the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: dateContentPublished
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items reviewed on the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: dateContentReviewed
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items syndicated on the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: dateSyndicationCaptured
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated through the syndication system on the
            provided day, (RFC 3339, time ignored).
          format: date
          in: query
          name: dateSyndicationUpdated
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored since the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: contentAuthoredSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored before the provided day (RFC 3339,
            time ignored).
          format: date
          in: query
          name: contentAuthoredBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored between the provided start and end
            days (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: contentAuthoredInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated since the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: contentUpdatedSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated before the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: contentUpdatedBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated between the provided start and end days
            (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: contentUpdatedInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated since the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: contentPublishedSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items published before the provided day (RFC 3339,
            time ignored).
          format: date
          in: query
          name: contentPublishedBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items published between the provided start and end
            days (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: contentPublishedInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items reviewed since the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: contentReviewedSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items reviewed before the provided day (RFC 3339,
            time ignored).
          format: date
          in: query
          name: contentReviewedBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items reviewed between the provided start and end
            days (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: contentReviewedInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored since the provided day (RFC 3339, time
            ignored).
          format: date
          in: query
          name: syndicationCapturedSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored before the provided day (RFC 3339,
            time ignored).
          format: date
          in: query
          name: syndicationCapturedBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items authored between the provided start and end
            days (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: syndicationCapturedInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated since the provided day, (RFC 3339, time
            ignored).
          format: date
          in: query
          name: syndicationUpdatedSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated before the provided day, (RFC 3339,
            time ignored).
          format: date
          in: query
          name: syndicationUpdatedBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items updated between the provided start and end
            days, (RFC 3339, comma separated, time ignored).
          format: ''
          in: query
          name: syndicationUpdatedInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items visible since the provided day, (RFC 3339, time
            ignored).
          format: date
          in: query
          name: syndicationVisibleSinceDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items visible before the provided day, (RFC 3339,
            time ignored).
          format: date
          in: query
          name: syndicationVisibleBeforeDate
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items visible between the provided start and end
            days, (RFC 3339, comma separated, time ignored).
          format: date
          in: query
          name: syndicationVisibleInRange
          required: false
          type: string
        - allowEmptyValue: false
          description: Find all media items written in the language specified by Id.
          format: int64
          in: query
          name: languageId
          required: false
          type: integer
        - allowEmptyValue: false
          description: >-
            Find all media items written in the language specified by name, case
            insensitive.
          format: ''
          in: query
          name: languageName
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items written in the language specified by 639-2
            isoCode , case insensitive.
          format: ''
          in: query
          name: languageIsoCode
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which match the provided hash, case
            insensitive.
          format: ''
          in: query
          name: hash
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items which match the provided partial hash, case
            insensitive.
          format: ''
          in: query
          name: hashContains
          required: false
          type: string
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by Id.
          format: int64
          in: query
          name: sourceId
          required: false
          type: integer
        - allowEmptyValue: false
          description: >-
            Find all media items that belong to the source specified by name,
            case insensitive.
          format: ''
          in: query
          name: sourceName
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items that belong to the source specified by partial
            name, case insensitive.
          format: ''
          in: query
          name: sourceNameContains
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items that belong to the source specified by acronym,
            case insensitive.
          format: ''
          in: query
          name: sourceAcronym
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Find all media items that belong to the source specified by partial
            acronym, case insensitive.
          format: ''
          in: query
          name: sourceAcronymContains
          required: false
          type: string
        - allowEmptyValue: false
          description: Find only media items tagged with the specified tag Ids.
          format: ''
          in: query
          name: tagIds
          required: false
          type: string
        - allowEmptyValue: false
          description: Find only media from within the supplied list of Ids.
          format: ''
          in: query
          name: restrictToSet
          required: false
          type: string
        - allowEmptyValue: false
          description: Find all media items containing the createdBy value.
          format: ''
          in: query
          name: createdBy
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of MediaItems matching the specified query
            parameters.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get MediaItems
      tags:
        - media
  /resources/media/featured.json:
    get:
      description: Get the list of featured content in the syndication system
      parameters:
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Get the list of featured content in the syndication system
          schema:
            items:
              $ref: '#/definitions/MediaItem'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get the list of featured content in the syndication system
      tags:
        - media
  '/resources/media/mostPopularMedia.{format}':
    get:
      description: Get the media with the highest ratings.
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list of MediaItems with the highest ratings.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get MediaItems by popularity
      tags:
        - media
  /resources/media/searchResults.json:
    get:
      description: Full search
      parameters:
        - allowEmptyValue: false
          description: The search query supplied by the user
          format: ''
          in: query
          name: q
          required: true
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of MediaItems matching the search query
            'q'.<p>Please enter keyword or URL in search query 'q'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get MediaItems by search query
      tags:
        - media
  '/resources/media/{id}.json':
    get:
      description: Information about a specific media item
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Returns the MediaItem identified by the 'id'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaItem by ID
      tags:
        - media
  '/resources/media/{id}/content':
    get:
      description: 'The actual media content (html, image, etc...)'
      parameters:
        - description: The id of the media to show content for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: The method that called this method
          format: ''
          in: query
          name: calledByBuild
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the raw content (html, image, etc...) for the MediaItem
            identified by the 'id'.
          schema:
            type: string
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get content for MediaItem
      tags:
        - media
  '/resources/media/{id}/embed.json':
    get:
      description: >-
        Get the javascript or iframe embed code for this item (to embed it on a
        web page).
      parameters:
        - description: The id of the media to get embed code for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: 'Currently supports ''iframe'', defaults to ''javascript''.'
          format: ''
          in: query
          name: flavor
          required: false
          type: string
        - allowEmptyValue: false
          description: The width of the generated iframe.
          format: int32
          in: query
          name: width
          required: false
          type: integer
        - allowEmptyValue: false
          description: The height of the generated iframe.
          format: int32
          in: query
          name: height
          required: false
          type: integer
        - allowEmptyValue: false
          description: The name of the iframe element
          format: ''
          in: query
          name: iframeName
          required: false
          type: string
        - allowEmptyValue: false
          default: false
          description: Should a reference to the JQuery Library be omitted?
          format: ''
          in: query
          name: excludeJquery
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: Should the div to insert content into be omitted?
          format: ''
          in: query
          name: excludeDiv
          required: false
          type: boolean
        - allowEmptyValue: false
          description: Should the div to insert content into have a specific name?
          format: ''
          in: query
          name: divId
          required: false
          type: string
        - allowEmptyValue: false
          description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          format: ''
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the javascript or iframe embed code for the MediaItem
            identified by 'id'.
          schema:
            type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get embed code for MediaItem
      tags:
        - media
  '/resources/media/{id}/preview.jpg':
    get:
      description: Get the jpg preview of the content item where applicable.
      parameters:
        - description: The id of the media to get a preview for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the JPG preview, where applicable, for the MediaItem
            identified by the 'id'.
          schema:
            type: object
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
        - media
  '/resources/media/{id}/relatedMedia.{format}':
    get:
      description: Get the media related to the current media item.
      parameters:
        - description: The id of the media item to get related media for
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of MediaItems related to the MediaItem identified
            by the 'id'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get related MediaItems by ID
      tags:
        - media
  '/resources/media/{id}/syndicate.{format}':
    get:
      description: Get syndicated content.
      parameters:
        - description: The id of the media to show embed code for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          default: syndicate
          description: The css class to target for extraction.
          format: ''
          in: query
          name: cssClass
          required: false
          type: string
        - allowEmptyValue: false
          default: false
          description: Remove in-line styles from content.
          format: ''
          in: query
          name: stripStyles
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: Remove script tags from content.
          format: ''
          in: query
          name: stripScripts
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: Remove image tags from content.
          format: ''
          in: query
          name: stripImages
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: Remove break tags from content.
          format: ''
          in: query
          name: stripBreaks
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: Remove class attributes from content (except 'syndicate').
          format: ''
          in: query
          name: stripClasses
          required: false
          type: boolean
        - allowEmptyValue: false
          description: 'Set font size (in points) of p, div, and span tags.'
          format: int32
          in: query
          name: font-size
          required: false
          type: integer
        - allowEmptyValue: false
          description: >-
            Accepts valid CSS float options, such as 'left' or 'right'. Will
            inject a style into the content before rendering.
          format: ''
          in: query
          name: imageFloat
          required: false
          type: string
        - allowEmptyValue: false
          description: >-
            Accepts 4 CSV values representing pixel sizes of margin similar to
            CSS. Default format is 'north,east,south,west' - for example
            '0,10,10,0' would put a 10 pixel margin on the right and bottom
            sides of an image. Will inject a style into the content before
            rendering.
          format: ''
          in: query
          name: imageMargin
          required: false
          type: string
        - allowEmptyValue: false
          default: true
          description: 'If content is a video, the embeded video will auto play when loaded.'
          format: ''
          in: query
          name: autoplay
          required: false
          type: boolean
        - allowEmptyValue: false
          default: false
          description: >-
            If content is a video, related items will be shown at the end of
            playback.
          format: ''
          in: query
          name: rel
          required: false
          type: boolean
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the syndicated content for a given MediaItem in the
            specified 'format' (HTML or JSON).
          schema:
            $ref: '#/definitions/SyndicateMarshallerWrapped'
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get syndicated content for MediaItem
      tags:
        - media
  '/resources/media/{id}/thumbnail.jpg':
    get:
      description: Get the jpg thumbnail of the content item where applicable.
      parameters:
        - description: The id of the media to get a thumbnail for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the JPG thumbnail, where applicable, for the MediaItem
            identified by the 'id'.
          schema:
            type: object
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get JPG thumbnail for MediaItem
      tags:
        - media
  '/resources/media/{id}/youtubeMetaData.json':
    get:
      description: Youtube meta-data for a video item.
      parameters:
        - description: The id of the video to show meta data for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the Youtube metadata, where applicable, for the MediaItem
            identified by the 'id'.
          schema:
            properties:
              callback:
                type: string
              meta:
                $ref: '#/definitions/Meta'
              results:
                items:
                  $ref: '#/definitions/YoutubeMetadata'
                type: array
            type: object
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Youtube metadata for MediaItem
      tags:
        - media
  '/resources/mediaTypes.{format}':
    get:
      description: Information about media types
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list of available MediaTypes.
          schema:
            items:
              $ref: '#/definitions/MediaTypeHolderWrapped'
            title: ArrayOfMediaTypes
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaTypes
      tags:
        - mediaTypes
  /resources/sources.json:
    get:
      description: Source Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list of Sources.
          schema:
            items:
              $ref: '#/definitions/SourceWrapped'
            title: ArrayOfSources
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Sources
      tags:
        - sources
  '/resources/sources/{id}.json':
    get:
      description: Information about a specific source.
      parameters:
        - description: The id of the source to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Returns the Source identified by the 'id'.
          schema:
            items:
              $ref: '#/definitions/SourceWrapped'
            title: ArrayOfSources
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Source by ID
      tags:
        - sources
  '/resources/sources/{id}/syndicate.{format}':
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          format: ''
          in: query
          name: displayMethod
          required: false
          type: string
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Renders the list of MediaItems associated with the Source identified
            by the 'id'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfSyndicatedItems
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaItems for Source
      tags:
        - sources
  '/resources/tags.{format}':
    get:
      description: List of Tags
      parameters:
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - allowEmptyValue: false
          description: 'Return tags[s] matching the supplied name'
          format: ''
          in: query
          name: name
          required: false
          type: string
        - allowEmptyValue: false
          description: Return tags which contain the supplied partial name.
          format: ''
          in: query
          name: nameContains
          required: false
          type: string
        - allowEmptyValue: false
          description: Return tags associated with the supplied media id.
          format: int64
          in: query
          name: mediaId
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return tags belonging to the supplied tag type id.
          format: int64
          in: query
          name: typeId
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return tags belonging to the supplied tag type name.
          format: ''
          in: query
          name: typeName
          required: false
          type: string
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of Tags matching the specified query parameters in
            the specified 'format'.
          schema:
            items:
              $ref: '#/definitions/TagMarshallerWrapped'
            title: ArrayOfTags
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get Tags
      tags:
        - tags
  '/resources/tags/tagLanguages.{format}':
    get:
      description: List of Tag Languages
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the list of TagLanguages
          schema:
            items:
              $ref: '#/definitions/TagLanguageMarshallerWrapped'
            title: ArrayOfTagLanguages
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get TagLanguages
      tags:
        - tags
  '/resources/tags/tagTypes.{format}':
    get:
      description: List of Types
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Renders the list of MediaItems associated with the Tag identified by
            the 'id'.
          schema:
            items:
              $ref: '#/definitions/TagTypeMarshallerWrapped'
            title: ArrayOfTagTypes
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  '/resources/tags/{id}.{format}':
    get:
      description: Information about a specific tag
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the Tag identified by the 'id' in the specified 'format'.
          schema:
            items:
              $ref: '#/definitions/TagMarshallerWrapped'
            title: ArrayOfTags
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
        - tags
  '/resources/tags/{id}/media.{format}':
    get:
      description: MediaItem
      parameters:
        - description: The id of the tag to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of MediaItems associated with the Tag identified by
            the 'id'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  '/resources/tags/{id}/related.{format}':
    get:
      description: Information about related tags to a specific tag
      parameters:
        - description: The id of the tag to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          format: ''
          in: query
          name: sort
          required: false
          type: string
        - allowEmptyValue: false
          description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of Tags related to the Tag identified by the 'id'
            in the specified format.
          schema:
            items:
              $ref: '#/definitions/TagMarshallerWrapped'
            title: ArrayOfTags
            type: array
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Get related Tags by ID
      tags:
        - tags
  '/resources/tags/{id}/syndicate.{format}':
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          format: ''
          in: query
          name: displayMethod
          required: false
          type: string
        - description: Automatically added
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Renders the list of MediaItems associated with the Tag identified by
            the 'id'.
          schema:
            type: string
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  '/resources/userMediaLists/{id}.json':
    get:
      description: Get a specific user media list.
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - allowEmptyValue: false
          description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          format: int64
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Get a specific user media list by 'id'.
          schema:
            items:
              $ref: '#/definitions/MediaItemWrapped'
            title: ArrayOfMediaItems
            type: array
        '400':
          description: Invalid ID
        '500':
          description: Internal Server Error
      summary: Get UserMediaList by ID
      tags:
        - userMediaLists
swagger: '2.0'
tags:
  - description: Information about media
    name: media
  - description: Information about languages
    name: languages
  - description: Information about media types
    name: mediaTypes
  - description: Information about tags
    name: tags
  - description: Information about campaigns
    name: campaigns
  - description: Information about tags
    name: sources
  - description: Global Search
    name: resources
  - description: Get media from user generated lists.
    name: userMediaLists
x-components: {}

