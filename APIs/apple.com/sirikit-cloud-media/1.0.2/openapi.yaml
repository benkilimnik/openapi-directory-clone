basePath: /api
definitions:
  AddMediaIntent:
    allOf:
      - $ref: '#/definitions/Intent'
    properties:
      class:
        enum:
          - AddMediaIntent
        type: string
      mediaDestination:
        $ref: '#/definitions/MediaDestination'
      mediaItems:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
      mediaSearch:
        $ref: '#/definitions/MediaSearch'
    required:
      - class
    type: object
    x-discriminator-value: AddMediaIntent
    x-ms-discriminator-value: AddMediaIntent
  AddMediaIntentHandlingConfirmInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - AddMediaIntentHandling.confirm
        type: string
      result:
        nullable: false
        properties:
          response:
            $ref: '#/definitions/AddMediaIntentResponse'
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: AddMediaIntentHandling.confirm
    x-ms-discriminator-value: AddMediaIntentHandling.confirm
  AddMediaIntentHandlingHandleInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - AddMediaIntentHandling.handle
        type: string
      result:
        nullable: false
        properties:
          response:
            $ref: '#/definitions/AddMediaIntentResponse'
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: AddMediaIntentHandling.handle
    x-ms-discriminator-value: AddMediaIntentHandling.handle
  AddMediaIntentHandlingInvocation:
    allOf:
      - $ref: '#/definitions/Invocation'
    discriminator: method
    properties:
      method:
        enum:
          - AddMediaIntentHandling.resolveMediaItems
          - AddMediaIntentHandling.resolveMediaDestination
          - AddMediaIntentHandling.confirm
          - AddMediaIntentHandling.handle
        type: string
      params:
        nullable: false
        properties:
          intent:
            $ref: '#/definitions/AddMediaIntent'
        required:
          - intent
        type: object
    required:
      - method
      - params
    type: object
    x-discriminator-value: AddMediaIntentHandling.resolveMediaItems
    x-ms-discriminator-value: AddMediaIntentHandling.resolveMediaItems
  AddMediaIntentHandlingInvocationResponse: {}
  AddMediaIntentHandlingResolveMediaDestinationInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - AddMediaIntentHandling.resolveMediaDestination
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/AddMediaMediaDestinationResolutionResult'
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: AddMediaIntentHandling.resolveMediaDestination
    x-ms-discriminator-value: AddMediaIntentHandling.resolveMediaDestination
  AddMediaIntentHandlingResolveMediaItemsInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - AddMediaIntentHandling.resolveMediaItems
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            items:
              $ref: '#/definitions/AddMediaMediaItemResolutionResult'
            type: array
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: AddMediaIntentHandling.resolveMediaItems
    x-ms-discriminator-value: AddMediaIntentHandling.resolveMediaItems
  AddMediaIntentResponse:
    allOf:
      - $ref: '#/definitions/IntentResponse'
    properties:
      class:
        enum:
          - AddMediaIntentResponse
        type: string
      code:
        $ref: '#/definitions/AddMediaIntentResponseCode'
    required:
      - class
      - code
    type: object
    x-discriminator-value: AddMediaIntentResponse
    x-ms-discriminator-value: AddMediaIntentResponse
  AddMediaIntentResponseCode:
    enum:
      - unspecified
      - ready
      - inProgress
      - success
      - failure
      - failureRequiringAppLaunch
    type: string
  AddMediaMediaDestinationResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - AddMediaMediaDestinationResolutionResult
        type: string
      confirmationRequired:
        properties:
          mediaDestinationToConfirm:
            $ref: '#/definitions/MediaDestination'
        required:
          - mediaDestinationToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      disambiguation:
        properties:
          mediaDestinationsToDisambiguate:
            items:
              $ref: '#/definitions/MediaDestination'
            minItems: 2
            type: array
        required:
          - mediaDestinationsToDisambiguate
        type: object
        x-flow-exception: Requires Disambiguation
      success:
        properties:
          resolvedMediaDestination:
            $ref: '#/definitions/MediaDestination'
        required:
          - resolvedMediaDestination
        type: object
      unsupported:
        properties:
          reason:
            $ref: '#/definitions/AddMediaMediaDestinationUnsupportedReason'
        type: object
        x-flow-exception: Unsupported
    type: object
  AddMediaMediaDestinationUnsupportedReason:
    enum:
      - playlistNameNotFound
      - playlistNotEditable
    type: string
  AddMediaMediaItemResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - AddMediaMediaItemResolutionResult
        type: string
      confirmationRequired:
        properties:
          mediaItemToConfirm:
            $ref: '#/definitions/MediaItem'
        required:
          - mediaItemToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      disambiguation:
        properties:
          mediaItemsToDisambiguate:
            items:
              $ref: '#/definitions/MediaItem'
            minItems: 2
            type: array
        required:
          - mediaItemsToDisambiguate
        type: object
      success:
        properties:
          resolvedMediaItem:
            $ref: '#/definitions/MediaItem'
        required:
          - resolvedMediaItem
        type: object
      unsupported:
        properties:
          reason:
            $ref: '#/definitions/AddMediaMediaItemUnsupportedReason'
        type: object
        x-flow-exception: Unsupported
    type: object
    x-discriminator-value: AddMediaMediaItemResolutionResult
    x-ms-discriminator-value: AddMediaMediaItemResolutionResult
  AddMediaMediaItemUnsupportedReason:
    enum:
      - loginRequired
      - subscriptionRequired
      - unsupportedMediaType
      - explicitContentSettings
      - restrictedContent
      - regionRestriction
    type: string
  BooleanResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - BooleanResolutionResult
        type: string
      confirmationRequired:
        properties:
          valueToConfirm:
            type: boolean
        required:
          - valueToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      success:
        properties:
          resolvedValue:
            type: boolean
        required:
          - resolvedValue
        type: object
    type: object
    x-discriminator-value: BooleanResolutionResult
    x-ms-discriminator-value: BooleanResolutionResult
  Constraints:
    properties:
      allowExplicitContent:
        default: true
        type: boolean
      maximumQueueSegmentItemCount:
        default: 1000
        format: uint32
        maximum: 1000
        minimum: 50
        type: integer
      updateUserTasteProfile:
        default: true
        type: boolean
    type: object
  Content:
    properties:
      attributes:
        $ref: '#/definitions/ContentAttributes'
      control:
        default: default
        example: song
        type: string
      identifier:
        $ref: '#/definitions/ContentIdentifier'
      isLive:
        type: boolean
      playIndex:
        format: uint64
        type: integer
      url:
        maxLength: 2000
        type: string
    required:
      - identifier
    type: object
  ContentAttributes:
    properties:
      albumName:
        example: Blood On the Tracks
        maxLength: 250
        type: string
      artistName:
        example: Bob Dylan
        maxLength: 1000
        type: string
      artwork:
        properties:
          url:
            maxLength: 2000
            type: string
        type: object
      composerName:
        example: B. Dylan
        maxLength: 250
        type: string
      durationInMillis:
        format: uint64
        type: integer
      genreNames:
        items:
          maxLength: 250
          type: string
        maxItems: 30
        type: array
      name:
        example: Tangled Up In Blue
        maxLength: 250
        type: string
      trackNumber:
        example: 1
        format: uint32
        type: integer
    type: object
  ContentIdentifier:
    example: j15f8A3cuU0GG
    maxLength: 1000
    minLength: 1
    type: string
  DateComponents:
    example: '1980'
  DateComponentsRange:
    properties:
      endDateComponents:
        $ref: '#/definitions/DateComponents'
      startDateComponents:
        $ref: '#/definitions/DateComponents'
    type: object
  ExecutionMetrics:
    properties:
      completed:
        format: date-time
        type: string
      duration:
        format: float
        type: number
      received:
        format: date-time
        type: string
    type: object
  ExplicitDateComponents:
    properties:
      calendarIdentifier:
        type: string
      day:
        format: int32
        type: integer
      era:
        format: int32
        type: integer
      hour:
        format: int32
        type: integer
      minute:
        format: int32
        type: integer
      month:
        format: int32
        type: integer
      nanosecond:
        format: int32
        type: integer
      second:
        format: int32
        type: integer
      timeZone:
        type: string
      year:
        format: int32
        type: integer
    type: object
  ExtensionConfig:
    properties:
      hdr:
        example:
          x-client-type: headless
          x-service-affinity: cluster1
        type: object
      intent:
        properties:
          addMedia:
            allOf:
              - $ref: '#/definitions/ExtensionEndpointConfig'
            properties:
              opt:
                items:
                  enum:
                    - resolveMediaDestination
                    - confirm
                  type: string
                type: array
            type: object
          hdr:
            example:
              x-service-affinity: intent2
            type: object
          playMedia:
            allOf:
              - $ref: '#/definitions/ExtensionEndpointConfig'
            properties:
              opt:
                items:
                  enum:
                    - resolvePlayShuffled
                    - resolvePlaybackRepeatMode
                    - resolvePlaybackQueueLocation
                    - resolveResumePlayback
                  type: string
                type: array
            type: object
          updateMediaAffinity:
            allOf:
              - $ref: '#/definitions/ExtensionEndpointConfig'
            properties:
              opt:
                items:
                  enum:
                    - resolveAffinityType
                  type: string
                type: array
            type: object
        required:
          - playMedia
        type: object
      media:
        properties:
          queues:
            properties:
              hdr:
                example:
                  x-content-min-ttl: 1200
                  x-media-catalog-region: en_US
                type: object
              playMedia:
                properties:
                  hdr:
                    example:
                      x-headless-client: true
                    type: object
                  url:
                    default: /queues/playMedia
                    maxLength: 4000
                    minLength: 1
                    type: string
                type: object
              updateActivity:
                properties:
                  hdr:
                    type: object
                  url:
                    default: /queues/updateActivity
                    maxLength: 4000
                    minLength: 1
                    type: string
                type: object
            type: object
        type: object
      url:
        example: /v2
        maxLength: 2000
        minLength: 1
        type: string
      version:
        example: 1.0.0
        pattern: '([0-9]+[.]){2}[0-9]+'
        type: string
    required:
      - version
      - intent
      - media
    type: object
  ExtensionConfigTag:
    maxLength: 1002
    pattern: '["][ -~]{1000}["]'
    type: string
  ExtensionEndpointConfig:
    properties:
      hdr:
        type: object
      url:
        maxLength: 2000
        minLength: 0
        type: string
    type: object
  Intent:
    discriminator: class
    properties:
      class:
        type: string
      identifier:
        type: string
    required:
      - class
      - identifier
    type: object
  IntentResolutionResult:
    discriminator: class
    properties:
      class:
        type: string
      needsValue:
        type: object
        x-flow-exception: Failure
      notRequired:
        type: object
      unsupported:
        type: object
        x-flow-exception: Failure
    required:
      - class
    type: object
  IntentResponse:
    discriminator: class
    properties:
      class:
        type: string
      userActivity:
        $ref: '#/definitions/UserActivity'
    required:
      - class
      - userActivity
    type: object
  Invocation:
    discriminator: method
    properties:
      method:
        type: string
      params:
        type: object
        x-nullable: true
      session:
        $ref: '#/definitions/Session'
    required:
      - method
      - params
    type: object
  InvocationResponse:
    discriminator: method
    properties:
      debug:
        $ref: '#/definitions/ServiceDebugReference'
      method:
        type: string
      metrics:
        $ref: '#/definitions/ExecutionMetrics'
      result:
        type: object
        x-nullable: true
    required:
      - method
      - result
    type: object
  MediaAffinityType:
    enum:
      - unknown
      - like
      - dislike
    type: string
  MediaAffinityTypeResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - MediaAffinityTypeResolutionResult
        type: string
      confirmationRequired:
        properties:
          mediaAffinityTypeToConfirm:
            $ref: '#/definitions/MediaAffinityType'
        required:
          - mediaAffinityTypeToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      success:
        properties:
          resolvedMediaAffinityType:
            $ref: '#/definitions/MediaAffinityType'
        required:
          - resolvedMediaAffinityType
        type: object
    type: object
    x-discriminator-value: MediaAffinityTypeResolutionResult
    x-ms-discriminator-value: MediaAffinityTypeResolutionResult
  MediaDestination:
    discriminator: mediaDestinationType
    properties:
      mediaDestinationType:
        enum:
          - library
          - playlist
        type: string
    required:
      - mediaDestinationType
    type: object
  MediaDestinationLibrary:
    allOf:
      - $ref: '#/definitions/MediaDestination'
    properties:
      mediaDestinationType:
        enum:
          - library
        type: string
    required:
      - mediaDestinationType
    type: object
    x-discriminator-value: library
    x-ms-discriminator-value: library
  MediaDestinationPlaylist:
    allOf:
      - $ref: '#/definitions/MediaDestination'
    properties:
      mediaDestinationType:
        enum:
          - playlist
        type: string
      playlistName:
        maxLength: 1000
        minLength: 1
        type: string
    required:
      - mediaDestinationType
      - playlistName
    type: object
    x-discriminator-value: playlist
    x-ms-discriminator-value: playlist
  MediaItem:
    properties:
      artist:
        maxLength: 1000
        readOnly: true
        type: string
      identifier:
        maxLength: 250
        type: string
      title:
        maxLength: 1000
        readOnly: true
        type: string
      type:
        $ref: '#/definitions/MediaItemType'
    required:
      - type
      - identifier
    type: object
  MediaItemType:
    enum:
      - unknown
      - song
      - album
      - artist
      - genre
      - playlist
      - podcastShow
      - podcastEpisode
      - podcastPlaylist
      - musicStation
      - audioBook
      - movie
      - tvShow
      - tvShowEpisode
      - musicVideo
      - podcastStation
      - radioStation
      - station
      - music
      - algorithmicRadioStation
      - news
    type: string
  MediaReference:
    enum:
      - unknown
      - currentlyPlaying
      - my
    type: string
  MediaSearch:
    properties:
      albumName:
        type: string
      artistName:
        type: string
      genreNames:
        items:
          type: string
        type: array
      mediaIdentifier:
        type: string
      mediaName:
        type: string
      mediaType:
        $ref: '#/definitions/MediaItemType'
      moodNames:
        items:
          type: string
        type: array
      reference:
        $ref: '#/definitions/MediaReference'
      releaseDate:
        $ref: '#/definitions/DateComponentsRange'
      sortOrder:
        $ref: '#/definitions/MediaSortOrder'
    type: object
  MediaSortOrder:
    enum:
      - unknown
      - newest
      - oldest
      - best
      - worst
      - popular
      - unpopular
      - trending
      - recommended
    type: string
  PlayMediaControl:
    properties:
      activity:
        $ref: '#/definitions/PlayMediaControlActivity'
      commands:
        $ref: '#/definitions/PlayMediaControlCommandSet'
      scheme:
        $ref: '#/definitions/PlayMediaControlScheme'
    required:
      - scheme
    type: object
  PlayMediaControlActivity:
    properties:
      playElapsed:
        format: uint32
        minimum: 5
        type: integer
      playElapsedInterval:
        format: uint32
        minimum: 5
        type: integer
      playPaused:
        default: 5
        format: uint32
        maximum: 60
        minimum: 5
        type: integer
    type: object
  PlayMediaControlCommandSet:
    properties:
      bookmarkTrack:
        type: boolean
      dislikeTrack:
        type: boolean
      likeTrack:
        type: boolean
      nextTrack:
        type: boolean
      preferSkipBackward:
        type: boolean
      preferSkipForward:
        type: boolean
      previousTrack:
        type: boolean
      seekToPlaybackPosition:
        type: boolean
      skipBackward:
        type: boolean
      skipForward:
        type: boolean
    type: object
  PlayMediaControlScheme:
    enum:
      - custom
      - onDemand
      - internetRadio
      - liveStreaming
      - audioBook
      - podcast
      - advertisement
    type: string
  PlayMediaIntent:
    allOf:
      - $ref: '#/definitions/Intent'
    properties:
      class:
        enum:
          - PlayMediaIntent
        type: string
      mediaItems:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
      mediaSearch:
        $ref: '#/definitions/MediaSearch'
      playShuffled:
        type: boolean
      playbackQueueLocation:
        $ref: '#/definitions/PlaybackQueueLocation'
      playbackRepeatMode:
        $ref: '#/definitions/PlaybackRepeatMode'
      playbackSpeed:
        format: double
        type: number
      resumePlayback:
        type: boolean
    type: object
    x-discriminator-value: PlayMediaIntent
    x-ms-discriminator-value: PlayMediaIntent
  PlayMediaIntentHandlingHandleInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.handle
        type: string
      result:
        nullable: false
        properties:
          response:
            $ref: '#/definitions/PlayMediaIntentResponse'
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.handle
    x-ms-discriminator-value: PlayMediaIntentHandling.handle
  PlayMediaIntentHandlingInvocation:
    allOf:
      - $ref: '#/definitions/Invocation'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolveMediaItems
          - PlayMediaIntentHandling.resolvePlayShuffled
          - PlayMediaIntentHandling.resolvePlaybackQueueLocation
          - PlayMediaIntentHandling.resolvePlaybackRepeatMode
          - PlayMediaIntentHandling.resolveResumePlayback
          - PlayMediaIntentHandling.handle
        type: string
      params:
        nullable: false
        properties:
          intent:
            $ref: '#/definitions/PlayMediaIntent'
        required:
          - intent
        type: object
    required:
      - params
      - method
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolveResumePlayback
    x-ms-discriminator-value: PlayMediaIntentHandling.resolveResumePlayback
  PlayMediaIntentHandlingInvocationResponse: {}
  PlayMediaIntentHandlingResolveMediaItemsInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolveMediaItems
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            items:
              $ref: '#/definitions/PlayMediaMediaItemResolutionResult'
            type: array
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolveMediaItems
    x-ms-discriminator-value: PlayMediaIntentHandling.resolveMediaItems
  PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolvePlayShuffled
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/BooleanResolutionResult'
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolvePlayShuffled
    x-ms-discriminator-value: PlayMediaIntentHandling.resolvePlayShuffled
  PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolvePlaybackQueueLocation
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/PlaybackQueueLocationResolutionResult'
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolvePlaybackQueueLocation
    x-ms-discriminator-value: PlayMediaIntentHandling.resolvePlaybackQueueLocation
  PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolvePlaybackRepeatMode
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/PlaybackRepeatModeResolutionResult'
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolvePlaybackRepeatMode
    x-ms-discriminator-value: PlayMediaIntentHandling.resolvePlaybackRepeatMode
  PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - PlayMediaIntentHandling.resolveResumePlayback
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/BooleanResolutionResult'
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: PlayMediaIntentHandling.resolveResumePlayback
    x-ms-discriminator-value: PlayMediaIntentHandling.resolveResumePlayback
  PlayMediaIntentResponse:
    allOf:
      - $ref: '#/definitions/IntentResponse'
    properties:
      class:
        enum:
          - PlayMediaIntentResponse
        type: string
      code:
        $ref: '#/definitions/PlayMediaIntentResponseCode'
    required:
      - class
      - code
    type: object
    x-discriminator-value: PlayMediaIntentResponse
    x-ms-discriminator-value: PlayMediaIntentResponse
  PlayMediaIntentResponseCode:
    enum:
      - unspecified
      - success
      - failure
      - failureRequiringAppLaunch
      - failureUnknownMediaType
      - failureNoUnplayedContent
      - failureRestrictedContent
    type: string
  PlayMediaMediaItemResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - PlayMediaMediaItemResolutionResult
        type: string
      confirmationRequired:
        properties:
          mediaItemToConfirm:
            $ref: '#/definitions/MediaItem'
        required:
          - mediaItemToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      disambiguation:
        properties:
          mediaItemsToDisambiguate:
            items:
              $ref: '#/definitions/MediaItem'
            minItems: 2
            type: array
        required:
          - mediaItemsToDisambiguate
        type: object
        x-flow-exception: Requires Disambiguation
      success:
        properties:
          resolvedMediaItem:
            $ref: '#/definitions/MediaItem'
        required:
          - resolvedMediaItem
        type: object
      unsupported:
        properties:
          reason:
            $ref: '#/definitions/PlayMediaMediaItemUnsupportedReason'
        type: object
        x-flow-exception: Unsupported
    type: object
    x-discriminator-value: PlayMediaMediaItemResolutionResult
    x-ms-discriminator-value: PlayMediaMediaItemResolutionResult
  PlayMediaMediaItemUnsupportedReason:
    enum:
      - loginRequired
      - subscriptionRequired
      - unsupportedMediaType
      - explicitContentSettings
      - restrictedContent
      - regionRestriction
    type: string
  PlayMediaRequest:
    properties:
      constraints:
        $ref: '#/definitions/Constraints'
      userActivity:
        $ref: '#/definitions/UserActivity'
      version:
        pattern: '[0-9]+\.[0-9]+\.[0-9]+'
        type: string
    required:
      - version
      - userActivity
      - constraints
    type: object
  PlaybackQueueLocation:
    enum:
      - unknown
      - now
      - next
      - later
    type: string
  PlaybackQueueLocationResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - PlaybackQueueLocationResolutionResult
        type: string
      confirmationRequired:
        properties:
          playbackQueueLocationToConfirm:
            $ref: '#/definitions/PlaybackQueueLocation'
        required:
          - playbackQueueLocationToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      success:
        properties:
          resolvedPlaybackQueueLocation:
            $ref: '#/definitions/PlaybackQueueLocation'
        required:
          - resolvedPlaybackQueueLocation
        type: object
    type: object
    x-discriminator-value: PlaybackQueueLocationResolutionResult
    x-ms-discriminator-value: PlaybackQueueLocationResolutionResult
  PlaybackRepeatMode:
    enum:
      - unknown
      - none
      - all
      - one
    type: string
  PlaybackRepeatModeResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - PlaybackRepeatModeResolutionResult
        type: string
      confirmationRequired:
        properties:
          playbackRepeatModeToConfirm:
            $ref: '#/definitions/PlaybackRepeatMode'
        required:
          - playbackRepeatModeToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      success:
        properties:
          resolvedPlaybackRepeatMode:
            $ref: '#/definitions/PlaybackRepeatMode'
        required:
          - resolvedPlaybackRepeatMode
        type: object
    type: object
  PlayerContext:
    properties:
      activityIdentifier:
        maxLength: 250
        type: string
      contentIdentifier:
        $ref: '#/definitions/ContentIdentifier'
      offsetInMillis:
        example: 10942
        format: int64
        type: integer
      playbackSpeed:
        default: 1
        format: double
        type: number
      queueIdentifier:
        $ref: '#/definitions/QueueIdentifier'
    type: object
  ProtocolException:
    properties:
      code:
        format: int64
        type: integer
      methodIndex:
        format: uint32
        type: integer
      methodName:
        type: string
      reason:
        $ref: '#/definitions/ProtocolExceptionReason'
      retryWithDelay:
        default: -1
        format: float
        type: number
      trace:
        items:
          maxLength: 1000
          type: string
        maxItems: 64
        type: array
    required:
      - reason
    type: object
  ProtocolExceptionInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      exception:
        $ref: '#/definitions/ProtocolException'
      method:
        enum:
          - ProtocolException
        type: string
    required:
      - method
      - exception
    type: object
    x-discriminator-value: ProtocolException
    x-ms-discriminator-value: ProtocolException
  ProtocolExceptionReason:
    enum:
      - unsupported
      - unauthorized
      - unexpected
      - invalid
      - unparseable
      - deprecated
      - internal
      - complex
      - busy
    type: string
  Queue:
    properties:
      content:
        items:
          $ref: '#/definitions/Content'
        maxItems: 1000
        type: array
      contentItemsCount:
        format: uint32
        type: integer
        x-nullable: true
      controls:
        $ref: '#/definitions/QueueControlMapping'
      identifier:
        $ref: '#/definitions/QueueIdentifier'
      insertPointer:
        $ref: '#/definitions/QueueInsertPointer'
      nextContentUrl:
        maxLength: 2000
        minLength: 1
        type: string
        x-nullable: true
      playPointer:
        $ref: '#/definitions/QueuePlayPointer'
      prerollSeconds:
        format: double
        type: number
      previousContentUrl:
        maxLength: 2000
        minLength: 1
        type: string
        x-nullable: true
      skipsRemaining:
        format: uint32
        type: integer
        x-nullable: true
      version:
        maxLength: 25
        pattern: '[0-9]+\.[0-9]+\.[0-9]+'
        type: string
    required:
      - version
      - identifier
      - content
    type: object
  QueueActivityReportEvent:
    enum:
      - local.playing.elapsed
      - local.playing.paused
      - local.playing.continued
      - local.playing.scrub
      - local.playing.fastForward
      - local.playing.fastRewind
      - local.playing.transitioned.naturally
      - local.playing.transitioned.skip_next
      - local.playing.transitioned.skip_previous
      - local.playing.transitioned.queue_replaced
      - local.stopped.naturally
      - local.stopped.skip_past_end
      - local.command.like
      - local.command.dislike
      - local.command.bookmark
    type: string
  QueueControlMapping:
    additionalProperties:
      $ref: '#/definitions/PlayMediaControl'
    properties:
      default:
        $ref: '#/definitions/PlayMediaControl'
    required:
      - default
    type: object
  QueueIdentifier:
    example: u104823q8201
    maxLength: 1024
    minLength: 1
    type: string
  QueueInsertPointer:
    properties:
      afterIdentifier:
        $ref: '#/definitions/ContentIdentifier'
      replace:
        default: false
        type: boolean
  QueuePlayPointer:
    properties:
      contentIdentifier:
        $ref: '#/definitions/ContentIdentifier'
      offsetInMillis:
        example: 10942
        format: int64
        type: integer
    type: object
    x-nullable: true
  ServiceDebugReference:
    format: uri
    maxLength: 2000
    type: string
  Session:
    properties:
      constraints:
        $ref: '#/definitions/Constraints'
      deadline:
        format: date-time
        type: string
      identifier:
        maxLength: 128
        minLength: 1
        type: string
      playerContext:
        $ref: '#/definitions/PlayerContext'
      requested:
        format: date-time
        type: string
      version:
        pattern: '[0-9]+\.[0-9]+\.[0-9]+'
        type: string
    required:
      - version
      - identifier
      - constraints
      - deadline
      - requested
    type: object
  UpdateActivityRequest:
    properties:
      constraints:
        $ref: '#/definitions/Constraints'
      nowPlaying:
        $ref: '#/definitions/PlayerContext'
      previouslyPlaying:
        $ref: '#/definitions/PlayerContext'
      report:
        $ref: '#/definitions/QueueActivityReportEvent'
      timestamp:
        format: date-time
        type: string
      userActivity:
        $ref: '#/definitions/UserActivity'
      version:
        pattern: '[0-9]+\.[0-9]+\.[0-9]+'
        type: string
    required:
      - version
      - timestamp
      - report
      - userActivity
    type: object
  UpdateActivityResponse:
    properties:
      queue:
        $ref: '#/definitions/Queue'
      userActivity:
        $ref: '#/definitions/UserActivity'
    type: object
  UpdateMediaAffinityIntent:
    allOf:
      - $ref: '#/definitions/Intent'
    properties:
      affinityType:
        $ref: '#/definitions/MediaAffinityType'
      class:
        enum:
          - UpdateMediaAffinityIntent
        type: string
      mediaItems:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
      mediaSearch:
        $ref: '#/definitions/MediaSearch'
    required:
      - class
    type: object
    x-discriminator-value: UpdateMediaAffinityIntent
    x-ms-discriminator-value: UpdateMediaAffinityIntent
  UpdateMediaAffinityIntentHandlingHandleInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - UpdateMediaAffinityIntentHandling.handle
        type: string
      result:
        nullable: false
        properties:
          response:
            $ref: '#/definitions/UpdateMediaAffinityIntentResponse'
        required:
          - response
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: UpdateMediaAffinityIntentHandling.handle
    x-ms-discriminator-value: UpdateMediaAffinityIntentHandling.handle
  UpdateMediaAffinityIntentHandlingInvocation:
    allOf:
      - $ref: '#/definitions/Invocation'
    discriminator: method
    properties:
      method:
        enum:
          - UpdateMediaAffinityIntentHandling.resolveMediaItems
          - UpdateMediaAffinityIntentHandling.resolveAffinityType
          - UpdateMediaAffinityIntentHandling.handle
        type: string
      params:
        nullable: false
        properties:
          intent:
            $ref: '#/definitions/UpdateMediaAffinityIntent'
        required:
          - intent
        type: object
    required:
      - method
      - params
    type: object
    x-discriminator-value: UpdateMediaAffinityIntentHandling.resolveMediaItems
    x-ms-discriminator-value: UpdateMediaAffinityIntentHandling.resolveMediaItems
  UpdateMediaAffinityIntentHandlingInvocationResponse: {}
  UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - UpdateMediaAffinityIntentHandling.resolveAffinityType
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            $ref: '#/definitions/MediaAffinityTypeResolutionResult'
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: UpdateMediaAffinityIntentHandling.resolveAffinityType
    x-ms-discriminator-value: UpdateMediaAffinityIntentHandling.resolveAffinityType
  UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse:
    allOf:
      - $ref: '#/definitions/InvocationResponse'
    properties:
      method:
        enum:
          - UpdateMediaAffinityIntentHandling.resolveMediaItems
        type: string
      result:
        nullable: false
        properties:
          resolutionResult:
            items:
              $ref: '#/definitions/UpdateMediaAffinityMediaItemResolutionResult'
            type: array
        required:
          - resolutionResult
        type: object
    required:
      - method
      - result
    type: object
    x-discriminator-value: UpdateMediaAffinityIntentHandling.resolveMediaItems
    x-ms-discriminator-value: UpdateMediaAffinityIntentHandling.resolveMediaItems
  UpdateMediaAffinityIntentResponse:
    allOf:
      - $ref: '#/definitions/IntentResponse'
    properties:
      class:
        enum:
          - UpdateMediaAffinityIntentResponse
        type: string
      code:
        $ref: '#/definitions/UpdateMediaAffinityIntentResponseCode'
    required:
      - class
      - code
    type: object
    x-discriminator-value: UpdateMediaAffinityIntentResponse
    x-ms-discriminator-value: UpdateMediaAffinityIntentResponse
  UpdateMediaAffinityIntentResponseCode:
    enum:
      - unspecified
      - inProgress
      - success
      - failure
      - failureRequiringAppLaunch
    type: string
  UpdateMediaAffinityMediaItemResolutionResult:
    allOf:
      - $ref: '#/definitions/IntentResolutionResult'
    properties:
      class:
        enum:
          - UpdateMediaAffinityMediaItemResolutionResult
        type: string
      confirmationRequired:
        properties:
          mediaItemToConfirm:
            $ref: '#/definitions/MediaItem'
        required:
          - mediaItemToConfirm
        type: object
        x-flow-exception: Requires Confirmation
      disambiguation:
        properties:
          mediaItemsToDisambiguate:
            items:
              $ref: '#/definitions/MediaItem'
            minItems: 2
            type: array
        required:
          - mediaItemsToDisambiguate
        type: object
      success:
        properties:
          resolvedMediaItem:
            $ref: '#/definitions/MediaItem'
        required:
          - resolvedMediaItem
        type: object
      unsupported:
        properties:
          reason:
            $ref: '#/definitions/UpdateMediaAffinityMediaItemUnsupportedReason'
        type: object
        x-flow-exception: Unsupported
    type: object
    x-discriminator-value: UpdateMediaAffinityMediaItemResolutionResult
    x-ms-discriminator-value: UpdateMediaAffinityMediaItemResolutionResult
  UpdateMediaAffinityMediaItemUnsupportedReason:
    enum:
      - loginRequired
      - subscriptionRequired
      - unsupportedMediaType
      - explicitContentSettings
    type: string
  UserActivity:
    properties:
      activityType:
        example: com.mediastreamingservice.playmedia
        maxLength: 250
        type: string
      persistentIdentifier:
        maxLength: 250
        type: string
      title:
        maxLength: 250
        type: string
      userInfo:
        title: UserActivityUserInfo
        type: object
      version:
        maxLength: 25
        pattern: '[0-9]+\.[0-9]+\.[0-9]+'
        type: string
    required:
      - version
      - activityType
    type: object
    x-nullable: true
host: cloudextension-testservice.local
info:
  contact:
    name: Siri for Developers
    url: 'https://developer.apple.com/siri/'
  title: SiriKit Cloud Media
  version: 1.0.2
  x-apisguru-categories:
    - media
  x-origin:
    - format: openapi
      url: sirikit-cloud-media.json
      version: '3.0'
  x-platform: sirikit_media_api
  x-providerName: apple.com
  x-serviceName: sirikit-cloud-media
paths:
  /configuration:
    get:
      operationId: extensionConfiguration
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - format: uint32
          in: header
          minimum: 1
          name: Request-Timeout
          required: true
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: header
          maxLength: 1002
          name: If-None-Match
          pattern: '["][ -~]{1000}["]'
          type: string
        - in: header
          name: Cache-Control
          required: true
          type: string
      produces:
        - application/jose
      responses:
        '200':
          description: ''
          headers:
            Cache-Control:
              example: 'max-age=1800, must-revalidate, private'
              required: true
              type: string
            ETag:
              required: true
            x-applecloudextension-session-id:
              type: string
          schema:
            $ref: '#/definitions/ExtensionConfig'
        '304':
          description: ''
          headers:
            Cache-Control:
              example: 'max-age=1800, must-revalidate, private'
              required: true
              type: string
            x-applecloudextension-session-id:
              type: string
      summary: Configuration Resource
      tags:
        - config
  /intent/addMedia:
    post:
      consumes:
        - application/json
      operationId: addMediaIntentHandling
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - format: uint32
          in: header
          minimum: 1
          name: Request-Timeout
          required: true
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/AddMediaIntentHandlingInvocation'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            x-applecloudextension-session-id:
              type: string
          schema:
            items:
              $ref: '#/definitions/AddMediaIntentHandlingInvocationResponse'
            type: array
      summary: addMedia
      tags:
        - intent
  /intent/playMedia:
    post:
      consumes:
        - application/json
      operationId: playMediaIntentHandling
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - format: uint32
          in: header
          minimum: 1
          name: Request-Timeout
          required: true
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/PlayMediaIntentHandlingInvocation'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            x-applecloudextension-session-id:
              type: string
          schema:
            items:
              $ref: '#/definitions/PlayMediaIntentHandlingInvocationResponse'
            type: array
      summary: playMedia
      tags:
        - intent
  /intent/updateMediaAffinity:
    post:
      consumes:
        - application/json
      operationId: updateMediaAffinityIntentHandling
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - format: uint32
          in: header
          minimum: 1
          name: Request-Timeout
          required: true
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/UpdateMediaAffinityIntentHandlingInvocation'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            x-applecloudextension-session-id:
              type: string
          schema:
            items:
              $ref: >-
                #/definitions/UpdateMediaAffinityIntentHandlingInvocationResponse
            type: array
      summary: updateMediaAffinity
      tags:
        - intent
  /queues/playMedia:
    post:
      consumes:
        - application/json
      operationId: playMediaOnQueue
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PlayMediaRequest'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Queue'
        '204':
          description: ''
        '401':
          description: ''
        '410':
          description: ''
      summary: playMedia
      tags:
        - queues
  /queues/updateActivity:
    post:
      consumes:
        - application/json
      operationId: updateActivityOnQueue
      parameters:
        - in: header
          maxLength: 128
          minLength: 1
          name: x-applecloudextension-session-id
          required: true
          type: string
        - format: uint32
          in: header
          minimum: 1
          name: x-applecloudextension-retry-count
          required: false
          type: number
        - in: header
          maxLength: 250
          name: User-Agent
          pattern: 'AppleCloudExtension/([0-9]+\.[0-9]+\.[0-9]+) *.*'
          required: true
          type: string
        - in: header
          name: Accept-Language
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateActivityRequest'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UpdateActivityResponse'
        '204':
          description: ''
        '401':
          description: ''
        '404':
          description: ''
        '410':
          description: ''
      summary: updateActivity
      tags:
        - queues
schemes:
  - https
swagger: '2.0'
tags:
  - name: config
  - name: intent
  - name: queues
x-components: {}
x-important: >-
  IMPORTANT:  This OpenAPI Specification is only for use in accordance with the
  terms of the Apple Developer Program License Agreement.  You may not use this
  OpenAPI Specification unless you have agreed to the Apple Developer Program
  License Agreement.

