basePath: /
definitions:
  LanguageDetection:
    properties:
      id:
        description: id of the text.
        type: string
      text:
        description: the text itself.
        type: string
    required:
      - text
    type: object
  LanguageDetectionRequest:
    items:
      $ref: '#/definitions/LanguageDetection'
    maxItems: 64
    minItems: 1
    type: array
  LanguageDetectionResponse:
    items:
      $ref: '#/definitions/LanguagePredicted'
    type: array
  LanguagePredicted:
    properties:
      detected_language:
        description: the detected language_code corresponding to the input text.
        type: string
      id:
        description: id of the post.
        type: string
    required:
      - detected_language
    title: LanguagePredicted
    type: object
  Post:
    properties:
      id:
        description: id of the post.
        example: '1'
        type: string
      language:
        description: language_code of the text.
        example: en
        type: string
      text:
        description: the text to be analysed.
        example: I love the service
        type: string
    required:
      - language
      - text
    title: Post
    type: object
  PostPredicted:
    properties:
      id:
        description: id of the post.
        type: string
      predictions:
        description: the list of predictions.
        items:
          $ref: '#/definitions/Prediction'
        type: array
    required:
      - predictions
    title: PostPredicted
    type: object
  PostRequest:
    items:
      $ref: '#/definitions/Post'
    maxItems: 32
    minItems: 1
    title: Posts
    type: array
  Prediction:
    properties:
      prediction:
        description: the predicted label.
        title: Prediction
        type: string
      probability:
        description: the probability of the predicted label.
        title: Probability
        type: number
    required:
      - prediction
      - probability
    title: Prediction
    type: object
  PredictionResults:
    items:
      $ref: '#/definitions/PostPredicted'
    title: Prediction Results
    type: array
  Sentiment:
    properties:
      category:
        type: string
      end:
        format: int32
        type: integer
      negationTerm:
        type: string
      parentCategory:
        type: string
      positive:
        type: boolean
      scale:
        format: double
        type: number
      start:
        format: int32
        type: integer
      text:
        type: string
    type: object
  Topic:
    properties:
      category:
        type: string
      end:
        format: int32
        type: integer
      polarity:
        format: double
        type: number
      start:
        format: int32
        type: integer
      text:
        type: string
      topic:
        type: string
    type: object
  TopicSentiment:
    properties:
      sentence:
        type: string
      sentiment:
        $ref: '#/definitions/Sentiment'
      topic:
        $ref: '#/definitions/Topic'
    type: object
  TopicSentimentOutput:
    properties:
      id:
        type: string
      language:
        type: string
      sentiments:
        items:
          $ref: '#/definitions/Sentiment'
        type: array
      text:
        type: string
      topicSentiments:
        items:
          $ref: '#/definitions/TopicSentiment'
        type: array
      topics:
        items:
          $ref: '#/definitions/Topic'
        type: array
    type: object
  TopicSentimentResponse:
    items:
      $ref: '#/definitions/TopicSentimentOutput'
    type: array
  ValidationError:
    properties:
      loc:
        items:
          type: string
        title: Location
        type: array
      msg:
        title: Message
        type: string
      type:
        title: Error Type
        type: string
    required:
      - loc
      - msg
      - type
    title: ValidationError
    type: object
  ValidationErrors:
    properties:
      detail:
        items:
          $ref: '#/definitions/ValidationError'
        title: Detail
        type: array
    title: ValidationErrors
    type: object
host: api.symanto.net
info:
  contact:
    email: support@symanto.net
    name: Symanto Support
    url: 'https://developers.symanto.net'
  description: >-
    We aim to provide the deepest understanding of people through psychology &
    AI
  termsOfService: 'https://developers.symanto.net/terms-of-service'
  title: Psycholinguistic Text Analytics
  version: '1.0'
  x-apisguru-categories:
    - text
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://www.symanto.com/wp-content/uploads/2020/06/symanto.svg'
  x-origin:
    - format: openapi
      url: 'https://api.symanto.net/docs/v1/openapi.json'
      version: '3.0'
  x-providerName: symanto.net
paths:
  /communication:
    post:
      consumes:
        - application/json
      description: >-
        Identify the purpose and writing style of a written text.


        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`,
        `ru`, `tr`, `zh`]


        Returned labels:

        * action-seeking

        * fact-oriented

        * information-seeking

        * self-revealing
      operationId: communication
      parameters:
        - default: false
          in: query
          name: all
          required: false
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/PredictionResults'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Communication & Tonality
      tags:
        - Text Analysis
  /ekman-emotion:
    post:
      consumes:
        - application/json
      description: |-
        Detect the emotions of the text based on Ekman.

        Supported Langauges: [`en`, `de`, `es`]

        Returned labels:
        * anger
        * disgust
        * fear
        * joy
        * sadness
        * surprise
        * no-emotion
      operationId: ekman-emotion
      parameters:
        - default: false
          in: query
          name: all
          required: false
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/PredictionResults'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Emotion Analysis
      tags:
        - Text Analysis
  /emotion:
    post:
      consumes:
        - application/json
      description: |-
        Detect the emotions of the text.

        Supported Langauges: [`en`, `de`, `es`]

        Returned labels:
        * anger
        * joy
        * love
        * sadness
        * surprise
        * uncategorized
      operationId: emotion
      parameters:
        - default: false
          in: query
          name: all
          required: false
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/PredictionResults'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Emotion Analysis
      tags:
        - Text Analysis
  /language-detection:
    post:
      consumes:
        - application/json
      description: >-
        Identifies what language a text is written in. Only languages that our
        API supports can be analyzed.


        Returned labels:

        * language_code of the detected language
      operationId: language-detection
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LanguageDetectionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/LanguageDetectionResponse'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Language Detection
      tags:
        - Text Analysis
  /personality:
    post:
      consumes:
        - application/json
      description: >-
        Predict the personality trait of author of any written text.


        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`,
        `ru`, `tr`, `zh`]


        Returned labels:


        * emotional

        * rational
      operationId: personality
      parameters:
        - default: false
          in: query
          name: all
          required: false
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/PredictionResults'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Personality Traits
      tags:
        - Text Analysis
  /sentiment:
    post:
      consumes:
        - application/json
      description: |-
        Evaluate the overall tonality of the text.

        Supported Languages: [`en`, `de`, `es`]

        Returned labels:
        * positive
        * negative
      operationId: sentiment
      parameters:
        - default: false
          in: query
          name: all
          required: false
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/PredictionResults'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/ValidationErrors'
      summary: Sentiment Analysis
      tags:
        - Text Analysis
  /topic-sentiment:
    post:
      consumes:
        - application/json
      operationId: topic-sentiment
      parameters:
        - description: Provide analysis domain for better extraction (optional)
          enum:
            - Ecom
            - Employee
            - Hotel
            - Restaurant
          in: query
          name: domain
          required: false
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TopicSentimentResponse'
      summary: Extracts topics and sentiments and relates them.
      tags:
        - Text Analysis
schemes:
  - https
security:
  - apiKeyHeader: []
securityDefinitions:
  apiKeyHeader:
    in: header
    name: x-api-key
    type: apiKey
swagger: '2.0'
x-components: {}

