basePath: /api/
host: www.clubhouseapi.com
info:
  description: Clubhouse API
  title: Clubhouse API
  version: '1'
  x-apisguru-categories:
    - social
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/zhuowei/ClubhouseAPI/main/doc/openapi.yaml
      version: '3.0'
  x-providerName: clubhouseapi.com
paths:
  /call_phone_number_auth:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: success
      summary: Call phone number auth.
  /check_for_update:
    get:
      parameters:
        - in: query
          name: is_testflight
          type: integer
          x-example: 1
      produces:
        - application/json
      responses:
        '200':
          description: successful response
      summary: >-
        Clubhouse uses this to check for updates when app is not installed from
        App Store (eg TestFlight)
  /check_waitlist_status:
    post:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: got waitlist status
        '401':
          description: authorization not provided
      summary: checks waitlist status.
  /complete_phone_number_auth:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: success
      summary: Call phone number auth.
  /create_channel:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '400':
          description: waitlisted
      summary: creates a channel
  /follow:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '401':
          description: waitlisted
      summary: follows a user
  /get_actionable_notifications:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of actionable notifications.
      summary: get actionable notifications (the bell again)
  /get_all_topics:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: a list of topics
      summary: gets all topics.
  /get_channels:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: list of channels
      summary: get all channels
  /get_club:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns club object
      summary: gets club by id
  /get_clubs_for_topic:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns list of clubs with pagination
      summary: looks up clubs by topic.
  /get_create_channel_targets:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '400':
          description: waitlisted
      summary: is fetched when you tap Create Room
  /get_events:
    get:
      parameters:
        - in: query
          name: is_filtered
          type: boolean
          x-example: true
        - in: query
          name: page_size
          type: integer
          x-example: 25
        - in: query
          name: page
          type: integer
          x-example: 1
      produces:
        - application/json
      responses:
        '200':
          description: a list of events
      summary: the Upcoming for You page
  /get_following:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns list of users and clubs
      summary: >-
        get a list of the users and clubs that this user is following. Returned
        users have bios truncated to ~80 characters.
  /get_notifications:
    get:
      parameters:
        - in: query
          name: page_size
          type: integer
          x-example: 20
        - in: query
          name: page
          type: integer
          x-example: 1
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of notifications.
      summary: get notifications (the bell icon)
  /get_online_friends:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: a list of online clubs and users.
      summary: gets online friends on the app homepage.
  /get_profile:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns user profile info
      summary: looks up user profile by ID.
  /get_release_notes:
    post:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: the response
      summary: gets release notes.
  /get_settings:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: notification settings
      summary: get notification settings
  /get_suggested_club_invites:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns list of suggested invites.
      summary: find users to invite to clubs based on phone number
  /get_suggested_follows_all:
    get:
      parameters:
        - in: query
          name: in_onboarding
          type: boolean
          x-example: true
        - in: query
          name: page_size
          type: integer
          x-example: 50
        - in: query
          name: page
          type: integer
          x-example: 1
      produces:
        - application/json
      responses:
        '200':
          description: a list of users to follow. bios truncated to 80 chars.
      summary: gets suggested follows during signup
  /get_suggested_follows_friends_only:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns list of users and clubs
      summary: find people to follow by uploading contacts during signup
  /get_suggested_follows_similar:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of users. Bios truncated to 80 chars.
      summary: find similar users. (The Sparkles button on Clubhouse's profile page)
  /get_suggested_invites:
    post:
      consumes:
        - application/json
      description: >-
        (also see https://zerforschung.org/posts/clubhouse-telefonnummern-en/
        for @zerforschung's analysis of the privacy implications of this API)
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns list of users that can be invited.
      summary: find users to invite based on phone number.
  /get_suggested_speakers:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of actionable notifications.
      summary: gets suggested users when you start a private room
  /get_topic:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns topic info
      summary: looks up topic by ID.
  /get_users_for_topic:
    get:
      parameters:
        - in: query
          name: topic_id
          type: integer
          x-example: 140
        - in: query
          name: page_size
          type: integer
          x-example: 25
        - in: query
          name: page
          type: integer
          x-example: 1
      produces:
        - application/json
      responses:
        '200':
          description: returns list of users with pagination. Bios truncated to 80 chars.
      summary: looks up users by topic.
  /get_welcome_channel:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: empty???
      summary: called during signup
  /invite_from_waitlist:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '400':
          description: 'your own account is waitlisted, or some other error occurred'
      summary: wave to another user on the waitlist to give them access
  /invite_to_app:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '400':
          description: your own account doesn't have an invite either
      summary: 'invite a user to the app, using one of your invites'
  /join_channel:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: stuff needed to actually join a channel
        '400':
          description: cannot join
      summary: join a channel.
  /leave_channel:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: left the channel
      summary: leave a channel.
  /me:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: the response
        '403':
          description: error response - happens if account is banned (is_blocked)
      summary: gets user
  /record_action_trails:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: always empty
      summary: analytics
  /refresh_token:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: returns new access and refresh token
        '401':
          description: invalid refresh token
      summary: gets an access_token from a refresh_token.
  /resend_phone_number_auth:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: success
      summary: Resend phone number auth.
  /search_clubs:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of clubs.
      summary: search clubs.
  /search_users:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of users.
      summary: search for users
  /start_phone_number_auth:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: success
      summary: Starts phone number auth.
  /update_notifications:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '400':
          description: waitlisted
      summary: updates notification during signup.
  /update_username:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: username successfully set
        '400':
          description: invalid/taken username (eg empty string)
      summary: edits username.
schemes:
  - https
swagger: '2.0'

