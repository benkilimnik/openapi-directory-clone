basePath: /v1
externalDocs:
  description: External documentation
  url: 'https://docs.portfoliooptimizer.io/'
host: api.portfoliooptimizer.io
info:
  contact:
    email: contact@portfoliooptimizer.io
    name: Support
    url: 'https://portfoliooptimizer.io/'
  description: >
    Portfolio Optimizer is a [Web API](https://en.wikipedia.org/wiki/Web_API) to
    optimize the composition of investment portfolios (collection of financial
    assets such as stocks, bonds, ETFs, crypto-currencies) using modern
    portfolio theory-like algorithms (mean-variance, etc.).


    # API General Information


    Portfolio Optimizer is based on
    [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) for
    easy integration, uses [JSON](https://en.wikipedia.org/wiki/JSON) for the
    exchange of data and uses the two most common [HTTP
    verbs](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods)
    (`GET`, `POST`) to represent the actions.


    Portfolio Optimizer is also as secured as a Web API could be: 

    * [256-bit HTTPS Encryption](https://en.wikipedia.org/wiki/HTTPS)

    * No usage of cookies

    * No usage of personal data  


    ## API Headers 

    The following HTTP header(s) are required when calling Portfolio Optimizer
    endpoints:

    * `Content-type: application/json`  
      This header specifies that the data provided in input to the endpoint is in JSON format

    The following HTTP header(s) are optional when calling Portfolio Optimizer
    endpoints:

    * `X-API-Key: <private API key>`  
      This header enables [authenticated users](#auth) to provide their private [API key](#overview--api-key) in order to [benefit from higher API limits](#overview--api-limits)

    ## API Key

    Portfolio Optimizer is free to use, but not free to run.


    In order to obtain an API key and benefit from [higher API
    limits](#overview--api-limits), a *small* participation to Portfolio
    Optimizer running costs is required.


    This participation takes the form of coffee(s), with one coffee = one month
    of usage.


    <p><a href="https://www.buymeacoffee.com/portfolioopt"><img alt='Buy a
    Coffee at buymeacoffee.com'
    src="https://img.buymeacoffee.com/button-api/?text=Buymeacoffee.com&emoji=&slug=portfolioopt&button_colour=000000&font_colour=ffffff&font_family=Cookie&outline_colour=ffffff&coffee_colour=FFDD00"></a></p>



    > **Notes:** 

    > * Please make sure not to expose your API key publicly!


    ## API Limits 


    Portfolio Optimizer comes with *fairly reasonable* API limits.


    For anonymous users:  

    * The API requests are restricted to a subset of all the available endpoints
    and/or endpoints features  

    * The API requests are limited to 1 request per second for all the anonymous
    users combined, with concurrent requests rejected 

    * The API requests are limited to 1 second of execution time

    * The API requests are limited to 20 assets, 100 portfolios, 500 series data
    points and 5 factors


    For authenticated users with an [API key](#overview--api-key):  

    * The API requests have access to all the available endpoints and endpoints
    features

    * The API requests are limited to 10000 requests per 24 hour per API key,
    with concurrent requests queued

    * The API requests are limited to 2.5 seconds of execution time

    * The API requests are limited to 100 assets, 500 portfolios, 2500 series
    data points and 25 factors


    > **Notes:** 

    > * It is possible to further relax the API limits, or to disable the API
    limits alltogether; please [contact the
    support](https://portfoliooptimizer.io/contact/) for more details.

    > * Information on the API rate limits are provided in response messages
    HTTP headers `x-ratelimit-*`:  

    >   * `x-ratelimit-limit-second`, the limit on the number of API requests
    per second

    >   * `x-ratelimit-remaining-second`, the number of remaining API requests
    in the current second    

    >   * `x-ratelimit-limit-minute`, the limit on the number of API requests
    per minute

    >   * ...


    ## API Regions

    Portfolio Optimizer servers are located in Western Europe.


    > **Notes:** 

    > * It is possible to deploy Portfolio Optimizer in other geographical
    regions, for example to improve the API latency; please [contact the
    support](https://portfoliooptimizer.io/contact/) for more details. 


    ## API Response Codes       


    Standard [HTTP response
    codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) are used by
    Portfolio Optimizer to provide details on the status of API requests.


    | HTTP Code | Description | Notes |

    | --------- | ----------- | ----- |

    | 200 | Request successfully processed | - |

    | 400 | Request failed to be processed because of incorrect content | The
    response message body contains information on the incorrect content |

    | 401 | Request failed to be processed because of invalid API key | - |

    | 404 | Request failed to be processed because of non existing endpoint |
    The requested endpoint might exist, but needs to be accessed with another
    HTTP method (e.g., `POST` instead of `GET`) |

    | 429 | Request failed to be processed because of API limits violated | The
    response message HTTP headers `x-ratelimit-*` contain information on the
    [API limits](#overview--api-limits) |

    | 500 | Request failed to be processed because of an internal error |
    Something went wrong on Portfolio Optimizer side, do not hesitate to [report
    the issue](#overview--support) |

    | 502 | Request failed to be processed because of a temporary connectivity
    error | Something went wrong on Portfolio Optimizer side, please check the
    [API status](#overview--api-status) and do not hesitate to [report the
    issue](#overview--support) |


    ## API Status  


    Portfolio Optimizer is monitored 24/7 by
    [UptimeRobot](https://stats.uptimerobot.com/wgW71SL1AW).


    # Support


    For any issue or question about Portfolio Optimizer, please do not hesitate
    to [contact the support](https://portfoliooptimizer.io/contact/).
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'https://portfoliooptimizer.io/terms-of-service'
  title: Portfolio Optimizer
  version: 1.0.9
  x-apisguru-categories:
    - financial
  x-logo:
    url: 'https://portfoliooptimizer.io/assets/images/88x88.png'
  x-origin:
    - format: openapi
      url: 'https://docs.portfoliooptimizer.io/openapi/portfoliooptimizer.yaml'
      version: '3.0'
  x-providerName: portfoliooptimizer.io
paths:
  /assets/correlation/matrix:
    post:
      consumes:
        - application/json
      description: >
        Compute the Pearson correlation matrix of assets from either:  

        * The assets returns

        * The assets covariance matrix


        References

        * [Wikipedia, Correlation and
        Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)
      parameters:
        - in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assetsCorrelationMatrix
            type: object
      summary: Correlation Matrix
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/nearest:
    post:
      consumes:
        - application/json
      description: >
        Compute the _closest_ correlation matrix to an approximate assets
        correlation matrix, optionally keeping a selected number of correlations
        fixed, _closest_ being defined in terms of [the Frobenius
        norm](https://en.wikipedia.org/wiki/Matrix_norm#Frobenius_norm).


        References

        * [Nicholas J. Higham, Computing the Nearest Correlation Matrix—A
        Problem from Finance, IMA J. Numer. Anal. 22, 329–343,
        2002.](http://www.maths.manchester.ac.uk/~higham/narep/narep369.pdf)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                minimum: 2
                type: integer
              assetsApproximateCorrelationMatrix:
                description: >-
                  assetsApproximateCorrelationMatrix[i][i] is the approximate
                  correlation between the asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsFixedCorrelations:
                description: >-
                  assetsFixedCorrelations[k] is the couple of indices (i,j) of
                  the assets i and j for which to keep the approximate
                  correlation assetsApproximateCorrelationMatrix[i][j] fixed
                items:
                  items:
                    type: integer
                  maxItems: 2
                  minItems: 2
                  type: array
                type: array
            required:
              - assets
              - assetsApproximateCorrelationMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assetsCorrelationMatrix
            type: object
      summary: Nearest Correlation Matrix
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/shrinkage:
    post:
      consumes:
        - application/json
      description: >
        Compute a correlation matrix as a weighted average of an assets
        correlation matrix and a target correlation matrix, the target
        correlation matrix being either:  

        * An equicorrelation matrix made of 1

        * An equicorrelation matrix made of 0

        * An equicorrelation matrix made of -1/(n-1), with n the number of
        assets

        * A provided correlation matrix


        References

        * [Steiner, Andreas, Manipulating Valid Correlation
        Matrices](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1878165)
      parameters:
        - in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assetsCorrelationMatrix
            type: object
      summary: Correlation Matrix Shrinkage
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/correlation/matrix/validation:
    post:
      consumes:
        - application/json
      description: >
        Validate whether a matrix is a correlation matrix.


        References

        * [Wikipedia, Correlation and
        Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                minimum: 2
                type: integer
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assets
              - assetsCorrelationMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              message:
                description: Indicates whether the matrix is a valid correlation matrix
                enum:
                  - valid correlation matrix
                  - invalid correlation matrix - non symmetric matrix
                  - invalid correlation matrix - non positive diagonal elements
                  - >-
                    invalid correlation matrix - non positive semi-definite
                    matrix
                type: string
            required:
              - message
            type: object
      summary: Correlation Matrix Validation
      tags:
        - Assets Correlation Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix:
    post:
      consumes:
        - application/json
      description: >
        Compute the covariance matrix of assets from either:  

        * The assets correlation matrix and their volatilities (i.e., standard
        deviations)

        * The assets correlation matrix and their variances

        * The assets returns


        References

        * [Wikipedia, Covariance
        Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)
      parameters:
        - in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assetsCovarianceMatrix
            type: object
      summary: Covariance Matrix
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix/sample:
    post:
      consumes:
        - application/json
      description: >
        Compute the sample covariance matrix of assets returns.


        > This endpoint is similar to the endpoint
        [`/assets/covariance/matrix`](#post-/assets/covariance/matrix), but uses
        [Bessel's
        correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to
        compute the covariance matrix.


        References

        * [Wikipedia, Sample Mean and
        Covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the return of the asset at the time
                        t, in percentage; all the assetReturns arrays must have
                        the same length
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetReturns
                  type: object
                minItems: 2
                type: array
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the sample covariance between
                  the asset i returns and the asset j returns
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assetsCovarianceMatrix
            type: object
      summary: Sample Covariance Matrix
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/covariance/matrix/validation:
    post:
      consumes:
        - application/json
      description: >
        Validate whether a matrix is a covariance matrix.


        References

        * [Wikipedia, Covariance
        Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
            required:
              - assets
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              message:
                description: Indicates whether the matrix is a valid covariance matrix
                enum:
                  - valid covariance matrix
                  - invalid covariance matrix - non symmetric matrix
                  - invalid covariance matrix - non positive diagonal elements
                  - >-
                    invalid covariance matrix - non positive semi-definite
                    matrix
                type: string
            required:
              - message
            type: object
      summary: Covariance Matrix Validation
      tags:
        - Assets Covariance Matrix
      x-codegen-request-body-name: body
  /assets/returns:
    post:
      consumes:
        - application/json
      description: >
        Compute the arithmetic return(s) of one or several asset(s) for one or
        several time period(s).


        References

        * [Wikipedia, Rate of
        Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetPrices:
                      description: 'assetPrices[t] is the price of the asset at the time t'
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetPrices
                  type: object
                minItems: 1
                type: array
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the arithmetic return of the asset
                        from the time t-1 to the time t, in percentage
                      items:
                        type: number
                      type: array
                  required:
                    - assetReturns
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Arithmetic Returns
      tags:
        - Assets Returns
      x-codegen-request-body-name: body
  /assets/returns/average:
    post:
      consumes:
        - application/json
      description: >
        Compute the arithmetic average of the return(s) of one or several
        asset(s).


        References

        * [Wikipedia, Arithmetic Average Rate of
        Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the return of the asset at the time
                        t, in percentage
                      items:
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetReturns
                  type: object
                minItems: 1
                type: array
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetAverageReturn:
                      description: The arithmetic average return of the asset
                      type: number
                  required:
                    - assetAverageReturn
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Arithmetic Average Return
      tags:
        - Assets Returns
      x-codegen-request-body-name: body
  /assets/variance:
    post:
      consumes:
        - application/json
      description: |
        Compute the variance of one or several asset(s) from either:  
        * The asset(s) returns
        * The assets covariance matrix
        * The asset(s) volatility

        References
        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        
      parameters:
        - in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetVariance:
                      description: The variance of the asset
                      minimum: 0
                      type: number
                  required:
                    - assetVariance
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Variance
      tags:
        - Assets Variance
      x-codegen-request-body-name: body
  /assets/variance/sample:
    post:
      consumes:
        - application/json
      description: >
        Compute the sample variance of one or several asset(s) from the asset(s)
        returns.
                
        > This endpoint is similar to the endpoint
        [`/assets/variance`](#post-/assets/variance), but uses [Bessel's
        correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to
        compute the variance.


        References

        * [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the return of the asset at the time
                        t, in percentage
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetReturns
                  type: object
                minItems: 1
                type: array
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetVariance:
                      description: The sample variance of the asset
                      minimum: 0
                      type: number
                  required:
                    - assetVariance
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Sample variance
      tags:
        - Assets Variance
      x-codegen-request-body-name: body
  /assets/volatility:
    post:
      consumes:
        - application/json
      description: >
        Compute the volatility (i.e., standard deviation) of one or several
        asset(s) from either:  

        * The asset(s) returns

        * The assets covariance matrix

        * The asset(s) variance


        References

        * [Wikipedia, Standard
        Deviation](https://en.wikipedia.org/wiki/Standard_deviation)
      parameters:
        - in: body
          name: body
          required: true
          schema: {}
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetVolatility:
                      description: The volatility of the asset
                      minimum: 0
                      type: number
                  required:
                    - assetVolatility
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Volatility
      tags:
        - Assets Volatility
      x-codegen-request-body-name: body
  /assets/volatility/sample:
    post:
      consumes:
        - application/json
      description: >
        Compute the sample volatility (i.e., sample standard deviation) of one
        or several asset(s) from the asset(s) returns.


        > This endpoint is similar to the endpoint
        [`/assets/volatility`](#post-/assets/volatility), but uses [Bessel's
        correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to
        compute the volatility.


        References

        * [Wikipedia, Standard
        Deviation](https://en.wikipedia.org/wiki/Standard_deviation)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the return of the asset at the time
                        t, in percentage
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetReturns
                  type: object
                minItems: 2
                type: array
            required:
              - assets
              - assetsReturns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetVolatility:
                      description: The sample volatility of the asset
                      minimum: 0
                      type: number
                  required:
                    - assetVolatility
                  type: object
                type: array
            required:
              - assets
            type: object
      summary: Sample volatility
      tags:
        - Assets Volatility
      x-codegen-request-body-name: body
  /factors/residualization:
    post:
      consumes:
        - application/json
      description: >
        Compute the residuals of a factor against a set of factors, using a
        returns-based linear regression analysis.


        References

        * [Factor Research, Factor Exposure Analysis: Exploring
        Residualization](https://insights.factorresearch.com/research-factor-exposure-analysis-exploring-residualization/)

        * [Catalina B. Garcia, Román Salmeron, Claudia Garcia & Jose Garcia
        (2019): Residualization: justification, properties and application,
        Journal of Applied
        Statistics](https://doi.org/10.1080/02664763.2019.1701638)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              factors:
                items:
                  properties:
                    factorReturns:
                      description: >-
                        factorReturns[t] is the return of the factor at the time
                        t; all the factorReturns arrays must have the same
                        length
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - factorReturns
                  type: object
                minItems: 2
                type: array
              residualizedFactor:
                description: The index of the factor to residualize
                minimum: 1
                type: integer
            required:
              - factors
              - residualizedFactor
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              residualizedFactorReturns:
                description: >-
                  residualizedFactorReturns[t] is the return of the residualized
                  factor at the time t
                items:
                  type: number
                type: array
            required:
              - residualizedFactorReturns
            type: object
      summary: Residualization
      tags:
        - Factors
      x-codegen-request-body-name: body
  /portfolio/analysis/alpha:
    post:
      consumes:
        - application/json
      description: >
        Compute the Jensen’s alpha of one or several portfolio(s) in the Capital
        Asset Pricing Model (CAPM).


        References

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution  
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioAlpha:
                      description: >-
                        The portfolio Jensen's alpha, which correponds to the
                        portfolio excess return adjusted for the systematic risk
                        in the Capital Asset Pricing Model (CAPM)
                      type: number
                  required:
                    - portfolioAlpha
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Alpha
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/beta:
    post:
      consumes:
        - application/json
      description: >
        Compute the beta of one or several portfolio(s) in the Capital Asset
        Pricing Model (CAPM)..


        References

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution  
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioBeta:
                      description: >-
                        The portfolio beta, which correponds to the portfolio
                        systematic risk in the Capital Asset Pricing Model
                        (CAPM)
                      type: number
                  required:
                    - portfolioBeta
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Beta
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/contributions/return:
    post:
      consumes:
        - application/json
      description: >
        Perform a return contribution analysis of one or several portfolio(s),
        optionally using groups of assets.


        References

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 1
                type: integer
              assetsGroups:
                items:
                  description: >-
                    assetsGroups[k] is the indexes of the assets belonging to
                    the assets group k
                  items:
                    minimum: 1
                    type: integer
                  minItems: 2
                  type: array
                  uniqueItems: true
                minItems: 1
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - assets
              - assetsReturns
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    assetsGroupsReturnContributions:
                      description: >-
                        assetsGroupsReturnContributions[k] is the return
                        contribution of the group of assets k to the return of
                        the portfolio
                      items:
                        type: number
                      minItems: 1
                      type: array
                    assetsReturnContributions:
                      description: >-
                        assetsReturnContributions[i] is the return contribution
                        of the asset i to the return of the portfolio
                      items:
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsReturnContributions
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Return Contributions
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/contributions/risk:
    post:
      consumes:
        - application/json
      description: >
        Perform a risk contribution analysis of one or several portfolio(s),
        optionally using groups of assets.


        References

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 1
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsGroups:
                items:
                  description: >-
                    assetsGroups[k] is the indexes of the assets belonging to
                    the assets group k
                  items:
                    minimum: 1
                    type: integer
                  minItems: 2
                  type: array
                  uniqueItems: true
                minItems: 1
                type: array
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - assets
              - assetsCovarianceMatrix
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    assetsGroupsRiskContributions:
                      description: >-
                        assetsGroupsRiskContributions[k] is the risk
                        contribution of the group of assets k to the risk of the
                        portfolio
                      items:
                        type: number
                      minItems: 1
                      type: array
                    assetsRiskContributions:
                      description: >-
                        assetsRiskContributions[i] is the risk contribution of
                        the asset i to the risk of the portfolio
                      items:
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsRiskContributions
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Risk Contributions
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/diversification-ratio:
    post:
      consumes:
        - application/json
      description: >
        Compute the diversification ratio of one or several portfolio(s).


        References

        * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification,
        The Journal of Portfolio Management Fall 2008, 35 (1)
        40-51](https://doi.org/10.3905/JPM.2008.35.1.40)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - assets
              - assetsCovarianceMatrix
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioDiversificationRatio:
                      description: The diversification ratio of the portfolio
                      minimum: 0
                      type: number
                  required:
                    - portfolioDiversificationRatio
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Diversification Ratio
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/drawdowns:
    post:
      consumes:
        - application/json
      description: >
        Compute the drawdown function - also called the underwater equity curve
        -, as well as the worst 10 drawdowns of one or several portfolio(s).


        References

        * [Wikipedia,
        Drawdown](https://en.wikipedia.org/wiki/Drawdown_(economics))        
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioValues:
                      description: >-
                        portfolioValues[t] is the value of the portfolio at the
                        time t
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      type: array
                  required:
                    - portfolioValues
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioDrawdowns:
                      description: >-
                        portfolioDrawdowns[t] is the value of the drawdown
                        function at the time t
                      items:
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                    portfolioWorstDrawdowns:
                      items:
                        properties:
                          drawdownBottom:
                            minimum: 0
                            type: integer
                          drawdownDepth:
                            minimum: 0
                            type: number
                          drawdownEnd:
                            minimum: 0
                            type: integer
                          drawdownStart:
                            minimum: 0
                            type: integer
                        required:
                          - drawdownDepth
                          - drawdownStart
                          - drawdownBottom
                          - drawdownEnd
                        type: object
                      minItems: 1
                      type: array
                  required:
                    - portfolioDrawdowns
                    - portfolioWorstDrawdowns
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Drawdowns
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/factor/exposures:
    post:
      consumes:
        - application/json
      description: >
        Compute the exposures of one or several portfolio(s) to a set of
        factors, using a returns-based linear regression analysis.


        References

        * [Measuring Factor Exposures: Uses and Abuses, Ronen Israel and
        Adrienne Ross, The Journal of Alternative Investments Summer 2017, 20
        (1) 10-25](https://jai.pm-research.com/content/20/1/10.short) 
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              factors:
                items:
                  properties:
                    factorReturns:
                      description: >-
                        factorReturns[t] is the return of the factor at the time
                        t; all the factorReturns arrays must have the same
                        length, equal to the common length of the
                        portfolioReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - factorReturns
                  type: object
                minItems: 1
                type: array
              portfolios:
                items:
                  properties:
                    portfolioReturns:
                      description: >-
                        portfolioReturns[t] is the return of the portfolio at
                        the time t, all the portfolioReturns arrays must have
                        the same length, equal to the common length of the
                        factorReturns arrays
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - portfolioReturns
                  type: object
                minItems: 1
                type: array
            required:
              - factorReturns
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioAlpha:
                      description: >-
                        The portfolio alpha, which correponds to the portion of
                        the portfolio returns that cannot be explained by the
                        portfolio factor exposures
                      type: number
                    portfolioBetas:
                      description: >-
                        The portfolio betas, which correspond to the portfolio
                        factor exposures
                      items:
                        type: number
                      minItems: 1
                      type: array
                    portfolioRSquared:
                      description: >-
                        The portfolio R^2, which indicates how much of the
                        variability in the portfolio returns can be explained by
                        the portfolio factor exposures; generally, the higher
                        the R^2 the better the portfolio factor exposures
                        explain the portfolio returns
                      type: number
                  required:
                    - portfolioAlpha
                    - portfolioBetas
                    - portfolioRSquared
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Factor Exposures
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/mean-variance/efficient-frontier:
    post:
      consumes:
        - application/json
      description: >
        Compute the discretized mean-variance efficient frontier associated to a
        list of assets, optionally subject to:

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraint


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
              portfolios:
                default: 25
                description: >-
                  The number of portfolios to compute on the mean-variance
                  efficient frontier
                minimum: 2
                type: integer
            required:
              - assets
              - assetsReturns
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                    portfolioReturn:
                      description: The arithmetic return of the portfolio
                      type: number
                    portfolioVolatility:
                      description: The volatility of the portfolio
                      minimum: 0
                      type: number
                  required:
                    - assetsWeights
                    - portfolioReturn
                    - portfolioVolatility
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Mean-Variance Efficient Frontier
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/mean-variance/minimum-variance-frontier:
    post:
      consumes:
        - application/json
      description: >
        Compute the discretized mean-variance minimum variance frontier
        associated to a list of assets, optionally subject to:

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraint


        > This endpoint is similar to the endpoint
        [`/portfolio/analysis/mean-variance/efficient-frontier`](#post-/portfolio/analysis/mean-variance/efficient-frontier),
        because the mean-variance efficient frontier is the "top" portion of the
        mean-variance minimum variance frontier.


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
              portfolios:
                default: 25
                description: >-
                  The number of portfolios to compute on the mean-variance
                  minimum variance frontier
                minimum: 2
                type: integer
            required:
              - assets
              - assetsReturns
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                    portfolioReturn:
                      description: The arithmetic return of the portfolio
                      type: number
                    portfolioVolatility:
                      description: The volatility of the portfolio
                      minimum: 0
                      type: number
                  required:
                    - assetsWeights
                    - portfolioReturn
                    - portfolioVolatility
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Mean-Variance Minimum Variance Frontier
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/return:
    post:
      consumes:
        - application/json
      description: >
        Compute the arithmetic return of one or several portfolio(s) from
        either:  

        * Portfolio assets arithmetic returns

        * Portfolio values


        References

        * [Wikipedia, Rate of
        Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)

        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of
        Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioReturn:
                      description: The arithmetic return of the portfolio
                      type: number
                  required:
                    - portfolioReturn
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Arithmetic Return
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/returns/average:
    post:
      consumes:
        - application/json
      description: >
        Compute the arithmetic average of the arithmetic return(s) of one or
        several portfolio(s).


        References

        * [Wikipedia, Arithmetic Average Rate of
        Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioValues:
                      description: >-
                        portfolioValues[t] is the value of the portfolio at the
                        time t
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      type: array
                  required:
                    - portfolioValues
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioAverageReturn:
                      description: The arithmetic average return of the portfolio
                      type: number
                  required:
                    - portfolioAverageReturn
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Arithmetic Average Return
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/sharpe-ratio:
    post:
      consumes:
        - application/json
      description: >
        Compute the Sharpe ratio of one or several portfolio(s) from either:

        * Portfolio assets arithmetic returns and assets covariance matrix

        * Portfolio values


        References

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution

        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of
        Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioSharpeRatio:
                      description: The Sharpe ratio of the portfolio
                      type: number
                  required:
                    - portfolioSharpeRatio
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Sharpe Ratio
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/tracking-error:
    post:
      consumes:
        - application/json
      description: >
        Compute the tracking error between a benchmark and one or several
        portfolio(s).


        References

        * [Wikipedia, Tracking
        error](https://en.wikipedia.org/wiki/Tracking_error) 

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution 
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              benchmarkReturns:
                description: >-
                  benchmarkReturns[t] is the return of the benchmark at the time
                  t; the benchmarkReturns array must have the same length as all
                  the portfolioReturns arrays
                items:
                  type: number
                minItems: 2
                type: array
              portfolios:
                items:
                  properties:
                    portfolioReturns:
                      description: >-
                        portfolioReturns[t] is the return of the portfolio at
                        the time t, the portfolioReturns must have the same
                        length as the benchmarkReturns array
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - portfolioReturns
                  type: object
                minItems: 1
                type: array
            required:
              - benchmarkReturns
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioTrackingError:
                      description: The tracking error of the portfolio
                      minimum: 0
                      type: number
                  required:
                    - portfolioTrackingError
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Tracking Error
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/analysis/volatility:
    post:
      consumes:
        - application/json
      description: >
        Compute the volatility (i.e., standard deviation) of one or several
        portfolio(s) from either:  

        * Portfolio assets covariance matrix

        * Portfolio values


        References

        * [Wikipedia, Standard
        Deviation](https://en.wikipedia.org/wiki/Standard_deviation#Finance)

        * Carl R. Bacon, Practical Portfolio Performance Measurement and
        Attribution

        * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of
        Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioVolatility:
                      description: The volatility of the portfolio
                      minimum: 0
                      type: number
                  required:
                    - portfolioVolatility
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Volatility
      tags:
        - Portfolio Analysis
      x-codegen-request-body-name: body
  /portfolio/construction/investable:
    post:
      consumes:
        - application/json
      description: >
        Compute an investable portfolio as close as possible, in terms of assets
        weights, to a desired portfolio, taking into account:

        * The desired assets weights

        * The desired assets groups weights

        * The desired maximum assets groups weights

        * The prices of the assets

        * The portfolio value

        * The requirement to purchase some assets by round lots or by odd lots

        * The possibility to purchase some assets by a fractional quantity of
        shares

        * The requirement to purchase a minimum number of shares, or a minimum
        monetary value, for some assets


        References

        * [Steiner, Andreas, Accuracy and Rounding in Portfolio
        Construction](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2261131)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsGroups:
                items:
                  description: >-
                    assetsGroups[k] is the indexes of the assets belonging to
                    the assets group k in the portfolio; requires either
                    assetsGroupsWeights or maximumAssetsGroupsWeights to be
                    present
                  items:
                    minimum: 1
                    type: integer
                  minItems: 2
                  type: array
                  uniqueItems: true
                minItems: 1
                type: array
              assetsGroupsWeights:
                description: >-
                  assetsGroupsWeights[i] is the desired weight of the assets
                  group k in the portfolio, in percentage (can be null to
                  indicate no specific desire); requires assetsGroups to be
                  present
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 1
                type: array
              assetsMinimumNotionalValues:
                description: >-
                  assetsMinimumNotionalValues[i] is the minimum monetary value
                  that the position in the asset i is required to represent when
                  the asset i is included in the portfolio
                items:
                  default: 0
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              assetsMinimumPositions:
                description: >-
                  assetsMinimumPositions[i] is the minimum number of shares of
                  the asset i that is required to purchase when the asset i is
                  included in the portfolio (usual values are the same as for
                  assetsSizeLots)
                items:
                  default: 1
                  exclusiveMinimum: true
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              assetsPrices:
                description: 'assetsPrices[i] is the price of the asset i'
                items:
                  exclusiveMinimum: true
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              assetsSizeLots:
                description: >-
                  assetsSizeLots[i] is the number of shares by which it is
                  required to purchase the asset i (usual values are 1 if the
                  asset needs to be purchased share by share, 100 if the asset
                  needs to be purchased by an integer multiple of 100 shares,
                  and 1/1000000 - e.g. for Robinhood broker - if the asset can
                  be purchased by fractional shares)
                items:
                  default: 1
                  exclusiveMinimum: true
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              assetsWeights:
                description: >-
                  assetsWeights[i] is the desired weight of the asset i in the
                  portfolio, in percentage (can be null to indicate no specific
                  desire)
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              maximumAssetsGroupsWeights:
                description: >-
                  maximumAssetsGroupsWeights[k] is the maximum desired weight of
                  the assets group k in the portfolio, in percentage (can be
                  null to indicate no specific desire); requires assetsGroups to
                  be present
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 1
                type: array
              portfolioValue:
                description: The monetary value of the portfolio
                exclusiveMinimum: true
                minimum: 0
                type: number
            required:
              - assets
              - assetsPrices
              - portfolioValue
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsPositions:
                description: >-
                  assetsPositions[i] is the number of shares of the asset i in
                  the portfolio
                items:
                  minimum: 0
                  type: number
                minItems: 2
                type: array
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsPositions
              - assetsWeights
            type: object
      summary: Investable Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/construction/mimicking:
    post:
      consumes:
        - application/json
      description: >
        Construct a portfolio as close as possible, in terms of returns, to a
        benchmark, optionally subject to:

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References 

        * Konstantinos Benidis, Yiyong Feng, Daniel P. Palomar, Optimization
        Methods for Financial Index Tracking: From Theory to Practice, now
        publishers Inc (7 juin 2018)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetReturns:
                      description: >-
                        assetReturns[t] is the return of the asset at the time
                        t, in percentage; all the assetReturns arrays must have
                        the same length
                      items:
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetReturns
                  type: object
                minItems: 2
                type: array
              benchmarkReturns:
                description: >-
                  benchmarkReturns[t] is the return of the benchmark at the time
                  t; the benchmarkReturns array must have the same length as all
                  the assetReturns arrays
                items:
                  type: number
                minItems: 2
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - benchmarkReturns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Mimicking Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/construction/random:
    post:
      consumes:
        - application/json
      description: >
        Construct one or several random portfolio(s), optionally subject
        to:       

        * Minimum and maximum weights constraints

        * Minimum and maximum portfolio exposure constraints


        > Because of the nature of the endpoint, subsequent calls with the same
        input data will result in different output data.


        References

        * [William Thornton Shaw, Monte Carlo Portfolio Optimization for General
        Investor Risk-Return Objectives and Arbitrary Return Distributions: A
        Solution for Long-Only
        Portfolios](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1680224)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 1
                type: integer
              constraints:
                properties:
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
              portfolios:
                default: 25
                description: The number of portfolios to construct
                minimum: 1
                type: integer
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - portfolios
            type: object
      summary: Random Portfolio
      tags:
        - Portfolio Construction
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-risk-contributions:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the equal risk contributions portfolio,
        optionally subject to:  

        * Minimum and maximum weights constraints  


        References
         * [Richard, Jean-Charles and Roncalli, Thierry, Constrained Risk Budgeting Portfolios: Theory, Algorithms, Applications & Puzzles](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3331184)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              constraints:
                properties:
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                type: object
            required:
              - assets
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Equal Risk Contributions Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-sharpe-ratio-contributions:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the equal Sharpe Ratio contributions
        portfolio.


        References
         * [Andreas Steiner, Sharpe Ratio Contribution and Attribution Analysis](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1839166")
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 2
                type: array
              riskFreeRate:
                description: The risk free rate
                type: number
            required:
              - assets
              - assetsReturns
              - riskFreeRate
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Equal Sharpe Ratio Contributions Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/equal-weighted:
    post:
      consumes:
        - application/json
      description: |
        Compute the assets weights of the equal-weighted portfolio.

        References
         * [Victor DeMiguel and al., Optimal Versus Naive Diversification: How Inefficient is the 1/N Portfolio Strategy?](https://academic.oup.com/rfs/article-abstract/22/5/1915/1592901?redirectedFrom=fulltext)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
            required:
              - assets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Equal Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/inverse-variance-weighted:
    post:
      consumes:
        - application/json
      description: |
        Compute the assets weights of the inverse variance-weighted portfolio.

        References
         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsVariances:
                description: 'assetsVariances[i] is the variance of the asset i'
                items:
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assets
              - assetsVariances
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Inverse Variance Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/inverse-volatility-weighted:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the inverse volatility-weighted portfolio,
        also known as the naive-risk parity portfolio.


        References
         * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsVolatilities:
                description: 'assetsVolatilities[i] is the volatility of the asset i'
                items:
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assets
              - assetsVolatilities
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Inverse Volatility Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/market-capitalization-weighted:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the market capitalization-weighted
        portfolio.


        References
         * [Wikipedia, Capitalization-weighted Index](https://en.wikipedia.org/wiki/Capitalization-weighted_index)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsMarketCapitalizations:
                description: >-
                  assetsMarketCapitalizations[i] is the market capitalization of
                  the asset i
                items:
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assets
              - assetsMarketCapitalizations
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Market Capitalization Weighted Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-decorrelation:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the maximum decorrelation portfolio,
        optionally subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References
         * [F. Goltz, S. Sivasubramanian, Scientific Beta Maximum Decorrelation Indices](http://www.scientificbeta.com/download/file/scientific-beta-max-decorrelation-indices)
      externalDocs:
        url: 'https://docs.portfoliooptimizer.io/#maximum-decorrelation-portfolio'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - assetsCorrelationMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Maximum Decorrelation Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-return:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the maximum return portfolio, optionally
        subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - assetsReturns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Maximum Return Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/maximum-sharpe-ratio:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the maximum Sharpe ratio portfolio,
        optionally subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
              riskFreeRate:
                description: The risk free rate
                type: number
            required:
              - assets
              - assetsReturns
              - assetsCovarianceMatrix
              - riskFreeRate
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Maximum Sharpe Ratio Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/mean-variance-efficient:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of a mean-variance efficient portfolio,
        optionally subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        > A mean-variance efficient portfolio is a portfolio belonging to [the
        mean-variance efficient
        frontier](#post-/portfolio/analysis/mean-variance/efficient-frontier).


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  portfolioReturn:
                    description: >-
                      The portfolio return; exclusive with portfolioVolatility
                      and riskTolerance
                    type: number
                  portfolioVolatility:
                    description: >-
                      The portfolio volatility; exclusive with portfolioReturn
                      and riskTolerance
                    minimum: 0
                    type: number
                  riskTolerance:
                    description: >-
                      The portfolio risk tolerance; exclusive with
                      portfolioReturn and portfolioVolatility
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - assetsReturns
              - assetsCovarianceMatrix
              - constraints
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Mean-Variance Efficient Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/minimum-correlation:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the (heuristic) minimum correlation
        portfolio, which is a portfolio built using the Minimum Correlation
        Algorithm discovered by [David
        Varadi](https://cssanalytics.wordpress.com/).


        References
         * [CSSA, Minimum Correlation Algorithm Paper Release](https://cssanalytics.wordpress.com/2012/09/21/minimum-correlation-algorithm-paper-release/)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                minimum: 2
                type: integer
              assetsCorrelationMatrix:
                description: >-
                  assetsCorrelationMatrix[i][j] is the correlation between the
                  asset i and the asset j; required if assetsReturns is not
                  provided
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsVolatilities:
                description: >-
                  assetsVariances[i] is the volatility of the asset i; required
                  if assetsCorrelationMatrix is provided and assetsVariances is
                  not provided
                items:
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assets
              - assetsCorrelationMatrix
              - assetsVolatilities
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Minimum Correlation Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/minimum-variance:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the minimum variance portfolio, optionally
        subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References
         * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              assetsReturns:
                description: 'assetsReturns[i] is the arithmetic return of asset i'
                items:
                  type: number
                minItems: 1
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Minimum Variance Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/optimization/most-diversified:
    post:
      consumes:
        - application/json
      description: >
        Compute the assets weights of the most diversified portfolio, optionally
        subject to:  

        * Minimum and maximum weights constraints

        * Maximum group weights constraints

        * Minimum and maximum portfolio exposure constraints


        References
         * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                description: The number of assets
                minimum: 2
                type: integer
              assetsCovarianceMatrix:
                description: >-
                  assetsCovarianceMatrix[i][j] is the covariance between the
                  asset i and the asset j
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              constraints:
                properties:
                  assetsGroups:
                    items:
                      description: >-
                        assetsGroups[k] is the indexes of the assets belonging
                        to the assets group k in the portfolio; exclusive with
                        assetsGroupsMatrix
                      items:
                        minimum: 1
                        type: integer
                      minItems: 2
                      type: array
                      uniqueItems: true
                    minItems: 1
                    type: array
                  assetsGroupsMatrix:
                    description: >-
                      assetsGroupsMatrix[k][i] is the weight of the asset i in
                      the group of assets k; exclusive with assetsGroups
                    items:
                      items:
                        type: number
                      minItems: 2
                      type: array
                    minItems: 1
                    type: array
                  maximumAssetsGroupsWeights:
                    description: >-
                      maximumAssetsGroupsWeights[k] is the maximum weight of the
                      assets group k in the portfolio, in percentage between 0
                      and 1 if assetsGroups is provided
                    items:
                      type: number
                    type: array
                  maximumAssetsWeights:
                    description: >-
                      maximumAssetsWeights[i] is the maximum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  maximumPortfolioExposure:
                    default: 1
                    description: >-
                      The maximum portfolio exposure; must be higher than or
                      equal to minimumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                  minimumAssetsWeights:
                    description: >-
                      minimumAssetsWeights[i] is the minimum weight of the asset
                      i in the portfolio, in percentage
                    items:
                      maximum: 1
                      minimum: 0
                      type: number
                    type: array
                  minimumPortfolioExposure:
                    default: 1
                    description: >-
                      The minimum portfolio exposure; must be lower than or
                      equal to maximumPortfolioExposure
                    maximum: 1
                    minimum: 0
                    type: number
                type: object
            required:
              - assets
              - assetsCovarianceMatrix
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              assetsWeights:
                description: >-
                  assetsWeights[i] is the weight of the asset i in the
                  portfolio, in percentage
                items:
                  maximum: 1
                  minimum: 0
                  type: number
                minItems: 2
                type: array
            required:
              - assetsWeights
            type: object
      summary: Most Diversified Portfolio
      tags:
        - Portfolio Optimization
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/drift-weight:
    post:
      consumes:
        - application/json
      description: >
        Simulate the evolution of one or several portfolio(s) over one or
        several time period(s), the portfolio(s) being never rebalanced (a.k.a.
        buy and hold).


        References

        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016).
        INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetPrices:
                      description: 'assetPrices[t] is the price of the asset at the time t'
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetPrices
                  type: object
                minItems: 1
                type: array
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - assets
              - assetsPrices
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioValues:
                      description: >-
                        portfolioValues[t] is the value of the portfolio at the
                        time t
                      items:
                        minimum: 0
                        type: number
                      type: array
                  required:
                    - portfolioValues
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Drift-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/fixed-weight:
    post:
      consumes:
        - application/json
      description: >
        Simulate the evolution of one or several portfolio(s) over one or
        several time period(s), the portfolio(s) being rebalanced toward fixed
        weights at the beginning of each time period.


        References

        * [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016).
        INSEAD Working Paper No.
        2016/15/FIN](https://ssrn.com/abstract=2746471)        
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetPrices:
                      description: 'assetPrices[t] is the price of the asset at the time t'
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetPrices
                  type: object
                minItems: 1
                type: array
              portfolios:
                items:
                  properties:
                    assetsWeights:
                      description: >-
                        assetsWeights[i] is the weight of the asset i in the
                        portfolio, in percentage
                      items:
                        maximum: 1
                        minimum: 0
                        type: number
                      minItems: 1
                      type: array
                  required:
                    - assetsWeights
                  type: object
                minItems: 1
                type: array
            required:
              - assets
              - assetsPrices
              - portfolios
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioValues:
                      description: >-
                        portfolioValues[t] is the value of the portfolio at the
                        time t
                      items:
                        minimum: 0
                        type: number
                      type: array
                  required:
                    - portfolioValues
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Fixed-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
  /portfolio/simulation/rebalancing/random-weight:
    post:
      consumes:
        - application/json
      description: >
        Simulate the evolution of one or several portfolio(s) over one or
        several time period(s), the portfolio(s) being rebalanced toward random
        weights at the beginning of each time period.


        References

        * [R Stein, Not fooled by randomness: Using random portfolios to analyse
        investment funds, Investment Analysts Journal, 43:79, 1-15, DOI:
        10.1080/10293523.2014.11082564](https://www.tandfonline.com/doi/abs/10.1080/10293523.2014.11082564)
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              assets:
                items:
                  properties:
                    assetPrices:
                      description: 'assetPrices[t] is the price of the asset at the time t'
                      items:
                        exclusiveMinimum: true
                        minimum: 0
                        type: number
                      minItems: 2
                      type: array
                  required:
                    - assetPrices
                  type: object
                minItems: 1
                type: array
              portfolios:
                default: 25
                description: The number of portfolios to simulate
                minimum: 1
                type: integer
            required:
              - assets
              - assetsPrices
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              portfolios:
                items:
                  properties:
                    portfolioValues:
                      description: >-
                        portfolioValues[t] is the value of the portfolio at the
                        time t
                      items:
                        minimum: 0
                        type: number
                      type: array
                  required:
                    - portfolioValues
                  type: object
                type: array
            required:
              - portfolios
            type: object
      summary: Random-weight Portfolio Rebalancing
      tags:
        - Portfolio Simulation
      x-codegen-request-body-name: body
schemes:
  - https
security:
  - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    description: >
      An [API key](#overview--api-key) is required to benefit from [higher API
      limits](#overview--api-limits).
    in: header
    name: X-API-Key
    type: apiKey
swagger: '2.0'
tags:
  - name: Assets Correlation Matrix
  - name: Assets Covariance Matrix
  - name: Assets Returns
  - name: Assets Variance
  - name: Assets Volatility
  - name: Factors
  - name: Portfolio Analysis
  - name: Portfolio Construction
  - name: Portfolio Generation
  - name: Portfolio Optimization
x-components: {}

