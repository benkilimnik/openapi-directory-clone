basePath: /NamSorAPIv2
definitions:
  APIBillingPeriodUsageOut:
    description: The current billing period.
    properties:
      apiKey:
        description: User API Key.
        type: string
      billingStatus:
        description: Current period billing status ex OPEN.
        type: string
      hardLimit:
        description: >-
          Current period hard limit (reaching the limit sends an email
          notification and blocks the API Key).
        format: int64
        type: integer
      periodEnded:
        description: Datetime when the the plan's current period endend.
        format: int64
        type: integer
      periodStarted:
        description: Datetime when the the plan's current period started.
        format: int64
        type: integer
      softLimit:
        description: >-
          Current period soft limit (reaching the limit sends an email
          notification).
        format: int64
        type: integer
      stripeCurrentPeriodEnd:
        description: >-
          Datetime when the the plan's current period endend (in Stripe).
          Internal and Stripe periodicity should ~coincide.
        format: int64
        type: integer
      stripeCurrentPeriodStart:
        description: >-
          Datetime when the the plan's current period started (in Stripe).
          Internal and Stripe periodicity should ~coincide.
        format: int64
        type: integer
      subscriptionStarted:
        description: Datetime when the user subscribed to the plan.
        format: int64
        type: integer
      usage:
        description: >-
          Current period usage in units (NB some API endpoints use more than one
          unit).
        format: int64
        type: integer
    type: object
    xml:
      name: APIBillingPeriodUsageOut
  APIClassifierOut:
    description: The list of classifiers and versions.
    properties:
      classifierName:
        description: The classifier name
        type: string
      learning:
        description: True if the classifier is learning
        type: boolean
      probabilityCalibrated:
        description: >-
          True if the classifier has finished the initial learning and
          calibrated probabilities (meanwhile, during initial learning,
          probabilities will be equal to -1)
        type: boolean
      serving:
        description: >-
          True if the classifier is serving requests (has reached minimal
          learning, is not shutting down)
        type: boolean
      shuttingDown:
        description: True if the classifier is shutting down
        type: boolean
    type: object
    xml:
      name: APIClassifierOut
  APIClassifierTaxonomyOut:
    properties:
      classifierName:
        description: >-
          Name of the classifier as per apiStatus (corresponds also to the name
          of the service in apiServices)
        type: string
      taxonomyClasses:
        description: The taxonomy classes this classifier classifies to
        items:
          description: The taxonomy classes this classifier classifies to
          type: string
        type: array
    type: object
    xml:
      name: APIClassifierTaxonomyOut
  APIClassifiersStatusOut:
    properties:
      classifiers:
        description: The list of classifiers and versions.
        items:
          $ref: '#/definitions/APIClassifierOut'
        type: array
      softwareVersion:
        $ref: '#/definitions/SoftwareVersionOut'
    type: object
    xml:
      name: APIClassifiersStatusOut
  APICounterV2Out:
    description: Detailed usage as reported by the deduplicating API counter.
    properties:
      apiKey:
        $ref: '#/definitions/APIKeyOut'
      apiService:
        description: The apiService corresponds to the classifier name.
        type: string
      createdDateTime:
        description: The create datetime of the counter.
        format: int64
        type: integer
      lastFlushedDateTime:
        description: The flush datetime of the counter.
        format: int64
        type: integer
      lastUsedDateTime:
        description: The last usage datetime of the counter.
        format: int64
        type: integer
      serviceFeaturesUsage:
        additionalProperties:
          description: 'Usage of special features, such as Chinese, Japanese.'
          format: int64
          type: integer
        description: 'Usage of special features, such as Chinese, Japanese.'
        type: object
      totalUsage:
        description: The usage of the counter.
        format: int64
        type: integer
    type: object
    xml:
      name: APICallStatOut
  APIKeyOut:
    description: The API Key.
    properties:
      admin:
        description: The API Key has admin role.
        type: boolean
      anonymized:
        description: >-
          The API Key is anonymized (using SHA-252 digest for logging). Set
          learnable=false and anonymized=true for highest privacy (ie. to forget
          data as it's processed).
        type: boolean
      apiKey:
        description: The user API Key.
        type: string
        xml:
          name: api_key
      corporate:
        description: >-
          The API Key has role corporate (ex SWIFT payments instead of Stripe
          payments).
        type: boolean
      disabled:
        description: The API Key is temporarily or permanently disabled.
        type: boolean
      learnable:
        description: >-
          The API Key is learnable (without assuming truthfulness) for machine
          learning. Set learnable=false and anonymized=true for highest privacy
          (ie. to forget data as it's processed).
        type: boolean
      partner:
        description: The API Key has partner role.
        type: boolean
      striped:
        description: The API Key is associated to a valid Stripe account.
        type: boolean
      userId:
        description: The user identifier.
        type: string
      vetted:
        description: The API Key is vetted (assumed truthful) for machine learning.
        type: boolean
    type: object
    xml:
      name: APIKeyOut
  APIPeriodUsageOut:
    properties:
      billingPeriod:
        $ref: '#/definitions/APIBillingPeriodUsageOut'
      overageCurrency:
        description: Currency of the overage amount.
        type: string
      overageExclTax:
        description: Overage amount including any tax.
        format: double
        type: number
      overageInclTax:
        description: Overage amount including tax (if applicable).
        format: double
        type: number
      overageQuantity:
        description: 'Quantity above monthly quota of the current subscritpion, in units.'
        format: int64
        type: integer
      subscription:
        $ref: '#/definitions/APIPlanSubscriptionOut'
    type: object
    xml:
      name: APICurrentUsageOut
  APIPlanSubscriptionOut:
    description: The API Plan governing the subscription.
    properties:
      apiKey:
        description: User API Key.
        type: string
      currency:
        description: Current plan Currency for prices.
        type: string
      currencyFactor:
        description: 'For USD, GBP, EUR - the factor is 1.'
        format: double
        type: number
      planBaseFeesKey:
        description: Current plan key (as in Stripe product).
        type: string
      planEnded:
        description: Datetime when the user ended the plan.
        format: int64
        type: integer
      planName:
        description: Current plan name.
        type: string
      planQuota:
        description: >-
          Current plan quota in quantity of units (NB: some API use several
          units per name).
        format: int64
        type: integer
      planStarted:
        description: Datetime when the user subscribed to the current plan.
        format: int64
        type: integer
      planStatus:
        description: Plan status.
        type: string
      price:
        description: >-
          Current plan price for overages expressed in Currency (extra price per
          unit above the free quota).
        format: double
        type: number
      priceOverage:
        description: >-
          Current plan price for overages expressed in Currency (extra price per
          unit above the free quota).
        format: double
        type: number
      priceOverageUSD:
        description: >-
          Current plan price for overages expressed in USD (extra price per unit
          above the free quota).
        format: double
        type: number
      priceUSD:
        description: Current plan monthly price expressed in USD (includes a free quota).
        format: double
        type: number
      priorPlanStarted:
        description: Datetime when the user subscribed to the prior plan.
        format: int64
        type: integer
      stripeCustomerId:
        description: Stripe customer identifier.
        type: string
      stripeStatus:
        description: Stripe status ex active.
        type: string
      stripeSubscription:
        description: Stripe subscription identifier.
        type: string
      taxRate:
        description: Applicable tax rate for the plan.
        format: double
        type: number
      userId:
        description: Internal user identifier.
        type: string
    type: object
    xml:
      name: APIPlanSubscriptionOut
  APIServiceOut:
    description: List of API Services
    properties:
      costInUnits:
        description: >-
          Indicates how many units per call this service costs (ex. the number
          of units per name)
        format: int32
        type: integer
      serviceGroup:
        description: >-
          Groups together classifiers providing a similar service (ex. gender
          groups personalname_gender and personalfullname_gender)
        type: string
      serviceName:
        description: >-
          A service name corresponds to classifier name in apiStatus (ex.
          personalname_gender or personalfullname_gender)
        type: string
    type: object
    xml:
      name: APIServiceOut
  APIServicesOut:
    properties:
      apiServices:
        description: List of API Services
        items:
          $ref: '#/definitions/APIServiceOut'
        type: array
    type: object
    xml:
      name: APIServicesOut
  APIUsageAggregatedOut:
    properties:
      colHeaders:
        description: 'apiServices as column headers '
        items:
          description: 'apiServices as column headers '
          type: string
        type: array
      data:
        description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
        items:
          description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
          items:
            description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
            format: int32
            type: integer
          type: array
        type: array
      historyTruncated:
        description: If the history was truncaded due to data limit
        type: boolean
      periodEnd:
        description: End datetime of the reporting period
        format: int64
        type: integer
      periodStart:
        description: Start datetime of the reporting period
        format: int64
        type: integer
      rowHeaders:
        description: 'dates as row headers '
        items:
          description: 'dates as row headers '
          type: string
        type: array
      timeUnit:
        description: 'Time unit is DAY, WEEK or MONTH depending on prior usage'
        type: string
      totalUsage:
        description: Total usage in the current period
        format: int64
        type: integer
    type: object
    xml:
      name: APIUsageAggregatedOut
  APIUsageHistoryOut:
    properties:
      detailedUsage:
        description: Detailed usage as reported by the deduplicating API counter.
        items:
          $ref: '#/definitions/APICounterV2Out'
        type: array
    type: object
    xml:
      name: APIUsageHistoryOut
  BatchCorridorIn:
    properties:
      corridorFromTo:
        items:
          $ref: '#/definitions/CorridorIn'
        type: array
    type: object
    xml:
      name: BatchCorridorIn
  BatchCorridorOut:
    properties:
      corridorFromTo:
        description: Classified corridors
        items:
          $ref: '#/definitions/CorridorOut'
        type: array
    type: object
    xml:
      name: BatchCorridorOut
  BatchFirstLastNameDiasporaedOut:
    description: >-
      Represents the output of inferring the LIKELY ethnicity from a personal
      name, given an country of residence.
    properties:
      personalNames:
        description: Classified diaspora names
        items:
          $ref: '#/definitions/FirstLastNameDiasporaedOut'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameDiasporaedOut
  BatchFirstLastNameGenderIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/FirstLastNameGenderIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameGenderIn
  BatchFirstLastNameGenderedOut:
    description: >-
      Represents the output of inferring the LIKELY gender from a list of
      personal names.
    properties:
      personalNames:
        description: Classified genderized names
        items:
          $ref: '#/definitions/FirstLastNameGenderedOut'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameGenderedOut
  BatchFirstLastNameGeoIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/FirstLastNameGeoIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameGeoIn
  BatchFirstLastNameGeoZippedIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/FirstLastNameGeoZippedIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameGeoZippedIn
  BatchFirstLastNameIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/FirstLastNameIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameIn
  BatchFirstLastNameOriginedOut:
    description: >-
      Represents the output of inferring the LIKELY origin from a list of
      personal names.
    properties:
      personalNames:
        description: Classified origined names
        items:
          $ref: '#/definitions/FirstLastNameOriginedOut'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameOriginedOut
  BatchFirstLastNamePhoneCodedOut:
    description: >-
      Represents the output of inferring the LIKELY country and phone code of
      personal names+phones.
    properties:
      personalNamesWithPhoneNumbers:
        description: Classified phone-coded names
        items:
          $ref: '#/definitions/FirstLastNamePhoneCodedOut'
        type: array
    type: object
    xml:
      name: BatchFirstLastNamePhoneCodedOut
  BatchFirstLastNamePhoneNumberGeoIn:
    properties:
      personalNamesWithPhoneNumbers:
        items:
          $ref: '#/definitions/FirstLastNamePhoneNumberGeoIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNamePhoneNumberGeoIn
  BatchFirstLastNamePhoneNumberIn:
    properties:
      personalNamesWithPhoneNumbers:
        items:
          $ref: '#/definitions/FirstLastNamePhoneNumberIn'
        type: array
    type: object
    xml:
      name: BatchFirstLastNamePhoneNumberIn
  BatchFirstLastNameUSRaceEthnicityOut:
    description: >-
      Represents the output of inferring the LIKELY US 'race/ethnicity' from a
      personal name, given US country of residence and (optionally) a ZIP5 code.
    properties:
      personalNames:
        description: Classified US 'race'/ethnicized names
        items:
          $ref: '#/definitions/FirstLastNameUSRaceEthnicityOut'
        type: array
    type: object
    xml:
      name: BatchFirstLastNameUSRaceEthnicityOut
  BatchMatchPersonalFirstLastNameIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/MatchPersonalFirstLastNameIn'
        type: array
    type: object
    xml:
      name: BatchMatchPersonalFirstLastNameIn
  BatchNameGeoIn:
    properties:
      properNouns:
        items:
          $ref: '#/definitions/NameGeoIn'
        type: array
    type: object
    xml:
      name: BatchNameGeoIn
  BatchNameIn:
    properties:
      properNouns:
        items:
          $ref: '#/definitions/NameIn'
        type: array
    type: object
    xml:
      name: BatchNameIn
  BatchNameMatchCandidatesOut:
    properties:
      namesAndMatchCandidates:
        description: Classified matched names
        items:
          $ref: '#/definitions/NameMatchCandidatesOut'
        type: array
    type: object
    xml:
      name: BatchNameMatchCandidatesOut
  BatchNameMatchedOut:
    properties:
      matchedNames:
        description: Classified matched names
        items:
          $ref: '#/definitions/NameMatchedOut'
        type: array
    type: object
    xml:
      name: BatchNameMatchedOut
  BatchPersonalNameGenderedOut:
    properties:
      personalNames:
        description: Classified genderized names
        items:
          $ref: '#/definitions/PersonalNameGenderedOut'
        type: array
    type: object
    xml:
      name: BatchPersonalNameGenderedOut
  BatchPersonalNameGeoIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/PersonalNameGeoIn'
        type: array
    type: object
    xml:
      name: BatchPersonalNameGeoIn
  BatchPersonalNameGeoOut:
    properties:
      personalNames:
        description: Classified geo names
        items:
          $ref: '#/definitions/PersonalNameGeoOut'
        type: array
    type: object
    xml:
      name: BatchPersonalNameGeoOut
  BatchPersonalNameIn:
    properties:
      personalNames:
        items:
          $ref: '#/definitions/PersonalNameIn'
        type: array
    type: object
    xml:
      name: BatchPersonalNameIn
  BatchPersonalNameParsedOut:
    properties:
      personalNames:
        description: Classified parsed names
        items:
          $ref: '#/definitions/PersonalNameParsedOut'
        type: array
    type: object
    xml:
      name: BatchPersonalNameParsedOut
  BatchProperNounCategorizedOut:
    description: >-
      Represents the output of inferring the common type (anthroponym, toponym,
      brand, etc.) from a list of proper names.
    properties:
      properNouns:
        description: Classified typed proper names
        items:
          $ref: '#/definitions/ProperNounCategorizedOut'
        type: array
    type: object
    xml:
      name: BatchProperNounCategorizedOut
  CorridorIn:
    description: >-
      Represent any transnational interaction between names (ex. remittance,
      communication, cross-border investment, airline travel
    properties:
      firstLastNameGeoFrom:
        $ref: '#/definitions/FirstLastNameGeoIn'
      firstLastNameGeoTo:
        $ref: '#/definitions/FirstLastNameGeoIn'
      id:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: CorridorIn
  CorridorOut:
    description: >-
      Represent multiple classifications for corridor sender and receiver
      (gender, country, origin, diaspora)
    properties:
      FirstLastNameDiasporaedOut:
        $ref: '#/definitions/FirstLastNameDiasporaedOut'
      FirstLastNameGenderedOut:
        $ref: '#/definitions/FirstLastNameGenderedOut'
      FirstLastNameOriginedOut:
        $ref: '#/definitions/FirstLastNameOriginedOut'
      id:
        type: string
        xml:
          attribute: true
      script:
        type: string
    type: object
    xml:
      name: CorridorOut
  FeedbackLoopOut:
    properties:
      feedbackCredits:
        description: >-
          Number of units recredited as per feedback loop successful
          classification
        format: int64
        type: integer
    type: object
    xml:
      name: FeedbackLoopOut
  FirstLastNameDiasporaedOut:
    description: >-
      Represents the output of inferring the LIKELY ethnicity from a personal
      name, given an country of residence.
    properties:
      countryIso2:
        description: 'From input data, the countryIso2 of geographic context (US,CA etc.)'
        type: string
        xml:
          attribute: true
      ethnicitiesTop:
        description: List most likely ethnicities (top 10)
        items:
          description: List most likely ethnicities (top 10)
          type: string
        type: array
      ethnicity:
        description: The most likely ethnicity
        example: Chinese
        type: string
        xml:
          attribute: true
      ethnicityAlt:
        description: The second best alternative ethnicity
        example: Japanese
        type: string
        xml:
          attribute: true
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      lifted:
        description: >-
          Indicates if the output ethnicity is based on machine learning only,
          or further lifted as a known fact by a country-specific rule. Let us
          know if you believe ethnicity is incorrect on a specific case where
          lifted is true.
        type: boolean
        xml:
          attribute: true
      score:
        description: >-
          Compatibility to NamSor_v1 Diaspora score value. Higher score is
          better, but score is not normalized. Use calibratedProbability if
          available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: FirstLastNameDiasporaedOut
  FirstLastNameGenderIn:
    properties:
      firstName:
        type: string
        xml:
          attribute: true
      gender:
        description: The known gender of the name
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: FirstLastName
  FirstLastNameGenderedOut:
    description: Represents the output of inferring the LIKELY gender from a personal name.
    properties:
      firstName:
        description: The first name (also known as given name)
        type: string
      genderScale:
        description: 'Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value'
        format: double
        type: number
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      likelyGender:
        description: Most likely gender
        enum:
          - male
          - female
          - unknown
        type: string
      probabilityCalibrated:
        description: >-
          The calibrated probability for inferred gender to have been guessed
          correctly.
        format: double
        type: number
      score:
        description: >-
          Compatibility to NamSor_v1 Gender score value. Higher score is better,
          but score is not normalized. Use calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: FirstLastNameGenderedOut
  FirstLastNameGeoIn:
    properties:
      countryIso2:
        type: string
        xml:
          attribute: true
      firstName:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: FirstLastNameGeoIn
  FirstLastNameGeoZippedIn:
    properties:
      countryIso2:
        type: string
        xml:
          attribute: true
      firstName:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
      zipCode:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: FirstLastNameGeoZippedIn
  FirstLastNameIn:
    properties:
      firstName:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: FirstLastName
  FirstLastNameOriginedOut:
    description: >-
      Represents the output of inferring the LIKELY country of Origin from a
      personal name.
    properties:
      countriesOriginTop:
        description: List countries of Origin (top 10)
        items:
          description: List countries of Origin (top 10)
          type: string
        type: array
      countryOrigin:
        description: Most likely country of Origin
        type: string
      countryOriginAlt:
        description: 'Second best alternative : country of Origin'
        type: string
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      probabilityAltCalibrated:
        description: >-
          The calibrated probability for countryOrigin OR countryOriginAlt to
          have been guessed correctly.
        format: double
        type: number
      probabilityCalibrated:
        description: >-
          The calibrated probability for countryOrigin to have been guessed
          correctly.
        format: double
        type: number
      regionOrigin:
        description: Most likely region of Origin (based on countryOrigin ISO2 code)
        type: string
      score:
        description: >-
          Compatibility to NamSor_v1 Origin score value. Higher score is better,
          but score is not normalized. Use calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
      subRegionOrigin:
        description: Most likely sub region of Origin (based on countryOrigin ISO2 code)
        type: string
      topRegionOrigin:
        description: Most likely top region of Origin (based on countryOrigin ISO2 code)
        type: string
    type: object
    xml:
      name: FirstLastNameOriginedOut
  FirstLastNameOut:
    description: First / last name structure corresponding to the most likely parsing.
    properties:
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      script:
        type: string
    type: object
    xml:
      name: FirstLastNameOut
  FirstLastNamePhoneCodedOut:
    description: >-
      Represents the output of inferring the LIKELY country and phone code from
      a personal name and phone number.
    properties:
      countryIso2:
        type: string
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      internationalPhoneNumberVerified:
        description: 'The normalized phone number, verified using libphonenumber.'
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      originCountryIso2:
        description: The likely country of origin of the name.
        type: string
      originCountryIso2Alt:
        description: The best alternative country of origin of the name.
        type: string
      phoneCountryCode:
        description: >-
          The phone country code of the phone number, verified using
          libphonenumber.
        format: int32
        type: integer
      phoneCountryCodeAlt:
        description: The best alternative phone country code of the phone number.
        format: int32
        type: integer
      phoneCountryIso2:
        description: The likely country of the phone number.
        type: string
      phoneCountryIso2Alt:
        description: The best alternative country of the phone number.
        type: string
      phoneCountryIso2Verified:
        description: 'The phone ISO2 country code, verified using libphonenumber.'
        type: string
      phoneNumber:
        description: The input phone number.
        type: string
      score:
        description: >-
          Higher score is better, but score is not normalized. Use
          calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
      verified:
        description: >-
          Indicates if the phone number could be positively verified using
          libphonenumber.
        type: boolean
    type: object
    xml:
      name: FirstLastNamePhoneCodedOut
  FirstLastNamePhoneNumberGeoIn:
    properties:
      FirstLastNameOriginedOut:
        $ref: '#/definitions/FirstLastNameOriginedOut'
      countryIso2:
        type: string
      countryIso2Alt:
        type: string
      firstName:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
      phoneNumber:
        type: string
    type: object
    xml:
      name: FirstLastNamePhoneNumberGeoIn
  FirstLastNamePhoneNumberIn:
    properties:
      FirstLastNameOriginedOut:
        $ref: '#/definitions/FirstLastNameOriginedOut'
      firstName:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      lastName:
        type: string
        xml:
          attribute: true
      phoneNumber:
        type: string
    type: object
    xml:
      name: FirstLastNamePhoneNumberIn
  FirstLastNameUSRaceEthnicityOut:
    description: >-
      Represents the output of inferring the LIKELY US 'race/ethnicity' from a
      personal name, given US country of residence and (optionally) a ZIP5 code.
    properties:
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      probabilityAltCalibrated:
        description: >-
          The calibrated probability for raceEthnicity OR raceEthnicityAlt to
          have been guessed correctly.
        format: double
        type: number
      probabilityCalibrated:
        description: >-
          The calibrated probability for raceEthnicity to have been guessed
          correctly.
        format: double
        type: number
      raceEthnicitiesTop:
        description: List 'race'/ethnicities
        items:
          description: List 'race'/ethnicities
          type: string
        type: array
      raceEthnicity:
        description: Most likely US 'race'/ethnicity
        enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
        type: string
        xml:
          attribute: true
      raceEthnicityAlt:
        description: Second most likely US 'race'/ethnicity
        enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
        type: string
        xml:
          attribute: true
      score:
        description: >-
          Higher score is better, but score is not normalized. Use
          calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: FirstLastNameUSRaceEthnicityOut
  MatchPersonalFirstLastNameIn:
    properties:
      id:
        type: string
        xml:
          attribute: true
      name1:
        $ref: '#/definitions/FirstLastNameIn'
      name2:
        $ref: '#/definitions/PersonalNameIn'
    type: object
    xml:
      name: MatchPersonalFirstLastNameIn
  NameGeoIn:
    properties:
      countryIso2:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      name:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: NameGeoIn
  NameIn:
    properties:
      id:
        type: string
        xml:
          attribute: true
      name:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: NameIn
  NameMatchCandidateOut:
    description: The ordered list of name matching candidates
    properties:
      candidateName:
        description: The name matching candidate name
        type: string
      predScoreFamilyName:
        description: The family name prediction score.
        format: double
        type: number
      predScoreGivenName:
        description: The given name prediction score.
        format: double
        type: number
      probability:
        description: The name matching estimated probability.
        format: double
        type: number
    type: object
    xml:
      name: NameMatchCandidateOut
  NameMatchCandidatesOut:
    description: Classified matched names
    properties:
      firstName:
        description: The first name (also known as given name)
        type: string
      id:
        type: string
      lastName:
        description: 'The last name (also known as family name, or surname)'
        type: string
      matchCandidates:
        description: The ordered list of name matching candidates
        items:
          $ref: '#/definitions/NameMatchCandidateOut'
        type: array
      orderOption:
        description: The option for ordering
        type: string
      script:
        type: string
    type: object
    xml:
      name: NameMatchCandidatesOut
  NameMatchedOut:
    description: Classified matched names
    properties:
      id:
        type: string
      matchStatus:
        description: The name matching status.
        type: string
      score:
        format: double
        type: number
      script:
        type: string
    type: object
    xml:
      name: NameMatchedOut
  PersonalNameGenderedOut:
    description: Classified genderized names
    properties:
      genderScale:
        description: 'Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value'
        format: double
        type: number
      id:
        type: string
      likelyGender:
        description: Most likely gender
        enum:
          - male
          - female
          - unknown
        type: string
      name:
        description: The input name
        type: string
      probabilityCalibrated:
        description: >-
          The calibrated probability for inferred gender to have been guessed
          correctly.
        format: double
        type: number
      score:
        description: >-
          Compatibility to NamSor_v1 Gender score value. Higher score is better,
          but score is not normalized. Use calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: PersonalNameGenderedOut
  PersonalNameGeoIn:
    properties:
      countryIso2:
        type: string
        xml:
          attribute: true
      id:
        type: string
        xml:
          attribute: true
      name:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: PersonalNameGeoIn
  PersonalNameGeoOut:
    description: Classified geo names
    properties:
      countriesTop:
        description: List countries (top 10)
        items:
          description: List countries (top 10)
          type: string
        type: array
      country:
        description: 'Most likely country '
        type: string
      countryAlt:
        description: 'Second best alternative : country '
        type: string
      id:
        type: string
      name:
        description: The input name.
        type: string
      probabilityAltCalibrated:
        description: >-
          The calibrated probability for country OR countryAlt to have been
          guessed correctly.
        format: double
        type: number
      probabilityCalibrated:
        description: The calibrated probability for country to have been guessed correctly.
        format: double
        type: number
      region:
        description: Most likely region (based on country ISO2 code)
        type: string
      score:
        description: >-
          Higher score is better, but score is not normalized. Use
          calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
      subRegion:
        description: Most likely sub region (based on country ISO2 code)
        type: string
      topRegion:
        description: Most likely top region (based on country ISO2 code)
        type: string
    type: object
    xml:
      name: PersonalNameGeoOut
  PersonalNameIn:
    properties:
      id:
        type: string
        xml:
          attribute: true
      name:
        type: string
        xml:
          attribute: true
    type: object
    xml:
      name: PersonalNameIn
  PersonalNameParsedOut:
    properties:
      firstLastName:
        $ref: '#/definitions/FirstLastNameOut'
      id:
        type: string
      name:
        description: The input name
        type: string
      nameParserType:
        description: >-
          Name parsing is addressed as a classification problem, for example
          FN1LN1 means a first then last name order.
        type: string
      nameParserTypeAlt:
        description: >-
          Second best alternative parsing. Name parsing is addressed as a
          classification problem, for example FN1LN1 means a first then last
          name order.
        type: string
      score:
        description: >-
          Higher score is better, but score is not normalized. Use
          calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: PersonalNameParsedOut
  ProperNounCategorizedOut:
    description: Classified typed proper names
    properties:
      commonType:
        description: The most likely common name type
        type: string
      commonTypeAlt:
        description: 'Best alternative for : The most likely common name type'
        type: string
      id:
        type: string
      name:
        description: The input name
        type: string
      score:
        description: >-
          Higher score is better, but score is not normalized. Use
          calibratedProbability if available. 
        format: double
        maximum: 100
        minimum: 0
        type: number
      script:
        type: string
    type: object
    xml:
      name: ProperNounCategorizedOut
  SoftwareVersionOut:
    description: The software version.
    properties:
      softwareNameAndVersion:
        description: The software version
        type: string
      softwareVersion:
        description: The software version major minor build
        items:
          description: The software version major minor build
          format: int32
          type: integer
        type: array
    type: object
    xml:
      name: SoftwareVersionOut
externalDocs:
  description: 'NamSor API client SDKs v2 for Java, Python'
  url: 'https://github.com/namsor'
host: v2.namsor.com
info:
  contact:
    email: contact@namsor.com
    name: Namsor SAS
    url: 'http://www.namsor.com/'
    x-twitter: gendreapp
  description: >-
    NamSor API v2 : enpoints to process personal names (gender, cultural origin
    or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit
    per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per
    name depending on taxonomy. Use GET methods for small tests, but prefer POST
    methods for higher throughput (batch processing of up to 100 names at a
    time). Need something you can't find here? We have many more features coming
    soon. Let us know, we'll do our best to add it! 
  license:
    name: NamSorAPI_Lic_v0.0.7
    url: >-
      https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf
  title: NamSor API v2
  version: 2.0.15
  x-apisguru-categories:
    - text
  x-logo:
    url: 'https://twitter.com/gendreapp/profile_image?size=original'
  x-origin:
    - converter:
        url: 'https://github.com/mermade/oas-kit'
        version: 7.0.4
      format: openapi
      url: 'https://v2.namsor.com/NamSorAPIv2/api2/openapi.json'
      version: '3.0'
  x-providerName: namsor.com
paths:
  '/api2/json/anonymize/{source}/{anonymized}':
    get:
      operationId: anonymize
      parameters:
        - in: path
          name: source
          required: true
          type: string
        - in: path
          name: anonymized
          required: true
          type: boolean
      responses:
        '200':
          description: Anonymization of a source.
        '401':
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
        - admin
  /api2/json/apiServices:
    get:
      operationId: availableServices
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Available services
          schema:
            $ref: '#/definitions/APIServicesOut'
        '401':
          description: Missing or incorrect token
      summary: >-
        List of classification services and usage cost in Units per
        classification (default is 1=ONE Unit). Some API endpoints (ex.
        Corridor) combine multiple classifiers.
      tags:
        - admin
  /api2/json/apiStatus:
    get:
      operationId: apiStatus
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Available classifiers and status
          schema:
            $ref: '#/definitions/APIClassifiersStatusOut'
        '401':
          description: Missing or incorrect token
      summary: >-
        Prints the current status of the classifiers. A classifier name in
        apiStatus corresponds to a service name in apiServices.
      tags:
        - admin
  /api2/json/apiUsage:
    get:
      operationId: apiUsage
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Print current API usage.
          schema:
            $ref: '#/definitions/APIPeriodUsageOut'
        '401':
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print current API usage.
      tags:
        - admin
  /api2/json/apiUsageHistory:
    get:
      operationId: apiUsageHistory
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Print historical API usage (NB. new output format form v2.0.15)
          schema:
            $ref: '#/definitions/APIUsageHistoryOut'
        '401':
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print historical API usage.
      tags:
        - admin
  /api2/json/apiUsageHistoryAggregate:
    get:
      operationId: apiUsageHistoryAggregate
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Print historical API usage.
          schema:
            $ref: '#/definitions/APIUsageAggregatedOut'
        '401':
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: >-
        Print historical API usage (in an aggregated view, by service, by
        day/hour/min).
      tags:
        - admin
  '/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}':
    get:
      operationId: chineseNameCandidates
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify Chinese name candidates, based on the romanized name ex. Wang
        Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameCandidatesBatch:
    post:
      consumes:
        - application/json
      operationId: chineseNameCandidatesBatch
      parameters:
        - description: >-
            A list of personal Chinese names in LATIN, firstName =
            chineseGivenName; lastName=chineseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameCandidatesGenderBatch:
    post:
      consumes:
        - application/json
      operationId: chineseNameCandidatesGenderBatch
      parameters:
        - description: >-
            A list of personal Chinese names in LATIN, firstName =
            chineseGivenName; lastName=chineseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.
      tags:
        - chinese
  '/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}':
    get:
      operationId: chineseNameGenderCandidates
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          type: string
        - in: path
          name: knownGender
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify Chinese name candidates, based on the romanized name ex. Wang
        Xiaoming - having a known gender ('male' or 'female')
      tags:
        - chinese
  '/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}':
    get:
      operationId: chineseNameMatch
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          type: string
        - in: path
          name: chineseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Return a score for matching Chinese name ex. 王晓明 with a romanized name
        ex. Wang Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameMatchBatch:
    post:
      consumes:
        - application/json
      operationId: chineseNameMatchBatch
      parameters:
        - description: >-
            A list of personal Chinese names in LATIN, firstName =
            chineseGivenName; lastName=chineseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchMatchPersonalFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
        - chinese
  '/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}':
    get:
      operationId: corridor
      parameters:
        - in: path
          name: countryIso2From
          required: true
          type: string
        - in: path
          name: firstNameFrom
          required: true
          type: string
        - in: path
          name: lastNameFrom
          required: true
          type: string
        - in: path
          name: countryIso2To
          required: true
          type: string
        - in: path
          name: firstNameTo
          required: true
          type: string
        - in: path
          name: lastNameTo
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Two classified names.
          schema:
            $ref: '#/definitions/CorridorOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 20 UNITS PER NAME COUPLE] Infer several classifications for a
        cross border interaction between names (ex. remit, travel, intl com)
      tags:
        - personal
  /api2/json/corridorBatch:
    post:
      consumes:
        - application/json
      operationId: corridorBatch
      parameters:
        - description: 'A list of name pairs, with country code (nameFrom -> nameTo).'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchCorridorIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of classified name pairs.
          schema:
            $ref: '#/definitions/BatchCorridorOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 20 UNITS PER NAME PAIR] Infer several classifications for up to
        100 cross border interaction between names (ex. remit, travel, intl com)
      tags:
        - personal
  '/api2/json/country/{personalNameFull}':
    get:
      operationId: country
      parameters:
        - in: path
          name: personalNameFull
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/PersonalNameGeoOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer the likely country of residence of a
        personal full name, or one surname. Assumes names as they are in the
        country of residence OR the country of origin.
      tags:
        - personal
  /api2/json/countryBatch:
    post:
      consumes:
        - application/json
      operationId: countryBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchPersonalNameGeoOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer the likely country of residence of up to
        100 personal full names, or surnames. Assumes names as they are in the
        country of residence OR the country of origin.
      tags:
        - personal
  '/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}':
    get:
      operationId: diaspora
      parameters:
        - in: path
          name: countryIso2
          required: true
          type: string
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A diaspora / ethnicity for given name and geography.
          schema:
            $ref: '#/definitions/FirstLastNameDiasporaedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a
        personal name, given a country of residence ISO2 code (ex. US, CA, AU,
        NZ etc.)
      tags:
        - personal
  /api2/json/diasporaBatch:
    post:
      consumes:
        - application/json
      operationId: diasporaBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of diaspora / ethnicity given a name and residency.
          schema:
            $ref: '#/definitions/BatchFirstLastNameDiasporaedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to
        100 personal names, given a country of residence ISO2 code (ex. US, CA,
        AU, NZ etc.)
      tags:
        - personal
  '/api2/json/disable/{source}/{disabled}':
    get:
      operationId: disable
      parameters:
        - description: The API Key to set as enabled/disabled.
          in: path
          name: source
          required: true
          type: string
        - in: path
          name: disabled
          required: true
          type: boolean
      responses:
        '200':
          description: Disabled the API Key.
        '401':
          description: Missing or incorrect API Key
      summary: Activate/deactivate an API Key.
      tags:
        - admin
  '/api2/json/gender/{firstName}/{lastName}':
    get:
      operationId: gender
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/FirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a name.
      tags:
        - personal
  /api2/json/genderBatch:
    post:
      consumes:
        - application/json
      operationId: genderBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of up to 100 names, detecting automatically the
        cultural context.
      tags:
        - personal
  '/api2/json/genderChineseName/{chineseName}':
    get:
      operationId: genderChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/PersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Chinese full name ex. 王晓明
      tags:
        - chinese
  /api2/json/genderChineseNameBatch:
    post:
      consumes:
        - application/json
      operationId: genderChineseNameBatch
      parameters:
        - description: 'A list of personal names, with a country ISO2 code'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchPersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 full names ex. 王晓明
      tags:
        - chinese
  '/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}':
    get:
      operationId: genderChineseNamePinyin
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/FirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).
      tags:
        - chinese
  /api2/json/genderChineseNamePinyinBatch:
    post:
      consumes:
        - application/json
      operationId: genderChineseNamePinyinBatch
      parameters:
        - description: 'A list of names, with country code.'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).
      tags:
        - chinese
  '/api2/json/genderFull/{fullName}':
    get:
      operationId: genderFull
      parameters:
        - in: path
          name: fullName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/PersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: 'Infer the likely gender of a full name, ex. John H. Smith'
      tags:
        - personal
  /api2/json/genderFullBatch:
    post:
      consumes:
        - application/json
      operationId: genderFullBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchPersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of up to 100 full names, detecting automatically
        the cultural context.
      tags:
        - personal
  '/api2/json/genderFullGeo/{fullName}/{countryIso2}':
    get:
      operationId: genderFullGeo
      parameters:
        - in: path
          name: fullName
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/PersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of a full name, given a local context (ISO2
        country code).
      tags:
        - personal
  /api2/json/genderFullGeoBatch:
    post:
      consumes:
        - application/json
      operationId: genderFullGeoBatch
      parameters:
        - description: 'A list of personal names, with a country ISO2 code'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchPersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of up to 100 full names, with a given cultural
        context (country ISO2 code).
      tags:
        - personal
  '/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}':
    get:
      operationId: genderGeo
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/FirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of a name, given a local context (ISO2 country
        code).
      tags:
        - personal
  /api2/json/genderGeoBatch:
    post:
      consumes:
        - application/json
      operationId: genderGeoBatch
      parameters:
        - description: 'A list of names, with country code.'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely gender of up to 100 names, each given a local context
        (ISO2 country code).
      tags:
        - personal
  '/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}':
    get:
      operationId: genderJapaneseNamePinyin
      parameters:
        - in: path
          name: japaneseSurname
          required: true
          type: string
        - in: path
          name: japaneseGivenName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/FirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Japanese name in LATIN (Pinyin).
      tags:
        - japanese
  /api2/json/genderJapaneseNameBatch:
    post:
      consumes:
        - application/json
      operationId: genderJapaneseNamePinyinBatch
      parameters:
        - description: 'A list of names, with country code.'
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).
      tags:
        - japanese
  '/api2/json/genderJapaneseNameFull/{japaneseName}':
    get:
      operationId: genderJapaneseNameFull
      parameters:
        - in: path
          name: japaneseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A genderized name.
          schema:
            $ref: '#/definitions/PersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Japanese full name ex. 王晓明
      tags:
        - japanese
  /api2/json/genderJapaneseNameFullBatch:
    post:
      consumes:
        - application/json
      operationId: genderJapaneseNameFullBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchPersonalNameGenderedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 full names
      tags:
        - japanese
  /api2/json/japaneseNameGenderKanjiCandidatesBatch:
    post:
      consumes:
        - application/json
      operationId: japaneseNameGenderKanjiCandidatesBatch
      parameters:
        - description: >-
            A list of personal japanese names in LATIN, firstName =
            japaneseGivenName; lastName=japaneseSurname and known gender
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGenderIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify japanese name candidates in KANJI, based on the romanized name
        (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN
        gender, ex. Yamamoto Sanae
      tags:
        - japanese
  '/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}':
    get:
      operationId: japaneseNameKanjiCandidates_1
      parameters:
        - in: path
          name: japaneseSurnameLatin
          required: true
          type: string
        - in: path
          name: japaneseGivenNameLatin
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify japanese name candidates in KANJI, based on the romanized name
        ex. Yamamoto Sanae
      tags:
        - japanese
  '/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}':
    get:
      operationId: japaneseNameKanjiCandidates
      parameters:
        - in: path
          name: japaneseSurnameLatin
          required: true
          type: string
        - in: path
          name: japaneseGivenNameLatin
          required: true
          type: string
        - in: path
          name: knownGender
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify japanese name candidates in KANJI, based on the romanized name
        ex. Yamamoto Sanae - and a known gender.
      tags:
        - japanese
  /api2/json/japaneseNameKanjiCandidatesBatch:
    post:
      consumes:
        - application/json
      operationId: japaneseNameKanjiCandidatesBatch
      parameters:
        - description: >-
            A list of personal japanese names in LATIN, firstName =
            japaneseGivenName; lastName=japaneseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Identify japanese name candidates in KANJI, based on the romanized name
        (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto
        Sanae
      tags:
        - japanese
  '/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}':
    get:
      operationId: japaneseNameLatinCandidates
      parameters:
        - in: path
          name: japaneseSurnameKanji
          required: true
          type: string
        - in: path
          name: japaneseGivenNameKanji
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: 'Romanize japanese name, based on the name in Kanji.'
      tags:
        - japanese
  /api2/json/japaneseNameLatinCandidatesBatch:
    post:
      consumes:
        - application/json
      operationId: japaneseNameLatinCandidatesBatch
      parameters:
        - description: >-
            A list of personal japanese names in KANJI, firstName =
            japaneseGivenName; lastName=japaneseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchNameMatchCandidatesOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: 'Romanize japanese names, based on the name in KANJI'
      tags:
        - japanese
  '/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}':
    get:
      operationId: japaneseNameMatch
      parameters:
        - in: path
          name: japaneseSurnameLatin
          required: true
          type: string
        - in: path
          name: japaneseGivenNameLatin
          required: true
          type: string
        - in: path
          name: japaneseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/NameMatchedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a
        romanized name ex. Yamamoto Sanae
      tags:
        - japanese
  /api2/json/japaneseNameMatchBatch:
    post:
      consumes:
        - application/json
      operationId: japaneseNameMatchBatch
      parameters:
        - description: >-
            A list of personal Japanese names in LATIN, firstName =
            japaneseGivenName; lastName=japaneseSurname
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchMatchPersonalFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of matched names.
          schema:
            $ref: '#/definitions/BatchNameMatchedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗
        with romanized names ex. Yamamoto Sanae
      tags:
        - japanese
  '/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}':
    get:
      operationId: japaneseNameMatchFeedbackLoop
      parameters:
        - in: path
          name: japaneseSurnameLatin
          required: true
          type: string
        - in: path
          name: japaneseGivenNameLatin
          required: true
          type: string
        - in: path
          name: japaneseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A romanized name.
          schema:
            $ref: '#/definitions/FeedbackLoopOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name
        in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae
      tags:
        - japanese
  '/api2/json/learnable/{source}/{learnable}':
    get:
      operationId: learnable
      parameters:
        - description: The API Key to set as learnable/non learnable.
          in: path
          name: source
          required: true
          type: string
        - in: path
          name: learnable
          required: true
          type: boolean
      responses:
        '200':
          description: Set learning from source.
        '401':
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
        - admin
  '/api2/json/nameType/{properNoun}':
    get:
      operationId: nameType
      parameters:
        - in: path
          name: properNoun
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A typed name.
          schema:
            $ref: '#/definitions/ProperNounCategorizedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely type of a proper noun (personal name, brand name, place
        name etc.)
      tags:
        - general
  /api2/json/nameTypeBatch:
    post:
      consumes:
        - application/json
      operationId: nameTypeBatch
      parameters:
        - description: A list of proper names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of commonTypeized names.
          schema:
            $ref: '#/definitions/BatchProperNounCategorizedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely common type of up to 100 proper nouns (personal name,
        brand name, place name etc.)
      tags:
        - general
  '/api2/json/nameTypeGeo/{properNoun}/{countryIso2}':
    get:
      operationId: nameTypeGeo
      parameters:
        - in: path
          name: properNoun
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A typed name.
          schema:
            $ref: '#/definitions/ProperNounCategorizedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely type of a proper noun (personal name, brand name, place
        name etc.)
      tags:
        - general
  /api2/json/nameTypeGeoBatch:
    post:
      consumes:
        - application/json
      operationId: nameTypeGeoBatch
      parameters:
        - description: A list of proper names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of commonTypeized names.
          schema:
            $ref: '#/definitions/BatchProperNounCategorizedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely common type of up to 100 proper nouns (personal name,
        brand name, place name etc.)
      tags:
        - general
  '/api2/json/origin/{firstName}/{lastName}':
    get:
      operationId: origin
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/FirstLastNameOriginedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer the likely country of origin of a
        personal name. Assumes names as they are in the country of origin. For
        US, CA, AU, NZ and other melting-pots : use 'diaspora' instead.
      tags:
        - personal
  /api2/json/originBatch:
    post:
      consumes:
        - application/json
      operationId: originBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNameOriginedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100
        names, detecting automatically the cultural context.
      tags:
        - personal
  '/api2/json/parseChineseName/{chineseName}':
    get:
      operationId: parseChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/PersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. 王晓明 ->
        王(surname) 晓明(given name)
      tags:
        - chinese
  /api2/json/parseChineseNameBatch:
    post:
      consumes:
        - application/json
      operationId: parseChineseNameBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of parsed names.
          schema:
            $ref: '#/definitions/BatchPersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. 王晓明 ->
        王(surname) 晓明(given name).
      tags:
        - chinese
  '/api2/json/parseJapaneseName/{japaneseName}':
    get:
      operationId: parseJapaneseName
      parameters:
        - in: path
          name: japaneseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/PersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. 山本 早苗 or
        Yamamoto Sanae
      tags:
        - japanese
  /api2/json/parseJapaneseNameBatch:
    post:
      consumes:
        - application/json
      operationId: parseJapaneseNameBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of parsed names.
          schema:
            $ref: '#/definitions/BatchPersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. 山本 早苗 or
        Yamamoto Sanae 
      tags:
        - japanese
  '/api2/json/parseName/{nameFull}':
    get:
      operationId: parseName
      parameters:
        - in: path
          name: nameFull
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/PersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. 
      tags:
        - personal
  '/api2/json/parseName/{nameFull}/{countryIso2}':
    get:
      operationId: parseNameGeo
      parameters:
        - in: path
          name: nameFull
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A origined name.
          schema:
            $ref: '#/definitions/PersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. For better accuracy, provide a geographic
        context.
      tags:
        - personal
  /api2/json/parseNameBatch:
    post:
      consumes:
        - application/json
      operationId: parseNameBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of parsed names.
          schema:
            $ref: '#/definitions/BatchPersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John.
      tags:
        - personal
  /api2/json/parseNameGeoBatch:
    post:
      consumes:
        - application/json
      operationId: parseNameGeoBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of parsed names.
          schema:
            $ref: '#/definitions/BatchPersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. Giving a local context improves precision. 
      tags:
        - personal
  '/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}':
    get:
      operationId: phoneCode
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
        - in: path
          name: phoneNumber
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A name with country and phone code.
          schema:
            $ref: '#/definitions/FirstLastNamePhoneCodedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        given a personal name and formatted / unformatted phone number.
      tags:
        - social
  /api2/json/phoneCodeBatch:
    post:
      consumes:
        - application/json
      operationId: phoneCodeBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNamePhoneNumberIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNamePhoneCodedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of
        up to 100 personal names, detecting automatically the local context
        given a name and formatted / unformatted phone number.
      tags:
        - social
  '/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}':
    get:
      operationId: phoneCodeGeo
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
        - in: path
          name: phoneNumber
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A name with country and phone code.
          schema:
            $ref: '#/definitions/FirstLastNamePhoneCodedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal
        name and formatted / unformatted phone number, with a local context
        (ISO2 country of residence).
      tags:
        - social
  /api2/json/phoneCodeGeoBatch:
    post:
      consumes:
        - application/json
      operationId: phoneCodeGeoBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNamePhoneNumberGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of genderized names.
          schema:
            $ref: '#/definitions/BatchFirstLastNamePhoneCodedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of
        up to 100 personal names, with a local context (ISO2 country of
        residence).
      tags:
        - social
  '/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}':
    get:
      operationId: phoneCodeGeoFeedbackLoop
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
        - in: path
          name: phoneNumber
          required: true
          type: string
        - in: path
          name: phoneNumberE164
          required: true
          type: string
        - in: path
          name: countryIso2
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A name with country and phone code.
          schema:
            $ref: '#/definitions/FirstLastNamePhoneCodedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,
        given a personal name and formatted / unformatted phone number, with a
        local context (ISO2 country of residence).
      tags:
        - social
  '/api2/json/pinyinChineseName/{chineseName}':
    get:
      operationId: pinyinChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A pinyin name.
          schema:
            $ref: '#/definitions/PersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming
        (given name)
      tags:
        - chinese
  /api2/json/pinyinChineseNameBatch:
    post:
      consumes:
        - application/json
      operationId: pinyinChineseNameBatch
      parameters:
        - description: A list of Chinese names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchPersonalNameIn'
      produces:
        - application/json
      responses:
        '200':
          description: A list of Pinyin names.
          schema:
            $ref: '#/definitions/BatchPersonalNameParsedOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname)
        Xiaoming (given name).
      tags:
        - chinese
  /api2/json/softwareVersion:
    get:
      operationId: softwareVersion
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: The current software version
          schema:
            $ref: '#/definitions/SoftwareVersionOut'
        '401':
          description: Missing or incorrect token
      summary: Get the current software version
      tags:
        - admin
  '/api2/json/taxonomyClasses/{classifierName}':
    get:
      operationId: taxonomyClasses
      parameters:
        - in: path
          name: classifierName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Available plans
          schema:
            $ref: '#/definitions/APIClassifierTaxonomyOut'
        '401':
          description: Missing or incorrect token
      summary: Print the taxonomy classes valid for the given classifier.
      tags:
        - admin
  '/api2/json/usRaceEthnicity/{firstName}/{lastName}':
    get:
      operationId: usRaceEthnicity
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            a US resident's likely race/ethnicity : W_NL (white, non latino), HL
            (hispano latino),  A (asian, non latino), B_NL (black, non latino),
            AI_AN (American Indian or Alaskan Native*) and PI (Pacific
            Islander*). *optionally
          schema:
            $ref: '#/definitions/FirstLastNameUSRaceEthnicityOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity
        according to US Census taxonomy W_NL (white, non latino), HL (hispano
        latino),  A (asian, non latino), B_NL (black, non latino). Optionally
        add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES
        for two additional classes, AI_AN (American Indian or Alaskan Native)
        and PI (Pacific Islander).
      tags:
        - personal
  /api2/json/usRaceEthnicityBatch:
    post:
      consumes:
        - application/json
      operationId: usRaceEthnicityBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGeoIn'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            A list of US resident's likely race/ethnicity. W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
            non latino), AI_AN (American Indian or Alaskan Native*) and PI
            (Pacific Islander*). *optionally
          schema:
            $ref: '#/definitions/BatchFirstLastNameUSRaceEthnicityOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely
        race/ethnicity according to US Census taxonomy. Output is W_NL (white,
        non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
        non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY:
        USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American
        Indian or Alaskan Native) and PI (Pacific Islander).
      tags:
        - personal
  '/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}':
    get:
      operationId: usRaceEthnicityZIP5
      parameters:
        - in: path
          name: firstName
          required: true
          type: string
        - in: path
          name: lastName
          required: true
          type: string
        - in: path
          name: zip5Code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            a US resident's likely race/ethnicity : W_NL (white, non latino), HL
            (hispano latino),  A (asian, non latino), B_NL (black, non latino),
            AI_AN (American Indian or Alaskan Native*) and PI (Pacific
            Islander*). *optionally
          schema:
            $ref: '#/definitions/FirstLastNameUSRaceEthnicityOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity
        according to US Census taxonomy, using (optional) ZIP5 code info. Output
        is W_NL (white, non latino), HL (hispano latino),  A (asian, non
        latino), B_NL (black, non latino). Optionally add header
        X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two
        additional classes, AI_AN (American Indian or Alaskan Native) and PI
        (Pacific Islander).
      tags:
        - personal
  /api2/json/usZipRaceEthnicityBatch:
    post:
      consumes:
        - application/json
      operationId: usZipRaceEthnicityBatch
      parameters:
        - description: A list of personal names
          in: body
          name: body
          schema:
            $ref: '#/definitions/BatchFirstLastNameGeoZippedIn'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            A list of US resident's likely race/ethnicity. W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
            non latino), AI_AN (American Indian or Alaskan Native*) and PI
            (Pacific Islander*). *optionally
          schema:
            $ref: '#/definitions/BatchFirstLastNameUSRaceEthnicityOut'
        '401':
          description: Missing or incorrect API Key
        '403':
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: >-
        [USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely
        race/ethnicity according to US Census taxonomy, with (optional) ZIP
        code. Output is W_NL (white, non latino), HL (hispano latino),  A
        (asian, non latino), B_NL (black, non latino). Optionally add header
        X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two
        additional classes, AI_AN (American Indian or Alaskan Native) and PI
        (Pacific Islander).
      tags:
        - personal
schemes:
  - https
security:
  - api_key: []
securityDefinitions:
  api_key:
    description: api_key required
    in: header
    name: X-API-KEY
    type: apiKey
swagger: '2.0'
tags:
  - description: >-
      Personal names (anthroponyms) : gender, country origin/ethnicity,
      diaspora, US 'race'/ethniciy
    name: personal
  - description: Social media and pseudonyms
    name: social
  - description: CHINESE special features
    name: chinese
  - description: JAPANESE special features
    name: japanese
  - description: 'Administrative, system management.'
    name: admin
x-components: {}

