basePath: /
externalDocs:
  description: Documentation and examples
  url: 'https://www.pdfblocks.com/docs/api/v1'
host: api.pdfblocks.com
info:
  contact:
    email: support@pdfblocks.com
    name: PDF Blocks Support
    url: 'https://www.pdfblocks.com/support'
  description: >-
    PDF Blocks is a secure, reliable, and fast API to work with PDF documents.
    Actions include: Merge PDF documents, add or remove passwords, add
    watermarks, remove, extract, reverse, and rotate pages, and more.
  termsOfService: 'https://www.pdfblocks.com/terms'
  title: PDF Blocks API
  version: 1.5.0
  x-apisguru-categories:
    - text
  x-logo:
    url: 'https://www.pdfblocks.com/assets/images/pdfblocks-logo.svg'
  x-origin:
    - format: openapi
      url: 'https://www.pdfblocks.com/assets/specs/pdfblocks.openapi.yaml'
      version: '3.0'
  x-providerName: pdfblocks.com
paths:
  /v1/add_password:
    post:
      consumes:
        - multipart/form-data
      description: >-
        Protect a PDF document with a password. Encrypt the PDF document to
        prevent unauthorized access.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/add-password'
      operationId: addPasswordV1
      parameters:
        - default: AES-128
          description: The algorithm used to encrypt the PDF document.
          enum:
            - AES-128
            - AES-256
          in: formData
          name: encryption_algorithm
          type: string
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: The password required to open the file.
          in: formData
          maxLength: 32
          minLength: 4
          name: password
          pattern: '^[\x20-\x7e]{4,32}$'
          required: true
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Add a password to a PDF
  /v1/add_restrictions:
    post:
      consumes:
        - multipart/form-data
      description: >-
        Add restrictions to prevent copying, printing, and modifying a PDF
        document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/add-restrictions'
      operationId: addRestrictionsV1
      parameters:
        - default: true
          description: >-
            If false, accessibility programs can't read the text or images of
            the document.
          in: formData
          name: allow_accessibility
          type: boolean
        - default: true
          description: 'If false, the user can''t assemble or manipulate the document.'
          in: formData
          name: allow_assemble_document
          type: boolean
        - default: true
          description: 'If false, the user can''t change the content of the document.'
          in: formData
          name: allow_change_content
          type: boolean
        - default: true
          description: >-
            If false, the user can't add, edit or modify annotations or fill
            form fields.
          in: formData
          name: allow_comment_and_fill_form
          type: boolean
        - default: true
          description: 'If false, the user can''t copy text and images to the clipboard.'
          in: formData
          name: allow_copy_content
          type: boolean
        - default: true
          description: 'If false, the user can''t fill forms fields.'
          in: formData
          name: allow_fill_form
          type: boolean
        - default: true
          description: 'If false, the user can''t print the document.'
          in: formData
          name: allow_print
          type: boolean
        - default: true
          description: 'If false, the user can''t print the document in high resolution.'
          in: formData
          name: allow_print_high_resolution
          type: boolean
        - default: AES-128
          description: The algorithm used to encrypt the PDF document.
          enum:
            - AES-128
            - AES-256
          in: formData
          name: encryption_algorithm
          type: string
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: >-
            The password required to open and change permissions of the PDF
            document.
          in: formData
          maxLength: 32
          minLength: 4
          name: owner_password
          pattern: '^[\x20-\x7e]{4,32}$'
          required: true
          type: string
        - description: >-
            The password required to open the PDF document. If the
            `user_password` is not set, the user will be able to open the
            document without a password.
          in: formData
          maxLength: 32
          minLength: 4
          name: user_password
          pattern: '^[\x20-\x7e]{4,32}$'
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Add restrictions to a PDF
  /v1/add_watermark/image:
    post:
      consumes:
        - multipart/form-data
      description: Add an image watermark to each page of a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/add-watermark-image'
      operationId: addImageWatermarkV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: >-
            The image to add as a watermark. The format of the image can be
            either PNG or JPEG.
          format: binary
          in: formData
          name: image
          required: true
          type: string
        - default: 1
          description: >-
            The distance in inches from the border of the page to the image
            watermark.
          format: float
          in: formData
          minimum: 0
          name: margin
          type: number
        - default: 50
          description: >-
            The transparency level for the image watermark from 0 (opaque) to
            100 (transparent).
          format: int32
          in: formData
          maximum: 100
          minimum: 0
          name: transparency
          type: integer
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Add an image watermark to a PDF
  /v1/add_watermark/text:
    post:
      consumes:
        - multipart/form-data
      description: >-
        Add a text watermark to each page of a PDF document. Choose from several
        watermark templates.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/add-watermark-text'
      operationId: addTextWatermarkV1
      parameters:
        - default: Gray
          description: The color of the text watermark.
          enum:
            - Red
            - Blue
            - Gray
            - Black
          in: formData
          name: color
          type: string
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: The first line of text of the watermark.
          in: formData
          maxLength: 32
          name: line_1
          required: true
          type: string
        - description: The second line of text of the watermark.
          in: formData
          maxLength: 32
          name: line_2
          type: string
        - description: The third line of text of the watermark.
          in: formData
          maxLength: 32
          name: line_3
          type: string
        - default: 1
          description: >-
            The distance in inches from the border of the page to the text
            watermark.
          format: float
          in: formData
          minimum: 0
          name: margin
          type: number
        - default: 1001
          description: >-
            The [id of the text watermark
            template](https://www.pdfblocks.com/docs/api/v1/text-watermark-templates.pdf).
          format: int32
          in: formData
          maximum: 66537
          minimum: 1001
          name: template
          type: integer
        - default: 75
          description: >-
            The transparency level for the text watermark from 0 (opaque) to 100
            (transparent).
          format: int32
          in: formData
          maximum: 100
          minimum: 0
          name: transparency
          type: integer
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Add a text watermark to a PDF
  /v1/extract_pages:
    post:
      consumes:
        - multipart/form-data
      description: Extract one or more pages from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/extract-pages'
      operationId: extractPagesV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: >-
            The first page of the range to extract. If empty, it defaults to the
            first page of the PDF document.
          format: int32
          in: formData
          minimum: 1
          name: first_page
          type: integer
        - description: >-
            The last page of the range to extract. If empty, it defaults to the
            last page of the PDF document.
          format: int32
          in: formData
          minimum: 1
          name: last_page
          type: integer
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Extract pages from a PDF
  /v1/merge_documents:
    post:
      consumes:
        - multipart/form-data
      description: Combine multiple PDF documents into a single PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/merge-documents'
      operationId: mergeDocumentsV1
      parameters:
        - collectionFormat: csv
          description: >-
            The array of PDF documents. PDF documents will be merged in the same
            order they are inserted into this array.
          in: formData
          items:
            description: An input PDF document.
            format: binary
            type: string
          name: file
          type: array
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Merge PDF documents
  /v1/remove_pages:
    post:
      consumes:
        - multipart/form-data
      description: Remove one or more pages from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/remove-pages'
      operationId: removePagesV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: >-
            The first page of the range to remove from the PDF document. If
            empty, it defaults to the first page of the document.
          format: int32
          in: formData
          minimum: 1
          name: first_page
          type: integer
        - description: >-
            The last page of the range to remove from the PDF document. If
            empty, it defaults to the last page of the document.
          format: int32
          in: formData
          minimum: 1
          name: last_page
          type: integer
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Remove pages from a PDF
  /v1/remove_password:
    post:
      consumes:
        - multipart/form-data
      description: >-
        Remove the password from an encrypted PDF document. The PDF document
        will no longer require a password to open.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/remove-password'
      operationId: removePasswordV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: The password required to open the file.
          in: formData
          maxLength: 256
          name: password
          required: true
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Remove the password from a PDF
  /v1/remove_restrictions:
    post:
      consumes:
        - multipart/form-data
      description: Remove all the restrictions from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/remove-restrictions'
      operationId: removeRestrictionsV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Remove the restrictions from a PDF
  /v1/remove_signatures:
    post:
      consumes:
        - multipart/form-data
      description: Remove the cryptographic signatures and timestamps from a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/remove-signatures'
      operationId: removeSignaturesV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Remove the signatures from a PDF
  /v1/reverse_pages:
    post:
      consumes:
        - multipart/form-data
      description: Reverse the order of the pages of a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/reverse-pages'
      operationId: reversePagesV1
      parameters:
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Reverse the pages of a PDF
  /v1/rotate_pages:
    post:
      consumes:
        - multipart/form-data
      description: Rotate one or more pages in a PDF document.
      externalDocs:
        description: Documentation and examples
        url: 'https://www.pdfblocks.com/docs/api/v1/rotate-pages'
      operationId: rotatePagesV1
      parameters:
        - description: >-
            The angle of rotation of the pages. Positive angles rotate the pages
            clockwise. Negative angles rotate the pages counter-clockwise.
          enum:
            - 0
            - 90
            - 180
            - 270
            - -90
            - -180
            - -270
          format: int32
          in: formData
          name: angle
          required: true
          type: integer
        - description: The input PDF document
          format: binary
          in: formData
          name: file
          required: true
          type: string
        - description: >-
            The first page of the range to rotate in the PDF document. If empty,
            it defaults to the first page of the document.
          format: int32
          in: formData
          minimum: 1
          name: first_page
          type: integer
        - description: >-
            The last page of the range to rotate in the PDF document. If empty,
            it defaults to the last page of the document.
          format: int32
          in: formData
          minimum: 1
          name: last_page
          type: integer
      produces:
        - application/pdf
        - application/problem+json
      responses:
        '200':
          description: The document was processed succesfully.
          schema:
            description: The output PDF document
            format: binary
            type: string
        4XX:
          description: Error
          examples:
            application/problem+json:
              errors:
                file:
                  - >-
                    Could not parse the PDF document. The file may be invalid or
                    corrupt.
              status: 400
              title: One or more validation errors occurred.
              type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      summary: Rotate pages in a PDF
schemes:
  - https
security:
  - apiKey: []
securityDefinitions:
  apiKey:
    description: >-
      Find your API key in [your
      dashboard](https://dashboard.pdfblocks.com/users/sign_in), or [get a free
      API key](https://www.pdfblocks.com/try-free).
    in: header
    name: X-Api-Key
    type: apiKey
swagger: '2.0'
x-components:
  responses:
    error:
      content:
        application/problem+json:
          example:
            errors:
              file:
                - >-
                  Could not parse the PDF document. The file may be invalid or
                  corrupt.
            status: 400
            title: One or more validation errors occurred.
            type: 'https://www.pdfblocks.com/docs/api/v1/error/400'
          schema:
            properties:
              errors:
                type: object
              status:
                type: integer
              title:
                type: string
              type:
                format: url
                type: string
            type: object
      description: Error
    success:
      content:
        application/pdf:
          schema:
            description: The output PDF document
            format: binary
            type: string
      description: The document was processed succesfully.

