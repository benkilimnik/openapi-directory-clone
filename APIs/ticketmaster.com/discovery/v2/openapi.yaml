basePath: /www.ticketmaster.com/discovery/v2
definitions:
  AccessDates:
    description: Event's Access Date
    properties:
      endApproximate:
        default: false
        description: >-
          Boolean flag to indicate whether or not the access end date is
          approximated
        example: yyyy-MM-ddThh-mm-ssZ
        type: boolean
        x-position: 3
      endDateTime:
        description: Event's end access time
        example: yyyy-MM-ddThh-mm-ssZ
        format: date-time
        type: string
        x-position: 2
      startApproximate:
        default: false
        description: >-
          Boolean flag to indicate whether or not the access start date is
          approximated
        type: boolean
        x-position: 1
      startDateTime:
        description: Event's start access time
        example: yyyy-MM-ddThh-mm-ssZ
        format: date-time
        type: string
    type: object
  Accessibility:
    description: Additional information for people who experience disabilities
    properties:
      info:
        description: Accessibility's information
        type: string
        x-position: 1
    type: object
  Address:
    description: Address
    properties:
      line1:
        description: Address first line
        type: string
      line2:
        description: Address second line
        type: string
        x-position: 3
      line3:
        description: Address third line
        type: string
        x-position: 3
    type: object
  Area:
    description: Area
    properties:
      name:
        description: Name of the entity
        type: string
        x-position: 10
    type: object
  Attraction:
    description: Attraction
    properties:
      additionalInfo:
        description: Additional information of the entity
        type: string
        x-position: 22
      classifications:
        description: Attraction's classifications
        items:
          $ref: '#/definitions/Classification'
        type: array
        x-position: 30
      description:
        description: Description's of the entity
        type: string
        x-position: 20
      externalLinks:
        additionalProperties:
          items:
            $ref: '#/definitions/ExternalLink'
          type: array
        description: List of external links
        type: object
        x-position: 79
      id:
        description: Unique id of the entity in the discovery API
        type: string
        x-position: 1
      images:
        description: Images of the entity
        items:
          $ref: '#/definitions/Image'
        type: array
        uniqueItems: true
        x-position: 29
      locale:
        description: Locale in which the content is returned
        type: string
        x-position: 3
      name:
        description: Name of the entity
        type: string
        x-position: 10
      test:
        default: false
        description: >-
          Indicate if this is a test entity, by default test entities won't
          appear in discovery API
        type: boolean
        x-position: 96
      type:
        description: Type of the entity
        enum:
          - event
          - venue
          - attraction
        type: string
      upcomingEvents:
        additionalProperties:
          format: int32
          type: integer
        description: number of upcoming events
        type: object
        x-position: 110
      url:
        description: URL of a web site detail page of the entity
        type: string
        x-position: 24
    required:
      - id
      - type
    type: object
  AttractionExtensions:
    description: All Attraction's extensions
    type: object
  Attribution:
    description: Attribution
    properties:
      licenceName:
        description: LicenceName
        type: string
      licenceUrl:
        description: LicenceUrl
        type: string
      sourceName:
        description: SourceName
        type: string
      sourceUrl:
        description: SourceUrl
        type: string
    type: object
  Attributions:
    description: Attributions
    properties:
      description:
        $ref: '#/definitions/Attribution'
      descriptions:
        additionalProperties:
          $ref: '#/definitions/Attribution'
        description: Attribution descriptions - multi-lingual fields
        type: object
    type: object
  Chronology:
    properties:
      zone:
        $ref: '#/definitions/DateTimeZone'
    type: object
  City:
    description: City
    properties:
      name:
        description: Name of the entity
        type: string
        x-position: 10
    type: object
  Classification:
    description: Classification
    properties:
      genre:
        $ref: '#/definitions/Level'
      primary:
        default: false
        description: True if this is the entity's primary classification
        type: boolean
      segment:
        $ref: '#/definitions/Segment'
      subGenre:
        $ref: '#/definitions/Level'
      subType:
        $ref: '#/definitions/Level'
      type:
        $ref: '#/definitions/Level'
    type: object
  Country:
    description: Country
    properties:
      countryCode:
        description: Country code (ISO 3166)
        type: string
      name:
        description: Name of the entity
        type: string
        x-position: 10
    type: object
  DateTimeField:
    properties:
      durationField:
        $ref: '#/definitions/DurationField'
      leapDurationField:
        $ref: '#/definitions/DurationField'
      lenient:
        default: false
        type: boolean
      maximumValue:
        format: int32
        type: integer
      minimumValue:
        format: int32
        type: integer
      name:
        type: string
      rangeDurationField:
        $ref: '#/definitions/DurationField'
      supported:
        default: false
        type: boolean
      type:
        $ref: '#/definitions/DateTimeFieldType'
    type: object
  DateTimeFieldType:
    properties:
      durationType:
        $ref: '#/definitions/DurationFieldType'
      name:
        type: string
      rangeDurationType:
        $ref: '#/definitions/DurationFieldType'
    type: object
  DateTimeZone:
    properties:
      fixed:
        default: false
        type: boolean
      id:
        type: string
    type: object
  DisplaySettingExtension:
    description: Event's display settings extension
    properties:
      softLanding:
        default: false
        description: True the landing is Soft otherwise it's Comingled
        type: boolean
    type: object
  Dma:
    description: DMA (Designated Market Area)
    properties:
      id:
        description: DMS's id
        format: int32
        type: integer
    type: object
  DurationField:
    properties:
      name:
        type: string
      precise:
        default: false
        type: boolean
      supported:
        default: false
        type: boolean
      type:
        $ref: '#/definitions/DurationFieldType'
      unitMillis:
        format: int64
        type: integer
    type: object
  DurationFieldType:
    properties:
      name:
        type: string
    type: object
  EndDates:
    description: Event's End Dates
    properties:
      approximate:
        default: false
        description: Boolean flag to indicate whether or not the end date is approximated
        type: boolean
        x-position: 3
      dateTime:
        description: The event end date time
        example: yyyy-MM-ddThh-mm-ssZ
        format: date-time
        type: string
        x-position: 2
      localDate:
        description: The event end date in local date
        example: yyyy-MM-dd
        format: date
        type: string
      localTime:
        $ref: '#/definitions/LocalTime'
      noSpecificTime:
        default: false
        description: >-
          Boolean flag to indicate whether or not the event end time has no
          specific time
        type: boolean
        x-position: 4
    type: object
  EntityChanges:
    properties:
      changes:
        items:
          type: string
        type: array
        uniqueItems: true
      newlyCreated:
        default: false
        type: boolean
    type: object
  Event:
    description: Event
    properties:
      accessibility:
        $ref: '#/definitions/Accessibility'
      additionalInfo:
        description: Additional information of the entity
        type: string
        x-position: 22
      classifications:
        description: Event's classifications
        items:
          $ref: '#/definitions/Classification'
        type: array
        x-position: 50
      dates:
        $ref: '#/definitions/EventDates'
      description:
        description: Description's of the entity
        type: string
        x-position: 20
      distance:
        format: double
        type: number
      externalLinks:
        additionalProperties:
          items:
            $ref: '#/definitions/ExternalLink'
          type: array
        description: List of external links
        type: object
        x-position: 79
      id:
        description: Unique id of the entity in the discovery API
        type: string
        x-position: 1
      images:
        description: Images of the entity
        items:
          $ref: '#/definitions/Image'
        type: array
        uniqueItems: true
        x-position: 29
      info:
        description: Any information related to the event
        type: string
        x-position: 32
      locale:
        description: Locale in which the content is returned
        type: string
        x-position: 3
      location:
        $ref: '#/definitions/Location'
      name:
        description: Name of the entity
        type: string
        x-position: 10
      outlets:
        description: Related outlets informations
        items:
          $ref: '#/definitions/Outlet'
        type: array
        x-position: 37
      place:
        $ref: '#/definitions/Place'
      pleaseNote:
        description: Any notes related to the event
        type: string
        x-position: 34
      priceRanges:
        description: Price ranges of this event
        items:
          $ref: '#/definitions/PriceRange'
        type: array
        uniqueItems: true
        x-position: 36
      products:
        description: Related products informations
        items:
          $ref: '#/definitions/Product'
        type: array
        x-position: 38
      promoter:
        $ref: '#/definitions/Promoter'
      promoters:
        description: Event's promoters
        items:
          $ref: '#/definitions/Promoter'
        type: array
        x-position: 37
      sales:
        $ref: '#/definitions/EventSalesDates'
      seatmap:
        $ref: '#/definitions/SeatMap'
      test:
        default: false
        description: >-
          Indicate if this is a test entity, by default test entities won't
          appear in discovery API
        type: boolean
        x-position: 96
      type:
        description: Type of the entity
        enum:
          - event
          - venue
          - attraction
        type: string
      units:
        type: string
      url:
        description: URL of a web site detail page of the entity
        type: string
        x-position: 24
    required:
      - id
      - type
    type: object
  EventDates:
    description: Event's Dates
    properties:
      access:
        $ref: '#/definitions/AccessDates'
      end:
        $ref: '#/definitions/EndDates'
      spanMultipleDays:
        default: false
        description: Flag indicating if date spans of multiple days
        type: boolean
        x-position: 5
      start:
        $ref: '#/definitions/StartDates'
      status:
        $ref: '#/definitions/EventStatus'
      timezone:
        description: Event's timezone
        type: string
        x-position: 3
    type: object
  EventExtensions:
    description: All Event's extensions
    type: object
  EventImages:
    description: This class defines an Event with only images view on the Discovery API
    properties:
      id:
        description: Unique id of the entity in the discovery API
        type: string
        x-position: 1
      images:
        description: Images of the entity
        items:
          $ref: '#/definitions/Image'
        type: array
        uniqueItems: true
        x-position: 2
      type:
        description: Type of the entity
        enum:
          - event
        type: string
    required:
      - id
      - type
    type: object
  EventSalesDates:
    description: Event's Sales Dates
    properties:
      presales:
        description: Presale information on this event
        items:
          $ref: '#/definitions/Presale'
        type: array
        x-position: 1
      public:
        $ref: '#/definitions/PublicSaleDates'
    type: object
  EventStatus:
    description: Event's Status
    properties:
      code:
        description: The event's status code
        enum:
          - onsale
          - offsale
          - canceled
          - postponed
          - rescheduled
        type: string
    type: object
  Extension:
    type: object
  ExternalLink:
    description: ExternalLink
    properties:
      id:
        description: >-
          An external link id is the unique identifier of a resource on a
          different domain or api
        type: string
        x-position: 2
      url:
        description: An external link url is a url that goes to a different domain or api
        type: string
        x-position: 2
    type: object
  Genre:
    description: Secondary Genre
    properties:
      id:
        description: The ID of the classification's level
        type: string
      name:
        description: The Name of the classification's level
        type: string
        x-position: 1
    type: object
  GeocodeExtension:
    properties:
      city:
        type: string
      country:
        type: string
      county:
        type: string
      formattedAddress:
        type: string
      geometry:
        $ref: '#/definitions/Geometry'
      postalCode:
        type: string
      route:
        type: string
      state:
        type: string
      streetNumber:
        type: string
    type: object
  GeolocationVenueExtensions:
    description: Venue's geocode extension
    properties:
      geocode:
        $ref: '#/definitions/GeocodeExtension'
    type: object
  Geometry:
    properties:
      location:
        $ref: '#/definitions/Location'
    type: object
  HostExtension:
    description: Event's Host extension
    type: object
  Image:
    description: Image
    properties:
      attribution:
        description: Attribution of the image
        type: string
        x-position: 8
      fallback:
        default: false
        description: true if the image is not the event's image but a fallbak image
        type: boolean
        x-position: 6
      height:
        description: Height of the image
        format: int32
        type: integer
        x-position: 5
      ratio:
        description: Aspect ratio of the image
        enum:
          - 169
          - 32
          - 43
        type: string
        x-position: 3
      url:
        description: Public URL of the image
        type: string
        x-position: 2
      width:
        description: Width of the image
        format: int32
        type: integer
        x-position: 4
    type: object
  Level:
    properties:
      id:
        description: The ID of the classification's level
        type: string
      name:
        description: The Name of the classification's level
        type: string
        x-position: 1
    type: object
  LocalTime:
    properties:
      chronology:
        $ref: '#/definitions/Chronology'
      fieldTypes:
        items:
          $ref: '#/definitions/DateTimeFieldType'
        type: array
      fields:
        items:
          $ref: '#/definitions/DateTimeField'
        type: array
      hourOfDay:
        format: int32
        type: integer
      millisOfDay:
        format: int32
        type: integer
      millisOfSecond:
        format: int32
        type: integer
      minuteOfHour:
        format: int32
        type: integer
      secondOfMinute:
        format: int32
        type: integer
      values:
        items:
          format: int32
          type: integer
        type: array
    type: object
  Locale:
    properties:
      country:
        type: string
      displayCountry:
        type: string
      displayLanguage:
        type: string
      displayName:
        type: string
      displayScript:
        type: string
      displayVariant:
        type: string
      extensionKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      iso3Country:
        type: string
      iso3Language:
        type: string
      language:
        type: string
      script:
        type: string
      unicodeLocaleAttributes:
        items:
          type: string
        type: array
        uniqueItems: true
      unicodeLocaleKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      variant:
        type: string
    type: object
  Location:
    description: Location
    properties:
      latitude:
        description: Latitude
        type: number
      longitude:
        description: Longitude
        type: number
    type: object
  Market:
    description: Market
    properties:
      id:
        description: Market's id
        type: string
    type: object
  Outlet:
    description: A selling point for tickets.
    properties:
      type:
        description: Outlet's type
        type: string
        x-position: 2
      url:
        description: Outlet's url
        type: string
        x-position: 1
    type: object
  Parking:
    description: Parking
    properties:
      name:
        description: Name of the entity
        type: string
        x-position: 10
      url:
        description: Url to the web page of the parking
        type: string
        x-position: 20
    type: object
  Place:
    description: Place
    properties:
      address:
        $ref: '#/definitions/Address'
      area:
        $ref: '#/definitions/Area'
      city:
        $ref: '#/definitions/City'
      country:
        $ref: '#/definitions/Country'
      location:
        $ref: '#/definitions/Location'
      name:
        description: Name of the entity
        type: string
        x-position: 10
      postalCode:
        description: Postal code / zipcode of the place
        type: string
        x-position: 5
      state:
        $ref: '#/definitions/State'
    type: object
  Presale:
    description: Event's Presale Info
    properties:
      description:
        description: Description of the presame
        type: string
        x-position: 1
      endDateTime:
        description: Presale's end dates. The date and time when the presale will end
        format: date-time
        type: string
        x-position: 5
      name:
        description: Name of the presale
        type: string
      startDateTime:
        description: Presale's start dates. The date and time when the presale will start
        format: date-time
        type: string
        x-position: 4
      url:
        description: Presale link URL
        type: string
        x-position: 3
    type: object
  PriceRange:
    description: PriceRange
    properties:
      currency:
        description: Currency
        type: string
        x-position: 1
      max:
        description: Maximum price
        format: double
        type: number
        x-position: 3
      min:
        description: Minimum price
        format: double
        type: number
        x-position: 2
      type:
        description: Type of price
        enum:
          - standard
        type: string
    type: object
  Product:
    description: Product
    properties:
      id:
        description: Product's primary id
        type: string
        x-position: 10
      name:
        description: Name of the entity
        type: string
        x-position: 10
      type:
        description: Product's type
        type: string
        x-position: 13
      url:
        description: Product's url
        type: string
        x-position: 12
    type: object
  Promoter:
    description: Promoter
    properties:
      description:
        description: Description of the promoter
        type: string
        x-position: 3
      id:
        description: Id of the promoter
        type: string
      name:
        description: Name of the promoter
        type: string
        x-position: 1
    type: object
  PublicSaleDates:
    description: Event's Public Onsales Dates
    properties:
      endDateTime:
        description: >-
          Public sale's end dates. The date and time when the public sale will
          end
        format: date-time
        type: string
        x-position: 1
      startDateTime:
        description: >-
          Public sale's start dates. The date and time when the public sale will
          start
        format: date-time
        type: string
      startTBD:
        default: false
        description: True if the public sale's date is to be determined
        type: boolean
        x-position: 2
    type: object
  PublicVisibility:
    description: >-
      The class defines the public visibility period on the Discovery/Publish
      API.
    type: object
  Relationship:
    description: Relationship
    properties:
      id:
        description: The ID of the related entity
        type: string
        x-position: 2
      references:
        additionalProperties:
          type: string
        description: >-
          References of this relationship in another system. Reference is the
          exact same entity
        example: 'sourceName: id'
        type: object
        x-position: 3
      source:
        description: The source name of the related entity
        type: string
        x-position: 1
      type:
        description: The type of the relationship
        enum:
          - duplicate
        type: string
    type: object
  SeatMap:
    description: Seatmap
    properties:
      staticUrl:
        description: Static Seatmap Url
        type: string
        x-position: 3
    type: object
  Segment:
    description: Segment
    properties:
      id:
        description: The ID of the classification's level
        type: string
      name:
        description: The Name of the classification's level
        type: string
        x-position: 1
    type: object
  Social:
    description: Social networks data
    properties:
      twitter:
        $ref: '#/definitions/Twitter'
    type: object
  Source:
    description: Source
    type: object
  StartDates:
    description: Event's Start Dates
    properties:
      dateTBA:
        default: false
        description: Boolean flag to indicate whether or not the start date is TBA
        type: boolean
        x-position: 4
      dateTBD:
        default: false
        description: Boolean flag to indicate whether or not the start date is TBD
        type: boolean
        x-position: 3
      dateTime:
        description: The event start datetime
        example: 'yyyy-MM-ddThh:mm:ssZ'
        format: date-time
        type: string
        x-position: 2
      localDate:
        description: The event start date in local date
        example: yyyy-MM-dd
        format: date
        type: string
      localTime:
        $ref: '#/definitions/LocalTime'
      noSpecificTime:
        default: false
        description: >-
          Boolean flag to indicate whether or not the event start time has no
          specific time
        type: boolean
        x-position: 6
      timeTBA:
        default: false
        description: Boolean flag to indicate whether or not the start time is TBA
        type: boolean
        x-position: 5
    type: object
  State:
    description: State
    properties:
      name:
        description: Name of the entity
        type: string
        x-position: 10
      stateCode:
        description: State code
        type: string
    type: object
  TatExtension:
    description: The Attraction Tool (TAT) extension
    type: object
  TicketmasterAttractionExtensions:
    description: Attraction's extension (ticketmaster source)
    type: object
  TicketmasterEventExtensions:
    description: Event's extension (ticketmaster source)
    properties:
      displaySettings:
        $ref: '#/definitions/DisplaySettingExtension'
    type: object
  TicketmasterVenueExtensions:
    description: Venue's extension (ticketmaster source)
    type: object
  Twitter:
    description: Twitter data
    properties:
      handle:
        description: Twitter handle
        enum:
          - '@a Twitter handle'
        example: '@a Twitter handle exampe'
        type: string
      hashtags:
        description: Twitter hashtags
        example: '#hashtag example #hashtag another example'
        items:
          type: string
        type: array
        x-position: 1
    type: object
  Venue:
    description: Venue
    properties:
      accessibleSeatingDetail:
        description: Venue accessible seating detail
        type: string
        x-position: 35
      additionalInfo:
        description: Additional information of the entity
        type: string
        x-position: 22
      address:
        $ref: '#/definitions/Address'
      boxOfficeInfo:
        $ref: '#/definitions/VenueBoxOfficeInfo'
      city:
        $ref: '#/definitions/City'
      country:
        $ref: '#/definitions/Country'
      currency:
        description: Default currency of ticket prices for events in this venue
        type: string
        x-position: 27
      description:
        description: Description's of the entity
        type: string
        x-position: 20
      distance:
        format: double
        type: number
      dma:
        description: The list of associated DMAs (Designated Market Areas) of the venue
        items:
          $ref: '#/definitions/Dma'
        type: array
        x-position: 29
      externalLinks:
        additionalProperties:
          items:
            $ref: '#/definitions/ExternalLink'
          type: array
        description: List of external links
        type: object
        x-position: 79
      generalInfo:
        $ref: '#/definitions/VenueGeneralInfo'
      id:
        description: Unique id of the entity in the discovery API
        type: string
        x-position: 1
      images:
        description: Images of the entity
        items:
          $ref: '#/definitions/Image'
        type: array
        uniqueItems: true
        x-position: 29
      locale:
        description: Locale in which the content is returned
        type: string
        x-position: 3
      location:
        $ref: '#/definitions/Location'
      markets:
        description: Markets of the venue
        items:
          $ref: '#/definitions/Market'
        type: array
        x-position: 28
      name:
        description: Name of the entity
        type: string
        x-position: 10
      parkingDetail:
        description: Venue parking info
        type: string
        x-position: 33
      postalCode:
        description: Postal code / zipcode of the venue
        type: string
        x-position: 24
      social:
        $ref: '#/definitions/Social'
      state:
        $ref: '#/definitions/State'
      test:
        default: false
        description: >-
          Indicate if this is a test entity, by default test entities won't
          appear in discovery API
        type: boolean
        x-position: 96
      timezone:
        description: Timezone of the venue
        type: string
        x-position: 26
      type:
        description: Type of the entity
        enum:
          - event
          - venue
          - attraction
        type: string
      units:
        type: string
      upcomingEvents:
        additionalProperties:
          format: int32
          type: integer
        description: number of upcoming events
        type: object
        x-position: 110
      url:
        description: URL of a web site detail page of the entity
        type: string
        x-position: 24
    required:
      - id
      - type
    type: object
  VenueBoxOfficeInfo:
    description: Venue box office information
    properties:
      acceptedPaymentDetail:
        description: Venue box office accepted payment details
        type: string
        x-position: 5
      openHoursDetail:
        description: Venue box office opening hours
        type: string
        x-position: 3
      phoneNumberDetail:
        description: Venue box office phone number
        type: string
        x-position: 1
      willCallDetail:
        description: Venue box office will call details
        type: string
        x-position: 7
    type: object
  VenueExtensions:
    description: All Venue's extensions
    properties:
      geolocation:
        $ref: '#/definitions/GeolocationVenueExtensions'
    type: object
  VenueGeneralInfo:
    description: Venue general information
    properties:
      childRule:
        description: Venue children rule
        type: string
        x-position: 3
      generalRule:
        description: Venue general rules
        type: string
        x-position: 1
    type: object
info:
  contact:
    url: 'http://developer.ticketmaster.com/support/contact-us/'
  description: >-
    The Ticketmaster Discovery API allows you to search for events, attractions,
    or venues.
  title: Discovery API
  version: v2
  x-apisguru-categories:
    - ecommerce
  x-origin:
    - format: swagger
      url: >-
        https://raw.githubusercontent.com/ticketmaster-api/ticketmaster-api.github.io/dev/_data/orgs/discovery-api/v2/api.json
      version: '2.0'
  x-providerName: ticketmaster.com
  x-serviceName: discovery
paths:
  /discovery/v2/attractions:
    get:
      description: >-
        Find attractions (artists, sports, packages, plays and so on) and filter
        your search by name, and much more.
      operationId: find
      parameters:
        - default: 'relevance,desc'
          description: >-
            Sorting order of the search result. Allowable Values : 'name,asc',
            'name,desc', 'relevance,asc', 'relevance,desc'
          in: query
          name: sort
          pattern: '^(name|relevance),(asc|desc)$'
          required: false
          type: string
          x-example: ''
        - collectionFormat: multi
          default: ''
          description: >-
            Filter attractions by classification name: name of any segment,
            genre, sub-genre, type, sub-type
          in: query
          items: {}
          name: classificationName
          required: false
          type: array
          x-example: ''
        - collectionFormat: multi
          default: ''
          description: >-
            Filter attractions by classification id: id of any segment, genre,
            sub-genre, type, sub-type
          in: query
          items: {}
          name: classificationId
          required: false
          type: array
          x-example: ''
        - default: ''
          description: Keyword to search on
          in: query
          name: keyword
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its id
          in: query
          name: id
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its source name
          enum:
            - ticketmaster
            - ' universe'
            - ' frontgate'
            - ' tmr'
          in: query
          name: source
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: >-
            True if you want to have entities flag as test in the response.
            Only, if you only wanted test entities
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTest
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: '0'
          description: Page number
          in: query
          minimum: 0
          name: page
          required: false
          type: string
          x-example: ''
        - default: '20'
          description: Page size of the response
          in: query
          maximum: 500
          minimum: 1
          name: size
          required: false
          type: string
          x-example: ''
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: Yes if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: 'yes, to include spell check suggestions in the response.'
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeSpellcheck
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Attraction'
            type: array
      summary: Attraction Search
  '/discovery/v2/attractions/{id}':
    get:
      description: >-
        Get details for a specific attraction using the unique identifier for
        the attraction.
      operationId: get
      parameters:
        - description: ID of the attraction
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Attraction'
      summary: Get Attraction Details
  /discovery/v2/classifications:
    get:
      description: >-
        Find classifications and filter your search by name, and much more.
        Classifications help define the nature of attractions and events.
      parameters:
        - default: 'name,asc'
          description: Sorting order of the search result
          in: query
          name: sort
          pattern: '^name,asc|name,desc$'
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Keyword to search on
          in: query
          name: keyword
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its id
          in: query
          name: id
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its source name
          enum:
            - ticketmaster
            - ' universe'
            - ' frontgate'
            - ' tmr'
          in: query
          name: source
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: >-
            True if you want to have entities flag as test in the response.
            Only, if you only wanted test entities
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTest
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: '0'
          description: Page number
          in: query
          minimum: 0
          name: page
          required: false
          type: string
          x-example: ''
        - default: '20'
          description: Page size of the response
          in: query
          maximum: 500
          minimum: 1
          name: size
          required: false
          type: string
          x-example: ''
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: Yes if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: 'yes, to include spell check suggestions in the response.'
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeSpellcheck
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Classification'
            type: array
      summary: Classification Search
  '/discovery/v2/classifications/genres/{id}':
    get:
      description: Get details for a specific genre using its unique identifier.
      operationId: getGenre
      parameters:
        - description: ID of the genre
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Genre'
      summary: Get Genre Details
  '/discovery/v2/classifications/segments/{id}':
    get:
      description: Get details for a specific segment using its unique identifier.
      operationId: getSegment
      parameters:
        - description: ID of the segment
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Segment'
      summary: Get Segment Details
  '/discovery/v2/classifications/subgenres/{id}':
    get:
      description: Get details for a specific sub-genre using its unique identifier.
      operationId: getSubgenre
      parameters:
        - description: ID of the subgenre
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Level'
      summary: Get Sub-Genre Details
  '/discovery/v2/classifications/{id}':
    get:
      description: >-
        Get details for a specific segment, genre, or sub-genre using its unique
        identifier.
      parameters:
        - description: 'ID of the segment, genre, or sub-genre'
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Classification'
      summary: Get Classification Details
  /discovery/v2/events:
    get:
      description: >-
        Find events and filter your search by location, date, availability, and
        much more.
      parameters:
        - default: 'relevance,desc'
          description: >-
            Sorting order of the search result. Allowable values : 'name,asc',
            'name,desc', 'date,asc', 'date,desc', 'relevance,asc',
            'relevance,desc', 'distance,asc', 'name,date,asc', 'name,date,desc',
            'date,name,asc', 'date,name,desc','onsaleStartDate,asc', 'id,asc'
          in: query
          name: sort
          pattern: >-
            ^((name|date|relevance|name,date|date,name),(asc|desc))|(distance,asc)|(onSaleStartDate,asc)|(id,asc)$
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with a start date after this date
          in: query
          name: startDateTime
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with a start date before this date
          in: query
          name: endDateTime
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with onsale start date after this date
          in: query
          name: onsaleStartDateTime
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with onsale start date on this date
          in: query
          name: onsaleOnStartDate
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with onsale range within this date
          in: query
          name: onsaleOnAfterStartDate
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events with onsale end date before this date
          in: query
          name: onsaleEndDateTime
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by city
          in: query
          name: city
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by country code
          in: query
          name: countryCode
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by state code
          in: query
          name: stateCode
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by postal code / zipcode
          in: query
          name: postalCode
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by venue id
          in: query
          name: venueId
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by attraction id
          in: query
          name: attractionId
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by segment id
          in: query
          name: segmentId
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by segment name
          in: query
          name: segmentName
          required: false
          type: string
          x-example: ''
        - collectionFormat: multi
          default: ''
          description: >-
            Filter events by classification name: name of any segment, genre,
            sub-genre, type, sub-type
          in: query
          items: {}
          name: classificationName
          required: false
          type: array
          x-example: ''
        - collectionFormat: multi
          default: ''
          description: >-
            Filter events by classification id: id of any segment, genre,
            sub-genre, type, sub-type
          in: query
          items: {}
          name: classificationId
          required: false
          type: array
          x-example: ''
        - default: ''
          description: Filter events by market id
          in: query
          name: marketId
          pattern: '^\s*$|^(\d+(,\d+)*)?$'
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by promoter id
          in: query
          name: promoterId
          pattern: '^\s*$|^(\d+(,\d+)*)?$'
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by dma id
          in: query
          name: dmaId
          pattern: '^\s*$|^(\d+(,\d+)*)?$'
          required: false
          type: string
          x-example: ''
        - default: 'no if date parameter sent, yes otherwise'
          description: 'True, to include events with date to be announce (TBA)'
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTBA
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: 'no if date parameter sent, yes otherwise'
          description: 'True, to include event with a date to be defined (TBD)'
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTBD
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events by clientName
          in: query
          name: clientVisibility
          required: false
          type: string
          x-example: ''
        - default: ''
          description: >-
            Filter events by latitude and longitude, this filter is deprecated
            and maybe removed in a future release, please use geoPoint instead
          in: query
          name: latlong
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$
          required: false
          type: string
          x-example: '33.80003000,-117.88304300'
        - default: '50'
          description: Radius of the area in which we want to search for events.
          in: query
          name: radius
          pattern: '^\s*$|^0*1?\d{1,4}$'
          required: false
          type: string
          x-example: ''
        - default: miles
          description: Unit of the radius
          enum:
            - miles
            - km
          in: query
          name: unit
          pattern: ^\s*|miles|km$
          required: false
          type: string
          x-example: ''
        - default: ''
          description: filter events by geoHash
          in: query
          name: geoPoint
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$|^[a-zA-Z0-9]{1,9}$
          required: false
          type: string
          x-example: dr5rh
        - default: ''
          description: Keyword to search on
          in: query
          name: keyword
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its id
          in: query
          name: id
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its source name
          enum:
            - ticketmaster
            - ' universe'
            - ' frontgate'
            - ' tmr'
          in: query
          name: source
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: >-
            True if you want to have entities flag as test in the response.
            Only, if you only wanted test entities
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTest
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: '0'
          description: Page number
          in: query
          minimum: 0
          name: page
          required: false
          type: string
          x-example: ''
        - default: '20'
          description: Page size of the response
          in: query
          maximum: 500
          minimum: 1
          name: size
          required: false
          type: string
          x-example: ''
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: Yes if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: 'yes, to include spell check suggestions in the response.'
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeSpellcheck
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
      summary: Event Search
  '/discovery/v2/events/{id}':
    get:
      description: >-
        Get details for a specific event using the unique identifier for the
        event. This includes the venue and location, the attraction(s), and the
        Ticketmaster Website URL for purchasing tickets for the event.
      parameters:
        - description: ID of the event
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Event'
      summary: Get Event Details
  '/discovery/v2/events/{id}/images':
    get:
      description: >-
        Get images for a specific event using the unique identifier for the
        event.
      operationId: getImages
      parameters:
        - description: ID of the event
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventImages'
      summary: Get Event Images
  /discovery/v2/suggest:
    get:
      description: >-
        Find search suggestions and filter your suggestions by location, source,
        etc.
      parameters:
        - default: ''
          description: Keyword to search on
          in: query
          name: keyword
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its source name
          enum:
            - ticketmaster
            - ' universe'
            - ' frontgate'
            - ' tmr'
          in: query
          name: source
          required: false
          type: string
          x-example: ''
        - default: ''
          description: >-
            Filter events by latitude and longitude, this filter is deprecated
            and maybe removed in a future release, please use geoPoint instead
          in: query
          name: latlong
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$
          required: false
          type: string
          x-example: '33.80003000,-117.88304300'
        - default: '100'
          description: Radius of the area in which we want to search for events.
          in: query
          name: radius
          pattern: '^\s*$|^0*1?\d{1,4}$'
          required: false
          type: string
          x-example: ''
        - default: miles
          description: Unit of the radius
          enum:
            - miles
            - km
          in: query
          name: unit
          pattern: ^\s*|miles|km$
          required: false
          type: string
          x-example: ''
        - default: '5'
          description: Size of every entity returned in the response
          in: query
          maximum: 5
          minimum: 1
          name: size
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: >-
            yes, to include fuzzy matches in the search. This has performance
            impact.
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeFuzzy
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter events to clientName
          in: query
          name: clientVisibility
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter suggestions by country code
          in: query
          name: countryCode
          required: false
          type: string
          x-example: ''
        - default: 'no if date parameter sent, yes otherwise'
          description: 'True, to include events with date to be announce (TBA)'
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTBA
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: 'no if date parameter sent, yes otherwise'
          description: 'True, to include event with a date to be defined (TBD)'
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTBD
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter suggestions by segment id
          in: query
          name: segmentId
          required: false
          type: string
          x-example: ''
        - default: ''
          description: filter events by geoHash
          in: query
          name: geoPoint
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$|^[a-zA-Z0-9]{1,9}$
          required: false
          type: string
          x-example: dr5rh
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: Yes if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: 'yes, to include spell check suggestions in the response.'
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeSpellcheck
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
      produces:
        - application/hal+json; charset=utf-8
        - application/json; charset=utf-8
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      summary: Find Suggest
      tags:
        - v2
  /discovery/v2/venues:
    get:
      description: 'Find venues and filter your search by name, and much more.'
      parameters:
        - default: 'relevance,desc'
          description: >-
            Sorting order of the search result. Allowable Values: 'name,asc',
            'name,desc', 'relevance,asc', 'relevance,desc', 'distance,asc',
            'distance,desc'
          in: query
          name: sort
          pattern: '^(name|relevance|distance),(asc|desc)$'
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter venues by state / province code
          in: query
          name: stateCode
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter venues by country code
          in: query
          name: countryCode
          required: false
          type: string
          x-example: ''
        - default: ''
          description: >-
            Filter events by latitude and longitude, this filter is deprecated
            and maybe removed in a future release, please use geoPoint instead
          in: query
          name: latlong
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$
          required: false
          type: string
          x-example: '33.80003000,-117.88304300'
        - default: '50'
          description: Radius of the area in which we want to search for events.
          in: query
          name: radius
          pattern: '^\s*$|^0*1?\d{1,4}$'
          required: false
          type: string
          x-example: ''
        - default: miles
          description: Unit of the radius
          enum:
            - miles
            - km
          in: query
          name: unit
          pattern: ^\s*|miles|km$
          required: false
          type: string
          x-example: ''
        - default: ''
          description: filter events by geoHash
          in: query
          name: geoPoint
          pattern: >-
            ^\s*$|^-?(90(\.0+)?|[0-8]?[0-9](\.\d+)?),-?(180(\.0+)?|(1[0-7][0-9]|\d{1,2})(\.\d+)?)$|^[a-zA-Z0-9]{1,9}$
          required: false
          type: string
          x-example: dr5rh
        - default: ''
          description: Keyword to search on
          in: query
          name: keyword
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its id
          in: query
          name: id
          required: false
          type: string
          x-example: ''
        - default: ''
          description: Filter entities by its source name
          enum:
            - ticketmaster
            - ' universe'
            - ' frontgate'
            - ' tmr'
          in: query
          name: source
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: >-
            True if you want to have entities flag as test in the response.
            Only, if you only wanted test entities
          enum:
            - 'yes'
            - ' no'
            - ' only'
          in: query
          name: includeTest
          pattern: ^\s*|yes|no|only$
          required: false
          type: string
          x-example: ''
        - default: '0'
          description: Page number
          in: query
          minimum: 0
          name: page
          required: false
          type: string
          x-example: ''
        - default: '20'
          description: Page size of the response
          in: query
          maximum: 500
          minimum: 1
          name: size
          required: false
          type: string
          x-example: ''
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: Yes if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
        - default: 'no'
          description: 'yes, to include spell check suggestions in the response.'
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeSpellcheck
          pattern: ^\s*|yes|no
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Venue'
            type: array
      summary: Venue Search
  '/discovery/v2/venues/{id}':
    get:
      description: >-
        Get details for a specific venue using the unique identifier for the
        venue.
      parameters:
        - description: ID of the venue
          in: path
          name: id
          required: true
          type: string
        - default: en
          description: >-
            The locale in ISO code format. Multiple comma-separated values can
            be provided. When omitting the country part of the code (e.g. only
            'en' or 'fr') then the first matching locale is used. When using a
            '*' it matches all locales. '*' can only be used at the end (e.g.
            'en-us,en,*') 
          in: query
          name: locale
          required: false
          type: string
          x-example: 'en-us,en,fr'
        - default: 'no'
          description: True if you want to display licensed content
          enum:
            - 'yes'
            - ' no'
          in: query
          name: includeLicensedContent
          pattern: ^\s*|yes|no$
          required: false
          type: string
          x-example: ''
      produces:
        - application/octet-stream
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Venue'
      summary: Get Venue Details
swagger: '2.0'
tags:
  - name: v2
x-components: {}

