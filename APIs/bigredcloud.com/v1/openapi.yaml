basePath: /API
definitions:
  AcEntryDto:
    properties:
      accountCode:
        type: string
      analysisCategoryId:
        format: int64
        type: integer
      description:
        type: string
      id:
        format: int64
        type: integer
      value:
        format: double
        type: number
    type: object
  AccountDto:
    properties:
      accountGroup:
        type: string
      accountType:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  AccountTranDto:
    properties:
      bookTranId:
        format: int64
        type: integer
      bookTranTypeId:
        format: int64
        type: integer
      bookTransactionReference:
        type: string
      bookTypeDesc:
        type: string
      credit:
        format: double
        type: number
      debit:
        format: double
        type: number
      id:
        format: int64
        type: integer
      procDate:
        format: date-time
        type: string
    type: object
  AcudfValueDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
      userDefinedFieldId:
        format: int64
        type: integer
      value:
        type: string
    type: object
  AnalysisCategoryDto:
    properties:
      accountCode:
        type: string
      accountId:
        format: int64
        type: integer
      categoryTypeId:
        format: int64
        type: integer
      description:
        type: string
      id:
        format: int64
        type: integer
      orderIndex:
        format: int32
        type: integer
    type: object
  BankAccountDto:
    example:
      acCode: B1
      accountName: ''
      accountNumber: '83700896'
      address:
        - Address Line 1
        - Address Line 2
      bankFeedSource: 0
      businessIdentifierCodes: AIBKIE2D
      categoryId: 41704
      creditorScheme: XXXX
      details: Bank_1
      id: 1
      internationalBankAccountNumber: IE67 BOFI 9027 0925 7277 59
      isDefaultBank: false
      lastChq: '000005'
      nominalAcCode: B101
      oBalance: 0
      sortCode: '900284'
      timestamp: QUFBQUFBQUFDcXc9
    properties:
      acCode:
        type: string
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      bankFeedSource:
        format: int32
        type: integer
      businessIdentifierCodes:
        type: string
      categoryId:
        format: int64
        type: integer
      creditorScheme:
        type: string
      details:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      isDefaultBank:
        type: boolean
      lastChq:
        type: string
      nominalAcCode:
        type: string
      oBalance:
        format: double
        type: number
      sortCode:
        type: string
      timestamp:
        format: byte
        type: string
    type: object
  BankAccountQueryDto:
    properties:
      acCode:
        type: string
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      bankFeedSource:
        format: int32
        type: integer
      businessIdentifierCodes:
        type: string
      categoryId:
        format: int64
        type: integer
      creditorScheme:
        type: string
      details:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      isDefaultBank:
        type: boolean
      lastChq:
        type: string
      nominalAcCode:
        type: string
      sortCode:
        type: string
      timestamp:
        format: byte
        type: string
    type: object
  BatchItem_BankAccountDto_:
    example:
      item:
        acCode: B1
        accountName: ''
        accountNumber: '83700896'
        address:
          - Address Line 1
          - Address Line 2
        bankFeedSource: 0
        businessIdentifierCodes: AIBKIE2D
        categoryId: 41704
        creditorScheme: XXXX
        details: Bank_111111111111111111
        id: 1
        internationalBankAccountNumber: IE67 BOFI 9027 0925 7277 59
        isDefaultBank: false
        lastChq: '000005'
        nominalAcCode: B101
        oBalance: 0
        sortCode: '900284'
        timestamp: QUFBQUFBQUFDcXc9
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/BankAccountDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_CashPaymentDto_:
    example:
      item:
        acEntries:
          - accountCode: CP01
            analysisCategoryId: 10433
            description: Cash Pay 01
            id: 62741
            value: 200
        bankAccountCode: BAK2
        bankAccountId: 11111
        bookTranTypeId: 2
        customFields: []
        detailCollection:
          - test
        discount: 0
        entryDate: '2017-07-01T00:00:00.000Z'
        id: 12345
        ledger: 100
        lodgement: 0
        note: Supplier 1
        procDate: '2017-07-26T00:00:00.000Z'
        supplierId: 70599
        timestamp: JwU7eRlm2Qg=
        total: 100
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/CashPaymentDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_CashReceiptDto_:
    example:
      item:
        acEntries:
          - accountCode: '000'
            analysisCategoryId: 1
            description: AnCat1
            id: 1
            value: 30
        bookTranTypeId: 1
        customFields:
          - description: acudf_1
            id: 1
            userDefinedFieldId: 1
            value: acudfv_1
        detailCollection:
          - det_1
          - det_2
          - det_3
        discount: 0
        entryDate: '2011-01-01T00:00:00.000Z'
        id: 1
        ledger: 0
        note: note1
        procDate: '2011-01-05T00:00:00.000Z'
        timestamp: Usc/eRlm2Qg=
        total: 50
        unallocated: 0
        vatEntries:
          - amount: 50
            id: 1
            percentage: 15
            vatRateId: 1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/CashReceiptDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_CustomerDto_:
    example:
      item:
        accountName: ''
        accountNumber: '12345678'
        address:
          - Address Line 1
          - Address Line 2
        authCode: VATEXCODE222
        bank:
          branch: Bank
          id: 1
          name: bank Name
          sortCode: B01
        businessIdentifierCode: AIBI02
        code: '12345678'
        contact: John Smith
        delivery:
          - Delivery 1
          - Delivery 2
        eFTReference: Reference
        email: customer@email.com
        fax: '1234567890'
        id: 10589
        internationalBankAccountNumber: '1233432532'
        mobile: '1234567890'
        name: Customer Name 1
        ourCode: OURCODE111
        ownerTypeId: 1
        phone: '1234596970'
        timestamp: hu5GeRlm2Qg=
        vatAnalysisTypeId: 1
        vatReg: VATCODE0001
        vatType: 2
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/CustomerDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_PaymentDto_:
    example:
      item:
        acCode: C1
        acEntries: []
        bankAccountCode: B1
        bankAccountId: 1
        bookTranTypeId: 3
        customFields:
          - description: F1
            id: 1
            userDefinedFieldId: 1
            value: f1
          - description: F2
            id: 2
            userDefinedFieldId: 2
            value: f2
        detailCollection:
          - d1
          - d2
        discount: 2
        entryDate: '2011-07-01T00:00:00.000Z'
        id: 2
        note: '123'
        procDate: '2011-08-08T00:00:00.000Z'
        reference: '000002'
        supplierId: 2
        timestamp: +TtVeRlm2Qg=
        total: 155
        transferBankCode: ''
        transferBankId: 1
        unallocated: 155
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/PaymentDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_ProductDto_:
    example:
      item:
        details:
          - det1
          - det2
          - det3
        grossUnitPrice: false
        hasDefaultVatRate: false
        id: 9
        stockCode: PRO1
        timestamp: aZ5XeRlm2Qg=
        unitPrice: 100
        vatAnalysisTypeId: 1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/ProductDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_PurchaseDto_:
    example:
      item:
        acCode: SUP3
        acEntries:
          - accountCode: PU03
            analysisCategoryId: 10441
            description: PUR 3
            id: 12518
            value: 90.91
        bookTranTypeId: 4
        customFields: []
        detailCollection: []
        entryDate: '2016-06-01T00:00:00.000Z'
        id: 13380
        netGoods: 0
        netServices: 0
        note: Supplier 3
        procDate: '2016-06-24T00:00:00.000Z'
        reference: '000001'
        supplierId: 10173
        timestamp: 7mNceRlm2Qg=
        total: 100
        totalNet: 90.91
        totalVAT: 9.09
        unallocated: 100
        unpaid: 100
        vatEntries:
          - amount: 90.91
            id: 12267
            percentage: 10
            vatRateId: 10317
        vatTypeId: 1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/PurchaseDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_QuoteDto_:
    example:
      item:
        comments: Sample
        companyId: 40449
        customerOwnerId: 70583
        customerOwnerName: Customer 1
        ddNumber: Sample
        entryDate: '2017-01-01T00:00:00.000Z'
        id: 1
        layoutType: 1
        poNumber: Sample
        procDate: '2017-01-05T00:00:00.000Z'
        productTrans:
          - acEntries:
              - accountCode: sample
                analysisCategoryId: 40888
                companyId: 40449
                id: 1
                quoteProductTranId: 40277
                value: 100
            amount: 10
            companyId: 40449
            id: 40277
            percentage: 0
            productCode: PRO1
            productId: 20107
            quantity: 1
            tranNotes:
              - Product
            unitPrice: 100
            vatAmount: 10
            vatAnalysisTypeId: 0
            vatRateId: 30657
        reference: '000032'
        saleInvoiceId: 30044
        saleRepId: 75783
        timeStamp: 5SdheRlm2Qg=
        total: 110
        totalNet: 100
        totalVat: 10
        vatTypeId: 1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/QuoteDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_SaleRepsDto_:
    example:
      item:
        code: SR0001
        companyId: 123456
        email: example@gmail.com
        id: 1
        name: Sales Rep 1
        phone: '1234567890'
        timeStamp: WnZveRlm2Qg=
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/SaleRepsDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_SalesEntryDto_:
    example:
      item:
        acCode: code
        acEntries:
          - accountCode: SA01
            analysisCategoryId: 40888
            description: SAL 1
            id: 73450
            value: 636.36
        bookTranTypeId: 5
        customFields:
          - description: acudf_1
            id: 1
            userDefinedFieldId: 1
            value: acudfv_1
          - description: acudf_2
            id: 2
            userDefinedFieldId: 1
            value: acudfv_2
        customerId: 70583
        details: detail_1
        entryDate: '2011-01-01T00:00:00.000Z'
        id: 1
        netGoods: 0
        netServices: 0
        note: Customer 1
        procDate: '2011-01-01T00:00:00.000Z'
        reference: '000001'
        timestamp: LRRteRlm2Qg=
        total: 700
        totalNet: 636.36
        totalVAT: 63.64
        unpaid: 0
        vatEntries:
          - amount: 636.36
            id: 63649
            percentage: 10
            vatRateId: 30657
        vatTypeId: 1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/SalesEntryDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_SalesInvoiceCreditNoteDto_:
    example:
      item:
        acCode: CUS3
        bookTranTypeId: 7
        customFields:
          - description: acudf_1
            id: 1
            userDefinedFieldId: 1
            value: acudfv_1
          - description: acudf_2
            id: 2
            userDefinedFieldId: 1
            value: acudfv_2
        customerId: 70585
        deliveryTo:
          - dt_1
          - dt_2
        details: detail_1
        entryDate: '2016-06-01T00:00:00.000Z'
        id: 75813
        loType: '1'
        note: Customer 3
        ourReference: ddNumber_1
        procDate: '2016-06-24T00:00:00.000Z'
        productTrans:
          - acEntries:
              - accountCode: SA02
                analysisCategoryId: 40889
                description: AnCat1
                id: 73455
                value: -200
            amount: -220
            amountNet: -200
            id: 51820
            percentage: 10
            productCode: PRO2
            productId: 20108
            quantity: -1
            tranNotes:
              - tn_1
              - tn_2
            unitPrice: 200
            vat: -20
            vatAnalysisTypeId: 0
            vatRateId: 30657
        reference: '000001'
        saleRepId: 33110
        timestamp: LRRteRlm2Qg=
        total: -220
        totalNet: -200
        totalVAT: -20
        unpaid: -220
        vatTypeId: 1
        yourReference: poNumber_1
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BatchItem_SupplierDto_:
    example:
      item:
        accountName: Supplier Bank Acc
        accountNumber: '12345678'
        address:
          - Address Line 1
          - Address Line 2
        authCode: VATEXCODE222
        bank:
          branch: Bank
          id: 1
          name: bank Name
          sortCode: B01
        code: S001
        contact: John Smith
        eFTReference: Reference
        email: supplier@email.com
        fax: '1234567890'
        id: 10589
        mobile: '1234567890'
        name: Supplier Name
        ourCode: OURCODE111
        ownerTypeId: 3
        phone: '1234596970'
        postponedAccounting: false
        timestamp: dzp0eRlm2Qg=
        vatAnalysisTypeId: 1
        vatReg: VATCODE0001
        vatType: 2
      opCode: 1
    properties:
      item:
        $ref: '#/definitions/SupplierDto'
      opCode:
        description: "1 - Create\r\n2 - Update\r\n3 - Delete"
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  BookTranTypeDto:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  CashPaymentDto:
    example:
      acEntries:
        - accountCode: CP01
          analysisCategoryId: 10433
          description: Cash Pay 01
          id: 62741
          value: 200
      bankAccountCode: BAK2
      bankAccountId: 11111
      bookTranTypeId: 2
      customFields: []
      detailCollection:
        - test
      discount: 0
      entryDate: '2017-07-01T00:00:00.000Z'
      id: 12345
      ledger: 100
      lodgement: 0
      note: Supplier 1
      procDate: '2017-07-26T00:00:00.000Z'
      supplierId: 70599
      timestamp: JwU7eRlm2Qg=
      total: 100
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bankAccountCode:
        type: string
      bankAccountId:
        format: int64
        type: integer
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      ledger:
        format: double
        type: number
      lodgement:
        format: double
        type: number
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
    type: object
  CashPaymentQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bankAccountCode:
        type: string
      bankAccountId:
        format: int64
        type: integer
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      ledger:
        format: double
        type: number
      lodgement:
        format: double
        type: number
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      unallocated:
        format: double
        type: number
    type: object
  CashReceiptDto:
    example:
      acEntries:
        - accountCode: '000'
          analysisCategoryId: 1
          description: AnCat1
          id: 1
          value: 30
      bookTranTypeId: 1
      customFields:
        - description: acudf_1
          id: 1
          userDefinedFieldId: 1
          value: acudfv_1
      detailCollection:
        - det_1
        - det_2
        - det_3
      discount: 0
      entryDate: '2011-01-01T00:00:00.000Z'
      id: 1
      ledger: 0
      note: note1
      procDate: '2011-01-05T00:00:00.000Z'
      timestamp: Usc/eRlm2Qg=
      total: 50
      unallocated: 0
      vatEntries:
        - amount: 50
          id: 1
          percentage: 15
          vatRateId: 1
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      ledger:
        format: double
        type: number
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      unallocated:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  CashReceiptQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      ledger:
        format: double
        type: number
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      unallocated:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  CategoryTypeDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  CompanyFinancialYearViewModel:
    properties:
      firstMonth:
        format: int32
        type: integer
      startMonth:
        format: int32
        type: integer
      startYear:
        format: int32
        type: integer
    type: object
  CompanyGeneralDetaisViewModel:
    properties:
      companyAddresses:
        items:
          type: string
        type: array
      companyName:
        type: string
      currencyCode:
        type: string
      currencyDescription:
        type: string
      currencyId:
        format: int64
        type: integer
      currentcySymbol:
        type: string
      emails:
        items:
          type: string
        type: array
      faxes:
        items:
          type: string
        type: array
      phones:
        items:
          type: string
        type: array
      regionDescription:
        type: string
      regionId:
        format: int64
        type: integer
      vatReg:
        type: string
    type: object
  CompanyOptionDto:
    properties:
      allowEntryOfGrossPriceInInvoicing:
        type: boolean
      creditInputForReverseChargeVAT:
        type: boolean
      creditNoteJournalAgeingName:
        type: string
      creditNoteJournalAgeingValue:
        format: int32
        type: integer
      discrepancyAllowed:
        format: double
        type: number
      enableVOCRReporting:
        type: boolean
      marginVatScheme:
        type: boolean
      printOSItemsOnly:
        type: boolean
      purchasesVatAnalysisType:
        format: int64
        type: integer
      salesVatAnalysisType:
        format: int64
        type: integer
      useAllocations:
        type: boolean
      useNominal:
        type: boolean
      useNominalCode:
        type: boolean
      vocrSettingValue:
        type: boolean
    type: object
  CompanyOptionViewModel:
    properties:
      allowEntryOfGrossPriceInInvoicing:
        type: boolean
      creditInputForReverseChargeVAT:
        type: boolean
      creditNoteJournalAgeingName:
        type: string
      creditNoteJournalAgeingValue:
        format: int32
        type: integer
      discrepancyAllowed:
        format: double
        type: number
      enableVOCRReporting:
        type: boolean
      marginVatScheme:
        type: boolean
      printOSItemsOnly:
        type: boolean
      purchasesVatAnalysisType:
        format: int64
        type: integer
      salesVatAnalysisType:
        format: int64
        type: integer
      useAllocations:
        type: boolean
      useNominal:
        type: boolean
      useNominalCode:
        type: boolean
      vocrSettingValue:
        type: boolean
    type: object
  CompanyReferenceSettingViewModel:
    properties:
      creditorsJournal:
        type: boolean
      debtorsJournal:
        type: boolean
      purchases:
        type: boolean
      sales:
        type: boolean
    type: object
  CompanySettingDto:
    properties:
      enableVOCRReporting:
        type: boolean
      id:
        format: int64
        type: integer
      useAllocations:
        type: boolean
      value:
        type: string
      vocrSettingValue:
        type: boolean
    type: object
  CompanySetupConfigViewModel:
    properties:
      financialYear:
        $ref: '#/definitions/CompanyFinancialYearViewModel'
      generalDetails:
        $ref: '#/definitions/CompanyGeneralDetaisViewModel'
      options:
        $ref: '#/definitions/CompanyOptionViewModel'
      referenceSettings:
        $ref: '#/definitions/CompanyReferenceSettingViewModel'
    type: object
  CustomerDto:
    example:
      accountName: ''
      accountNumber: '12345678'
      address:
        - Address Line 1
        - Address Line 2
      authCode: VATEXCODE222
      bank:
        branch: Bank
        id: 1
        name: bank Name
        sortCode: B01
      businessIdentifierCode: AIBI02
      code: '12345678'
      contact: John Smith
      delivery:
        - Delivery 1
        - Delivery 2
      eFTReference: Reference
      email: customer@email.com
      fax: '1234567890'
      id: 10589
      internationalBankAccountNumber: '1233432532'
      mobile: '1234567890'
      name: Customer Name 1
      ourCode: OURCODE111
      ownerTypeId: 1
      phone: '1234596970'
      timestamp: hu5GeRlm2Qg=
      vatAnalysisTypeId: 1
      vatReg: VATCODE0001
      vatType: 2
    properties:
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      authCode:
        type: string
      bank:
        $ref: '#/definitions/EFTBankDto'
      businessIdentifierCode:
        type: string
      code:
        type: string
      contact:
        type: string
      delivery:
        items:
          type: string
        type: array
      eFTReference:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      ledgerBalance:
        format: double
        type: number
      mobile:
        type: string
      name:
        type: string
      openingBalance:
        $ref: '#/definitions/OwnerOpeningBalanceInPeriodsDto'
      openingBalances:
        items:
          $ref: '#/definitions/OwnerOpeningBalanceDto'
        type: array
      ourCode:
        type: string
      ownerTypeId:
        format: int64
        type: integer
      phone:
        type: string
      timestamp:
        format: byte
        type: string
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatReg:
        type: string
      vatType:
        format: int64
        type: integer
    type: object
  CustomerQueryDto:
    properties:
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      authCode:
        type: string
      bank:
        $ref: '#/definitions/EFTBankDto'
      businessIdentifierCode:
        type: string
      code:
        type: string
      contact:
        type: string
      delivery:
        items:
          type: string
        type: array
      eFTReference:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      mobile:
        type: string
      name:
        type: string
      ourCode:
        type: string
      ownerTypeId:
        format: int64
        type: integer
      phone:
        type: string
      timestamp:
        format: byte
        type: string
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatReg:
        type: string
      vatType:
        format: int64
        type: integer
    type: object
  EFTBankDto:
    properties:
      branch:
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
      sortCode:
        type: string
    type: object
  EmailQuoteDto:
    example:
      bccAddresses:
        - bcc1@email.com
        - bcc2@email.com
        - bcc3@email.com
      messageBody: Email message
      quoteId: 1
      toAddress: to@email.com
    properties:
      bccAddresses:
        items:
          type: string
        type: array
      messageBody:
        type: string
      quoteId:
        format: int64
        type: integer
      toAddress:
        type: string
    type: object
  EmailStatementDto:
    example:
      bccAddresses:
        - bcc1@email.com
        - bcc2@email.com
        - bcc3@email.com
      customerId: 1
      fromPeriod: '2016-04-07T00:00:00.000Z'
      messageBody: Email message
      minimumBalance: 4
      toAddress: to@email.com
      toPeriod: '2016-06-07T00:00:00.000Z'
    properties:
      bccAddresses:
        items:
          type: string
        type: array
      customerId:
        format: int64
        type: integer
      fromPeriod:
        format: date-time
        type: string
      messageBody:
        type: string
      minimumBalance:
        format: double
        type: number
      toAddress:
        type: string
      toPeriod:
        format: date-time
        type: string
    type: object
  FilterClause:
    properties:
      Expression:
        $ref: '#/definitions/SingleValueNode'
      ItemType:
        $ref: '#/definitions/IEdmTypeReference'
      RangeVariable:
        $ref: '#/definitions/RangeVariable'
    type: object
  FilterQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      FilterClause:
        $ref: '#/definitions/FilterClause'
      RawValue:
        readOnly: true
        type: string
      Validator:
        $ref: '#/definitions/FilterQueryValidator'
    type: object
  FilterQueryValidator:
    properties: {}
    type: object
  FinancialYearDto:
    properties:
      firstMonth:
        format: int32
        type: integer
      startMonth:
        format: int32
        type: integer
      startYear:
        format: int32
        type: integer
    type: object
  IEdmDirectValueAnnotationsManager:
    properties: {}
    type: object
  IEdmModel:
    properties:
      DirectValueAnnotationsManager:
        $ref: '#/definitions/IEdmDirectValueAnnotationsManager'
      ReferencedModels:
        items:
          $ref: '#/definitions/IEdmModel'
        readOnly: true
        type: array
      SchemaElements:
        items:
          $ref: '#/definitions/IEdmSchemaElement'
        readOnly: true
        type: array
      VocabularyAnnotations:
        items:
          $ref: '#/definitions/IEdmVocabularyAnnotation'
        readOnly: true
        type: array
    type: object
  IEdmSchemaElement:
    properties:
      Name:
        readOnly: true
        type: string
      Namespace:
        readOnly: true
        type: string
      SchemaElementKind:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        format: int32
        readOnly: true
        type: integer
    type: object
  IEdmTerm:
    properties:
      Name:
        readOnly: true
        type: string
      Namespace:
        readOnly: true
        type: string
      SchemaElementKind:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        format: int32
        readOnly: true
        type: integer
      TermKind:
        enum:
          - 0
          - 1
          - 2
        format: int32
        readOnly: true
        type: integer
    type: object
  IEdmType:
    properties:
      TypeKind:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        format: int32
        readOnly: true
        type: integer
    type: object
  IEdmTypeReference:
    properties:
      Definition:
        $ref: '#/definitions/IEdmType'
      IsNullable:
        readOnly: true
        type: boolean
    type: object
  IEdmVocabularyAnnotatable:
    properties: {}
    type: object
  IEdmVocabularyAnnotation:
    properties:
      Qualifier:
        readOnly: true
        type: string
      Target:
        $ref: '#/definitions/IEdmVocabularyAnnotatable'
      Term:
        $ref: '#/definitions/IEdmTerm'
    type: object
  InlineCountQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      RawValue:
        readOnly: true
        type: string
      Value:
        enum:
          - 0
          - 1
        format: int32
        readOnly: true
        type: integer
    type: object
  ODataQueryContext:
    properties:
      ElementClrType:
        readOnly: true
        type: string
      ElementType:
        $ref: '#/definitions/IEdmType'
      Model:
        $ref: '#/definitions/IEdmModel'
    type: object
  ODataQueryOptions_AccountDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_AnalysisCategoryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_BankAccountQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_BookTranTypeDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_CashPaymentQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_CashReceiptQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_CategoryTypeDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_CompanySettingDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_CustomerQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_OwnerTypeDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_OwnerTypeGroupDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_PaymentQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_ProductDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_PurchaseQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_QuoteDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SaleRepsDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SalesCreditNoteQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SalesEntryQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SalesInvoiceQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SalesQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_SupplierQueryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_UserDefinedFieldDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_VatAnalysisTypeDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_VatCategoryDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_VatRateDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryOptions_VatTypeDto_:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      Filter:
        $ref: '#/definitions/FilterQueryOption'
      IfMatch:
        readOnly: true
        type: object
      IfNoneMatch:
        readOnly: true
        type: object
      InlineCount:
        $ref: '#/definitions/InlineCountQueryOption'
      OrderBy:
        $ref: '#/definitions/OrderByQueryOption'
      RawValues:
        $ref: '#/definitions/ODataRawQueryOptions'
      Request:
        readOnly: true
        type: object
      SelectExpand:
        $ref: '#/definitions/SelectExpandQueryOption'
      Skip:
        $ref: '#/definitions/SkipQueryOption'
      Top:
        $ref: '#/definitions/TopQueryOption'
      Validator:
        $ref: '#/definitions/ODataQueryValidator'
    type: object
  ODataQueryValidator:
    properties: {}
    type: object
  ODataRawQueryOptions:
    properties:
      Expand:
        readOnly: true
        type: string
      Filter:
        readOnly: true
        type: string
      Format:
        readOnly: true
        type: string
      InlineCount:
        readOnly: true
        type: string
      OrderBy:
        readOnly: true
        type: string
      Select:
        readOnly: true
        type: string
      Skip:
        readOnly: true
        type: string
      SkipToken:
        readOnly: true
        type: string
      Top:
        readOnly: true
        type: string
    type: object
  OrderByClause:
    properties:
      Direction:
        enum:
          - 0
          - 1
        format: int32
        readOnly: true
        type: integer
      Expression:
        $ref: '#/definitions/SingleValueNode'
      ItemType:
        $ref: '#/definitions/IEdmTypeReference'
      RangeVariable:
        $ref: '#/definitions/RangeVariable'
      ThenBy:
        $ref: '#/definitions/OrderByClause'
    type: object
  OrderByNode:
    properties:
      Direction:
        enum:
          - 0
          - 1
        format: int32
        readOnly: true
        type: integer
    type: object
  OrderByQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      OrderByClause:
        $ref: '#/definitions/OrderByClause'
      OrderByNodes:
        items:
          $ref: '#/definitions/OrderByNode'
        readOnly: true
        type: array
      RawValue:
        readOnly: true
        type: string
      Validator:
        $ref: '#/definitions/OrderByQueryValidator'
    type: object
  OrderByQueryValidator:
    properties: {}
    type: object
  OwnerOpeningBalanceDto:
    properties:
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      isChanged:
        type: boolean
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/OwnerOpeningBalanceVatEntryDto'
        type: array
    type: object
  OwnerOpeningBalanceInPeriodsDto:
    properties:
      currentMonth:
        format: double
        type: number
      oneMonthOld:
        format: double
        type: number
      threeMonthsOld:
        format: double
        type: number
      twoMonthsOld:
        format: double
        type: number
    type: object
  OwnerOpeningBalanceVatEntryDto:
    properties:
      amount:
        format: double
        type: number
      vatRateId:
        format: int64
        type: integer
    type: object
  OwnerTypeDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
      ownerTypeGroupId:
        format: int64
        type: integer
    type: object
  OwnerTypeGroupDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  PageResult_AccountDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/AccountDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_AnalysisCategoryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/AnalysisCategoryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_BankAccountQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/BankAccountQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_BookTranTypeDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/BookTranTypeDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_CashPaymentQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/CashPaymentQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_CashReceiptQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/CashReceiptQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_CategoryTypeDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/CategoryTypeDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_CompanySettingDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/CompanySettingDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_CustomerQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/CustomerQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_OwnerTypeDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/OwnerTypeDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_OwnerTypeGroupDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/OwnerTypeGroupDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_PaymentQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/PaymentQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_ProductDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/ProductDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_PurchaseQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/PurchaseQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_QuoteDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/QuoteDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SaleRepsDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SaleRepsDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SalesCreditNoteQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SalesCreditNoteQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SalesEntryQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SalesEntryQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SalesInvoiceQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SalesInvoiceQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SalesQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SalesQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_SupplierQueryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/SupplierQueryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_UserDefinedFieldDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/UserDefinedFieldDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_VatAnalysisTypeDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/VatAnalysisTypeDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_VatCategoryDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/VatCategoryDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_VatRateDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/VatRateDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PageResult_VatTypeDto_:
    properties:
      Count:
        format: int64
        type: integer
      Items:
        items:
          $ref: '#/definitions/VatTypeDto'
        type: array
      NextPageLink:
        type: string
    type: object
  PaymentDto:
    example:
      acCode: C1
      acEntries: []
      bankAccountCode: B1
      bankAccountId: 1
      bookTranTypeId: 3
      customFields:
        - description: F1
          id: 1
          userDefinedFieldId: 1
          value: f1
        - description: F2
          id: 2
          userDefinedFieldId: 2
          value: f2
      detailCollection:
        - d1
        - d2
      discount: 2
      entryDate: '2011-07-01T00:00:00.000Z'
      id: 2
      note: '123'
      procDate: '2011-08-08T00:00:00.000Z'
      reference: '000002'
      supplierId: 2
      timestamp: +TtVeRlm2Qg=
      total: 155
      transferBankCode: ''
      transferBankId: 1
      unallocated: 155
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bankAccountCode:
        type: string
      bankAccountId:
        format: int64
        type: integer
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      transferBankCode:
        type: string
      transferBankId:
        format: int64
        type: integer
      unallocated:
        format: double
        type: number
    type: object
  PaymentQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bankAccountCode:
        type: string
      bankAccountId:
        format: int64
        type: integer
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      discount:
        format: double
        type: number
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      note:
        type: string
      plaidTransactionId:
        type: string
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      transferBankCode:
        type: string
      transferBankId:
        format: int64
        type: integer
      unallocated:
        format: double
        type: number
    type: object
  ProductDto:
    example:
      details:
        - det1
        - det2
        - det3
      grossUnitPrice: false
      hasDefaultVatRate: false
      id: 9
      stockCode: PRO1
      timestamp: aZ5XeRlm2Qg=
      unitPrice: 100
      vatAnalysisTypeId: 1
    properties:
      details:
        items:
          type: string
        type: array
      grossUnitPrice:
        type: boolean
      hasDefaultVatRate:
        type: boolean
      id:
        format: int64
        type: integer
      stockCode:
        type: string
      timestamp:
        format: byte
        type: string
      unitPrice:
        format: double
        type: number
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatRateId:
        format: int64
        type: integer
    type: object
  ProductTranDto:
    properties:
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      amount:
        format: double
        type: number
      amountNet:
        format: double
        type: number
      id:
        format: int64
        type: integer
      percentage:
        format: double
        type: number
      productCode:
        type: string
      productId:
        format: int64
        type: integer
      quantity:
        format: double
        type: number
      tranNotes:
        items:
          type: string
        type: array
      unitPrice:
        format: double
        type: number
      vat:
        format: double
        type: number
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatRateId:
        format: int64
        type: integer
    required:
      - amountNet
    type: object
  ProductTranQueryDto:
    properties:
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      amount:
        format: double
        readOnly: true
        type: number
      amountNet:
        format: double
        readOnly: true
        type: number
      id:
        format: int64
        type: integer
      percentage:
        format: double
        type: number
      productCode:
        type: string
      productId:
        format: int64
        type: integer
      quantity:
        format: double
        type: number
      tranNotes:
        items:
          type: string
        type: array
      unitPrice:
        format: double
        type: number
      vat:
        format: double
        readOnly: true
        type: number
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatRateId:
        format: int64
        type: integer
    type: object
  PurchaseDto:
    example:
      acCode: SUP3
      acEntries:
        - accountCode: PU03
          analysisCategoryId: 10441
          description: PUR 3
          id: 12518
          value: 90.91
      bookTranTypeId: 4
      customFields: []
      detailCollection: []
      entryDate: '2016-06-01T00:00:00.000Z'
      id: 13380
      netGoods: 0
      netServices: 0
      note: Supplier 3
      postponedAccounting: false
      procDate: '2016-06-24T00:00:00.000Z'
      reference: '000001'
      supplierId: 10173
      timestamp: 7mNceRlm2Qg=
      total: 100
      totalNet: 90.91
      totalVAT: 9.09
      unallocated: 100
      unpaid: 100
      vatEntries:
        - amount: 90.91
          id: 12267
          percentage: 10
          vatRateId: 10317
      vatTypeId: 1
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      postponedAccounting:
        type: boolean
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unallocated:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  PurchaseQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      detailCollection:
        items:
          type: string
        type: array
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      postponedAccounting:
        type: boolean
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      supplierId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unallocated:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  QuoteAcEntriesDto:
    properties:
      accountCode:
        type: string
      analysisCategoryId:
        format: int64
        type: integer
      companyId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      quoteProductTranId:
        format: int64
        type: integer
      value:
        format: double
        type: number
    type: object
  QuoteDto:
    example:
      comments: Sample
      companyId: 40449
      customerOwnerId: 70583
      customerOwnerName: Customer 1
      ddNumber: Sample
      entryDate: '2017-01-01T00:00:00.000Z'
      id: 1
      layoutType: 1
      poNumber: Sample
      procDate: '2017-01-05T00:00:00.000Z'
      productTrans:
        - acEntries:
            - accountCode: sample
              analysisCategoryId: 40888
              companyId: 40449
              id: 1
              quoteProductTranId: 40277
              value: 100
          amount: 10
          companyId: 40449
          id: 40277
          percentage: 0
          productCode: PRO1
          productId: 20107
          quantity: 1
          tranNotes:
            - Product
          unitPrice: 100
          vatAmount: 10
          vatAnalysisTypeId: 0
          vatRateId: 30657
      saleInvoiceId: 30044
      saleRepId: 75783
      timeStamp: BoxjeRlm2Qg=
      total: 110
      totalNet: 100
      totalVat: 10
      vatTypeId: 1
    properties:
      acCode:
        type: string
      closedDate:
        format: date-time
        type: string
      comments:
        type: string
      companyId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerOwnerId:
        format: int64
        type: integer
      customerOwnerName:
        type: string
      ddNumber:
        type: string
      deliveryList:
        type: string
      deliveryTo:
        items:
          type: string
        type: array
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      layoutType:
        format: int32
        type: integer
      note:
        type: string
      poNumber:
        type: string
      procDate:
        format: date-time
        type: string
      productTrans:
        items:
          $ref: '#/definitions/QuoteProductTransDto'
        type: array
      reference:
        type: string
      saleInvoiceId:
        format: int64
        type: integer
      saleRepCode:
        type: string
      saleRepId:
        format: int64
        type: integer
      timeStamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVat:
        format: double
        type: number
      vatTypeId:
        format: int64
        type: integer
    type: object
  QuoteGeneratingInvoiceDto:
    properties:
      quoteId:
        format: int64
        type: integer
      saleInvoice:
        $ref: '#/definitions/SalesInvoiceCreditNoteDto'
    type: object
  QuoteProductTransDto:
    properties:
      acEntries:
        items:
          $ref: '#/definitions/QuoteAcEntriesDto'
        type: array
      amount:
        format: double
        type: number
      companyId:
        format: int64
        type: integer
      id:
        format: int64
        type: integer
      percentage:
        format: double
        type: number
      productCode:
        type: string
      productId:
        format: int64
        type: integer
      quantity:
        format: double
        type: number
      tranNotes:
        items:
          type: string
        type: array
      unitPrice:
        format: double
        type: number
      vatAmount:
        format: double
        type: number
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatRateId:
        format: int64
        type: integer
    type: object
  RangeVariable:
    properties:
      Kind:
        format: int32
        readOnly: true
        type: integer
      Name:
        readOnly: true
        type: string
      TypeReference:
        $ref: '#/definitions/IEdmTypeReference'
    type: object
  SaleRepsDto:
    example:
      code: SR0001
      companyId: 123456
      email: example@gmail.com
      id: 1
      name: Sales Rep 1
      phone: '1234567890'
      timeStamp: WnZveRlm2Qg=
    properties:
      code:
        type: string
      companyId:
        format: int64
        type: integer
      email:
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
      phone:
        type: string
      timeStamp:
        format: byte
        type: string
    type: object
  SalesCreditNoteQueryDto:
    properties:
      acCode:
        type: string
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      deliveryTo:
        items:
          type: string
        type: array
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      loType:
        type: string
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      ourReference:
        type: string
      procDate:
        format: date-time
        type: string
      productTrans:
        items:
          $ref: '#/definitions/ProductTranQueryDto'
        type: array
      quoteId:
        format: int64
        type: integer
      reference:
        type: string
      saleRepCode:
        type: string
      saleRepId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatTypeId:
        format: int64
        type: integer
      yourReference:
        type: string
    type: object
  SalesEntryDto:
    example:
      acCode: code
      acEntries:
        - accountCode: SA01
          analysisCategoryId: 40888
          description: SAL 1
          id: 73450
          value: 636.36
      bookTranTypeId: 5
      customFields:
        - description: acudf_1
          id: 1
          userDefinedFieldId: 1
          value: acudfv_1
        - description: acudf_2
          id: 2
          userDefinedFieldId: 1
          value: acudfv_2
      customerId: 70583
      details: detail_1
      entryDate: '2011-01-01T00:00:00.000Z'
      id: 1
      netGoods: 0
      netServices: 0
      note: Customer 1
      procDate: '2011-01-01T00:00:00.000Z'
      reference: '000001'
      timestamp: LRRteRlm2Qg=
      total: 700
      totalNet: 636.36
      totalVAT: 63.64
      unpaid: 0
      vatEntries:
        - amount: 636.36
          id: 63649
          percentage: 10
          vatRateId: 30657
      vatTypeId: 1
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  SalesEntryQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  SalesInvoiceCreditNoteDto:
    example:
      acCode: CUS3
      bookTranTypeId: 7
      customFields:
        - description: acudf_1
          id: 1
          userDefinedFieldId: 1
          value: acudfv_1
        - description: acudf_2
          id: 2
          userDefinedFieldId: 1
          value: acudfv_2
      customerId: 70585
      deliveryTo:
        - dt_1
        - dt_2
      details: detail_1
      entryDate: '2016-06-01T00:00:00.000Z'
      id: 75813
      loType: '1'
      note: Customer 3
      ourReference: ddNumber_1
      procDate: '2016-06-24T00:00:00.000Z'
      productTrans:
        - acEntries:
            - accountCode: SA02
              analysisCategoryId: 40889
              description: AnCat1
              id: 73455
              value: -200
          amount: -220
          amountNet: -200
          id: 51820
          percentage: 10
          productCode: PRO2
          productId: 20108
          quantity: -1
          tranNotes:
            - tn_1
            - tn_2
          unitPrice: 200
          vat: -20
          vatAnalysisTypeId: 0
          vatRateId: 30657
      saleRepId: 33110
      timestamp: WnZveRlm2Qg=
      total: -220
      totalNet: -200
      totalVAT: -20
      unpaid: -220
      vatTypeId: 1
      yourReference: poNumber_1
    properties:
      acCode:
        type: string
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      deliveryTo:
        items:
          type: string
        type: array
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      loType:
        type: string
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      ourReference:
        type: string
      procDate:
        format: date-time
        type: string
      productTrans:
        items:
          $ref: '#/definitions/ProductTranDto'
        type: array
      quoteId:
        format: int64
        type: integer
      reference:
        type: string
      saleRepCode:
        type: string
      saleRepId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatTypeId:
        format: int64
        type: integer
      yourReference:
        type: string
    type: object
  SalesInvoiceEmailInfoDto:
    example:
      bccAddresses:
        - bcc1@email.com
        - bcc2@email.com
        - bcc3@email.com
      messageBody: Email message
      salesInvoiceId: 1
      toAddress: to@email.com
    properties:
      bccAddresses:
        items:
          type: string
        type: array
      messageBody:
        type: string
      salesInvoiceId:
        format: int64
        type: integer
      toAddress:
        type: string
    type: object
  SalesInvoiceQueryDto:
    properties:
      acCode:
        type: string
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      deliveryTo:
        items:
          type: string
        type: array
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      loType:
        type: string
      netGoods:
        format: double
        type: number
      netServices:
        format: double
        type: number
      note:
        type: string
      ourReference:
        type: string
      procDate:
        format: date-time
        type: string
      productTrans:
        items:
          $ref: '#/definitions/ProductTranQueryDto'
        type: array
      quoteId:
        format: int64
        type: integer
      reference:
        type: string
      saleRepCode:
        type: string
      saleRepId:
        format: int64
        type: integer
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatTypeId:
        format: int64
        type: integer
      yourReference:
        type: string
    type: object
  SalesQueryDto:
    properties:
      acCode:
        type: string
      acEntries:
        items:
          $ref: '#/definitions/AcEntryDto'
        type: array
      bookTranTypeId:
        format: int64
        type: integer
      customFields:
        items:
          $ref: '#/definitions/AcudfValueDto'
        type: array
      customerId:
        format: int64
        type: integer
      details:
        type: string
      entryDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      loType:
        type: string
      note:
        type: string
      procDate:
        format: date-time
        type: string
      reference:
        type: string
      timestamp:
        format: byte
        type: string
      total:
        format: double
        type: number
      totalNet:
        format: double
        type: number
      totalVAT:
        format: double
        type: number
      unpaid:
        format: double
        type: number
      vatEntries:
        items:
          $ref: '#/definitions/VatEntryDto'
        type: array
      vatTypeId:
        format: int64
        type: integer
    type: object
  SelectExpandClause:
    properties:
      AllSelected:
        readOnly: true
        type: boolean
      SelectedItems:
        items:
          $ref: '#/definitions/SelectItem'
        readOnly: true
        type: array
    type: object
  SelectExpandQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      RawExpand:
        readOnly: true
        type: string
      RawSelect:
        readOnly: true
        type: string
      SelectExpandClause:
        $ref: '#/definitions/SelectExpandClause'
      Validator:
        $ref: '#/definitions/SelectExpandQueryValidator'
    type: object
  SelectExpandQueryValidator:
    properties: {}
    type: object
  SelectItem:
    properties: {}
    type: object
  SingleValueNode:
    properties:
      Kind:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
        format: int32
        readOnly: true
        type: integer
      TypeReference:
        $ref: '#/definitions/IEdmTypeReference'
    type: object
  SkipQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      RawValue:
        readOnly: true
        type: string
      Validator:
        $ref: '#/definitions/SkipQueryValidator'
      Value:
        format: int32
        readOnly: true
        type: integer
    type: object
  SkipQueryValidator:
    properties: {}
    type: object
  SupplierDto:
    example:
      accountName: Supplier Bank Acc
      accountNumber: '12345678'
      address:
        - Address Line 1
        - Address Line 2
      authCode: VATEXCODE222
      bank:
        branch: Bank
        id: 1
        name: bank Name
        sortCode: B01
      code: S001
      contact: John Smith
      eFTReference: Reference
      email: supplier@email.com
      fax: '1234567890'
      id: 10589
      mobile: '1234567890'
      name: Supplier Name
      ourCode: OURCODE111
      ownerTypeId: 3
      phone: '1234596970'
      postponedAccounting: false
      timestamp: dzp0eRlm2Qg=
      vatAnalysisTypeId: 1
      vatReg: VATCODE0001
      vatType: 2
    properties:
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      authCode:
        type: string
      bank:
        $ref: '#/definitions/EFTBankDto'
      businessIdentifierCode:
        type: string
      code:
        type: string
      contact:
        type: string
      eFTReference:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      ledgerBalance:
        format: double
        type: number
      mobile:
        type: string
      name:
        type: string
      openingBalance:
        $ref: '#/definitions/OwnerOpeningBalanceInPeriodsDto'
      openingBalances:
        items:
          $ref: '#/definitions/OwnerOpeningBalanceDto'
        type: array
      ourCode:
        type: string
      ownerTypeId:
        format: int64
        type: integer
      phone:
        type: string
      postponedAccounting:
        type: boolean
      timestamp:
        format: byte
        type: string
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatReg:
        type: string
      vatType:
        format: int64
        type: integer
    type: object
  SupplierQueryDto:
    properties:
      accountName:
        type: string
      accountNumber:
        type: string
      address:
        items:
          type: string
        type: array
      authCode:
        type: string
      bank:
        $ref: '#/definitions/EFTBankDto'
      businessIdentifierCode:
        type: string
      code:
        type: string
      contact:
        type: string
      eFTReference:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        format: int64
        type: integer
      internationalBankAccountNumber:
        type: string
      mobile:
        type: string
      name:
        type: string
      ourCode:
        type: string
      ownerTypeId:
        format: int64
        type: integer
      phone:
        type: string
      postponedAccounting:
        type: boolean
      timestamp:
        format: byte
        type: string
      vatAnalysisTypeId:
        format: int64
        type: integer
      vatReg:
        type: string
      vatType:
        format: int64
        type: integer
    type: object
  TopQueryOption:
    properties:
      Context:
        $ref: '#/definitions/ODataQueryContext'
      RawValue:
        readOnly: true
        type: string
      Validator:
        $ref: '#/definitions/TopQueryValidator'
      Value:
        format: int32
        readOnly: true
        type: integer
    type: object
  TopQueryValidator:
    properties: {}
    type: object
  UserDefinedFieldDto:
    properties:
      categoryTypeId:
        format: int64
        type: integer
      description:
        type: string
      id:
        format: int64
        type: integer
      orderIndex:
        format: int32
        type: integer
    type: object
  VatAnalysisTypeDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  VatCategoryDto:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
    type: object
  VatEntryDto:
    properties:
      amount:
        format: double
        type: number
      id:
        format: int64
        type: integer
      percentage:
        format: double
        type: number
      vatRateId:
        format: int64
        type: integer
    type: object
  VatRateDto:
    properties:
      id:
        format: int64
        type: integer
      isActive:
        type: boolean
      isDefault:
        type: boolean
      orderIndex:
        format: int32
        type: integer
      percentage:
        format: double
        type: number
      timestamp:
        format: byte
        type: string
      vatCategoryId:
        format: int64
        type: integer
    type: object
  VatRatesByVatCategoryDto:
    example:
      vatCategoryId: 1
      vatRates:
        - id: 0
          isActive: true
          isDefault: false
          orderIndex: 0
          percentage: 30
          vatCategoryId: 1
    properties:
      vatCategoryId:
        format: int64
        type: integer
      vatRates:
        items:
          $ref: '#/definitions/VatRateDto'
        type: array
    type: object
  VatTypeDto:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        format: int64
        type: integer
      isNotApplicable:
        type: boolean
      isOnlyZero:
        type: boolean
    type: object
host: app.bigredcloud.com
info:
  description: "\r\n<div style='line-height: 30px;'>\r\n    <strong>Welcome to the Big Red Cloud API</strong><br/>\r\n    This API enables programmatic access to Big Red Cloud data.<br/>\r\n    We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>\r\n    To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>\r\n    Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>\r\n    The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>\r\n    For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>\r\n</div>"
  title: Big Red Cloud API
  version: v1
  x-apisguru-categories:
    - financial
  x-logo:
    url: 'https://www.bigredcloud.com/wp-content/uploads/BRCfavicon.gif'
  x-origin:
    - format: swagger
      url: 'https://app.bigredcloud.com/api/swagger/docs/v1'
      version: '2.0'
  x-providerName: bigredcloud.com
paths:
  /v1/accounts:
    get:
      operationId: Accounts_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_AccountDto_'
      summary: "Returns a list of company's Accounts. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      tags:
        - Accounts
  /v1/analysisCategories:
    get:
      operationId: AnalysisCategories_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_AnalysisCategoryDto_'
      summary: "Returns a list of company's Analysis Categories. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      tags:
        - AnalysisCategories
  /v1/bankAccounts:
    get:
      operationId: BankAccounts_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_BankAccountQueryDto_'
      summary: "Returns a list of company's Bank Account. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"acCode\" fields."
      tags:
        - BankAccounts
    post:
      consumes:
        - application/json
      operationId: BankAccounts_Post
      parameters:
        - description: Information of Bank Account to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BankAccountDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Bank Account.
      tags:
        - BankAccounts
  /v1/bankAccounts/batch:
    put:
      consumes:
        - application/json
      operationId: BankAccounts_ProcessBatch
      parameters:
        - description: Batch of Bank Accounts to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_BankAccountDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Bank Accounts.
      tags:
        - BankAccounts
  '/v1/bankAccounts/{id}':
    delete:
      operationId: BankAccounts_Delete
      parameters:
        - description: Id of Bank Account to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Bank Account to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Bank Account.
      tags:
        - BankAccounts
    get:
      parameters:
        - description: Id of Bank Account to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankAccountDto'
      summary: Returns information about a single Bank Account.
      tags:
        - BankAccounts
    put:
      consumes:
        - application/json
      operationId: BankAccounts_Put
      parameters:
        - description: Id of Bank Account to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Bank Account to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BankAccountDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Bank Account.
      tags:
        - BankAccounts
  /v1/bookTranTypes:
    get:
      operationId: BookTranTypes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_BookTranTypeDto_'
      summary: "Returns a list of global Book Transactions' Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - BookTranTypes
  /v1/cashPayments:
    get:
      operationId: CashPayments_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_CashPaymentQueryDto_'
      summary: "Returns a list of company's Cash Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - CashPayments
    post:
      consumes:
        - application/json
      operationId: CashPayments_Post
      parameters:
        - description: Information of Cash Receipt to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CashPaymentDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Cash Payment.
      tags:
        - CashPayments
  /v1/cashPayments/batch:
    put:
      consumes:
        - application/json
      operationId: CashPayments_ProcessBatch
      parameters:
        - description: Batch of Cash Receipts to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_CashPaymentDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Cash Payments.
      tags:
        - CashPayments
  '/v1/cashPayments/{id}':
    delete:
      operationId: CashPayments_Delete
      parameters:
        - description: Id of Cash Receipt to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Cash Receipt to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Cash Payment.
      tags:
        - CashPayments
    get:
      parameters:
        - description: Id of Cash Receipt to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CashPaymentDto'
      summary: Returns information about a single Cash Payment.
      tags:
        - CashPayments
    put:
      consumes:
        - application/json
      operationId: CashPayments_Put
      parameters:
        - description: Id of Cash Receipt to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Cash Receipt to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CashPaymentDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Cash Payment.
      tags:
        - CashPayments
  /v1/cashReceipts:
    get:
      operationId: CashReceipts_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_CashReceiptQueryDto_'
      summary: "Returns a list of company's Cash Receipts. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - CashReceipts
    post:
      consumes:
        - application/json
      operationId: CashReceipts_Post
      parameters:
        - description: Information of Cash Receipt to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CashReceiptDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Cash Receipt.
      tags:
        - CashReceipts
  /v1/cashReceipts/batch:
    put:
      consumes:
        - application/json
      operationId: CashReceipts_ProcessBatch
      parameters:
        - description: Batch of Cash Receipts to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_CashReceiptDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Cash Receipts.
      tags:
        - CashReceipts
  '/v1/cashReceipts/{id}':
    delete:
      operationId: CashReceipts_Delete
      parameters:
        - description: Id of Cash Receipt to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Cash Receipt to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Cash Receipt.
      tags:
        - CashReceipts
    get:
      parameters:
        - description: Id of Cash Receipt to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CashReceiptDto'
      summary: Returns information about a single Cash Receipt.
      tags:
        - CashReceipts
    put:
      consumes:
        - application/json
      operationId: CashReceipts_Put
      parameters:
        - description: Id of Cash Receipt to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Cash Receipt to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CashReceiptDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Cash Receipt.
      tags:
        - CashReceipts
  /v1/categoryTypes:
    get:
      operationId: CategoryTypes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_CategoryTypeDto_'
      summary: "Returns a list of company's Category Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - CategoryTypes
  /v1/companySettings:
    get:
      operationId: CompanySettings_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_CompanySettingDto_'
      summary: "Returns a list of company settings. Supports OData querying protocol.\r\nFiltering is forbidden."
      tags:
        - CompanySettings
  /v1/companySetupConfig:
    get:
      operationId: CompanySetupConfig_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompanySetupConfigViewModel'
      summary: Returns the company configuration settings.
      tags:
        - CompanySetupConfig
  /v1/companySetupConfig/getCompanyOptions:
    get:
      operationId: CompanySetupConfig_GetCompanyOptions
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompanyOptionDto'
      summary: Returns the company option setting.
      tags:
        - CompanySetupConfig
  /v1/companySetupConfig/getFinancialYear:
    get:
      operationId: CompanySetupConfig_GetFinancialYear
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FinancialYearDto'
      summary: Returns the financial year.
      tags:
        - CompanySetupConfig
  /v1/customers:
    get:
      operationId: Customers_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_CustomerQueryDto_'
      summary: "Returns a list of company's Customers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      tags:
        - Customers
    post:
      consumes:
        - application/json
      operationId: Customers_Post
      parameters:
        - description: Information of Customer to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Customer.
      tags:
        - Customers
  /v1/customers/batch:
    put:
      consumes:
        - application/json
      operationId: Customers_ProcessBatch
      parameters:
        - description: Batch of Customers to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_CustomerDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Customers.
      tags:
        - Customers
  '/v1/customers/{id}':
    delete:
      operationId: Customers_Delete
      parameters:
        - description: Id of Customer to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Customer to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Customer.
      tags:
        - Customers
    get:
      parameters:
        - description: Id of Customer to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: >-
            If "true" then Customer's ledger balance will be calculated;
            otherwise balance will be returned as 0.
          in: query
          name: needBalance
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerDto'
      summary: >-
        Returns information about a single Customer. You may specify that
        Customer's ledger balance should be calculated.
      tags:
        - Customers
    put:
      consumes:
        - application/json
      operationId: Customers_Put
      parameters:
        - description: Id of Customer to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Customer to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Customer.
      tags:
        - Customers
  '/v1/customers/{itemId}/accountTrans':
    get:
      operationId: Customers_GetAccountTrans
      parameters:
        - description: Id of Customer to return account transaction.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AccountTranDto'
            type: array
      summary: Returns a list of Customer's account transactions.
      tags:
        - Customers
  '/v1/customers/{itemId}/openingBalance':
    get:
      operationId: Customers_GetOpeningBalance
      parameters:
        - description: Id of Customer to return opening balances.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OwnerOpeningBalanceInPeriodsDto'
      summary: >-
        Returns a Customer's opening balances, calculated for the next periods:
        current month, one month old, two months old, three and more months old.
      tags:
        - Customers
  '/v1/customers/{itemId}/openingBalanceList':
    get:
      operationId: Customers_GetOpeningBalanceList
      parameters:
        - description: Id of Customer to return opening balances transaction.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OwnerOpeningBalanceDto'
            type: array
      summary: Returns a list of Customer's opening balance transactions.
      tags:
        - Customers
  '/v1/customers/{itemId}/quotes':
    get:
      operationId: Customers_GetQuotes
      parameters:
        - description: Id of Customer to return quotes.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/QuoteDto'
            type: array
      summary: Returns a list of Customer's quotes.
      tags:
        - Customers
  /v1/email/sendEmailStatement:
    post:
      consumes:
        - application/json
      operationId: Email_SendEmailStatement
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EmailStatementDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: "Sends a Statement email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address."
      tags:
        - Email
  /v1/email/sendQuote:
    post:
      consumes:
        - application/json
      operationId: Email_SendQuote
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EmailQuoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: "Sends a Quote email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Statement Customer's address."
      tags:
        - Email
  /v1/email/sendSalesInvoice:
    post:
      consumes:
        - application/json
      operationId: Email_SendSalesInvoice
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceEmailInfoDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: "Sends a Sales Invoice email.\r\nIf \"toAddress\" is not empty then email will be sent to this address. Otherwise email will be sent to Sales Invoice Customer's address."
      tags:
        - Email
  /v1/ownerTypeGroups:
    get:
      operationId: OwnerTypeGroups_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_OwnerTypeGroupDto_'
      summary: "Returns a list of global Owner Type Groups. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - OwnerTypeGroups
  /v1/ownerTypes:
    get:
      operationId: OwnerTypes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_OwnerTypeDto_'
      summary: "Returns a list of global Owner Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - OwnerTypes
  /v1/payments:
    get:
      operationId: Payments_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_PaymentQueryDto_'
      summary: "Returns a list of company's Payments. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - Payments
    post:
      consumes:
        - application/json
      operationId: Payments_Post
      parameters:
        - description: Information of Payment to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Payment.
      tags:
        - Payments
  /v1/payments/batch:
    put:
      consumes:
        - application/json
      operationId: Payments_ProcessBatch
      parameters:
        - description: Batch of Payments to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_PaymentDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Payments.
      tags:
        - Payments
  '/v1/payments/{id}':
    delete:
      operationId: Payments_Delete
      parameters:
        - description: Id of Payment to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Payment to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Payment.
      tags:
        - Payments
    get:
      parameters:
        - description: Id of Payment to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaymentDto'
      summary: Returns information about a single Payments.
      tags:
        - Payments
    put:
      consumes:
        - application/json
      operationId: Payments_Put
      parameters:
        - description: Id of Payment to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Payment to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Payment.
      tags:
        - Payments
  /v1/products:
    get:
      operationId: Products_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_ProductDto_'
      summary: "Returns a list of company's Products. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"stockCode\" fields."
      tags:
        - Products
    post:
      consumes:
        - application/json
      operationId: Products_Post
      parameters:
        - description: Information of Product to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Product.
      tags:
        - Products
  /v1/products/batch:
    put:
      consumes:
        - application/json
      operationId: Products_ProcessBatch
      parameters:
        - description: Batch of Products to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_ProductDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Products.
      tags:
        - Products
  '/v1/products/{id}':
    delete:
      operationId: Products_Delete
      parameters:
        - description: Id of Product to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Product to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Product.
      tags:
        - Products
    get:
      parameters:
        - description: Id of Product to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductDto'
      summary: Returns information about a single Product.
      tags:
        - Products
    put:
      consumes:
        - application/json
      operationId: Products_Put
      parameters:
        - description: Id of Product to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Product to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Product.
      tags:
        - Products
  /v1/purchases:
    get:
      operationId: Purchases_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_PurchaseQueryDto_'
      summary: "Returns a list of company's Purchases. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - Purchases
    post:
      consumes:
        - application/json
      operationId: Purchases_Post
      parameters:
        - description: Information of Purchase to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PurchaseDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Purchase.
      tags:
        - Purchases
  /v1/purchases/batch:
    put:
      consumes:
        - application/json
      operationId: Purchases_ProcessBatch
      parameters:
        - description: Batch of Purchases to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_PurchaseDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Purchases.
      tags:
        - Purchases
  '/v1/purchases/{id}':
    delete:
      operationId: Purchases_Delete
      parameters:
        - description: Id of Purchase to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Purchase to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Purchase.
      tags:
        - Purchases
    get:
      parameters:
        - description: Id of Purchase to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PurchaseDto'
      summary: Returns information about a single Purchases.
      tags:
        - Purchases
    put:
      consumes:
        - application/json
      operationId: Purchases_Put
      parameters:
        - description: Id of Purchase to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Purchase to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PurchaseDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Purchase.
      tags:
        - Purchases
  /v1/quotes:
    get:
      operationId: Quote_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_QuoteDto_'
      summary: "Returns a list of company's Quotes.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\"."
      tags:
        - Quote
    post:
      consumes:
        - application/json
      operationId: Quote_Post
      parameters:
        - description: Information of Quote to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QuoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Quote.
      tags:
        - Quote
  /v1/quotes/batch:
    put:
      consumes:
        - application/json
      operationId: Quote_ProcessBatch
      parameters:
        - description: Batch of Quote to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_QuoteDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Quote.
      tags:
        - Quote
  '/v1/quotes/close/{id}':
    put:
      operationId: Quote_Close
      parameters:
        - description: Id of Quote to close
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Close a Quote.
      tags:
        - Quote
  /v1/quotes/createQuoteWithGeneratingReference:
    post:
      consumes:
        - application/json
      operationId: Quote_Post_CreateQuoteWithGeneratingReference
      parameters:
        - description: Information of Quote to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QuoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Quote with auto generating reference.
      tags:
        - Quote
  /v1/quotes/generateSaleInvoice:
    post:
      consumes:
        - application/json
      operationId: Quote_Post_GenerateSaleInvoice
      parameters:
        - description: Id of Quote to generate
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QuoteGeneratingInvoiceDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: "Generate a sale invoice from a Quote.\r\nWhen sale invoice is empty, new sale invoice will be generated from Quote."
      tags:
        - Quote
  '/v1/quotes/reopen/{id}':
    put:
      operationId: Quote_Reopen
      parameters:
        - description: Id of Quote to reopen
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Reopen a Quote.
      tags:
        - Quote
  '/v1/quotes/{id}':
    delete:
      operationId: Quote_Delete
      parameters:
        - description: Id of Quote to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Quote to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Quote.
      tags:
        - Quote
    get:
      parameters:
        - description: Id of Sale Rep to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/QuoteDto'
      summary: Returns information about a single Quote.
      tags:
        - Quote
    put:
      consumes:
        - application/json
      operationId: Quote_Put
      parameters:
        - description: Id of Quote to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Quote to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QuoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Quote.
      tags:
        - Quote
  /v1/sales:
    get:
      operationId: Sales_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SalesQueryDto_'
      summary: "Returns a list of company's Sales Entries, Sales Invoices and Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - Sales
  /v1/salesCreditNotes:
    get:
      operationId: SalesCreditNotes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SalesCreditNoteQueryDto_'
      summary: "Returns a list of company's Sales Credit Notes. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - SalesCreditNotes
    post:
      consumes:
        - application/json
      operationId: SalesCreditNotes_Post
      parameters:
        - description: Information of Sales Credit Note to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Sales Credit Note.
      tags:
        - SalesCreditNotes
  /v1/salesCreditNotes/batch:
    put:
      consumes:
        - application/json
      operationId: SalesCreditNotes_ProcessBatch
      parameters:
        - description: Batch of Sales Credit Notes to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_SalesInvoiceCreditNoteDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Sales Credit Notes.
      tags:
        - SalesCreditNotes
  '/v1/salesCreditNotes/{id}':
    delete:
      operationId: SalesCreditNotes_Delete
      parameters:
        - description: Id of Sales Credit Note to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: >-
            Timestamp of Sales Credit Note to remove. Should be encoded in
            Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Sales Credit Note.
      tags:
        - SalesCreditNotes
    get:
      parameters:
        - description: Id of Sales Credit Note to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      summary: Returns information about a single Sales Credit Note.
      tags:
        - SalesCreditNotes
    put:
      consumes:
        - application/json
      operationId: SalesCreditNotes_Put
      parameters:
        - description: Id of Sales Credit Note to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Sales Credit Note to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Sales Credit Note.
      tags:
        - SalesCreditNotes
  /v1/salesEntries:
    get:
      operationId: SalesEntries_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SalesEntryQueryDto_'
      summary: "Returns a list of company's Sales Entries. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - SalesEntries
    post:
      consumes:
        - application/json
      operationId: SalesEntries_Post
      parameters:
        - description: Information of Sales Entry to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesEntryDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Sales Entry.
      tags:
        - SalesEntries
  /v1/salesEntries/batch:
    put:
      consumes:
        - application/json
      operationId: SalesEntries_ProcessBatch
      parameters:
        - description: Batch of Sales Entries to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_SalesEntryDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Sales Entries.
      tags:
        - SalesEntries
  '/v1/salesEntries/{id}':
    delete:
      operationId: SalesEntries_Delete
      parameters:
        - description: Id of Sales Entry to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Sales Entry to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Sales Entry.
      tags:
        - SalesEntries
    get:
      parameters:
        - description: Id of Sales Entry to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SalesEntryDto'
      summary: Returns information about a single Sales Entry.
      tags:
        - SalesEntries
    put:
      consumes:
        - application/json
      operationId: SalesEntries_Put
      parameters:
        - description: Id of Sales Entry to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Sales Entry to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesEntryDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Sales Entry.
      tags:
        - SalesEntries
  /v1/salesInvoices:
    get:
      operationId: SalesInvoices_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SalesInvoiceQueryDto_'
      summary: "Returns a list of company's Sales Invoices. Supports OData querying protocol.\r\nFiltering is allowed by \"entryDate\" field.\r\nOrdering is allowed by \"id\" field."
      tags:
        - SalesInvoices
    post:
      consumes:
        - application/json
      operationId: SalesInvoices_Post
      parameters:
        - description: Information of Sales Invoice to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Sales Invoice.
      tags:
        - SalesInvoices
  /v1/salesInvoices/batch:
    put:
      consumes:
        - application/json
      operationId: SalesInvoices_ProcessBatch
      parameters:
        - description: Batch of Sales Invoices to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_SalesInvoiceCreditNoteDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Sales Invoices.
      tags:
        - SalesInvoices
  /v1/salesInvoices/createSaleInvoiceWithGeneratingReference:
    post:
      consumes:
        - application/json
      operationId: SalesInvoices_Post_CreateSaleInvoiceWithGeneratingReference
      parameters:
        - description: Information of Sale Invoice to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Sale Invoice with auto generating reference.
      tags:
        - SalesInvoices
  '/v1/salesInvoices/{id}':
    delete:
      operationId: SalesInvoices_Delete
      parameters:
        - description: Id of Sales Invoice to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Sales Invoice to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Sales Invoice.
      tags:
        - SalesInvoices
    get:
      parameters:
        - description: Id of Sales Invoice to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      summary: Returns information about a single Sales Invoice.
      tags:
        - SalesInvoices
    put:
      consumes:
        - application/json
      operationId: SalesInvoices_Put
      parameters:
        - description: Id of Sales Invoice to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Sales Invoice to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SalesInvoiceCreditNoteDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Sales Invoice.
      tags:
        - SalesInvoices
  /v1/salesReps:
    get:
      operationId: SalesRep_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SaleRepsDto_'
      summary: "Returns a list of company's SaleRep.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\"."
      tags:
        - SalesRep
    post:
      consumes:
        - application/json
      operationId: SalesRep_Post
      parameters:
        - description: Information of Sale Rep to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SaleRepsDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new SaleRep.
      tags:
        - SalesRep
  /v1/salesReps/batch:
    put:
      consumes:
        - application/json
      operationId: SalesRep_ProcessBatch
      parameters:
        - description: Batch of Sale Rep to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_SaleRepsDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Sale Rep.
      tags:
        - SalesRep
  '/v1/salesReps/{id}':
    delete:
      operationId: SalesRep_Delete
      parameters:
        - description: Id of Sale Rep to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Sale Rep to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Sale Rep.
      tags:
        - SalesRep
    get:
      parameters:
        - description: Id of Sale Rep to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SaleRepsDto'
      summary: Returns information about a single SaleRep.
      tags:
        - SalesRep
    put:
      consumes:
        - application/json
      operationId: SalesRep_Put
      parameters:
        - description: Id of Sale Rep to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Sale Rep to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SaleRepsDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Sale Rep.
      tags:
        - SalesRep
  /v1/suppliers:
    get:
      operationId: Suppliers_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_SupplierQueryDto_'
      summary: "Returns a list of company's Suppliers. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" and \"code\" fields."
      tags:
        - Suppliers
    post:
      consumes:
        - application/json
      operationId: Suppliers_Post
      parameters:
        - description: Information of Supplier to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SupplierDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Creates a new Supplier.
      tags:
        - Suppliers
  /v1/suppliers/batch:
    put:
      consumes:
        - application/json
      operationId: Suppliers_ProcessBatch
      parameters:
        - description: Batch of Suppliers to process.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/BatchItem_SupplierDto_'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Processes a batch of Suppliers.
      tags:
        - Suppliers
  '/v1/suppliers/{id}':
    delete:
      operationId: Suppliers_Delete
      parameters:
        - description: Id of Supplier to remove.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Timestamp of Supplier to remove. Should be encoded in Base64.
          in: query
          name: timestamp
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Removes an existing Supplier.
      tags:
        - Suppliers
    get:
      parameters:
        - description: Id of Supplier to return.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: >-
            If "true" then Supplier's ledger balance will be calculated;
            otherwise balance will be returned as 0.
          in: query
          name: needBalance
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupplierDto'
      summary: >-
        Returns information about a single Supplier. You may specify that
        Supplier's ledger balance should be calculated.
      tags:
        - Suppliers
    put:
      consumes:
        - application/json
      operationId: Suppliers_Put
      parameters:
        - description: Id of Supplier to update.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Information of Supplier to update.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SupplierDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Updates an existing Supplier.
      tags:
        - Suppliers
  '/v1/suppliers/{itemId}/accountTrans':
    get:
      operationId: Suppliers_GetAccountTrans
      parameters:
        - description: Id of Supplier to return account transaction.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AccountTranDto'
            type: array
      summary: Returns a list of Supplier's account transactions.
      tags:
        - Suppliers
  '/v1/suppliers/{itemId}/openingBalance':
    get:
      operationId: Suppliers_GetOpeningBalance
      parameters:
        - description: Id of Supplier to return opening balances.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OwnerOpeningBalanceInPeriodsDto'
      summary: >-
        Returns a Supplier's opening balances, calculated for the next periods:
        current month, one month old, two months old, three and more months old.
      tags:
        - Suppliers
  '/v1/suppliers/{itemId}/openingBalanceList':
    get:
      operationId: Suppliers_GetOpeningBalanceList
      parameters:
        - description: Id of Supplier to return opening balances transaction.
          format: int64
          in: path
          name: itemId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OwnerOpeningBalanceDto'
            type: array
      summary: Returns a list of Supplier's opening balance transactions.
      tags:
        - Suppliers
  /v1/userDefinedFields:
    get:
      operationId: UserDefinedFields_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_UserDefinedFieldDto_'
      summary: "Returns a list of company's User Defined Fields. Supports OData querying protocol.\r\nFiltering is allowed by \"categoryTypeId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      tags:
        - UserDefinedFields
  /v1/vatAnalysisTypes:
    get:
      operationId: VatAnalysisTypes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_VatAnalysisTypeDto_'
      summary: "Returns a list of global Vat Analysis Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - VatAnalysisTypes
  /v1/vatCategories:
    get:
      operationId: VatCategories_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_VatCategoryDto_'
      summary: "Returns a list of global Vat Categories. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - VatCategories
  /v1/vatCategories/vatRates:
    post:
      consumes:
        - application/json
      operationId: VatCategories_ProcessVatRates
      parameters:
        - description: Array of Vat Rates.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/VatRatesByVatCategoryDto'
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
      summary: Process Vat Rates
      tags:
        - VatCategories
  /v1/vatRates:
    get:
      operationId: VatRates_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_VatRateDto_'
      summary: "Returns a list of company's Vat Rates. Supports OData querying protocol.\r\nFiltering is allowed by \"vatCategoryId\" field.\r\nOrdering is allowed by \"id\" and \"orderIndex\" fields."
      tags:
        - VatRates
  /v1/vatTypes:
    get:
      operationId: VatTypes_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageResult_VatTypeDto_'
      summary: "Returns a list of global Vat Types. Supports OData querying protocol.\r\nFiltering is forbidden.\r\nOrdering is allowed by \"id\" field."
      tags:
        - VatTypes
schemes:
  - https
swagger: '2.0'
x-components:
  requestBodies:
    QuoteDto:
      content:
        application/json:
          schema:
            $ref: '#/definitions/QuoteDto'
      description: Information of Quote to create.
      required: true

