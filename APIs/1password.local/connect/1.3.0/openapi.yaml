basePath: /
definitions:
  APIRequest:
    description: >-
      Represents a request that was made to the API. Including what Token was
      used and what resource was accessed.
    properties:
      action:
        enum:
          - READ
          - CREATE
          - UPDATE
          - DELETE
        type: string
      actor:
        properties:
          account:
            type: string
          id:
            format: uuid
            type: string
          jti:
            type: string
          requestIp:
            type: string
          userAgent:
            type: string
        type: object
      requestId:
        description: The unique id used to identify a single request.
        format: uuid
        type: string
      resource:
        properties:
          item:
            properties:
              id:
                pattern: '^[\da-z]{26}$'
                type: string
            type: object
          itemVersion:
            type: integer
          type:
            enum:
              - ITEM
              - VAULT
            type: string
          vault:
            properties:
              id:
                pattern: '^[\da-z]{26}$'
                type: string
            type: object
        type: object
      result:
        enum:
          - SUCCESS
          - DENY
        type: string
      timestamp:
        description: The time at which the request was processed by the server.
        format: date-time
        readOnly: true
        type: string
    type: object
  ErrorResponse:
    properties:
      message:
        description: A message detailing the error
        type: string
      status:
        description: HTTP Status Code
        type: integer
    type: object
  Field:
    properties:
      entropy:
        description: >-
          For fields with a purpose of `PASSWORD` this is the entropy of the
          value
        readOnly: true
        type: number
      generate:
        default: false
        description: >-
          If value is not present then a new value should be generated for this
          field
        type: boolean
      id:
        type: string
      label:
        type: string
      purpose:
        description: >-
          Some item types, Login and Password, have fields used for autofill.
          This property indicates that purpose and is required for some item
          types.
        enum:
          - ''
          - USERNAME
          - PASSWORD
          - NOTES
        type: string
      recipe:
        $ref: '#/definitions/GeneratorRecipe'
      section:
        properties:
          id:
            type: string
        type: object
      type:
        default: STRING
        enum:
          - STRING
          - EMAIL
          - CONCEALED
          - URL
          - TOTP
          - DATE
          - MONTH_YEAR
          - MENU
        type: string
      value:
        type: string
    required:
      - id
      - type
    type: object
  File:
    example:
      content: VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=
      content_path: >-
        v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content
      id: 6r65pjq33banznomn7q22sj44e
      name: foo.txt
      size: 35
    properties:
      content:
        description: >-
          Base64-encoded contents of the file. Only set if size <=
          OP_MAX_INLINE_FILE_SIZE_KB kb and `inline_files` is set to `true`.
        format: byte
        type: string
      content_path:
        description: >-
          Path of the Connect API that can be used to download the contents of
          this file.
        readOnly: true
        type: string
      id:
        description: ID of the file
        type: string
      name:
        description: Name of the file
        type: string
      section:
        description: 'For files that are in a section, this field describes the section.'
        properties:
          id:
            type: string
        type: object
      size:
        description: Size in bytes of the file
        type: integer
    type: object
  FullItem:
    allOf:
      - $ref: '#/definitions/Item'
      - properties:
          fields:
            items:
              $ref: '#/definitions/Field'
            type: array
          files:
            items:
              $ref: '#/definitions/File'
            type: array
          sections:
            items:
              properties:
                id:
                  type: string
                label:
                  type: string
              type: object
            type: array
        type: object
  GeneratorRecipe:
    description: >-
      The recipe is used in conjunction with the "generate" property to set the
      character set used to generate a new secure value
    properties:
      characterSets:
        items:
          enum:
            - LETTERS
            - DIGITS
            - SYMBOLS
          type: string
        maximum: 3
        minimum: 0
        type: array
        uniqueItems: true
      length:
        default: 32
        description: Length of the generated value
        maximum: 64
        minimum: 1
        type: integer
    type: object
  Item:
    properties:
      category:
        enum:
          - LOGIN
          - PASSWORD
          - API_CREDENTIAL
          - SERVER
          - DATABASE
          - CREDIT_CARD
          - MEMBERSHIP
          - PASSPORT
          - SOFTWARE_LICENSE
          - OUTDOOR_LICENSE
          - SECURE_NOTE
          - WIRELESS_ROUTER
          - BANK_ACCOUNT
          - DRIVER_LICENSE
          - IDENTITY
          - REWARD_PROGRAM
          - DOCUMENT
          - EMAIL_ACCOUNT
          - SOCIAL_SECURITY_NUMBER
          - CUSTOM
        type: string
      createdAt:
        format: date-time
        readOnly: true
        type: string
      favorite:
        default: false
        type: boolean
      id:
        pattern: '^[\da-z]{26}$'
        type: string
      lastEditedBy:
        readOnly: true
        type: string
      state:
        enum:
          - ARCHIVED
          - DELETED
        readOnly: true
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      urls:
        example:
          - href: 'https://example.com'
            primary: true
          - href: 'https://example.org'
        items:
          properties:
            href:
              format: url
              type: string
            primary:
              type: boolean
          required:
            - href
          type: object
        type: array
      vault:
        properties:
          id:
            pattern: '^[\da-z]{26}$'
            type: string
        required:
          - id
        type: object
      version:
        type: integer
    required:
      - vault
      - category
    type: object
  Patch:
    items:
      properties:
        op:
          enum:
            - add
            - remove
            - replace
          type: string
        path:
          description: >-
            An RFC6901 JSON Pointer pointing to the Item document, an Item
            Attribute, and Item Field by Field ID, or an Item Field Attribute
          example: /fields/06gnn2b95example10q91512p5/label
          type: string
        value:
          type: object
      required:
        - op
        - path
      type: object
    type: array
  ServiceDependency:
    description: The state of a registered server dependency.
    properties:
      message:
        description: Human-readable message for explaining the current state.
        type: string
      service:
        type: string
      status:
        type: string
    type: object
  Vault:
    properties:
      attributeVersion:
        description: The vault version
        type: integer
      contentVersion:
        description: The version of the vault contents
        type: integer
      createdAt:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        pattern: '^[\da-z]{26}$'
        type: string
      items:
        description: Number of active items in the vault
        type: integer
      name:
        type: string
      type:
        enum:
          - USER_CREATED
          - PERSONAL
          - EVERYONE
          - TRANSFER
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    type: object
host: 1password.local
info:
  contact:
    email: support@1password.com
    name: 1Password Integrations
    url: 'https://support.1password.com/'
  description: REST API interface for 1Password Connect.
  title: 1Password Connect
  version: 1.3.0
  x-apisguru-categories:
    - security
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/1password-logo.svg/1280px-1password-logo.svg.png
  x-origin:
    - format: openapi
      url: >-
        https://i.1password.com/media/1password-connect/1password-connect-api.yaml
      version: '3.0'
  x-providerName: 1password.local
  x-serviceName: connect
paths:
  /activity:
    get:
      operationId: GetApiActivity
      parameters:
        - default: 50
          description: How many API Events should be retrieved in a single request.
          in: query
          name: limit
          type: integer
        - default: 0
          description: How far into the collection of API Events should the response start
          in: query
          name: offset
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Range:
              description: >-
                An decription of what part of the collection has been returned
                as well as the total size.
              type: string
          schema:
            items:
              $ref: '#/definitions/APIRequest'
            type: array
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Retrieve a list of API Requests that have been made.
      tags:
        - Activity
  /health:
    get:
      operationId: GetServerHealth
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              dependencies:
                items:
                  $ref: '#/definitions/ServiceDependency'
                type: array
              name:
                type: string
              version:
                description: The Connect server's version
                type: string
            required:
              - name
              - version
            type: object
      servers:
        - url: 'http://localhost:8080'
      summary: Get state of the server and its dependencies.
      tags:
        - Health
  /heartbeat:
    get:
      operationId: GetHeartbeat
      parameters: []
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            example: .
            type: string
      servers:
        - url: 'http://localhost:8080'
      summary: Ping the server for liveness
      tags:
        - Health
  /metrics:
    get:
      description: See Prometheus documentation for a complete data model.
      operationId: GetPrometheusMetrics
      parameters: []
      produces:
        - text/plain
      responses:
        '200':
          description: Successfully returned Prometheus metrics
          schema:
            example: >
              # HELP go_gc_duration_seconds A summary of the pause duration of
              garbage collection cycles.

              # TYPE go_gc_duration_seconds summary

              go_gc_duration_seconds{quantile="0"} 2.9153e-05

              go_gc_duration_seconds{quantile="0.25"} 6.2832e-05

              go_gc_duration_seconds{quantile="0.5"} 9.7187e-05

              go_gc_duration_seconds{quantile="0.75"} 0.000112967

              go_gc_duration_seconds{quantile="1"} 0.000215819

              go_gc_duration_seconds_sum 0.001376862

              go_gc_duration_seconds_count 14
            type: string
      servers:
        - url: 'http://localhost:8080'
      summary: Query server for exposed Prometheus metrics
      tags:
        - Metrics
  /vaults:
    get:
      operationId: GetVaults
      parameters:
        - description: Filter the Vault collection based on Vault name using SCIM eq filter
          in: query
          name: filter
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Vault'
            type: array
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get all Vaults
      tags:
        - Vaults
  '/vaults/{vaultUuid}':
    get:
      operationId: GetVaultById
      parameters:
        - description: The UUID of the Vault to fetch Items from
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vault'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Vault not found
          examples:
            application/json:
              message: 'vault {itemUuid} not found'
              status: 404
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get Vault details and metadata
      tags:
        - Vaults
  '/vaults/{vaultUuid}/items':
    get:
      operationId: GetVaultItems
      parameters:
        - description: The UUID of the Vault to fetch Items from
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - description: Filter the Item collection based on Item name using SCIM eq filter
          in: query
          name: filter
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Item'
            type: array
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Vault not found
          examples:
            application/json:
              message: 'vault {vaultUuid} not found'
              status: 404
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get all items for inside a Vault
      tags:
        - Items
    post:
      consumes:
        - application/json
      operationId: CreateVaultItem
      parameters:
        - description: The UUID of the Vault to create an Item in
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FullItem'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FullItem'
        '400':
          description: Unable to create item due to invalid input
          examples:
            application/json:
              message: Invalid item category
              status: 400
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Create a new Item
      tags:
        - Items
  '/vaults/{vaultUuid}/items/{itemUuid}':
    delete:
      operationId: DeleteVaultItem
      parameters:
        - description: The UUID of the Vault the item is in
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - description: The UUID of the Item to update
          in: path
          name: itemUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully deleted an item
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Delete an Item
      tags:
        - Items
    get:
      operationId: GetVaultItemById
      parameters:
        - description: The UUID of the Vault to fetch Item from
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - description: The UUID of the Item to fetch
          in: path
          name: itemUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FullItem'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get the details of an Item
      tags:
        - Items
    patch:
      consumes:
        - application/json
      description: >
        Applies a modified [RFC6902 JSON
        Patch](https://tools.ietf.org/html/rfc6902) document to an Item or
        ItemField. This endpoint only supports `add`, `remove` and `replace`
        operations.


        When modifying a specific ItemField, the ItemField's ID in the `path`
        attribute of the operation object: `/fields/{fieldId}`
      operationId: PatchVaultItem
      parameters:
        - description: The UUID of the Vault the item is in
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - description: The UUID of the Item to update
          in: path
          name: itemUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Patch'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            OK - Item updated. If no Patch operations were provided, Item is
            unmodified.
          schema:
            $ref: '#/definitions/FullItem'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Update a subset of Item attributes
      tags:
        - Items
    put:
      consumes:
        - application/json
      operationId: UpdateVaultItem
      parameters:
        - description: The UUID of the Item's Vault
          in: path
          name: vaultUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - description: The UUID of the Item to update
          in: path
          name: itemUuid
          pattern: '^[\da-z]{26}$'
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FullItem'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FullItem'
        '400':
          description: Unable to create item due to invalid input
          examples:
            application/json:
              message: 'The item doesn''t have a {example field name} field.'
              status: 400
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Update an Item
      tags:
        - Items
  '/vaults/{vaultUuid}/items/{itemUuid}/files':
    get:
      operationId: GetItemFiles
      parameters:
        - description: The UUID of the Vault to fetch Items from
          format: uuid
          in: path
          name: vaultUuid
          required: true
          type: string
        - description: The UUID of the Item to fetch files from
          format: uuid
          in: path
          name: itemUuid
          required: true
          type: string
        - description: >-
            Tells server to return the base64-encoded file contents in the
            response.
          in: query
          name: inline_files
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/File'
            type: array
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '413':
          description: File content too large to display
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get all the files inside an Item
      tags:
        - Files
  '/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}':
    get:
      operationId: GetDetailsOfFileById
      parameters:
        - description: The UUID of the Vault to fetch Item from
          format: uuid
          in: path
          name: vaultUuid
          required: true
          type: string
        - description: The UUID of the Item to fetch File from
          format: uuid
          in: path
          name: itemUuid
          required: true
          type: string
        - description: The UUID of the File to fetch
          format: uuid
          in: path
          name: fileUuid
          required: true
          type: string
        - description: >-
            Tells server to return the base64-encoded file contents in the
            response.
          in: query
          name: inline_files
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/File'
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Unauthorized access
          examples:
            application/json:
              message: 'vault {vaultUuid} is not in scope'
              status: 403
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: File not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '413':
          description: File content too large to display
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get the details of a File
      tags:
        - Files
  '/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content':
    get:
      operationId: DownloadFileByID
      parameters: []
      produces:
        - application/octet-stream
        - application/json
      responses:
        '200':
          description: Success
          headers:
            Content-Disposition:
              type: string
            Content-Length:
              type: string
          schema:
            format: binary
            type: string
        '401':
          description: Invalid or missing token
          examples:
            application/json:
              message: Invalid token signature
              status: 401
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: File not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ConnectToken: []
      summary: Get the content of a File
      tags:
        - Files
    parameters:
      - description: The UUID of the Vault the item is in
        format: uuid
        in: path
        name: vaultUuid
        required: true
        type: string
      - description: The UUID of the Item the File is in
        format: uuid
        in: path
        name: itemUuid
        required: true
        type: string
      - description: UUID of the file to get content from
        in: path
        name: fileUuid
        required: true
        type: string
schemes:
  - http
securityDefinitions:
  ConnectToken:
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: Access and manage items inside 1Password Vaults
    name: Items
  - description: Access 1Password Vaults
    name: Vaults
  - description: Access API Request Activity
    name: Activity
x-components: {}

