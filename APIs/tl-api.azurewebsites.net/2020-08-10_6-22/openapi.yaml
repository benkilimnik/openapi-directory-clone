basePath: /
definitions:
  ApiException:
    allOf:
      - $ref: '#/definitions/Exception'
      - additionalProperties: false
        properties:
          customError:
            x-nullable: true
          errors:
            items:
              $ref: '#/definitions/ValidationError'
            type: array
            x-nullable: true
          isCustomErrorObject:
            type: boolean
          isModelValidatonError:
            type: boolean
          referenceDocumentLink:
            type: string
            x-nullable: true
          referenceErrorCode:
            type: string
            x-nullable: true
          statusCode:
            format: int32
            type: integer
        type: object
  ApiResponse:
    additionalProperties: false
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
      statusCode:
        format: int32
        type: integer
      version:
        type: string
        x-nullable: true
    type: object
  ArticleDTO:
    additionalProperties: false
    description: >-
      The ArticleDTO Class.

      Contains relevant fields of Article DTO by masking actual Article entity's
      fields in application.
                  
    properties:
      activeStatus:
        description: 'Active Status '
        type: boolean
      applyForAllGyms:
        type: boolean
      articleId:
        format: int32
        type: integer
      availableGyms:
        items:
          $ref: '#/definitions/GymDTO'
        type: array
      availableQty:
        description: Default AvailableQty
        format: decimal
        type: number
      barcode:
        maxLength: 100
        minLength: 0
        type: string
        x-nullable: true
      createdDate:
        format: date-time
        type: string
      createdUser:
        type: string
        x-nullable: true
      cronExpression:
        description: 'Access Schedule CRON Expression '
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      discount:
        format: decimal
        pattern: '^\d+.\d{0,2}$|^\d'
        type: number
      employeeDiscount:
        description: Default EmployeeDiscount
        format: decimal
        type: number
      employeePrice:
        description: Default EmployeePrice
        format: decimal
        type: number
      gymArticles:
        description: 'Gym Customizations '
        items:
          $ref: '#/definitions/GymArticleDetailsDTO'
        type: array
        x-nullable: true
      isAddOn:
        type: boolean
      isInventoryItem:
        description: 'Default IsInventoryItem of the Article '
        type: boolean
      isObsolete:
        description: 'Default IsObsolete of the Article '
        type: boolean
      measureUnit:
        minLength: 1
        type: string
      modifiedDate:
        format: date-time
        type: string
      modifiedUser:
        type: string
        x-nullable: true
      name:
        maxLength: 100
        minLength: 0
        type: string
      number:
        format: int32
        type: integer
      price:
        format: decimal
        pattern: '^\d+.\d{0,2}$|^\d'
        type: number
      reorderLevel:
        description: Deafault ReorderLevel
        format: decimal
        type: number
      revenueAccountId:
        description: Default Revenue account
        format: int32
        type: integer
      sellingPrice:
        description: Default SellingPrice
        format: decimal
        type: number
      tags:
        maxLength: 200
        minLength: 0
        type: string
        x-nullable: true
      type:
        minLength: 1
        pattern: item|service|access
        type: string
      vat:
        format: decimal
        pattern: '^\d+.\d{0,2}$|^\d'
        type: number
      vatApplicable:
        description: 'VAT Applicable '
        type: boolean
    required:
      - name
      - type
      - price
      - measureUnit
      - availableGyms
    type: object
  ArticleSearchDTO:
    additionalProperties: false
    description: >-
      The ArticleSearchDTO Class.

      Contains relevant fields of ArticleSearch DTO by masking actual Article
      entity's fields in application.
                  
    properties:
      activeStatus:
        description: 'Active Status '
        type: boolean
      applyForAllGyms:
        type: boolean
      articleId:
        format: int32
        type: integer
      createdDate:
        format: date-time
        type: string
      createdUser:
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      measureUnit:
        description: 'MeasureUnit '
        type: string
        x-nullable: true
      modifiedDate:
        format: date-time
        type: string
      modifiedUser:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      number:
        format: int32
        type: integer
      price:
        format: decimal
        type: number
      sellingPrice:
        description: 'Actual Selling price of the article '
        format: decimal
        type: number
      tags:
        type: string
        x-nullable: true
      totalCount:
        description: 'total number of recode for particular search '
        format: int32
        type: integer
      type:
        description: article type
        type: string
        x-nullable: true
    type: object
  DefaultResponseDTOOfArticleDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
    type: object
  DefaultResponseDTOOfBoolean:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        type: boolean
    type: object
  DefaultResponseDTOOfGymDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
    type: object
  DefaultResponseDTOOfInteger:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        format: int32
        type: integer
    type: object
  DefaultResponseDTOOfListOfArticleSearchDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        items:
          $ref: '#/definitions/ArticleSearchDTO'
        type: array
        x-nullable: true
    type: object
  DefaultResponseDTOOfListOfPackageSearchDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        items:
          $ref: '#/definitions/PackageSearchDTO'
        type: array
        x-nullable: true
    type: object
  DefaultResponseDTOOfPackageDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
    type: object
  DefaultResponseDTOOfPackageSearchDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
    type: object
  DefaultResponseDTOOfStatusDTO:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        x-nullable: true
    type: object
  DefaultResponseDTOOfString:
    additionalProperties: false
    description: |-
      The DefaultResponseDTO Class.
      Contains fields of DefaultResponse DTO in application.
                  
    properties:
      isError:
        type: boolean
      message:
        type: string
        x-nullable: true
      responseException:
        x-nullable: true
      result:
        type: string
        x-nullable: true
    type: object
  Exception:
    additionalProperties: false
    properties:
      InnerException:
        x-nullable: true
      Message:
        type: string
      Source:
        type: string
        x-nullable: true
      StackTrace:
        type: string
        x-nullable: true
    type: object
  GymArticleDetailsDTO:
    additionalProperties: false
    description: |-
      The GymArticleDetailsDTO Class.
      Contains fields of GymArticleDetails DTO in application.
                  
    properties:
      articleId:
        format: int32
        type: integer
      availableQty:
        format: decimal
        type: number
      createdUser:
        description: 'Created User '
        type: string
        x-nullable: true
      employeeDiscount:
        format: decimal
        type: number
      employeePrice:
        format: decimal
        type: number
      gymId:
        description: 'Gym Id where article is related '
        format: int32
        type: integer
      gymIdList:
        description: 'GymId - Gym Id string with comma separated GymIds '
        type: string
        x-nullable: true
      gymName:
        description: Gym Name
        type: string
        x-nullable: true
      id:
        format: int32
        type: integer
      isDefault:
        description: 'Set as the default values for the article '
        type: boolean
      isInventoryItem:
        type: boolean
      isObsolete:
        type: boolean
      modifiedUser:
        description: Modified user
        type: string
        x-nullable: true
      reorderLevel:
        format: decimal
        type: number
      revenueAccountId:
        description: Revenue account Id
        format: int32
        type: integer
      sellingPrice:
        format: decimal
        type: number
    type: object
  GymDTO:
    additionalProperties: false
    description: >-
      The GymDTO Class.

      Contains relevant fields of Gym DTO by masking actual Gym entity's fields
      in application.
                  
    properties:
      externalGymNumber:
        format: int32
        type: integer
      gymId:
        format: int32
        type: integer
      gymName:
        type: string
        x-nullable: true
      location:
        type: string
        x-nullable: true
    type: object
  LoginDTO:
    additionalProperties: false
    description: |-
      The LoginDTO Class.
      Contains relevant fields of Login DTO.
                  
    properties:
      password:
        type: string
        x-nullable: true
      remember:
        type: boolean
      username:
        type: string
        x-nullable: true
    type: object
  MeasureUnitDTO:
    additionalProperties: false
    description: 'Mesure unit to represent article mesure unit '
    properties:
      id:
        description: Id of the table
        format: int32
        type: integer
      name:
        description: Mesure Unit Type
        type: string
        x-nullable: true
      type:
        description: 'Type of the article used with (all, service, item)'
        type: string
        x-nullable: true
    type: object
  MemberDTO:
    additionalProperties: false
    description: >-
      The MemeberDTO Class.

      Contains relevant fields of Member DTO by masking actual Member entity's
      fields in application.
                  
    properties:
      name:
        type: string
        x-nullable: true
    type: object
  MessageStatus:
    additionalProperties: false
    properties:
      messageId:
        type: string
        x-nullable: true
      referenceId:
        format: int32
        type: integer
      source:
        x-nullable: true
      statusId:
        format: int32
        type: integer
      statusText:
        type: string
        x-nullable: true
    type: object
  PackageDTO:
    additionalProperties: false
    description: >-
      The PackageDTO Class.

      Contains relevant fields of Package DTO by masking actual Package entity's
      fields in application.
                  
    properties:
      addOns:
        description: |-
          Extra articles list added to the given package.
                      
        items:
          $ref: '#/definitions/PackageItemDTO'
        type: array
        x-nullable: true
      addonFee:
        description: |-
          sum of addon fees.
          incoming values for this filed will ignore.
                      
        format: decimal
        type: number
      applyForAllGyms:
        description: >-
          Boolean value to indicate wheather package is available in all the
          gyms.
                      
        type: boolean
      availableGyms:
        description: |-
          Gyms list where this package is available.
                      
        items:
          $ref: '#/definitions/GymDTO'
        type: array
        x-nullable: true
      bindingPeriod:
        description: >-
          Range of period a member is bound to the contract if he/she choose
          this package.
                      
        format: int32
        type: integer
      createdDate:
        description: |-
          Package created DateTime.
                      
        format: date-time
        type: string
      createdUser:
        description: |-
          Package created user.
                      
        type: string
        x-nullable: true
      description:
        description: |-
          Common descriptions about package.If there are more instructions 
                       can be stored as comma separated values.
                      
        type: string
        x-nullable: true
      endDate:
        description: |-
          End date of the package.After that package is not valid for use.
                      
        format: date-time
        type: string
      expireInMonths:
        description: |-
          No of months the fixed package is valid for sale
                      
        format: int32
        type: integer
      features:
        description: |-
          What are the facilities, features available for package.ex:- wifi,
          ACm etc.Can be stored as comma seperated values.
                      
        type: string
        x-nullable: true
      freeMonths:
        description: |-
          No of months gym member can come without payments.
                      
        format: int32
        type: integer
      instructionsToGymUsers:
        description: |-
          Instruction to the gym members relevant to the package.
                       If there are more instructions can be stored as comma seperated values.
                      
        type: string
        x-nullable: true
      instructionsToWebUsers:
        description: |-
          Instruction to the MRM members relevant to the package.
                       If there are more instructions can be stored as comma seperated values.
                      
        type: string
        x-nullable: true
      isActive:
        description: |-
          Boolean value to indicate this package is still active or not.
                      
        type: boolean
      isAtg:
        description: >-
          Boolean value to indicate ATG transaction from bank is applicable or
          not.
                      
        type: boolean
      isAutoRenew:
        description: >-
          Boolean value to indicate the contract will auto renew after
          expiration 
                       if this package would be chosen.
                      
        type: boolean
      isFirstMonthFree:
        description: |-
          Boolean value to indicate if the first month charges is free.
                      
        type: boolean
      isRegistrationFee:
        description: |-
          Boolean value to indicate this package has registration fee or not.
                      
        type: boolean
      isRestAmount:
        description: |-
          Boolean value to indicate rest amount is applicable or not.
                      
        type: boolean
      isShownInMobile:
        description: |-
          Boolean value to indicate package is visible in Mobile App or not.
                      
        type: boolean
      isSponsorPackage:
        description: >-
          Boolean value to indicate package can be sponsored or not by other
          party.
                      
        type: boolean
      maximumGiveAwayRestAmount:
        description: |-
          If a member join the gym middle of a month via this package, 
                       what is the maximum amount of price can be neglected from payment from the member.
                      
        format: decimal
        type: number
      memberCanAddAddOns:
        description: >-
          Boolean value to indicate member can add extra addons he wish if he
          choose this package.
                      
        type: boolean
      memberCanLeaveWithinFreePeriod:
        description: |-
          Boolean value to indicate if member can leave from contract within 
                       free period if he/she choose this package.
                      
        type: boolean
      memberCanRemoveAddOns:
        description: >-
          Boolean value to indicate member can remove already added addons if he
          choose this package.
                      
        type: boolean
      modifiedDate:
        description: |-
          Package last modified DateTime.
                      
        format: date-time
        type: string
      modifiedUser:
        description: |-
          Package last modified user.
                      
        type: string
        x-nullable: true
      monthlyFee:
        description: |-
          Monthly installment fee if package is not fixed visit.
          addition of the servicefee and addon fees divided by binding period.
                       read only
                      
        format: decimal
        type: number
      nextPackageNumber:
        description: >-
          Next Package the contract continue after the binding period of this
          package.
                      
        format: int32
        type: integer
      numberOfInstallments:
        description: >-
          Maximum Number of installment a member can divide the package
          price/cost to pay.
                      
        format: int32
        type: integer
      numberOfVisits:
        description: >-
          If package is fixed visit type, then how many visits are available for
          this package.
                      
        format: int32
        type: integer
      packageId:
        format: int32
        type: integer
      packageName:
        minLength: 1
        type: string
      packageNumber:
        type: string
        x-nullable: true
      packageType:
        description: |-
          Package type can be either fixed visit or unlimited.
                      
        minLength: 1
        pattern: fixedvisit|unlimited
        type: string
      perVisitPrice:
        description: |-
          Cost/Price of the single visit to gym.
                      
        format: decimal
        type: number
      registrationFee:
        description: |-
          Registartion fee for the package at a gym.
                       read only
                      
        format: decimal
        type: number
      serviceFee:
        description: |-
          total Service charge of the package for entire period.
                      
        format: decimal
        type: number
      shownInWeb:
        description: |-
          Boolean value to show this package in MRM system or not.
                      
        type: boolean
      startDate:
        description: |-
          Start date of the package.
                      
        format: date-time
        type: string
      tags:
        description: >-
          Comma separated string values in case of need of maintain some labels
          kind of 
                       stuff relevant to the package.
                      
        type: string
        x-nullable: true
      totalPrice:
        description: >-
          total price for the package including Addon fees, service fee and
          registration fee.

          incoming values for this field will ignore.
                      
        format: decimal
        type: number
    required:
      - packageName
      - registrationFee
      - packageType
      - serviceFee
    type: object
  PackageItemDTO:
    additionalProperties: false
    description: >-
      The PackageItemDTO Class.

      Contains relevant fields of PackageItem DTO by masking actual Package
      entity's fields in application.
                  
    properties:
      articleId:
        description: |-
          Refer to ArticleId in Article table in DB.
                      
        format: int32
        type: integer
      articleName:
        description: |-
          Name of the article(Addon) in a particular package.
                       read only
                      
        type: string
        x-nullable: true
      articleNumber:
        description: |-
          Number assigned the article(Addon) in a particular package.
                       read only
                      
        format: int32
        type: integer
      articlePrice:
        description: |-
          Price of the article determined from that package.
          Price of a same article can be varied from package to package.
                      
        format: decimal
        type: number
      endOrder:
        description: |-
          Number of the installment this article is available to.
                      
        format: int32
        type: integer
      isIncludeServiceInCharge:
        description: 'Is Included in service charge '
        type: boolean
      measureUnit:
        type: string
        x-nullable: true
      numberOfItems:
        description: |-
          How many article(Addon) is available for that package from that type.
                      
        format: decimal
        type: number
      startOrder:
        description: |-
          Number of the installment this article is available from.
                      
        format: int32
        type: integer
    required:
      - articleId
    type: object
  PackageSearchDTO:
    additionalProperties: false
    description: >-
      The PackageSearchDTO Class.

      Contains relevant fields of PackageSearch DTO by masking actual Package
      entity's fields in application.
                     
    properties:
      activeStatus:
        description: 'Active Status '
        type: boolean
      addonFee:
        description: |-
          sum of addon fees.
          incoming values for this filed will ignore.
                      
        format: decimal
        type: number
      applyForAllGyms:
        description: >-
          Boolean value to indicate wheather package is available in all the
          gyms.
                      
        type: boolean
      bindingPeriod:
        description: >-
          Range of period a member is bound to the contract if he/she choose
          this package.
                      
        format: int32
        type: integer
      createdDate:
        description: |-
          Package created DateTime.
                      
        format: date-time
        type: string
      createdUser:
        description: |-
          Package created user.
                      
        type: string
        x-nullable: true
      description:
        description: >-
          Common descriptions about package.If there are more instructions can
          be stored as comma separated values.
                      
        type: string
        x-nullable: true
      features:
        description: >-
          What are the facilities, features available for package.ex:- wifi, ACm
          etc.Can be stored as comma seperated values.
                      
        type: string
        x-nullable: true
      freeMonths:
        description: |-
          No of months gym member can come without payments.
                      
        format: int32
        type: integer
      memberCanRemoveAddOns:
        description: >-
          Boolean value to indicate member can remove already added addons if he
          choose this package.
                      
        type: boolean
      modifiedDate:
        description: |-
          Package last modified DateTime.
                      
        format: date-time
        type: string
      modifiedUser:
        description: |-
          Package last modified user.
                      
        type: string
        x-nullable: true
      monthlyFee:
        description: |-
          Monthly installment fee if package is not fixed visit.
          addition of the servicefee and addon fees divided by binding period.
                      
        format: decimal
        type: number
      numberOfVisits:
        description: 'No of visits for fixed package '
        format: int32
        type: integer
      packageId:
        format: int32
        type: integer
      packageName:
        type: string
        x-nullable: true
      packageNumber:
        format: int32
        type: integer
      packageType:
        description: |-
          Package type can be either fixed visit or unlimited.
                      
        type: string
        x-nullable: true
      registrationFee:
        description: |-
          Registartion fee for the package at a gym.
                      
        format: decimal
        type: number
      serviceFee:
        description: |-
          total Service charge of the package for entire period.
                      
        format: decimal
        type: number
      tags:
        description: >-
          Comma separated string values in case of need of maintain some labels
          kind of stuff relevant to the package.
                      
        type: string
        x-nullable: true
      totalCount:
        description: 'total number of recode for particular search '
        format: int32
        type: integer
      totalPrice:
        description: >-
          total price for the package including Addon fees, service fee and
          registration fee.

          incoming values for this field will ignore.
                      
        format: decimal
        type: number
    type: object
  ProblemDetails:
    additionalProperties: false
    properties:
      detail:
        type: string
        x-nullable: true
      extensions:
        additionalProperties: {}
        type: object
        x-nullable: true
      instance:
        type: string
        x-nullable: true
      status:
        format: int32
        type: integer
        x-nullable: true
      title:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  StatusDTO:
    additionalProperties: false
    description: |-
      Imideate response for long running api call.
                  
    properties:
      messageId:
        description: |-
          Reference id for status endpoint
                      
        type: string
        x-nullable: true
      statusText:
        description: |-
          Status of API Call
                      
        type: string
        x-nullable: true
      url:
        description: |-
          Relative url for stauts check
                      
        type: string
        x-nullable: true
    type: object
  TestDTO:
    additionalProperties: false
    description: >-
      The TestDTO Class.

      Contains relevant fields of Test DTO by masking actual Test entity's
      fields in application.
                  
    properties:
      id:
        description: |-
          Id of the Test object
                      
        format: int32
        type: integer
    type: object
  UserDTO:
    additionalProperties: false
    description: >-
      The UserDTO Class.

      Contains relevant fields of User DTO by masking actual User entity's
      fields in application.
                  
    properties:
      accountNumber:
        description: >-
          Account number of the user.It can be any stakeholder of the
          application.even can be a gym.
                      
        type: string
        x-nullable: true
      externalEntityNumber:
        description: |-
          Entity number that make a relationship with BOX API DB.
                      
        type: string
        x-nullable: true
      guardian:
        description: |-
          Gaurdian of the this user if he/she is under 18 years old.
                      
        format: int32
        type: integer
      gymNumber:
        description: |-
          If this user is a gym, then the gym number.
                      
        type: string
        x-nullable: true
      introduceBy:
        description: >-
          If Someone introduced this user to the system, then that user's
          UserId.
                      
        format: int32
        type: integer
      name:
        description: |-
          Name of the user.
                      
        type: string
        x-nullable: true
      number:
        description: |-
          Unique number maintain by application to idenify user.
                      
        type: string
        x-nullable: true
      typeId:
        description: |-
          Type of the user.
                      
        format: int32
        type: integer
      userId:
        description: >-
          Indentity number(primary key) for user object. Generated in DB table
          when inserting a record.
                      
        format: int32
        type: integer
    type: object
  ValidationError:
    additionalProperties: false
    properties:
      field:
        type: string
        x-nullable: true
      message:
        type: string
        x-nullable: true
    type: object
host: tl-api.azurewebsites.net
info:
  contact:
    email: support@unicorn-solutions.com
    name: Unicorn Solutions
    url: 'https://unicorn-solutions.com'
  description: Web API for TL mobile and web app
  license:
    name: Use under Unicorn
    url: 'https://unicorn-solutions.com'
  termsOfService: None
  title: API
  version: 2020-08-10_6-22
  x-origin:
    - format: openapi
      url: 'https://tl-api.azurewebsites.net/swagger/default/swagger.json'
      version: '3.0'
  x-providerName: tl-api.azurewebsites.net
paths:
  /api/Article:
    delete:
      operationId: Article_Delete
      parameters:
        - description: indentity number(primary key) for article object
          format: int32
          in: query
          name: ArticleId
          type: integer
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: 'operation was success(true) or fail(false) '
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfInteger'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfInteger'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Delete article from the system
                    
      tags:
        - Article
    post:
      consumes:
        - application/json
      operationId: Article_Post
      parameters:
        - description: article object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ArticleDTO'
          x-name: article
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: messageId that can use to get the status of import later on.!
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Add new article
                    
      tags:
        - Article
    put:
      consumes:
        - application/json
      operationId: Article_Put
      parameters:
        - description: article object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ArticleDTO'
          x-name: article
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: messageId that can use to get the status of import later on.!
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        update existing article
                    
      tags:
        - Article
  /api/Article/ArticleGymDetails:
    put:
      consumes:
        - application/json
      operationId: Article_UpdateArticleGymDetails
      parameters:
        - in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/GymArticleDetailsDTO'
            type: array
          x-name: articleDetails
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: messageId that can use to get the status of import later on.!
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Add article details that associate with a Gym
                    
      tags:
        - Article
  /api/Article/GetAddons:
    get:
      operationId: Article_GetAddons
      parameters:
        - description: Search text - will be search by the name
          in: query
          name: searchText
          type: string
          x-position: 1
        - default: '-1'
          description: Comma separated gymIds deafult "-1" for all gyms
          in: query
          name: gymIds
          type: string
          x-position: 2
        - default: all
          in: query
          name: type
          type: string
          x-position: 3
        - default: 100
          format: int32
          in: query
          name: limit
          type: integer
          x-position: 4
        - default: 0
          format: int32
          in: query
          name: offset
          type: integer
          x-position: 5
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfArticleSearchDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfArticleSearchDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      tags:
        - Article
  '/api/Article/GymArticle/{articleId}/{gymId}':
    get:
      operationId: Article_GymArticleDetails
      parameters:
        - description: indentity number(primary key) for article object
          format: int32
          in: path
          name: articleId
          required: true
          type: integer
          x-position: 1
        - description: indentity number(primary key) for gym object
          format: int32
          in: path
          name: gymId
          required: true
          type: integer
          x-position: 2
      produces:
        - application/json
      responses:
        '200':
          description: API Response with Article entity
          schema:
            $ref: '#/definitions/GymArticleDetailsDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfArticleSearchDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Get Gym specific properties for article
                    
      tags:
        - Article
  /api/Article/MeasureUnit:
    post:
      consumes:
        - application/json
      operationId: Article_AddMeasureUnit
      parameters:
        - description: list of measureUnit
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/MeasureUnitDTO'
            type: array
          x-name: measureUnits
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: Add measure unit
      tags:
        - Article
  /api/Article/MeasureUnits:
    get:
      operationId: Article_GetMeasureUnits
      parameters:
        - description: 'type of the measure unit (all, item, service)'
          in: query
          name: type
          type: string
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: Get mesure units
      tags:
        - Article
  /api/Article/RevenueAccounts:
    get:
      operationId: Article_GetRevenueAccounts
      parameters: []
      produces:
        - application/json
      responses:
        '202':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: 'Get Revenue Accounts '
      tags:
        - Article
  /api/Article/Search:
    get:
      operationId: Article_Search
      parameters:
        - description: part of article name
          in: query
          name: searchText
          type: string
          x-position: 1
        - default: -1
          description: '-1 for all gyms '
          format: int32
          in: query
          name: gymId
          type: integer
          x-position: 2
        - default: all
          description: filter article type. default is 'all'
          in: query
          name: type
          type: string
          x-position: 3
        - default: '1'
          description: order by column.!-- invalid column will give internal server error
          in: query
          name: orderBy
          type: string
          x-position: 4
        - default: 100
          description: >-
            number of recode in result and default is 100. use negative numbers
            to order by desc
          format: int32
          in: query
          name: limit
          type: integer
          x-position: 5
        - default: 0
          description: number of recodes to skip
          format: int32
          in: query
          name: offset
          type: integer
          x-position: 6
        - default: 1
          description: 'Active Status 1 : Active, 2: Inactive, 3: All, Default : 1'
          format: int32
          in: query
          name: activeStatus
          type: integer
          x-position: 7
      produces:
        - application/json
      responses:
        '200':
          description: API Response with set of a Article entities
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfArticleSearchDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfArticleSearchDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Search articles
        It will only return basic information of article
                    
      tags:
        - Article
  /api/Article/UpdateStatus:
    put:
      operationId: Article_UpdateStatus
      parameters:
        - format: int32
          in: query
          name: ArticleId
          type: integer
          x-position: 1
        - description: '1 : activate , 2 deactivate'
          format: int32
          in: query
          name: status
          type: integer
          x-position: 2
        - description: Updating user
          in: query
          name: userName
          type: string
          x-position: 3
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfInteger'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfInteger'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: 'Deactivate existing article '
      tags:
        - Article
  '/api/Article/{articleID}':
    get:
      operationId: Article_get
      parameters:
        - description: indentity number (primary key) for article object
          format: int32
          in: path
          name: articleID
          required: true
          type: integer
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: API Response with Article entity
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfArticleDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Get article details
        This will return all properties related to article entity
                    
      tags:
        - Article
  /api/Auth/login:
    post:
      consumes:
        - application/json
      operationId: Auth_Login
      parameters:
        - description: Login Credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginDTO'
          x-name: user
          x-position: 1
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Authorizized with a new token or unauthorized request.
          schema:
            format: binary
            type: string
      summary: |-
        Authenticate and provide token for autherizations.
                    
      tags:
        - Auth
  '/api/Gym/{gymID}':
    get:
      operationId: Gym_get
      parameters:
        - description: indentity number (primary key) for gym object
          format: int32
          in: path
          name: gymID
          required: true
          type: integer
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: API Response with Gym entity
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfGymDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/ApiResponse'
      summary: |-
        Get gym details
        This will return all properties related to gym entity
                    
      tags:
        - Gym
  /api/Membership:
    get:
      operationId: Membership_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: API Response with all Members entity as a list.
          schema:
            items:
              $ref: '#/definitions/MemberDTO'
            type: array
        '404':
          description: ''
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - bearer: []
      summary: |-
        Get all of the members details
        This will return all properties related to member entity
                    
      tags:
        - Membership
    post:
      consumes:
        - application/json
      operationId: Membership_Post
      parameters:
        - description: member object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MemberDTO'
          x-name: member
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: newly created member entity
          schema:
            type: boolean
        '404':
          description: ''
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: |-
        Add new Member
                    
      tags:
        - Membership
  /api/Package:
    delete:
      operationId: Package_Delete
      parameters:
        - description: primary key of package entity
          format: int32
          in: query
          name: PackageId
          type: integer
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: >-
            status 1  : success, status 404 : package not found, status -2:
            package already in use 
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfBoolean'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfString'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfString'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Delete existing package
                    
      tags:
        - Package
    get:
      operationId: Package_Get
      parameters:
        - description: primary key of package entity
          format: int32
          in: query
          name: packageId
          type: integer
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: all the fields that related to the package
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfPackageDTO'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfPackageDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Get package details by packageId
                    
      tags:
        - Package
    post:
      consumes:
        - application/json
      operationId: Package_Post
      parameters:
        - description: package object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PackageDTO'
          x-name: package
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: messageId that can use to get the status of import later on.!
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Insert new package into the system
                    
      tags:
        - Package
    put:
      consumes:
        - application/json
      operationId: Package_Put
      parameters:
        - description: package object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PackageDTO'
          x-name: package
          x-position: 1
      produces:
        - application/json
      responses:
        '202':
          description: messageId that can use to get the status of import later on.!
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfStatusDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Update existing package by its ID
                    
      tags:
        - Package
  /api/Package/Search:
    get:
      operationId: Package_Search
      parameters:
        - description: part of package name
          in: query
          name: searchText
          type: string
          x-position: 1
        - default: -1
          description: primary key of TL gym entity
          format: int32
          in: query
          name: gymId
          type: integer
          x-position: 2
        - default: all
          description: filter package type.!-- default is 'all'
          in: query
          name: type
          type: string
          x-position: 3
        - default: '1'
          description: order by column.!-- invalid column will give internal server error
          in: query
          name: orderBy
          type: string
          x-position: 4
        - default: 100
          description: >-
            number of recode in result and default is 100. use negative numbers
            to order by desc
          format: int32
          in: query
          name: limit
          type: integer
          x-position: 5
        - default: 0
          description: number of recodes to skip
          format: int32
          in: query
          name: offset
          type: integer
          x-position: 6
        - default: 1
          description: 'active status active : 1, inactive : 2, all 3, deafult : 1'
          format: int32
          in: query
          name: activeStatus
          type: integer
          x-position: 7
        - default: -1
          description: Packge Category Id
          format: int32
          in: query
          name: categoryId
          type: integer
          x-position: 8
        - default: 0
          description: Start price of the price Range
          format: decimal
          in: query
          name: startpPrice
          type: number
          x-position: 9
        - default: 9999999
          description: End Price of the price Range
          format: decimal
          in: query
          name: endPrice
          type: number
          x-position: 10
        - default: 1
          description: '1 : MRM, 2 : Mobile '
          format: int32
          in: query
          name: requestSource
          type: integer
          x-position: 11
      produces:
        - application/json
      responses:
        '200':
          description: basic information of package entity
          schema:
            items:
              $ref: '#/definitions/DefaultResponseDTOOfPackageSearchDTO'
            type: array
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfListOfPackageSearchDTO'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: |-
        Search packages
                    
      tags:
        - Package
  /api/Package/UpdateStatus:
    put:
      operationId: Package_UpdateStatus
      parameters:
        - description: package Id
          format: int32
          in: query
          name: packageId
          type: integer
          x-position: 1
        - default: 1
          description: 'status : 1 activate, 2 : deactivate'
          format: int32
          in: query
          name: status
          type: integer
          x-position: 2
        - default: system
          description: Status updated User
          in: query
          name: userName
          type: string
          x-position: 3
      produces:
        - application/json
      responses:
        '200':
          description: >-
            status 1 : success, status 404 : package not found, status -2:
            package already in use 
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfBoolean'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfString'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/DefaultResponseDTOOfString'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/ApiException'
      summary: 'Status update of existing package '
      tags:
        - Package
  /api/Status:
    get:
      operationId: Status_Get
      parameters:
        - description: respose of POST request
          in: query
          name: messageId
          type: string
          x-position: 1
      produces:
        - application/json
      responses:
        '200':
          description: >-
            same response result will retrun with different status and
            messageText
          schema:
            $ref: '#/definitions/MessageStatus'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get the current status of message
      tags:
        - Status
  /api/Test:
    get:
      operationId: Test_get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: API Response with test objects as a list.
          schema:
            $ref: '#/definitions/TestDTO'
      summary: |-
        Get the all Test objects.
                    
      tags:
        - Test
  /api/User:
    get:
      operationId: User_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: API Response with User entity
          schema:
            $ref: '#/definitions/UserDTO'
      summary: |-
        Get all Users detail
        This will return all properties related to User entity
                    
      tags:
        - User
  /api/User/registerUser:
    post:
      operationId: User_registerUser
      parameters:
        - description: >-
            Indentity number(primary key) for user object. Generated in DB table
            when inserting a record.
                        
          format: int32
          in: query
          name: UserId
          type: integer
          x-position: 1
        - description: >-
            Account number of the user.It can be any stakeholder of the
            application.even can be a gym.
                        
          in: query
          name: AccountNumber
          type: string
          x-position: 2
        - description: |-
            If this user is a gym, then the gym number.
                        
          in: query
          name: GymNumber
          type: string
          x-position: 3
        - description: |-
            Entity number that make a relationship with BOX API DB.
                        
          in: query
          name: ExternalEntityNumber
          type: string
          x-position: 4
        - description: |-
            Name of the user.
                        
          in: query
          name: Name
          type: string
          x-position: 5
        - description: |-
            Unique number maintain by application to idenify user.
                        
          in: query
          name: Number
          type: string
          x-position: 6
        - description: >-
            If Someone introduced this user to the system, then that user's
            UserId.
                        
          format: int32
          in: query
          name: IntroduceBy
          type: integer
          x-position: 7
        - description: |-
            Gaurdian of the this user if he/she is under 18 years old.
                        
          format: int32
          in: query
          name: Guardian
          type: integer
          x-position: 8
        - description: |-
            Type of the user.
                        
          format: int32
          in: query
          name: TypeId
          type: integer
          x-position: 9
      responses:
        '200':
          description: API Response
        '404':
          description: ''
      summary: |-
        Register a new User
                    
      tags:
        - User
  /api/User/updateuser:
    put:
      operationId: User_updateUser
      parameters:
        - description: >-
            Indentity number(primary key) for user object. Generated in DB table
            when inserting a record.
                        
          format: int32
          in: query
          name: UserId
          type: integer
          x-position: 1
        - description: >-
            Account number of the user.It can be any stakeholder of the
            application.even can be a gym.
                        
          in: query
          name: AccountNumber
          type: string
          x-position: 2
        - description: |-
            If this user is a gym, then the gym number.
                        
          in: query
          name: GymNumber
          type: string
          x-position: 3
        - description: |-
            Entity number that make a relationship with BOX API DB.
                        
          in: query
          name: ExternalEntityNumber
          type: string
          x-position: 4
        - description: |-
            Name of the user.
                        
          in: query
          name: Name
          type: string
          x-position: 5
        - description: |-
            Unique number maintain by application to idenify user.
                        
          in: query
          name: Number
          type: string
          x-position: 6
        - description: >-
            If Someone introduced this user to the system, then that user's
            UserId.
                        
          format: int32
          in: query
          name: IntroduceBy
          type: integer
          x-position: 7
        - description: |-
            Gaurdian of the this user if he/she is under 18 years old.
                        
          format: int32
          in: query
          name: Guardian
          type: integer
          x-position: 8
        - description: |-
            Type of the user.
                        
          format: int32
          in: query
          name: TypeId
          type: integer
          x-position: 9
      responses:
        '200':
          description: API Response true or false
        '404':
          description: ''
      summary: |-
        Update an exsisting User
                    
      tags:
        - User
schemes:
  - https
security:
  - bearer: []
securityDefinitions:
  apikey:
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
  bearer:
    authorizationUrl: 'https://tldev.eu.auth0.com/authorize'
    description: auth0 authentication
    flow: accessCode
    scopes:
      'read:tl_articles': 'read:tl_articles'
      'read:tl_packages': 'read:tl_packages'
    tokenUrl: 'https://tldev.eu.auth0.com/oauth/token'
    type: oauth2
swagger: '2.0'
x-components: {}
x-generator: NSwag v13.4.2.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0))

