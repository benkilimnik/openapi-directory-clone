basePath: /
host: okta.local
info:
  contact: {}
  description: >-
    The [Okta User API](/docs/api/rest/users.html) provides operations to manage
    users in your organization.
  title: Users (Okta API)
  version: 1.0.0
  x-apisguru-categories:
    - security
  x-origin:
    - format: postman
      url: 'https://www.postman.com/collections/1755573c5cf5fbf7968b'
      version: '1.0'
  x-providerName: okta.local
paths:
  /api/v1/users:
    get:
      consumes:
        - application/octet-stream
      description: Find User
      operationId: findUser
      parameters:
        - in: query
          name: q
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Find User
    post:
      consumes:
        - application/json
      description: Create User in Group
      operationId: createUserInGroup
      parameters:
        - in: query
          name: activate
          type: string
        - in: body
          name: body
          schema:
            properties:
              groupIds:
                items:
                  example: '{{groupId}}'
                  type: string
                type: array
              profile:
                properties:
                  email:
                    example: 'isaac@{{email-suffix}}'
                    type: string
                  firstName:
                    example: Isaac
                    type: string
                  lastName:
                    example: Brock
                    type: string
                  login:
                    example: 'isaac@{{email-suffix}}'
                    type: string
                type: object
            type: object
      responses:
        '200':
          description: ''
      summary: Create User in Group
      tags:
        - Create User
  /api/v1/users/me:
    get:
      consumes:
        - application/octet-stream
      description: Get Current User
      operationId: getCurrentUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Get Current User
  '/api/v1/users/{userId}':
    get:
      consumes:
        - application/octet-stream
      description: Get User
      operationId: getUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Get User
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Set Recovery Credential
      operationId: setRecoveryCredential
      parameters:
        - in: body
          name: body
          schema:
            properties:
              credentials:
                properties:
                  recovery_question:
                    properties:
                      answer:
                        example: Annie Oakley
                        type: string
                      question:
                        example: Who's a major player in the cowboy scene?
                        type: string
                    type: object
                type: object
            type: object
      responses:
        '200':
          description: ''
      summary: Set Recovery Credential
      tags:
        - Credential Operations
  '/api/v1/users/{userId}/appLinks':
    get:
      consumes:
        - application/octet-stream
      description: Get Assigned App Links
      operationId: getAssignedAppLinks
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Get Assigned App Links
    parameters:
      - in: path
        name: userId
        required: true
        type: string
  '/api/v1/users/{userId}/credentials/change_password':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Change Password
      operationId: changePassword
      parameters:
        - in: body
          name: body
          schema:
            properties:
              newPassword:
                properties:
                  value:
                    example: 'uTVM,TPw55'
                    type: string
                type: object
              oldPassword:
                properties:
                  value:
                    example: '{{password}}'
                    type: string
                type: object
            type: object
      responses:
        '200':
          description: ''
      summary: Change Password
      tags:
        - Credential Operations
  '/api/v1/users/{userId}/credentials/change_recovery_question':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Change Recovery Question
      operationId: changeRecoveryQuestion
      parameters:
        - in: body
          name: body
          schema:
            properties:
              password:
                properties:
                  value:
                    example: '{{password}}'
                    type: string
                type: object
              recovery_question:
                properties:
                  answer:
                    example: My recovery credentials are updated
                    type: string
                  question:
                    example: What happens when I update my question
                    type: string
                type: object
            type: object
      responses:
        '200':
          description: ''
      summary: Change Recovery Question
      tags:
        - Credential Operations
  '/api/v1/users/{userId}/credentials/forgot_password':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Forgot Password (One Time Code)
      operationId: forgotPassword(oneTimeCode)
      parameters:
        - in: query
          name: sendEmail
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Forgot Password (One Time Code)
      tags:
        - Credential Operations
  '/api/v1/users/{userId}/groups':
    get:
      consumes:
        - application/octet-stream
      description: Get Groups for User
      operationId: getGroupsForUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Get Groups for User
    parameters:
      - in: path
        name: userId
        required: true
        type: string
  '/api/v1/users/{userId}/lifecycle/activate':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Activate User
      operationId: activateUser
      parameters:
        - in: query
          name: sendEmail
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Activate User
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/deactivate':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Deactivate User
      operationId: deactivateUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Deactivate User
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/expire_password':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Set Temp Password
      operationId: setTempPassword
      parameters:
        - in: query
          name: tempPassword
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Set Temp Password
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/reset_factors':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - application/octet-stream
      description: Reset Factors
      operationId: resetFactors
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Reset Factors
  '/api/v1/users/{userId}/lifecycle/reset_password':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Reset Password
      operationId: resetPassword
      parameters:
        - in: query
          name: sendEmail
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Reset Password
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/suspend':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Suspend User
      operationId: suspendUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Suspend User
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/unlock':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Unlock User
      operationId: unlockUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Unlock User
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/lifecycle/unsuspend':
    parameters:
      - in: path
        name: userId
        required: true
        type: string
    post:
      consumes:
        - text/plain
      description: Unsuspend User
      operationId: unsuspendUser
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Unsuspend User
      tags:
        - Lifecycle Operations
  '/api/v1/users/{userId}/sessions':
    delete:
      consumes:
        - application/octet-stream
      description: Clear User Sessions
      operationId: clearUserSessions
      parameters:
        - in: body
          name: body
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: ''
      summary: Clear User Sessions
    parameters:
      - in: path
        name: userId
        required: true
        type: string
schemes:
  - http
swagger: '2.0'
tags:
  - name: Create User
  - name: Credential Operations
  - name: Lifecycle Operations
  - name: List Users

