basePath: /api/v1.0
definitions:
  APIKey:
    properties:
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      comment:
        example: API key used for Splunk integration
        type: string
      counter:
        example: 1
        format: int64
        type: integer
      created_at:
        example: 1576300370
        format: int64
        type: integer
      created_by:
        example: user@example.com
        format: email
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      inactive:
        example: tue
        type: boolean
      last_used_at:
        example: 0
        format: int64
        type: integer
      last_used_ip:
        example: 127.0.0.1
        type: string
      last_used_ua:
        example: curl/7.44.1
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      token:
        example: CTXXXXXXXXXXXXX
        type: string
      type:
        example: org
        type: string
      usage_limit:
        example: 10000
        format: int64
        type: integer
      usage_today:
        example: 100
        format: int64
        type: integer
    required:
      - id
    type: object
  APIKeyOptions:
    properties:
      comment:
        example: Splunk integration key
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
    type: object
  AWSCredentialFields:
    properties:
      access_key:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: string
        type: string
      regions:
        example: 'us-west-1, us-east-2'
        format: string
        type: string
      secret_access_key:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: string
        type: string
    required:
      - access_key
      - secret_access_key
    type: object
  Agent:
    properties:
      arch:
        example: amd64
        type: string
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      connected:
        example: true
        type: boolean
      created_at:
        example: 1576300370
        format: int64
        type: integer
      deactivated_at:
        example: 0
        format: int64
        type: integer
      external_ip:
        example: 1.1.1.1
        type: string
      host_id:
        example: 6f9e6fe52271da70962e007183c5c9c9
        type: string
      hub_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      inactive:
        example: false
        type: boolean
      internal_ip:
        example: 192.168.0.1
        type: string
      last_checkin:
        example: 1576300370
        format: int64
        type: integer
      name:
        example: RUMBLE-AGENT
        format: hostname
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      os:
        example: Windows
        type: string
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      system_info:
        additionalProperties: true
        type: object
      updated_at:
        example: 1576300370
        format: int64
        type: integer
      version:
        example: >-
          1.2.3 (build 20191219224016)
          [fc50c5eefdc3ff5c60533c3c345d14d336396272]
        type: string
    required:
      - id
    type: object
  AgentSiteID:
    properties:
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
    required:
      - site_id
    type: object
  Asset:
    properties:
      addresses:
        items:
          example: 192.168.0.1
          type: string
        type: array
      addresses_extra:
        items:
          example: 192.168.100.1
          type: string
        type: array
      agent_name:
        example: LAPTOP-F4P1R6
        type: string
      alive:
        example: true
        format: boolean
        type: boolean
      attributes:
        additionalProperties:
          type: string
        type: object
      comments:
        example: File Server
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      credentials:
        additionalProperties:
          additionalProperties:
            type: boolean
          type: string
        type: object
      detected_by:
        example: icmp
        type: string
      domains:
        items:
          example: www
          type: string
        type: array
      first_seen:
        example: 1576300370
        format: int64
        type: integer
      hw:
        example: Dell PowerEdge 2500
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_agent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_seen:
        example: 1576300370
        format: int64
        type: integer
      last_task_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      lowest_rtt:
        example: 1
        format: int64
        type: integer
      lowest_ttl:
        example: 0
        format: int64
        type: integer
      mac_vendors:
        items:
          example: Dell
          type: string
        type: array
      macs:
        items:
          example: '11:22:33:44:55:66'
          format: mac
          type: string
        type: array
      names:
        items:
          example: www
          type: string
        type: array
      newest_mac:
        example: '11:22:33:44:55:66'
        format: mac
        type: string
      newest_mac_age:
        example: 1304035200000000000
        format: int64
        type: integer
      newest_mac_vendor:
        example: Intel Corporate
        type: string
      org_name:
        example: Test Labs
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      os:
        example: Ubuntu Linux
        type: string
      os_version:
        example: 18.04
        type: string
      rtts:
        additionalProperties: true
        type: object
      service_count:
        example: 10
        format: int64
        type: integer
      service_count_arp:
        example: 1
        format: int64
        type: integer
      service_count_icmp:
        example: 1
        format: int64
        type: integer
      service_count_tcp:
        example: 7
        format: int64
        type: integer
      service_count_udp:
        example: 1
        format: int64
        type: integer
      service_ports_products:
        items:
          example: bind
          type: string
        type: array
      service_ports_protocols:
        items:
          example: ssh
          type: string
        type: array
      service_ports_tcp:
        items:
          example: 22
          format: port
          type: string
        type: array
      service_ports_udp:
        items:
          example: 53
          format: port
          type: string
        type: array
      services:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        type: object
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      site_name:
        example: Primary
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      type:
        example: Server
        type: string
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
      - version
    type: object
  AssetComments:
    properties:
      comments:
        example: Sales Laptop
        type: string
    required:
      - comments
    type: object
  AssetServiceNow:
    properties:
      addresses_extra:
        example: 192.168.0.5;192.168.0.3
        type: string
      addresses_scope:
        example: 192.168.100.1;192.168.100.2
        type: string
      alive:
        example: true
        format: boolean
        type: boolean
      asset_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      comments:
        example: File Server
        type: string
      detected_by:
        example: icmp
        type: string
      domains:
        example: rumble.run;rumble.local.lan
        type: string
      first_discovered:
        example: '2006-01-02T15:04:05.000Z'
        type: string
      hw_product:
        example: PowerEdge
        type: string
      hw_vendor:
        example: Dell
        type: string
      hw_version:
        example: 2
        type: string
      ip_address:
        example: 192.168.0.1
        type: string
      last_discovered:
        example: '2006-01-02T15:04:05.000Z'
        type: string
      last_updated:
        example: '2006-01-02T15:04:05.000Z'
        type: string
      lowest_rtt:
        example: 1
        format: int64
        type: integer
      lowest_ttl:
        example: 0
        format: int64
        type: integer
      mac_address:
        example: '11:22:33:44:55:66'
        format: mac
        type: string
      mac_manufacturer:
        example: Dell
        type: string
      mac_vendors:
        example: Dell
        type: string
      macs:
        example: '11:22:33:44:55:66'
        format: mac
        type: string
      name:
        example: www;server
        type: string
      newest_mac_age:
        example: '2020-01-01T00:00:00.000Z'
        type: string
      organization:
        example: Headquarters
        type: string
      os_product:
        example: Windows 10
        type: string
      os_vendor:
        example: Microsoft
        type: string
      os_version:
        example: 1903
        type: string
      service_count:
        example: 10
        format: int64
        type: integer
      service_count_arp:
        example: 1
        format: int64
        type: integer
      service_count_icmp:
        example: 1
        format: int64
        type: integer
      service_count_tcp:
        example: 7
        format: int64
        type: integer
      service_count_udp:
        example: 1
        format: int64
        type: integer
      site:
        example: Primary
        type: string
      sys_class_name:
        example: cmdb_ci_iot
        type: string
      tags:
        example: owner=IT;location=Austin
        type: string
      type:
        example: Server
        type: string
    required:
      - asset_id
    type: object
  AssetTags:
    properties:
      tags:
        additionalProperties:
          example: TagValue
          type: string
        type: object
    required:
      - tags
    type: object
  AssetsWithCheckpoint:
    properties:
      assets:
        items:
          $ref: '#/definitions/Asset'
        type: array
      since:
        example: 1576300370
        format: int64
        type: integer
    required:
      - since
      - assets
    type: object
  ComponentVersion:
    description: A component ID and version
    properties:
      id:
        example: agent
        format: string
        type: string
      version:
        example: 1.0.0
        format: string
        type: string
    required:
      - id
      - version
    type: object
  Credential:
    properties:
      acl:
        additionalProperties: true
        example:
          e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user
        type: object
      cidrs:
        example:
          - 10.0.0.47/32
          - 192.168.1.0/24
        items:
          type: string
        type: array
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      created_by_email:
        example: user@example.com
        format: email
        type: string
      created_by_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      global:
        example: false
        type: boolean
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_used_at:
        example: 1576300370
        format: int64
        type: integer
      last_used_by_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      name:
        example: credentials_name
        type: string
      type:
        description: The service the credentials are for.
        enum:
          - miradore_api_key_v1
          - aws_access_secret
        type: string
    required:
      - id
    type: object
  CredentialOptions:
    properties:
      acl:
        additionalProperties: true
        example:
          e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user
          e77602e0-3fb8-4734-aef9-fbc6fdcb0fa9: none
        type: object
      cidrs:
        example: '10.0.0.17/32, 192.168.1.0/24'
        type: string
      global:
        example: false
        type: boolean
      name:
        example: credentials_name
        type: string
      secret:
        additionalProperties: true
        example:
          api_key: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
          hostname: yourcompanyinc.online.miradore.com
        type: object
      type:
        enum:
          - miradore_api_key_v1
          - aws_access_secret
        example: miradore_api_key_v1
        type: string
    type: object
  Event:
    properties:
      action:
        example: login
        type: string
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      details:
        additionalProperties: true
        type: object
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      processed_at:
        example: 0
        format: int64
        type: integer
      processor_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      source_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      source_name:
        example: SiteName
        type: string
      source_type:
        example: api
        type: string
      state:
        example: SiteName
        type: string
      success:
        example: true
        type: boolean
      target_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      target_name:
        example: SiteName
        type: string
      target_type:
        example: api
        type: string
    type: object
  License:
    properties:
      activated_at:
        example: 1576300370
        format: int64
        type: integer
      address_city:
        example: Austin
        type: string
      address_country:
        example: US
        type: string
      address_postal:
        example: 78700
        type: string
      address_region:
        example: Texas
        type: string
      address_street:
        example: 1111 Main St
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      license_expiration:
        example: 1576300370
        format: int64
        type: integer
      license_live_asset_count:
        example: 1000
        format: int64
        type: integer
      license_max_assets:
        example: 1000000
        format: int64
        type: integer
      license_project_asset_count:
        example: 5000
        format: int64
        type: integer
      license_type:
        example: platform
        type: string
      name:
        example: My Company
        type: string
      partner:
        example: Rumble
        type: string
      phone:
        example: 512-555-5555
        type: string
      settings:
        additionalProperties: true
        type: object
      sso_default_role:
        example: viewer
        type: string
      sso_domain:
        example: rumble.run
        type: string
      sso_login_issuer_url:
        example: 'https://accounts.google.com/o/saml2?idpid=issuer'
        type: string
      sso_login_login_url:
        example: 'https://accounts.google.com/o/saml2?idpid=login'
        type: string
      sso_login_logout_url:
        example: 'https://accounts.google.com/o/saml2?idpid=logout'
        type: string
      sso_login_message:
        example: Hello
        type: string
      sso_mode:
        example: required
        type: string
      sso_type:
        example: saml20
        type: string
      subscription_cancel_at:
        example: 1576300370
        format: int64
        type: integer
      subscription_canceled_at:
        example: 1576300370
        format: int64
        type: integer
      subscription_period_end:
        example: 1576300370
        format: int64
        type: integer
      subscription_period_start:
        example: 1576300370
        format: int64
        type: integer
      updated_at:
        example: 1576300370
        format: int64
        type: integer
      via_reseller:
        example: false
        type: boolean
    type: object
  MiradoreCredentialFields:
    properties:
      api_key:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: string
        type: string
      hostname:
        example: yourcompanyinc.online.miradore.com
        format: string
        type: string
    required:
      - hostname
      - api_key
    type: object
  OrgOptions:
    properties:
      description:
        example: 'Wobbly Widgets, Inc.'
        type: string
      expiration_assets_offline:
        example: '365'
        format: number
        type: string
      expiration_assets_stale:
        example: '365'
        format: number
        type: string
      expiration_scans:
        example: '365'
        format: number
        type: string
      export_token:
        example: ETXXXXXXXXXXXXXXXX
        type: string
      name:
        example: My Organization
        type: string
      parent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      project:
        example: false
        format: boolean
        type: string
    type: object
  Organization:
    properties:
      asset_count:
        example: 100
        format: int64
        type: integer
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      deactivated_at:
        example: 0
        format: int64
        type: integer
      description:
        example: All subdivisions of my company
        type: string
      download_token:
        example: DT11226D9EEEA2B035D42569585900
        type: string
      download_token_created_at:
        example: 1576300370
        format: int64
        type: integer
      expiration_assets_offline:
        example: 365
        format: int64
        type: integer
      expiration_assets_stale:
        example: 365
        format: int64
        type: integer
      expiration_scans:
        example: 365
        format: int64
        type: integer
      export_token:
        example: ET11226D9EEEA2B035D42569585900
        type: string
      export_token_counter:
        example: 0
        format: int64
        type: integer
      export_token_created_at:
        example: 1576300370
        format: int64
        type: integer
      export_token_last_used_at:
        example: 0
        format: int64
        type: integer
      export_token_last_used_by:
        example: 127.0.0.1
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      inactive:
        example: false
        type: boolean
      name:
        example: My Company
        type: string
      parent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      permanent:
        example: true
        type: boolean
      project:
        example: false
        type: boolean
      service_count:
        example: 10
        format: int64
        type: integer
      service_count_arp:
        example: 1
        format: int64
        type: integer
      service_count_icmp:
        example: 1
        format: int64
        type: integer
      service_count_tcp:
        example: 7
        format: int64
        type: integer
      service_count_udp:
        example: 1
        format: int64
        type: integer
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
      - name
    type: object
  ScanOptions:
    properties:
      agent:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      excludes:
        type: string
      max-group-size:
        example: '4096'
        type: string
      max-host-rate:
        example: '100'
        type: string
      max-sockets:
        example: '500'
        type: string
      nameservers:
        example: 8.8.8.8
        type: string
      passes:
        example: '3'
        type: string
      probes:
        description: 'Optional probe list, otherwise all probes are used'
        example: >-
          arp,bacnet,connect,dns,echo,ike,ipmi,mdns,memcache,mssql,natpmp,netbios,pca,rdns,rpcbind,sip,snmp,ssdp,syn,ubnt,wlan-list,wsd
        type: string
      rate:
        example: '10000'
        type: string
      scan-description:
        example: Scan of Wireless
        type: string
      scan-frequency:
        enum:
          - once
          - hourly
          - daily
          - weekly
          - monthly
          - continuous
        type: string
      scan-grace-period:
        example: '4'
        type: string
      scan-name:
        example: My Scan
        type: string
      scan-start:
        example: '0'
        format: unixtime
        type: string
      scan-tags:
        example: owner=IT location=Texas
        type: string
      screenshots:
        example: 'true'
        type: string
      targets:
        example: defaults
        type: string
      tcp-ports:
        example: '1-1000,5000-6000'
        type: string
    required:
      - targets
    type: object
  Service:
    properties:
      addresses:
        items:
          example: 192.168.0.1
          type: string
        type: array
      addresses_extra:
        items:
          example: 192.168.100.1
          type: string
        type: array
      agent_name:
        example: LAPTOP-F4P1R6
        type: string
      alive:
        example: true
        format: boolean
        type: boolean
      attributes:
        additionalProperties:
          type: string
        type: object
      comments:
        example: File Server
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      credentials:
        additionalProperties:
          additionalProperties:
            type: boolean
          type: string
        type: object
      detected_by:
        example: icmp
        type: string
      domains:
        items:
          example: CORPNET
          type: string
        type: array
      first_seen:
        example: 1576300370
        format: int64
        type: integer
      hw:
        example: Dell PowerEdge 2500
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_agent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_seen:
        example: 1576300370
        format: int64
        type: integer
      last_task_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      lowest_rtt:
        example: 1
        format: int64
        type: integer
      lowest_ttl:
        example: 0
        format: int64
        type: integer
      mac_vendors:
        items:
          example: Dell
          type: string
        type: array
      macs:
        items:
          example: '11:22:33:44:55:66'
          format: mac
          type: string
        type: array
      names:
        items:
          example: www
          type: string
        type: array
      newest_mac:
        example: '11:22:33:44:55:66'
        format: mac
        type: string
      newest_mac_age:
        example: 1304035200000000000
        format: int64
        type: integer
      newest_mac_vendor:
        example: Intel Corporate
        type: string
      org_name:
        example: Test Labs
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      os:
        example: Ubuntu Linux
        type: string
      os_version:
        example: 18.04
        type: string
      rtts:
        additionalProperties: true
        type: object
      service_address:
        example: 192.168.0.1
        type: string
      service_asset_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      service_count:
        example: 10
        format: int64
        type: integer
      service_count_arp:
        example: 1
        format: int64
        type: integer
      service_count_icmp:
        example: 1
        format: int64
        type: integer
      service_count_tcp:
        example: 7
        format: int64
        type: integer
      service_count_udp:
        example: 1
        format: int64
        type: integer
      service_created_at:
        example: 1576300370
        format: int64
        type: integer
      service_data:
        additionalProperties:
          type: string
        type: object
      service_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      service_link:
        example: 'http://192.168.0.1:80/'
        type: string
      service_port:
        example: 80
        format: port
        type: string
      service_ports_products:
        items:
          example: bind
          type: string
        type: array
      service_ports_protocols:
        items:
          example: ssh
          type: string
        type: array
      service_ports_tcp:
        items:
          example: 22
          format: port
          type: string
        type: array
      service_ports_udp:
        items:
          example: 53
          format: port
          type: string
        type: array
      service_protocol:
        example: http tls
        type: string
      service_screenshot_link:
        type: string
      service_summary:
        example: Login Page
        type: string
      service_transport:
        example: tcp
        type: string
      service_updated_at:
        example: 1576300370
        format: int64
        type: integer
      service_vhost:
        example: www
        type: string
      services:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        type: object
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      site_name:
        example: Primary
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      type:
        example: Server
        type: string
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
      - service_id
    type: object
  Site:
    properties:
      created_at:
        example: 1576300370
        format: int64
        type: integer
      description:
        example: Headquarters
        type: string
      excludes:
        example: 192.168.0.5
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      name:
        example: Primary
        type: string
      permanent:
        example: true
        type: boolean
      scope:
        example: 192.168.0.0/24
        type: string
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
      - name
    type: object
  SiteOptions:
    properties:
      description:
        example: County Office
        type: string
      excludes:
        example: 192.168.10.1
        type: string
      name:
        example: New Site
        type: string
      scope:
        example: 192.168.10.0/24
        type: string
    required:
      - name
    type: object
  Task:
    properties:
      agent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      created_by:
        example: user@example.com
        format: email
        type: string
      created_by_user_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      cruncher_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      description:
        example: Scan the headquarters hourly
        type: string
      error:
        example: agent unavailable
        type: string
      hidden:
        example: false
        type: boolean
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      name:
        example: Hourly Scan
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      params:
        additionalProperties:
          type: string
        type: object
      parent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      recur:
        example: false
        type: boolean
      recur_frequency:
        example: hour
        type: string
      recur_last:
        example: 1576300370
        format: int64
        type: integer
      recur_last_task_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      recur_next:
        example: 1576300370
        format: int64
        type: integer
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      start_time:
        example: 1576300370
        format: int64
        type: integer
      stats:
        additionalProperties: true
        type: object
      status:
        example: processed
        type: string
      type:
        example: scan
        type: string
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
    type: object
  URL:
    description: A URL to a resource
    properties:
      id:
        example: 'https://www.rumble.run/docs/'
        format: url
        type: string
    required:
      - url
    type: object
  User:
    properties:
      client_admin:
        example: true
        type: boolean
      client_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      email:
        example: jsmith@example.com
        type: string
      first_name:
        example: James
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      invite_token_expiration:
        example: 1576300370
        format: int64
        type: integer
      last_login_at:
        example: 1576300370
        format: int64
        type: integer
      last_login_ip:
        example: 192.168.0.1
        type: string
      last_login_ua:
        example: curl/1.0
        type: string
      last_name:
        example: Smith
        type: string
      login_failures:
        example: 0
        format: int64
        type: integer
      org_default_role:
        example: admin
        type: string
      org_roles:
        additionalProperties: true
        type: object
      reset_token_expiration:
        example: 1576300370
        format: int64
        type: integer
      sso_only:
        example: false
        type: boolean
      updated_at:
        example: 1576300370
        format: int64
        type: integer
    required:
      - id
    type: object
  UserInviteOptions:
    properties:
      client_admin:
        example: true
        type: boolean
      email:
        example: jsmith@example.com
        type: string
      first_name:
        example: James
        type: string
      last_name:
        example: Smith
        type: string
      message:
        example: You have been invited to the Rumble Network Discovery platform
        type: string
      org_default_role:
        example: admin
        type: string
      org_roles:
        additionalProperties: true
        type: object
      subject:
        example: Welcome to Rumble
        type: string
    type: object
  UserOptions:
    properties:
      client_admin:
        example: true
        type: boolean
      email:
        example: jsmith@example.com
        type: string
      first_name:
        example: James
        type: string
      last_name:
        example: Smith
        type: string
      org_default_role:
        example: admin
        type: string
      org_roles:
        additionalProperties: true
        type: object
    type: object
  Wireless:
    properties:
      agent_name:
        example: LAPTOP-F4P1R6
        type: string
      authentication:
        example: wpa2-psk
        type: string
      bssid:
        example: '11:22:33:44:55:66'
        format: mac
        type: string
      channels:
        example: '11, 158+1'
        type: string
      created_at:
        example: 1576300370
        format: int64
        type: integer
      data:
        additionalProperties:
          type: string
        type: object
      encryption:
        example: aes
        type: string
      essid:
        example: Free WiFi
        format: uuid
        type: string
      family:
        example: 223344
        type: string
      id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      interface:
        example: wlan0
        type: string
      last_agent_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      last_seen:
        example: 1576300370
        format: int64
        type: integer
      last_task_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      org_name:
        example: Test Labs
        type: string
      organization_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      signal:
        example: 99
        maximum: 100
        minimum: 0
        type: integer
      site_id:
        example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8
        format: uuid
        type: string
      site_name:
        example: Primary
        type: string
      type:
        example: infrastructure
        type: string
      vendor:
        example: Ubiquiti Networks
        type: string
    required:
      - id
    type: object
host: console.rumble.run
info:
  contact:
    email: support@rumble.run
  description: Rumble Network Discovery API
  license:
    name: Commercial
    url: 'https://www.rumble.run/terms'
  title: Rumble API
  version: 2.0.3
  x-apisguru-categories:
    - monitoring
  x-logo:
    url: //www.rumble.run/img/rumble-twitter-card.png
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/RumbleDiscovery/rumble-api/main/rumble-api.yml
      version: '3.0'
  x-providerName: rumble.run
paths:
  /account/agents:
    get:
      operationId: getAccountAgents
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of tasks
          schema:
            items:
              $ref: '#/definitions/Agent'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all agents across all organizations
      tags:
        - Account
  /account/credentials:
    get:
      operationId: getAccountCredentials
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of credentials
          schema:
            items:
              $ref: '#/definitions/Credential'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all account credentials
      tags:
        - Account
    put:
      consumes:
        - application/json
      operationId: createAccountCredential
      parameters:
        - description: credential parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialOptions'
      produces:
        - application/json
      responses:
        '200':
          description: credential details
          schema:
            $ref: '#/definitions/Credential'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new credential
      tags:
        - Account
  '/account/credentials/{credential_id}':
    delete:
      operationId: removeAccountCredential
      parameters:
        - description: UUID of the credential to delete
          format: uuid
          in: path
          name: credential_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove this credential
      tags:
        - Account
    get:
      operationId: getAccountCredential
      parameters:
        - description: UUID of the credential to retrieve
          format: uuid
          in: path
          name: credential_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: credential details
          schema:
            $ref: '#/definitions/Credential'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Get credential details
      tags:
        - Account
  /account/events.json:
    get:
      operationId: exportEventsJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered event results
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: System event log as JSON
      tags:
        - Account
  /account/events.jsonl:
    get:
      operationId: exportEventsJSONL
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered event results
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: System event log as JSON line-delimited
      tags:
        - Account
  /account/keys:
    get:
      operationId: getAccountKeys
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: array of keys
          schema:
            items:
              $ref: '#/definitions/APIKey'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all active API keys
      tags:
        - Account
    put:
      consumes:
        - application/json
      operationId: createAccountKey
      parameters:
        - description: key parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/APIKeyOptions'
      produces:
        - application/json
      responses:
        '200':
          description: key details
          schema:
            $ref: '#/definitions/APIKey'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new key
      tags:
        - Account
  '/account/keys/{key_id}':
    delete:
      operationId: removeAccountKey
      parameters:
        - description: UUID of the key to retrieve
          format: uuid
          in: path
          name: key_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Remove this key
      tags:
        - Account
    get:
      operationId: getAccountKey
      parameters:
        - description: UUID of the key to retrieve
          format: uuid
          in: path
          name: key_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/APIKey'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get key details
      tags:
        - Account
  '/account/keys/{key_id}/rotate':
    patch:
      operationId: rotateAccountKey
      parameters:
        - description: UUID of the key to retrieve
          format: uuid
          in: path
          name: key_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: key details
          schema:
            $ref: '#/definitions/APIKey'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Rotates the key secret
      tags:
        - Account
  /account/license:
    get:
      operationId: getAccountLicense
      parameters: []
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/License'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get license details
      tags:
        - Account
  /account/orgs:
    get:
      operationId: getAccountOrganizations
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of organizations
          schema:
            items:
              $ref: '#/definitions/Organization'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all organization details
      tags:
        - Account
    put:
      consumes:
        - application/json
      operationId: createAccountOrganization
      parameters:
        - description: organization definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrgOptions'
      produces:
        - application/json
      responses:
        '200':
          description: organization details
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new organization
      tags:
        - Account
  '/account/orgs/{org_id}':
    delete:
      operationId: removeAccountOrganization
      parameters:
        - description: UUID of the organization to retrieve
          format: uuid
          in: path
          name: org_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Remove this organization
      tags:
        - Account
    get:
      operationId: getAccountOrganization
      parameters:
        - description: UUID of the organization to retrieve
          format: uuid
          in: path
          name: org_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get organization details
      tags:
        - Account
    patch:
      consumes:
        - application/json
      operationId: updateAccountOrganization
      parameters:
        - description: UUID of the organization to retrieve
          format: uuid
          in: path
          name: org_id
          required: true
          type: string
        - description: organization options
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrgOptions'
      produces:
        - application/json
      responses:
        '200':
          description: organization details
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Update organization details
      tags:
        - Account
  '/account/orgs/{org_id}/exportToken':
    delete:
      operationId: deleteAccountOrganizationExportToken
      parameters:
        - description: UUID of the organization to retrieve
          format: uuid
          in: path
          name: org_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Removes the export token from the specified organization
      tags:
        - Account
  '/account/orgs/{org_id}/exportToken/rotate':
    patch:
      operationId: rotateAccountOrganizationExportToken
      parameters:
        - description: UUID of the organization to retrieve
          format: uuid
          in: path
          name: org_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: organization details
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: >-
        Rotates the organization export token and returns the updated
        organization
      tags:
        - Account
  /account/sites:
    get:
      operationId: getAccountSites
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of sites
          schema:
            items:
              $ref: '#/definitions/Site'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all sites details across all organizations
      tags:
        - Account
  /account/tasks:
    get:
      operationId: getAccountTasks
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of tasks
          schema:
            items:
              $ref: '#/definitions/Task'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all task details across all organizations (up to 1000)
      tags:
        - Account
  /account/users:
    get:
      operationId: getAccountUsers
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: array of users
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all users
      tags:
        - Account
    put:
      consumes:
        - application/json
      operationId: createAccountUser
      parameters:
        - description: user parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserOptions'
      produces:
        - application/json
      responses:
        '200':
          description: key details
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new user account
      tags:
        - Account
  /account/users/invite:
    put:
      consumes:
        - application/json
      operationId: createAccountUserInvite
      parameters:
        - description: user invite parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserInviteOptions'
      produces:
        - application/json
      responses:
        '200':
          description: key details
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new user account and send an email invite
      tags:
        - Account
  '/account/users/{user_id}':
    delete:
      operationId: removeAccountUser
      parameters:
        - description: UUID of the user to delete
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Remove this user
      tags:
        - Account
    get:
      operationId: getAccountUser
      parameters:
        - description: UUID of the user to retrieve
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get user details
      tags:
        - Account
    patch:
      consumes:
        - application/json
      operationId: updateAccountUser
      parameters:
        - description: UUID of the user to retrieve
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
        - description: user parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserOptions'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Update a user's details
      tags:
        - Account
  '/account/users/{user_id}/resetLockout':
    patch:
      operationId: resetAccountUserLockout
      parameters:
        - description: UUID of the user to retrieve
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Resets the user's lockout status
      tags:
        - Account
  '/account/users/{user_id}/resetMFA':
    patch:
      operationId: resetAccountUserMFA
      parameters:
        - description: UUID of the user to retrieve
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Resets the user's MFA tokens
      tags:
        - Account
  '/account/users/{user_id}/resetPassword':
    patch:
      operationId: resetAccountUserPassword
      parameters:
        - description: UUID of the user to retrieve
          format: uuid
          in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Sends the user a password reset email
      tags:
        - Account
  /export/org/assets.cisco.csv:
    get:
      operationId: exportAssetsCiscoCSV
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: filtered asset results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: >-
        Cisco serial number and model name export for Cisco Smart Net Total Care
        Service.
      tags:
        - Cisco SNTC
  /export/org/assets.csv:
    get:
      operationId: exportAssetsCSV
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: filtered asset results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Asset inventory as CSV
      tags:
        - Export
  /export/org/assets.json:
    get:
      operationId: exportAssetsJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered asset results
          schema:
            items:
              $ref: '#/definitions/Asset'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Exports the asset inventory
      tags:
        - Export
  /export/org/assets.jsonl:
    get:
      operationId: exportAssetsJSONL
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered asset results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Asset inventory as JSON line-delimited
      tags:
        - Export
  /export/org/assets.nmap.xml:
    get:
      operationId: exportAssetsNmapXML
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: filtered asset results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Asset inventory as Nmap-style XML
      tags:
        - Export
  /export/org/assets.servicenow.csv:
    get:
      operationId: snowExportAssetsCSV
      parameters: []
      produces:
        - text/csv
      responses:
        '200':
          description: asset export
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Export an asset inventory as CSV for ServiceNow integration
      tags:
        - ServiceNow
  /export/org/assets.servicenow.json:
    get:
      operationId: snowExportAssetsJSON
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: filtered asset results
          schema:
            items:
              $ref: '#/definitions/AssetServiceNow'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Exports the asset inventory as JSON
      tags:
        - ServiceNow
  /export/org/assets/sync/created/assets.json:
    get:
      operationId: splunkAssetSyncCreatedJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
        - description: an optional unix timestamp to use as a checkpoint
          format: int64
          in: query
          name: since
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: filtered asset results with a checkpoint wrapper
          schema:
            $ref: '#/definitions/AssetsWithCheckpoint'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: >-
        Exports the asset inventory in a sync-friendly manner using created_at
        as a checkpoint. Requires the Splunk entitlement.
      tags:
        - Splunk
  /export/org/assets/sync/updated/assets.json:
    get:
      operationId: splunkAssetSyncUpdatedJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
        - description: an optional unix timestamp to use as a checkpoint
          format: int64
          in: query
          name: since
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: filtered asset results with a checkpoint wrapper
          schema:
            $ref: '#/definitions/AssetsWithCheckpoint'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: >-
        Exports the asset inventory in a sync-friendly manner using updated_at
        as a checkpoint. Requires the Splunk entitlement.
      tags:
        - Splunk
  /export/org/services.csv:
    get:
      operationId: exportServicesCSV
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: filtered service results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Service inventory as CSV
      tags:
        - Export
  /export/org/services.json:
    get:
      operationId: exportServicesJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered service results
          schema:
            items:
              $ref: '#/definitions/Service'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Service inventory as JSON
      tags:
        - Export
  /export/org/services.jsonl:
    get:
      operationId: exportServicesJSONL
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered service results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Service inventory as JSON line-delimited
      tags:
        - Export
  /export/org/services.servicenow.csv:
    get:
      operationId: snowExportServicesCSV
      parameters: []
      produces:
        - text/csv
      responses:
        '200':
          description: services export
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Export a service inventory as CSV for ServiceNow integration
      tags:
        - ServiceNow
  /export/org/sites.csv:
    get:
      operationId: exportSitesCSV
      parameters: []
      produces:
        - text/csv
      responses:
        '200':
          description: all sites
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Site list as CSV
      tags:
        - Export
  /export/org/sites.json:
    get:
      operationId: exportSitesJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: all sites
          schema:
            items:
              $ref: '#/definitions/Site'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Export all sites
      tags:
        - Export
  /export/org/sites.jsonl:
    get:
      operationId: exportSitesJSONL
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: all sites
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Site list as JSON line-delimited
      tags:
        - Export
  /export/org/wireless.csv:
    get:
      operationId: exportWirelessCSV
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: filtered wireless results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Wireless inventory as CSV
      tags:
        - Export
  /export/org/wireless.json:
    get:
      operationId: exportWirelessJSON
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered wireless results
          schema:
            items:
              $ref: '#/definitions/Wireless'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Wireless inventory as JSON
      tags:
        - Export
  /export/org/wireless.jsonl:
    get:
      operationId: exportWirelessJSONL
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
        - description: 'an optional list of fields to export, comma-separated'
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: filtered wireless results
          schema:
            format: binary
            type: string
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Wireless inventory as JSON line-delimited
      tags:
        - Export
  /org:
    get:
      operationId: getOrganization
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: organization details
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get organization details
      tags:
        - Organization
    patch:
      consumes:
        - application/json
      operationId: updateOrganization
      parameters:
        - description: organization options
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrgOptions'
      produces:
        - application/json
      responses:
        '200':
          description: organization details
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Update organization details
      tags:
        - Organization
  /org/agents:
    get:
      operationId: getAgents
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: array of agents
          schema:
            items:
              $ref: '#/definitions/Agent'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all agents
      tags:
        - Organization
  '/org/agents/{agent_id}':
    delete:
      operationId: removeAgent
      parameters:
        - description: UUID of the agent to remove
          format: uuid
          in: path
          name: agent_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove and uninstall an agent
      tags:
        - Organization
    get:
      operationId: getAgent
      parameters:
        - description: UUID of the agent
          format: uuid
          in: path
          name: agent_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: agent details
          schema:
            $ref: '#/definitions/Agent'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Get details for a single agent
      tags:
        - Organization
    patch:
      consumes:
        - application/json
      operationId: updateAgentSite
      parameters:
        - description: UUID of the agent to update
          format: uuid
          in: path
          name: agent_id
          required: true
          type: string
        - description: site_id to associate with the agent
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AgentSiteID'
      produces:
        - application/json
      responses:
        '200':
          description: agent details
          schema:
            $ref: '#/definitions/Agent'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Update the site associated with agent
      tags:
        - Organization
  '/org/agents/{agent_id}/update':
    post:
      operationId: upgradeAgent
      parameters:
        - description: UUID of the agent to update
          format: uuid
          in: path
          name: agent_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Force an agent to update and restart
      tags:
        - Organization
  /org/assets:
    get:
      operationId: getAssets
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of assets
          schema:
            items:
              $ref: '#/definitions/Asset'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all assets
      tags:
        - Organization
  '/org/assets/{asset_id}':
    delete:
      operationId: removeAsset
      parameters:
        - description: UUID of the asset to remove
          format: uuid
          in: path
          name: asset_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove an asset
      tags:
        - Organization
    get:
      operationId: getAsset
      parameters:
        - description: UUID of the asset to retrieve
          format: uuid
          in: path
          name: asset_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: asset details
          schema:
            $ref: '#/definitions/Asset'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Get asset details
      tags:
        - Organization
  '/org/assets/{asset_id}/comments':
    patch:
      consumes:
        - application/json
      operationId: updateAssetComments
      parameters:
        - description: UUID of the asset to update
          format: uuid
          in: path
          name: asset_id
          required: true
          type: string
        - description: comments to apply to the asset
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssetComments'
      produces:
        - application/json
      responses:
        '200':
          description: asset details
          schema:
            $ref: '#/definitions/Asset'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Update asset comments
      tags:
        - Organization
  '/org/assets/{asset_id}/tags':
    patch:
      consumes:
        - application/json
      operationId: updateAssetTags
      parameters:
        - description: UUID of the agent to update
          format: uuid
          in: path
          name: asset_id
          required: true
          type: string
        - description: tags to apply to the asset
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssetTags'
      produces:
        - application/json
      responses:
        '200':
          description: asset details
          schema:
            $ref: '#/definitions/Asset'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Update asset tags
      tags:
        - Organization
  /org/key:
    delete:
      operationId: removeKey
      parameters: []
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Remove the current API key
      tags:
        - Organization
    get:
      operationId: getKey
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: api key details
          schema:
            $ref: '#/definitions/APIKey'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get API key details
      tags:
        - Organization
  /org/key/rotate:
    patch:
      operationId: rotateKey
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: api key details
          schema:
            $ref: '#/definitions/APIKey'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Rotate the API key secret and return the updated key
      tags:
        - Organization
  /org/services:
    get:
      operationId: getServices
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of services
          schema:
            items:
              $ref: '#/definitions/Service'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all services
      tags:
        - Organization
  '/org/services/{service_id}':
    delete:
      operationId: removeService
      parameters:
        - description: UUID of the service to remove
          format: uuid
          in: path
          name: service_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove a service
      tags:
        - Organization
    get:
      operationId: getService
      parameters:
        - description: UUID of the service to retrieve
          format: uuid
          in: path
          name: service_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: service details
          schema:
            $ref: '#/definitions/Service'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Get service details
      tags:
        - Organization
  /org/sites:
    get:
      operationId: getSites
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: array of sites
          schema:
            items:
              $ref: '#/definitions/Site'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all sites
      tags:
        - Organization
    put:
      consumes:
        - application/json
      operationId: createSite
      parameters:
        - description: site definition
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteOptions'
      produces:
        - application/json
      responses:
        '200':
          description: site details
          schema:
            $ref: '#/definitions/Site'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Create a new site
      tags:
        - Organization
  '/org/sites/{site_id}':
    delete:
      operationId: removeSite
      parameters:
        - description: UUID or name of the site to remove
          format: uuid
          in: path
          name: site_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove a site and associated assets
      tags:
        - Organization
    get:
      operationId: getSite
      parameters:
        - description: UUID or name of the site
          format: uuid
          in: path
          name: site_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: site details
          schema:
            $ref: '#/definitions/Site'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Get site details
      tags:
        - Organization
    patch:
      consumes:
        - application/json
      operationId: updateSite
      parameters:
        - description: UUID or name of the site to update
          format: uuid
          in: path
          name: site_id
          required: true
          type: string
        - description: site object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SiteOptions'
      produces:
        - application/json
      responses:
        '200':
          description: site details
          schema:
            $ref: '#/definitions/Site'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Update a site definition
      tags:
        - Organization
  '/org/sites/{site_id}/import':
    put:
      consumes:
        - application/octet-stream
      operationId: importScanData
      parameters:
        - description: UUID or name of the site to import scan data into
          format: uuid
          in: path
          name: site_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            format: binary
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: import task
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
        '403':
          description: License has expired
        '404':
          description: Resource not found
        '500':
          description: Request could not be processed
      security:
        - bearerAuth: []
      summary: Import a scan data file into a site
      tags:
        - Organization
  '/org/sites/{site_id}/scan':
    put:
      consumes:
        - text/json
      operationId: createScan
      parameters:
        - description: UUID or name of the site to scan
          format: uuid
          in: path
          name: site_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScanOptions'
      produces:
        - application/json
      responses:
        '200':
          description: a created scan task
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
        '403':
          description: License has expired
        '404':
          description: Resource not found
        '500':
          description: Request could not be processed
      security:
        - bearerAuth: []
      summary: Create a scan task for a given site
      tags:
        - Organization
  /org/tasks:
    get:
      operationId: getTasks
      parameters:
        - description: an optional status string for filtering results
          in: query
          name: status
          required: false
          type: string
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of tasks
          schema:
            items:
              $ref: '#/definitions/Task'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all tasks (last 1000)
      tags:
        - Organization
  '/org/tasks/{task_id}':
    get:
      operationId: getTask
      parameters:
        - description: UUID of the task to retrieve
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: task details
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get task details
      tags:
        - Organization
    patch:
      consumes:
        - application/json
      operationId: updateTask
      parameters:
        - description: UUID of the task to update
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: task object
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Task'
      produces:
        - application/json
      responses:
        '200':
          description: task details
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Update task parameters
      tags:
        - Organization
  '/org/tasks/{task_id}/changes':
    get:
      operationId: getTaskChangeReport
      parameters:
        - description: UUID of the task
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/URL'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Returns a temporary task change report data url
      tags:
        - Organization
  '/org/tasks/{task_id}/data':
    get:
      operationId: getTaskScanData
      parameters:
        - description: UUID of the task
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/URL'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Returns a temporary task scan data url
      tags:
        - Organization
  '/org/tasks/{task_id}/hide':
    post:
      operationId: hideTask
      parameters:
        - description: UUID of the task to hide
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Signal that a completed task should be hidden
      tags:
        - Organization
  '/org/tasks/{task_id}/stop':
    post:
      operationId: stopTask
      parameters:
        - description: UUID of the task to stop
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Automatically created
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: >-
        Signal that a task should be stopped or canceledThis will also remove
        recurring and scheduled tasks
      tags:
        - Organization
  /org/wireless:
    get:
      operationId: getWirelessLANs
      parameters:
        - description: an optional search string for filtering results
          in: query
          name: search
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: array of wireless LANs
          schema:
            items:
              $ref: '#/definitions/Wireless'
            type: array
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get all wireless LANs
      tags:
        - Organization
  '/org/wirelesss/{wireless_id}':
    delete:
      operationId: removeWirelessLAN
      parameters:
        - description: UUID of the wireless LAN to remove
          format: uuid
          in: path
          name: wireless_id
          required: true
          type: string
      responses:
        '204':
          description: empty response
        '401':
          description: Access token is missing or invalid
        '404':
          description: Resource not found
      security:
        - bearerAuth: []
      summary: Remove a wireless LAN
      tags:
        - Organization
    get:
      operationId: getWirelessLAN
      parameters:
        - description: UUID of the wireless LAN to retrieve
          format: uuid
          in: path
          name: wireless_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: wireless details
          schema:
            $ref: '#/definitions/Wireless'
        '401':
          description: Access token is missing or invalid
      security:
        - bearerAuth: []
      summary: Get wireless LAN details
      tags:
        - Organization
  /releases/agent/version:
    get:
      operationId: getLatestAgentVersion
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: component version
          schema:
            $ref: '#/definitions/ComponentVersion'
      summary: Returns latest agent version
      tags:
        - Public
  /releases/platform/version:
    get:
      operationId: getLatestPlatformVersion
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: component version
          schema:
            $ref: '#/definitions/ComponentVersion'
      summary: Returns latest platform version
      tags:
        - Public
  /releases/scanner/version:
    get:
      operationId: getLatestScannerVersion
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: component version
          schema:
            $ref: '#/definitions/ComponentVersion'
      summary: Returns latest scanner version
      tags:
        - Public
schemes:
  - https
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: Requires Organization Key
    name: Organization
  - description: Requires Export Token or Organization Key
    name: Export
  - description: Unauthenticated
    name: Public
x-components:
  responses:
    LicenseExpiredError:
      description: License has expired
    NotFoundError:
      description: Resource not found
    ProcessingError:
      description: Request could not be processed
    UnauthorizedError:
      description: Access token is missing or invalid

