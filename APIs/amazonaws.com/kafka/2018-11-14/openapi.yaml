basePath: /
definitions:
  BadRequestException: {}
  BatchAssociateScramSecretRequest:
    description: |2-

                  <p>Associates sasl scram secrets to cluster.</p>
               
    properties:
      SecretArnList:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>List of AWS Secrets Manager secret ARNs.</p>
                       
            xml:
              name: secretArnList
    required:
      - SecretArnList
    title: BatchAssociateScramSecretRequest
    type: object
  BatchAssociateScramSecretResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      UnprocessedScramSecrets:
        allOf:
          - $ref: '#/definitions/__listOfUnprocessedScramSecret'
          - description: |2-

                          <p>List of errors when associating secrets to cluster.</p>
                       
            xml:
              name: unprocessedScramSecrets
    type: object
  BatchDisassociateScramSecretRequest:
    description: |2-

                  <p>Disassociates sasl scram secrets to cluster.</p>
               
    properties:
      SecretArnList:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>List of AWS Secrets Manager secret ARNs.</p>
                       
            xml:
              name: secretArnList
    required:
      - SecretArnList
    title: BatchDisassociateScramSecretRequest
    type: object
  BatchDisassociateScramSecretResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      UnprocessedScramSecrets:
        allOf:
          - $ref: '#/definitions/__listOfUnprocessedScramSecret'
          - description: |2-

                          <p>List of errors when disassociating secrets to cluster.</p>
                       
            xml:
              name: unprocessedScramSecrets
    type: object
  BrokerAZDistribution:
    description: |2-

                  <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>
               <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>
               
    enum:
      - DEFAULT
    type: string
  BrokerEBSVolumeInfo:
    description: |2-

                  <p>Specifies the EBS volume upgrade information. The broker identifier must be set to the keyword ALL. This means the changes apply to all the brokers in the cluster.</p>
               
    properties:
      KafkaBrokerNodeId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The ID of the broker to update.</p>
                       
            xml:
              name: kafkaBrokerNodeId
      VolumeSizeGB:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: |2-

                          <p>Size of the EBS volume to update.</p>
                       
            xml:
              name: volumeSizeGB
    required:
      - VolumeSizeGB
      - KafkaBrokerNodeId
    type: object
  BrokerLogs:
    properties:
      CloudWatchLogs:
        allOf:
          - $ref: '#/definitions/CloudWatchLogs'
          - xml:
              name: cloudWatchLogs
      Firehose:
        allOf:
          - $ref: '#/definitions/Firehose'
          - xml:
              name: firehose
      S3:
        allOf:
          - $ref: '#/definitions/S3'
          - xml:
              name: s3
    type: object
  BrokerNodeGroupInfo:
    description: |2-

                  <p>Describes the setup to be used for Kafka broker nodes in the cluster.</p>
               
    properties:
      BrokerAZDistribution:
        allOf:
          - $ref: '#/definitions/BrokerAZDistribution'
          - description: |2-

                          <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>
                       <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>
                       
            xml:
              name: brokerAZDistribution
      ClientSubnets:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The list of subnets to connect to in the client virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets. Client applications use elastic network interfaces to produce and consume data. Client subnets can't be in Availability Zone us-east-1e.</p>
                       
            xml:
              name: clientSubnets
      InstanceType:
        allOf:
          - $ref: '#/definitions/__stringMin5Max32'
          - description: |2-

                          <p>The type of Amazon EC2 instances to use for Kafka brokers. The following instance types are allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,
              kafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.</p>
                       
            xml:
              name: instanceType
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The AWS security groups to associate with the elastic network interfaces in order to specify who can connect to and communicate with the Amazon MSK cluster. If you don't specify a security group, Amazon MSK uses the default security group associated with the VPC.</p>
                       
            xml:
              name: securityGroups
      StorageInfo:
        allOf:
          - $ref: '#/definitions/StorageInfo'
          - description: |2-

                          <p>Contains information about storage volumes attached to MSK broker nodes.</p>
                       
            xml:
              name: storageInfo
    required:
      - ClientSubnets
      - InstanceType
    type: object
  BrokerNodeInfo:
    description: |2-

                  <p>BrokerNodeInfo</p>
               
    properties:
      AttachedENIId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The attached elastic network interface of the broker.</p>
                       
            xml:
              name: attachedENIId
      BrokerId:
        allOf:
          - $ref: '#/definitions/__double'
          - description: |2-

                          <p>The ID of the broker.</p>
                       
            xml:
              name: brokerId
      ClientSubnet:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The client subnet to which this broker node belongs.</p>
                       
            xml:
              name: clientSubnet
      ClientVpcIpAddress:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The virtual private cloud (VPC) of the client.</p>
                       
            xml:
              name: clientVpcIpAddress
      CurrentBrokerSoftwareInfo:
        allOf:
          - $ref: '#/definitions/BrokerSoftwareInfo'
          - description: |2-

                          <p>Information about the version of software currently deployed on the Kafka brokers in the cluster.</p>
                       
            xml:
              name: currentBrokerSoftwareInfo
      Endpoints:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>Endpoints for accessing the broker.</p>
                       
            xml:
              name: endpoints
    type: object
  BrokerSoftwareInfo:
    description: |2-

                  <p>Information about the current software installed on the cluster.</p>
               
    properties:
      ConfigurationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration used for the cluster. This field isn't visible in this preview release.</p>
                       
            xml:
              name: configurationArn
      ConfigurationRevision:
        allOf:
          - $ref: '#/definitions/__long'
          - description: |2-

                          <p>The revision of the configuration to use. This field isn't visible in this preview release.</p>
                       
            xml:
              name: configurationRevision
      KafkaVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of Apache Kafka.</p>
                       
            xml:
              name: kafkaVersion
    type: object
  ClientAuthentication:
    description: |2-

                  <p>Includes all client authentication information.</p>
               
    properties:
      Sasl:
        allOf:
          - $ref: '#/definitions/Sasl'
          - description: |2-

                          <p>Details for ClientAuthentication using SASL.</p>
                       
            xml:
              name: sasl
      Tls:
        allOf:
          - $ref: '#/definitions/Tls'
          - description: |2-

                          <p>Details for ClientAuthentication using TLS.</p>
                       
            xml:
              name: tls
      Unauthenticated:
        allOf:
          - $ref: '#/definitions/Unauthenticated'
          - description: |2-

                          <p>Contains information about unauthenticated traffic to the cluster.</p>
                       
            xml:
              name: unauthenticated
    type: object
  ClientBroker:
    description: |2-

                  <p>Client-broker encryption in transit setting.</p>
               
    enum:
      - TLS
      - TLS_PLAINTEXT
      - PLAINTEXT
    type: string
  CloudWatchLogs:
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - xml:
              name: enabled
      LogGroup:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: logGroup
    required:
      - Enabled
    type: object
  ClusterInfo:
    description: |2-

                  <p>Returns information about a cluster.</p>
               
    properties:
      ActiveOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Arn of active cluster operation.</p>
                       
            xml:
              name: activeOperationArn
      BrokerNodeGroupInfo:
        allOf:
          - $ref: '#/definitions/BrokerNodeGroupInfo'
          - description: |2-

                          <p>Information about the broker nodes.</p>
                       
            xml:
              name: brokerNodeGroupInfo
      ClientAuthentication:
        allOf:
          - $ref: '#/definitions/ClientAuthentication'
          - description: |2-

                          <p>Includes all client authentication information.</p>
                       
            xml:
              name: clientAuthentication
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the cluster.</p>
                       
            xml:
              name: clusterName
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the cluster was created.</p>
                       
            xml:
              name: creationTime
      CurrentBrokerSoftwareInfo:
        allOf:
          - $ref: '#/definitions/BrokerSoftwareInfo'
          - description: |2-

                          <p>Information about the version of software currently deployed on the Kafka brokers in the cluster.</p>
                       
            xml:
              name: currentBrokerSoftwareInfo
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The current version of the MSK cluster.</p>
                       
            xml:
              name: currentVersion
      EncryptionInfo:
        allOf:
          - $ref: '#/definitions/EncryptionInfo'
          - description: |2-

                          <p>Includes all encryption-related information.</p>
                       
            xml:
              name: encryptionInfo
      EnhancedMonitoring:
        allOf:
          - $ref: '#/definitions/EnhancedMonitoring'
          - description: |2-

                          <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>
                       
            xml:
              name: enhancedMonitoring
      LoggingInfo:
        allOf:
          - $ref: '#/definitions/LoggingInfo'
          - xml:
              name: loggingInfo
      NumberOfBrokerNodes:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: |2-

                          <p>The number of broker nodes in the cluster.</p>
                       
            xml:
              name: numberOfBrokerNodes
      OpenMonitoring:
        allOf:
          - $ref: '#/definitions/OpenMonitoring'
          - description: |2-

                          <p>Settings for open monitoring using Prometheus.</p>
                       
            xml:
              name: openMonitoring
      State:
        allOf:
          - $ref: '#/definitions/ClusterState'
          - description: |2-

                          <p>The state of the cluster. The possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.</p>
                       
            xml:
              name: state
      StateInfo:
        allOf:
          - $ref: '#/definitions/StateInfo'
          - xml:
              name: stateInfo
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: |2-

                          <p>Tags attached to the cluster.</p>
                       
            xml:
              name: tags
      ZookeeperConnectString:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The connection string to use to connect to the Apache ZooKeeper cluster.</p>
                       
            xml:
              name: zookeeperConnectString
      ZookeeperConnectStringTls:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The connection string to use to connect to zookeeper cluster on Tls port.</p>
                       
            xml:
              name: zookeeperConnectStringTls
    type: object
  ClusterOperationInfo:
    description: |2-

                  <p>Returns information about a cluster operation.</p>
               
    properties:
      ClientRequestId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The ID of the API request that triggered this operation.</p>
                       
            xml:
              name: clientRequestId
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>ARN of the cluster.</p>
                       
            xml:
              name: clusterArn
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time that the operation was created.</p>
                       
            xml:
              name: creationTime
      EndTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time at which the operation finished.</p>
                       
            xml:
              name: endTime
      ErrorInfo:
        allOf:
          - $ref: '#/definitions/ErrorInfo'
          - description: |2-

                          <p>Describes the error if the operation fails.</p>
                       
            xml:
              name: errorInfo
      OperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>ARN of the cluster operation.</p>
                       
            xml:
              name: operationArn
      OperationState:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>State of the cluster operation.</p>
                       
            xml:
              name: operationState
      OperationSteps:
        allOf:
          - $ref: '#/definitions/__listOfClusterOperationStep'
          - description: |2-

                          <p>Steps completed during the operation.</p>
                       
            xml:
              name: operationSteps
      OperationType:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Type of the cluster operation.</p>
                       
            xml:
              name: operationType
      SourceClusterInfo:
        allOf:
          - $ref: '#/definitions/MutableClusterInfo'
          - description: |2-

                          <p>Information about cluster attributes before a cluster is updated.</p>
                       
            xml:
              name: sourceClusterInfo
      TargetClusterInfo:
        allOf:
          - $ref: '#/definitions/MutableClusterInfo'
          - description: |2-

                          <p>Information about cluster attributes after a cluster is updated.</p>
                       
            xml:
              name: targetClusterInfo
    type: object
  ClusterOperationStep:
    description: |2-

                  <p>Step taken during a cluster operation.</p>
               
    properties:
      StepInfo:
        allOf:
          - $ref: '#/definitions/ClusterOperationStepInfo'
          - description: |2-

                          <p>Information about the step and its status.</p>
                       
            xml:
              name: stepInfo
      StepName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the step.</p>
                       
            xml:
              name: stepName
    type: object
  ClusterOperationStepInfo:
    description: |2-

                  <p>State information about the operation step.</p>
               
    properties:
      StepStatus:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The steps current status.</p>
                       
            xml:
              name: stepStatus
    type: object
  ClusterState:
    description: |2-

                  <p>The state of a Kafka cluster.</p>
               
    enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
      - HEALING
      - MAINTENANCE
      - REBOOTING_BROKER
      - UPDATING
    type: string
  CompatibleKafkaVersion:
    description: |2-

                  <p>Contains source Kafka versions and compatible target Kafka versions.</p>
              
    properties:
      SourceVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A Kafka version.</p>
                          
            xml:
              name: sourceVersion
      TargetVersions:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>A list of Kafka versions.</p>
                          
            xml:
              name: targetVersions
    type: object
  Configuration:
    description: |2-

                  <p>Represents an MSK Configuration.</p>
               
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration.</p>
                       
            xml:
              name: arn
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the configuration was created.</p>
                       
            xml:
              name: creationTime
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration.</p>
                       
            xml:
              name: description
      KafkaVersions:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>An array of the versions of Apache Kafka with which you can use this MSK configuration. You can use this configuration for an MSK cluster only if the Apache Kafka version specified for the cluster appears in this array.</p>
                       
            xml:
              name: kafkaVersions
      LatestRevision:
        allOf:
          - $ref: '#/definitions/ConfigurationRevision'
          - description: |2-

                          <p>Latest revision of the configuration.</p>
                       
            xml:
              name: latestRevision
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the configuration.</p>
                       
            xml:
              name: name
      State:
        allOf:
          - $ref: '#/definitions/ConfigurationState'
          - description: |2-

                          <p>The state of the configuration. The possible states are ACTIVE, DELETING, and DELETE_FAILED. </p>
                       
            xml:
              name: state
    required:
      - Description
      - LatestRevision
      - CreationTime
      - KafkaVersions
      - Arn
      - Name
      - State
    type: object
  ConfigurationInfo:
    description: |2-

                  <p>Specifies the configuration to use for the brokers.</p>
               
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>ARN of the configuration to use.</p>
                       
            xml:
              name: arn
      Revision:
        allOf:
          - $ref: '#/definitions/__long'
          - description: |2-

                          <p>The revision of the configuration to use.</p>
                       
            xml:
              name: revision
    required:
      - Revision
      - Arn
    type: object
  ConfigurationRevision:
    description: |2-

                  <p>Describes a configuration revision.</p>
               
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the configuration revision was created.</p>
                       
            xml:
              name: creationTime
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration revision.</p>
                       
            xml:
              name: description
      Revision:
        allOf:
          - $ref: '#/definitions/__long'
          - description: |2-

                          <p>The revision number.</p>
                       
            xml:
              name: revision
    required:
      - Revision
      - CreationTime
    type: object
  ConfigurationState:
    description: |2-

                  <p>The state of a configuration.</p>
               
    enum:
      - ACTIVE
      - DELETING
      - DELETE_FAILED
    type: string
  ConflictException: {}
  CreateClusterRequest:
    properties:
      BrokerNodeGroupInfo:
        allOf:
          - $ref: '#/definitions/BrokerNodeGroupInfo'
          - description: |2-

                          <p>Information about the broker nodes in the cluster.</p>
                       
            xml:
              name: brokerNodeGroupInfo
      ClientAuthentication:
        allOf:
          - $ref: '#/definitions/ClientAuthentication'
          - description: |2-

                          <p>Includes all client authentication related information.</p>
                       
            xml:
              name: clientAuthentication
      ClusterName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64'
          - description: |2-

                          <p>The name of the cluster.</p>
                       
            xml:
              name: clusterName
      ConfigurationInfo:
        allOf:
          - $ref: '#/definitions/ConfigurationInfo'
          - description: |2-

                          <p>Represents the configuration that you want MSK to use for the brokers in a cluster.</p>
                       
            xml:
              name: configurationInfo
      EncryptionInfo:
        allOf:
          - $ref: '#/definitions/EncryptionInfo'
          - description: |2-

                          <p>Includes all encryption-related information.</p>
                       
            xml:
              name: encryptionInfo
      EnhancedMonitoring:
        allOf:
          - $ref: '#/definitions/EnhancedMonitoring'
          - description: |2-

                          <p>Specifies the level of monitoring for the MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.</p>
                       
            xml:
              name: enhancedMonitoring
      KafkaVersion:
        allOf:
          - $ref: '#/definitions/__stringMin1Max128'
          - description: |2-

                          <p>The version of Apache Kafka.</p>
                       
            xml:
              name: kafkaVersion
      LoggingInfo:
        allOf:
          - $ref: '#/definitions/LoggingInfo'
          - xml:
              name: loggingInfo
      NumberOfBrokerNodes:
        allOf:
          - $ref: '#/definitions/__integerMin1Max15'
          - description: |2-

                          <p>The number of broker nodes in the cluster.</p>
                       
            xml:
              name: numberOfBrokerNodes
      OpenMonitoring:
        allOf:
          - $ref: '#/definitions/OpenMonitoringInfo'
          - description: |2-

                          <p>The settings for open monitoring.</p>
                       
            xml:
              name: openMonitoring
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: |2-

                          <p>Create tags when creating the cluster.</p>
                       
            xml:
              name: tags
    required:
      - BrokerNodeGroupInfo
      - KafkaVersion
      - NumberOfBrokerNodes
      - ClusterName
    title: CreateClusterRequest
    type: object
  CreateClusterResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the MSK cluster.</p>
                       
            xml:
              name: clusterName
      State:
        allOf:
          - $ref: '#/definitions/ClusterState'
          - description: |2-

                          <p>The state of the cluster. The possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.</p>
                       
            xml:
              name: state
    type: object
  CreateConfigurationRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration.</p>
                       
            xml:
              name: description
      KafkaVersions:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The versions of Apache Kafka with which you can use this MSK configuration.</p>
                       
            xml:
              name: kafkaVersions
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the configuration.</p>
                       
            xml:
              name: name
      ServerProperties:
        allOf:
          - $ref: '#/definitions/__blob'
          - description: |2-

                          <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. 
                             When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>
                       
            xml:
              name: serverProperties
    required:
      - ServerProperties
      - Name
    title: CreateConfigurationRequest
    type: object
  CreateConfigurationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration.</p>
                       
            xml:
              name: arn
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the configuration was created.</p>
                       
            xml:
              name: creationTime
      LatestRevision:
        allOf:
          - $ref: '#/definitions/ConfigurationRevision'
          - description: |2-

                          <p>Latest revision of the configuration.</p>
                       
            xml:
              name: latestRevision
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the configuration.</p>
                       
            xml:
              name: name
      State:
        allOf:
          - $ref: '#/definitions/ConfigurationState'
          - description: |2-

                          <p>The state of the configuration. The possible states are ACTIVE, DELETING, and DELETE_FAILED. </p>
                       
            xml:
              name: state
    type: object
  DeleteClusterRequest:
    properties: {}
    title: DeleteClusterRequest
    type: object
  DeleteClusterResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      State:
        allOf:
          - $ref: '#/definitions/ClusterState'
          - description: |2-

                          <p>The state of the cluster. The possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.</p>
                       
            xml:
              name: state
    type: object
  DeleteConfigurationRequest:
    properties: {}
    title: DeleteConfigurationRequest
    type: object
  DeleteConfigurationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration.</p>
                       
            xml:
              name: arn
      State:
        allOf:
          - $ref: '#/definitions/ConfigurationState'
          - description: |2-

                          <p>The state of the configuration. The possible states are ACTIVE, DELETING, and DELETE_FAILED. </p>
                       
            xml:
              name: state
    type: object
  DescribeClusterOperationRequest:
    properties: {}
    title: DescribeClusterOperationRequest
    type: object
  DescribeClusterOperationResponse:
    properties:
      ClusterOperationInfo:
        allOf:
          - $ref: '#/definitions/ClusterOperationInfo'
          - description: |2-

                          <p>Cluster operation information</p>
                       
            xml:
              name: clusterOperationInfo
    type: object
  DescribeClusterRequest:
    properties: {}
    title: DescribeClusterRequest
    type: object
  DescribeClusterResponse:
    properties:
      ClusterInfo:
        allOf:
          - $ref: '#/definitions/ClusterInfo'
          - description: |2-

                          <p>The cluster information.</p>
                       
            xml:
              name: clusterInfo
    type: object
  DescribeConfigurationRequest:
    properties: {}
    title: DescribeConfigurationRequest
    type: object
  DescribeConfigurationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration.</p>
                       
            xml:
              name: arn
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the configuration was created.</p>
                       
            xml:
              name: creationTime
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration.</p>
                       
            xml:
              name: description
      KafkaVersions:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The versions of Apache Kafka with which you can use this MSK configuration.</p>
                       
            xml:
              name: kafkaVersions
      LatestRevision:
        allOf:
          - $ref: '#/definitions/ConfigurationRevision'
          - description: |2-

                          <p>Latest revision of the configuration.</p>
                       
            xml:
              name: latestRevision
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The name of the configuration.</p>
                       
            xml:
              name: name
      State:
        allOf:
          - $ref: '#/definitions/ConfigurationState'
          - description: |2-

                          <p>The state of the configuration. The possible states are ACTIVE, DELETING, and DELETE_FAILED. </p>
                       
            xml:
              name: state
    type: object
  DescribeConfigurationRevisionRequest:
    properties: {}
    title: DescribeConfigurationRevisionRequest
    type: object
  DescribeConfigurationRevisionResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration.</p>
                       
            xml:
              name: arn
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampIso8601'
          - description: |2-

                          <p>The time when the configuration was created.</p>
                       
            xml:
              name: creationTime
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration.</p>
                       
            xml:
              name: description
      Revision:
        allOf:
          - $ref: '#/definitions/__long'
          - description: |2-

                          <p>The revision number.</p>
                       
            xml:
              name: revision
      ServerProperties:
        allOf:
          - $ref: '#/definitions/__blob'
          - description: |2-

                          <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. 
                             When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>
                       
            xml:
              name: serverProperties
    type: object
  EBSStorageInfo:
    description: |2-

                  <p>Contains information about the EBS storage volumes attached to Kafka broker nodes.</p>
               
    properties:
      VolumeSize:
        allOf:
          - $ref: '#/definitions/__integerMin1Max16384'
          - description: |2-

                          <p>The size in GiB of the EBS volume for the data drive on each broker node.</p>
                       
            xml:
              name: volumeSize
    type: object
  EncryptionAtRest:
    description: |2-

                  <p>The data-volume encryption details.</p>
               
    properties:
      DataVolumeKMSKeyId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The ARN of the AWS KMS key for encrypting data at rest. If you don't specify a KMS key, MSK creates one for you and uses it.</p>
                       
            xml:
              name: dataVolumeKMSKeyId
    required:
      - DataVolumeKMSKeyId
    type: object
  EncryptionInTransit:
    description: |2-

                  <p>The settings for encrypting data in transit.</p>
               
    properties:
      ClientBroker:
        allOf:
          - $ref: '#/definitions/ClientBroker'
          - description: |2-

                          <p>Indicates the encryption setting for data in transit between clients and brokers. The following are the possible values.</p>
                          <p>
                             TLS means that client-broker communication is enabled with TLS only.</p>
                          <p>
                             TLS_PLAINTEXT means that client-broker communication is enabled for both TLS-encrypted, as well as plaintext data.</p>
                          <p>
                             PLAINTEXT means that client-broker communication is enabled in plaintext only.</p>
                          <p>The default value is TLS_PLAINTEXT.</p>
                       
            xml:
              name: clientBroker
      InCluster:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>When set to true, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to false, the communication happens in plaintext.</p>
                          <p>The default value is true.</p>
                       
            xml:
              name: inCluster
    type: object
  EncryptionInfo:
    description: |2-

                  <p>Includes encryption-related information, such as the AWS KMS key used for encrypting data at rest and whether you want MSK to encrypt your data in transit.</p>
               
    properties:
      EncryptionAtRest:
        allOf:
          - $ref: '#/definitions/EncryptionAtRest'
          - description: |2-

                          <p>The data-volume encryption details.</p>
                       
            xml:
              name: encryptionAtRest
      EncryptionInTransit:
        allOf:
          - $ref: '#/definitions/EncryptionInTransit'
          - description: |2-

                          <p>The details for encryption in transit.</p>
                       
            xml:
              name: encryptionInTransit
    type: object
  EnhancedMonitoring:
    description: |2-

                  <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>
               
    enum:
      - DEFAULT
      - PER_BROKER
      - PER_TOPIC_PER_BROKER
      - PER_TOPIC_PER_PARTITION
    type: string
  ErrorInfo:
    description: |2-

                  <p>Returns information about an error state of the cluster.</p>
               
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A number describing the error programmatically.</p>
                       
            xml:
              name: errorCode
      ErrorString:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>An optional field to provide more details about the error.</p>
                       
            xml:
              name: errorString
    type: object
  Firehose:
    properties:
      DeliveryStream:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: deliveryStream
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - xml:
              name: enabled
    required:
      - Enabled
    type: object
  ForbiddenException: {}
  GetBootstrapBrokersRequest:
    properties: {}
    title: GetBootstrapBrokersRequest
    type: object
  GetBootstrapBrokersResponse:
    properties:
      BootstrapBrokerString:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A string containing one or more hostname:port pairs.</p>
                       
            xml:
              name: bootstrapBrokerString
      BootstrapBrokerStringSaslIam:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A string that contains one or more DNS names (or IP addresses) and SASL IAM port pairs.</p>
                       
            xml:
              name: bootstrapBrokerStringSaslIam
      BootstrapBrokerStringSaslScram:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A string containing one or more DNS names (or IP) and Sasl Scram port pairs.</p>
                       
            xml:
              name: bootstrapBrokerStringSaslScram
      BootstrapBrokerStringTls:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>A string containing one or more DNS names (or IP) and TLS port pairs.</p>
                       
            xml:
              name: bootstrapBrokerStringTls
    type: object
  GetCompatibleKafkaVersionsRequest:
    properties: {}
    title: GetCompatibleKafkaVersionsRequest
    type: object
  GetCompatibleKafkaVersionsResponse:
    properties:
      CompatibleKafkaVersions:
        allOf:
          - $ref: '#/definitions/__listOfCompatibleKafkaVersion'
          - description: |2-

                          <p>A list of CompatibleKafkaVersion objects.</p>
                          
            xml:
              name: compatibleKafkaVersions
    type: object
  Iam:
    description: |2-

                  <p>Details for IAM access control.</p>
               
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Indicates whether IAM access control is enabled.</p>
                       
            xml:
              name: enabled
    type: object
  InternalServerErrorException: {}
  JmxExporter:
    description: |2-

                  <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
               
    properties:
      EnabledInBroker:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
                       
            xml:
              name: enabledInBroker
    required:
      - EnabledInBroker
    type: object
  JmxExporterInfo:
    description: |2-

                  <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
               
    properties:
      EnabledInBroker:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
                       
            xml:
              name: enabledInBroker
    required:
      - EnabledInBroker
    type: object
  KafkaVersion:
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/KafkaVersionStatus'
          - xml:
              name: status
      Version:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: version
    type: object
  KafkaVersionStatus:
    enum:
      - ACTIVE
      - DEPRECATED
    type: string
  ListClusterOperationsRequest:
    properties: {}
    title: ListClusterOperationsRequest
    type: object
  ListClusterOperationsResponse:
    properties:
      ClusterOperationInfoList:
        allOf:
          - $ref: '#/definitions/__listOfClusterOperationInfo'
          - description: |2-

                          <p>An array of cluster operation information objects.</p>
                       
            xml:
              name: clusterOperationInfoList
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>If the response of ListClusterOperations is truncated, it returns a NextToken in the response. This Nexttoken should be sent in the subsequent request to ListClusterOperations.</p>
                       
            xml:
              name: nextToken
    type: object
  ListClustersRequest:
    properties: {}
    title: ListClustersRequest
    type: object
  ListClustersResponse:
    properties:
      ClusterInfoList:
        allOf:
          - $ref: '#/definitions/__listOfClusterInfo'
          - description: |2-

                          <p>Information on each of the MSK clusters in the response.</p>
                       
            xml:
              name: clusterInfoList
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The paginated results marker. When the result of a ListClusters operation is truncated, the call returns NextToken in the response. 
                             To get another batch of clusters, provide this token in your next request.</p>
                       
            xml:
              name: nextToken
    type: object
  ListConfigurationRevisionsRequest:
    properties: {}
    title: ListConfigurationRevisionsRequest
    type: object
  ListConfigurationRevisionsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Paginated results marker.</p>
                       
            xml:
              name: nextToken
      Revisions:
        allOf:
          - $ref: '#/definitions/__listOfConfigurationRevision'
          - description: |2-

                          <p>List of ConfigurationRevision objects.</p>
                       
            xml:
              name: revisions
    type: object
  ListConfigurationsRequest:
    properties: {}
    title: ListConfigurationsRequest
    type: object
  ListConfigurationsResponse:
    properties:
      Configurations:
        allOf:
          - $ref: '#/definitions/__listOfConfiguration'
          - description: |2-

                          <p>An array of MSK configurations.</p>
                       
            xml:
              name: configurations
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The paginated results marker. When the result of a ListConfigurations operation is truncated, the call returns NextToken in the response. 
                             To get another batch of configurations, provide this token in your next request.</p>
                       
            xml:
              name: nextToken
    type: object
  ListKafkaVersionsRequest:
    properties: {}
    title: ListKafkaVersionsRequest
    type: object
  ListKafkaVersionsResponse:
    properties:
      KafkaVersions:
        allOf:
          - $ref: '#/definitions/__listOfKafkaVersion'
          - xml:
              name: kafkaVersions
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: nextToken
    type: object
  ListNodesRequest:
    properties: {}
    title: ListNodesRequest
    type: object
  ListNodesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The paginated results marker. When the result of a ListNodes operation is truncated, the call returns NextToken in the response. 
                             To get another batch of nodes, provide this token in your next request.</p>
                       
            xml:
              name: nextToken
      NodeInfoList:
        allOf:
          - $ref: '#/definitions/__listOfNodeInfo'
          - description: |2-

                          <p>List containing a NodeInfo object.</p>
                       
            xml:
              name: nodeInfoList
    type: object
  ListScramSecretsRequest:
    properties: {}
    title: ListScramSecretsRequest
    type: object
  ListScramSecretsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Paginated results marker.</p>
                       
            xml:
              name: nextToken
      SecretArnList:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The list of scram secrets associated with the cluster.</p>
                       
            xml:
              name: secretArnList
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: |2-

                          <p>The key-value pair for the resource tag.</p>
                       
            xml:
              name: tags
    type: object
  LoggingInfo:
    properties:
      BrokerLogs:
        allOf:
          - $ref: '#/definitions/BrokerLogs'
          - xml:
              name: brokerLogs
    required:
      - BrokerLogs
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MutableClusterInfo:
    description: |2-

                  <p>Information about cluster attributes that can be updated via update APIs.</p>
               
    properties:
      BrokerEBSVolumeInfo:
        allOf:
          - $ref: '#/definitions/__listOfBrokerEBSVolumeInfo'
          - description: |2-

                          <p>Specifies the size of the EBS volume and the ID of the associated broker.</p>
                       
            xml:
              name: brokerEBSVolumeInfo
      ClientAuthentication:
        allOf:
          - $ref: '#/definitions/ClientAuthentication'
          - description: |2-

                          <p>Includes all client authentication information.</p>
                       
            xml:
              name: clientAuthentication
      ConfigurationInfo:
        allOf:
          - $ref: '#/definitions/ConfigurationInfo'
          - description: |2-

                          <p>Information about the changes in the configuration of the brokers.</p>
                       
            xml:
              name: configurationInfo
      EncryptionInfo:
        allOf:
          - $ref: '#/definitions/EncryptionInfo'
          - description: |2-

                          <p>Includes all encryption-related information.</p>
                       
            xml:
              name: encryptionInfo
      EnhancedMonitoring:
        allOf:
          - $ref: '#/definitions/EnhancedMonitoring'
          - description: |2-

                          <p>Specifies which Apache Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for this cluster.</p>
                       
            xml:
              name: enhancedMonitoring
      InstanceType:
        allOf:
          - $ref: '#/definitions/__stringMin5Max32'
          - description: |2-

                          <p>Information about the Amazon MSK broker type.</p>
                          
            xml:
              name: instanceType
      KafkaVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Kafka version.</p>
                          
            xml:
              name: kafkaVersion
      LoggingInfo:
        allOf:
          - $ref: '#/definitions/LoggingInfo'
          - description: |2-

                          <p>You can configure your MSK cluster to send broker logs to different destination types. This is a container for the configuration details related to broker logs.</p>
                          
            xml:
              name: loggingInfo
      NumberOfBrokerNodes:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: |2-

                          <p>The number of broker nodes in the cluster.</p>
                       
            xml:
              name: numberOfBrokerNodes
      OpenMonitoring:
        allOf:
          - $ref: '#/definitions/OpenMonitoring'
          - description: |2-

                          <p>The settings for open monitoring.</p>
                       
            xml:
              name: openMonitoring
    type: object
  NodeExporter:
    description: |2-

                  <p>Indicates whether you want to enable or disable the Node Exporter.</p>
               
    properties:
      EnabledInBroker:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the Node Exporter.</p>
                       
            xml:
              name: enabledInBroker
    required:
      - EnabledInBroker
    type: object
  NodeExporterInfo:
    description: |2-

                  <p>Indicates whether you want to enable or disable the Node Exporter.</p>
               
    properties:
      EnabledInBroker:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the Node Exporter.</p>
                       
            xml:
              name: enabledInBroker
    required:
      - EnabledInBroker
    type: object
  NodeInfo:
    description: |2-

                  <p>The node information object.</p>
               
    properties:
      AddedToClusterTime:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The start time.</p>
                       
            xml:
              name: addedToClusterTime
      BrokerNodeInfo:
        allOf:
          - $ref: '#/definitions/BrokerNodeInfo'
          - description: |2-

                          <p>The broker node info.</p>
                       
            xml:
              name: brokerNodeInfo
      InstanceType:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The instance type.</p>
                       
            xml:
              name: instanceType
      NodeARN:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the node.</p>
                       
            xml:
              name: nodeARN
      NodeType:
        allOf:
          - $ref: '#/definitions/NodeType'
          - description: |2-

                          <p>The node type.</p>
                       
            xml:
              name: nodeType
      ZookeeperNodeInfo:
        allOf:
          - $ref: '#/definitions/ZookeeperNodeInfo'
          - description: |2-

                          <p>The ZookeeperNodeInfo.</p>
                       
            xml:
              name: zookeeperNodeInfo
    type: object
  NodeType:
    description: |2-

                  <p>The broker or Zookeeper node.</p>
               
    enum:
      - BROKER
    type: string
  NotFoundException: {}
  OpenMonitoring:
    description: |2-

                  <p>JMX and Node monitoring for the MSK cluster.</p>
               
    properties:
      Prometheus:
        allOf:
          - $ref: '#/definitions/Prometheus'
          - description: |2-

                          <p>Prometheus settings.</p>
                       
            xml:
              name: prometheus
    required:
      - Prometheus
    type: object
  OpenMonitoringInfo:
    description: |2-

                  <p>JMX and Node monitoring for the MSK cluster.</p>
               
    properties:
      Prometheus:
        allOf:
          - $ref: '#/definitions/PrometheusInfo'
          - description: |2-

                          <p>Prometheus settings.</p>
                       
            xml:
              name: prometheus
    required:
      - Prometheus
    type: object
  Prometheus:
    description: |2-

                  <p>Prometheus settings.</p>
               
    properties:
      JmxExporter:
        allOf:
          - $ref: '#/definitions/JmxExporter'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
                       
            xml:
              name: jmxExporter
      NodeExporter:
        allOf:
          - $ref: '#/definitions/NodeExporter'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the Node Exporter.</p>
                       
            xml:
              name: nodeExporter
    type: object
  PrometheusInfo:
    description: |2-

                  <p>Prometheus settings.</p>
               
    properties:
      JmxExporter:
        allOf:
          - $ref: '#/definitions/JmxExporterInfo'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the JMX Exporter.</p>
                       
            xml:
              name: jmxExporter
      NodeExporter:
        allOf:
          - $ref: '#/definitions/NodeExporterInfo'
          - description: |2-

                          <p>Indicates whether you want to enable or disable the Node Exporter.</p>
                       
            xml:
              name: nodeExporter
    type: object
  RebootBrokerRequest:
    description: Reboots a node.
    properties:
      BrokerIds:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>The list of broker IDs to be rebooted. The reboot-broker operation supports rebooting one broker at a time.</p>
                       
            xml:
              name: brokerIds
    required:
      - BrokerIds
    title: RebootBrokerRequest
    type: object
  RebootBrokerResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  S3:
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: bucket
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - xml:
              name: enabled
      Prefix:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: prefix
    required:
      - Enabled
    type: object
  Sasl:
    description: |2-

                  <p>Details for client authentication using SASL.</p>
               
    properties:
      Iam:
        allOf:
          - $ref: '#/definitions/Iam'
          - description: |2-

                          <p>Indicates whether IAM access control is enabled.</p>
                       
            xml:
              name: iam
      Scram:
        allOf:
          - $ref: '#/definitions/Scram'
          - description: |2-

                          <p>Details for SASL/SCRAM client authentication.</p>
                       
            xml:
              name: scram
    type: object
  Scram:
    description: |2-

                  <p>Details for SASL/SCRAM client authentication.</p>
               
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>SASL/SCRAM authentication is enabled or not.</p>
                       
            xml:
              name: enabled
    type: object
  ServiceUnavailableException: {}
  StateInfo:
    properties:
      Code:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: code
      Message:
        allOf:
          - $ref: '#/definitions/__string'
          - xml:
              name: message
    type: object
  StorageInfo:
    description: |2-

                  <p>Contains information about storage volumes attached to MSK broker nodes.</p>
               
    properties:
      EbsStorageInfo:
        allOf:
          - $ref: '#/definitions/EBSStorageInfo'
          - description: |2-

                          <p>EBS volume information.</p>
                       
            xml:
              name: ebsStorageInfo
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: |2-

                          <p>The key-value pair for the resource tag.</p>
                       
            xml:
              name: tags
    required:
      - Tags
    title: TagResourceRequest
    type: object
  Tls:
    description: |2-

                  <p>Details for client authentication using TLS.</p>
               
    properties:
      CertificateAuthorityArnList:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>List of ACM Certificate Authority ARNs.</p>
                       
            xml:
              name: certificateAuthorityArnList
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Specifies whether you want to enable or disable TLS authentication.</p>
                       
            xml:
              name: enabled
    type: object
  TooManyRequestsException: {}
  Unauthenticated:
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: |2-

                          <p>Specifies whether you want to enable or disable unauthenticated traffic to your cluster.</p>
                       
            xml:
              name: enabled
    type: object
  UnauthorizedException: {}
  UnprocessedScramSecret:
    description: |2-

                  <p>Error info for scram secret associate/disassociate failure.</p>
               
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Error code for associate/disassociate failure.</p>
                       
            xml:
              name: errorCode
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Error message for associate/disassociate failure.</p>
                       
            xml:
              name: errorMessage
      SecretArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>AWS Secrets Manager secret ARN.</p>
                       
            xml:
              name: secretArn
    type: object
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UpdateBrokerCountRequest:
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of cluster to update from. A successful operation will then generate a new version.</p>
                       
            xml:
              name: currentVersion
      TargetNumberOfBrokerNodes:
        allOf:
          - $ref: '#/definitions/__integerMin1Max15'
          - description: |2-

                          <p>The number of broker nodes that you want the cluster to have after this operation completes successfully.</p>
                       
            xml:
              name: targetNumberOfBrokerNodes
    required:
      - CurrentVersion
      - TargetNumberOfBrokerNodes
    title: UpdateBrokerCountRequest
    type: object
  UpdateBrokerCountResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  UpdateBrokerStorageRequest:
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of cluster to update from. A successful operation will then generate a new version.</p>
                       
            xml:
              name: currentVersion
      TargetBrokerEBSVolumeInfo:
        allOf:
          - $ref: '#/definitions/__listOfBrokerEBSVolumeInfo'
          - description: |2-

                          <p>Describes the target volume size and the ID of the broker to apply the update to.</p>
                       
            xml:
              name: targetBrokerEBSVolumeInfo
    required:
      - TargetBrokerEBSVolumeInfo
      - CurrentVersion
    title: UpdateBrokerStorageRequest
    type: object
  UpdateBrokerStorageResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  UpdateBrokerTypeRequest:
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The cluster version that you want to change. After this operation completes successfully, the cluster will have a new version.</p>
                       
            xml:
              name: currentVersion
      TargetInstanceType:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon MSK broker type that you want all of the brokers in this cluster to be.</p>
                       
            xml:
              name: targetInstanceType
    required:
      - CurrentVersion
      - TargetInstanceType
    title: UpdateBrokerTypeRequest
    type: object
  UpdateBrokerTypeResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  UpdateClusterConfigurationRequest:
    properties:
      ConfigurationInfo:
        allOf:
          - $ref: '#/definitions/ConfigurationInfo'
          - description: |2-

                          <p>Represents the configuration that you want MSK to use for the brokers in a cluster.</p>
                       
            xml:
              name: configurationInfo
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of the cluster that needs to be updated.</p>
                       
            xml:
              name: currentVersion
    required:
      - CurrentVersion
      - ConfigurationInfo
    title: UpdateClusterConfigurationRequest
    type: object
  UpdateClusterConfigurationResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  UpdateClusterKafkaVersionRequest:
    properties:
      ConfigurationInfo:
        allOf:
          - $ref: '#/definitions/ConfigurationInfo'
          - description: |2-

                          <p>The custom configuration that should be applied on the new version of cluster.</p>
                          
            xml:
              name: configurationInfo
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Current cluster version.</p>
                          
            xml:
              name: currentVersion
      TargetKafkaVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>Target Kafka version.</p>
                          
            xml:
              name: targetKafkaVersion
    required:
      - TargetKafkaVersion
      - CurrentVersion
    title: UpdateClusterKafkaVersionRequest
    type: object
  UpdateClusterKafkaVersionResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                          
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                          
            xml:
              name: clusterOperationArn
    type: object
  UpdateConfigurationRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The description of the configuration revision.</p>
                       
            xml:
              name: description
      ServerProperties:
        allOf:
          - $ref: '#/definitions/__blob'
          - description: |2-

                          <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. 
                             When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>
                       
            xml:
              name: serverProperties
    required:
      - ServerProperties
    title: UpdateConfigurationRequest
    type: object
  UpdateConfigurationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the configuration.</p>
                       
            xml:
              name: arn
      LatestRevision:
        allOf:
          - $ref: '#/definitions/ConfigurationRevision'
          - description: |2-

                          <p>Latest revision of the configuration.</p>
                       
            xml:
              name: latestRevision
    type: object
  UpdateMonitoringRequest:
    description: Request body for UpdateMonitoring.
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
                       
            xml:
              name: currentVersion
      EnhancedMonitoring:
        allOf:
          - $ref: '#/definitions/EnhancedMonitoring'
          - description: |2-

                          <p>Specifies which Apache Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for this cluster.</p>
                       
            xml:
              name: enhancedMonitoring
      LoggingInfo:
        allOf:
          - $ref: '#/definitions/LoggingInfo'
          - xml:
              name: loggingInfo
      OpenMonitoring:
        allOf:
          - $ref: '#/definitions/OpenMonitoringInfo'
          - description: |2-

                          <p>The settings for open monitoring.</p>
                       
            xml:
              name: openMonitoring
    required:
      - CurrentVersion
    title: UpdateMonitoringRequest
    type: object
  UpdateMonitoringResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  UpdateSecurityRequest:
    properties:
      ClientAuthentication:
        allOf:
          - $ref: '#/definitions/ClientAuthentication'
          - description: |2-

                          <p>Includes all client authentication related information.</p>
                       
            xml:
              name: clientAuthentication
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
                       
            xml:
              name: currentVersion
      EncryptionInfo:
        allOf:
          - $ref: '#/definitions/EncryptionInfo'
          - description: |2-

                          <p>Includes all encryption-related information.</p>
                       
            xml:
              name: encryptionInfo
    required:
      - CurrentVersion
    title: UpdateSecurityRequest
    type: object
  UpdateSecurityResponse:
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster.</p>
                       
            xml:
              name: clusterArn
      ClusterOperationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
                       
            xml:
              name: clusterOperationArn
    type: object
  ZookeeperNodeInfo:
    description: |2-

                  <p>Zookeeper node information.</p>
               
    properties:
      AttachedENIId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The attached elastic network interface of the broker.</p>
                       
            xml:
              name: attachedENIId
      ClientVpcIpAddress:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The virtual private cloud (VPC) IP address of the client.</p>
                       
            xml:
              name: clientVpcIpAddress
      Endpoints:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: |2-

                          <p>Endpoints for accessing the ZooKeeper.</p>
                       
            xml:
              name: endpoints
      ZookeeperId:
        allOf:
          - $ref: '#/definitions/__double'
          - description: |2-

                          <p>The role-specific ID for Zookeeper.</p>
                       
            xml:
              name: zookeeperId
      ZookeeperVersion:
        allOf:
          - $ref: '#/definitions/__string'
          - description: |2-

                          <p>The version of Zookeeper.</p>
                       
            xml:
              name: zookeeperVersion
    type: object
  __blob:
    type: string
  __boolean:
    type: boolean
  __double:
    format: double
    type: number
  __integer:
    type: integer
  __integerMin1Max15:
    maximum: 15
    minimum: 1
    type: integer
  __integerMin1Max16384:
    maximum: 16384
    minimum: 1
    type: integer
  __listOfBrokerEBSVolumeInfo:
    items:
      $ref: '#/definitions/BrokerEBSVolumeInfo'
    type: array
  __listOfClusterInfo:
    items:
      $ref: '#/definitions/ClusterInfo'
    type: array
  __listOfClusterOperationInfo:
    items:
      $ref: '#/definitions/ClusterOperationInfo'
    type: array
  __listOfClusterOperationStep:
    items:
      $ref: '#/definitions/ClusterOperationStep'
    type: array
  __listOfCompatibleKafkaVersion:
    items:
      $ref: '#/definitions/CompatibleKafkaVersion'
    type: array
  __listOfConfiguration:
    items:
      $ref: '#/definitions/Configuration'
    type: array
  __listOfConfigurationRevision:
    items:
      $ref: '#/definitions/ConfigurationRevision'
    type: array
  __listOfKafkaVersion:
    items:
      $ref: '#/definitions/KafkaVersion'
    type: array
  __listOfNodeInfo:
    items:
      $ref: '#/definitions/NodeInfo'
    type: array
  __listOfUnprocessedScramSecret:
    items:
      $ref: '#/definitions/UnprocessedScramSecret'
    type: array
  __listOf__string:
    items:
      $ref: '#/definitions/__string'
    type: array
  __long:
    type: integer
  __mapOf__string:
    additionalProperties:
      $ref: '#/definitions/__string'
    type: object
  __string:
    type: string
  __stringMin1Max128:
    maxLength: 128
    minLength: 1
    type: string
  __stringMin1Max64:
    maxLength: 64
    minLength: 1
    type: string
  __stringMin5Max32:
    maxLength: 32
    minLength: 5
    type: string
  __timestampIso8601:
    format: date-time
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/kafka/'
host: kafka.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: |2-

                   <p>The operations for managing an Amazon MSK cluster.</p>
                
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Managed Streaming for Kafka
  version: '2018-11-14'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: kafka
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kafka-2018-11-14.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: kafka
paths:
  /v1/clusters:
    get:
      description: |2-

                    <p>Returns a list of all the MSK clusters in the current Region.</p>
                 
      operationId: ListClusters
      parameters:
        - description: |2-

                        <p>Specify a prefix of the name of the clusters that you want to list. The service lists all the clusters whose names start with this prefix.</p>
                     
          in: query
          name: clusterNameFilter
          required: false
          type: string
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. 
                        To get the next batch, provide this token in your next request.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListClustersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: |2-

                    <p>Creates a new MSK cluster.</p>
                 
      operationId: CreateCluster
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              brokerNodeGroupInfo:
                description: |2-

                              <p>Describes the setup to be used for Kafka broker nodes in the cluster.</p>
                           
                properties:
                  BrokerAZDistribution:
                    allOf:
                      - $ref: '#/definitions/BrokerAZDistribution'
                      - description: |2-

                                      <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>
                                   <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>
                                   
                        xml:
                          name: brokerAZDistribution
                  ClientSubnets:
                    allOf:
                      - $ref: '#/definitions/__listOf__string'
                      - description: |2-

                                      <p>The list of subnets to connect to in the client virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets. Client applications use elastic network interfaces to produce and consume data. Client subnets can't be in Availability Zone us-east-1e.</p>
                                   
                        xml:
                          name: clientSubnets
                  InstanceType:
                    allOf:
                      - $ref: '#/definitions/__stringMin5Max32'
                      - description: >2-

                                      <p>The type of Amazon EC2 instances to use for Kafka brokers. The following instance types are allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,
                          kafka.m5.4xlarge, kafka.m5.12xlarge, and
                          kafka.m5.24xlarge.</p>
                                   
                        xml:
                          name: instanceType
                  SecurityGroups:
                    allOf:
                      - $ref: '#/definitions/__listOf__string'
                      - description: |2-

                                      <p>The AWS security groups to associate with the elastic network interfaces in order to specify who can connect to and communicate with the Amazon MSK cluster. If you don't specify a security group, Amazon MSK uses the default security group associated with the VPC.</p>
                                   
                        xml:
                          name: securityGroups
                  StorageInfo:
                    allOf:
                      - $ref: '#/definitions/StorageInfo'
                      - description: |2-

                                      <p>Contains information about storage volumes attached to MSK broker nodes.</p>
                                   
                        xml:
                          name: storageInfo
                type: object
              clientAuthentication:
                description: |2-

                              <p>Includes all client authentication information.</p>
                           
                properties:
                  Sasl:
                    allOf:
                      - $ref: '#/definitions/Sasl'
                      - description: |2-

                                      <p>Details for ClientAuthentication using SASL.</p>
                                   
                        xml:
                          name: sasl
                  Tls:
                    allOf:
                      - $ref: '#/definitions/Tls'
                      - description: |2-

                                      <p>Details for ClientAuthentication using TLS.</p>
                                   
                        xml:
                          name: tls
                  Unauthenticated:
                    allOf:
                      - $ref: '#/definitions/Unauthenticated'
                      - description: |2-

                                      <p>Contains information about unauthenticated traffic to the cluster.</p>
                                   
                        xml:
                          name: unauthenticated
                type: object
              clusterName:
                description: |2-

                              <p>The name of the cluster.</p>
                           
                maxLength: 64
                minLength: 1
                type: string
              configurationInfo:
                description: |2-

                              <p>Specifies the configuration to use for the brokers.</p>
                           
                properties:
                  Arn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: |2-

                                      <p>ARN of the configuration to use.</p>
                                   
                        xml:
                          name: arn
                  Revision:
                    allOf:
                      - $ref: '#/definitions/__long'
                      - description: |2-

                                      <p>The revision of the configuration to use.</p>
                                   
                        xml:
                          name: revision
                type: object
              encryptionInfo:
                description: |2-

                              <p>Includes encryption-related information, such as the AWS KMS key used for encrypting data at rest and whether you want MSK to encrypt your data in transit.</p>
                           
                properties:
                  EncryptionAtRest:
                    allOf:
                      - $ref: '#/definitions/EncryptionAtRest'
                      - description: |2-

                                      <p>The data-volume encryption details.</p>
                                   
                        xml:
                          name: encryptionAtRest
                  EncryptionInTransit:
                    allOf:
                      - $ref: '#/definitions/EncryptionInTransit'
                      - description: |2-

                                      <p>The details for encryption in transit.</p>
                                   
                        xml:
                          name: encryptionInTransit
                type: object
              enhancedMonitoring:
                description: |2-

                              <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>
                           
                enum:
                  - DEFAULT
                  - PER_BROKER
                  - PER_TOPIC_PER_BROKER
                  - PER_TOPIC_PER_PARTITION
                type: string
              kafkaVersion:
                description: |2-

                              <p>The version of Apache Kafka.</p>
                           
                maxLength: 128
                minLength: 1
                type: string
              loggingInfo:
                description: ''
                properties:
                  BrokerLogs:
                    allOf:
                      - $ref: '#/definitions/BrokerLogs'
                      - xml:
                          name: brokerLogs
                type: object
              numberOfBrokerNodes:
                description: |2-

                              <p>The number of broker nodes in the cluster.</p>
                           
                maximum: 15
                minimum: 1
                type: integer
              openMonitoring:
                description: |2-

                              <p>JMX and Node monitoring for the MSK cluster.</p>
                           
                properties:
                  Prometheus:
                    allOf:
                      - $ref: '#/definitions/PrometheusInfo'
                      - description: |2-

                                      <p>Prometheus settings.</p>
                                   
                        xml:
                          name: prometheus
                type: object
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: |2-

                              <p>Create tags when creating the cluster.</p>
                           
                type: object
            required:
              - brokerNodeGroupInfo
              - clusterName
              - kafkaVersion
              - numberOfBrokerNodes
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/v1/clusters/{clusterArn}':
    delete:
      description: |2-

                    <p>Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in the request.</p>
                 
      operationId: DeleteCluster
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - description: |2-

                        <p>The current version of the MSK cluster.</p>
                     
          in: query
          name: currentVersion
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    get:
      description: |2-

                    <p>Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.</p>
                 
      operationId: DescribeCluster
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/clusters/{clusterArn}/bootstrap-brokers':
    get:
      description: |2-

                    <p>A list of brokers that a client application can use to bootstrap.</p>
                 
      operationId: GetBootstrapBrokers
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBootstrapBrokersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/clusters/{clusterArn}/configuration':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the cluster with the configuration that is specified in the request body.</p>
                 
      operationId: UpdateClusterConfiguration
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              configurationInfo:
                description: |2-

                              <p>Specifies the configuration to use for the brokers.</p>
                           
                properties:
                  Arn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: |2-

                                      <p>ARN of the configuration to use.</p>
                                   
                        xml:
                          name: arn
                  Revision:
                    allOf:
                      - $ref: '#/definitions/__long'
                      - description: |2-

                                      <p>The revision of the configuration to use.</p>
                                   
                        xml:
                          name: revision
                type: object
              currentVersion:
                description: |2-

                              <p>The version of the cluster that needs to be updated.</p>
                           
                type: string
            required:
              - configurationInfo
              - currentVersion
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateClusterConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/v1/clusters/{clusterArn}/monitoring':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the monitoring settings for the cluster. You can use this operation to specify which Apache Kafka metrics you want Amazon MSK to send to Amazon CloudWatch. You can also specify settings for open monitoring with Prometheus.</p>
                 
      operationId: UpdateMonitoring
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              currentVersion:
                description: |2-

                              <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
                           
                type: string
              enhancedMonitoring:
                description: |2-

                              <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>
                           
                enum:
                  - DEFAULT
                  - PER_BROKER
                  - PER_TOPIC_PER_BROKER
                  - PER_TOPIC_PER_PARTITION
                type: string
              loggingInfo:
                description: ''
                properties:
                  BrokerLogs:
                    allOf:
                      - $ref: '#/definitions/BrokerLogs'
                      - xml:
                          name: brokerLogs
                type: object
              openMonitoring:
                description: |2-

                              <p>JMX and Node monitoring for the MSK cluster.</p>
                           
                properties:
                  Prometheus:
                    allOf:
                      - $ref: '#/definitions/PrometheusInfo'
                      - description: |2-

                                      <p>Prometheus settings.</p>
                                   
                        xml:
                          name: prometheus
                type: object
            required:
              - currentVersion
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMonitoringResponse'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
  '/v1/clusters/{clusterArn}/nodes':
    get:
      description: |2-

                    <p>Returns a list of the broker nodes in the cluster.</p>
                 
      operationId: ListNodes
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. 
                        To get the next batch, provide this token in your next request.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNodesResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/clusters/{clusterArn}/nodes/count':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the number of broker nodes in the cluster.</p>
                 
      operationId: UpdateBrokerCount
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              currentVersion:
                description: |2-

                              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>
                           
                type: string
              targetNumberOfBrokerNodes:
                description: |2-

                              <p>The number of broker nodes that you want the cluster to have after this operation completes successfully.</p>
                           
                maximum: 15
                minimum: 1
                type: integer
            required:
              - currentVersion
              - targetNumberOfBrokerNodes
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBrokerCountResponse'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
  '/v1/clusters/{clusterArn}/nodes/storage':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the EBS storage associated with MSK brokers.</p>
                 
      operationId: UpdateBrokerStorage
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              currentVersion:
                description: |2-

                              <p>The version of cluster to update from. A successful operation will then generate a new version.</p>
                           
                type: string
              targetBrokerEBSVolumeInfo:
                description: |2-

                              <p>Describes the target volume size and the ID of the broker to apply the update to.</p>
                           
                items:
                  $ref: '#/definitions/BrokerEBSVolumeInfo'
                type: array
            required:
              - currentVersion
              - targetBrokerEBSVolumeInfo
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBrokerStorageResponse'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
  '/v1/clusters/{clusterArn}/nodes/type':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates EC2 instance type.</p>
                 
      operationId: UpdateBrokerType
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              currentVersion:
                description: |2-

                              <p>The cluster version that you want to change. After this operation completes successfully, the cluster will have a new version.</p>
                           
                type: string
              targetInstanceType:
                description: |2-

                              <p>The Amazon MSK broker type that you want all of the brokers in this cluster to be.</p>
                           
                type: string
            required:
              - currentVersion
              - targetInstanceType
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBrokerTypeResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/v1/clusters/{clusterArn}/operations':
    get:
      description: |2-

                    <p>Returns a list of all the operations that have been performed on the specified MSK cluster.</p>
                 
      operationId: ListClusterOperations
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. 
                        To get the next batch, provide this token in your next request.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListClusterOperationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/clusters/{clusterArn}/reboot-broker':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Reboots brokers.
      operationId: RebootBroker
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the cluster to be updated.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              brokerIds:
                description: |2-

                              <p>The list of broker IDs to be rebooted. The reboot-broker operation supports rebooting one broker at a time.</p>
                           
                items:
                  $ref: '#/definitions/__string'
                type: array
            required:
              - brokerIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootBrokerResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/v1/clusters/{clusterArn}/scram-secrets':
    get:
      description: |2-

                    <p>Returns a list of the Scram Secrets associated with an Amazon MSK cluster.</p>
                 
      operationId: ListScramSecrets
      parameters:
        - description: |2-

                        <p>The arn of the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - description: |2-

                        <p>The maxResults of the query.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The nextToken of the query.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListScramSecretsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: |2-

                    <p>Disassociates one or more Scram Secrets from an Amazon MSK cluster.</p>
                 
      operationId: BatchDisassociateScramSecret
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the cluster to be updated.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              secretArnList:
                description: |2-

                              <p>List of AWS Secrets Manager secret ARNs.</p>
                           
                items:
                  $ref: '#/definitions/__string'
                type: array
            required:
              - secretArnList
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDisassociateScramSecretResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    post:
      consumes:
        - application/json
      description: |2-

                    <p>Associates one or more Scram Secrets with an Amazon MSK cluster.</p>
                 
      operationId: BatchAssociateScramSecret
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the cluster to be updated.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              secretArnList:
                description: |2-

                              <p>List of AWS Secrets Manager secret ARNs.</p>
                           
                items:
                  $ref: '#/definitions/__string'
                type: array
            required:
              - secretArnList
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchAssociateScramSecretResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/v1/clusters/{clusterArn}/security':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the security settings for the cluster. You can use this operation to specify encryption and authentication on existing clusters.</p>
                 
      operationId: UpdateSecurity
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
                     
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientAuthentication:
                description: |2-

                              <p>Includes all client authentication information.</p>
                           
                properties:
                  Sasl:
                    allOf:
                      - $ref: '#/definitions/Sasl'
                      - description: |2-

                                      <p>Details for ClientAuthentication using SASL.</p>
                                   
                        xml:
                          name: sasl
                  Tls:
                    allOf:
                      - $ref: '#/definitions/Tls'
                      - description: |2-

                                      <p>Details for ClientAuthentication using TLS.</p>
                                   
                        xml:
                          name: tls
                  Unauthenticated:
                    allOf:
                      - $ref: '#/definitions/Unauthenticated'
                      - description: |2-

                                      <p>Contains information about unauthenticated traffic to the cluster.</p>
                                   
                        xml:
                          name: unauthenticated
                type: object
              currentVersion:
                description: |2-

                              <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
                           
                type: string
              encryptionInfo:
                description: |2-

                              <p>Includes encryption-related information, such as the AWS KMS key used for encrypting data at rest and whether you want MSK to encrypt your data in transit.</p>
                           
                properties:
                  EncryptionAtRest:
                    allOf:
                      - $ref: '#/definitions/EncryptionAtRest'
                      - description: |2-

                                      <p>The data-volume encryption details.</p>
                                   
                        xml:
                          name: encryptionAtRest
                  EncryptionInTransit:
                    allOf:
                      - $ref: '#/definitions/EncryptionInTransit'
                      - description: |2-

                                      <p>The details for encryption in transit.</p>
                                   
                        xml:
                          name: encryptionInTransit
                type: object
            required:
              - currentVersion
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSecurityResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/v1/clusters/{clusterArn}/version':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates the Apache Kafka version for the cluster.</p>
                 
      operationId: UpdateClusterKafkaVersion
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the cluster to be updated.</p>
                        
          in: path
          name: clusterArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              configurationInfo:
                description: |2-

                              <p>Specifies the configuration to use for the brokers.</p>
                           
                properties:
                  Arn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: |2-

                                      <p>ARN of the configuration to use.</p>
                                   
                        xml:
                          name: arn
                  Revision:
                    allOf:
                      - $ref: '#/definitions/__long'
                      - description: |2-

                                      <p>The revision of the configuration to use.</p>
                                   
                        xml:
                          name: revision
                type: object
              currentVersion:
                description: |2-

                              <p>Current cluster version.</p>
                              
                type: string
              targetKafkaVersion:
                description: |2-

                              <p>Target Kafka version.</p>
                              
                type: string
            required:
              - currentVersion
              - targetKafkaVersion
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateClusterKafkaVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /v1/compatible-kafka-versions:
    get:
      description: |2-

                    <p>Gets the Apache Kafka versions to which you can update the MSK cluster.</p>
                 
      operationId: GetCompatibleKafkaVersions
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the cluster check.</p>
                        
          in: query
          name: clusterArn
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCompatibleKafkaVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /v1/configurations:
    get:
      description: |2-

                    <p>Returns a list of all the MSK configurations in this Region.</p>
                 
      operationId: ListConfigurations
      parameters:
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. 
                        To get the next batch, provide this token in your next request.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: |2-

                    <p>Creates a new MSK configuration.</p>
                 
      operationId: CreateConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: |2-

                              <p>The description of the configuration.</p>
                           
                type: string
              kafkaVersions:
                description: |2-

                              <p>The versions of Apache Kafka with which you can use this MSK configuration.</p>
                           
                items:
                  $ref: '#/definitions/__string'
                type: array
              name:
                description: |2-

                              <p>The name of the configuration.</p>
                           
                type: string
              serverProperties:
                description: |2-

                              <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. 
                                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>
                           
                type: string
            required:
              - name
              - serverProperties
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/v1/configurations/{arn}':
    delete:
      description: |2-

                    <p>Deletes an MSK Configuration.</p>
                 
      operationId: DeleteConfiguration
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration.</p>
                     
          in: path
          name: arn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConfigurationResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    get:
      description: |2-

                    <p>Returns a description of this MSK configuration.</p>
                 
      operationId: DescribeConfiguration
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.</p>
                     
          in: path
          name: arn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: |2-

                    <p>Updates an MSK configuration.</p>
                 
      operationId: UpdateConfiguration
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) of the configuration.</p>
                     
          in: path
          name: arn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: |2-

                              <p>The description of the configuration revision.</p>
                           
                type: string
              serverProperties:
                description: |2-

                              <p>Contents of the <filename>server.properties</filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. 
                                 When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>server.properties</filename> can be in plaintext.</p>
                           
                type: string
            required:
              - serverProperties
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/v1/configurations/{arn}/revisions':
    get:
      description: |2-

                    <p>Returns a list of all the MSK configurations in this Region.</p>
                 
      operationId: ListConfigurationRevisions
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.</p>
                     
          in: path
          name: arn
          required: true
          type: string
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
                     
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. 
                        To get the next batch, provide this token in your next request.</p>
                     
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationRevisionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/configurations/{arn}/revisions/{revision}':
    get:
      description: |2-

                    <p>Returns a description of this revision of the configuration.</p>
                 
      operationId: DescribeConfigurationRevision
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.</p>
                     
          in: path
          name: arn
          required: true
          type: string
        - description: |2-

                        <p>A string that uniquely identifies a revision of an MSK configuration.</p>
                     
          in: path
          name: revision
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationRevisionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /v1/kafka-versions:
    get:
      description: |2-

                    <p>Returns a list of Kafka versions.</p>
                 
      operationId: ListKafkaVersions
      parameters:
        - description: |2-

                        <p>The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.</p>
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: |2-

                        <p>The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.</p>
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListKafkaVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/operations/{clusterOperationArn}':
    get:
      description: |2-

                    <p>Returns a description of the cluster operation specified by the ARN.</p>
                 
      operationId: DescribeClusterOperation
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the MSK cluster operation.</p>
                     
          in: path
          name: clusterOperationArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeClusterOperationResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/v1/tags/{resourceArn}':
    get:
      description: |2-

                    <p>Returns a list of the tags associated with the specified resource.</p>
                 
      operationId: ListTagsForResource
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.</p>
                     
          in: path
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: |2-

                    <p>Adds tags to the specified MSK resource.</p>
                 
      operationId: TagResource
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.</p>
                     
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: |2-

                              <p>The key-value pair for the resource tag.</p>
                           
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/v1/tags/{resourceArn}#tagKeys':
    delete:
      description: |2-

                    <p>Removes the tags associated with the keys that are provided in the query.</p>
                 
      operationId: UntagResource
      parameters:
        - description: |2-

                        <p>The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.</p>
                     
          in: path
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: |2-

                        <p>Tag keys must be unique for a given cluster. In addition, the following restrictions apply:</p>
                        <ul>
                           <li>
                              <p>Each tag key must be unique. If you add a tag with a key that's already in
                              use, your new tag overwrites the existing key-value pair. </p>
                           </li>
                           <li>
                              <p>You can't start a tag key with aws: because this prefix is reserved for use
                              by  AWS.  AWS creates tags that begin with this prefix on your behalf, but
                              you can't edit or delete them.</p>
                           </li>
                           <li>
                              <p>Tag keys must be between 1 and 128 Unicode characters in length.</p>
                           </li>
                           <li>
                              <p>Tag keys must consist of the following characters: Unicode letters, digits,
                              white space, and the following special characters: _ . / = + -
                                 @.</p>
                           </li>
                        </ul>
                     
          in: query
          items:
            $ref: '#/definitions/__string'
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

