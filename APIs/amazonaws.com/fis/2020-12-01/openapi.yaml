basePath: /
definitions:
  Action:
    description: >-
      Describes an action. For more information, see <a
      href="https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html">AWS
      FIS actions</a> in the <i>AWS Fault Injection Simulator User Guide</i>.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/ActionDescription'
          - description: The description for the action.
      id:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      parameters:
        allOf:
          - $ref: '#/definitions/ActionParameterMap'
          - description: 'The action parameters, if applicable.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the action.
      targets:
        allOf:
          - $ref: '#/definitions/ActionTargetMap'
          - description: The supported targets for the action.
    type: object
  ActionDescription:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ActionId:
    maxLength: 128
    pattern: '[\S]+'
    type: string
  ActionParameter:
    description: Describes a parameter for an action.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/ActionParameterDescription'
          - description: The parameter description.
      required:
        allOf:
          - $ref: '#/definitions/ActionParameterRequired'
          - description: Indicates whether the parameter is required.
    type: object
  ActionParameterDescription:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ActionParameterMap:
    additionalProperties:
      $ref: '#/definitions/ActionParameter'
    type: object
  ActionParameterName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ActionParameterRequired:
    type: boolean
  ActionSummary:
    description: Provides a summary of an action.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/ActionDescription'
          - description: The description for the action.
      id:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the action.
      targets:
        allOf:
          - $ref: '#/definitions/ActionTargetMap'
          - description: The targets for the action.
    type: object
  ActionSummaryList:
    items:
      $ref: '#/definitions/ActionSummary'
    type: array
  ActionTarget:
    description: Describes a target for an action.
    properties:
      resourceType:
        allOf:
          - $ref: '#/definitions/TargetResourceType'
          - description: The resource type of the target.
    type: object
  ActionTargetMap:
    additionalProperties:
      $ref: '#/definitions/ActionTarget'
    type: object
  ActionTargetName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ClientToken:
    maxLength: 1024
    minLength: 1
    pattern: '[\S]+'
    type: string
  ConflictException: {}
  CreateExperimentTemplateActionInput:
    description: Specifies an action for an experiment template.
    properties:
      actionId:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionDescription'
          - description: A description for the action.
      parameters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionParameterMap'
          - description: 'The parameters for the action, if applicable.'
      startAfter:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionStartAfterList'
          - description: >-
              The name of the action that must be completed before the current
              action starts. Omit this parameter to run the action at the start
              of the experiment.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
    required:
      - actionId
    type: object
  CreateExperimentTemplateActionInputMap:
    additionalProperties:
      $ref: '#/definitions/CreateExperimentTemplateActionInput'
    type: object
  CreateExperimentTemplateRequest:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/CreateExperimentTemplateActionInputMap'
          - description: The actions for the experiment.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              Unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateDescription'
          - description: >-
              A description for the experiment template. Can contain up to 64
              letters (A-Z and a-z).
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that grants the AWS
              FIS service permission to perform service actions on your behalf.
      stopConditions:
        allOf:
          - $ref: '#/definitions/CreateExperimentTemplateStopConditionInputList'
          - description: The stop conditions.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags to apply to the experiment template.
      targets:
        allOf:
          - $ref: '#/definitions/CreateExperimentTemplateTargetInputMap'
          - description: The targets for the experiment.
    required:
      - clientToken
      - description
      - stopConditions
      - actions
      - roleArn
    title: CreateExperimentTemplateRequest
    type: object
  CreateExperimentTemplateResponse:
    properties:
      experimentTemplate:
        allOf:
          - $ref: '#/definitions/ExperimentTemplate'
          - description: Information about the experiment template.
    type: object
  CreateExperimentTemplateStopConditionInput:
    description: Specifies a stop condition for an experiment template.
    properties:
      source:
        allOf:
          - $ref: '#/definitions/StopConditionSource'
          - description: >-
              The source for the stop condition. Specify
              <code>aws:cloudwatch:alarm</code> if the stop condition is defined
              by a CloudWatch alarm. Specify <code>none</code> if there is no
              stop condition.
      value:
        allOf:
          - $ref: '#/definitions/StopConditionValue'
          - description: >-
              The Amazon Resource Name (ARN) of the CloudWatch alarm. This is
              required if the source is a CloudWatch alarm.
    required:
      - source
    type: object
  CreateExperimentTemplateStopConditionInputList:
    items:
      $ref: '#/definitions/CreateExperimentTemplateStopConditionInput'
    type: array
  CreateExperimentTemplateTargetInput:
    description: >-
      Specifies a target for an experiment. You must specify at least one Amazon
      Resource Name (ARN) or at least one resource tag. You cannot specify both
      ARNs and tags.
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterInputList'
          - description: >-
              The filters to apply to identify target resources using specific
              attributes.
      resourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the resources.
      resourceTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the target resources.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The AWS resource type. The resource type must be supported for the
              specified action.
      selectionMode:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetSelectionMode'
          - description: >-
              <p>Scopes the identified resources to a specific count of the
              resources at random, or a percentage of the resources. All
              identified resources are included in the target.</p> <ul> <li>
              <p>ALL - Run the action on all identified targets. This is the
              default.</p> </li> <li> <p>COUNT(n) - Run the action on the
              specified number of targets, chosen from the identified targets at
              random. For example, COUNT(1) selects one of the targets.</p>
              </li> <li> <p>PERCENT(n) - Run the action on the specified
              percentage of targets, chosen from the identified targets at
              random. For example, PERCENT(25) selects 25% of the targets.</p>
              </li> </ul>
    required:
      - resourceType
      - selectionMode
    type: object
  CreateExperimentTemplateTargetInputMap:
    additionalProperties:
      $ref: '#/definitions/CreateExperimentTemplateTargetInput'
    type: object
  CreationTime:
    format: date-time
    type: string
  DeleteExperimentTemplateRequest:
    properties: {}
    title: DeleteExperimentTemplateRequest
    type: object
  DeleteExperimentTemplateResponse:
    properties:
      experimentTemplate:
        allOf:
          - $ref: '#/definitions/ExperimentTemplate'
          - description: Information about the experiment template.
    type: object
  Experiment:
    description: Describes an experiment.
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ExperimentActionMap'
          - description: The actions for the experiment.
      creationTime:
        allOf:
          - $ref: '#/definitions/CreationTime'
          - description: The time the experiment was created.
      endTime:
        allOf:
          - $ref: '#/definitions/ExperimentEndTime'
          - description: The time that the experiment ended.
      experimentTemplateId:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateId'
          - description: The ID of the experiment template.
      id:
        allOf:
          - $ref: '#/definitions/ExperimentId'
          - description: The ID of the experiment.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that grants the AWS
              FIS service permission to perform service actions on your behalf.
      startTime:
        allOf:
          - $ref: '#/definitions/ExperimentStartTime'
          - description: The time that the experiment was started.
      state:
        allOf:
          - $ref: '#/definitions/ExperimentState'
          - description: The state of the experiment.
      stopConditions:
        allOf:
          - $ref: '#/definitions/ExperimentStopConditionList'
          - description: The stop conditions for the experiment.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the experiment.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentTargetMap'
          - description: The targets for the experiment.
    type: object
  ExperimentAction:
    description: Describes the action for an experiment.
    properties:
      actionId:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentActionDescription'
          - description: The description for the action.
      parameters:
        allOf:
          - $ref: '#/definitions/ExperimentActionParameterMap'
          - description: The parameters for the action.
      startAfter:
        allOf:
          - $ref: '#/definitions/ExperimentActionStartAfterList'
          - description: >-
              The name of the action that must be completed before this action
              starts.
      state:
        allOf:
          - $ref: '#/definitions/ExperimentActionState'
          - description: The state of the action.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentActionTargetMap'
          - description: The targets for the action.
    type: object
  ExperimentActionDescription:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ExperimentActionMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentAction'
    type: object
  ExperimentActionName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentActionParameter:
    maxLength: 1024
    pattern: '[\S]+'
    type: string
  ExperimentActionParameterMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentActionParameter'
    type: object
  ExperimentActionParameterName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentActionStartAfter:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentActionStartAfterList:
    items:
      $ref: '#/definitions/ExperimentActionStartAfter'
    type: array
  ExperimentActionState:
    description: Describes the state of an action.
    properties:
      reason:
        allOf:
          - $ref: '#/definitions/ExperimentActionStatusReason'
          - description: The reason for the state.
      status:
        allOf:
          - $ref: '#/definitions/ExperimentActionStatus'
          - description: The state of the action.
    type: object
  ExperimentActionStatus:
    enum:
      - pending
      - initiating
      - running
      - completed
      - cancelled
      - stopping
      - stopped
      - failed
    type: string
  ExperimentActionStatusReason:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ExperimentActionTargetMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTargetName'
    type: object
  ExperimentActionTargetName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentEndTime:
    format: date-time
    type: string
  ExperimentId:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentStartTime:
    format: date-time
    type: string
  ExperimentState:
    description: Describes the state of an experiment.
    properties:
      reason:
        allOf:
          - $ref: '#/definitions/ExperimentStatusReason'
          - description: The reason for the state.
      status:
        allOf:
          - $ref: '#/definitions/ExperimentStatus'
          - description: The state of the experiment.
    type: object
  ExperimentStatus:
    enum:
      - pending
      - initiating
      - running
      - completed
      - stopping
      - stopped
      - failed
    type: string
  ExperimentStatusReason:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ExperimentStopCondition:
    description: Describes the stop condition for an experiment.
    properties:
      source:
        allOf:
          - $ref: '#/definitions/StopConditionSource'
          - description: The source for the stop condition.
      value:
        allOf:
          - $ref: '#/definitions/StopConditionValue'
          - description: >-
              The Amazon Resource Name (ARN) of the CloudWatch alarm, if
              applicable.
    type: object
  ExperimentStopConditionList:
    items:
      $ref: '#/definitions/ExperimentStopCondition'
    type: array
  ExperimentSummary:
    description: Provides a summary of an experiment.
    properties:
      creationTime:
        allOf:
          - $ref: '#/definitions/CreationTime'
          - description: The time that the experiment was created.
      experimentTemplateId:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateId'
          - description: The ID of the experiment template.
      id:
        allOf:
          - $ref: '#/definitions/ExperimentId'
          - description: The ID of the experiment.
      state:
        allOf:
          - $ref: '#/definitions/ExperimentState'
          - description: The state of the experiment.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the experiment.
    type: object
  ExperimentSummaryList:
    items:
      $ref: '#/definitions/ExperimentSummary'
    type: array
  ExperimentTarget:
    description: Describes a target for an experiment.
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/ExperimentTargetFilterList'
          - description: >-
              The filters to apply to identify target resources using specific
              attributes.
      resourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the resources.
      resourceTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the target resources.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type.
      selectionMode:
        allOf:
          - $ref: '#/definitions/ExperimentTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
    type: object
  ExperimentTargetFilter:
    description: Describes a filter used for the target resources in an experiment.
    properties:
      path:
        allOf:
          - $ref: '#/definitions/ExperimentTargetFilterPath'
          - description: The attribute path for the filter.
      values:
        allOf:
          - $ref: '#/definitions/ExperimentTargetFilterValues'
          - description: The attribute values for the filter.
    type: object
  ExperimentTargetFilterList:
    items:
      $ref: '#/definitions/ExperimentTargetFilter'
    type: array
  ExperimentTargetFilterPath:
    maxLength: 256
    pattern: '[\S]+'
    type: string
  ExperimentTargetFilterValue:
    maxLength: 128
    pattern: '[\S]+'
    type: string
  ExperimentTargetFilterValues:
    items:
      $ref: '#/definitions/ExperimentTargetFilterValue'
    type: array
  ExperimentTargetMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTarget'
    type: object
  ExperimentTargetName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTargetSelectionMode:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplate:
    description: Describes an experiment template.
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionMap'
          - description: The actions for the experiment.
      creationTime:
        allOf:
          - $ref: '#/definitions/CreationTime'
          - description: The time the experiment template was created.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateDescription'
          - description: The description for the experiment template.
      id:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateId'
          - description: The ID of the experiment template.
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/LastUpdateTime'
          - description: The time the experiment template was last updated.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM role.
      stopConditions:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateStopConditionList'
          - description: The stop conditions for the experiment.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the experiment template.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetMap'
          - description: The targets for the experiment.
    type: object
  ExperimentTemplateAction:
    description: Describes an action for an experiment template.
    properties:
      actionId:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionDescription'
          - description: A description for the action.
      parameters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionParameterMap'
          - description: The parameters for the action.
      startAfter:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionStartAfterList'
          - description: >-
              The name of the action that must be completed before the current
              action starts.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
    type: object
  ExperimentTemplateActionDescription:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ExperimentTemplateActionMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTemplateAction'
    type: object
  ExperimentTemplateActionName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateActionParameter:
    maxLength: 1024
    pattern: '[\S]+'
    type: string
  ExperimentTemplateActionParameterMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTemplateActionParameter'
    type: object
  ExperimentTemplateActionParameterName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateActionStartAfter:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateActionStartAfterList:
    items:
      $ref: '#/definitions/ExperimentTemplateActionStartAfter'
    type: array
  ExperimentTemplateActionTargetMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTemplateTargetName'
    type: object
  ExperimentTemplateActionTargetName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateDescription:
    maxLength: 512
    pattern: '[\s\S]+'
    type: string
  ExperimentTemplateId:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateStopCondition:
    description: Describes a stop condition for an experiment template.
    properties:
      source:
        allOf:
          - $ref: '#/definitions/StopConditionSource'
          - description: The source for the stop condition.
      value:
        allOf:
          - $ref: '#/definitions/StopConditionValue'
          - description: >-
              The Amazon Resource Name (ARN) of the CloudWatch alarm, if
              applicable.
    type: object
  ExperimentTemplateStopConditionList:
    items:
      $ref: '#/definitions/ExperimentTemplateStopCondition'
    type: array
  ExperimentTemplateSummary:
    description: Provides a summary of an experiment template.
    properties:
      creationTime:
        allOf:
          - $ref: '#/definitions/CreationTime'
          - description: The time that the experiment template was created.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateDescription'
          - description: The description of the experiment template.
      id:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateId'
          - description: The ID of the experiment template.
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/LastUpdateTime'
          - description: The time that the experiment template was last updated.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the experiment template.
    type: object
  ExperimentTemplateSummaryList:
    items:
      $ref: '#/definitions/ExperimentTemplateSummary'
    type: array
  ExperimentTemplateTarget:
    description: Describes a target for an experiment template.
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterList'
          - description: >-
              The filters to apply to identify target resources using specific
              attributes.
      resourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the targets.
      resourceTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the target resources.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type.
      selectionMode:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
    type: object
  ExperimentTemplateTargetFilter:
    description: >-
      Describes a filter used for the target resources in an experiment
      template.
    properties:
      path:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterPath'
          - description: The attribute path for the filter.
      values:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterValues'
          - description: The attribute values for the filter.
    type: object
  ExperimentTemplateTargetFilterInputList:
    items:
      $ref: '#/definitions/ExperimentTemplateTargetInputFilter'
    type: array
  ExperimentTemplateTargetFilterList:
    items:
      $ref: '#/definitions/ExperimentTemplateTargetFilter'
    type: array
  ExperimentTemplateTargetFilterPath:
    maxLength: 256
    pattern: '[\S]+'
    type: string
  ExperimentTemplateTargetFilterValue:
    maxLength: 128
    pattern: '[\S]+'
    type: string
  ExperimentTemplateTargetFilterValues:
    items:
      $ref: '#/definitions/ExperimentTemplateTargetFilterValue'
    type: array
  ExperimentTemplateTargetInputFilter:
    description: >-
      Describes a filter used for the target resource input in an experiment
      template.
    properties:
      path:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterPath'
          - description: The attribute path for the filter.
      values:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterValues'
          - description: The attribute values for the filter.
    required:
      - path
      - values
    type: object
  ExperimentTemplateTargetMap:
    additionalProperties:
      $ref: '#/definitions/ExperimentTemplateTarget'
    type: object
  ExperimentTemplateTargetName:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  ExperimentTemplateTargetSelectionMode:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  GetActionRequest:
    properties: {}
    title: GetActionRequest
    type: object
  GetActionResponse:
    properties:
      action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: Information about the action.
    type: object
  GetExperimentRequest:
    properties: {}
    title: GetExperimentRequest
    type: object
  GetExperimentResponse:
    properties:
      experiment:
        allOf:
          - $ref: '#/definitions/Experiment'
          - description: Information about the experiment.
    type: object
  GetExperimentTemplateRequest:
    properties: {}
    title: GetExperimentTemplateRequest
    type: object
  GetExperimentTemplateResponse:
    properties:
      experimentTemplate:
        allOf:
          - $ref: '#/definitions/ExperimentTemplate'
          - description: Information about the experiment template.
    type: object
  LastUpdateTime:
    format: date-time
    type: string
  ListActionsMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ListActionsRequest:
    properties: {}
    title: ListActionsRequest
    type: object
  ListActionsResponse:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ActionSummaryList'
          - description: The actions.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to retrieve the next page of results. This value
              is <code>null</code> when there are no more results to return.
    type: object
  ListExperimentTemplatesMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ListExperimentTemplatesRequest:
    properties: {}
    title: ListExperimentTemplatesRequest
    type: object
  ListExperimentTemplatesResponse:
    properties:
      experimentTemplates:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateSummaryList'
          - description: The experiment templates.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to retrieve the next page of results. This value
              is <code>null</code> when there are no more results to return.
    type: object
  ListExperimentsMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ListExperimentsRequest:
    properties: {}
    title: ListExperimentsRequest
    type: object
  ListExperimentsResponse:
    properties:
      experiments:
        allOf:
          - $ref: '#/definitions/ExperimentSummaryList'
          - description: The experiments.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to retrieve the next page of results. This value
              is <code>null</code> when there are no more results to return.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the resource.
    type: object
  NextToken:
    maxLength: 1024
    minLength: 1
    pattern: '[\S]+'
    type: string
  ResourceArn:
    maxLength: 2048
    minLength: 20
    pattern: '[\S]+'
    type: string
  ResourceArnList:
    items:
      $ref: '#/definitions/ResourceArn'
    maxItems: 5
    type: array
  ResourceNotFoundException: {}
  ResourceType:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  RoleArn:
    maxLength: 2048
    minLength: 20
    pattern: '[\S]+'
    type: string
  ServiceQuotaExceededException: {}
  StartExperimentRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              Unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
      experimentTemplateId:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateId'
          - description: The ID of the experiment template.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags to apply to the experiment.
    required:
      - clientToken
      - experimentTemplateId
    title: StartExperimentRequest
    type: object
  StartExperimentResponse:
    properties:
      experiment:
        allOf:
          - $ref: '#/definitions/Experiment'
          - description: Information about the experiment.
    type: object
  StopConditionSource:
    maxLength: 64
    pattern: '[\S]+'
    type: string
  StopConditionValue:
    maxLength: 2048
    minLength: 20
    pattern: '[\s\S]+'
    type: string
  StopExperimentRequest:
    properties: {}
    title: StopExperimentRequest
    type: object
  StopExperimentResponse:
    properties:
      experiment:
        allOf:
          - $ref: '#/definitions/Experiment'
          - description: Information about the experiment.
    type: object
  TagKey:
    maxLength: 128
    pattern: '[\s\S]+'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the resource.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    pattern: '[\s\S]*'
    type: string
  TargetResourceType:
    maxLength: 128
    pattern: '[\S]+'
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateExperimentTemplateActionInputItem:
    description: Specifies an action for an experiment template.
    properties:
      actionId:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: The ID of the action.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionDescription'
          - description: A description for the action.
      parameters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionParameterMap'
          - description: 'The parameters for the action, if applicable.'
      startAfter:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionStartAfterList'
          - description: >-
              The name of the action that must be completed before the current
              action starts. Omit this parameter to run the action at the start
              of the experiment.
      targets:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
    type: object
  UpdateExperimentTemplateActionInputMap:
    additionalProperties:
      $ref: '#/definitions/UpdateExperimentTemplateActionInputItem'
    type: object
  UpdateExperimentTemplateRequest:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/UpdateExperimentTemplateActionInputMap'
          - description: The actions for the experiment.
      description:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateDescription'
          - description: A description for the template.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that grants the AWS
              FIS service permission to perform service actions on your behalf.
      stopConditions:
        allOf:
          - $ref: '#/definitions/UpdateExperimentTemplateStopConditionInputList'
          - description: The stop conditions for the experiment.
      targets:
        allOf:
          - $ref: '#/definitions/UpdateExperimentTemplateTargetInputMap'
          - description: The targets for the experiment.
    title: UpdateExperimentTemplateRequest
    type: object
  UpdateExperimentTemplateResponse:
    properties:
      experimentTemplate:
        allOf:
          - $ref: '#/definitions/ExperimentTemplate'
          - description: Information about the experiment template.
    type: object
  UpdateExperimentTemplateStopConditionInput:
    description: >-
      Specifies a stop condition for an experiment. You can define a stop
      condition as a CloudWatch alarm.
    properties:
      source:
        allOf:
          - $ref: '#/definitions/StopConditionSource'
          - description: >-
              The source for the stop condition. Specify
              <code>aws:cloudwatch:alarm</code> if the stop condition is defined
              by a CloudWatch alarm. Specify <code>none</code> if there is no
              stop condition.
      value:
        allOf:
          - $ref: '#/definitions/StopConditionValue'
          - description: The Amazon Resource Name (ARN) of the CloudWatch alarm.
    required:
      - source
    type: object
  UpdateExperimentTemplateStopConditionInputList:
    items:
      $ref: '#/definitions/UpdateExperimentTemplateStopConditionInput'
    type: array
  UpdateExperimentTemplateTargetInput:
    description: >-
      Specifies a target for an experiment. You must specify at least one Amazon
      Resource Name (ARN) or at least one resource tag. You cannot specify both.
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetFilterInputList'
          - description: >-
              The filters to apply to identify target resources using specific
              attributes.
      resourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the targets.
      resourceTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the target resources.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The AWS resource type. The resource type must be supported for the
              specified action.
      selectionMode:
        allOf:
          - $ref: '#/definitions/ExperimentTemplateTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
    required:
      - resourceType
      - selectionMode
    type: object
  UpdateExperimentTemplateTargetInputMap:
    additionalProperties:
      $ref: '#/definitions/UpdateExperimentTemplateTargetInput'
    type: object
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/fis/'
host: fis.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    AWS Fault Injection Simulator is a managed service that enables you to
    perform fault injection experiments on your AWS workloads. For more
    information, see the <a
    href="https://docs.aws.amazon.com/fis/latest/userguide/">AWS Fault Injection
    Simulator User Guide</a>.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Fault Injection Simulator
  version: '2020-12-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: fis
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fis-2020-12-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: fis
paths:
  /actions:
    get:
      description: Lists the available AWS FIS actions.
      operationId: ListActions
      parameters:
        - description: >-
            The maximum number of results to return with a single call. To
            retrieve the remaining results, make another call with the returned
            <code>nextToken</code> value.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The token for the next page of results.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[\S]+'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActionsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/actions/{id}':
    get:
      description: Gets information about the specified AWS FIS action.
      operationId: GetAction
      parameters:
        - description: The ID of the action.
          in: path
          maxLength: 128
          name: id
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetActionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /experimentTemplates:
    get:
      description: Lists your experiment templates.
      operationId: ListExperimentTemplates
      parameters:
        - description: >-
            The maximum number of results to return with a single call. To
            retrieve the remaining results, make another call with the returned
            <code>nextToken</code> value.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The token for the next page of results.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[\S]+'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListExperimentTemplatesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates an experiment template. </p> <p>To create a template, specify
        the following information: </p> <ul> <li> <p> <b>Targets</b>: A target
        can be a specific resource in your AWS environment, or one or more
        resources that match criteria that you specify, for example, resources
        that have specific tags.</p> </li> <li> <p> <b>Actions</b>: The actions
        to carry out on the target. You can specify multiple actions, the
        duration of each action, and when to start each action during an
        experiment.</p> </li> <li> <p> <b>Stop conditions</b>: If a stop
        condition is triggered while an experiment is running, the experiment is
        automatically stopped. You can define a stop condition as a CloudWatch
        alarm.</p> </li> </ul> <p>For more information, see the <a
        href="https://docs.aws.amazon.com/fis/latest/userguide/">AWS Fault
        Injection Simulator User Guide</a>.</p>
      operationId: CreateExperimentTemplate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                additionalProperties:
                  $ref: '#/definitions/CreateExperimentTemplateActionInput'
                description: The actions for the experiment.
                type: object
              clientToken:
                description: >-
                  Unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 1024
                minLength: 1
                pattern: '[\S]+'
                type: string
              description:
                description: >-
                  A description for the experiment template. Can contain up to
                  64 letters (A-Z and a-z).
                maxLength: 512
                pattern: '[\s\S]+'
                type: string
              roleArn:
                description: >-
                  The Amazon Resource Name (ARN) of an IAM role that grants the
                  AWS FIS service permission to perform service actions on your
                  behalf.
                maxLength: 2048
                minLength: 20
                pattern: '[\S]+'
                type: string
              stopConditions:
                description: The stop conditions.
                items:
                  $ref: '#/definitions/CreateExperimentTemplateStopConditionInput'
                type: array
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to apply to the experiment template.
                maxProperties: 50
                type: object
              targets:
                additionalProperties:
                  $ref: '#/definitions/CreateExperimentTemplateTargetInput'
                description: The targets for the experiment.
                type: object
            required:
              - clientToken
              - description
              - stopConditions
              - actions
              - roleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateExperimentTemplateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  '/experimentTemplates/{id}':
    delete:
      description: Deletes the specified experiment template.
      operationId: DeleteExperimentTemplate
      parameters:
        - description: The ID of the experiment template.
          in: path
          maxLength: 64
          name: id
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteExperimentTemplateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    get:
      description: Gets information about the specified experiment template.
      operationId: GetExperimentTemplate
      parameters:
        - description: The ID of the experiment template.
          in: path
          maxLength: 64
          name: id
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetExperimentTemplateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates the specified experiment template.
      operationId: UpdateExperimentTemplate
      parameters:
        - description: The ID of the experiment template.
          in: path
          maxLength: 64
          name: id
          pattern: '[\S]+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                additionalProperties:
                  $ref: '#/definitions/UpdateExperimentTemplateActionInputItem'
                description: The actions for the experiment.
                type: object
              description:
                description: A description for the template.
                maxLength: 512
                pattern: '[\s\S]+'
                type: string
              roleArn:
                description: >-
                  The Amazon Resource Name (ARN) of an IAM role that grants the
                  AWS FIS service permission to perform service actions on your
                  behalf.
                maxLength: 2048
                minLength: 20
                pattern: '[\S]+'
                type: string
              stopConditions:
                description: The stop conditions for the experiment.
                items:
                  $ref: '#/definitions/UpdateExperimentTemplateStopConditionInput'
                type: array
              targets:
                additionalProperties:
                  $ref: '#/definitions/UpdateExperimentTemplateTargetInput'
                description: The targets for the experiment.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateExperimentTemplateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /experiments:
    get:
      description: Lists your experiments.
      operationId: ListExperiments
      parameters:
        - description: >-
            The maximum number of results to return with a single call. To
            retrieve the remaining results, make another call with the returned
            <code>nextToken</code> value.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The token for the next page of results.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[\S]+'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListExperimentsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Starts running an experiment from the specified experiment template.
      operationId: StartExperiment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  Unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 1024
                minLength: 1
                pattern: '[\S]+'
                type: string
              experimentTemplateId:
                description: The ID of the experiment template.
                maxLength: 64
                pattern: '[\S]+'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to apply to the experiment.
                maxProperties: 50
                type: object
            required:
              - clientToken
              - experimentTemplateId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartExperimentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  '/experiments/{id}':
    delete:
      description: Stops the specified experiment.
      operationId: StopExperiment
      parameters:
        - description: The ID of the experiment.
          in: path
          maxLength: 64
          name: id
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopExperimentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    get:
      description: Gets information about the specified experiment.
      operationId: GetExperiment
      parameters:
        - description: The ID of the experiment.
          in: path
          maxLength: 64
          name: id
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetExperimentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{resourceArn}':
    delete:
      description: Removes the specified tags from the specified resource.
      operationId: UntagResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: '[\S]+'
          required: true
          type: string
        - collectionFormat: multi
          description: The tag keys to remove.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          name: tagKeys
          required: false
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
    get:
      description: Lists the tags for the specified resource.
      operationId: ListTagsForResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: '[\S]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Applies the specified tags to the specified resource.
      operationId: TagResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: '[\S]+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags for the resource.
                maxProperties: 50
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

