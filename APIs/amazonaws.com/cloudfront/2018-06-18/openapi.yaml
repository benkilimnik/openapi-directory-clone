basePath: /
definitions:
  AccessDenied: {}
  ActiveTrustedSigners:
    description: >-
      <p>A complex type that lists the AWS accounts, if any, that you included
      in the <code>TrustedSigners</code> complex type for this distribution.
      These are the accounts that you want to allow to create signed URLs for
      private content.</p> <p>The <code>Signer</code> complex type lists the AWS
      account number of the trusted signer or <code>self</code> if the signer is
      the AWS account that created the distribution. The <code>Signer</code>
      element also includes the IDs of any active CloudFront key pairs that are
      associated with the trusted signer's AWS account. If no
      <code>KeyPairId</code> element appears for a <code>Signer</code>, that
      signer can't create signed URLs. </p> <p>For more information, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
      Private Content through CloudFront</a> in the <i>Amazon CloudFront
      Developer Guide</i>.</p>
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              <p>Enabled is <code>true</code> if any of the AWS accounts listed
              in the <code>TrustedSigners</code> complex type for this RTMP
              distribution have active CloudFront key pairs. If not,
              <code>Enabled</code> is <code>false</code>.</p> <p>For more
              information, see <a>ActiveTrustedSigners</a>.</p>
      Items:
        allOf:
          - $ref: '#/definitions/SignerList'
          - description: >-
              <p>A complex type that contains one <code>Signer</code> complex
              type for each trusted signer that is specified in the
              <code>TrustedSigners</code> complex type.</p> <p>For more
              information, see <a>ActiveTrustedSigners</a>. </p>
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              <p>A complex type that contains one <code>Signer</code> complex
              type for each trusted signer specified in the
              <code>TrustedSigners</code> complex type.</p> <p>For more
              information, see <a>ActiveTrustedSigners</a>.</p>
    required:
      - Enabled
      - Quantity
    type: object
  AliasList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: CNAME
    type: array
  Aliases:
    description: >-
      A complex type that contains information about CNAMEs (alternate domain
      names), if any, for this distribution. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/AliasList'
          - description: >-
              A complex type that contains the CNAME aliases, if any, that you
              want to associate with this distribution.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of CNAME aliases, if any, that you want to associate
              with this distribution.
    required:
      - Quantity
    type: object
  AllowedMethods:
    description: >-
      <p>A complex type that controls which HTTP methods CloudFront processes
      and forwards to your Amazon S3 bucket or your custom origin. There are
      three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code>
      and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only
      <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code>
      requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS,
      PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul>
      <p>If you pick the third choice, you may need to restrict access to your
      Amazon S3 bucket or to your custom origin so users can't perform
      operations that you don't want them to. For example, you might not want
      users to have permissions to delete objects from your origin.</p>
    properties:
      CachedMethods:
        $ref: '#/definitions/CachedMethods'
      Items:
        allOf:
          - $ref: '#/definitions/MethodsList'
          - description: >-
              A complex type that contains the HTTP methods that you want
              CloudFront to process and forward to your origin.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of HTTP methods that you want CloudFront to forward to
              your origin. Valid values are 2 (for <code>GET</code> and
              <code>HEAD</code> requests), 3 (for <code>GET</code>,
              <code>HEAD</code>, and <code>OPTIONS</code> requests) and 7 (for
              <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and
              <code>DELETE</code> requests).
    required:
      - Quantity
      - Items
    type: object
  AwsAccountNumberList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: AwsAccountNumber
    type: array
  BatchTooLarge: {}
  CNAMEAlreadyExists: {}
  CacheBehavior:
    description: >-
      <p>A complex type that describes how CloudFront processes requests.</p>
      <p>You must create at least as many cache behaviors (including the default
      cache behavior) as you have origins if you want CloudFront to distribute
      objects from all of the origins. Each cache behavior specifies the one
      origin from which you want CloudFront to get objects. If you have two
      origins and only the default cache behavior, the default cache behavior
      will cause CloudFront to get objects from one of the origins, but the
      other origin is never used.</p> <p>For the current limit on the number of
      cache behaviors that you can add to a distribution, see <a
      href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront">Amazon
      CloudFront Limits</a> in the <i>AWS General Reference</i>.</p> <p>If you
      don't want to specify any cache behaviors, include only an empty
      <code>CacheBehaviors</code> element. Don't include an empty
      <code>CacheBehavior</code> element, or CloudFront returns a
      <code>MalformedXML</code> error.</p> <p>To delete all cache behaviors in
      an existing distribution, update the distribution configuration and
      include only an empty <code>CacheBehaviors</code> element.</p> <p>To add,
      change, or remove one or more cache behaviors, update the distribution
      configuration and specify all of the cache behaviors that you want to
      include in the updated distribution.</p> <p>For more information about
      cache behaviors, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior">Cache
      Behaviors</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    properties:
      AllowedMethods:
        $ref: '#/definitions/AllowedMethods'
      Compress:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether you want CloudFront to automatically compress certain
              files for this cache behavior. If so, specify true; if not,
              specify false. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html">Serving
              Compressed Files</a> in the <i>Amazon CloudFront Developer
              Guide</i>.
      DefaultTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The default amount of time that you want objects to stay in
              CloudFront caches before CloudFront forwards another request to
              your origin to determine whether the object has been updated. The
              value that you specify applies only when your origin does not add
              HTTP headers such as <code>Cache-Control max-age</code>,
              <code>Cache-Control s-maxage</code>, and <code>Expires</code> to
              objects. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.
      FieldLevelEncryptionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value of <code>ID</code> for the field-level encryption
              configuration that you want CloudFront to use for encrypting
              specific fields of data for a cache behavior or for the default
              cache behavior in your distribution.
      ForwardedValues:
        allOf:
          - $ref: '#/definitions/ForwardedValues'
          - description: >-
              A complex type that specifies how CloudFront handles query strings
              and cookies.
      LambdaFunctionAssociations:
        allOf:
          - $ref: '#/definitions/LambdaFunctionAssociations'
          - description: >-
              A complex type that contains zero or more Lambda function
              associations for a cache behavior.
      MaxTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The maximum amount of time that you want objects to stay in
              CloudFront caches before CloudFront forwards another request to
              your origin to determine whether the object has been updated. The
              value that you specify applies only when your origin adds HTTP
              headers such as <code>Cache-Control max-age</code>,
              <code>Cache-Control s-maxage</code>, and <code>Expires</code> to
              objects. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.
      MinTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              <p>The minimum amount of time that you want objects to stay in
              CloudFront caches before CloudFront forwards another request to
              your origin to determine whether the object has been updated. For
              more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon Amazon CloudFront Developer
              Guide</i>.</p> <p>You must specify <code>0</code> for
              <code>MinTTL</code> if you configure CloudFront to forward all
              headers to your origin (under <code>Headers</code>, if you specify
              <code>1</code> for <code>Quantity</code> and <code>*</code> for
              <code>Name</code>).</p>
      PathPattern:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The pattern (for example, <code>images/*.jpg</code>) that
              specifies which requests to apply the behavior to. When CloudFront
              receives a viewer request, the requested path is compared with
              path patterns in the order in which cache behaviors are listed in
              the distribution.</p> <note> <p>You can optionally include a slash
              (<code>/</code>) at the beginning of the path pattern. For
              example, <code>/images/*.jpg</code>. CloudFront behavior is the
              same with or without the leading <code>/</code>.</p> </note>
              <p>The path pattern for the default cache behavior is
              <code>*</code> and cannot be changed. If the request for an object
              does not match the path pattern for any cache behaviors,
              CloudFront applies the behavior in the default cache behavior.</p>
              <p>For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern">Path
              Pattern</a> in the <i> Amazon CloudFront Developer Guide</i>.</p>
      SmoothStreaming:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether you want to distribute media files in the
              Microsoft Smooth Streaming format using the origin that is
              associated with this cache behavior. If so, specify
              <code>true</code>; if not, specify <code>false</code>. If you
              specify <code>true</code> for <code>SmoothStreaming</code>, you
              can still distribute other content using this cache behavior if
              the content matches the value of <code>PathPattern</code>. 
      TargetOriginId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value of <code>ID</code> for the origin that you want
              CloudFront to route requests to when a request matches the path
              pattern either for a cache behavior or for the default cache
              behavior in your distribution.
      TrustedSigners:
        allOf:
          - $ref: '#/definitions/TrustedSigners'
          - description: >-
              <p>A complex type that specifies the AWS accounts, if any, that
              you want to allow to create signed URLs for private content.</p>
              <p>If you want to require signed URLs in requests for objects in
              the target origin that match the <code>PathPattern</code> for this
              cache behavior, specify <code>true</code> for
              <code>Enabled</code>, and specify the applicable values for
              <code>Quantity</code> and <code>Items</code>. For more
              information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
              Private Content through CloudFront</a> in the <i>Amazon Amazon
              CloudFront Developer Guide</i>.</p> <p>If you don't want to
              require signed URLs in requests for objects that match
              <code>PathPattern</code>, specify <code>false</code> for
              <code>Enabled</code> and <code>0</code> for <code>Quantity</code>.
              Omit <code>Items</code>.</p> <p>To add, change, or remove one or
              more trusted signers, change <code>Enabled</code> to
              <code>true</code> (if it's currently <code>false</code>), change
              <code>Quantity</code> as applicable, and specify all of the
              trusted signers that you want to include in the updated
              distribution.</p>
      ViewerProtocolPolicy:
        allOf:
          - $ref: '#/definitions/ViewerProtocolPolicy'
          - description: >-
              <p>The protocol that viewers can use to access the files in the
              origin specified by <code>TargetOriginId</code> when a request
              matches the path pattern in <code>PathPattern</code>. You can
              specify the following options:</p> <ul> <li> <p>
              <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li>
              <li> <p> <code>redirect-to-https</code>: If a viewer submits an
              HTTP request, CloudFront returns an HTTP status code of 301 (Moved
              Permanently) to the viewer along with the HTTPS URL. The viewer
              then resubmits the request using the new URL. </p> </li> <li> <p>
              <code>https-only</code>: If a viewer sends an HTTP request,
              CloudFront returns an HTTP status code of 403 (Forbidden). </p>
              </li> </ul> <p>For more information about requiring the HTTPS
              protocol, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html">Using
              an HTTPS Connection to Access Your Objects</a> in the <i>Amazon
              CloudFront Developer Guide</i>.</p> <note> <p>The only way to
              guarantee that viewers retrieve an object that was fetched from
              the origin using HTTPS is never to use any other protocol to fetch
              the object. If you have recently changed from HTTP to HTTPS, we
              recommend that you clear your objects' cache because cached
              objects are protocol agnostic. That means that an edge location
              will return an object from the cache regardless of whether the
              current request protocol matches the protocol used previously. For
              more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p> </note>
    required:
      - PathPattern
      - TargetOriginId
      - ForwardedValues
      - TrustedSigners
      - ViewerProtocolPolicy
      - MinTTL
    type: object
  CacheBehaviorList:
    items:
      allOf:
        - $ref: '#/definitions/CacheBehavior'
        - xml:
            name: CacheBehavior
    type: array
  CacheBehaviors:
    description: >-
      A complex type that contains zero or more <code>CacheBehavior</code>
      elements. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/CacheBehaviorList'
          - description: >-
              Optional: A complex type that contains cache behaviors for this
              distribution. If <code>Quantity</code> is <code>0</code>, you can
              omit <code>Items</code>.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: 'The number of cache behaviors for this distribution. '
    required:
      - Quantity
    type: object
  CachedMethods:
    description: >-
      <p>A complex type that controls whether CloudFront caches the response to
      requests using the specified HTTP methods. There are two choices:</p> <ul>
      <li> <p>CloudFront caches responses to <code>GET</code> and
      <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses
      to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code>
      requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon
      S3 Origin, you may need to forward Access-Control-Request-Method,
      Access-Control-Request-Headers, and Origin headers for the responses to be
      cached correctly. </p>
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/MethodsList'
          - description: >-
              A complex type that contains the HTTP methods that you want
              CloudFront to cache responses to.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of HTTP methods for which you want CloudFront to cache
              responses. Valid values are <code>2</code> (for caching responses
              to <code>GET</code> and <code>HEAD</code> requests) and
              <code>3</code> (for caching responses to <code>GET</code>,
              <code>HEAD</code>, and <code>OPTIONS</code> requests).
    required:
      - Quantity
      - Items
    type: object
  CannotChangeImmutablePublicKeyFields: {}
  CertificateSource:
    enum:
      - cloudfront
      - iam
      - acm
    type: string
  CloudFrontOriginAccessIdentity:
    description: CloudFront origin access identity.
    properties:
      CloudFrontOriginAccessIdentityConfig:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentityConfig'
          - description: 'The current configuration information for the identity. '
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The ID for the origin access identity, for example,
              <code>E74FTE3AJFJ256A</code>. 
      S3CanonicalUserId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The Amazon S3 canonical user ID for the origin access identity,
              used when giving the origin access identity read permission to an
              object in Amazon S3. 
    required:
      - Id
      - S3CanonicalUserId
    type: object
  CloudFrontOriginAccessIdentityAlreadyExists: {}
  CloudFrontOriginAccessIdentityConfig:
    description: >-
      Origin access identity configuration. Send a <code>GET</code> request to
      the <code>/<i>CloudFront API version</i>/CloudFront/identity
      ID/config</code> resource. 
    properties:
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A unique number that ensures the request can't be replayed.</p>
              <p>If the <code>CallerReference</code> is new (no matter the
              content of the <code>CloudFrontOriginAccessIdentityConfig</code>
              object), a new origin access identity is created.</p> <p>If the
              <code>CallerReference</code> is a value already sent in a previous
              identity request, and the content of the
              <code>CloudFrontOriginAccessIdentityConfig</code> is identical to
              the original request (ignoring white space), the response includes
              the same information returned to the original request. </p> <p>If
              the <code>CallerReference</code> is a value you already sent in a
              previous request to create an identity, but the content of the
              <code>CloudFrontOriginAccessIdentityConfig</code> is different
              from the original request, CloudFront returns a
              <code>CloudFrontOriginAccessIdentityAlreadyExists</code> error.
              </p>
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Any comments you want to include about the origin access
              identity. 
    required:
      - CallerReference
      - Comment
    type: object
  CloudFrontOriginAccessIdentityInUse: {}
  CloudFrontOriginAccessIdentityList:
    description: >-
      Lists the origin access identities for CloudFront.Send a <code>GET</code>
      request to the <code>/<i>CloudFront API
      version</i>/origin-access-identity/cloudfront</code> resource. The
      response includes a <code>CloudFrontOriginAccessIdentityList</code>
      element with zero or more
      <code>CloudFrontOriginAccessIdentitySummary</code> child elements. By
      default, your entire list of origin access identities is returned in one
      single page. If the list is long, you can paginate it using the
      <code>MaxItems</code> and <code>Marker</code> parameters.
    properties:
      IsTruncated:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A flag that indicates whether more origin access identities remain
              to be listed. If your results were truncated, you can make a
              follow-up pagination request using the <code>Marker</code> request
              parameter to retrieve more items in the list.
      Items:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentitySummaryList'
          - description: >-
              A complex type that contains one
              <code>CloudFrontOriginAccessIdentitySummary</code> element for
              each origin access identity that was created by the current AWS
              account.
      Marker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Use this when paginating results to indicate where to begin in
              your list of origin access identities. The results include
              identities in the list that occur after the marker. To get the
              next page of results, set the <code>Marker</code> to the value of
              the <code>NextMarker</code> from the current page's response
              (which is also the ID of the last identity on that page). 
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The maximum number of origin access identities you want in the
              response body. 
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If <code>IsTruncated</code> is <code>true</code>, this element is
              present and contains the value you can use for the
              <code>Marker</code> request parameter to continue listing your
              origin access identities where they left off. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of CloudFront origin access identities that were
              created by the current AWS account. 
    required:
      - Marker
      - MaxItems
      - IsTruncated
      - Quantity
    type: object
  CloudFrontOriginAccessIdentitySummary:
    description: Summary of the information about a CloudFront origin access identity.
    properties:
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The comment for this origin access identity, as originally
              specified when created.
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The ID for the origin access identity. For example:
              <code>E74FTE3AJFJ256A</code>.
      S3CanonicalUserId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The Amazon S3 canonical user ID for the origin access identity,
              which you use when giving the origin access identity read
              permission to an object in Amazon S3.
    required:
      - Id
      - S3CanonicalUserId
      - Comment
    type: object
  CloudFrontOriginAccessIdentitySummaryList:
    items:
      allOf:
        - $ref: '#/definitions/CloudFrontOriginAccessIdentitySummary'
        - xml:
            name: CloudFrontOriginAccessIdentitySummary
    type: array
  ContentTypeProfile:
    description: 'A field-level encryption content type profile. '
    properties:
      ContentType:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The content type for a field-level encryption content type-profile
              mapping. 
      Format:
        allOf:
          - $ref: '#/definitions/Format'
          - description: >-
              The format for a field-level encryption content type-profile
              mapping. 
      ProfileId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The profile ID for a field-level encryption content type-profile
              mapping. 
    required:
      - Format
      - ContentType
    type: object
  ContentTypeProfileConfig:
    description: >-
      The configuration for a field-level encryption content type-profile
      mapping. 
    properties:
      ContentTypeProfiles:
        allOf:
          - $ref: '#/definitions/ContentTypeProfiles'
          - description: >-
              The configuration for a field-level encryption content
              type-profile. 
      ForwardWhenContentTypeIsUnknown:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              The setting in a field-level encryption content type-profile
              mapping that specifies what to do when an unknown content type is
              provided for the profile. If true, content is forwarded without
              being encrypted when the content type is unknown. If false (the
              default), an error is returned when the content type is unknown. 
    required:
      - ForwardWhenContentTypeIsUnknown
    type: object
  ContentTypeProfileList:
    items:
      allOf:
        - $ref: '#/definitions/ContentTypeProfile'
        - xml:
            name: ContentTypeProfile
    type: array
  ContentTypeProfiles:
    description: 'Field-level encryption content type-profile. '
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/ContentTypeProfileList'
          - description: 'Items in a field-level encryption content type-profile mapping. '
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of field-level encryption content type-profile
              mappings. 
    required:
      - Quantity
    type: object
  CookieNameList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: Name
    type: array
  CookieNames:
    description: >-
      A complex type that specifies whether you want CloudFront to forward
      cookies to the origin and, if so, which ones. For more information about
      forwarding cookies to the origin, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">How
      CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon
      CloudFront Developer Guide</i>.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/CookieNameList'
          - description: >-
              A complex type that contains one <code>Name</code> element for
              each cookie that you want CloudFront to forward to the origin for
              this cache behavior.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of different cookies that you want CloudFront to
              forward to the origin for this cache behavior.
    required:
      - Quantity
    type: object
  CookiePreference:
    description: >-
      A complex type that specifies whether you want CloudFront to forward
      cookies to the origin and, if so, which ones. For more information about
      forwarding cookies to the origin, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">How
      CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon
      CloudFront Developer Guide</i>.
    properties:
      Forward:
        allOf:
          - $ref: '#/definitions/ItemSelection'
          - description: >-
              <p>Specifies which cookies to forward to the origin for this cache
              behavior: all, none, or the list of cookies specified in the
              <code>WhitelistedNames</code> complex type.</p> <p>Amazon S3
              doesn't process cookies. When the cache behavior is forwarding
              requests to an Amazon S3 origin, specify none for the
              <code>Forward</code> element. </p>
      WhitelistedNames:
        allOf:
          - $ref: '#/definitions/CookieNames'
          - description: >-
              <p>Required if you specify <code>whitelist</code> for the value of
              <code>Forward:</code>. A complex type that specifies how many
              different cookies you want CloudFront to forward to the origin for
              this cache behavior and, if you want to forward selected cookies,
              the names of those cookies.</p> <p>If you specify <code>all</code>
              or none for the value of <code>Forward</code>, omit
              <code>WhitelistedNames</code>. If you change the value of
              <code>Forward</code> from <code>whitelist</code> to all or none
              and you don't delete the <code>WhitelistedNames</code> element and
              its child elements, CloudFront deletes them automatically.</p>
              <p>For the current limit on the number of cookie names that you
              can whitelist for each cache behavior, see <a
              href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront">Amazon
              CloudFront Limits</a> in the <i>AWS General Reference</i>.</p>
    required:
      - Forward
    type: object
  CreateCloudFrontOriginAccessIdentityRequest:
    description: The request to create a new origin access identity.
    properties:
      CloudFrontOriginAccessIdentityConfig:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentityConfig'
          - description: The current configuration information for the identity.
    required:
      - CloudFrontOriginAccessIdentityConfig
    title: CreateCloudFrontOriginAccessIdentityRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateCloudFrontOriginAccessIdentityResult:
    description: The returned result of the corresponding request.
    properties:
      CloudFrontOriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentity'
          - description: The origin access identity's information.
    type: object
  CreateDistributionRequest:
    description: The request to create a new distribution.
    properties:
      DistributionConfig:
        allOf:
          - $ref: '#/definitions/DistributionConfig'
          - description: The distribution's configuration information.
    required:
      - DistributionConfig
    title: CreateDistributionRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      Distribution:
        allOf:
          - $ref: '#/definitions/Distribution'
          - description: The distribution's information.
    type: object
  CreateDistributionWithTagsRequest:
    description: 'The request to create a new distribution with tags. '
    properties:
      DistributionConfigWithTags:
        allOf:
          - $ref: '#/definitions/DistributionConfigWithTags'
          - description: 'The distribution''s configuration information. '
    required:
      - DistributionConfigWithTags
    title: CreateDistributionWithTagsRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateDistributionWithTagsResult:
    description: 'The returned result of the corresponding request. '
    properties:
      Distribution:
        allOf:
          - $ref: '#/definitions/Distribution'
          - description: 'The distribution''s information. '
    type: object
  CreateFieldLevelEncryptionConfigRequest:
    properties:
      FieldLevelEncryptionConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionConfig'
          - description: The request to create a new field-level encryption configuration.
    required:
      - FieldLevelEncryptionConfig
    title: CreateFieldLevelEncryptionConfigRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateFieldLevelEncryptionConfigResult:
    properties:
      FieldLevelEncryption:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryption'
          - description: >-
              Returned when you create a new field-level encryption
              configuration.
    type: object
  CreateFieldLevelEncryptionProfileRequest:
    properties:
      FieldLevelEncryptionProfileConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileConfig'
          - description: The request to create a field-level encryption profile.
    required:
      - FieldLevelEncryptionProfileConfig
    title: CreateFieldLevelEncryptionProfileRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateFieldLevelEncryptionProfileResult:
    properties:
      FieldLevelEncryptionProfile:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfile'
          - description: Returned when you create a new field-level encryption profile.
    type: object
  CreateInvalidationRequest:
    description: The request to create an invalidation.
    properties:
      InvalidationBatch:
        allOf:
          - $ref: '#/definitions/InvalidationBatch'
          - description: The batch information for the invalidation.
    required:
      - InvalidationBatch
    title: CreateInvalidationRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateInvalidationResult:
    description: The returned result of the corresponding request.
    properties:
      Invalidation:
        allOf:
          - $ref: '#/definitions/Invalidation'
          - description: The invalidation's information.
    type: object
  CreatePublicKeyRequest:
    properties:
      PublicKeyConfig:
        allOf:
          - $ref: '#/definitions/PublicKeyConfig'
          - description: The request to add a public key to CloudFront.
    required:
      - PublicKeyConfig
    title: CreatePublicKeyRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreatePublicKeyResult:
    properties:
      PublicKey:
        allOf:
          - $ref: '#/definitions/PublicKey'
          - description: Returned when you add a public key.
    type: object
  CreateStreamingDistributionRequest:
    description: The request to create a new streaming distribution.
    properties:
      StreamingDistributionConfig:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfig'
          - description: The streaming distribution's configuration information.
    required:
      - StreamingDistributionConfig
    title: CreateStreamingDistributionRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateStreamingDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      StreamingDistribution:
        allOf:
          - $ref: '#/definitions/StreamingDistribution'
          - description: The streaming distribution's information.
    type: object
  CreateStreamingDistributionWithTagsRequest:
    description: The request to create a new streaming distribution with tags.
    properties:
      StreamingDistributionConfigWithTags:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfigWithTags'
          - description: ' The streaming distribution''s configuration information. '
    required:
      - StreamingDistributionConfigWithTags
    title: CreateStreamingDistributionWithTagsRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  CreateStreamingDistributionWithTagsResult:
    description: 'The returned result of the corresponding request. '
    properties:
      StreamingDistribution:
        allOf:
          - $ref: '#/definitions/StreamingDistribution'
          - description: 'The streaming distribution''s information. '
    type: object
  CustomErrorResponse:
    description: >-
      <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront
      replaces HTTP status codes in the 4xx and 5xx range with custom error
      messages before returning the response to the viewer. </p> </li> <li>
      <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx
      range.</p> </li> </ul> <p>For more information about custom error pages,
      see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
      Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    properties:
      ErrorCachingMinTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              <p>The minimum amount of time, in seconds, that you want
              CloudFront to cache the HTTP status code specified in
              <code>ErrorCode</code>. When this time period has elapsed,
              CloudFront queries your origin to see whether the problem that
              caused the error has been resolved and the requested object is now
              available.</p> <p>If you don't want to specify a value, include an
              empty element, <code>&lt;ErrorCachingMinTTL&gt;</code>, in the XML
              document.</p> <p>For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
              Error Responses</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p>
      ErrorCode:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The HTTP status code for which you want to specify a custom error
              page and/or a caching duration.
      ResponseCode:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The HTTP status code that you want CloudFront to return to the
              viewer along with the custom error page. There are a variety of
              reasons that you might want CloudFront to return a status code
              different from the status code that your origin returned to
              CloudFront, for example:</p> <ul> <li> <p>Some Internet devices
              (some firewalls and corporate proxies, for example) intercept HTTP
              4xx and 5xx and prevent the response from being returned to the
              viewer. If you substitute <code>200</code>, the response typically
              won't be intercepted.</p> </li> <li> <p>If you don't care about
              distinguishing among different client errors or server errors, you
              can specify <code>400</code> or <code>500</code> as the
              <code>ResponseCode</code> for all 4xx or 5xx errors.</p> </li>
              <li> <p>You might want to return a <code>200</code> status code
              (OK) and static website so your customers don't know that your
              website is down.</p> </li> </ul> <p>If you specify a value for
              <code>ResponseCode</code>, you must also specify a value for
              <code>ResponsePagePath</code>. If you don't want to specify a
              value, include an empty element,
              <code>&lt;ResponseCode&gt;</code>, in the XML document.</p>
      ResponsePagePath:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The path to the custom error page that you want CloudFront to
              return to a viewer when your origin returns the HTTP status code
              specified by <code>ErrorCode</code>, for example,
              <code>/4xx-errors/403-forbidden.html</code>. If you want to store
              your objects and your custom error pages in different locations,
              your distribution must include a cache behavior for which the
              following is true:</p> <ul> <li> <p>The value of
              <code>PathPattern</code> matches the path to your custom error
              messages. For example, suppose you saved custom error pages for
              4xx errors in an Amazon S3 bucket in a directory named
              <code>/4xx-errors</code>. Your distribution must include a cache
              behavior for which the path pattern routes requests for your
              custom error pages to that location, for example,
              <code>/4xx-errors/*</code>. </p> </li> <li> <p>The value of
              <code>TargetOriginId</code> specifies the value of the
              <code>ID</code> element for the origin that contains your custom
              error pages.</p> </li> </ul> <p>If you specify a value for
              <code>ResponsePagePath</code>, you must also specify a value for
              <code>ResponseCode</code>. If you don't want to specify a value,
              include an empty element, <code>&lt;ResponsePagePath&gt;</code>,
              in the XML document.</p> <p>We recommend that you store custom
              error pages in an Amazon S3 bucket. If you store custom error
              pages on an HTTP server and the server starts to return 5xx
              errors, CloudFront can't get the files that you want to return to
              viewers because the origin server is unavailable.</p>
    required:
      - ErrorCode
    type: object
  CustomErrorResponseList:
    items:
      allOf:
        - $ref: '#/definitions/CustomErrorResponse'
        - xml:
            name: CustomErrorResponse
    type: array
  CustomErrorResponses:
    description: >-
      <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront
      replaces HTTP status codes in the 4xx and 5xx range with custom error
      messages before returning the response to the viewer.</p> </li> <li>
      <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx
      range.</p> </li> </ul> <p>For more information about custom error pages,
      see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
      Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/CustomErrorResponseList'
          - description: >-
              A complex type that contains a <code>CustomErrorResponse</code>
              element for each HTTP status code for which you want to specify a
              custom error page and/or a caching duration. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of HTTP status codes for which you want to specify a
              custom error page and/or a caching duration. If
              <code>Quantity</code> is <code>0</code>, you can omit
              <code>Items</code>.
    required:
      - Quantity
    type: object
  CustomHeaders:
    description: 'A complex type that contains the list of Custom Headers for each origin. '
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/OriginCustomHeadersList'
          - description: ' <b>Optional</b>: A list that contains one <code>OriginCustomHeader</code> element for each custom header that you want CloudFront to forward to the origin. If Quantity is <code>0</code>, omit <code>Items</code>.'
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: 'The number of custom headers, if any, for this distribution.'
    required:
      - Quantity
    type: object
  CustomOriginConfig:
    description: A customer origin or an Amazon S3 bucket configured as a website endpoint.
    properties:
      HTTPPort:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The HTTP port the custom origin listens on.
      HTTPSPort:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The HTTPS port the custom origin listens on.
      OriginKeepaliveTimeout:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              <p>You can create a custom keep-alive timeout. All timeout units
              are in seconds. The default keep-alive timeout is 5 seconds, but
              you can configure custom timeout lengths using the CloudFront API.
              The minimum timeout length is 1 second; the maximum is 60
              seconds.</p> <p>If you need to increase the maximum time limit,
              contact the <a
              href="https://console.aws.amazon.com/support/home#/">AWS Support
              Center</a>.</p>
      OriginProtocolPolicy:
        allOf:
          - $ref: '#/definitions/OriginProtocolPolicy'
          - description: The origin protocol policy to apply to your origin.
      OriginReadTimeout:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              <p>You can create a custom origin read timeout. All timeout units
              are in seconds. The default origin read timeout is 30 seconds, but
              you can configure custom timeout lengths using the CloudFront API.
              The minimum timeout length is 4 seconds; the maximum is 60
              seconds.</p> <p>If you need to increase the maximum time limit,
              contact the <a
              href="https://console.aws.amazon.com/support/home#/">AWS Support
              Center</a>.</p>
      OriginSslProtocols:
        allOf:
          - $ref: '#/definitions/OriginSslProtocols'
          - description: >-
              The SSL/TLS protocols that you want CloudFront to use when
              communicating with your origin over HTTPS.
    required:
      - HTTPPort
      - HTTPSPort
      - OriginProtocolPolicy
    type: object
  DefaultCacheBehavior:
    description: >-
      A complex type that describes the default cache behavior if you don't
      specify a <code>CacheBehavior</code> element or if files don't match any
      of the values of <code>PathPattern</code> in <code>CacheBehavior</code>
      elements. You must create exactly one default cache behavior.
    properties:
      AllowedMethods:
        $ref: '#/definitions/AllowedMethods'
      Compress:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether you want CloudFront to automatically compress certain
              files for this cache behavior. If so, specify <code>true</code>;
              if not, specify <code>false</code>. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html">Serving
              Compressed Files</a> in the <i>Amazon CloudFront Developer
              Guide</i>.
      DefaultTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The default amount of time that you want objects to stay in
              CloudFront caches before CloudFront forwards another request to
              your origin to determine whether the object has been updated. The
              value that you specify applies only when your origin does not add
              HTTP headers such as <code>Cache-Control max-age</code>,
              <code>Cache-Control s-maxage</code>, and <code>Expires</code> to
              objects. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.
      FieldLevelEncryptionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value of <code>ID</code> for the field-level encryption
              configuration that you want CloudFront to use for encrypting
              specific fields of data for a cache behavior or for the default
              cache behavior in your distribution.
      ForwardedValues:
        allOf:
          - $ref: '#/definitions/ForwardedValues'
          - description: >-
              A complex type that specifies how CloudFront handles query strings
              and cookies.
      LambdaFunctionAssociations:
        allOf:
          - $ref: '#/definitions/LambdaFunctionAssociations'
          - description: >-
              A complex type that contains zero or more Lambda function
              associations for a cache behavior.
      MaxTTL:
        $ref: '#/definitions/long'
      MinTTL:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              <p>The minimum amount of time that you want objects to stay in
              CloudFront caches before CloudFront forwards another request to
              your origin to determine whether the object has been updated. For
              more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon Amazon CloudFront Developer
              Guide</i>.</p> <p>You must specify <code>0</code> for
              <code>MinTTL</code> if you configure CloudFront to forward all
              headers to your origin (under <code>Headers</code>, if you specify
              <code>1</code> for <code>Quantity</code> and <code>*</code> for
              <code>Name</code>).</p>
      SmoothStreaming:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether you want to distribute media files in the
              Microsoft Smooth Streaming format using the origin that is
              associated with this cache behavior. If so, specify
              <code>true</code>; if not, specify <code>false</code>. If you
              specify <code>true</code> for <code>SmoothStreaming</code>, you
              can still distribute other content using this cache behavior if
              the content matches the value of <code>PathPattern</code>. 
      TargetOriginId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value of <code>ID</code> for the origin that you want
              CloudFront to route requests to when a request matches the path
              pattern either for a cache behavior or for the default cache
              behavior in your distribution.
      TrustedSigners:
        allOf:
          - $ref: '#/definitions/TrustedSigners'
          - description: >-
              <p>A complex type that specifies the AWS accounts, if any, that
              you want to allow to create signed URLs for private content.</p>
              <p>If you want to require signed URLs in requests for objects in
              the target origin that match the <code>PathPattern</code> for this
              cache behavior, specify <code>true</code> for
              <code>Enabled</code>, and specify the applicable values for
              <code>Quantity</code> and <code>Items</code>. For more
              information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
              Private Content through CloudFront</a> in the <i>Amazon Amazon
              CloudFront Developer Guide</i>.</p> <p>If you don't want to
              require signed URLs in requests for objects that match
              <code>PathPattern</code>, specify <code>false</code> for
              <code>Enabled</code> and <code>0</code> for <code>Quantity</code>.
              Omit <code>Items</code>.</p> <p>To add, change, or remove one or
              more trusted signers, change <code>Enabled</code> to
              <code>true</code> (if it's currently <code>false</code>), change
              <code>Quantity</code> as applicable, and specify all of the
              trusted signers that you want to include in the updated
              distribution.</p>
      ViewerProtocolPolicy:
        allOf:
          - $ref: '#/definitions/ViewerProtocolPolicy'
          - description: >-
              <p>The protocol that viewers can use to access the files in the
              origin specified by <code>TargetOriginId</code> when a request
              matches the path pattern in <code>PathPattern</code>. You can
              specify the following options:</p> <ul> <li> <p>
              <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li>
              <li> <p> <code>redirect-to-https</code>: If a viewer submits an
              HTTP request, CloudFront returns an HTTP status code of 301 (Moved
              Permanently) to the viewer along with the HTTPS URL. The viewer
              then resubmits the request using the new URL.</p> </li> <li> <p>
              <code>https-only</code>: If a viewer sends an HTTP request,
              CloudFront returns an HTTP status code of 403 (Forbidden).</p>
              </li> </ul> <p>For more information about requiring the HTTPS
              protocol, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html">Using
              an HTTPS Connection to Access Your Objects</a> in the <i>Amazon
              CloudFront Developer Guide</i>.</p> <note> <p>The only way to
              guarantee that viewers retrieve an object that was fetched from
              the origin using HTTPS is never to use any other protocol to fetch
              the object. If you have recently changed from HTTP to HTTPS, we
              recommend that you clear your objects' cache because cached
              objects are protocol agnostic. That means that an edge location
              will return an object from the cache regardless of whether the
              current request protocol matches the protocol used previously. For
              more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Specifying
              How Long Objects and Errors Stay in a CloudFront Edge Cache
              (Expiration)</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p> </note>
    required:
      - TargetOriginId
      - ForwardedValues
      - TrustedSigners
      - ViewerProtocolPolicy
      - MinTTL
    type: object
  DeleteCloudFrontOriginAccessIdentityRequest:
    description: Deletes a origin access identity.
    properties: {}
    title: DeleteCloudFrontOriginAccessIdentityRequest
    type: object
  DeleteDistributionRequest:
    description: >-
      <p>This action deletes a web distribution. To delete a web distribution
      using the CloudFront API, perform the following steps.</p> <p> <b>To
      delete a web distribution using the CloudFront API:</b> </p> <ol> <li>
      <p>Disable the web distribution </p> </li> <li> <p>Submit a <code>GET
      Distribution Config</code> request to get the current configuration and
      the <code>Etag</code> header for the distribution.</p> </li> <li>
      <p>Update the XML document that was returned in the response to your
      <code>GET Distribution Config</code> request to change the value of
      <code>Enabled</code> to <code>false</code>.</p> </li> <li> <p>Submit a
      <code>PUT Distribution Config</code> request to update the configuration
      for your distribution. In the request body, include the XML document that
      you updated in Step 3. Set the value of the HTTP <code>If-Match</code>
      header to the value of the <code>ETag</code> header that CloudFront
      returned when you submitted the <code>GET Distribution Config</code>
      request in Step 2.</p> </li> <li> <p>Review the response to the <code>PUT
      Distribution Config</code> request to confirm that the distribution was
      successfully disabled.</p> </li> <li> <p>Submit a <code>GET
      Distribution</code> request to confirm that your changes have propagated.
      When propagation is complete, the value of <code>Status</code> is
      <code>Deployed</code>.</p> </li> <li> <p>Submit a <code>DELETE
      Distribution</code> request. Set the value of the HTTP
      <code>If-Match</code> header to the value of the <code>ETag</code> header
      that CloudFront returned when you submitted the <code>GET Distribution
      Config</code> request in Step 6.</p> </li> <li> <p>Review the response to
      your <code>DELETE Distribution</code> request to confirm that the
      distribution was successfully deleted.</p> </li> </ol> <p>For information
      about deleting a distribution using the CloudFront console, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html">Deleting
      a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    properties: {}
    title: DeleteDistributionRequest
    type: object
  DeleteFieldLevelEncryptionConfigRequest:
    properties: {}
    title: DeleteFieldLevelEncryptionConfigRequest
    type: object
  DeleteFieldLevelEncryptionProfileRequest:
    properties: {}
    title: DeleteFieldLevelEncryptionProfileRequest
    type: object
  DeletePublicKeyRequest:
    properties: {}
    title: DeletePublicKeyRequest
    type: object
  DeleteStreamingDistributionRequest:
    description: The request to delete a streaming distribution.
    properties: {}
    title: DeleteStreamingDistributionRequest
    type: object
  Distribution:
    description: The distribution's information.
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The ARN (Amazon Resource Name) for the distribution. For example:
              <code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>,
              where <code>123456789012</code> is your AWS account ID.
      ActiveTrustedSigners:
        allOf:
          - $ref: '#/definitions/ActiveTrustedSigners'
          - description: >-
              CloudFront automatically adds this element to the response only if
              you've set up the distribution to serve private content with
              signed URLs. The element lists the key pair IDs that CloudFront is
              aware of for each trusted signer. The <code>Signer</code> child
              element lists the AWS account number of the trusted signer (or an
              empty <code>Self</code> element if the signer is you). The
              <code>Signer</code> element also includes the IDs of any active
              key pairs associated with the trusted signer's AWS account. If no
              <code>KeyPairId</code> element appears for a <code>Signer</code>,
              that signer can't create working signed URLs.
      DistributionConfig:
        allOf:
          - $ref: '#/definitions/DistributionConfig'
          - description: >-
              The current configuration information for the distribution. Send a
              <code>GET</code> request to the <code>/<i>CloudFront API
              version</i>/distribution ID/config</code> resource.
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The domain name corresponding to the distribution, for example,
              <code>d111111abcdef8.cloudfront.net</code>. 
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The identifier for the distribution. For example:
              <code>EDFDVBD632BHDS5</code>. 
      InProgressInvalidationBatches:
        allOf:
          - $ref: '#/definitions/integer'
          - description: 'The number of invalidation batches currently in progress. '
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: 'The date and time the distribution was last modified. '
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              This response element indicates the current status of the
              distribution. When the status is <code>Deployed</code>, the
              distribution's information is fully propagated to all CloudFront
              edge locations. 
    required:
      - Id
      - ARN
      - Status
      - LastModifiedTime
      - InProgressInvalidationBatches
      - DomainName
      - ActiveTrustedSigners
      - DistributionConfig
    type: object
  DistributionAlreadyExists: {}
  DistributionConfig:
    description: A distribution configuration.
    properties:
      Aliases:
        allOf:
          - $ref: '#/definitions/Aliases'
          - description: >-
              A complex type that contains information about CNAMEs (alternate
              domain names), if any, for this distribution.
      CacheBehaviors:
        allOf:
          - $ref: '#/definitions/CacheBehaviors'
          - description: >-
              A complex type that contains zero or more
              <code>CacheBehavior</code> elements. 
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A unique value (for example, a date-time stamp) that ensures
              that the request can't be replayed.</p> <p>If the value of
              <code>CallerReference</code> is new (regardless of the content of
              the <code>DistributionConfig</code> object), CloudFront creates a
              new distribution.</p> <p>If <code>CallerReference</code> is a
              value you already sent in a previous request to create a
              distribution, and if the content of the
              <code>DistributionConfig</code> is identical to the original
              request (ignoring white space), CloudFront returns the same the
              response that it returned to the original request.</p> <p>If
              <code>CallerReference</code> is a value you already sent in a
              previous request to create a distribution but the content of the
              <code>DistributionConfig</code> is different from the original
              request, CloudFront returns a
              <code>DistributionAlreadyExists</code> error.</p>
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>Any comments you want to include about the distribution.</p>
              <p>If you don't want to specify a comment, include an empty
              <code>Comment</code> element.</p> <p>To delete an existing
              comment, update the distribution configuration and include an
              empty <code>Comment</code> element.</p> <p>To add or change a
              comment, update the distribution configuration and specify the new
              comment.</p>
      CustomErrorResponses:
        allOf:
          - $ref: '#/definitions/CustomErrorResponses'
          - description: >-
              <p>A complex type that controls the following:</p> <ul> <li>
              <p>Whether CloudFront replaces HTTP status codes in the 4xx and
              5xx range with custom error messages before returning the response
              to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP
              status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more
              information about custom error pages, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
              Error Responses</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p>
      DefaultCacheBehavior:
        allOf:
          - $ref: '#/definitions/DefaultCacheBehavior'
          - description: >-
              A complex type that describes the default cache behavior if you
              don't specify a <code>CacheBehavior</code> element or if files
              don't match any of the values of <code>PathPattern</code> in
              <code>CacheBehavior</code> elements. You must create exactly one
              default cache behavior.
      DefaultRootObject:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The object that you want CloudFront to request from your origin
              (for example, <code>index.html</code>) when a viewer requests the
              root URL for your distribution
              (<code>http://www.example.com</code>) instead of an object in your
              distribution
              (<code>http://www.example.com/product-description.html</code>).
              Specifying a default root object avoids exposing the contents of
              your distribution.</p> <p>Specify only the object name, for
              example, <code>index.html</code>. Don't add a <code>/</code>
              before the object name.</p> <p>If you don't want to specify a
              default root object when you create a distribution, include an
              empty <code>DefaultRootObject</code> element.</p> <p>To delete the
              default root object from an existing distribution, update the
              distribution configuration and include an empty
              <code>DefaultRootObject</code> element.</p> <p>To replace the
              default root object, update the distribution configuration and
              specify the new object.</p> <p>For more information about the
              default root object, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating
              a Default Root Object</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p>
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              From this field, you can enable or disable the selected
              distribution.
      HttpVersion:
        allOf:
          - $ref: '#/definitions/HttpVersion'
          - description: >-
              <p>(Optional) Specify the maximum HTTP version that you want
              viewers to use to communicate with CloudFront. The default value
              for new web distributions is http2. Viewers that don't support
              HTTP/2 automatically use an earlier HTTP version.</p> <p>For
              viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2
              or later, and must support Server Name Identification (SNI).</p>
              <p>In general, configuring CloudFront to communicate with viewers
              using HTTP/2 reduces latency. You can improve performance by
              optimizing for HTTP/2. For more information, do an Internet search
              for "http/2 optimization." </p>
      IsIPV6Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              <p>If you want CloudFront to respond to IPv6 DNS requests with an
              IPv6 address for your distribution, specify <code>true</code>. If
              you specify <code>false</code>, CloudFront responds to IPv6 DNS
              requests with the DNS response code <code>NOERROR</code> and with
              no IP addresses. This allows viewers to submit a second request,
              for an IPv4 address for your distribution. </p> <p>In general, you
              should enable IPv6 if you have users on IPv6 networks who want to
              access your content. However, if you're using signed URLs or
              signed cookies to restrict access to your content, and if you're
              using a custom policy that includes the <code>IpAddress</code>
              parameter to restrict the IP addresses that can access your
              content, don't enable IPv6. If you want to restrict access to some
              content by IP address and not restrict access to other content (or
              restrict access but not by IP address), you can create two
              distributions. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating
              a Signed URL Using a Custom Policy</a> in the <i>Amazon CloudFront
              Developer Guide</i>.</p> <p>If you're using an Amazon Route 53
              alias resource record set to route traffic to your CloudFront
              distribution, you need to create a second alias resource record
              set when both of the following are true:</p> <ul> <li> <p>You
              enable IPv6 for the distribution</p> </li> <li> <p>You're using
              alternate domain names in the URLs for your objects</p> </li>
              </ul> <p>For more information, see <a
              href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing
              Traffic to an Amazon CloudFront Web Distribution by Using Your
              Domain Name</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
              <p>If you created a CNAME resource record set, either with Amazon
              Route 53 or with another DNS service, you don't need to make any
              changes. A CNAME record will route traffic to your distribution
              regardless of the IP address format of the viewer request.</p>
      Logging:
        allOf:
          - $ref: '#/definitions/LoggingConfig'
          - description: >-
              <p>A complex type that controls whether access logs are written
              for the distribution.</p> <p>For more information about logging,
              see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access
              Logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
      Origins:
        allOf:
          - $ref: '#/definitions/Origins'
          - description: >-
              A complex type that contains information about origins for this
              distribution. 
      PriceClass:
        allOf:
          - $ref: '#/definitions/PriceClass'
          - description: >-
              <p>The price class that corresponds with the maximum price that
              you want to pay for CloudFront service. If you specify
              <code>PriceClass_All</code>, CloudFront responds to requests for
              your objects from all CloudFront edge locations.</p> <p>If you
              specify a price class other than <code>PriceClass_All</code>,
              CloudFront serves your objects from the CloudFront edge location
              that has the lowest latency among the edge locations in your price
              class. Viewers who are in or near regions that are excluded from
              your specified price class may encounter slower performance.</p>
              <p>For more information about price classes, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing
              the Price Class for a CloudFront Distribution</a> in the <i>Amazon
              CloudFront Developer Guide</i>. For information about CloudFront
              pricing, including how price classes (such as Price Class 100) map
              to CloudFront regions, see <a
              href="https://aws.amazon.com/cloudfront/pricing/">Amazon
              CloudFront Pricing</a>. For price class information, scroll down
              to see the table at the bottom of the page.</p>
      Restrictions:
        $ref: '#/definitions/Restrictions'
      ViewerCertificate:
        $ref: '#/definitions/ViewerCertificate'
      WebACLId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A unique identifier that specifies the AWS WAF web ACL, if any,
              to associate with this distribution.</p> <p>AWS WAF is a web
              application firewall that lets you monitor the HTTP and HTTPS
              requests that are forwarded to CloudFront, and lets you control
              access to your content. Based on conditions that you specify, such
              as the IP addresses that requests originate from or the values of
              query strings, CloudFront responds to requests either with the
              requested content or with an HTTP 403 status code (Forbidden). You
              can also configure CloudFront to return a custom error page when a
              request is blocked. For more information about AWS WAF, see the <a
              href="http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">AWS
              WAF Developer Guide</a>. </p>
    required:
      - CallerReference
      - Origins
      - DefaultCacheBehavior
      - Comment
      - Enabled
    type: object
  DistributionConfigWithTags:
    description: >-
      A distribution Configuration and a list of tags to be associated with the
      distribution.
    properties:
      DistributionConfig:
        allOf:
          - $ref: '#/definitions/DistributionConfig'
          - description: A distribution configuration.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A complex type that contains zero or more <code>Tag</code>
              elements.
    required:
      - DistributionConfig
      - Tags
    type: object
  DistributionList:
    description: A distribution list.
    properties:
      IsTruncated:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A flag that indicates whether more distributions remain to be
              listed. If your results were truncated, you can make a follow-up
              pagination request using the <code>Marker</code> request parameter
              to retrieve more distributions in the list.
      Items:
        allOf:
          - $ref: '#/definitions/DistributionSummaryList'
          - description: >-
              A complex type that contains one <code>DistributionSummary</code>
              element for each distribution that was created by the current AWS
              account.
      Marker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value you provided for the <code>Marker</code> request
              parameter.
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The value you provided for the <code>MaxItems</code> request
              parameter.
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If <code>IsTruncated</code> is <code>true</code>, this element is
              present and contains the value you can use for the
              <code>Marker</code> request parameter to continue listing your
              distributions where they left off. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of distributions that were created by the current AWS
              account. 
    required:
      - Marker
      - MaxItems
      - IsTruncated
      - Quantity
    type: object
  DistributionNotDisabled: {}
  DistributionSummary:
    description: A summary of the information about a CloudFront distribution.
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The ARN (Amazon Resource Name) for the distribution. For example:
              <code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>,
              where <code>123456789012</code> is your AWS account ID.
      Aliases:
        allOf:
          - $ref: '#/definitions/Aliases'
          - description: >-
              A complex type that contains information about CNAMEs (alternate
              domain names), if any, for this distribution.
      CacheBehaviors:
        allOf:
          - $ref: '#/definitions/CacheBehaviors'
          - description: >-
              A complex type that contains zero or more
              <code>CacheBehavior</code> elements.
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The comment originally specified when this distribution was
              created.
      CustomErrorResponses:
        allOf:
          - $ref: '#/definitions/CustomErrorResponses'
          - description: >-
              A complex type that contains zero or more
              <code>CustomErrorResponses</code> elements.
      DefaultCacheBehavior:
        allOf:
          - $ref: '#/definitions/DefaultCacheBehavior'
          - description: >-
              A complex type that describes the default cache behavior if you
              don't specify a <code>CacheBehavior</code> element or if files
              don't match any of the values of <code>PathPattern</code> in
              <code>CacheBehavior</code> elements. You must create exactly one
              default cache behavior.
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The domain name that corresponds to the distribution, for example,
              <code>d111111abcdef8.cloudfront.net</code>.
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether the distribution is enabled to accept user requests for
              content.
      HttpVersion:
        allOf:
          - $ref: '#/definitions/HttpVersion'
          - description: ' Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is <code>http2</code>. Viewers that don''t support <code>HTTP/2</code> will automatically use an earlier version.'
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The identifier for the distribution. For example:
              <code>EDFDVBD632BHDS5</code>.
      IsIPV6Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether CloudFront responds to IPv6 DNS requests with an IPv6
              address for your distribution.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The date and time the distribution was last modified.
      Origins:
        allOf:
          - $ref: '#/definitions/Origins'
          - description: >-
              A complex type that contains information about origins for this
              distribution.
      PriceClass:
        $ref: '#/definitions/PriceClass'
      Restrictions:
        $ref: '#/definitions/Restrictions'
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The current status of the distribution. When the status is
              <code>Deployed</code>, the distribution's information is
              propagated to all CloudFront edge locations.
      ViewerCertificate:
        $ref: '#/definitions/ViewerCertificate'
      WebACLId:
        allOf:
          - $ref: '#/definitions/string'
          - description: The Web ACL Id (if any) associated with the distribution.
    required:
      - Id
      - ARN
      - Status
      - LastModifiedTime
      - DomainName
      - Aliases
      - Origins
      - DefaultCacheBehavior
      - CacheBehaviors
      - CustomErrorResponses
      - Comment
      - PriceClass
      - Enabled
      - ViewerCertificate
      - Restrictions
      - WebACLId
      - HttpVersion
      - IsIPV6Enabled
    type: object
  DistributionSummaryList:
    items:
      allOf:
        - $ref: '#/definitions/DistributionSummary'
        - xml:
            name: DistributionSummary
    type: array
  EncryptionEntities:
    description: >-
      Complex data type for field-level encryption profiles that includes all of
      the encryption entities. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/EncryptionEntityList'
          - description: >-
              An array of field patterns in a field-level encryption content
              type-profile mapping. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              Number of field pattern items in a field-level encryption content
              type-profile mapping. 
    required:
      - Quantity
    type: object
  EncryptionEntity:
    description: >-
      Complex data type for field-level encryption profiles that includes the
      encryption key and field pattern specifications. 
    properties:
      FieldPatterns:
        allOf:
          - $ref: '#/definitions/FieldPatterns'
          - description: >-
              Field patterns in a field-level encryption content type profile
              specify the fields that you want to be encrypted. You can provide
              the full field name, or any beginning characters followed by a
              wildcard (*). You can't overlap field patterns. For example, you
              can't have both ABC* and AB*. Note that field patterns are
              case-sensitive. 
      ProviderId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The provider associated with the public key being used for
              encryption. This value must also be provided with the private key
              for applications to be able to decrypt data.
      PublicKeyId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The public key associated with a set of field-level encryption
              patterns, to be used when encrypting the fields that match the
              patterns. 
    required:
      - PublicKeyId
      - ProviderId
      - FieldPatterns
    type: object
  EncryptionEntityList:
    items:
      allOf:
        - $ref: '#/definitions/EncryptionEntity'
        - xml:
            name: EncryptionEntity
    type: array
  EventType:
    enum:
      - viewer-request
      - viewer-response
      - origin-request
      - origin-response
    type: string
  FieldLevelEncryption:
    description: >-
      A complex data type that includes the profile configurations and other
      options specified for field-level encryption. 
    properties:
      FieldLevelEncryptionConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionConfig'
          - description: >-
              A complex data type that includes the profile configurations
              specified for field-level encryption. 
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The configuration ID for a field-level encryption configuration
              which includes a set of profiles that specify certain selected
              data fields to be encrypted by specific public keys.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The last time the field-level encryption configuration was
              changed. 
    required:
      - Id
      - LastModifiedTime
      - FieldLevelEncryptionConfig
    type: object
  FieldLevelEncryptionConfig:
    description: >-
      A complex data type that includes the profile configurations specified for
      field-level encryption. 
    properties:
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: A unique number that ensures the request can't be replayed.
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: An optional comment about the configuration.
      ContentTypeProfileConfig:
        allOf:
          - $ref: '#/definitions/ContentTypeProfileConfig'
          - description: >-
              A complex data type that specifies when to forward content if a
              content type isn't recognized and profiles to use as by default in
              a request if a query argument doesn't specify a profile to use.
      QueryArgProfileConfig:
        allOf:
          - $ref: '#/definitions/QueryArgProfileConfig'
          - description: >-
              A complex data type that specifies when to forward content if a
              profile isn't found and the profile that can be provided as a
              query argument in a request.
    required:
      - CallerReference
    type: object
  FieldLevelEncryptionConfigAlreadyExists: {}
  FieldLevelEncryptionConfigInUse: {}
  FieldLevelEncryptionList:
    description: List of field-level encrpytion configurations.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionSummaryList'
          - description: An array of field-level encryption items.
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: 'The maximum number of elements you want in the response body. '
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If there are more elements to be listed, this element is present
              and contains the value that you can use for the
              <code>Marker</code> request parameter to continue listing your
              configurations where you left off.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of field-level encryption items.
    required:
      - MaxItems
      - Quantity
    type: object
  FieldLevelEncryptionProfile:
    description: A complex data type for field-level encryption profiles.
    properties:
      FieldLevelEncryptionProfileConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileConfig'
          - description: >-
              A complex data type that includes the profile name and the
              encryption entities for the field-level encryption profile.
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The ID for a field-level encryption profile configuration which
              includes a set of profiles that specify certain selected data
              fields to be encrypted by specific public keys.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The last time the field-level encryption profile was updated.
    required:
      - Id
      - LastModifiedTime
      - FieldLevelEncryptionProfileConfig
    type: object
  FieldLevelEncryptionProfileAlreadyExists: {}
  FieldLevelEncryptionProfileConfig:
    description: A complex data type of profiles for the field-level encryption.
    properties:
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: A unique number that ensures the request can't be replayed.
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: An optional comment for the field-level encryption profile.
      EncryptionEntities:
        allOf:
          - $ref: '#/definitions/EncryptionEntities'
          - description: >-
              A complex data type of encryption entities for the field-level
              encryption profile that include the public key ID, provider, and
              field patterns for specifying which fields to encrypt with this
              key.
      Name:
        allOf:
          - $ref: '#/definitions/string'
          - description: Profile name for the field-level encryption profile.
    required:
      - Name
      - CallerReference
      - EncryptionEntities
    type: object
  FieldLevelEncryptionProfileInUse: {}
  FieldLevelEncryptionProfileList:
    description: List of field-level encryption profiles.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileSummaryList'
          - description: The field-level encryption profile items.
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The maximum number of field-level encryption profiles you want in
              the response body. 
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If there are more elements to be listed, this element is present
              and contains the value that you can use for the
              <code>Marker</code> request parameter to continue listing your
              profiles where you left off.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of field-level encryption profiles.
    required:
      - MaxItems
      - Quantity
    type: object
  FieldLevelEncryptionProfileSizeExceeded: {}
  FieldLevelEncryptionProfileSummary:
    description: The field-level encryption profile summary.
    properties:
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An optional comment for the field-level encryption profile
              summary.
      EncryptionEntities:
        allOf:
          - $ref: '#/definitions/EncryptionEntities'
          - description: >-
              A complex data type of encryption entities for the field-level
              encryption profile that include the public key ID, provider, and
              field patterns for specifying which fields to encrypt with this
              key.
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: ID for the field-level encryption profile summary.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The time when the the field-level encryption profile summary was
              last updated.
      Name:
        allOf:
          - $ref: '#/definitions/string'
          - description: Name for the field-level encryption profile summary.
    required:
      - Id
      - LastModifiedTime
      - Name
      - EncryptionEntities
    type: object
  FieldLevelEncryptionProfileSummaryList:
    items:
      allOf:
        - $ref: '#/definitions/FieldLevelEncryptionProfileSummary'
        - xml:
            name: FieldLevelEncryptionProfileSummary
    type: array
  FieldLevelEncryptionSummary:
    description: A summary of a field-level encryption item.
    properties:
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: An optional comment about the field-level encryption item.
      ContentTypeProfileConfig:
        allOf:
          - $ref: '#/definitions/ContentTypeProfileConfig'
          - description: ' A summary of a content type-profile mapping. '
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: The unique ID of a field-level encryption item.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The last time that the summary of field-level encryption items was
              modified.
      QueryArgProfileConfig:
        allOf:
          - $ref: '#/definitions/QueryArgProfileConfig'
          - description: ' A summary of a query argument-profile mapping. '
    required:
      - Id
      - LastModifiedTime
    type: object
  FieldLevelEncryptionSummaryList:
    items:
      allOf:
        - $ref: '#/definitions/FieldLevelEncryptionSummary'
        - xml:
            name: FieldLevelEncryptionSummary
    type: array
  FieldPatternList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: FieldPattern
    type: array
  FieldPatterns:
    description: >-
      A complex data type that includes the field patterns to match for
      field-level encryption.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/FieldPatternList'
          - description: An array of the field-level encryption field patterns.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of field-level encryption field patterns.
    required:
      - Quantity
    type: object
  Format:
    enum:
      - URLEncoded
    type: string
  ForwardedValues:
    description: >-
      A complex type that specifies how CloudFront handles query strings and
      cookies.
    properties:
      Cookies:
        allOf:
          - $ref: '#/definitions/CookiePreference'
          - description: >-
              A complex type that specifies whether you want CloudFront to
              forward cookies to the origin and, if so, which ones. For more
              information about forwarding cookies to the origin, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">How
              CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon
              CloudFront Developer Guide</i>.
      Headers:
        allOf:
          - $ref: '#/definitions/Headers'
          - description: >-
              A complex type that specifies the <code>Headers</code>, if any,
              that you want CloudFront to base caching on for this cache
              behavior. 
      QueryString:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              <p>Indicates whether you want CloudFront to forward query strings
              to the origin that is associated with this cache behavior and
              cache based on the query string parameters. CloudFront behavior
              depends on the value of <code>QueryString</code> and on the values
              that you specify for <code>QueryStringCacheKeys</code>, if
              any:</p> <p>If you specify true for <code>QueryString</code> and
              you don't specify any values for
              <code>QueryStringCacheKeys</code>, CloudFront forwards all query
              string parameters to the origin and caches based on all query
              string parameters. Depending on how many query string parameters
              and values you have, this can adversely affect performance because
              CloudFront must forward more requests to the origin.</p> <p>If you
              specify true for <code>QueryString</code> and you specify one or
              more values for <code>QueryStringCacheKeys</code>, CloudFront
              forwards all query string parameters to the origin, but it only
              caches based on the query string parameters that you specify.</p>
              <p>If you specify false for <code>QueryString</code>, CloudFront
              doesn't forward any query string parameters to the origin, and
              doesn't cache based on query string parameters.</p> <p>For more
              information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html">Configuring
              CloudFront to Cache Based on Query String Parameters</a> in the
              <i>Amazon CloudFront Developer Guide</i>.</p>
      QueryStringCacheKeys:
        allOf:
          - $ref: '#/definitions/QueryStringCacheKeys'
          - description: >-
              A complex type that contains information about the query string
              parameters that you want CloudFront to use for caching for this
              cache behavior.
    required:
      - QueryString
      - Cookies
    type: object
  GeoRestriction:
    description: >-
      A complex type that controls the countries in which your content is
      distributed. CloudFront determines the location of your users using
      <code>MaxMind</code> GeoIP databases. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/LocationList'
          - description: >-
              <p> A complex type that contains a <code>Location</code> element
              for each country in which you want CloudFront either to distribute
              your content (<code>whitelist</code>) or not distribute your
              content (<code>blacklist</code>).</p> <p>The <code>Location</code>
              element is a two-letter, uppercase country code for a country that
              you want to include in your <code>blacklist</code> or
              <code>whitelist</code>. Include one <code>Location</code> element
              for each country.</p> <p>CloudFront and <code>MaxMind</code> both
              use <code>ISO 3166</code> country codes. For the current list of
              countries and the corresponding codes, see <code>ISO
              3166-1-alpha-2</code> code on the <i>International Organization
              for Standardization</i> website. You can also refer to the country
              list on the CloudFront console, which includes both country names
              and codes.</p>
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              When geo restriction is <code>enabled</code>, this is the number
              of countries in your <code>whitelist</code> or
              <code>blacklist</code>. Otherwise, when it is not enabled,
              <code>Quantity</code> is <code>0</code>, and you can omit
              <code>Items</code>.
      RestrictionType:
        allOf:
          - $ref: '#/definitions/GeoRestrictionType'
          - description: >-
              <p>The method that you want to use to restrict distribution of
              your content by country:</p> <ul> <li> <p> <code>none</code>: No
              geo restriction is enabled, meaning access to content is not
              restricted by client geo location.</p> </li> <li> <p>
              <code>blacklist</code>: The <code>Location</code> elements specify
              the countries in which you don't want CloudFront to distribute
              your content.</p> </li> <li> <p> <code>whitelist</code>: The
              <code>Location</code> elements specify the countries in which you
              want CloudFront to distribute your content.</p> </li> </ul>
    required:
      - RestrictionType
      - Quantity
    type: object
  GeoRestrictionType:
    enum:
      - blacklist
      - whitelist
      - none
    type: string
  GetCloudFrontOriginAccessIdentityConfigRequest:
    description: >-
      The origin access identity's configuration information. For more
      information, see <a>CloudFrontOriginAccessIdentityConfigComplexType</a>.
    properties: {}
    title: GetCloudFrontOriginAccessIdentityConfigRequest
    type: object
  GetCloudFrontOriginAccessIdentityConfigResult:
    description: The returned result of the corresponding request.
    properties:
      CloudFrontOriginAccessIdentityConfig:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentityConfig'
          - description: 'The origin access identity''s configuration information. '
    type: object
  GetCloudFrontOriginAccessIdentityRequest:
    description: The request to get an origin access identity's information.
    properties: {}
    title: GetCloudFrontOriginAccessIdentityRequest
    type: object
  GetCloudFrontOriginAccessIdentityResult:
    description: The returned result of the corresponding request.
    properties:
      CloudFrontOriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentity'
          - description: The origin access identity's information.
    type: object
  GetDistributionConfigRequest:
    description: The request to get a distribution configuration.
    properties: {}
    title: GetDistributionConfigRequest
    type: object
  GetDistributionConfigResult:
    description: The returned result of the corresponding request.
    properties:
      DistributionConfig:
        allOf:
          - $ref: '#/definitions/DistributionConfig'
          - description: The distribution's configuration information.
    type: object
  GetDistributionRequest:
    description: The request to get a distribution's information.
    properties: {}
    title: GetDistributionRequest
    type: object
  GetDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      Distribution:
        allOf:
          - $ref: '#/definitions/Distribution'
          - description: The distribution's information.
    type: object
  GetFieldLevelEncryptionConfigRequest:
    properties: {}
    title: GetFieldLevelEncryptionConfigRequest
    type: object
  GetFieldLevelEncryptionConfigResult:
    properties:
      FieldLevelEncryptionConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionConfig'
          - description: Return the field-level encryption configuration information.
    type: object
  GetFieldLevelEncryptionProfileConfigRequest:
    properties: {}
    title: GetFieldLevelEncryptionProfileConfigRequest
    type: object
  GetFieldLevelEncryptionProfileConfigResult:
    properties:
      FieldLevelEncryptionProfileConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileConfig'
          - description: >-
              Return the field-level encryption profile configuration
              information.
    type: object
  GetFieldLevelEncryptionProfileRequest:
    properties: {}
    title: GetFieldLevelEncryptionProfileRequest
    type: object
  GetFieldLevelEncryptionProfileResult:
    properties:
      FieldLevelEncryptionProfile:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfile'
          - description: Return the field-level encryption profile information.
    type: object
  GetFieldLevelEncryptionRequest:
    properties: {}
    title: GetFieldLevelEncryptionRequest
    type: object
  GetFieldLevelEncryptionResult:
    properties:
      FieldLevelEncryption:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryption'
          - description: Return the field-level encryption configuration information.
    type: object
  GetInvalidationRequest:
    description: 'The request to get an invalidation''s information. '
    properties: {}
    title: GetInvalidationRequest
    type: object
  GetInvalidationResult:
    description: The returned result of the corresponding request.
    properties:
      Invalidation:
        allOf:
          - $ref: '#/definitions/Invalidation'
          - description: >-
              The invalidation's information. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/InvalidationDatatype.html">Invalidation
              Complex Type</a>. 
    type: object
  GetPublicKeyConfigRequest:
    properties: {}
    title: GetPublicKeyConfigRequest
    type: object
  GetPublicKeyConfigResult:
    properties:
      PublicKeyConfig:
        allOf:
          - $ref: '#/definitions/PublicKeyConfig'
          - description: Return the result for the public key configuration.
    type: object
  GetPublicKeyRequest:
    properties: {}
    title: GetPublicKeyRequest
    type: object
  GetPublicKeyResult:
    properties:
      PublicKey:
        allOf:
          - $ref: '#/definitions/PublicKey'
          - description: Return the public key.
    type: object
  GetStreamingDistributionConfigRequest:
    description: To request to get a streaming distribution configuration.
    properties: {}
    title: GetStreamingDistributionConfigRequest
    type: object
  GetStreamingDistributionConfigResult:
    description: The returned result of the corresponding request.
    properties:
      StreamingDistributionConfig:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfig'
          - description: The streaming distribution's configuration information.
    type: object
  GetStreamingDistributionRequest:
    description: The request to get a streaming distribution's information.
    properties: {}
    title: GetStreamingDistributionRequest
    type: object
  GetStreamingDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      StreamingDistribution:
        allOf:
          - $ref: '#/definitions/StreamingDistribution'
          - description: The streaming distribution's information.
    type: object
  HeaderList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: Name
    type: array
  Headers:
    description: >-
      <p>A complex type that specifies the request headers, if any, that you
      want CloudFront to base caching on for this cache behavior. </p> <p>For
      the headers that you specify, CloudFront caches separate versions of a
      specified object based on the header values in viewer requests. For
      example, suppose viewer requests for <code>logo.jpg</code> contain a
      custom <code>product</code> header that has a value of either
      <code>acme</code> or <code>apex</code>, and you configure CloudFront to
      cache your content based on values in the <code>product</code> header.
      CloudFront forwards the <code>product</code> header to the origin and
      caches the response from the origin once for each header value. For more
      information about caching based on header values, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html">How
      CloudFront Forwards and Caches Headers</a> in the <i>Amazon CloudFront
      Developer Guide</i>.</p>
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/HeaderList'
          - description: >-
              A list that contains one <code>Name</code> element for each header
              that you want CloudFront to use for caching in this cache
              behavior. If <code>Quantity</code> is <code>0</code>, omit
              <code>Items</code>.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              <p>The number of different headers that you want CloudFront to
              base caching on for this cache behavior. You can configure each
              cache behavior in a web distribution to do one of the
              following:</p> <ul> <li> <p> <b>Forward all headers to your
              origin</b>: Specify <code>1</code> for <code>Quantity</code> and
              <code>*</code> for <code>Name</code>.</p> <important>
              <p>CloudFront doesn't cache the objects that are associated with
              this cache behavior. Instead, CloudFront sends every request to
              the origin. </p> </important> </li> <li> <p> <b>Forward a
              whitelist of headers you specify</b>: Specify the number of
              headers that you want CloudFront to base caching on. Then specify
              the header names in <code>Name</code> elements. CloudFront caches
              your objects based on the values in the specified headers.</p>
              </li> <li> <p> <b>Forward only the default headers</b>: Specify
              <code>0</code> for <code>Quantity</code> and omit
              <code>Items</code>. In this configuration, CloudFront doesn't
              cache based on the values in the request headers.</p> </li> </ul>
              <p>Regardless of which option you choose, CloudFront forwards
              headers to your origin based on whether the origin is an S3 bucket
              or a custom origin. See the following documentation:</p> <ul> <li>
              <p> <b>S3 bucket</b>: See <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers">HTTP
              Request Headers That CloudFront Removes or Updates</a> </p> </li>
              <li> <p> <b>Custom origin</b>: See <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior">HTTP
              Request Headers and CloudFront Behavior</a> </p> </li> </ul>
    required:
      - Quantity
    type: object
  HttpVersion:
    enum:
      - http1.1
      - http2
    type: string
  IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior: {}
  IllegalUpdate: {}
  InconsistentQuantities: {}
  InvalidArgument: {}
  InvalidDefaultRootObject: {}
  InvalidErrorCode: {}
  InvalidForwardCookies: {}
  InvalidGeoRestrictionParameter: {}
  InvalidHeadersForS3Origin: {}
  InvalidIfMatchVersion: {}
  InvalidLambdaFunctionAssociation: {}
  InvalidLocationCode: {}
  InvalidMinimumProtocolVersion: {}
  InvalidOrigin: {}
  InvalidOriginAccessIdentity: {}
  InvalidOriginKeepaliveTimeout: {}
  InvalidOriginReadTimeout: {}
  InvalidProtocolSettings: {}
  InvalidQueryStringParameters: {}
  InvalidRelativePath: {}
  InvalidRequiredProtocol: {}
  InvalidResponseCode: {}
  InvalidTTLOrder: {}
  InvalidTagging: {}
  InvalidViewerCertificate: {}
  InvalidWebACLId: {}
  Invalidation:
    description: 'An invalidation. '
    properties:
      CreateTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: 'The date and time the invalidation request was first made. '
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The identifier for the invalidation request. For example:
              <code>IDFDVBD632BHDS5</code>.
      InvalidationBatch:
        allOf:
          - $ref: '#/definitions/InvalidationBatch'
          - description: 'The current invalidation information for the batch request. '
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The status of the invalidation request. When the invalidation
              batch is finished, the status is <code>Completed</code>.
    required:
      - Id
      - Status
      - CreateTime
      - InvalidationBatch
    type: object
  InvalidationBatch:
    description: An invalidation batch.
    properties:
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A value that you specify to uniquely identify an invalidation
              request. CloudFront uses the value to prevent you from
              accidentally resubmitting an identical request. Whenever you
              create a new invalidation request, you must specify a new value
              for <code>CallerReference</code> and change other values in the
              request as applicable. One way to ensure that the value of
              <code>CallerReference</code> is unique is to use a
              <code>timestamp</code>, for example,
              <code>20120301090000</code>.</p> <p>If you make a second
              invalidation request with the same value for
              <code>CallerReference</code>, and if the rest of the request is
              the same, CloudFront doesn't create a new invalidation request.
              Instead, CloudFront returns information about the invalidation
              request that you previously created with the same
              <code>CallerReference</code>.</p> <p>If
              <code>CallerReference</code> is a value you already sent in a
              previous invalidation batch request but the content of any
              <code>Path</code> is different from the original request,
              CloudFront returns an <code>InvalidationBatchAlreadyExists</code>
              error.</p>
      Paths:
        allOf:
          - $ref: '#/definitions/Paths'
          - description: >-
              A complex type that contains information about the objects that
              you want to invalidate. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying
              the Objects to Invalidate</a> in the <i>Amazon CloudFront
              Developer Guide</i>. 
    required:
      - Paths
      - CallerReference
    type: object
  InvalidationList:
    description: >-
      The <code>InvalidationList</code> complex type describes the list of
      invalidation objects. For more information about invalidation, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html">Invalidating
      Objects (Web Distributions Only)</a> in the <i>Amazon CloudFront Developer
      Guide</i>.
    properties:
      IsTruncated:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A flag that indicates whether more invalidation batch requests
              remain to be listed. If your results were truncated, you can make
              a follow-up pagination request using the <code>Marker</code>
              request parameter to retrieve more invalidation batches in the
              list.
      Items:
        allOf:
          - $ref: '#/definitions/InvalidationSummaryList'
          - description: >-
              A complex type that contains one <code>InvalidationSummary</code>
              element for each invalidation batch created by the current AWS
              account.
      Marker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value that you provided for the <code>Marker</code> request
              parameter.
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The value that you provided for the <code>MaxItems</code> request
              parameter.
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If <code>IsTruncated</code> is <code>true</code>, this element is
              present and contains the value that you can use for the
              <code>Marker</code> request parameter to continue listing your
              invalidation batches where they left off.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of invalidation batches that were created by the
              current AWS account. 
    required:
      - Marker
      - MaxItems
      - IsTruncated
      - Quantity
    type: object
  InvalidationSummary:
    description: A summary of an invalidation request.
    properties:
      CreateTime:
        $ref: '#/definitions/timestamp'
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: The unique ID for an invalidation request.
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: The status of an invalidation request.
    required:
      - Id
      - CreateTime
      - Status
    type: object
  InvalidationSummaryList:
    items:
      allOf:
        - $ref: '#/definitions/InvalidationSummary'
        - xml:
            name: InvalidationSummary
    type: array
  ItemSelection:
    enum:
      - none
      - whitelist
      - all
    type: string
  KeyPairIdList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: KeyPairId
    type: array
  KeyPairIds:
    description: >-
      <p>A complex type that lists the active CloudFront key pairs, if any, that
      are associated with <code>AwsAccountNumber</code>. </p> <p>For more
      information, see <a>ActiveTrustedSigners</a>.</p>
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/KeyPairIdList'
          - description: >-
              <p>A complex type that lists the active CloudFront key pairs, if
              any, that are associated with <code>AwsAccountNumber</code>.</p>
              <p>For more information, see <a>ActiveTrustedSigners</a>.</p>
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              <p>The number of active CloudFront key pairs for
              <code>AwsAccountNumber</code>.</p> <p>For more information, see
              <a>ActiveTrustedSigners</a>.</p>
    required:
      - Quantity
    type: object
  LambdaFunctionARN:
    type: string
  LambdaFunctionAssociation:
    description: A complex type that contains a Lambda function association.
    properties:
      EventType:
        allOf:
          - $ref: '#/definitions/EventType'
          - description: >-
              <p>Specifies the event type that triggers a Lambda function
              invocation. You can specify the following values:</p> <ul> <li>
              <p> <code>viewer-request</code>: The function executes when
              CloudFront receives a request from a viewer and before it checks
              to see whether the requested object is in the edge cache. </p>
              </li> <li> <p> <code>origin-request</code>: The function executes
              only when CloudFront forwards a request to your origin. When the
              requested object is in the edge cache, the function doesn't
              execute.</p> </li> <li> <p> <code>origin-response</code>: The
              function executes after CloudFront receives a response from the
              origin and before it caches the object in the response. When the
              requested object is in the edge cache, the function doesn't
              execute.</p> <p>If the origin returns an HTTP status code other
              than HTTP 200 (OK), the function doesn't execute.</p> </li> <li>
              <p> <code>viewer-response</code>: The function executes before
              CloudFront returns the requested object to the viewer. The
              function executes regardless of whether the object was already in
              the edge cache.</p> <p>If the origin returns an HTTP status code
              other than HTTP 200 (OK), the function doesn't execute.</p> </li>
              </ul>
      IncludeBody:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A flag that allows a Lambda function to have read access to the
              body content. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html">Accessing
              the Request Body by Choosing the Include Body Option</a> in the
              Amazon CloudFront Developer Guide.
      LambdaFunctionARN:
        allOf:
          - $ref: '#/definitions/LambdaFunctionARN'
          - description: >-
              The ARN of the Lambda function. You must specify the ARN of a
              function version; you can't specify a Lambda alias or $LATEST.
    required:
      - LambdaFunctionARN
      - EventType
    type: object
  LambdaFunctionAssociationList:
    items:
      allOf:
        - $ref: '#/definitions/LambdaFunctionAssociation'
        - xml:
            name: LambdaFunctionAssociation
    type: array
  LambdaFunctionAssociations:
    description: >-
      <p>A complex type that specifies a list of Lambda functions associations
      for a cache behavior.</p> <p>If you want to invoke one or more Lambda
      functions triggered by requests that match the <code>PathPattern</code> of
      the cache behavior, specify the applicable values for
      <code>Quantity</code> and <code>Items</code>. Note that there can be up to
      4 <code>LambdaFunctionAssociation</code> items in this list (one for each
      possible value of <code>EventType</code>) and each <code>EventType</code>
      can be associated with the Lambda function only once.</p> <p>If you don't
      want to invoke any Lambda functions for the requests that match
      <code>PathPattern</code>, specify <code>0</code> for <code>Quantity</code>
      and omit <code>Items</code>. </p>
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/LambdaFunctionAssociationList'
          - description: ' <b>Optional</b>: A complex type that contains <code>LambdaFunctionAssociation</code> items for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.'
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of Lambda function associations for this cache
              behavior.
    required:
      - Quantity
    type: object
  ListCloudFrontOriginAccessIdentitiesRequest:
    description: 'The request to list origin access identities. '
    properties: {}
    title: ListCloudFrontOriginAccessIdentitiesRequest
    type: object
  ListCloudFrontOriginAccessIdentitiesResult:
    description: 'The returned result of the corresponding request. '
    properties:
      CloudFrontOriginAccessIdentityList:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentityList'
          - description: 'The <code>CloudFrontOriginAccessIdentityList</code> type. '
    type: object
  ListDistributionsByWebACLIdRequest:
    description: >-
      The request to list distributions that are associated with a specified AWS
      WAF web ACL. 
    properties: {}
    title: ListDistributionsByWebACLIdRequest
    type: object
  ListDistributionsByWebACLIdResult:
    description: >-
      The response to a request to list the distributions that are associated
      with a specified AWS WAF web ACL. 
    properties:
      DistributionList:
        allOf:
          - $ref: '#/definitions/DistributionList'
          - description: 'The <code>DistributionList</code> type. '
    type: object
  ListDistributionsRequest:
    description: 'The request to list your distributions. '
    properties: {}
    title: ListDistributionsRequest
    type: object
  ListDistributionsResult:
    description: 'The returned result of the corresponding request. '
    properties:
      DistributionList:
        allOf:
          - $ref: '#/definitions/DistributionList'
          - description: 'The <code>DistributionList</code> type. '
    type: object
  ListFieldLevelEncryptionConfigsRequest:
    properties: {}
    title: ListFieldLevelEncryptionConfigsRequest
    type: object
  ListFieldLevelEncryptionConfigsResult:
    properties:
      FieldLevelEncryptionList:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionList'
          - description: >-
              Returns a list of all field-level encryption configurations that
              have been created in CloudFront for this account.
    type: object
  ListFieldLevelEncryptionProfilesRequest:
    properties: {}
    title: ListFieldLevelEncryptionProfilesRequest
    type: object
  ListFieldLevelEncryptionProfilesResult:
    properties:
      FieldLevelEncryptionProfileList:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileList'
          - description: >-
              Returns a list of the field-level encryption profiles that have
              been created in CloudFront for this account.
    type: object
  ListInvalidationsRequest:
    description: 'The request to list invalidations. '
    properties: {}
    title: ListInvalidationsRequest
    type: object
  ListInvalidationsResult:
    description: 'The returned result of the corresponding request. '
    properties:
      InvalidationList:
        allOf:
          - $ref: '#/definitions/InvalidationList'
          - description: 'Information about invalidation batches. '
    type: object
  ListPublicKeysRequest:
    properties: {}
    title: ListPublicKeysRequest
    type: object
  ListPublicKeysResult:
    properties:
      PublicKeyList:
        allOf:
          - $ref: '#/definitions/PublicKeyList'
          - description: >-
              Returns a list of all public keys that have been added to
              CloudFront for this account.
    type: object
  ListStreamingDistributionsRequest:
    description: 'The request to list your streaming distributions. '
    properties: {}
    title: ListStreamingDistributionsRequest
    type: object
  ListStreamingDistributionsResult:
    description: 'The returned result of the corresponding request. '
    properties:
      StreamingDistributionList:
        allOf:
          - $ref: '#/definitions/StreamingDistributionList'
          - description: 'The <code>StreamingDistributionList</code> type. '
    type: object
  ListTagsForResourceRequest:
    description: ' The request to list tags for a CloudFront resource.'
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResult:
    description: ' The returned result of the corresponding request.'
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    required:
      - Tags
    type: object
  LocationList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: Location
    type: array
  LoggingConfig:
    description: >-
      A complex type that controls whether access logs are written for the
      distribution.
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The Amazon S3 bucket to store the access logs in, for example,
              <code>myawslogbucket.s3.amazonaws.com</code>.
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Specifies whether you want CloudFront to save access logs to an
              Amazon S3 bucket. If you don't want to enable logging when you
              create a distribution or if you want to disable logging for an
              existing distribution, specify <code>false</code> for
              <code>Enabled</code>, and specify empty <code>Bucket</code> and
              <code>Prefix</code> elements. If you specify <code>false</code>
              for <code>Enabled</code> but you specify values for
              <code>Bucket</code>, <code>prefix</code>, and
              <code>IncludeCookies</code>, the values are automatically deleted.
      IncludeCookies:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Specifies whether you want CloudFront to include cookies in access
              logs, specify <code>true</code> for <code>IncludeCookies</code>.
              If you choose to include cookies in logs, CloudFront logs all
              cookies regardless of how you configure the cache behaviors for
              this distribution. If you don't want to include cookies when you
              create a distribution or if you want to disable include cookies
              for an existing distribution, specify <code>false</code> for
              <code>IncludeCookies</code>.
      Prefix:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An optional string that you want CloudFront to prefix to the
              access log <code>filenames</code> for this distribution, for
              example, <code>myprefix/</code>. If you want to enable logging,
              but you don't want to specify a prefix, you still must include an
              empty <code>Prefix</code> element in the <code>Logging</code>
              element.
    required:
      - Enabled
      - IncludeCookies
      - Bucket
      - Prefix
    type: object
  Method:
    enum:
      - GET
      - HEAD
      - POST
      - PUT
      - PATCH
      - OPTIONS
      - DELETE
    type: string
  MethodsList:
    items:
      allOf:
        - $ref: '#/definitions/Method'
        - xml:
            name: Method
    type: array
  MinimumProtocolVersion:
    enum:
      - SSLv3
      - TLSv1
      - TLSv1_2016
      - TLSv1.1_2016
      - TLSv1.2_2018
    type: string
  MissingBody: {}
  NoSuchCloudFrontOriginAccessIdentity: {}
  NoSuchDistribution: {}
  NoSuchFieldLevelEncryptionConfig: {}
  NoSuchFieldLevelEncryptionProfile: {}
  NoSuchInvalidation: {}
  NoSuchOrigin: {}
  NoSuchPublicKey: {}
  NoSuchResource: {}
  NoSuchStreamingDistribution: {}
  Origin:
    description: >-
      <p>A complex type that describes the Amazon S3 bucket or the HTTP server
      (for example, a web server) from which CloudFront gets your files. You
      must create at least one origin.</p> <p>For the current limit on the
      number of origins that you can create for a distribution, see <a
      href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront">Amazon
      CloudFront Limits</a> in the <i>AWS General Reference</i>.</p>
    properties:
      CustomHeaders:
        allOf:
          - $ref: '#/definitions/CustomHeaders'
          - description: >-
              A complex type that contains names and values for the custom
              headers that you want.
      CustomOriginConfig:
        allOf:
          - $ref: '#/definitions/CustomOriginConfig'
          - description: >-
              A complex type that contains information about a custom origin. If
              the origin is an Amazon S3 bucket, use the
              <code>S3OriginConfig</code> element instead.
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p> <b>Amazon S3 origins</b>: The DNS name of the Amazon S3 bucket
              from which you want CloudFront to get objects for this origin, for
              example, <code>myawsbucket.s3.amazonaws.com</code>. If you set up
              your bucket to be configured as a website endpoint, enter the
              Amazon S3 static website hosting endpoint for the bucket.</p>
              <p>Constraints for Amazon S3 origins: </p> <ul> <li> <p>If you
              configured Amazon S3 Transfer Acceleration for your bucket, don't
              specify the <code>s3-accelerate</code> endpoint for
              <code>DomainName</code>.</p> </li> <li> <p>The bucket name must be
              between 3 and 63 characters long (inclusive).</p> </li> <li>
              <p>The bucket name must contain only lowercase characters,
              numbers, periods, underscores, and dashes.</p> </li> <li> <p>The
              bucket name must not contain adjacent periods.</p> </li> </ul> <p>
              <b>Custom Origins</b>: The DNS domain name for the HTTP server
              from which you want CloudFront to get objects for this origin, for
              example, <code>www.example.com</code>. </p> <p>Constraints for
              custom origins:</p> <ul> <li> <p> <code>DomainName</code> must be
              a valid DNS name that contains only a-z, A-Z, 0-9, dot (.), hyphen
              (-), or underscore (_) characters.</p> </li> <li> <p>The name
              cannot exceed 128 characters.</p> </li> </ul>
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A unique identifier for the origin. The value of
              <code>Id</code> must be unique within the distribution.</p>
              <p>When you specify the value of <code>TargetOriginId</code> for
              the default cache behavior or for another cache behavior, you
              indicate the origin to which you want the cache behavior to route
              requests by specifying the value of the <code>Id</code> element
              for that origin. When a request matches the path pattern for that
              cache behavior, CloudFront routes the request to the specified
              origin. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior">Cache
              Behavior Settings</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p>
      OriginPath:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>An optional element that causes CloudFront to request your
              content from a directory in your Amazon S3 bucket or your custom
              origin. When you include the <code>OriginPath</code> element,
              specify the directory name, beginning with a <code>/</code>.
              CloudFront appends the directory name to the value of
              <code>DomainName</code>, for example,
              <code>example.com/production</code>. Do not include a
              <code>/</code> at the end of the directory name.</p> <p>For
              example, suppose you've specified the following values for your
              distribution:</p> <ul> <li> <p> <code>DomainName</code>: An Amazon
              S3 bucket named <code>myawsbucket</code>.</p> </li> <li> <p>
              <code>OriginPath</code>: <code>/production</code> </p> </li> <li>
              <p> <code>CNAME</code>: <code>example.com</code> </p> </li> </ul>
              <p>When a user enters <code>example.com/index.html</code> in a
              browser, CloudFront sends a request to Amazon S3 for
              <code>myawsbucket/production/index.html</code>.</p> <p>When a user
              enters <code>example.com/acme/index.html</code> in a browser,
              CloudFront sends a request to Amazon S3 for
              <code>myawsbucket/production/acme/index.html</code>.</p>
      S3OriginConfig:
        allOf:
          - $ref: '#/definitions/S3OriginConfig'
          - description: >-
              A complex type that contains information about the Amazon S3
              origin. If the origin is a custom origin, use the
              <code>CustomOriginConfig</code> element instead.
    required:
      - Id
      - DomainName
    type: object
  OriginCustomHeader:
    description: >-
      A complex type that contains <code>HeaderName</code> and
      <code>HeaderValue</code> elements, if any, for this distribution. 
    properties:
      HeaderName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The name of a header that you want CloudFront to forward to your
              origin. For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html">Forwarding
              Custom Headers to Your Origin (Web Distributions Only)</a> in the
              <i>Amazon Amazon CloudFront Developer Guide</i>.
      HeaderValue:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value for the header that you specified in the
              <code>HeaderName</code> field.
    required:
      - HeaderName
      - HeaderValue
    type: object
  OriginCustomHeadersList:
    items:
      allOf:
        - $ref: '#/definitions/OriginCustomHeader'
        - xml:
            name: OriginCustomHeader
    type: array
  OriginList:
    items:
      allOf:
        - $ref: '#/definitions/Origin'
        - xml:
            name: Origin
    minItems: 1
    type: array
  OriginProtocolPolicy:
    enum:
      - http-only
      - match-viewer
      - https-only
    type: string
  OriginSslProtocols:
    description: >-
      A complex type that contains information about the SSL/TLS protocols that
      CloudFront can use when establishing an HTTPS connection with your
      origin. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/SslProtocolsList'
          - description: >-
              A list that contains allowed SSL/TLS protocols for this
              distribution.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of SSL/TLS protocols that you want to allow CloudFront
              to use when establishing an HTTPS connection with this origin. 
    required:
      - Quantity
      - Items
    type: object
  Origins:
    description: >-
      A complex type that contains information about origins for this
      distribution. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/OriginList'
          - description: A complex type that contains origins for this distribution.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of origins for this distribution.
    required:
      - Quantity
    type: object
  PathList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: Path
    type: array
  Paths:
    description: >-
      A complex type that contains information about the objects that you want
      to invalidate. For more information, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying
      the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer
      Guide</i>. 
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/PathList'
          - description: >-
              A complex type that contains a list of the paths that you want to
              invalidate.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of objects that you want to invalidate.
    required:
      - Quantity
    type: object
  PreconditionFailed: {}
  PriceClass:
    enum:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    type: string
  PublicKey:
    description: >-
      A complex data type of public keys you add to CloudFront to use with
      features like field-level encryption.
    properties:
      CreatedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: A time you added a public key to CloudFront.
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: A unique ID assigned to a public key you've added to CloudFront.
      PublicKeyConfig:
        allOf:
          - $ref: '#/definitions/PublicKeyConfig'
          - description: >-
              A complex data type for a public key you add to CloudFront to use
              with features like field-level encryption.
    required:
      - Id
      - CreatedTime
      - PublicKeyConfig
    type: object
  PublicKeyAlreadyExists: {}
  PublicKeyConfig:
    description: >-
      Information about a public key you add to CloudFront to use with features
      like field-level encryption.
    properties:
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: A unique number that ensures the request can't be replayed.
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: An optional comment about a public key.
      EncodedKey:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The encoded public key that you want to add to CloudFront to use
              with features like field-level encryption.
      Name:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The name for a public key you add to CloudFront to use with
              features like field-level encryption.
    required:
      - CallerReference
      - Name
      - EncodedKey
    type: object
  PublicKeyInUse: {}
  PublicKeyList:
    description: >-
      A list of public keys you've added to CloudFront to use with features like
      field-level encryption.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/PublicKeySummaryList'
          - description: >-
              An array of information about a public key you add to CloudFront
              to use with features like field-level encryption.
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: 'The maximum number of public keys you want in the response body. '
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If there are more elements to be listed, this element is present
              and contains the value that you can use for the
              <code>Marker</code> request parameter to continue listing your
              public keys where you left off.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of public keys you added to CloudFront to use with
              features like field-level encryption.
    required:
      - MaxItems
      - Quantity
    type: object
  PublicKeySummary:
    description: ' Public key information summary. '
    properties:
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' Comment for public key information summary. '
      CreatedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: ' Creation time for public key information summary. '
      EncodedKey:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' Encoded key for public key information summary. '
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' ID for public key information summary. '
      Name:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' Name for public key information summary. '
    required:
      - Id
      - Name
      - CreatedTime
      - EncodedKey
    type: object
  PublicKeySummaryList:
    items:
      allOf:
        - $ref: '#/definitions/PublicKeySummary'
        - xml:
            name: PublicKeySummary
    type: array
  QueryArgProfile:
    description: Query argument-profile mapping for field-level encryption.
    properties:
      ProfileId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              ID of profile to use for field-level encryption query
              argument-profile mapping
      QueryArg:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Query argument for field-level encryption query argument-profile
              mapping.
    required:
      - QueryArg
      - ProfileId
    type: object
  QueryArgProfileConfig:
    description: >-
      Configuration for query argument-profile mapping for field-level
      encryption.
    properties:
      ForwardWhenQueryArgProfileIsUnknown:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Flag to set if you want a request to be forwarded to the origin
              even if the profile specified by the field-level encryption query
              argument, fle-profile, is unknown.
      QueryArgProfiles:
        allOf:
          - $ref: '#/definitions/QueryArgProfiles'
          - description: >-
              Profiles specified for query argument-profile mapping for
              field-level encryption.
    required:
      - ForwardWhenQueryArgProfileIsUnknown
    type: object
  QueryArgProfileEmpty: {}
  QueryArgProfileList:
    items:
      allOf:
        - $ref: '#/definitions/QueryArgProfile'
        - xml:
            name: QueryArgProfile
    type: array
  QueryArgProfiles:
    description: Query argument-profile mapping for field-level encryption.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/QueryArgProfileList'
          - description: >-
              Number of items for query argument-profile mapping for field-level
              encryption.
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              Number of profiles for query argument-profile mapping for
              field-level encryption.
    required:
      - Quantity
    type: object
  QueryStringCacheKeys:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/QueryStringCacheKeysList'
          - description: >-
              (Optional) A list that contains the query string parameters that
              you want CloudFront to use as a basis for caching for this cache
              behavior. If <code>Quantity</code> is 0, you can omit
              <code>Items</code>. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of <code>whitelisted</code> query string parameters for
              this cache behavior.
    required:
      - Quantity
    type: object
  QueryStringCacheKeysList:
    items:
      allOf:
        - $ref: '#/definitions/string'
        - xml:
            name: Name
    type: array
  ResourceARN:
    pattern: 'arn:aws:cloudfront::[0-9]+:.*'
    type: string
  Restrictions:
    description: >-
      A complex type that identifies ways in which you want to restrict
      distribution of your content.
    properties:
      GeoRestriction:
        $ref: '#/definitions/GeoRestriction'
    required:
      - GeoRestriction
    type: object
  S3Origin:
    description: >-
      A complex type that contains information about the Amazon S3 bucket from
      which you want CloudFront to get your media files for distribution.
    properties:
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: 'The DNS name of the Amazon S3 origin. '
      OriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The CloudFront origin access identity to associate with the
              RTMP distribution. Use an origin access identity to configure the
              distribution so that end users can only access objects in an
              Amazon S3 bucket through CloudFront.</p> <p>If you want end users
              to be able to access objects using either the CloudFront URL or
              the Amazon S3 URL, specify an empty
              <code>OriginAccessIdentity</code> element.</p> <p>To delete the
              origin access identity from an existing distribution, update the
              distribution configuration and include an empty
              <code>OriginAccessIdentity</code> element.</p> <p>To replace the
              origin access identity, update the distribution configuration and
              specify the new origin access identity.</p> <p>For more
              information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html">Using
              an Origin Access Identity to Restrict Access to Your Amazon S3
              Content</a> in the <i>Amazon Amazon CloudFront Developer
              Guide</i>.</p>
    required:
      - DomainName
      - OriginAccessIdentity
    type: object
  S3OriginConfig:
    description: >-
      A complex type that contains information about the Amazon S3 origin. If
      the origin is a custom origin, use the <code>CustomOriginConfig</code>
      element instead.
    properties:
      OriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The CloudFront origin access identity to associate with the
              origin. Use an origin access identity to configure the origin so
              that viewers can <i>only</i> access objects in an Amazon S3 bucket
              through CloudFront. The format of the value is:</p>
              <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i>
              </p> <p>where <code> <i>ID-of-origin-access-identity</i> </code>
              is the value that CloudFront returned in the <code>ID</code>
              element when you created the origin access identity.</p> <p>If you
              want viewers to be able to access objects using either the
              CloudFront URL or the Amazon S3 URL, specify an empty
              <code>OriginAccessIdentity</code> element.</p> <p>To delete the
              origin access identity from an existing distribution, update the
              distribution configuration and include an empty
              <code>OriginAccessIdentity</code> element.</p> <p>To replace the
              origin access identity, update the distribution configuration and
              specify the new origin access identity.</p> <p>For more
              information about the origin access identity, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
              Private Content through CloudFront</a> in the <i>Amazon CloudFront
              Developer Guide</i>.</p>
    required:
      - OriginAccessIdentity
    type: object
  SSLSupportMethod:
    enum:
      - sni-only
      - vip
    type: string
  Signer:
    description: >-
      A complex type that lists the AWS accounts that were included in the
      <code>TrustedSigners</code> complex type, as well as their active
      CloudFront key pair IDs, if any. 
    properties:
      AwsAccountNumber:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>An AWS account that is included in the
              <code>TrustedSigners</code> complex type for this RTMP
              distribution. Valid values include:</p> <ul> <li> <p>
              <code>self</code>, which is the AWS account used to create the
              distribution.</p> </li> <li> <p>An AWS account number.</p> </li>
              </ul>
      KeyPairIds:
        allOf:
          - $ref: '#/definitions/KeyPairIds'
          - description: >-
              A complex type that lists the active CloudFront key pairs, if any,
              that are associated with <code>AwsAccountNumber</code>.
    type: object
  SignerList:
    items:
      allOf:
        - $ref: '#/definitions/Signer'
        - xml:
            name: Signer
    type: array
  SslProtocol:
    enum:
      - SSLv3
      - TLSv1
      - TLSv1.1
      - TLSv1.2
    type: string
  SslProtocolsList:
    items:
      allOf:
        - $ref: '#/definitions/SslProtocol'
        - xml:
            name: SslProtocol
    type: array
  StreamingDistribution:
    description: 'A streaming distribution. '
    properties:
      ARN:
        $ref: '#/definitions/string'
      ActiveTrustedSigners:
        allOf:
          - $ref: '#/definitions/ActiveTrustedSigners'
          - description: >-
              <p>A complex type that lists the AWS accounts, if any, that you
              included in the <code>TrustedSigners</code> complex type for this
              distribution. These are the accounts that you want to allow to
              create signed URLs for private content.</p> <p>The
              <code>Signer</code> complex type lists the AWS account number of
              the trusted signer or <code>self</code> if the signer is the AWS
              account that created the distribution. The <code>Signer</code>
              element also includes the IDs of any active CloudFront key pairs
              that are associated with the trusted signer's AWS account. If no
              <code>KeyPairId</code> element appears for a <code>Signer</code>,
              that signer can't create signed URLs.</p> <p>For more information,
              see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
              Private Content through CloudFront</a> in the <i>Amazon CloudFront
              Developer Guide</i>. </p>
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The domain name that corresponds to the streaming distribution,
              for example, <code>s5c39gqb8ow64r.cloudfront.net</code>. 
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The identifier for the RTMP distribution. For example:
              <code>EGTXBD79EXAMPLE</code>.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: 'The date and time that the distribution was last modified. '
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The current status of the RTMP distribution. When the status is
              <code>Deployed</code>, the distribution's information is
              propagated to all CloudFront edge locations.
      StreamingDistributionConfig:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfig'
          - description: The current configuration information for the RTMP distribution.
    required:
      - Id
      - ARN
      - Status
      - DomainName
      - ActiveTrustedSigners
      - StreamingDistributionConfig
    type: object
  StreamingDistributionAlreadyExists: {}
  StreamingDistributionConfig:
    description: The RTMP distribution's configuration information.
    properties:
      Aliases:
        allOf:
          - $ref: '#/definitions/Aliases'
          - description: >-
              A complex type that contains information about CNAMEs (alternate
              domain names), if any, for this streaming distribution. 
      CallerReference:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique number that ensures that the request can't be replayed.
              If the <code>CallerReference</code> is new (no matter the content
              of the <code>StreamingDistributionConfig</code> object), a new
              streaming distribution is created. If the
              <code>CallerReference</code> is a value that you already sent in a
              previous request to create a streaming distribution, and the
              content of the <code>StreamingDistributionConfig</code> is
              identical to the original request (ignoring white space), the
              response includes the same information returned to the original
              request. If the <code>CallerReference</code> is a value that you
              already sent in a previous request to create a streaming
              distribution but the content of the
              <code>StreamingDistributionConfig</code> is different from the
              original request, CloudFront returns a
              <code>DistributionAlreadyExists</code> error. 
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Any comments you want to include about the streaming
              distribution. 
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether the streaming distribution is enabled to accept user
              requests for content.
      Logging:
        allOf:
          - $ref: '#/definitions/StreamingLoggingConfig'
          - description: >-
              A complex type that controls whether access logs are written for
              the streaming distribution. 
      PriceClass:
        allOf:
          - $ref: '#/definitions/PriceClass'
          - description: >-
              A complex type that contains information about price class for
              this streaming distribution. 
      S3Origin:
        allOf:
          - $ref: '#/definitions/S3Origin'
          - description: >-
              A complex type that contains information about the Amazon S3
              bucket from which you want CloudFront to get your media files for
              distribution. 
      TrustedSigners:
        allOf:
          - $ref: '#/definitions/TrustedSigners'
          - description: >-
              A complex type that specifies any AWS accounts that you want to
              permit to create signed URLs for private content. If you want the
              distribution to use signed URLs, include this element; if you want
              the distribution to use public URLs, remove this element. For more
              information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
              Private Content through CloudFront</a> in the <i>Amazon CloudFront
              Developer Guide</i>. 
    required:
      - CallerReference
      - S3Origin
      - Comment
      - TrustedSigners
      - Enabled
    type: object
  StreamingDistributionConfigWithTags:
    description: >-
      A streaming distribution Configuration and a list of tags to be associated
      with the streaming distribution.
    properties:
      StreamingDistributionConfig:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfig'
          - description: A streaming distribution Configuration.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A complex type that contains zero or more <code>Tag</code>
              elements.
    required:
      - StreamingDistributionConfig
      - Tags
    type: object
  StreamingDistributionList:
    description: 'A streaming distribution list. '
    properties:
      IsTruncated:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A flag that indicates whether more streaming distributions remain
              to be listed. If your results were truncated, you can make a
              follow-up pagination request using the <code>Marker</code> request
              parameter to retrieve more distributions in the list. 
      Items:
        allOf:
          - $ref: '#/definitions/StreamingDistributionSummaryList'
          - description: >-
              A complex type that contains one
              <code>StreamingDistributionSummary</code> element for each
              distribution that was created by the current AWS account.
      Marker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The value you provided for the <code>Marker</code> request
              parameter. 
      MaxItems:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The value you provided for the <code>MaxItems</code> request
              parameter. 
      NextMarker:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              If <code>IsTruncated</code> is <code>true</code>, this element is
              present and contains the value you can use for the
              <code>Marker</code> request parameter to continue listing your
              RTMP distributions where they left off. 
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: >-
              The number of streaming distributions that were created by the
              current AWS account. 
    required:
      - Marker
      - MaxItems
      - IsTruncated
      - Quantity
    type: object
  StreamingDistributionNotDisabled: {}
  StreamingDistributionSummary:
    description: ' A summary of the information for an Amazon CloudFront streaming distribution.'
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' The ARN (Amazon Resource Name) for the streaming distribution. For example: <code>arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5</code>, where <code>123456789012</code> is your AWS account ID.'
      Aliases:
        allOf:
          - $ref: '#/definitions/Aliases'
          - description: >-
              A complex type that contains information about CNAMEs (alternate
              domain names), if any, for this streaming distribution.
      Comment:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The comment originally specified when this distribution was
              created.
      DomainName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The domain name corresponding to the distribution, for example,
              <code>d111111abcdef8.cloudfront.net</code>.
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Whether the distribution is enabled to accept end user requests
              for content.
      Id:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The identifier for the distribution, for example,
              <code>EDFDVBD632BHDS5</code>.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The date and time the distribution was last modified.
      PriceClass:
        $ref: '#/definitions/PriceClass'
      S3Origin:
        allOf:
          - $ref: '#/definitions/S3Origin'
          - description: >-
              A complex type that contains information about the Amazon S3
              bucket from which you want CloudFront to get your media files for
              distribution.
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: ' Indicates the current status of the distribution. When the status is <code>Deployed</code>, the distribution''s information is fully propagated throughout the Amazon CloudFront system.'
      TrustedSigners:
        allOf:
          - $ref: '#/definitions/TrustedSigners'
          - description: >-
              A complex type that specifies the AWS accounts, if any, that you
              want to allow to create signed URLs for private content. If you
              want to require signed URLs in requests for objects in the target
              origin that match the <code>PathPattern</code> for this cache
              behavior, specify <code>true</code> for <code>Enabled</code>, and
              specify the applicable values for <code>Quantity</code> and
              <code>Items</code>.If you don't want to require signed URLs in
              requests for objects that match <code>PathPattern</code>, specify
              <code>false</code> for <code>Enabled</code> and <code>0</code> for
              <code>Quantity</code>. Omit <code>Items</code>. To add, change, or
              remove one or more trusted signers, change <code>Enabled</code> to
              <code>true</code> (if it's currently <code>false</code>), change
              <code>Quantity</code> as applicable, and specify all of the
              trusted signers that you want to include in the updated
              distribution.
    required:
      - Id
      - ARN
      - Status
      - LastModifiedTime
      - DomainName
      - S3Origin
      - Aliases
      - TrustedSigners
      - Comment
      - PriceClass
      - Enabled
    type: object
  StreamingDistributionSummaryList:
    items:
      allOf:
        - $ref: '#/definitions/StreamingDistributionSummary'
        - xml:
            name: StreamingDistributionSummary
    type: array
  StreamingLoggingConfig:
    description: >-
      A complex type that controls whether access logs are written for this
      streaming distribution.
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The Amazon S3 bucket to store the access logs in, for example,
              <code>myawslogbucket.s3.amazonaws.com</code>.
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Specifies whether you want CloudFront to save access logs to an
              Amazon S3 bucket. If you don't want to enable logging when you
              create a streaming distribution or if you want to disable logging
              for an existing streaming distribution, specify <code>false</code>
              for <code>Enabled</code>, and specify <code>empty Bucket</code>
              and <code>Prefix</code> elements. If you specify
              <code>false</code> for <code>Enabled</code> but you specify values
              for <code>Bucket</code> and <code>Prefix</code>, the values are
              automatically deleted. 
      Prefix:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An optional string that you want CloudFront to prefix to the
              access log filenames for this streaming distribution, for example,
              <code>myprefix/</code>. If you want to enable logging, but you
              don't want to specify a prefix, you still must include an empty
              <code>Prefix</code> element in the <code>Logging</code> element.
    required:
      - Enabled
      - Bucket
      - Prefix
    type: object
  Tag:
    description: ' A complex type that contains <code>Tag</code> key and <code>Tag</code> value.'
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              <p> A string that contains <code>Tag</code> key.</p> <p>The string
              length should be between 1 and 128 characters. Valid characters
              include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>,
              space, and the special characters <code>_ - . : / = +
              @</code>.</p>
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              <p> A string that contains an optional <code>Tag</code> value.</p>
              <p>The string length should be between 0 and 256 characters. Valid
              characters include <code>a-z</code>, <code>A-Z</code>,
              <code>0-9</code>, space, and the special characters <code>_ - . :
              / = + @</code>.</p>
    required:
      - Key
    type: object
  TagKey:
    description: >-
      <p> A string that contains <code>Tag</code> key.</p> <p>The string length
      should be between 1 and 128 characters. Valid characters include
      <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the
      special characters <code>_ - . : / = + @</code>.</p>
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      allOf:
        - $ref: '#/definitions/TagKey'
        - xml:
            name: Key
    type: array
  TagKeys:
    description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: ' A complex type that contains <code>Tag</code> key elements.'
    type: object
  TagList:
    items:
      allOf:
        - $ref: '#/definitions/Tag'
        - xml:
            name: Tag
    type: array
  TagResourceRequest:
    description: ' The request to add tags to a CloudFront resource.'
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    required:
      - Tags
    title: TagResourceRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Tags:
    description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' A complex type that contains <code>Tag</code> elements.'
    type: object
  TooManyCacheBehaviors: {}
  TooManyCertificates: {}
  TooManyCloudFrontOriginAccessIdentities: {}
  TooManyCookieNamesInWhiteList: {}
  TooManyDistributionCNAMEs: {}
  TooManyDistributions: {}
  TooManyDistributionsAssociatedToFieldLevelEncryptionConfig: {}
  TooManyDistributionsWithLambdaAssociations: {}
  TooManyFieldLevelEncryptionConfigs: {}
  TooManyFieldLevelEncryptionContentTypeProfiles: {}
  TooManyFieldLevelEncryptionEncryptionEntities: {}
  TooManyFieldLevelEncryptionFieldPatterns: {}
  TooManyFieldLevelEncryptionProfiles: {}
  TooManyFieldLevelEncryptionQueryArgProfiles: {}
  TooManyHeadersInForwardedValues: {}
  TooManyInvalidationsInProgress: {}
  TooManyLambdaFunctionAssociations: {}
  TooManyOriginCustomHeaders: {}
  TooManyOrigins: {}
  TooManyPublicKeys: {}
  TooManyQueryStringParameters: {}
  TooManyStreamingDistributionCNAMEs: {}
  TooManyStreamingDistributions: {}
  TooManyTrustedSigners: {}
  TrustedSignerDoesNotExist: {}
  TrustedSigners:
    description: >-
      <p>A complex type that specifies the AWS accounts, if any, that you want
      to allow to create signed URLs for private content.</p> <p>If you want to
      require signed URLs in requests for objects in the target origin that
      match the <code>PathPattern</code> for this cache behavior, specify
      <code>true</code> for <code>Enabled</code>, and specify the applicable
      values for <code>Quantity</code> and <code>Items</code>. For more
      information, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
      Private Content through CloudFront</a> in the <i>Amazon Amazon CloudFront
      Developer Guide</i>.</p> <p>If you don't want to require signed URLs in
      requests for objects that match <code>PathPattern</code>, specify
      <code>false</code> for <code>Enabled</code> and <code>0</code> for
      <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or
      remove one or more trusted signers, change <code>Enabled</code> to
      <code>true</code> (if it's currently <code>false</code>), change
      <code>Quantity</code> as applicable, and specify all of the trusted
      signers that you want to include in the updated distribution.</p> <p>For
      more information about updating the distribution configuration, see
      <a>DistributionConfig</a> .</p>
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Specifies whether you want to require viewers to use signed URLs
              to access the files specified by <code>PathPattern</code> and
              <code>TargetOriginId</code>.
      Items:
        allOf:
          - $ref: '#/definitions/AwsAccountNumberList'
          - description: ' <b>Optional</b>: A complex type that contains trusted signers for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.'
      Quantity:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of trusted signers for this cache behavior.
    required:
      - Enabled
      - Quantity
    type: object
  UntagResourceRequest:
    description: ' The request to remove tags from a CloudFront resource.'
    properties:
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeys'
          - description: ' A complex type that contains zero or more <code>Tag</code> key elements.'
    required:
      - TagKeys
    title: UntagResourceRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateCloudFrontOriginAccessIdentityRequest:
    description: The request to update an origin access identity.
    properties:
      CloudFrontOriginAccessIdentityConfig:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentityConfig'
          - description: The identity's configuration information.
    required:
      - CloudFrontOriginAccessIdentityConfig
    title: UpdateCloudFrontOriginAccessIdentityRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateCloudFrontOriginAccessIdentityResult:
    description: The returned result of the corresponding request.
    properties:
      CloudFrontOriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/CloudFrontOriginAccessIdentity'
          - description: The origin access identity's information.
    type: object
  UpdateDistributionRequest:
    description: The request to update a distribution.
    properties:
      DistributionConfig:
        allOf:
          - $ref: '#/definitions/DistributionConfig'
          - description: The distribution's configuration information.
    required:
      - DistributionConfig
    title: UpdateDistributionRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      Distribution:
        allOf:
          - $ref: '#/definitions/Distribution'
          - description: The distribution's information.
    type: object
  UpdateFieldLevelEncryptionConfigRequest:
    properties:
      FieldLevelEncryptionConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionConfig'
          - description: 'Request to update a field-level encryption configuration. '
    required:
      - FieldLevelEncryptionConfig
    title: UpdateFieldLevelEncryptionConfigRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateFieldLevelEncryptionConfigResult:
    properties:
      FieldLevelEncryption:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryption'
          - description: Return the results of updating the configuration.
    type: object
  UpdateFieldLevelEncryptionProfileRequest:
    properties:
      FieldLevelEncryptionProfileConfig:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfileConfig'
          - description: 'Request to update a field-level encryption profile. '
    required:
      - FieldLevelEncryptionProfileConfig
    title: UpdateFieldLevelEncryptionProfileRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateFieldLevelEncryptionProfileResult:
    properties:
      FieldLevelEncryptionProfile:
        allOf:
          - $ref: '#/definitions/FieldLevelEncryptionProfile'
          - description: Return the results of updating the profile.
    type: object
  UpdatePublicKeyRequest:
    properties:
      PublicKeyConfig:
        allOf:
          - $ref: '#/definitions/PublicKeyConfig'
          - description: Request to update public key information.
    required:
      - PublicKeyConfig
    title: UpdatePublicKeyRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdatePublicKeyResult:
    properties:
      PublicKey:
        allOf:
          - $ref: '#/definitions/PublicKey'
          - description: Return the results of updating the public key.
    type: object
  UpdateStreamingDistributionRequest:
    description: The request to update a streaming distribution.
    properties:
      StreamingDistributionConfig:
        allOf:
          - $ref: '#/definitions/StreamingDistributionConfig'
          - description: The streaming distribution's configuration information.
    required:
      - StreamingDistributionConfig
    title: UpdateStreamingDistributionRequest
    type: object
    xml:
      namespace: 'http://cloudfront.amazonaws.com/doc/2018-06-18/'
  UpdateStreamingDistributionResult:
    description: The returned result of the corresponding request.
    properties:
      StreamingDistribution:
        allOf:
          - $ref: '#/definitions/StreamingDistribution'
          - description: The streaming distribution's information.
    type: object
  ViewerCertificate:
    description: >-
      <p>A complex type that specifies the following:</p> <ul> <li> <p>Whether
      you want viewers to use HTTP or HTTPS to request your objects.</p> </li>
      <li> <p>If you want viewers to use HTTPS, whether you're using an
      alternate domain name such as <code>example.com</code> or the CloudFront
      domain name for your distribution, such as
      <code>d111111abcdef8.cloudfront.net</code>.</p> </li> <li> <p>If you're
      using an alternate domain name, whether AWS Certificate Manager (ACM)
      provided the certificate, or you purchased a certificate from a
      third-party certificate authority and imported it into ACM or uploaded it
      to the IAM certificate store.</p> </li> </ul> <p>You must specify only one
      of the following values: </p> <ul> <li> <p>
      <a>ViewerCertificate$ACMCertificateArn</a> </p> </li> <li> <p>
      <a>ViewerCertificate$IAMCertificateId</a> </p> </li> <li> <p>
      <a>ViewerCertificate$CloudFrontDefaultCertificate</a> </p> </li> </ul>
      <p>Don't specify <code>false</code> for
      <code>CloudFrontDefaultCertificate</code>.</p> <p> <b>If you want viewers
      to use HTTP instead of HTTPS to request your objects</b>: Specify the
      following value:</p> <p>
      <code>&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;</code>
      </p> <p>In addition, specify <code>allow-all</code> for
      <code>ViewerProtocolPolicy</code> for all of your cache behaviors.</p> <p>
      <b>If you want viewers to use HTTPS to request your objects</b>: Choose
      the type of certificate that you want to use based on whether you're using
      an alternate domain name for your objects or the CloudFront domain
      name:</p> <ul> <li> <p> <b>If you're using an alternate domain name, such
      as example.com</b>: Specify one of the following values, depending on
      whether ACM provided your certificate or you purchased your certificate
      from third-party certificate authority:</p> <ul> <li> <p>
      <code>&lt;ACMCertificateArn&gt;<i>ARN for ACM SSL/TLS
      certificate</i>&lt;ACMCertificateArn&gt;</code> where <code> <i>ARN for
      ACM SSL/TLS certificate</i> </code> is the ARN for the ACM SSL/TLS
      certificate that you want to use for this distribution.</p> </li> <li> <p>
      <code>&lt;IAMCertificateId&gt;<i>IAM certificate
      ID</i>&lt;IAMCertificateId&gt;</code> where <code> <i>IAM certificate
      ID</i> </code> is the ID that IAM returned when you added the certificate
      to the IAM certificate store.</p> </li> </ul> <p>If you specify
      <code>ACMCertificateArn</code> or <code>IAMCertificateId</code>, you must
      also specify a value for <code>SSLSupportMethod</code>.</p> <p>If you
      choose to use an ACM certificate or a certificate in the IAM certificate
      store, we recommend that you use only an alternate domain name in your
      object URLs (<code>https://example.com/logo.jpg</code>). If you use the
      domain name that is associated with your CloudFront distribution (such as
      <code>https://d111111abcdef8.cloudfront.net/logo.jpg</code>) and the
      viewer supports <code>SNI</code>, then CloudFront behaves normally.
      However, if the browser does not support SNI, the user's experience
      depends on the value that you choose for
      <code>SSLSupportMethod</code>:</p> <ul> <li> <p> <code>vip</code>: The
      viewer displays a warning because there is a mismatch between the
      CloudFront domain name and the domain name in your SSL/TLS
      certificate.</p> </li> <li> <p> <code>sni-only</code>: CloudFront drops
      the connection with the browser without returning the object.</p> </li>
      </ul> </li> <li> <p> <b>If you're using the CloudFront domain name for
      your distribution, such as <code>d111111abcdef8.cloudfront.net</code>
      </b>: Specify the following value:</p> <p>
      <code>&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;
      </code> </p> </li> </ul> <p>If you want viewers to use HTTPS, you must
      also specify one of the following values in your cache behaviors:</p> <ul>
      <li> <p> <code>
      &lt;ViewerProtocolPolicy&gt;https-only&lt;ViewerProtocolPolicy&gt;</code>
      </p> </li> <li> <p>
      <code>&lt;ViewerProtocolPolicy&gt;redirect-to-https&lt;ViewerProtocolPolicy&gt;</code>
      </p> </li> </ul> <p>You can also optionally require that CloudFront use
      HTTPS to communicate with your origin by specifying one of the following
      values for the applicable origins:</p> <ul> <li> <p>
      <code>&lt;OriginProtocolPolicy&gt;https-only&lt;OriginProtocolPolicy&gt;
      </code> </p> </li> <li> <p>
      <code>&lt;OriginProtocolPolicy&gt;match-viewer&lt;OriginProtocolPolicy&gt;
      </code> </p> </li> </ul> <p>For more information, see <a
      href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS">Using
      Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer
      Guide</i>.</p>
    properties:
      ACMCertificateArn:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              For information about how and when to use
              <code>ACMCertificateArn</code>, see <a>ViewerCertificate</a>.
      Certificate:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>This field has been deprecated. Use one of the following fields
              instead:</p> <ul> <li> <p>
              <a>ViewerCertificate$ACMCertificateArn</a> </p> </li> <li> <p>
              <a>ViewerCertificate$IAMCertificateId</a> </p> </li> <li> <p>
              <a>ViewerCertificate$CloudFrontDefaultCertificate</a> </p> </li>
              </ul>
            x-deprecated: true
      CertificateSource:
        allOf:
          - $ref: '#/definitions/CertificateSource'
          - description: >-
              <p>This field has been deprecated. Use one of the following fields
              instead:</p> <ul> <li> <p>
              <a>ViewerCertificate$ACMCertificateArn</a> </p> </li> <li> <p>
              <a>ViewerCertificate$IAMCertificateId</a> </p> </li> <li> <p>
              <a>ViewerCertificate$CloudFrontDefaultCertificate</a> </p> </li>
              </ul>
            x-deprecated: true
      CloudFrontDefaultCertificate:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              For information about how and when to use
              <code>CloudFrontDefaultCertificate</code>, see
              <a>ViewerCertificate</a>.
      IAMCertificateId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              For information about how and when to use
              <code>IAMCertificateId</code>, see <a>ViewerCertificate</a>.
      MinimumProtocolVersion:
        allOf:
          - $ref: '#/definitions/MinimumProtocolVersion'
          - description: >-
              <p>Specify the security policy that you want CloudFront to use for
              HTTPS connections. A security policy determines two settings:</p>
              <ul> <li> <p>The minimum SSL/TLS protocol that CloudFront uses to
              communicate with viewers</p> </li> <li> <p>The cipher that
              CloudFront uses to encrypt the content that it returns to
              viewers</p> </li> </ul> <note> <p>On the CloudFront console, this
              setting is called <b>Security policy</b>.</p> </note> <p>We
              recommend that you specify <code>TLSv1.1_2016</code> unless your
              users are using browsers or devices that do not support TLSv1.1 or
              later.</p> <p>When both of the following are true, you must
              specify <code>TLSv1</code> or later for the security policy: </p>
              <ul> <li> <p>You're using a custom certificate: you specified a
              value for <code>ACMCertificateArn</code> or for
              <code>IAMCertificateId</code> </p> </li> <li> <p>You're using SNI:
              you specified <code>sni-only</code> for
              <code>SSLSupportMethod</code> </p> </li> </ul> <p>If you specify
              <code>true</code> for <code>CloudFrontDefaultCertificate</code>,
              CloudFront automatically sets the security policy to
              <code>TLSv1</code> regardless of the value that you specify for
              <code>MinimumProtocolVersion</code>.</p> <p>For information about
              the relationship between the security policy that you choose and
              the protocols and ciphers that CloudFront uses to communicate with
              viewers, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers">
              Supported SSL/TLS Protocols and Ciphers for Communication Between
              Viewers and CloudFront</a> in the <i>Amazon CloudFront Developer
              Guide</i>.</p>
      SSLSupportMethod:
        allOf:
          - $ref: '#/definitions/SSLSupportMethod'
          - description: >-
              <p>If you specify a value for
              <a>ViewerCertificate$ACMCertificateArn</a> or for
              <a>ViewerCertificate$IAMCertificateId</a>, you must also specify
              how you want CloudFront to serve HTTPS requests: using a method
              that works for all clients or one that works for most clients:</p>
              <ul> <li> <p> <code>vip</code>: CloudFront uses dedicated IP
              addresses for your content and can respond to HTTPS requests from
              any viewer. However, you will incur additional monthly
              charges.</p> </li> <li> <p> <code>sni-only</code>: CloudFront can
              respond to HTTPS requests from viewers that support Server Name
              Indication (SNI). All modern browsers support SNI, but some
              browsers still in use don't support SNI. If some of your users'
              browsers don't support SNI, we recommend that you do one of the
              following:</p> <ul> <li> <p>Use the <code>vip</code> option
              (dedicated IP addresses) instead of <code>sni-only</code>.</p>
              </li> <li> <p>Use the CloudFront SSL/TLS certificate instead of a
              custom certificate. This requires that you use the CloudFront
              domain name of your distribution in the URLs for your objects, for
              example,
              <code>https://d111111abcdef8.cloudfront.net/logo.png</code>.</p>
              </li> <li> <p>If you can control which browser your users use,
              upgrade the browser to one that supports SNI.</p> </li> <li>
              <p>Use HTTP instead of HTTPS.</p> </li> </ul> </li> </ul> <p>Don't
              specify a value for <code>SSLSupportMethod</code> if you specified
              <code>&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;</code>.</p>
              <p>For more information, see <a
              href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS.html">Using
              Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront
              Developer Guide</i>.</p>
    type: object
  ViewerProtocolPolicy:
    enum:
      - allow-all
      - https-only
      - redirect-to-https
    type: string
  boolean:
    type: boolean
  integer:
    type: integer
  long:
    type: integer
  string:
    type: string
  timestamp:
    format: date-time
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/cloudfront/'
host: cloudfront.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront
    API Reference</i>. This guide is for developers who need detailed
    information about CloudFront API actions, data types, and errors. For
    detailed information about CloudFront features, see the <i>Amazon CloudFront
    Developer Guide</i>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon CloudFront
  version: '2018-06-18'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudfront-2018-06-18.normal.json
      x-apisguru-driver: external
  x-preferred: false
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: cloudfront
paths:
  /2018-06-18/distribution:
    get:
      description: 'List distributions. '
      operationId: ListDistributions2018_06_18
      parameters:
        - description: >-
            Use this when paginating results to indicate where to begin in your
            list of distributions. The results include distributions in the list
            that occur after the marker. To get the next page of results, set
            the <code>Marker</code> to the value of the <code>NextMarker</code>
            from the current page's response (which is also the ID of the last
            distribution on that page).
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of distributions you want in the response body.
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDistributionsResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: >-
        <p>Creates a new web distribution. You create a CloudFront distribution
        to tell CloudFront where you want content to be delivered from, and the
        details about how to track and manage content delivery. Send a
        <code>POST</code> request to the <code>/<i>CloudFront API
        version</i>/distribution</code>/<code>distribution ID</code>
        resource.</p> <important> <p>When you update a distribution, there are
        more required fields than when you create a distribution. When you
        update your distribution by using <a>UpdateDistribution</a>, follow the
        steps included in the documentation to get the current configuration and
        then make your updates. This helps to make sure that you include all of
        the required fields. To view a summary, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html">Required
        Fields for Create Distribution and Update Distribution</a> in the
        <i>Amazon CloudFront Developer Guide</i>.</p> </important> <p>If you are
        using Adobe Flash Media Server's RTMP protocol, you set up a different
        kind of CloudFront distribution. For more information, see
        <a>CreateStreamingDistribution</a>.</p>
      operationId: CreateDistribution2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DistributionConfig:
                description: A distribution configuration.
                properties:
                  Aliases:
                    allOf:
                      - $ref: '#/definitions/Aliases'
                      - description: >-
                          A complex type that contains information about CNAMEs
                          (alternate domain names), if any, for this
                          distribution.
                  CacheBehaviors:
                    allOf:
                      - $ref: '#/definitions/CacheBehaviors'
                      - description: >-
                          A complex type that contains zero or more
                          <code>CacheBehavior</code> elements. 
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique value (for example, a date-time stamp)
                          that ensures that the request can't be replayed.</p>
                          <p>If the value of <code>CallerReference</code> is new
                          (regardless of the content of the
                          <code>DistributionConfig</code> object), CloudFront
                          creates a new distribution.</p> <p>If
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create a distribution,
                          and if the content of the
                          <code>DistributionConfig</code> is identical to the
                          original request (ignoring white space), CloudFront
                          returns the same the response that it returned to the
                          original request.</p> <p>If
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create a distribution
                          but the content of the <code>DistributionConfig</code>
                          is different from the original request, CloudFront
                          returns a <code>DistributionAlreadyExists</code>
                          error.</p>
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>Any comments you want to include about the
                          distribution.</p> <p>If you don't want to specify a
                          comment, include an empty <code>Comment</code>
                          element.</p> <p>To delete an existing comment, update
                          the distribution configuration and include an empty
                          <code>Comment</code> element.</p> <p>To add or change
                          a comment, update the distribution configuration and
                          specify the new comment.</p>
                  CustomErrorResponses:
                    allOf:
                      - $ref: '#/definitions/CustomErrorResponses'
                      - description: >-
                          <p>A complex type that controls the following:</p>
                          <ul> <li> <p>Whether CloudFront replaces HTTP status
                          codes in the 4xx and 5xx range with custom error
                          messages before returning the response to the
                          viewer.</p> </li> <li> <p>How long CloudFront caches
                          HTTP status codes in the 4xx and 5xx range.</p> </li>
                          </ul> <p>For more information about custom error
                          pages, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
                          Error Responses</a> in the <i>Amazon CloudFront
                          Developer Guide</i>.</p>
                  DefaultCacheBehavior:
                    allOf:
                      - $ref: '#/definitions/DefaultCacheBehavior'
                      - description: >-
                          A complex type that describes the default cache
                          behavior if you don't specify a
                          <code>CacheBehavior</code> element or if files don't
                          match any of the values of <code>PathPattern</code> in
                          <code>CacheBehavior</code> elements. You must create
                          exactly one default cache behavior.
                  DefaultRootObject:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>The object that you want CloudFront to request from
                          your origin (for example, <code>index.html</code>)
                          when a viewer requests the root URL for your
                          distribution (<code>http://www.example.com</code>)
                          instead of an object in your distribution
                          (<code>http://www.example.com/product-description.html</code>).
                          Specifying a default root object avoids exposing the
                          contents of your distribution.</p> <p>Specify only the
                          object name, for example, <code>index.html</code>.
                          Don't add a <code>/</code> before the object name.</p>
                          <p>If you don't want to specify a default root object
                          when you create a distribution, include an empty
                          <code>DefaultRootObject</code> element.</p> <p>To
                          delete the default root object from an existing
                          distribution, update the distribution configuration
                          and include an empty <code>DefaultRootObject</code>
                          element.</p> <p>To replace the default root object,
                          update the distribution configuration and specify the
                          new object.</p> <p>For more information about the
                          default root object, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating
                          a Default Root Object</a> in the <i>Amazon CloudFront
                          Developer Guide</i>.</p>
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          From this field, you can enable or disable the
                          selected distribution.
                  HttpVersion:
                    allOf:
                      - $ref: '#/definitions/HttpVersion'
                      - description: >-
                          <p>(Optional) Specify the maximum HTTP version that
                          you want viewers to use to communicate with
                          CloudFront. The default value for new web
                          distributions is http2. Viewers that don't support
                          HTTP/2 automatically use an earlier HTTP version.</p>
                          <p>For viewers and CloudFront to use HTTP/2, viewers
                          must support TLS 1.2 or later, and must support Server
                          Name Identification (SNI).</p> <p>In general,
                          configuring CloudFront to communicate with viewers
                          using HTTP/2 reduces latency. You can improve
                          performance by optimizing for HTTP/2. For more
                          information, do an Internet search for "http/2
                          optimization." </p>
                  IsIPV6Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          <p>If you want CloudFront to respond to IPv6 DNS
                          requests with an IPv6 address for your distribution,
                          specify <code>true</code>. If you specify
                          <code>false</code>, CloudFront responds to IPv6 DNS
                          requests with the DNS response code
                          <code>NOERROR</code> and with no IP addresses. This
                          allows viewers to submit a second request, for an IPv4
                          address for your distribution. </p> <p>In general, you
                          should enable IPv6 if you have users on IPv6 networks
                          who want to access your content. However, if you're
                          using signed URLs or signed cookies to restrict access
                          to your content, and if you're using a custom policy
                          that includes the <code>IpAddress</code> parameter to
                          restrict the IP addresses that can access your
                          content, don't enable IPv6. If you want to restrict
                          access to some content by IP address and not restrict
                          access to other content (or restrict access but not by
                          IP address), you can create two distributions. For
                          more information, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating
                          a Signed URL Using a Custom Policy</a> in the
                          <i>Amazon CloudFront Developer Guide</i>.</p> <p>If
                          you're using an Amazon Route 53 alias resource record
                          set to route traffic to your CloudFront distribution,
                          you need to create a second alias resource record set
                          when both of the following are true:</p> <ul> <li>
                          <p>You enable IPv6 for the distribution</p> </li> <li>
                          <p>You're using alternate domain names in the URLs for
                          your objects</p> </li> </ul> <p>For more information,
                          see <a
                          href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing
                          Traffic to an Amazon CloudFront Web Distribution by
                          Using Your Domain Name</a> in the <i>Amazon Route 53
                          Developer Guide</i>.</p> <p>If you created a CNAME
                          resource record set, either with Amazon Route 53 or
                          with another DNS service, you don't need to make any
                          changes. A CNAME record will route traffic to your
                          distribution regardless of the IP address format of
                          the viewer request.</p>
                  Logging:
                    allOf:
                      - $ref: '#/definitions/LoggingConfig'
                      - description: >-
                          <p>A complex type that controls whether access logs
                          are written for the distribution.</p> <p>For more
                          information about logging, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access
                          Logs</a> in the <i>Amazon CloudFront Developer
                          Guide</i>.</p>
                  Origins:
                    allOf:
                      - $ref: '#/definitions/Origins'
                      - description: >-
                          A complex type that contains information about origins
                          for this distribution. 
                  PriceClass:
                    allOf:
                      - $ref: '#/definitions/PriceClass'
                      - description: >-
                          <p>The price class that corresponds with the maximum
                          price that you want to pay for CloudFront service. If
                          you specify <code>PriceClass_All</code>, CloudFront
                          responds to requests for your objects from all
                          CloudFront edge locations.</p> <p>If you specify a
                          price class other than <code>PriceClass_All</code>,
                          CloudFront serves your objects from the CloudFront
                          edge location that has the lowest latency among the
                          edge locations in your price class. Viewers who are in
                          or near regions that are excluded from your specified
                          price class may encounter slower performance.</p>
                          <p>For more information about price classes, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing
                          the Price Class for a CloudFront Distribution</a> in
                          the <i>Amazon CloudFront Developer Guide</i>. For
                          information about CloudFront pricing, including how
                          price classes (such as Price Class 100) map to
                          CloudFront regions, see <a
                          href="https://aws.amazon.com/cloudfront/pricing/">Amazon
                          CloudFront Pricing</a>. For price class information,
                          scroll down to see the table at the bottom of the
                          page.</p>
                  Restrictions:
                    $ref: '#/definitions/Restrictions'
                  ViewerCertificate:
                    $ref: '#/definitions/ViewerCertificate'
                  WebACLId:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique identifier that specifies the AWS WAF web
                          ACL, if any, to associate with this distribution.</p>
                          <p>AWS WAF is a web application firewall that lets you
                          monitor the HTTP and HTTPS requests that are forwarded
                          to CloudFront, and lets you control access to your
                          content. Based on conditions that you specify, such as
                          the IP addresses that requests originate from or the
                          values of query strings, CloudFront responds to
                          requests either with the requested content or with an
                          HTTP 403 status code (Forbidden). You can also
                          configure CloudFront to return a custom error page
                          when a request is blocked. For more information about
                          AWS WAF, see the <a
                          href="http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">AWS
                          WAF Developer Guide</a>. </p>
                type: object
            required:
              - DistributionConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDistributionResult'
        '480':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '481':
          description: DistributionAlreadyExists
          schema:
            $ref: '#/definitions/DistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          schema:
            $ref: '#/definitions/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '487':
          description: InvalidViewerCertificate
          schema:
            $ref: '#/definitions/InvalidViewerCertificate'
        '488':
          description: InvalidMinimumProtocolVersion
          schema:
            $ref: '#/definitions/InvalidMinimumProtocolVersion'
        '489':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '490':
          description: TooManyDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyDistributionCNAMEs'
        '491':
          description: TooManyDistributions
          schema:
            $ref: '#/definitions/TooManyDistributions'
        '492':
          description: InvalidDefaultRootObject
          schema:
            $ref: '#/definitions/InvalidDefaultRootObject'
        '493':
          description: InvalidRelativePath
          schema:
            $ref: '#/definitions/InvalidRelativePath'
        '494':
          description: InvalidErrorCode
          schema:
            $ref: '#/definitions/InvalidErrorCode'
        '495':
          description: InvalidResponseCode
          schema:
            $ref: '#/definitions/InvalidResponseCode'
        '496':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '497':
          description: InvalidRequiredProtocol
          schema:
            $ref: '#/definitions/InvalidRequiredProtocol'
        '498':
          description: NoSuchOrigin
          schema:
            $ref: '#/definitions/NoSuchOrigin'
        '499':
          description: TooManyOrigins
          schema:
            $ref: '#/definitions/TooManyOrigins'
        '500':
          description: TooManyCacheBehaviors
          schema:
            $ref: '#/definitions/TooManyCacheBehaviors'
        '501':
          description: TooManyCookieNamesInWhiteList
          schema:
            $ref: '#/definitions/TooManyCookieNamesInWhiteList'
        '502':
          description: InvalidForwardCookies
          schema:
            $ref: '#/definitions/InvalidForwardCookies'
        '503':
          description: TooManyHeadersInForwardedValues
          schema:
            $ref: '#/definitions/TooManyHeadersInForwardedValues'
        '504':
          description: InvalidHeadersForS3Origin
          schema:
            $ref: '#/definitions/InvalidHeadersForS3Origin'
        '505':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '506':
          description: TooManyCertificates
          schema:
            $ref: '#/definitions/TooManyCertificates'
        '507':
          description: InvalidLocationCode
          schema:
            $ref: '#/definitions/InvalidLocationCode'
        '508':
          description: InvalidGeoRestrictionParameter
          schema:
            $ref: '#/definitions/InvalidGeoRestrictionParameter'
        '509':
          description: InvalidProtocolSettings
          schema:
            $ref: '#/definitions/InvalidProtocolSettings'
        '510':
          description: InvalidTTLOrder
          schema:
            $ref: '#/definitions/InvalidTTLOrder'
        '511':
          description: InvalidWebACLId
          schema:
            $ref: '#/definitions/InvalidWebACLId'
        '512':
          description: TooManyOriginCustomHeaders
          schema:
            $ref: '#/definitions/TooManyOriginCustomHeaders'
        '513':
          description: TooManyQueryStringParameters
          schema:
            $ref: '#/definitions/TooManyQueryStringParameters'
        '514':
          description: InvalidQueryStringParameters
          schema:
            $ref: '#/definitions/InvalidQueryStringParameters'
        '515':
          description: TooManyDistributionsWithLambdaAssociations
          schema:
            $ref: '#/definitions/TooManyDistributionsWithLambdaAssociations'
        '516':
          description: TooManyLambdaFunctionAssociations
          schema:
            $ref: '#/definitions/TooManyLambdaFunctionAssociations'
        '517':
          description: InvalidLambdaFunctionAssociation
          schema:
            $ref: '#/definitions/InvalidLambdaFunctionAssociation'
        '518':
          description: InvalidOriginReadTimeout
          schema:
            $ref: '#/definitions/InvalidOriginReadTimeout'
        '519':
          description: InvalidOriginKeepaliveTimeout
          schema:
            $ref: '#/definitions/InvalidOriginKeepaliveTimeout'
        '520':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
        '521':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          schema:
            $ref: >-
              #/definitions/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
        '522':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          schema:
            $ref: >-
              #/definitions/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
  /2018-06-18/distribution#WithTags:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Create a new distribution with tags.
      operationId: CreateDistributionWithTags2018_06_18
      parameters:
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: WithTags
          required: true
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              DistributionConfigWithTags:
                description: >-
                  A distribution Configuration and a list of tags to be
                  associated with the distribution.
                properties:
                  DistributionConfig:
                    allOf:
                      - $ref: '#/definitions/DistributionConfig'
                      - description: A distribution configuration.
                  Tags:
                    allOf:
                      - $ref: '#/definitions/Tags'
                      - description: >-
                          A complex type that contains zero or more
                          <code>Tag</code> elements.
                type: object
            required:
              - DistributionConfigWithTags
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDistributionWithTagsResult'
        '480':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '481':
          description: DistributionAlreadyExists
          schema:
            $ref: '#/definitions/DistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          schema:
            $ref: '#/definitions/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '487':
          description: InvalidViewerCertificate
          schema:
            $ref: '#/definitions/InvalidViewerCertificate'
        '488':
          description: InvalidMinimumProtocolVersion
          schema:
            $ref: '#/definitions/InvalidMinimumProtocolVersion'
        '489':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '490':
          description: TooManyDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyDistributionCNAMEs'
        '491':
          description: TooManyDistributions
          schema:
            $ref: '#/definitions/TooManyDistributions'
        '492':
          description: InvalidDefaultRootObject
          schema:
            $ref: '#/definitions/InvalidDefaultRootObject'
        '493':
          description: InvalidRelativePath
          schema:
            $ref: '#/definitions/InvalidRelativePath'
        '494':
          description: InvalidErrorCode
          schema:
            $ref: '#/definitions/InvalidErrorCode'
        '495':
          description: InvalidResponseCode
          schema:
            $ref: '#/definitions/InvalidResponseCode'
        '496':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '497':
          description: InvalidRequiredProtocol
          schema:
            $ref: '#/definitions/InvalidRequiredProtocol'
        '498':
          description: NoSuchOrigin
          schema:
            $ref: '#/definitions/NoSuchOrigin'
        '499':
          description: TooManyOrigins
          schema:
            $ref: '#/definitions/TooManyOrigins'
        '500':
          description: TooManyCacheBehaviors
          schema:
            $ref: '#/definitions/TooManyCacheBehaviors'
        '501':
          description: TooManyCookieNamesInWhiteList
          schema:
            $ref: '#/definitions/TooManyCookieNamesInWhiteList'
        '502':
          description: InvalidForwardCookies
          schema:
            $ref: '#/definitions/InvalidForwardCookies'
        '503':
          description: TooManyHeadersInForwardedValues
          schema:
            $ref: '#/definitions/TooManyHeadersInForwardedValues'
        '504':
          description: InvalidHeadersForS3Origin
          schema:
            $ref: '#/definitions/InvalidHeadersForS3Origin'
        '505':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '506':
          description: TooManyCertificates
          schema:
            $ref: '#/definitions/TooManyCertificates'
        '507':
          description: InvalidLocationCode
          schema:
            $ref: '#/definitions/InvalidLocationCode'
        '508':
          description: InvalidGeoRestrictionParameter
          schema:
            $ref: '#/definitions/InvalidGeoRestrictionParameter'
        '509':
          description: InvalidProtocolSettings
          schema:
            $ref: '#/definitions/InvalidProtocolSettings'
        '510':
          description: InvalidTTLOrder
          schema:
            $ref: '#/definitions/InvalidTTLOrder'
        '511':
          description: InvalidWebACLId
          schema:
            $ref: '#/definitions/InvalidWebACLId'
        '512':
          description: TooManyOriginCustomHeaders
          schema:
            $ref: '#/definitions/TooManyOriginCustomHeaders'
        '513':
          description: InvalidTagging
          schema:
            $ref: '#/definitions/InvalidTagging'
        '514':
          description: TooManyQueryStringParameters
          schema:
            $ref: '#/definitions/TooManyQueryStringParameters'
        '515':
          description: InvalidQueryStringParameters
          schema:
            $ref: '#/definitions/InvalidQueryStringParameters'
        '516':
          description: TooManyDistributionsWithLambdaAssociations
          schema:
            $ref: '#/definitions/TooManyDistributionsWithLambdaAssociations'
        '517':
          description: TooManyLambdaFunctionAssociations
          schema:
            $ref: '#/definitions/TooManyLambdaFunctionAssociations'
        '518':
          description: InvalidLambdaFunctionAssociation
          schema:
            $ref: '#/definitions/InvalidLambdaFunctionAssociation'
        '519':
          description: InvalidOriginReadTimeout
          schema:
            $ref: '#/definitions/InvalidOriginReadTimeout'
        '520':
          description: InvalidOriginKeepaliveTimeout
          schema:
            $ref: '#/definitions/InvalidOriginKeepaliveTimeout'
        '521':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
        '522':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          schema:
            $ref: >-
              #/definitions/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
        '523':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          schema:
            $ref: >-
              #/definitions/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
  '/2018-06-18/distribution/{DistributionId}/invalidation':
    get:
      description: 'Lists invalidation batches. '
      operationId: ListInvalidations2018_06_18
      parameters:
        - description: The distribution's ID.
          in: path
          name: DistributionId
          required: true
          type: string
        - description: >-
            Use this parameter when paginating results to indicate where to
            begin in your list of invalidation batches. Because the results are
            returned in decreasing order from most recent to oldest, the most
            recent results are on the first page, the second page will contain
            earlier results, and so on. To get the next page of results, set
            <code>Marker</code> to the value of the <code>NextMarker</code> from
            the current page's response. This value is the same as the ID of the
            last invalidation batch on that page. 
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The maximum number of invalidation batches that you want in the
            response body.
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvalidationsResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '481':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '482':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: 'Create a new invalidation. '
      operationId: CreateInvalidation2018_06_18
      parameters:
        - description: The distribution's id.
          in: path
          name: DistributionId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              InvalidationBatch:
                description: An invalidation batch.
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A value that you specify to uniquely identify an
                          invalidation request. CloudFront uses the value to
                          prevent you from accidentally resubmitting an
                          identical request. Whenever you create a new
                          invalidation request, you must specify a new value for
                          <code>CallerReference</code> and change other values
                          in the request as applicable. One way to ensure that
                          the value of <code>CallerReference</code> is unique is
                          to use a <code>timestamp</code>, for example,
                          <code>20120301090000</code>.</p> <p>If you make a
                          second invalidation request with the same value for
                          <code>CallerReference</code>, and if the rest of the
                          request is the same, CloudFront doesn't create a new
                          invalidation request. Instead, CloudFront returns
                          information about the invalidation request that you
                          previously created with the same
                          <code>CallerReference</code>.</p> <p>If
                          <code>CallerReference</code> is a value you already
                          sent in a previous invalidation batch request but the
                          content of any <code>Path</code> is different from the
                          original request, CloudFront returns an
                          <code>InvalidationBatchAlreadyExists</code> error.</p>
                  Paths:
                    allOf:
                      - $ref: '#/definitions/Paths'
                      - description: >-
                          A complex type that contains information about the
                          objects that you want to invalidate. For more
                          information, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying
                          the Objects to Invalidate</a> in the <i>Amazon
                          CloudFront Developer Guide</i>. 
                type: object
            required:
              - InvalidationBatch
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateInvalidationResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '482':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '483':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '484':
          description: BatchTooLarge
          schema:
            $ref: '#/definitions/BatchTooLarge'
        '485':
          description: TooManyInvalidationsInProgress
          schema:
            $ref: '#/definitions/TooManyInvalidationsInProgress'
        '486':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
  '/2018-06-18/distribution/{DistributionId}/invalidation/{Id}':
    get:
      description: 'Get the information about an invalidation. '
      operationId: GetInvalidation2018_06_18
      parameters:
        - description: The distribution's ID.
          in: path
          name: DistributionId
          required: true
          type: string
        - description: >-
            The identifier for the invalidation request, for example,
            <code>IDFDVBD632BHDS5</code>.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInvalidationResult'
        '480':
          description: NoSuchInvalidation
          schema:
            $ref: '#/definitions/NoSuchInvalidation'
        '481':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '482':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/distribution/{Id}':
    delete:
      description: 'Delete a distribution. '
      operationId: DeleteDistribution2018_06_18
      parameters:
        - description: 'The distribution ID. '
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when you
            disabled the distribution. For example:
            <code>E2QWRUHAPOMQZL</code>. 
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: DistributionNotDisabled
          schema:
            $ref: '#/definitions/DistributionNotDisabled'
        '482':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '483':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '484':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
    get:
      description: 'Get the information about a distribution. '
      operationId: GetDistribution2018_06_18
      parameters:
        - description: The distribution's ID.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDistributionResult'
        '480':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/distribution/{Id}/config':
    get:
      description: 'Get the configuration information about a distribution. '
      operationId: GetDistributionConfig2018_06_18
      parameters:
        - description: The distribution's ID.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDistributionConfigResult'
        '480':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: >-
        <p>Updates the configuration for a web distribution. </p> <important>
        <p>When you update a distribution, there are more required fields than
        when you create a distribution. When you update your distribution by
        using this API action, follow the steps here to get the current
        configuration and then make your updates, to make sure that you include
        all of the required fields. To view a summary, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html">Required
        Fields for Create Distribution and Update Distribution</a> in the
        <i>Amazon CloudFront Developer Guide</i>.</p> </important> <p>The update
        process includes getting the current distribution configuration,
        updating the XML document that is returned to make your changes, and
        then submitting an <code>UpdateDistribution</code> request to make the
        updates.</p> <p>For information about updating a distribution using the
        CloudFront console instead, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating-console.html">Creating
        a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
        <p> <b>To update a web distribution using the CloudFront API</b> </p>
        <ol> <li> <p>Submit a <a>GetDistributionConfig</a> request to get the
        current configuration and an <code>Etag</code> header for the
        distribution.</p> <note> <p>If you update the distribution again, you
        must get a new <code>Etag</code> header.</p> </note> </li> <li>
        <p>Update the XML document that was returned in the response to your
        <code>GetDistributionConfig</code> request to include your changes. </p>
        <important> <p>When you edit the XML file, be aware of the
        following:</p> <ul> <li> <p>You must strip out the ETag parameter that
        is returned.</p> </li> <li> <p>Additional fields are required when you
        update a distribution. There may be fields included in the XML file for
        features that you haven't configured for your distribution. This is
        expected and required to successfully update the distribution.</p> </li>
        <li> <p>You can't change the value of <code>CallerReference</code>. If
        you try to change this value, CloudFront returns an
        <code>IllegalUpdate</code> error. </p> </li> <li> <p>The new
        configuration replaces the existing configuration; the values that you
        specify in an <code>UpdateDistribution</code> request are not merged
        into your existing configuration. When you add, delete, or replace
        values in an element that allows multiple values (for example,
        <code>CNAME</code>), you must specify all of the values that you want to
        appear in the updated distribution. In addition, you must update the
        corresponding <code>Quantity</code> element.</p> </li> </ul>
        </important> </li> <li> <p>Submit an <code>UpdateDistribution</code>
        request to update the configuration for your distribution:</p> <ul> <li>
        <p>In the request body, include the XML document that you updated in
        Step 2. The request body must include an XML document with a
        <code>DistributionConfig</code> element.</p> </li> <li> <p>Set the value
        of the HTTP <code>If-Match</code> header to the value of the
        <code>ETag</code> header that CloudFront returned when you submitted the
        <code>GetDistributionConfig</code> request in Step 1.</p> </li> </ul>
        </li> <li> <p>Review the response to the <code>UpdateDistribution</code>
        request to confirm that the configuration was successfully updated.</p>
        </li> <li> <p>Optional: Submit a <a>GetDistribution</a> request to
        confirm that your changes have propagated. When propagation is complete,
        the value of <code>Status</code> is <code>Deployed</code>.</p> </li>
        </ol>
      operationId: UpdateDistribution2018_06_18
      parameters:
        - description: The distribution's id.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the distribution's configuration. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DistributionConfig:
                description: A distribution configuration.
                properties:
                  Aliases:
                    allOf:
                      - $ref: '#/definitions/Aliases'
                      - description: >-
                          A complex type that contains information about CNAMEs
                          (alternate domain names), if any, for this
                          distribution.
                  CacheBehaviors:
                    allOf:
                      - $ref: '#/definitions/CacheBehaviors'
                      - description: >-
                          A complex type that contains zero or more
                          <code>CacheBehavior</code> elements. 
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique value (for example, a date-time stamp)
                          that ensures that the request can't be replayed.</p>
                          <p>If the value of <code>CallerReference</code> is new
                          (regardless of the content of the
                          <code>DistributionConfig</code> object), CloudFront
                          creates a new distribution.</p> <p>If
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create a distribution,
                          and if the content of the
                          <code>DistributionConfig</code> is identical to the
                          original request (ignoring white space), CloudFront
                          returns the same the response that it returned to the
                          original request.</p> <p>If
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create a distribution
                          but the content of the <code>DistributionConfig</code>
                          is different from the original request, CloudFront
                          returns a <code>DistributionAlreadyExists</code>
                          error.</p>
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>Any comments you want to include about the
                          distribution.</p> <p>If you don't want to specify a
                          comment, include an empty <code>Comment</code>
                          element.</p> <p>To delete an existing comment, update
                          the distribution configuration and include an empty
                          <code>Comment</code> element.</p> <p>To add or change
                          a comment, update the distribution configuration and
                          specify the new comment.</p>
                  CustomErrorResponses:
                    allOf:
                      - $ref: '#/definitions/CustomErrorResponses'
                      - description: >-
                          <p>A complex type that controls the following:</p>
                          <ul> <li> <p>Whether CloudFront replaces HTTP status
                          codes in the 4xx and 5xx range with custom error
                          messages before returning the response to the
                          viewer.</p> </li> <li> <p>How long CloudFront caches
                          HTTP status codes in the 4xx and 5xx range.</p> </li>
                          </ul> <p>For more information about custom error
                          pages, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing
                          Error Responses</a> in the <i>Amazon CloudFront
                          Developer Guide</i>.</p>
                  DefaultCacheBehavior:
                    allOf:
                      - $ref: '#/definitions/DefaultCacheBehavior'
                      - description: >-
                          A complex type that describes the default cache
                          behavior if you don't specify a
                          <code>CacheBehavior</code> element or if files don't
                          match any of the values of <code>PathPattern</code> in
                          <code>CacheBehavior</code> elements. You must create
                          exactly one default cache behavior.
                  DefaultRootObject:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>The object that you want CloudFront to request from
                          your origin (for example, <code>index.html</code>)
                          when a viewer requests the root URL for your
                          distribution (<code>http://www.example.com</code>)
                          instead of an object in your distribution
                          (<code>http://www.example.com/product-description.html</code>).
                          Specifying a default root object avoids exposing the
                          contents of your distribution.</p> <p>Specify only the
                          object name, for example, <code>index.html</code>.
                          Don't add a <code>/</code> before the object name.</p>
                          <p>If you don't want to specify a default root object
                          when you create a distribution, include an empty
                          <code>DefaultRootObject</code> element.</p> <p>To
                          delete the default root object from an existing
                          distribution, update the distribution configuration
                          and include an empty <code>DefaultRootObject</code>
                          element.</p> <p>To replace the default root object,
                          update the distribution configuration and specify the
                          new object.</p> <p>For more information about the
                          default root object, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating
                          a Default Root Object</a> in the <i>Amazon CloudFront
                          Developer Guide</i>.</p>
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          From this field, you can enable or disable the
                          selected distribution.
                  HttpVersion:
                    allOf:
                      - $ref: '#/definitions/HttpVersion'
                      - description: >-
                          <p>(Optional) Specify the maximum HTTP version that
                          you want viewers to use to communicate with
                          CloudFront. The default value for new web
                          distributions is http2. Viewers that don't support
                          HTTP/2 automatically use an earlier HTTP version.</p>
                          <p>For viewers and CloudFront to use HTTP/2, viewers
                          must support TLS 1.2 or later, and must support Server
                          Name Identification (SNI).</p> <p>In general,
                          configuring CloudFront to communicate with viewers
                          using HTTP/2 reduces latency. You can improve
                          performance by optimizing for HTTP/2. For more
                          information, do an Internet search for "http/2
                          optimization." </p>
                  IsIPV6Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          <p>If you want CloudFront to respond to IPv6 DNS
                          requests with an IPv6 address for your distribution,
                          specify <code>true</code>. If you specify
                          <code>false</code>, CloudFront responds to IPv6 DNS
                          requests with the DNS response code
                          <code>NOERROR</code> and with no IP addresses. This
                          allows viewers to submit a second request, for an IPv4
                          address for your distribution. </p> <p>In general, you
                          should enable IPv6 if you have users on IPv6 networks
                          who want to access your content. However, if you're
                          using signed URLs or signed cookies to restrict access
                          to your content, and if you're using a custom policy
                          that includes the <code>IpAddress</code> parameter to
                          restrict the IP addresses that can access your
                          content, don't enable IPv6. If you want to restrict
                          access to some content by IP address and not restrict
                          access to other content (or restrict access but not by
                          IP address), you can create two distributions. For
                          more information, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating
                          a Signed URL Using a Custom Policy</a> in the
                          <i>Amazon CloudFront Developer Guide</i>.</p> <p>If
                          you're using an Amazon Route 53 alias resource record
                          set to route traffic to your CloudFront distribution,
                          you need to create a second alias resource record set
                          when both of the following are true:</p> <ul> <li>
                          <p>You enable IPv6 for the distribution</p> </li> <li>
                          <p>You're using alternate domain names in the URLs for
                          your objects</p> </li> </ul> <p>For more information,
                          see <a
                          href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing
                          Traffic to an Amazon CloudFront Web Distribution by
                          Using Your Domain Name</a> in the <i>Amazon Route 53
                          Developer Guide</i>.</p> <p>If you created a CNAME
                          resource record set, either with Amazon Route 53 or
                          with another DNS service, you don't need to make any
                          changes. A CNAME record will route traffic to your
                          distribution regardless of the IP address format of
                          the viewer request.</p>
                  Logging:
                    allOf:
                      - $ref: '#/definitions/LoggingConfig'
                      - description: >-
                          <p>A complex type that controls whether access logs
                          are written for the distribution.</p> <p>For more
                          information about logging, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access
                          Logs</a> in the <i>Amazon CloudFront Developer
                          Guide</i>.</p>
                  Origins:
                    allOf:
                      - $ref: '#/definitions/Origins'
                      - description: >-
                          A complex type that contains information about origins
                          for this distribution. 
                  PriceClass:
                    allOf:
                      - $ref: '#/definitions/PriceClass'
                      - description: >-
                          <p>The price class that corresponds with the maximum
                          price that you want to pay for CloudFront service. If
                          you specify <code>PriceClass_All</code>, CloudFront
                          responds to requests for your objects from all
                          CloudFront edge locations.</p> <p>If you specify a
                          price class other than <code>PriceClass_All</code>,
                          CloudFront serves your objects from the CloudFront
                          edge location that has the lowest latency among the
                          edge locations in your price class. Viewers who are in
                          or near regions that are excluded from your specified
                          price class may encounter slower performance.</p>
                          <p>For more information about price classes, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing
                          the Price Class for a CloudFront Distribution</a> in
                          the <i>Amazon CloudFront Developer Guide</i>. For
                          information about CloudFront pricing, including how
                          price classes (such as Price Class 100) map to
                          CloudFront regions, see <a
                          href="https://aws.amazon.com/cloudfront/pricing/">Amazon
                          CloudFront Pricing</a>. For price class information,
                          scroll down to see the table at the bottom of the
                          page.</p>
                  Restrictions:
                    $ref: '#/definitions/Restrictions'
                  ViewerCertificate:
                    $ref: '#/definitions/ViewerCertificate'
                  WebACLId:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique identifier that specifies the AWS WAF web
                          ACL, if any, to associate with this distribution.</p>
                          <p>AWS WAF is a web application firewall that lets you
                          monitor the HTTP and HTTPS requests that are forwarded
                          to CloudFront, and lets you control access to your
                          content. Based on conditions that you specify, such as
                          the IP addresses that requests originate from or the
                          values of query strings, CloudFront responds to
                          requests either with the requested content or with an
                          HTTP 403 status code (Forbidden). You can also
                          configure CloudFront to return a custom error page
                          when a request is blocked. For more information about
                          AWS WAF, see the <a
                          href="http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">AWS
                          WAF Developer Guide</a>. </p>
                type: object
            required:
              - DistributionConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDistributionResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '482':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '483':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '484':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '485':
          description: NoSuchDistribution
          schema:
            $ref: '#/definitions/NoSuchDistribution'
        '486':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '487':
          description: TooManyDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyDistributionCNAMEs'
        '488':
          description: InvalidDefaultRootObject
          schema:
            $ref: '#/definitions/InvalidDefaultRootObject'
        '489':
          description: InvalidRelativePath
          schema:
            $ref: '#/definitions/InvalidRelativePath'
        '490':
          description: InvalidErrorCode
          schema:
            $ref: '#/definitions/InvalidErrorCode'
        '491':
          description: InvalidResponseCode
          schema:
            $ref: '#/definitions/InvalidResponseCode'
        '492':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '493':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '494':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '495':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '496':
          description: InvalidViewerCertificate
          schema:
            $ref: '#/definitions/InvalidViewerCertificate'
        '497':
          description: InvalidMinimumProtocolVersion
          schema:
            $ref: '#/definitions/InvalidMinimumProtocolVersion'
        '498':
          description: InvalidRequiredProtocol
          schema:
            $ref: '#/definitions/InvalidRequiredProtocol'
        '499':
          description: NoSuchOrigin
          schema:
            $ref: '#/definitions/NoSuchOrigin'
        '500':
          description: TooManyOrigins
          schema:
            $ref: '#/definitions/TooManyOrigins'
        '501':
          description: TooManyCacheBehaviors
          schema:
            $ref: '#/definitions/TooManyCacheBehaviors'
        '502':
          description: TooManyCookieNamesInWhiteList
          schema:
            $ref: '#/definitions/TooManyCookieNamesInWhiteList'
        '503':
          description: InvalidForwardCookies
          schema:
            $ref: '#/definitions/InvalidForwardCookies'
        '504':
          description: TooManyHeadersInForwardedValues
          schema:
            $ref: '#/definitions/TooManyHeadersInForwardedValues'
        '505':
          description: InvalidHeadersForS3Origin
          schema:
            $ref: '#/definitions/InvalidHeadersForS3Origin'
        '506':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '507':
          description: TooManyCertificates
          schema:
            $ref: '#/definitions/TooManyCertificates'
        '508':
          description: InvalidLocationCode
          schema:
            $ref: '#/definitions/InvalidLocationCode'
        '509':
          description: InvalidGeoRestrictionParameter
          schema:
            $ref: '#/definitions/InvalidGeoRestrictionParameter'
        '510':
          description: InvalidTTLOrder
          schema:
            $ref: '#/definitions/InvalidTTLOrder'
        '511':
          description: InvalidWebACLId
          schema:
            $ref: '#/definitions/InvalidWebACLId'
        '512':
          description: TooManyOriginCustomHeaders
          schema:
            $ref: '#/definitions/TooManyOriginCustomHeaders'
        '513':
          description: TooManyQueryStringParameters
          schema:
            $ref: '#/definitions/TooManyQueryStringParameters'
        '514':
          description: InvalidQueryStringParameters
          schema:
            $ref: '#/definitions/InvalidQueryStringParameters'
        '515':
          description: TooManyDistributionsWithLambdaAssociations
          schema:
            $ref: '#/definitions/TooManyDistributionsWithLambdaAssociations'
        '516':
          description: TooManyLambdaFunctionAssociations
          schema:
            $ref: '#/definitions/TooManyLambdaFunctionAssociations'
        '517':
          description: InvalidLambdaFunctionAssociation
          schema:
            $ref: '#/definitions/InvalidLambdaFunctionAssociation'
        '518':
          description: InvalidOriginReadTimeout
          schema:
            $ref: '#/definitions/InvalidOriginReadTimeout'
        '519':
          description: InvalidOriginKeepaliveTimeout
          schema:
            $ref: '#/definitions/InvalidOriginKeepaliveTimeout'
        '520':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
        '521':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          schema:
            $ref: >-
              #/definitions/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
        '522':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          schema:
            $ref: >-
              #/definitions/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
  '/2018-06-18/distributionsByWebACLId/{WebACLId}':
    get:
      description: >-
        List the distributions that are associated with a specified AWS WAF web
        ACL. 
      operationId: ListDistributionsByWebACLId2018_06_18
      parameters:
        - description: >-
            Use <code>Marker</code> and <code>MaxItems</code> to control
            pagination of results. If you have more than <code>MaxItems</code>
            distributions that satisfy the request, the response includes a
            <code>NextMarker</code> element. To get the next page of results,
            submit another request. For the value of <code>Marker</code>,
            specify the value of <code>NextMarker</code> from the last response.
            (For the first request, omit <code>Marker</code>.) 
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The maximum number of distributions that you want CloudFront to
            return in the response body. The maximum and default values are both
            100.
          in: query
          name: MaxItems
          required: false
          type: string
        - description: >-
            The ID of the AWS WAF web ACL that you want to list the associated
            distributions. If you specify "null" for the ID, the request returns
            a list of the distributions that aren't associated with a web ACL. 
          in: path
          name: WebACLId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDistributionsByWebACLIdResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '481':
          description: InvalidWebACLId
          schema:
            $ref: '#/definitions/InvalidWebACLId'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /2018-06-18/field-level-encryption:
    get:
      description: >-
        List all field-level encryption configurations that have been created in
        CloudFront for this account.
      operationId: ListFieldLevelEncryptionConfigs2018_06_18
      parameters:
        - description: >-
            Use this when paginating results to indicate where to begin in your
            list of configurations. The results include configurations in the
            list that occur after the marker. To get the next page of results,
            set the <code>Marker</code> to the value of the
            <code>NextMarker</code> from the current page's response (which is
            also the ID of the last configuration on that page). 
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The maximum number of field-level encryption configurations you want
            in the response body. 
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFieldLevelEncryptionConfigsResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Create a new field-level encryption configuration.
      operationId: CreateFieldLevelEncryptionConfig2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              FieldLevelEncryptionConfig:
                description: >-
                  A complex data type that includes the profile configurations
                  specified for field-level encryption. 
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: An optional comment about the configuration.
                  ContentTypeProfileConfig:
                    allOf:
                      - $ref: '#/definitions/ContentTypeProfileConfig'
                      - description: >-
                          A complex data type that specifies when to forward
                          content if a content type isn't recognized and
                          profiles to use as by default in a request if a query
                          argument doesn't specify a profile to use.
                  QueryArgProfileConfig:
                    allOf:
                      - $ref: '#/definitions/QueryArgProfileConfig'
                      - description: >-
                          A complex data type that specifies when to forward
                          content if a profile isn't found and the profile that
                          can be provided as a query argument in a request.
                type: object
            required:
              - FieldLevelEncryptionConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateFieldLevelEncryptionConfigResult'
        '480':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
        '483':
          description: FieldLevelEncryptionConfigAlreadyExists
          schema:
            $ref: '#/definitions/FieldLevelEncryptionConfigAlreadyExists'
        '484':
          description: TooManyFieldLevelEncryptionConfigs
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionConfigs'
        '485':
          description: TooManyFieldLevelEncryptionQueryArgProfiles
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionQueryArgProfiles'
        '486':
          description: TooManyFieldLevelEncryptionContentTypeProfiles
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionContentTypeProfiles'
        '487':
          description: QueryArgProfileEmpty
          schema:
            $ref: '#/definitions/QueryArgProfileEmpty'
  /2018-06-18/field-level-encryption-profile:
    get:
      description: >-
        Request a list of field-level encryption profiles that have been created
        in CloudFront for this account.
      operationId: ListFieldLevelEncryptionProfiles2018_06_18
      parameters:
        - description: >-
            Use this when paginating results to indicate where to begin in your
            list of profiles. The results include profiles in the list that
            occur after the marker. To get the next page of results, set the
            <code>Marker</code> to the value of the <code>NextMarker</code> from
            the current page's response (which is also the ID of the last
            profile on that page). 
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The maximum number of field-level encryption profiles you want in
            the response body. 
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFieldLevelEncryptionProfilesResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Create a field-level encryption profile.
      operationId: CreateFieldLevelEncryptionProfile2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              FieldLevelEncryptionProfileConfig:
                description: >-
                  A complex data type of profiles for the field-level
                  encryption.
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          An optional comment for the field-level encryption
                          profile.
                  EncryptionEntities:
                    allOf:
                      - $ref: '#/definitions/EncryptionEntities'
                      - description: >-
                          A complex data type of encryption entities for the
                          field-level encryption profile that include the public
                          key ID, provider, and field patterns for specifying
                          which fields to encrypt with this key.
                  Name:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: Profile name for the field-level encryption profile.
                type: object
            required:
              - FieldLevelEncryptionProfileConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateFieldLevelEncryptionProfileResult'
        '480':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
        '483':
          description: FieldLevelEncryptionProfileAlreadyExists
          schema:
            $ref: '#/definitions/FieldLevelEncryptionProfileAlreadyExists'
        '484':
          description: FieldLevelEncryptionProfileSizeExceeded
          schema:
            $ref: '#/definitions/FieldLevelEncryptionProfileSizeExceeded'
        '485':
          description: TooManyFieldLevelEncryptionProfiles
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionProfiles'
        '486':
          description: TooManyFieldLevelEncryptionEncryptionEntities
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionEncryptionEntities'
        '487':
          description: TooManyFieldLevelEncryptionFieldPatterns
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionFieldPatterns'
  '/2018-06-18/field-level-encryption-profile/{Id}':
    delete:
      description: Remove a field-level encryption profile.
      operationId: DeleteFieldLevelEncryptionProfile2018_06_18
      parameters:
        - description: Request the ID of the profile you want to delete from CloudFront.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the profile to delete. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '482':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
        '483':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '484':
          description: FieldLevelEncryptionProfileInUse
          schema:
            $ref: '#/definitions/FieldLevelEncryptionProfileInUse'
    get:
      description: Get the field-level encryption profile information.
      operationId: GetFieldLevelEncryptionProfile2018_06_18
      parameters:
        - description: Get the ID for the field-level encryption profile information.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFieldLevelEncryptionProfileResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/field-level-encryption-profile/{Id}/config':
    get:
      description: Get the field-level encryption profile configuration information.
      operationId: GetFieldLevelEncryptionProfileConfig2018_06_18
      parameters:
        - description: >-
            Get the ID for the field-level encryption profile configuration
            information.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFieldLevelEncryptionProfileConfigResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: 'Update a field-level encryption profile. '
      operationId: UpdateFieldLevelEncryptionProfile2018_06_18
      parameters:
        - description: 'The ID of the field-level encryption profile request. '
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the profile identity to update. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FieldLevelEncryptionProfileConfig:
                description: >-
                  A complex data type of profiles for the field-level
                  encryption.
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          An optional comment for the field-level encryption
                          profile.
                  EncryptionEntities:
                    allOf:
                      - $ref: '#/definitions/EncryptionEntities'
                      - description: >-
                          A complex data type of encryption entities for the
                          field-level encryption profile that include the public
                          key ID, provider, and field patterns for specifying
                          which fields to encrypt with this key.
                  Name:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: Profile name for the field-level encryption profile.
                type: object
            required:
              - FieldLevelEncryptionProfileConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFieldLevelEncryptionProfileResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: FieldLevelEncryptionProfileAlreadyExists
          schema:
            $ref: '#/definitions/FieldLevelEncryptionProfileAlreadyExists'
        '482':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '483':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '484':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '485':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '486':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
        '487':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
        '488':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '489':
          description: FieldLevelEncryptionProfileSizeExceeded
          schema:
            $ref: '#/definitions/FieldLevelEncryptionProfileSizeExceeded'
        '490':
          description: TooManyFieldLevelEncryptionEncryptionEntities
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionEncryptionEntities'
        '491':
          description: TooManyFieldLevelEncryptionFieldPatterns
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionFieldPatterns'
  '/2018-06-18/field-level-encryption/{Id}':
    delete:
      description: Remove a field-level encryption configuration.
      operationId: DeleteFieldLevelEncryptionConfig2018_06_18
      parameters:
        - description: The ID of the configuration you want to delete from CloudFront.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the configuration identity to delete. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '482':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
        '483':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '484':
          description: FieldLevelEncryptionConfigInUse
          schema:
            $ref: '#/definitions/FieldLevelEncryptionConfigInUse'
    get:
      description: Get the field-level encryption configuration information.
      operationId: GetFieldLevelEncryption2018_06_18
      parameters:
        - description: >-
            Request the ID for the field-level encryption configuration
            information.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFieldLevelEncryptionResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/field-level-encryption/{Id}/config':
    get:
      description: Get the field-level encryption configuration information.
      operationId: GetFieldLevelEncryptionConfig2018_06_18
      parameters:
        - description: >-
            Request the ID for the field-level encryption configuration
            information.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFieldLevelEncryptionConfigResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: 'Update a field-level encryption configuration. '
      operationId: UpdateFieldLevelEncryptionConfig2018_06_18
      parameters:
        - description: The ID of the configuration you want to update.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the configuration identity to update. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FieldLevelEncryptionConfig:
                description: >-
                  A complex data type that includes the profile configurations
                  specified for field-level encryption. 
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: An optional comment about the configuration.
                  ContentTypeProfileConfig:
                    allOf:
                      - $ref: '#/definitions/ContentTypeProfileConfig'
                      - description: >-
                          A complex data type that specifies when to forward
                          content if a content type isn't recognized and
                          profiles to use as by default in a request if a query
                          argument doesn't specify a profile to use.
                  QueryArgProfileConfig:
                    allOf:
                      - $ref: '#/definitions/QueryArgProfileConfig'
                      - description: >-
                          A complex data type that specifies when to forward
                          content if a profile isn't found and the profile that
                          can be provided as a query argument in a request.
                type: object
            required:
              - FieldLevelEncryptionConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFieldLevelEncryptionConfigResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '482':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '483':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '484':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '485':
          description: NoSuchFieldLevelEncryptionProfile
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionProfile'
        '486':
          description: NoSuchFieldLevelEncryptionConfig
          schema:
            $ref: '#/definitions/NoSuchFieldLevelEncryptionConfig'
        '487':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '488':
          description: TooManyFieldLevelEncryptionQueryArgProfiles
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionQueryArgProfiles'
        '489':
          description: TooManyFieldLevelEncryptionContentTypeProfiles
          schema:
            $ref: '#/definitions/TooManyFieldLevelEncryptionContentTypeProfiles'
        '490':
          description: QueryArgProfileEmpty
          schema:
            $ref: '#/definitions/QueryArgProfileEmpty'
  /2018-06-18/origin-access-identity/cloudfront:
    get:
      description: Lists origin access identities.
      operationId: ListCloudFrontOriginAccessIdentities2018_06_18
      parameters:
        - description: >-
            Use this when paginating results to indicate where to begin in your
            list of origin access identities. The results include identities in
            the list that occur after the marker. To get the next page of
            results, set the <code>Marker</code> to the value of the
            <code>NextMarker</code> from the current page's response (which is
            also the ID of the last identity on that page).
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The maximum number of origin access identities you want in the
            response body. 
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCloudFrontOriginAccessIdentitiesResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: >-
        Creates a new origin access identity. If you're using Amazon S3 for your
        origin, you can use an origin access identity to require users to access
        your content using a CloudFront URL instead of the Amazon S3 URL. For
        more information about how to use origin access identities, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
        Private Content through CloudFront</a> in the <i>Amazon CloudFront
        Developer Guide</i>.
      operationId: CreateCloudFrontOriginAccessIdentity2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              CloudFrontOriginAccessIdentityConfig:
                description: >-
                  Origin access identity configuration. Send a <code>GET</code>
                  request to the <code>/<i>CloudFront API
                  version</i>/CloudFront/identity ID/config</code> resource. 
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique number that ensures the request can't be
                          replayed.</p> <p>If the <code>CallerReference</code>
                          is new (no matter the content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code>
                          object), a new origin access identity is created.</p>
                          <p>If the <code>CallerReference</code> is a value
                          already sent in a previous identity request, and the
                          content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code> is
                          identical to the original request (ignoring white
                          space), the response includes the same information
                          returned to the original request. </p> <p>If the
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create an identity, but
                          the content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code> is
                          different from the original request, CloudFront
                          returns a
                          <code>CloudFrontOriginAccessIdentityAlreadyExists</code>
                          error. </p>
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          Any comments you want to include about the origin
                          access identity. 
                type: object
            required:
              - CloudFrontOriginAccessIdentityConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateCloudFrontOriginAccessIdentityResult'
        '480':
          description: CloudFrontOriginAccessIdentityAlreadyExists
          schema:
            $ref: '#/definitions/CloudFrontOriginAccessIdentityAlreadyExists'
        '481':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '482':
          description: TooManyCloudFrontOriginAccessIdentities
          schema:
            $ref: '#/definitions/TooManyCloudFrontOriginAccessIdentities'
        '483':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '484':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
  '/2018-06-18/origin-access-identity/cloudfront/{Id}':
    delete:
      description: 'Delete an origin access identity. '
      operationId: DeleteCloudFrontOriginAccessIdentity2018_06_18
      parameters:
        - description: The origin access identity's ID.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header you received from a
            previous <code>GET</code> or <code>PUT</code> request. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '482':
          description: NoSuchCloudFrontOriginAccessIdentity
          schema:
            $ref: '#/definitions/NoSuchCloudFrontOriginAccessIdentity'
        '483':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '484':
          description: CloudFrontOriginAccessIdentityInUse
          schema:
            $ref: '#/definitions/CloudFrontOriginAccessIdentityInUse'
    get:
      description: 'Get the information about an origin access identity. '
      operationId: GetCloudFrontOriginAccessIdentity2018_06_18
      parameters:
        - description: The identity's ID.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCloudFrontOriginAccessIdentityResult'
        '480':
          description: NoSuchCloudFrontOriginAccessIdentity
          schema:
            $ref: '#/definitions/NoSuchCloudFrontOriginAccessIdentity'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/origin-access-identity/cloudfront/{Id}/config':
    get:
      description: 'Get the configuration information about an origin access identity. '
      operationId: GetCloudFrontOriginAccessIdentityConfig2018_06_18
      parameters:
        - description: 'The identity''s ID. '
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCloudFrontOriginAccessIdentityConfigResult'
        '480':
          description: NoSuchCloudFrontOriginAccessIdentity
          schema:
            $ref: '#/definitions/NoSuchCloudFrontOriginAccessIdentity'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: 'Update an origin access identity. '
      operationId: UpdateCloudFrontOriginAccessIdentity2018_06_18
      parameters:
        - description: The identity's id.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the identity's configuration. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CloudFrontOriginAccessIdentityConfig:
                description: >-
                  Origin access identity configuration. Send a <code>GET</code>
                  request to the <code>/<i>CloudFront API
                  version</i>/CloudFront/identity ID/config</code> resource. 
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>A unique number that ensures the request can't be
                          replayed.</p> <p>If the <code>CallerReference</code>
                          is new (no matter the content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code>
                          object), a new origin access identity is created.</p>
                          <p>If the <code>CallerReference</code> is a value
                          already sent in a previous identity request, and the
                          content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code> is
                          identical to the original request (ignoring white
                          space), the response includes the same information
                          returned to the original request. </p> <p>If the
                          <code>CallerReference</code> is a value you already
                          sent in a previous request to create an identity, but
                          the content of the
                          <code>CloudFrontOriginAccessIdentityConfig</code> is
                          different from the original request, CloudFront
                          returns a
                          <code>CloudFrontOriginAccessIdentityAlreadyExists</code>
                          error. </p>
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          Any comments you want to include about the origin
                          access identity. 
                type: object
            required:
              - CloudFrontOriginAccessIdentityConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCloudFrontOriginAccessIdentityResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '482':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '483':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '484':
          description: NoSuchCloudFrontOriginAccessIdentity
          schema:
            $ref: '#/definitions/NoSuchCloudFrontOriginAccessIdentity'
        '485':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '486':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '487':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
  /2018-06-18/public-key:
    get:
      description: >-
        List all public keys that have been added to CloudFront for this
        account.
      operationId: ListPublicKeys2018_06_18
      parameters:
        - description: >-
            Use this when paginating results to indicate where to begin in your
            list of public keys. The results include public keys in the list
            that occur after the marker. To get the next page of results, set
            the <code>Marker</code> to the value of the <code>NextMarker</code>
            from the current page's response (which is also the ID of the last
            public key on that page). 
          in: query
          name: Marker
          required: false
          type: string
        - description: 'The maximum number of public keys you want in the response body. '
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPublicKeysResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: >-
        Add a new public key to CloudFront to use, for example, for field-level
        encryption. You can add a maximum of 10 public keys with one AWS
        account.
      operationId: CreatePublicKey2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              PublicKeyConfig:
                description: >-
                  Information about a public key you add to CloudFront to use
                  with features like field-level encryption.
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: An optional comment about a public key.
                  EncodedKey:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The encoded public key that you want to add to
                          CloudFront to use with features like field-level
                          encryption.
                  Name:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The name for a public key you add to CloudFront to use
                          with features like field-level encryption.
                type: object
            required:
              - PublicKeyConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreatePublicKeyResult'
        '480':
          description: PublicKeyAlreadyExists
          schema:
            $ref: '#/definitions/PublicKeyAlreadyExists'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: TooManyPublicKeys
          schema:
            $ref: '#/definitions/TooManyPublicKeys'
  '/2018-06-18/public-key/{Id}':
    delete:
      description: Remove a public key you previously added to CloudFront.
      operationId: DeletePublicKey2018_06_18
      parameters:
        - description: The ID of the public key you want to remove from CloudFront.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the public key identity to delete. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: PublicKeyInUse
          schema:
            $ref: '#/definitions/PublicKeyInUse'
        '482':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '483':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
        '484':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
    get:
      description: Get the public key information.
      operationId: GetPublicKey2018_06_18
      parameters:
        - description: Request the ID for the public key.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPublicKeyResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/public-key/{Id}/config':
    get:
      description: Return public key configuration informaation
      operationId: GetPublicKeyConfig2018_06_18
      parameters:
        - description: Request the ID for the public key configuration.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPublicKeyConfigResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: >-
        Update public key information. Note that the only value you can change
        is the comment.
      operationId: UpdatePublicKey2018_06_18
      parameters:
        - description: ID of the public key to be updated.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the public key to update. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              PublicKeyConfig:
                description: >-
                  Information about a public key you add to CloudFront to use
                  with features like field-level encryption.
                properties:
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures the request can't be
                          replayed.
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: An optional comment about a public key.
                  EncodedKey:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The encoded public key that you want to add to
                          CloudFront to use with features like field-level
                          encryption.
                  Name:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The name for a public key you add to CloudFront to use
                          with features like field-level encryption.
                type: object
            required:
              - PublicKeyConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePublicKeyResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: CannotChangeImmutablePublicKeyFields
          schema:
            $ref: '#/definitions/CannotChangeImmutablePublicKeyFields'
        '482':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '483':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '484':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '485':
          description: NoSuchPublicKey
          schema:
            $ref: '#/definitions/NoSuchPublicKey'
        '486':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
  /2018-06-18/streaming-distribution:
    get:
      description: 'List streaming distributions. '
      operationId: ListStreamingDistributions2018_06_18
      parameters:
        - description: >-
            The value that you provided for the <code>Marker</code> request
            parameter.
          in: query
          name: Marker
          required: false
          type: string
        - description: >-
            The value that you provided for the <code>MaxItems</code> request
            parameter.
          in: query
          name: MaxItems
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamingDistributionsResult'
        '480':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: >-
        <p>Creates a new RMTP distribution. An RTMP distribution is similar to a
        web distribution, but an RTMP distribution streams media files using the
        Adobe Real-Time Messaging Protocol (RTMP) instead of serving files using
        HTTP. </p> <p>To create a new web distribution, submit a
        <code>POST</code> request to the <i>CloudFront API
        version</i>/distribution resource. The request body must include a
        document with a <i>StreamingDistributionConfig</i> element. The response
        echoes the <code>StreamingDistributionConfig</code> element and returns
        other information about the RTMP distribution.</p> <p>To get the status
        of your request, use the <i>GET StreamingDistribution</i> API action.
        When the value of <code>Enabled</code> is <code>true</code> and the
        value of <code>Status</code> is <code>Deployed</code>, your distribution
        is ready. A distribution usually deploys in less than 15 minutes.</p>
        <p>For more information about web distributions, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-rtmp.html">Working
        with RTMP Distributions</a> in the <i>Amazon CloudFront Developer
        Guide</i>.</p> <important> <p>Beginning with the 2012-05-05 version of
        the CloudFront API, we made substantial changes to the format of the XML
        document that you include in the request body when you create or update
        a web distribution or an RTMP distribution, and when you invalidate
        objects. With previous versions of the API, we discovered that it was
        too easy to accidentally delete one or more values for an element that
        accepts multiple values, for example, CNAMEs and trusted signers. Our
        changes for the 2012-05-05 release are intended to prevent these
        accidental deletions and to notify you when there's a mismatch between
        the number of values you say you're specifying in the
        <code>Quantity</code> element and the number of values specified.</p>
        </important>
      operationId: CreateStreamingDistribution2018_06_18
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              StreamingDistributionConfig:
                description: The RTMP distribution's configuration information.
                properties:
                  Aliases:
                    allOf:
                      - $ref: '#/definitions/Aliases'
                      - description: >-
                          A complex type that contains information about CNAMEs
                          (alternate domain names), if any, for this streaming
                          distribution. 
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures that the request can't be
                          replayed. If the <code>CallerReference</code> is new
                          (no matter the content of the
                          <code>StreamingDistributionConfig</code> object), a
                          new streaming distribution is created. If the
                          <code>CallerReference</code> is a value that you
                          already sent in a previous request to create a
                          streaming distribution, and the content of the
                          <code>StreamingDistributionConfig</code> is identical
                          to the original request (ignoring white space), the
                          response includes the same information returned to the
                          original request. If the <code>CallerReference</code>
                          is a value that you already sent in a previous request
                          to create a streaming distribution but the content of
                          the <code>StreamingDistributionConfig</code> is
                          different from the original request, CloudFront
                          returns a <code>DistributionAlreadyExists</code>
                          error. 
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          Any comments you want to include about the streaming
                          distribution. 
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          Whether the streaming distribution is enabled to
                          accept user requests for content.
                  Logging:
                    allOf:
                      - $ref: '#/definitions/StreamingLoggingConfig'
                      - description: >-
                          A complex type that controls whether access logs are
                          written for the streaming distribution. 
                  PriceClass:
                    allOf:
                      - $ref: '#/definitions/PriceClass'
                      - description: >-
                          A complex type that contains information about price
                          class for this streaming distribution. 
                  S3Origin:
                    allOf:
                      - $ref: '#/definitions/S3Origin'
                      - description: >-
                          A complex type that contains information about the
                          Amazon S3 bucket from which you want CloudFront to get
                          your media files for distribution. 
                  TrustedSigners:
                    allOf:
                      - $ref: '#/definitions/TrustedSigners'
                      - description: >-
                          A complex type that specifies any AWS accounts that
                          you want to permit to create signed URLs for private
                          content. If you want the distribution to use signed
                          URLs, include this element; if you want the
                          distribution to use public URLs, remove this element.
                          For more information, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
                          Private Content through CloudFront</a> in the
                          <i>Amazon CloudFront Developer Guide</i>. 
                type: object
            required:
              - StreamingDistributionConfig
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingDistributionResult'
        '480':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '481':
          description: StreamingDistributionAlreadyExists
          schema:
            $ref: '#/definitions/StreamingDistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          schema:
            $ref: '#/definitions/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '487':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '488':
          description: TooManyStreamingDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyStreamingDistributionCNAMEs'
        '489':
          description: TooManyStreamingDistributions
          schema:
            $ref: '#/definitions/TooManyStreamingDistributions'
        '490':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '491':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
  /2018-06-18/streaming-distribution#WithTags:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Create a new streaming distribution with tags.
      operationId: CreateStreamingDistributionWithTags2018_06_18
      parameters:
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: WithTags
          required: true
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              StreamingDistributionConfigWithTags:
                description: >-
                  A streaming distribution Configuration and a list of tags to
                  be associated with the streaming distribution.
                properties:
                  StreamingDistributionConfig:
                    allOf:
                      - $ref: '#/definitions/StreamingDistributionConfig'
                      - description: A streaming distribution Configuration.
                  Tags:
                    allOf:
                      - $ref: '#/definitions/Tags'
                      - description: >-
                          A complex type that contains zero or more
                          <code>Tag</code> elements.
                type: object
            required:
              - StreamingDistributionConfigWithTags
            type: object
      produces:
        - text/xml
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingDistributionWithTagsResult'
        '480':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '481':
          description: StreamingDistributionAlreadyExists
          schema:
            $ref: '#/definitions/StreamingDistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          schema:
            $ref: '#/definitions/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '487':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '488':
          description: TooManyStreamingDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyStreamingDistributionCNAMEs'
        '489':
          description: TooManyStreamingDistributions
          schema:
            $ref: '#/definitions/TooManyStreamingDistributions'
        '490':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '491':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
        '492':
          description: InvalidTagging
          schema:
            $ref: '#/definitions/InvalidTagging'
  '/2018-06-18/streaming-distribution/{Id}':
    delete:
      description: >-
        <p>Delete a streaming distribution. To delete an RTMP distribution using
        the CloudFront API, perform the following steps.</p> <p> <b>To delete an
        RTMP distribution using the CloudFront API</b>:</p> <ol> <li> <p>Disable
        the RTMP distribution.</p> </li> <li> <p>Submit a <code>GET Streaming
        Distribution Config</code> request to get the current configuration and
        the <code>Etag</code> header for the distribution. </p> </li> <li>
        <p>Update the XML document that was returned in the response to your
        <code>GET Streaming Distribution Config</code> request to change the
        value of <code>Enabled</code> to <code>false</code>.</p> </li> <li>
        <p>Submit a <code>PUT Streaming Distribution Config</code> request to
        update the configuration for your distribution. In the request body,
        include the XML document that you updated in Step 3. Then set the value
        of the HTTP <code>If-Match</code> header to the value of the
        <code>ETag</code> header that CloudFront returned when you submitted the
        <code>GET Streaming Distribution Config</code> request in Step 2.</p>
        </li> <li> <p>Review the response to the <code>PUT Streaming
        Distribution Config</code> request to confirm that the distribution was
        successfully disabled.</p> </li> <li> <p>Submit a <code>GET Streaming
        Distribution Config</code> request to confirm that your changes have
        propagated. When propagation is complete, the value of
        <code>Status</code> is <code>Deployed</code>.</p> </li> <li> <p>Submit a
        <code>DELETE Streaming Distribution</code> request. Set the value of the
        HTTP <code>If-Match</code> header to the value of the <code>ETag</code>
        header that CloudFront returned when you submitted the <code>GET
        Streaming Distribution Config</code> request in Step 2.</p> </li> <li>
        <p>Review the response to your <code>DELETE Streaming
        Distribution</code> request to confirm that the distribution was
        successfully deleted.</p> </li> </ol> <p>For information about deleting
        a distribution using the CloudFront console, see <a
        href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html">Deleting
        a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
      operationId: DeleteStreamingDistribution2018_06_18
      parameters:
        - description: 'The distribution ID. '
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when you
            disabled the streaming distribution. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: StreamingDistributionNotDisabled
          schema:
            $ref: '#/definitions/StreamingDistributionNotDisabled'
        '482':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '483':
          description: NoSuchStreamingDistribution
          schema:
            $ref: '#/definitions/NoSuchStreamingDistribution'
        '484':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
    get:
      description: >-
        Gets information about a specified RTMP distribution, including the
        distribution configuration.
      operationId: GetStreamingDistribution2018_06_18
      parameters:
        - description: The streaming distribution's ID.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStreamingDistributionResult'
        '480':
          description: NoSuchStreamingDistribution
          schema:
            $ref: '#/definitions/NoSuchStreamingDistribution'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2018-06-18/streaming-distribution/{Id}/config':
    get:
      description: 'Get the configuration information about a streaming distribution. '
      operationId: GetStreamingDistributionConfig2018_06_18
      parameters:
        - description: The streaming distribution's ID.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStreamingDistributionConfigResult'
        '480':
          description: NoSuchStreamingDistribution
          schema:
            $ref: '#/definitions/NoSuchStreamingDistribution'
        '481':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - text/xml
      description: 'Update a streaming distribution. '
      operationId: UpdateStreamingDistribution2018_06_18
      parameters:
        - description: The streaming distribution's id.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            The value of the <code>ETag</code> header that you received when
            retrieving the streaming distribution's configuration. For example:
            <code>E2QWRUHAPOMQZL</code>.
          in: header
          name: If-Match
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              StreamingDistributionConfig:
                description: The RTMP distribution's configuration information.
                properties:
                  Aliases:
                    allOf:
                      - $ref: '#/definitions/Aliases'
                      - description: >-
                          A complex type that contains information about CNAMEs
                          (alternate domain names), if any, for this streaming
                          distribution. 
                  CallerReference:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          A unique number that ensures that the request can't be
                          replayed. If the <code>CallerReference</code> is new
                          (no matter the content of the
                          <code>StreamingDistributionConfig</code> object), a
                          new streaming distribution is created. If the
                          <code>CallerReference</code> is a value that you
                          already sent in a previous request to create a
                          streaming distribution, and the content of the
                          <code>StreamingDistributionConfig</code> is identical
                          to the original request (ignoring white space), the
                          response includes the same information returned to the
                          original request. If the <code>CallerReference</code>
                          is a value that you already sent in a previous request
                          to create a streaming distribution but the content of
                          the <code>StreamingDistributionConfig</code> is
                          different from the original request, CloudFront
                          returns a <code>DistributionAlreadyExists</code>
                          error. 
                  Comment:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          Any comments you want to include about the streaming
                          distribution. 
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/boolean'
                      - description: >-
                          Whether the streaming distribution is enabled to
                          accept user requests for content.
                  Logging:
                    allOf:
                      - $ref: '#/definitions/StreamingLoggingConfig'
                      - description: >-
                          A complex type that controls whether access logs are
                          written for the streaming distribution. 
                  PriceClass:
                    allOf:
                      - $ref: '#/definitions/PriceClass'
                      - description: >-
                          A complex type that contains information about price
                          class for this streaming distribution. 
                  S3Origin:
                    allOf:
                      - $ref: '#/definitions/S3Origin'
                      - description: >-
                          A complex type that contains information about the
                          Amazon S3 bucket from which you want CloudFront to get
                          your media files for distribution. 
                  TrustedSigners:
                    allOf:
                      - $ref: '#/definitions/TrustedSigners'
                      - description: >-
                          A complex type that specifies any AWS accounts that
                          you want to permit to create signed URLs for private
                          content. If you want the distribution to use signed
                          URLs, include this element; if you want the
                          distribution to use public URLs, remove this element.
                          For more information, see <a
                          href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving
                          Private Content through CloudFront</a> in the
                          <i>Amazon CloudFront Developer Guide</i>. 
                type: object
            required:
              - StreamingDistributionConfig
            type: object
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamingDistributionResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: CNAMEAlreadyExists
          schema:
            $ref: '#/definitions/CNAMEAlreadyExists'
        '482':
          description: IllegalUpdate
          schema:
            $ref: '#/definitions/IllegalUpdate'
        '483':
          description: InvalidIfMatchVersion
          schema:
            $ref: '#/definitions/InvalidIfMatchVersion'
        '484':
          description: MissingBody
          schema:
            $ref: '#/definitions/MissingBody'
        '485':
          description: NoSuchStreamingDistribution
          schema:
            $ref: '#/definitions/NoSuchStreamingDistribution'
        '486':
          description: PreconditionFailed
          schema:
            $ref: '#/definitions/PreconditionFailed'
        '487':
          description: TooManyStreamingDistributionCNAMEs
          schema:
            $ref: '#/definitions/TooManyStreamingDistributionCNAMEs'
        '488':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '489':
          description: InvalidOriginAccessIdentity
          schema:
            $ref: '#/definitions/InvalidOriginAccessIdentity'
        '490':
          description: TooManyTrustedSigners
          schema:
            $ref: '#/definitions/TooManyTrustedSigners'
        '491':
          description: TrustedSignerDoesNotExist
          schema:
            $ref: '#/definitions/TrustedSignerDoesNotExist'
        '492':
          description: InconsistentQuantities
          schema:
            $ref: '#/definitions/InconsistentQuantities'
  /2018-06-18/tagging#Operation=Tag&Resource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Add tags to a CloudFront resource.
      operationId: TagResource2018_06_18
      parameters:
        - description: ' An ARN of a CloudFront resource.'
          in: query
          name: Resource
          pattern: 'arn:aws:cloudfront::[0-9]+:.*'
          required: true
          type: string
        - enum:
            - Tag
          in: query
          name: Operation
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                description: ' A complex type that contains zero or more <code>Tag</code> elements.'
                properties:
                  Items:
                    allOf:
                      - $ref: '#/definitions/TagList'
                      - description: ' A complex type that contains <code>Tag</code> elements.'
                type: object
            required:
              - Tags
            type: object
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: InvalidTagging
          schema:
            $ref: '#/definitions/InvalidTagging'
        '483':
          description: NoSuchResource
          schema:
            $ref: '#/definitions/NoSuchResource'
  /2018-06-18/tagging#Operation=Untag&Resource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - text/xml
      description: Remove tags from a CloudFront resource.
      operationId: UntagResource2018_06_18
      parameters:
        - description: ' An ARN of a CloudFront resource.'
          in: query
          name: Resource
          pattern: 'arn:aws:cloudfront::[0-9]+:.*'
          required: true
          type: string
        - enum:
            - Untag
          in: query
          name: Operation
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              TagKeys:
                description: ' A complex type that contains zero or more <code>Tag</code> elements.'
                properties:
                  Items:
                    allOf:
                      - $ref: '#/definitions/TagKeyList'
                      - description: ' A complex type that contains <code>Tag</code> key elements.'
                type: object
            required:
              - TagKeys
            type: object
      produces:
        - text/xml
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: InvalidTagging
          schema:
            $ref: '#/definitions/InvalidTagging'
        '483':
          description: NoSuchResource
          schema:
            $ref: '#/definitions/NoSuchResource'
  /2018-06-18/tagging#Resource:
    get:
      description: List tags for a CloudFront resource.
      operationId: ListTagsForResource2018_06_18
      parameters:
        - description: ' An ARN of a CloudFront resource.'
          in: query
          name: Resource
          pattern: 'arn:aws:cloudfront::[0-9]+:.*'
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: AccessDenied
          schema:
            $ref: '#/definitions/AccessDenied'
        '481':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '482':
          description: InvalidTagging
          schema:
            $ref: '#/definitions/InvalidTagging'
        '483':
          description: NoSuchResource
          schema:
            $ref: '#/definitions/NoSuchResource'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - https
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

