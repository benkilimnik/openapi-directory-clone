basePath: /
definitions:
  BadRequestException: {}
  CreateGroupInput:
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/GroupConfigurationList'
          - description: >-
              <p>A configuration associates the resource group with an AWS
              service and specifies how the service can interact with the
              resources in the group. A configuration is an array of
              <a>GroupConfigurationItem</a> elements. For details about the
              syntax of service configurations, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
              configurations for resource groups</a>.</p> <note> <p>A resource
              group can contain either a <code>Configuration</code> or a
              <code>ResourceQuery</code>, but not both.</p> </note>
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              The description of the resource group. Descriptions can consist of
              letters, numbers, hyphens, underscores, periods, and spaces.
      Name:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              The name of the group, which is the identifier of the group in
              other operations. You can't change the name of a resource group
              after you create it. A resource group name can consist of letters,
              numbers, hyphens, periods, and underscores. The name cannot start
              with <code>AWS</code> or <code>aws</code>; these are reserved. A
              resource group name must be unique within each AWS Region in your
              AWS account.
      ResourceQuery:
        allOf:
          - $ref: '#/definitions/ResourceQuery'
          - description: >-
              <p>The resource query that determines which AWS resources are
              members of this group. For more information about resource
              queries, see <a
              href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
              a tag-based group in Resource Groups</a>. </p> <note> <p>A
              resource group can contain either a <code>ResourceQuery</code> or
              a <code>Configuration</code>, but not both.</p> </note>
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: The tags to add to the group. A tag is key-value pair string.
    required:
      - Name
    title: CreateGroupInput
    type: object
  CreateGroupOutput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/Group'
          - description: The description of the resource group.
      GroupConfiguration:
        allOf:
          - $ref: '#/definitions/GroupConfiguration'
          - description: >-
              The service configuration associated with the resource group. For
              details about the syntax of a service configuration, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
              configurations for resource groups</a>.
      ResourceQuery:
        allOf:
          - $ref: '#/definitions/ResourceQuery'
          - description: >-
              The resource query associated with the group. For more information
              about resource queries, see <a
              href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
              a tag-based group in Resource Groups</a>. 
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: The tags associated with the group.
    type: object
  DeleteGroupInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to delete.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              Deprecated - don't use this parameter. Use <code>Group</code>
              instead.This field is deprecated, use Group instead.
            x-deprecated: true
    title: DeleteGroupInput
    type: object
  DeleteGroupOutput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/Group'
          - description: A full description of the deleted resource group.
    type: object
  Description:
    maxLength: 512
    pattern: '[\sa-zA-Z0-9_\.-]*'
    type: string
  ErrorCode:
    maxLength: 128
    minLength: 1
    type: string
  ErrorMessage:
    maxLength: 1024
    minLength: 1
    type: string
  FailedResource:
    description: A resource that failed to be added to or removed from a group.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code associated with the failure.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: The error message text associated with the failure.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The ARN of the resource that failed to be added or removed.
    type: object
  FailedResourceList:
    items:
      $ref: '#/definitions/FailedResource'
    type: array
  ForbiddenException: {}
  GetGroupConfigurationInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group.
    title: GetGroupConfigurationInput
    type: object
  GetGroupConfigurationOutput:
    properties:
      GroupConfiguration:
        allOf:
          - $ref: '#/definitions/GroupConfiguration'
          - description: >-
              The service configuration associated with the specified group. For
              details about the service configuration syntax, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
              configurations for resource groups</a>.
    type: object
  GetGroupInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to retrieve.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              Deprecated - don't use this parameter. Use <code>Group</code>
              instead.This field is deprecated, use Group instead.
            x-deprecated: true
    title: GetGroupInput
    type: object
  GetGroupOutput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/Group'
          - description: A full description of the resource group.
    type: object
  GetGroupQueryInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to query.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              Don't use this parameter. Use <code>Group</code> instead.This
              field is deprecated, use Group instead.
            x-deprecated: true
    title: GetGroupQueryInput
    type: object
  GetGroupQueryOutput:
    properties:
      GroupQuery:
        allOf:
          - $ref: '#/definitions/GroupQuery'
          - description: >-
              The resource query associated with the specified group. For more
              information about resource queries, see <a
              href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
              a tag-based group in Resource Groups</a>.
    type: object
  GetTagsInput:
    properties: {}
    title: GetTagsInput
    type: object
  GetTagsOutput:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/GroupArn'
          - description: The ARN of the tagged resource group.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: The tags associated with the specified resource group.
    type: object
  Group:
    description: >-
      <p>A resource group that contains AWS resources. You can assign resources
      to the group by associating either of the following elements with the
      group:</p> <ul> <li> <p> <a>ResourceQuery</a> - Use a resource query to
      specify a set of tag keys and values. All resources in the same AWS Region
      and AWS account that have those keys with the same values are included in
      the group. You can add a resource query when you create the group, or
      later by using the <a>PutGroupConfiguration</a> operation.</p> </li> <li>
      <p> <a>GroupConfiguration</a> - Use a service configuration to associate
      the group with an AWS service. The configuration specifies which resource
      types can be included in the group.</p> </li> </ul>
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource group.
      GroupArn:
        allOf:
          - $ref: '#/definitions/GroupArn'
          - description: The ARN of the resource group.
      Name:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: The name of the resource group.
    required:
      - GroupArn
      - Name
    type: object
  GroupArn:
    maxLength: 1600
    minLength: 12
    pattern: >-
      arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
    type: string
  GroupConfiguration:
    description: >-
      A service configuration associated with a resource group. The
      configuration options are determined by the AWS service that defines the
      <code>Type</code>, and specifies which resources can be included in the
      group. You can add a service configuration when you create the group by
      using <a>CreateGroup</a>, or later by using the
      <a>PutGroupConfiguration</a> operation. For details about group service
      configuration syntax, see <a
      href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
      configurations for resource groups</a>.
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/GroupConfigurationList'
          - description: >-
              The configuration currently associated with the group and in
              effect.
      FailureReason:
        allOf:
          - $ref: '#/definitions/GroupConfigurationFailureReason'
          - description: >-
              If present, the reason why a request to update the group
              configuration failed.
      ProposedConfiguration:
        allOf:
          - $ref: '#/definitions/GroupConfigurationList'
          - description: >-
              If present, the new configuration that is in the process of being
              applied to the group.
      Status:
        allOf:
          - $ref: '#/definitions/GroupConfigurationStatus'
          - description: >-
              The current status of an attempt to update the group
              configuration.
    type: object
  GroupConfigurationFailureReason:
    type: string
  GroupConfigurationItem:
    description: >-
      An item in a group configuration. A group service configuration can have
      one or more items. For details about group service configuration syntax,
      see <a
      href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
      configurations for resource groups</a>.
    properties:
      Parameters:
        allOf:
          - $ref: '#/definitions/GroupParameterList'
          - description: >-
              A collection of parameters for this group configuration item. For
              the list of parameters that you can use with each configuration
              item type, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported
              resource types and parameters</a>.
      Type:
        allOf:
          - $ref: '#/definitions/GroupConfigurationType'
          - description: >-
              Specifies the type of group configuration item. Each item must
              have a unique value for <code>type</code>. For the list of types
              that you can specify for a configuration item, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported
              resource types and parameters</a>.
    required:
      - Type
    type: object
  GroupConfigurationList:
    items:
      $ref: '#/definitions/GroupConfigurationItem'
    maxItems: 2
    type: array
  GroupConfigurationParameter:
    description: >-
      A parameter for a group configuration item. For details about group
      service configuration syntax, see <a
      href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
      configurations for resource groups</a>.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/GroupConfigurationParameterName'
          - description: >-
              The name of the group configuration parameter. For the list of
              parameters that you can use with each configuration item type, see
              <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported
              resource types and parameters</a>.
      Values:
        allOf:
          - $ref: '#/definitions/GroupConfigurationParameterValueList'
          - description: >-
              The value or values to be used for the specified parameter. For
              the list of values you can use with each parameter, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported
              resource types and parameters</a>.
    required:
      - Name
    type: object
  GroupConfigurationParameterName:
    maxLength: 80
    minLength: 1
    pattern: '[a-z-]+'
    type: string
  GroupConfigurationParameterValue:
    maxLength: 256
    minLength: 1
    pattern: '[a-zA-Z0-9:_-]+'
    type: string
  GroupConfigurationParameterValueList:
    items:
      $ref: '#/definitions/GroupConfigurationParameterValue'
    type: array
  GroupConfigurationStatus:
    enum:
      - UPDATING
      - UPDATE_COMPLETE
      - UPDATE_FAILED
    type: string
  GroupConfigurationType:
    maxLength: 40
    pattern: 'AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+'
    type: string
  GroupFilter:
    description: >-
      A filter collection that you can use to restrict the results from a
      <code>List</code> operation to only those you want to include.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/GroupFilterName'
          - description: The name of the filter. Filter names are case-sensitive.
      Values:
        allOf:
          - $ref: '#/definitions/GroupFilterValues'
          - description: >-
              One or more filter values. Allowed filter values vary by group
              filter name, and are case-sensitive.
    required:
      - Name
      - Values
    type: object
  GroupFilterList:
    items:
      $ref: '#/definitions/GroupFilter'
    type: array
  GroupFilterName:
    enum:
      - resource-type
      - configuration-type
    type: string
  GroupFilterValue:
    maxLength: 128
    minLength: 1
    pattern: 'AWS::(AllSupported|[a-zA-Z0-9]+::[a-zA-Z0-9]+)'
    type: string
  GroupFilterValues:
    items:
      $ref: '#/definitions/GroupFilterValue'
    maxItems: 5
    minItems: 1
    type: array
  GroupIdentifier:
    description: The unique identifiers for a resource group.
    properties:
      GroupArn:
        allOf:
          - $ref: '#/definitions/GroupArn'
          - description: The ARN of the resource group.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: The name of the resource group.
    type: object
  GroupIdentifierList:
    items:
      $ref: '#/definitions/GroupIdentifier'
    type: array
  GroupList:
    items:
      $ref: '#/definitions/Group'
    type: array
  GroupName:
    maxLength: 128
    minLength: 1
    pattern: '[a-zA-Z0-9_\.-]+'
    type: string
  GroupParameterList:
    items:
      $ref: '#/definitions/GroupConfigurationParameter'
    type: array
  GroupQuery:
    description: >-
      A mapping of a query attached to a resource group that determines the AWS
      resources that are members of the group.
    properties:
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              The name of the resource group that is associated with the
              specified resource query.
      ResourceQuery:
        allOf:
          - $ref: '#/definitions/ResourceQuery'
          - description: >-
              The resource query that determines which AWS resources are members
              of the associated resource group.
    required:
      - GroupName
      - ResourceQuery
    type: object
  GroupResourcesInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to add resources to.
      ResourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: 'The list of ARNs for resources to be added to the group. '
    required:
      - Group
      - ResourceArns
    title: GroupResourcesInput
    type: object
  GroupResourcesOutput:
    properties:
      Failed:
        allOf:
          - $ref: '#/definitions/FailedResourceList'
          - description: >-
              A list of ARNs of any resources that failed to be added to the
              group by this operation.
      Pending:
        allOf:
          - $ref: '#/definitions/PendingResourceList'
          - description: >-
              A list of ARNs of any resources that are still in the process of
              being added to the group by this operation. These pending
              additions continue asynchronously. You can check the status of
              pending additions by using the <code> <a>ListGroupResources</a>
              </code> operation, and checking the <code>Resources</code> array
              in the response and the <code>Status</code> field of each object
              in that array. 
      Succeeded:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: >-
              A list of ARNs of resources that were successfully added to the
              group by this operation.
    type: object
  GroupString:
    maxLength: 1600
    minLength: 1
    pattern: >-
      (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
    type: string
  InternalServerErrorException: {}
  ListGroupResourcesInput:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/ResourceFilterList'
          - description: >-
              <p>Filters, formatted as <a>ResourceFilter</a> objects, that you
              want to apply to a <code>ListGroupResources</code> operation.
              Filters the results to include only those of the specified
              resource types.</p> <ul> <li> <p> <code>resource-type</code> -
              Filter resources by their type. Specify up to five resource types
              in the format <code>AWS::ServiceCode::ResourceType</code>. For
              example, <code>AWS::EC2::Instance</code>, or
              <code>AWS::S3::Bucket</code>. </p> </li> </ul> <p>When you specify
              a <code>resource-type</code> filter for
              <code>ListGroupResources</code>, AWS Resource Groups validates
              your filter resource types against the types that are defined in
              the query associated with the group. For example, if a group
              contains only S3 buckets because its query specifies only that
              resource type, but your <code>resource-type</code> filter includes
              EC2 instances, AWS Resource Groups does not filter for EC2
              instances. In this case, a <code>ListGroupResources</code> request
              returns a <code>BadRequestException</code> error with a message
              similar to the following:</p> <p> <code>The resource types
              specified as filters in the request are not valid.</code> </p>
              <p>The error includes a list of resource types that failed the
              validation because they are not part of the query associated with
              the group. This validation doesn't occur when the group query
              specifies <code>AWS::AllSupported</code>, because a group based on
              such a query can contain any of the allowed resource types for the
              query type (tag-based or AWS CloudFormation stack-based
              queries).</p>
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              <important> <p> <i> <b>Deprecated - don't use this parameter. Use
              the <code>Group</code> request field instead.</b> </i> </p>
              </important>This field is deprecated, use Group instead.
            x-deprecated: true
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The total number of results that you want included on each page of
              the response. If you do not include this parameter, it defaults to
              a value that is specific to the operation. If additional items
              exist beyond the maximum you specify, the <code>NextToken</code>
              response element is present and has a value (is not null). Include
              that value as the <code>NextToken</code> request parameter in the
              next call to the operation to get the next part of the results.
              Note that the service might return fewer results than the maximum
              even when there are more results available. You should check
              <code>NextToken</code> after every operation to ensure that you
              receive all of the results.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The parameter for receiving additional results if you receive a
              <code>NextToken</code> response in a previous request. A
              <code>NextToken</code> response indicates that more output is
              available. Set this parameter to the value provided by a previous
              call's <code>NextToken</code> response to indicate where the
              output should continue from.
    title: ListGroupResourcesInput
    type: object
  ListGroupResourcesItem:
    description: >-
      A structure returned by the <a>ListGroupResources</a> operation that
      contains identity and group membership status information for one of the
      resources in the group.
    properties:
      Identifier:
        $ref: '#/definitions/ResourceIdentifier'
      Status:
        allOf:
          - $ref: '#/definitions/ResourceStatus'
          - description: >-
              <p>A structure that contains the status of this resource's
              membership in the group.</p> <note> <p>This field is present in
              the response only if the group is of type
              <code>AWS::EC2::HostManagement</code>.</p> </note>
    type: object
  ListGroupResourcesItemList:
    items:
      $ref: '#/definitions/ListGroupResourcesItem'
    type: array
  ListGroupResourcesOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If present, indicates that more output is available than is
              included in the current response. Use this value in the
              <code>NextToken</code> request parameter in a subsequent call to
              the operation to get the next part of the output. You should
              repeat this until the <code>NextToken</code> response element
              comes back as <code>null</code>.
      QueryErrors:
        allOf:
          - $ref: '#/definitions/QueryErrorList'
          - description: >-
              A list of <code>QueryError</code> objects. Each error is an object
              that contains <code>ErrorCode</code> and <code>Message</code>
              structures. Possible values for <code>ErrorCode</code> are
              <code>CLOUDFORMATION_STACK_INACTIVE</code> and
              <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.
      ResourceIdentifiers:
        allOf:
          - $ref: '#/definitions/ResourceIdentifierList'
          - description: >-
              <important> <p> <b> <i>Deprecated - don't use this parameter. Use
              the <code>Resources</code> response field instead.</i> </b> </p>
              </important>This field is deprecated, use Resources instead.
            x-deprecated: true
      Resources:
        allOf:
          - $ref: '#/definitions/ListGroupResourcesItemList'
          - description: >-
              An array of resources from which you can determine each resource's
              identity, type, and group membership status.
    type: object
  ListGroupsInput:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/GroupFilterList'
          - description: >-
              <p>Filters, formatted as <a>GroupFilter</a> objects, that you want
              to apply to a <code>ListGroups</code> operation.</p> <ul> <li> <p>
              <code>resource-type</code> - Filter the results to include only
              those of the specified resource types. Specify up to five resource
              types in the format
              <code>AWS::<i>ServiceCode</i>::<i>ResourceType</i> </code>. For
              example, <code>AWS::EC2::Instance</code>, or
              <code>AWS::S3::Bucket</code>.</p> </li> <li> <p>
              <code>configuration-type</code> - Filter the results to include
              only those groups that have the specified configuration types
              attached. The current supported values are:</p> <ul> <li> <p>
              <code>AWS:EC2::CapacityReservationPool</code> </p> </li> <li> <p>
              <code>AWS:EC2::HostManagement</code> </p> </li> </ul> </li> </ul>
    title: ListGroupsInput
    type: object
  ListGroupsOutput:
    properties:
      GroupIdentifiers:
        allOf:
          - $ref: '#/definitions/GroupIdentifierList'
          - description: >-
              A list of <a>GroupIdentifier</a> objects. Each identifier is an
              object that contains both the <code>Name</code> and the
              <code>GroupArn</code>.
      Groups:
        allOf:
          - $ref: '#/definitions/GroupList'
          - description: >-
              <important> <p> <i> <b>Deprecated - don't use this field. Use the
              <code>GroupIdentifiers</code> response field instead.</b> </i>
              </p> </important>This field is deprecated, use GroupIdentifiers
              instead.
            x-deprecated: true
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If present, indicates that more output is available than is
              included in the current response. Use this value in the
              <code>NextToken</code> request parameter in a subsequent call to
              the operation to get the next part of the output. You should
              repeat this until the <code>NextToken</code> response element
              comes back as <code>null</code>.
    type: object
  MaxResults:
    maximum: 50
    minimum: 1
    type: integer
  MethodNotAllowedException: {}
  NextToken:
    maxLength: 8192
    minLength: 0
    pattern: '^[a-zA-Z0-9+/]*={0,2}$'
    type: string
  NotFoundException: {}
  PendingResource:
    description: >-
      A structure that identifies a resource that is currently pending addition
      to the group as a member. Adding a resource to a resource group happens
      asynchronously as a background task and this one isn't completed yet.
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon resource name (ARN) of the resource that's in a pending
              state.
    type: object
  PendingResourceList:
    items:
      $ref: '#/definitions/PendingResource'
    type: array
  PutGroupConfigurationInput:
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/GroupConfigurationList'
          - description: >-
              <p>The new configuration to associate with the specified group. A
              configuration associates the resource group with an AWS service
              and specifies how the service can interact with the resources in
              the group. A configuration is an array of
              <a>GroupConfigurationItem</a> elements.</p> <p>For information
              about the syntax of a service configuration, see <a
              href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
              configurations for resource groups</a>.</p> <note> <p>A resource
              group can contain either a <code>Configuration</code> or a
              <code>ResourceQuery</code>, but not both.</p> </note>
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: >-
              The name or ARN of the resource group with the configuration that
              you want to update.
    title: PutGroupConfigurationInput
    type: object
  PutGroupConfigurationOutput:
    properties: {}
    type: object
  Query:
    maxLength: 4096
    pattern: '[\s\S]*'
    type: string
  QueryError:
    description: >-
      A two-part error structure that can occur in
      <code>ListGroupResources</code> or <code>SearchResources</code> operations
      on CloudFormation stack-based queries. The error occurs if the
      CloudFormation stack on which the query is based either does not exist, or
      has a status that renders the stack inactive. A <code>QueryError</code>
      occurrence does not necessarily mean that AWS Resource Groups could not
      complete the operation, but the resulting group might have no member
      resources.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/QueryErrorCode'
          - description: >-
              Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and
              <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.
      Message:
        allOf:
          - $ref: '#/definitions/QueryErrorMessage'
          - description: >-
              A message that explains the <code>ErrorCode</code> value. Messages
              might state that the specified CloudFormation stack does not exist
              (or no longer exists). For
              <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically
              states that the CloudFormation stack has a status that is not (or
              no longer) active, such as <code>CREATE_FAILED</code>.
    type: object
  QueryErrorCode:
    enum:
      - CLOUDFORMATION_STACK_INACTIVE
      - CLOUDFORMATION_STACK_NOT_EXISTING
    type: string
  QueryErrorList:
    items:
      $ref: '#/definitions/QueryError'
    type: array
  QueryErrorMessage:
    type: string
  QueryType:
    enum:
      - TAG_FILTERS_1_0
      - CLOUDFORMATION_STACK_1_0
    maxLength: 128
    minLength: 1
    pattern: ^\w+$
    type: string
  ResourceArn:
    pattern: 'arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}(-[a-z]+)+-\d{1})?:([0-9]{12})?:.+'
    type: string
  ResourceArnList:
    items:
      $ref: '#/definitions/ResourceArn'
    maxItems: 10
    minItems: 1
    type: array
  ResourceFilter:
    description: >-
      A filter name and value pair that is used to obtain more specific results
      from a list of resources.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ResourceFilterName'
          - description: The name of the filter. Filter names are case-sensitive.
      Values:
        allOf:
          - $ref: '#/definitions/ResourceFilterValues'
          - description: >-
              One or more filter values. Allowed filter values vary by resource
              filter name, and are case-sensitive.
    required:
      - Name
      - Values
    type: object
  ResourceFilterList:
    items:
      $ref: '#/definitions/ResourceFilter'
    type: array
  ResourceFilterName:
    enum:
      - resource-type
    type: string
  ResourceFilterValue:
    maxLength: 128
    minLength: 1
    pattern: 'AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+'
    type: string
  ResourceFilterValues:
    items:
      $ref: '#/definitions/ResourceFilterValue'
    maxItems: 5
    minItems: 1
    type: array
  ResourceIdentifier:
    description: A structure that contains the ARN of a resource and its resource type.
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The ARN of a resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The resource type of a resource, such as
              <code>AWS::EC2::Instance</code>.
    type: object
  ResourceIdentifierList:
    items:
      $ref: '#/definitions/ResourceIdentifier'
    type: array
  ResourceQuery:
    description: >-
      <p>The query that is used to define a resource group or a search for
      resources. A query specifies both a query type and a query string as a
      JSON object. See the examples section for example JSON strings.</p> <p>The
      examples that follow are shown as standard JSON strings. If you include
      such a string as a parameter to the AWS CLI or an SDK API, you might need
      to 'escape' the string into a single line. For example, see the <a
      href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html">Quoting
      strings</a> in the <i>AWS CLI User Guide</i>.</p> <p> <b>Example 1</b>
      </p> <p>The following generic example shows a resource query JSON string
      that includes only resources that meet the following criteria:</p> <ul>
      <li> <p>The resource type must be either <code>resource_type1</code> or
      <code>resource_type2</code>.</p> </li> <li> <p>The resource must have a
      tag <code>Key1</code> with a value of either <code>ValueA</code> or
      <code>ValueB</code>.</p> </li> <li> <p>The resource must have a tag
      <code>Key2</code> with a value of either <code>ValueC</code> or
      <code>ValueD</code>.</p> </li> </ul> <p> <code>{ "Type":
      "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1",
      "resource_type2"], "TagFilters": [ { "Key": "Key1", "Values":
      ["ValueA","ValueB"] }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] }
      }</code> </p> <p>This has the equivalent "shortcut" syntax of the
      following:</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
      "ResourceTypeFilters": [ "resource_type1", "resource_type2"],
      "TagFilters": [ { "Key1": ["ValueA","ValueB"] }, { "Key2":
      ["ValueC","ValueD"] } ] } }</code> </p> <p> <b>Example 2</b> </p> <p>The
      following example shows a resource query JSON string that includes only
      Amazon EC2 instances that are tagged <code>Stage</code> with a value of
      <code>Test</code>.</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": "{
      "ResourceTypeFilters": "AWS::EC2::Instance", "TagFilters": { "Stage":
      "Test" } } }</code> </p> <p> <b>Example 3</b> </p> <p>The following
      example shows a resource query JSON string that includes resource of any
      supported type as long as it is tagged <code>Stage</code> with a value of
      <code>Prod</code>.</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
      "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": { "Stage":
      "Prod" } } }</code> </p> <p> <b>Example 4</b> </p> <p>The following
      example shows a resource query JSON string that includes only Amazon EC2
      instances and Amazon S3 buckets that are part of the specified AWS
      CloudFormation stack.</p> <p> <code>{ "Type": "CLOUDFORMATION_STACK_1_0",
      "Query": { "ResourceTypeFilters": [ "AWS::EC2::Instance",
      "AWS::S3::Bucket" ], "StackIdentifier":
      "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE"
      } }</code> </p>
    properties:
      Query:
        allOf:
          - $ref: '#/definitions/Query'
          - description: The query that defines a group or a search.
      Type:
        allOf:
          - $ref: '#/definitions/QueryType'
          - description: >-
              <p>The type of the query. You can use the following values:</p>
              <ul> <li> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code>
              </i>Specifies that the <code>Query</code> contains an ARN for a
              CloudFormation stack.</p> </li> <li> <p> <i>
              <code>TAG_FILTERS_1_0:</code> </i>Specifies that the
              <code>Query</code> parameter contains a JSON string that
              represents a collection of simple tag filters for resource types
              and tags. The JSON string uses a syntax similar to the <code> <a
              href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a>
              </code> operation, but uses only the <code> <a
              href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters">
              ResourceTypeFilters</a> </code> and <code> <a
              href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters">TagFilters</a>
              </code> fields. If you specify more than one tag key, only
              resources that match all tag keys, and at least one value of each
              specified tag key, are returned in your query. If you specify more
              than one value for a tag key, a resource matches the filter if it
              has a tag key value that matches <i>any</i> of the specified
              values.</p> <p>For example, consider the following sample query
              for resources that have two tags, <code>Stage</code> and
              <code>Version</code>, with two values each:</p> <p>
              <code>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</code>
              </p> <p>The results of this query could include the following.</p>
              <ul> <li> <p>An EC2 instance that has the following two tags:
              <code>{"Stage":"Deploy"}</code>, and <code>{"Version":"2"}</code>
              </p> </li> <li> <p>An S3 bucket that has the following two tags:
              <code>{"Stage":"Test"}</code>, and <code>{"Version":"1"}</code>
              </p> </li> </ul> <p>The query would not include the following
              items in the results, however. </p> <ul> <li> <p>An EC2 instance
              that has only the following tag:
              <code>{"Stage":"Deploy"}</code>.</p> <p>The instance does not have
              <b>all</b> of the tag keys specified in the filter, so it is
              excluded from the results.</p> </li> <li> <p>An RDS database that
              has the following two tags: <code>{"Stage":"Archived"}</code> and
              <code>{"Version":"4"}</code> </p> <p>The database has all of the
              tag keys, but none of those keys has an associated value that
              matches at least one of the specified values in the filter.</p>
              </li> </ul> </li> </ul>
    required:
      - Type
      - Query
    type: object
  ResourceStatus:
    description: >-
      A structure that identifies the current group membership status for a
      resource. Adding a resource to a resource group is performed
      asynchronously as a background task. A <code>PENDING</code> status
      indicates, for this resource, that the process isn't completed yet.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ResourceStatusValue'
          - description: The current status.
    type: object
  ResourceStatusValue:
    enum:
      - PENDING
    type: string
  ResourceType:
    pattern: 'AWS::[a-zA-Z0-9]+::\w+'
    type: string
  SearchResourcesInput:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The total number of results that you want included on each page of
              the response. If you do not include this parameter, it defaults to
              a value that is specific to the operation. If additional items
              exist beyond the maximum you specify, the <code>NextToken</code>
              response element is present and has a value (is not null). Include
              that value as the <code>NextToken</code> request parameter in the
              next call to the operation to get the next part of the results.
              Note that the service might return fewer results than the maximum
              even when there are more results available. You should check
              <code>NextToken</code> after every operation to ensure that you
              receive all of the results.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The parameter for receiving additional results if you receive a
              <code>NextToken</code> response in a previous request. A
              <code>NextToken</code> response indicates that more output is
              available. Set this parameter to the value provided by a previous
              call's <code>NextToken</code> response to indicate where the
              output should continue from.
      ResourceQuery:
        allOf:
          - $ref: '#/definitions/ResourceQuery'
          - description: >-
              The search query, using the same formats that are supported for
              resource group definition. For more information, see
              <a>CreateGroup</a>.
    required:
      - ResourceQuery
    title: SearchResourcesInput
    type: object
  SearchResourcesOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If present, indicates that more output is available than is
              included in the current response. Use this value in the
              <code>NextToken</code> request parameter in a subsequent call to
              the operation to get the next part of the output. You should
              repeat this until the <code>NextToken</code> response element
              comes back as <code>null</code>.
      QueryErrors:
        allOf:
          - $ref: '#/definitions/QueryErrorList'
          - description: >-
              A list of <code>QueryError</code> objects. Each error is an object
              that contains <code>ErrorCode</code> and <code>Message</code>
              structures. Possible values for <code>ErrorCode</code> are
              <code>CLOUDFORMATION_STACK_INACTIVE</code> and
              <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.
      ResourceIdentifiers:
        allOf:
          - $ref: '#/definitions/ResourceIdentifierList'
          - description: >-
              The ARNs and resource types of resources that are members of the
              group that you specified.
    type: object
  TagInput:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The tags to add to the specified resource group. A tag is a
              string-to-string map of key-value pairs.
    required:
      - Tags
    title: TagInput
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagOutput:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/GroupArn'
          - description: The ARN of the tagged resource.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: The tags that have been added to the specified resource group.
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    type: object
  TooManyRequestsException: {}
  UnauthorizedException: {}
  UngroupResourcesInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: >-
              The name or the ARN of the resource group from which to remove the
              resources.
      ResourceArns:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: The ARNs of the resources to be removed from the group.
    required:
      - Group
      - ResourceArns
    title: UngroupResourcesInput
    type: object
  UngroupResourcesOutput:
    properties:
      Failed:
        allOf:
          - $ref: '#/definitions/FailedResourceList'
          - description: >-
              A list of any resources that failed to be removed from the group
              by this operation.
      Pending:
        allOf:
          - $ref: '#/definitions/PendingResourceList'
          - description: >-
              A list of any resources that are still in the process of being
              removed from the group by this operation. These pending removals
              continue asynchronously. You can check the status of pending
              removals by using the <code> <a>ListGroupResources</a> </code>
              operation. After the resource is successfully removed, it no
              longer appears in the response.
      Succeeded:
        allOf:
          - $ref: '#/definitions/ResourceArnList'
          - description: >-
              A list of resources that were successfully removed from the group
              by this operation.
    type: object
  UntagInput:
    properties:
      Keys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: The keys of the tags to be removed.
    required:
      - Keys
    title: UntagInput
    type: object
  UntagOutput:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/GroupArn'
          - description: The ARN of the resource group from which tags have been removed.
      Keys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: The keys of the tags that were removed.
    type: object
  UpdateGroupInput:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              The new description that you want to update the resource group
              with. Descriptions can contain letters, numbers, hyphens,
              underscores, periods, and spaces.
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to modify.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              Don't use this parameter. Use <code>Group</code> instead.This
              field is deprecated, use Group instead.
            x-deprecated: true
    title: UpdateGroupInput
    type: object
  UpdateGroupOutput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/Group'
          - description: The update description of the resource group.
    type: object
  UpdateGroupQueryInput:
    properties:
      Group:
        allOf:
          - $ref: '#/definitions/GroupString'
          - description: The name or the ARN of the resource group to query.
      GroupName:
        allOf:
          - $ref: '#/definitions/GroupName'
          - description: >-
              Don't use this parameter. Use <code>Group</code> instead.This
              field is deprecated, use Group instead.
            x-deprecated: true
      ResourceQuery:
        allOf:
          - $ref: '#/definitions/ResourceQuery'
          - description: >-
              <p>The resource query to determine which AWS resources are members
              of this resource group.</p> <note> <p>A resource group can contain
              either a <code>Configuration</code> or a
              <code>ResourceQuery</code>, but not both.</p> </note>
    required:
      - ResourceQuery
    title: UpdateGroupQueryInput
    type: object
  UpdateGroupQueryOutput:
    properties:
      GroupQuery:
        allOf:
          - $ref: '#/definitions/GroupQuery'
          - description: >-
              The updated resource query associated with the resource group
              after the update.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/resource-groups/'
host: resource-groups.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>AWS Resource Groups</fullname> <p>AWS Resource Groups lets you
    organize AWS resources such as Amazon EC2 instances, Amazon Relational
    Database Service databases, and Amazon S3 buckets into groups using criteria
    that you define as tags. A resource group is a collection of resources that
    match the resource types specified in a query, and share one or more tags or
    portions of tags. You can create a group of resources based on their roles
    in your cloud infrastructure, lifecycle stages, regions, application layers,
    or virtually any criteria. Resource Groups enable you to automate management
    tasks, such as those in AWS Systems Manager Automation documents, on
    tag-related resources in AWS Systems Manager. Groups of tagged resources
    also let you quickly view a custom console in AWS Systems Manager that shows
    AWS Config compliance and other monitoring data about member resources.</p>
    <p>To create a resource group, build a resource query, and specify tags that
    identify the criteria that members of the group have in common. Tags are
    key-value pairs.</p> <p>For more information about Resource Groups, see the
    <a href="https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html">AWS
    Resource Groups User Guide</a>.</p> <p>AWS Resource Groups uses a
    REST-compliant API that you can use to perform the following types of
    operations.</p> <ul> <li> <p>Create, Read, Update, and Delete (CRUD)
    operations on resource groups and resource query entities</p> </li> <li>
    <p>Applying, editing, and removing tags from resource groups</p> </li> <li>
    <p>Resolving resource group member ARNs so they can be returned as search
    results</p> </li> <li> <p>Getting data about resources that are members of a
    group</p> </li> <li> <p>Searching AWS resources based on a resource
    query</p> </li> </ul>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Resource Groups
  version: '2017-11-27'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: resource-groups
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resource-groups-2017-11-27.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: resource-groups
paths:
  /delete-group:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified resource group. Deleting a resource group does
        not delete any resources that are members of the group; it only deletes
        the group structure.</p> <p> <b>Minimum permissions</b> </p> <p>To run
        this command, you must have the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:DeleteGroup</code> </p> </li> </ul>
      operationId: DeleteGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group to delete.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: >-
                  Deprecated - don't use this parameter. Use <code>Group</code>
                  instead.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /get-group:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns information about a specified resource group.</p> <p>
        <b>Minimum permissions</b> </p> <p>To run this command, you must have
        the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:GetGroup</code> </p> </li> </ul>
      operationId: GetGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group to retrieve.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: >-
                  Deprecated - don't use this parameter. Use <code>Group</code>
                  instead.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /get-group-configuration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the service configuration associated with the specified
        resource group. For details about the service configuration syntax, see
        <a
        href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
        configurations for resource groups</a>.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p>
        <code>resource-groups:GetGroupConfiguration</code> </p> </li> </ul>
      operationId: GetGroupConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupConfigurationOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /get-group-query:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the resource query associated with the specified resource
        group. For more information about resource queries, see <a
        href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
        a tag-based group in Resource Groups</a>.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p>
        <code>resource-groups:GetGroupQuery</code> </p> </li> </ul>
      operationId: GetGroupQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group to query.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: Don't use this parameter. Use <code>Group</code> instead.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupQueryOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /group-resources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds the specified resources to the specified group.</p> <p>
        <b>Minimum permissions</b> </p> <p>To run this command, you must have
        the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:GroupResources</code> </p> </li> </ul>
      operationId: GroupResources
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group to add resources to.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              ResourceArns:
                description: 'The list of ARNs for resources to be added to the group. '
                items:
                  $ref: '#/definitions/ResourceArn'
                maxItems: 10
                minItems: 1
                type: array
            required:
              - Group
              - ResourceArns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupResourcesOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /groups:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a resource group with the specified name and description. You
        can optionally include a resource query, or a service configuration. For
        more information about constructing a resource query, see <a
        href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
        a tag-based group in Resource Groups</a>. For more information about
        service configurations, see <a
        href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
        configurations for resource groups</a>.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p> <code>resource-groups:CreateGroup</code>
        </p> </li> </ul>
      operationId: CreateGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Configuration:
                description: >-
                  <p>A configuration associates the resource group with an AWS
                  service and specifies how the service can interact with the
                  resources in the group. A configuration is an array of
                  <a>GroupConfigurationItem</a> elements. For details about the
                  syntax of service configurations, see <a
                  href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
                  configurations for resource groups</a>.</p> <note> <p>A
                  resource group can contain either a <code>Configuration</code>
                  or a <code>ResourceQuery</code>, but not both.</p> </note>
                items:
                  $ref: '#/definitions/GroupConfigurationItem'
                maxItems: 2
                type: array
              Description:
                description: >-
                  The description of the resource group. Descriptions can
                  consist of letters, numbers, hyphens, underscores, periods,
                  and spaces.
                maxLength: 512
                pattern: '[\sa-zA-Z0-9_\.-]*'
                type: string
              Name:
                description: >-
                  The name of the group, which is the identifier of the group in
                  other operations. You can't change the name of a resource
                  group after you create it. A resource group name can consist
                  of letters, numbers, hyphens, periods, and underscores. The
                  name cannot start with <code>AWS</code> or <code>aws</code>;
                  these are reserved. A resource group name must be unique
                  within each AWS Region in your AWS account.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
              ResourceQuery:
                description: >-
                  <p>The query that is used to define a resource group or a
                  search for resources. A query specifies both a query type and
                  a query string as a JSON object. See the examples section for
                  example JSON strings.</p> <p>The examples that follow are
                  shown as standard JSON strings. If you include such a string
                  as a parameter to the AWS CLI or an SDK API, you might need to
                  'escape' the string into a single line. For example, see the
                  <a
                  href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html">Quoting
                  strings</a> in the <i>AWS CLI User Guide</i>.</p> <p>
                  <b>Example 1</b> </p> <p>The following generic example shows a
                  resource query JSON string that includes only resources that
                  meet the following criteria:</p> <ul> <li> <p>The resource
                  type must be either <code>resource_type1</code> or
                  <code>resource_type2</code>.</p> </li> <li> <p>The resource
                  must have a tag <code>Key1</code> with a value of either
                  <code>ValueA</code> or <code>ValueB</code>.</p> </li> <li>
                  <p>The resource must have a tag <code>Key2</code> with a value
                  of either <code>ValueC</code> or <code>ValueD</code>.</p>
                  </li> </ul> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": [ "resource_type1", "resource_type2"],
                  "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"]
                  }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }</code>
                  </p> <p>This has the equivalent "shortcut" syntax of the
                  following:</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query":
                  { "ResourceTypeFilters": [ "resource_type1",
                  "resource_type2"], "TagFilters": [ { "Key1":
                  ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] }
                  }</code> </p> <p> <b>Example 2</b> </p> <p>The following
                  example shows a resource query JSON string that includes only
                  Amazon EC2 instances that are tagged <code>Stage</code> with a
                  value of <code>Test</code>.</p> <p> <code>{ "Type":
                  "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters":
                  "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } }
                  }</code> </p> <p> <b>Example 3</b> </p> <p>The following
                  example shows a resource query JSON string that includes
                  resource of any supported type as long as it is tagged
                  <code>Stage</code> with a value of <code>Prod</code>.</p> <p>
                  <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": {
                  "Stage": "Prod" } } }</code> </p> <p> <b>Example 4</b> </p>
                  <p>The following example shows a resource query JSON string
                  that includes only Amazon EC2 instances and Amazon S3 buckets
                  that are part of the specified AWS CloudFormation stack.</p>
                  <p> <code>{ "Type": "CLOUDFORMATION_STACK_1_0", "Query": {
                  "ResourceTypeFilters": [ "AWS::EC2::Instance",
                  "AWS::S3::Bucket" ], "StackIdentifier":
                  "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE"
                  } }</code> </p>
                properties:
                  Query:
                    allOf:
                      - $ref: '#/definitions/Query'
                      - description: The query that defines a group or a search.
                  Type:
                    allOf:
                      - $ref: '#/definitions/QueryType'
                      - description: >-
                          <p>The type of the query. You can use the following
                          values:</p> <ul> <li> <p> <i>
                          <code>CLOUDFORMATION_STACK_1_0:</code> </i>Specifies
                          that the <code>Query</code> contains an ARN for a
                          CloudFormation stack.</p> </li> <li> <p> <i>
                          <code>TAG_FILTERS_1_0:</code> </i>Specifies that the
                          <code>Query</code> parameter contains a JSON string
                          that represents a collection of simple tag filters for
                          resource types and tags. The JSON string uses a syntax
                          similar to the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a>
                          </code> operation, but uses only the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters">
                          ResourceTypeFilters</a> </code> and <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters">TagFilters</a>
                          </code> fields. If you specify more than one tag key,
                          only resources that match all tag keys, and at least
                          one value of each specified tag key, are returned in
                          your query. If you specify more than one value for a
                          tag key, a resource matches the filter if it has a tag
                          key value that matches <i>any</i> of the specified
                          values.</p> <p>For example, consider the following
                          sample query for resources that have two tags,
                          <code>Stage</code> and <code>Version</code>, with two
                          values each:</p> <p>
                          <code>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</code>
                          </p> <p>The results of this query could include the
                          following.</p> <ul> <li> <p>An EC2 instance that has
                          the following two tags:
                          <code>{"Stage":"Deploy"}</code>, and
                          <code>{"Version":"2"}</code> </p> </li> <li> <p>An S3
                          bucket that has the following two tags:
                          <code>{"Stage":"Test"}</code>, and
                          <code>{"Version":"1"}</code> </p> </li> </ul> <p>The
                          query would not include the following items in the
                          results, however. </p> <ul> <li> <p>An EC2 instance
                          that has only the following tag:
                          <code>{"Stage":"Deploy"}</code>.</p> <p>The instance
                          does not have <b>all</b> of the tag keys specified in
                          the filter, so it is excluded from the results.</p>
                          </li> <li> <p>An RDS database that has the following
                          two tags: <code>{"Stage":"Archived"}</code> and
                          <code>{"Version":"4"}</code> </p> <p>The database has
                          all of the tag keys, but none of those keys has an
                          associated value that matches at least one of the
                          specified values in the filter.</p> </li> </ul> </li>
                          </ul>
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to add to the group. A tag is key-value pair string.
                type: object
            required:
              - Name
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /groups-list:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of existing resource groups in your account.</p> <p>
        <b>Minimum permissions</b> </p> <p>To run this command, you must have
        the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:ListGroups</code> </p> </li> </ul>
      operationId: ListGroups
      parameters:
        - description: >-
            The total number of results that you want included on each page of
            the response. If you do not include this parameter, it defaults to a
            value that is specific to the operation. If additional items exist
            beyond the maximum you specify, the <code>NextToken</code> response
            element is present and has a value (is not null). Include that value
            as the <code>NextToken</code> request parameter in the next call to
            the operation to get the next part of the results. Note that the
            service might return fewer results than the maximum even when there
            are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The parameter for receiving additional results if you receive a
            <code>NextToken</code> response in a previous request. A
            <code>NextToken</code> response indicates that more output is
            available. Set this parameter to the value provided by a previous
            call's <code>NextToken</code> response to indicate where the output
            should continue from.
          in: query
          maxLength: 8192
          minLength: 0
          name: nextToken
          pattern: '^[a-zA-Z0-9+/]*={0,2}$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>Filters, formatted as <a>GroupFilter</a> objects, that you
                  want to apply to a <code>ListGroups</code> operation.</p> <ul>
                  <li> <p> <code>resource-type</code> - Filter the results to
                  include only those of the specified resource types. Specify up
                  to five resource types in the format
                  <code>AWS::<i>ServiceCode</i>::<i>ResourceType</i> </code>.
                  For example, <code>AWS::EC2::Instance</code>, or
                  <code>AWS::S3::Bucket</code>.</p> </li> <li> <p>
                  <code>configuration-type</code> - Filter the results to
                  include only those groups that have the specified
                  configuration types attached. The current supported values
                  are:</p> <ul> <li> <p>
                  <code>AWS:EC2::CapacityReservationPool</code> </p> </li> <li>
                  <p> <code>AWS:EC2::HostManagement</code> </p> </li> </ul>
                  </li> </ul>
                items:
                  $ref: '#/definitions/GroupFilter'
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /list-group-resources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of ARNs of the resources that are members of a
        specified resource group.</p> <p> <b>Minimum permissions</b> </p> <p>To
        run this command, you must have the following permissions:</p> <ul> <li>
        <p> <code>resource-groups:ListGroupResources</code> </p> </li> <li> <p>
        <code>cloudformation:DescribeStacks</code> </p> </li> <li> <p>
        <code>cloudformation:ListStackResources</code> </p> </li> <li> <p>
        <code>tag:GetResources</code> </p> </li> </ul>
      operationId: ListGroupResources
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>Filters, formatted as <a>ResourceFilter</a> objects, that
                  you want to apply to a <code>ListGroupResources</code>
                  operation. Filters the results to include only those of the
                  specified resource types.</p> <ul> <li> <p>
                  <code>resource-type</code> - Filter resources by their type.
                  Specify up to five resource types in the format
                  <code>AWS::ServiceCode::ResourceType</code>. For example,
                  <code>AWS::EC2::Instance</code>, or
                  <code>AWS::S3::Bucket</code>. </p> </li> </ul> <p>When you
                  specify a <code>resource-type</code> filter for
                  <code>ListGroupResources</code>, AWS Resource Groups validates
                  your filter resource types against the types that are defined
                  in the query associated with the group. For example, if a
                  group contains only S3 buckets because its query specifies
                  only that resource type, but your <code>resource-type</code>
                  filter includes EC2 instances, AWS Resource Groups does not
                  filter for EC2 instances. In this case, a
                  <code>ListGroupResources</code> request returns a
                  <code>BadRequestException</code> error with a message similar
                  to the following:</p> <p> <code>The resource types specified
                  as filters in the request are not valid.</code> </p> <p>The
                  error includes a list of resource types that failed the
                  validation because they are not part of the query associated
                  with the group. This validation doesn't occur when the group
                  query specifies <code>AWS::AllSupported</code>, because a
                  group based on such a query can contain any of the allowed
                  resource types for the query type (tag-based or AWS
                  CloudFormation stack-based queries).</p>
                items:
                  $ref: '#/definitions/ResourceFilter'
                type: array
              Group:
                description: The name or the ARN of the resource group
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: >-
                  <important> <p> <i> <b>Deprecated - don't use this parameter.
                  Use the <code>Group</code> request field instead.</b> </i>
                  </p> </important>
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
              MaxResults:
                description: >-
                  The total number of results that you want included on each
                  page of the response. If you do not include this parameter, it
                  defaults to a value that is specific to the operation. If
                  additional items exist beyond the maximum you specify, the
                  <code>NextToken</code> response element is present and has a
                  value (is not null). Include that value as the
                  <code>NextToken</code> request parameter in the next call to
                  the operation to get the next part of the results. Note that
                  the service might return fewer results than the maximum even
                  when there are more results available. You should check
                  <code>NextToken</code> after every operation to ensure that
                  you receive all of the results.
                maximum: 50
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  The parameter for receiving additional results if you receive
                  a <code>NextToken</code> response in a previous request. A
                  <code>NextToken</code> response indicates that more output is
                  available. Set this parameter to the value provided by a
                  previous call's <code>NextToken</code> response to indicate
                  where the output should continue from.
                maxLength: 8192
                minLength: 0
                pattern: '^[a-zA-Z0-9+/]*={0,2}$'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupResourcesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /put-group-configuration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Attaches a service configuration to the specified group. This occurs
        asynchronously, and can take time to complete. You can use
        <a>GetGroupConfiguration</a> to check the status of the update.</p> <p>
        <b>Minimum permissions</b> </p> <p>To run this command, you must have
        the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:PutGroupConfiguration</code> </p> </li> </ul>
      operationId: PutGroupConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Configuration:
                description: >-
                  <p>The new configuration to associate with the specified
                  group. A configuration associates the resource group with an
                  AWS service and specifies how the service can interact with
                  the resources in the group. A configuration is an array of
                  <a>GroupConfigurationItem</a> elements.</p> <p>For information
                  about the syntax of a service configuration, see <a
                  href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service
                  configurations for resource groups</a>.</p> <note> <p>A
                  resource group can contain either a <code>Configuration</code>
                  or a <code>ResourceQuery</code>, but not both.</p> </note>
                items:
                  $ref: '#/definitions/GroupConfigurationItem'
                maxItems: 2
                type: array
              Group:
                description: >-
                  The name or ARN of the resource group with the configuration
                  that you want to update.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/PutGroupConfigurationOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /resources/search:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of AWS resource identifiers that matches the specified
        query. The query uses the same format as a resource query in a
        CreateGroup or UpdateGroupQuery operation.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p>
        <code>resource-groups:SearchResources</code> </p> </li> <li> <p>
        <code>cloudformation:DescribeStacks</code> </p> </li> <li> <p>
        <code>cloudformation:ListStackResources</code> </p> </li> <li> <p>
        <code>tag:GetResources</code> </p> </li> </ul>
      operationId: SearchResources
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MaxResults:
                description: >-
                  The total number of results that you want included on each
                  page of the response. If you do not include this parameter, it
                  defaults to a value that is specific to the operation. If
                  additional items exist beyond the maximum you specify, the
                  <code>NextToken</code> response element is present and has a
                  value (is not null). Include that value as the
                  <code>NextToken</code> request parameter in the next call to
                  the operation to get the next part of the results. Note that
                  the service might return fewer results than the maximum even
                  when there are more results available. You should check
                  <code>NextToken</code> after every operation to ensure that
                  you receive all of the results.
                maximum: 50
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  The parameter for receiving additional results if you receive
                  a <code>NextToken</code> response in a previous request. A
                  <code>NextToken</code> response indicates that more output is
                  available. Set this parameter to the value provided by a
                  previous call's <code>NextToken</code> response to indicate
                  where the output should continue from.
                maxLength: 8192
                minLength: 0
                pattern: '^[a-zA-Z0-9+/]*={0,2}$'
                type: string
              ResourceQuery:
                description: >-
                  <p>The query that is used to define a resource group or a
                  search for resources. A query specifies both a query type and
                  a query string as a JSON object. See the examples section for
                  example JSON strings.</p> <p>The examples that follow are
                  shown as standard JSON strings. If you include such a string
                  as a parameter to the AWS CLI or an SDK API, you might need to
                  'escape' the string into a single line. For example, see the
                  <a
                  href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html">Quoting
                  strings</a> in the <i>AWS CLI User Guide</i>.</p> <p>
                  <b>Example 1</b> </p> <p>The following generic example shows a
                  resource query JSON string that includes only resources that
                  meet the following criteria:</p> <ul> <li> <p>The resource
                  type must be either <code>resource_type1</code> or
                  <code>resource_type2</code>.</p> </li> <li> <p>The resource
                  must have a tag <code>Key1</code> with a value of either
                  <code>ValueA</code> or <code>ValueB</code>.</p> </li> <li>
                  <p>The resource must have a tag <code>Key2</code> with a value
                  of either <code>ValueC</code> or <code>ValueD</code>.</p>
                  </li> </ul> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": [ "resource_type1", "resource_type2"],
                  "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"]
                  }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }</code>
                  </p> <p>This has the equivalent "shortcut" syntax of the
                  following:</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query":
                  { "ResourceTypeFilters": [ "resource_type1",
                  "resource_type2"], "TagFilters": [ { "Key1":
                  ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] }
                  }</code> </p> <p> <b>Example 2</b> </p> <p>The following
                  example shows a resource query JSON string that includes only
                  Amazon EC2 instances that are tagged <code>Stage</code> with a
                  value of <code>Test</code>.</p> <p> <code>{ "Type":
                  "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters":
                  "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } }
                  }</code> </p> <p> <b>Example 3</b> </p> <p>The following
                  example shows a resource query JSON string that includes
                  resource of any supported type as long as it is tagged
                  <code>Stage</code> with a value of <code>Prod</code>.</p> <p>
                  <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": {
                  "Stage": "Prod" } } }</code> </p> <p> <b>Example 4</b> </p>
                  <p>The following example shows a resource query JSON string
                  that includes only Amazon EC2 instances and Amazon S3 buckets
                  that are part of the specified AWS CloudFormation stack.</p>
                  <p> <code>{ "Type": "CLOUDFORMATION_STACK_1_0", "Query": {
                  "ResourceTypeFilters": [ "AWS::EC2::Instance",
                  "AWS::S3::Bucket" ], "StackIdentifier":
                  "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE"
                  } }</code> </p>
                properties:
                  Query:
                    allOf:
                      - $ref: '#/definitions/Query'
                      - description: The query that defines a group or a search.
                  Type:
                    allOf:
                      - $ref: '#/definitions/QueryType'
                      - description: >-
                          <p>The type of the query. You can use the following
                          values:</p> <ul> <li> <p> <i>
                          <code>CLOUDFORMATION_STACK_1_0:</code> </i>Specifies
                          that the <code>Query</code> contains an ARN for a
                          CloudFormation stack.</p> </li> <li> <p> <i>
                          <code>TAG_FILTERS_1_0:</code> </i>Specifies that the
                          <code>Query</code> parameter contains a JSON string
                          that represents a collection of simple tag filters for
                          resource types and tags. The JSON string uses a syntax
                          similar to the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a>
                          </code> operation, but uses only the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters">
                          ResourceTypeFilters</a> </code> and <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters">TagFilters</a>
                          </code> fields. If you specify more than one tag key,
                          only resources that match all tag keys, and at least
                          one value of each specified tag key, are returned in
                          your query. If you specify more than one value for a
                          tag key, a resource matches the filter if it has a tag
                          key value that matches <i>any</i> of the specified
                          values.</p> <p>For example, consider the following
                          sample query for resources that have two tags,
                          <code>Stage</code> and <code>Version</code>, with two
                          values each:</p> <p>
                          <code>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</code>
                          </p> <p>The results of this query could include the
                          following.</p> <ul> <li> <p>An EC2 instance that has
                          the following two tags:
                          <code>{"Stage":"Deploy"}</code>, and
                          <code>{"Version":"2"}</code> </p> </li> <li> <p>An S3
                          bucket that has the following two tags:
                          <code>{"Stage":"Test"}</code>, and
                          <code>{"Version":"1"}</code> </p> </li> </ul> <p>The
                          query would not include the following items in the
                          results, however. </p> <ul> <li> <p>An EC2 instance
                          that has only the following tag:
                          <code>{"Stage":"Deploy"}</code>.</p> <p>The instance
                          does not have <b>all</b> of the tag keys specified in
                          the filter, so it is excluded from the results.</p>
                          </li> <li> <p>An RDS database that has the following
                          two tags: <code>{"Stage":"Archived"}</code> and
                          <code>{"Version":"4"}</code> </p> <p>The database has
                          all of the tag keys, but none of those keys has an
                          associated value that matches at least one of the
                          specified values in the filter.</p> </li> </ul> </li>
                          </ul>
                type: object
            required:
              - ResourceQuery
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResourcesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/resources/{Arn}/tags':
    get:
      description: >-
        <p>Returns a list of tags that are associated with a resource group,
        specified by an ARN.</p> <p> <b>Minimum permissions</b> </p> <p>To run
        this command, you must have the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:GetTags</code> </p> </li> </ul>
      operationId: GetTags
      parameters:
        - description: The ARN of the resource group whose tags you want to retrieve.
          in: path
          maxLength: 1600
          minLength: 12
          name: Arn
          pattern: >-
            arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTagsOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Deletes tags from a specified resource group.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p> <code>resource-groups:Untag</code> </p>
        </li> </ul>
      operationId: Untag
      parameters:
        - description: >-
            The ARN of the resource group from which to remove tags. The command
            removed both the specified keys and any values associated with those
            keys.
          in: path
          maxLength: 1600
          minLength: 12
          name: Arn
          pattern: >-
            arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Keys:
                description: The keys of the tags to be removed.
                items:
                  $ref: '#/definitions/TagKey'
                type: array
            required:
              - Keys
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Adds tags to a resource group with the specified ARN. Existing tags
        on a resource group are not changed if they are not specified in the
        request parameters.</p> <important> <p>Do not store personally
        identifiable information (PII) or other confidential or sensitive
        information in tags. We use tags to provide you with billing and
        administration services. Tags are not intended to be used for private or
        sensitive data.</p> </important> <p> <b>Minimum permissions</b> </p>
        <p>To run this command, you must have the following permissions:</p>
        <ul> <li> <p> <code>resource-groups:Tag</code> </p> </li> </ul>
      operationId: Tag
      parameters:
        - description: The ARN of the resource group to which to add tags.
          in: path
          maxLength: 1600
          minLength: 12
          name: Arn
          pattern: >-
            arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags to add to the specified resource group. A tag is a
                  string-to-string map of key-value pairs.
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /ungroup-resources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Removes the specified resources from the specified group.</p> <p>
        <b>Minimum permissions</b> </p> <p>To run this command, you must have
        the following permissions:</p> <ul> <li> <p>
        <code>resource-groups:UngroupResources</code> </p> </li> </ul>
      operationId: UngroupResources
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: >-
                  The name or the ARN of the resource group from which to remove
                  the resources.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              ResourceArns:
                description: The ARNs of the resources to be removed from the group.
                items:
                  $ref: '#/definitions/ResourceArn'
                maxItems: 10
                minItems: 1
                type: array
            required:
              - Group
              - ResourceArns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UngroupResourcesOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /update-group:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Updates the description for an existing group. You cannot update the
        name of a resource group.</p> <p> <b>Minimum permissions</b> </p> <p>To
        run this command, you must have the following permissions:</p> <ul> <li>
        <p> <code>resource-groups:UpdateGroup</code> </p> </li> </ul>
      operationId: UpdateGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: >-
                  The new description that you want to update the resource group
                  with. Descriptions can contain letters, numbers, hyphens,
                  underscores, periods, and spaces.
                maxLength: 512
                pattern: '[\sa-zA-Z0-9_\.-]*'
                type: string
              Group:
                description: The name or the ARN of the resource group to modify.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: Don't use this parameter. Use <code>Group</code> instead.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /update-group-query:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Updates the resource query of a group. For more information about
        resource queries, see <a
        href="https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag">Create
        a tag-based group in Resource Groups</a>.</p> <p> <b>Minimum
        permissions</b> </p> <p>To run this command, you must have the following
        permissions:</p> <ul> <li> <p>
        <code>resource-groups:UpdateGroupQuery</code> </p> </li> </ul>
      operationId: UpdateGroupQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Group:
                description: The name or the ARN of the resource group to query.
                maxLength: 1600
                minLength: 1
                pattern: >-
                  (arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/)?[a-zA-Z0-9_\.-]{1,128}
                type: string
              GroupName:
                description: Don't use this parameter. Use <code>Group</code> instead.
                maxLength: 128
                minLength: 1
                pattern: '[a-zA-Z0-9_\.-]+'
                type: string
              ResourceQuery:
                description: >-
                  <p>The query that is used to define a resource group or a
                  search for resources. A query specifies both a query type and
                  a query string as a JSON object. See the examples section for
                  example JSON strings.</p> <p>The examples that follow are
                  shown as standard JSON strings. If you include such a string
                  as a parameter to the AWS CLI or an SDK API, you might need to
                  'escape' the string into a single line. For example, see the
                  <a
                  href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html">Quoting
                  strings</a> in the <i>AWS CLI User Guide</i>.</p> <p>
                  <b>Example 1</b> </p> <p>The following generic example shows a
                  resource query JSON string that includes only resources that
                  meet the following criteria:</p> <ul> <li> <p>The resource
                  type must be either <code>resource_type1</code> or
                  <code>resource_type2</code>.</p> </li> <li> <p>The resource
                  must have a tag <code>Key1</code> with a value of either
                  <code>ValueA</code> or <code>ValueB</code>.</p> </li> <li>
                  <p>The resource must have a tag <code>Key2</code> with a value
                  of either <code>ValueC</code> or <code>ValueD</code>.</p>
                  </li> </ul> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": [ "resource_type1", "resource_type2"],
                  "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"]
                  }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }</code>
                  </p> <p>This has the equivalent "shortcut" syntax of the
                  following:</p> <p> <code>{ "Type": "TAG_FILTERS_1_0", "Query":
                  { "ResourceTypeFilters": [ "resource_type1",
                  "resource_type2"], "TagFilters": [ { "Key1":
                  ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] }
                  }</code> </p> <p> <b>Example 2</b> </p> <p>The following
                  example shows a resource query JSON string that includes only
                  Amazon EC2 instances that are tagged <code>Stage</code> with a
                  value of <code>Test</code>.</p> <p> <code>{ "Type":
                  "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters":
                  "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } }
                  }</code> </p> <p> <b>Example 3</b> </p> <p>The following
                  example shows a resource query JSON string that includes
                  resource of any supported type as long as it is tagged
                  <code>Stage</code> with a value of <code>Prod</code>.</p> <p>
                  <code>{ "Type": "TAG_FILTERS_1_0", "Query": {
                  "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": {
                  "Stage": "Prod" } } }</code> </p> <p> <b>Example 4</b> </p>
                  <p>The following example shows a resource query JSON string
                  that includes only Amazon EC2 instances and Amazon S3 buckets
                  that are part of the specified AWS CloudFormation stack.</p>
                  <p> <code>{ "Type": "CLOUDFORMATION_STACK_1_0", "Query": {
                  "ResourceTypeFilters": [ "AWS::EC2::Instance",
                  "AWS::S3::Bucket" ], "StackIdentifier":
                  "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE"
                  } }</code> </p>
                properties:
                  Query:
                    allOf:
                      - $ref: '#/definitions/Query'
                      - description: The query that defines a group or a search.
                  Type:
                    allOf:
                      - $ref: '#/definitions/QueryType'
                      - description: >-
                          <p>The type of the query. You can use the following
                          values:</p> <ul> <li> <p> <i>
                          <code>CLOUDFORMATION_STACK_1_0:</code> </i>Specifies
                          that the <code>Query</code> contains an ARN for a
                          CloudFormation stack.</p> </li> <li> <p> <i>
                          <code>TAG_FILTERS_1_0:</code> </i>Specifies that the
                          <code>Query</code> parameter contains a JSON string
                          that represents a collection of simple tag filters for
                          resource types and tags. The JSON string uses a syntax
                          similar to the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a>
                          </code> operation, but uses only the <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters">
                          ResourceTypeFilters</a> </code> and <code> <a
                          href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters">TagFilters</a>
                          </code> fields. If you specify more than one tag key,
                          only resources that match all tag keys, and at least
                          one value of each specified tag key, are returned in
                          your query. If you specify more than one value for a
                          tag key, a resource matches the filter if it has a tag
                          key value that matches <i>any</i> of the specified
                          values.</p> <p>For example, consider the following
                          sample query for resources that have two tags,
                          <code>Stage</code> and <code>Version</code>, with two
                          values each:</p> <p>
                          <code>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</code>
                          </p> <p>The results of this query could include the
                          following.</p> <ul> <li> <p>An EC2 instance that has
                          the following two tags:
                          <code>{"Stage":"Deploy"}</code>, and
                          <code>{"Version":"2"}</code> </p> </li> <li> <p>An S3
                          bucket that has the following two tags:
                          <code>{"Stage":"Test"}</code>, and
                          <code>{"Version":"1"}</code> </p> </li> </ul> <p>The
                          query would not include the following items in the
                          results, however. </p> <ul> <li> <p>An EC2 instance
                          that has only the following tag:
                          <code>{"Stage":"Deploy"}</code>.</p> <p>The instance
                          does not have <b>all</b> of the tag keys specified in
                          the filter, so it is excluded from the results.</p>
                          </li> <li> <p>An RDS database that has the following
                          two tags: <code>{"Stage":"Archived"}</code> and
                          <code>{"Version":"4"}</code> </p> <p>The database has
                          all of the tag keys, but none of those keys has an
                          associated value that matches at least one of the
                          specified values in the filter.</p> </li> </ul> </li>
                          </ul>
                type: object
            required:
              - ResourceQuery
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupQueryOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

