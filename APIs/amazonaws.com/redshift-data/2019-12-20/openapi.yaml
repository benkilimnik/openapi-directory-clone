basePath: /
definitions:
  ActiveStatementsExceededException: {}
  BatchExecuteStatementException: {}
  BatchExecuteStatementInput:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
      Sqls:
        allOf:
          - $ref: '#/definitions/SqlList'
          - description: 'One or more SQL statements to run. '
      StatementName:
        allOf:
          - $ref: '#/definitions/StatementNameString'
          - description: >-
              The name of the SQL statements. You can name the SQL statements
              when you create them to identify the query. 
      WithEvent:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether to send an event to the Amazon
              EventBridge event bus after the SQL statements run. 
    required:
      - ClusterIdentifier
      - Database
      - Sqls
    title: BatchExecuteStatementInput
    type: object
  BatchExecuteStatementOutput:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: 'The cluster identifier. '
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The date and time (UTC) the statement was created. '
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the database.
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: The database user name.
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement whose results are to be
              fetched. This value is a universally unique identifier (UUID)
              generated by Amazon Redshift Data API. This identifier is returned
              by <code>BatchExecuteStatment</code>. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the
              database. 
    type: object
  Blob:
    type: string
  Boolean:
    type: boolean
  BoxedBoolean:
    type: boolean
  BoxedDouble:
    format: double
    type: number
  BoxedLong:
    type: integer
  CancelStatementRequest:
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement to cancel. This value is a
              universally unique identifier (UUID) generated by Amazon Redshift
              Data API. This identifier is returned by
              <code>BatchExecuteStatment</code>, <code>ExecuteStatment</code>,
              and <code>ListStatements</code>. 
    required:
      - Id
    title: CancelStatementRequest
    type: object
  CancelStatementResponse:
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether the cancel statement succeeded
              (true). 
    type: object
  ColumnList:
    items:
      $ref: '#/definitions/ColumnMetadata'
    type: array
  ColumnMetadata:
    description: 'The properties (metadata) of a column. '
    properties:
      columnDefault:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The default value of the column. '
      isCaseSensitive:
        allOf:
          - $ref: '#/definitions/bool'
          - description: 'A value that indicates whether the column is case-sensitive. '
      isCurrency:
        allOf:
          - $ref: '#/definitions/bool'
          - description: >-
              A value that indicates whether the column contains currency
              values.
      isSigned:
        allOf:
          - $ref: '#/definitions/bool'
          - description: A value that indicates whether an integer column is signed.
      label:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The label for the column. '
      length:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The length of the column.
      name:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The name of the column. '
      nullable:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'A value that indicates whether the column is nullable. '
      precision:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'The precision value of a decimal number column. '
      scale:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'The scale value of a decimal number column. '
      schemaName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the schema that contains the table that includes the
              column.
      tableName:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The name of the table that includes the column. '
      typeName:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The database-specific data type of the column. '
    type: object
  ColumnMetadataList:
    items:
      $ref: '#/definitions/ColumnMetadata'
    type: array
  DatabaseList:
    items:
      $ref: '#/definitions/String'
    type: array
  DescribeStatementRequest:
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement to describe. This value is a
              universally unique identifier (UUID) generated by Amazon Redshift
              Data API. A suffix indicates the number of the SQL statement. For
              example, <code>d9b6c0c9-0747-4bf4-b142-e8883122f766:2</code> has a
              suffix of <code>:2</code> that indicates the second SQL statement
              of a batch query. This identifier is returned by
              <code>BatchExecuteStatment</code>, <code>ExecuteStatement</code>,
              and <code>ListStatements</code>. 
    required:
      - Id
    title: DescribeStatementRequest
    type: object
  DescribeStatementResponse:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The cluster identifier. '
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time (UTC) when the SQL statement was submitted to
              run. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The name of the database. '
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The database user name. '
      Duration:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The amount of time in nanoseconds that the statement ran. '
      Error:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The error message from the cluster if the SQL statement
              encountered an error while running. 
      HasResultSet:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether the statement has a result set. The
              result set can be empty. 
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement described. This value is a
              universally unique identifier (UUID) generated by Amazon Redshift
              Data API. 
      QueryParameters:
        allOf:
          - $ref: '#/definitions/SqlParametersList'
          - description: The parameters for the SQL statement.
      QueryString:
        allOf:
          - $ref: '#/definitions/StatementString'
          - description: 'The SQL statement text. '
      RedshiftPid:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The process identifier from Amazon Redshift. '
      RedshiftQueryId:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The identifier of the query generated by Amazon Redshift. These
              identifiers are also available in the <code>query</code> column of
              the <code>STL_QUERY</code> system view. 
      ResultRows:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              Either the number of rows returned from the SQL statement or the
              number of rows affected. If result size is greater than zero, the
              result rows can be the number of rows affected by SQL statements
              such as INSERT, UPDATE, DELETE, COPY, and others. A
              <code>-1</code> indicates the value is null.
      ResultSize:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The size in bytes of the returned results. A <code>-1</code>
              indicates the value is null.
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or Amazon Resource Name (ARN) of the secret that enables
              access to the database. 
      Status:
        allOf:
          - $ref: '#/definitions/StatusString'
          - description: >-
              <p>The status of the SQL statement being described. Status values
              are defined as follows: </p> <ul> <li> <p>ABORTED - The query run
              was stopped by the user. </p> </li> <li> <p>ALL - A status value
              that includes all query statuses. This value can be used to filter
              results. </p> </li> <li> <p>FAILED - The query run failed. </p>
              </li> <li> <p>FINISHED - The query has finished running. </p>
              </li> <li> <p>PICKED - The query has been chosen to be run. </p>
              </li> <li> <p>STARTED - The query run has started. </p> </li> <li>
              <p>SUBMITTED - The query was submitted, but not yet processed.
              </p> </li> </ul>
      SubStatements:
        allOf:
          - $ref: '#/definitions/SubStatementList'
          - description: The SQL statements from a multiple statement run.
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time (UTC) that the metadata for the SQL statement
              was last updated. An example is the time the status last changed. 
    required:
      - Id
    type: object
  DescribeTableRequest:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      ConnectedDatabase:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A database name. The connected database is specified when you
              connect with your authentication credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database that contains the tables to be described.
              If <code>ConnectedDatabase</code> is not specified, this is also
              the database to connect to with your authentication credentials.
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/PageSize'
          - description: >-
              The maximum number of tables to return in the response. If more
              tables exist than fit in one response, then <code>NextToken</code>
              is returned to page through the results. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      Schema:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The schema that contains the table. If no schema is specified,
              then matching tables for all schemas are returned. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
      Table:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The table name. If no table is specified, then all tables for all
              matching schemas are returned. If no table and no schema is
              specified, then all tables for all schemas in the database are
              returned
    required:
      - ClusterIdentifier
      - Database
    title: DescribeTableRequest
    type: object
  DescribeTableResponse:
    properties:
      ColumnList:
        allOf:
          - $ref: '#/definitions/ColumnList'
          - description: 'A list of columns in the table. '
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      TableName:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The table name. '
    type: object
  ExecuteStatementException: {}
  ExecuteStatementInput:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      Parameters:
        allOf:
          - $ref: '#/definitions/SqlParametersList'
          - description: The parameters for the SQL statement.
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
      Sql:
        allOf:
          - $ref: '#/definitions/StatementString'
          - description: 'The SQL statement text to run. '
      StatementName:
        allOf:
          - $ref: '#/definitions/StatementNameString'
          - description: >-
              The name of the SQL statement. You can name the SQL statement when
              you create it to identify the query. 
      WithEvent:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether to send an event to the Amazon
              EventBridge event bus after the SQL statement runs. 
    required:
      - ClusterIdentifier
      - Database
      - Sql
    title: ExecuteStatementInput
    type: object
  ExecuteStatementOutput:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: 'The cluster identifier. '
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The date and time (UTC) the statement was created. '
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the database.
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: The database user name.
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement whose results are to be
              fetched. This value is a universally unique identifier (UUID)
              generated by Amazon Redshift Data API. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the
              database. 
    type: object
  Field:
    description: 'A data value in a column. '
    properties:
      blobValue:
        allOf:
          - $ref: '#/definitions/Blob'
          - description: 'A value of the BLOB data type. '
      booleanValue:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: 'A value of the Boolean data type. '
      doubleValue:
        allOf:
          - $ref: '#/definitions/BoxedDouble'
          - description: 'A value of the double data type. '
      isNull:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: 'A value that indicates whether the data is NULL. '
      longValue:
        allOf:
          - $ref: '#/definitions/BoxedLong'
          - description: 'A value of the long data type. '
      stringValue:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'A value of the string data type. '
    type: object
  FieldList:
    items:
      $ref: '#/definitions/Field'
    type: array
  GetStatementResultRequest:
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement whose results are to be
              fetched. This value is a universally unique identifier (UUID)
              generated by Amazon Redshift Data API. A suffix indicates then
              number of the SQL statement. For example,
              <code>d9b6c0c9-0747-4bf4-b142-e8883122f766:2</code> has a suffix
              of <code>:2</code> that indicates the second SQL statement of a
              batch query. This identifier is returned by
              <code>BatchExecuteStatment</code>, <code>ExecuteStatment</code>,
              and <code>ListStatements</code>. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
    required:
      - Id
    title: GetStatementResultRequest
    type: object
  GetStatementResultResponse:
    properties:
      ColumnMetadata:
        allOf:
          - $ref: '#/definitions/ColumnMetadataList'
          - description: 'The properties (metadata) of a column. '
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      Records:
        allOf:
          - $ref: '#/definitions/SqlRecords'
          - description: The results of the SQL statement.
      TotalNumRows:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The total number of rows in the result set returned from a query.
              You can use this number to estimate the number of calls to the
              <code>GetStatementResult</code> operation needed to page through
              the results. 
    required:
      - Records
    type: object
  Integer:
    type: integer
  InternalServerException: {}
  ListDatabasesRequest:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/PageSize'
          - description: >-
              The maximum number of databases to return in the response. If more
              databases exist than fit in one response, then
              <code>NextToken</code> is returned to page through the results. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
    required:
      - ClusterIdentifier
      - Database
    title: ListDatabasesRequest
    type: object
  ListDatabasesResponse:
    properties:
      Databases:
        allOf:
          - $ref: '#/definitions/DatabaseList'
          - description: 'The names of databases. '
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
    type: object
  ListSchemasRequest:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      ConnectedDatabase:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A database name. The connected database is specified when you
              connect with your authentication credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database that contains the schemas to list. If
              <code>ConnectedDatabase</code> is not specified, this is also the
              database to connect to with your authentication credentials.
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/PageSize'
          - description: >-
              The maximum number of schemas to return in the response. If more
              schemas exist than fit in one response, then
              <code>NextToken</code> is returned to page through the results. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      SchemaPattern:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A pattern to filter results by schema name. Within a schema
              pattern, "%" means match any substring of 0 or more characters and
              "_" means match any one character. Only schema name entries
              matching the search pattern are returned. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
    required:
      - ClusterIdentifier
      - Database
    title: ListSchemasRequest
    type: object
  ListSchemasResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      Schemas:
        allOf:
          - $ref: '#/definitions/SchemaList'
          - description: 'The schemas that match the request pattern. '
    type: object
  ListStatementsLimit:
    maximum: 100
    minimum: 0
    type: integer
  ListStatementsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/ListStatementsLimit'
          - description: >-
              The maximum number of SQL statements to return in the response. If
              more SQL statements exist than fit in one response, then
              <code>NextToken</code> is returned to page through the results. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      RoleLevel:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that filters which statements to return in the response.
              If true, all statements run by the caller's IAM role are returned.
              If false, only statements run by the caller's IAM role in the
              current IAM session are returned. The default is true. 
      StatementName:
        allOf:
          - $ref: '#/definitions/StatementNameString'
          - description: >-
              The name of the SQL statement specified as input to
              <code>BatchExecuteStatement</code> or
              <code>ExecuteStatement</code> to identify the query. You can list
              multiple statements by providing a prefix that matches the
              beginning of the statement name. For example, to list
              myStatement1, myStatement2, myStatement3, and so on, then provide
              the a value of <code>myStatement</code>. Data API does a
              case-sensitive match of SQL statement names to the prefix value
              you provide. 
      Status:
        allOf:
          - $ref: '#/definitions/StatusString'
          - description: >-
              <p>The status of the SQL statement to list. Status values are
              defined as follows: </p> <ul> <li> <p>ABORTED - The query run was
              stopped by the user. </p> </li> <li> <p>ALL - A status value that
              includes all query statuses. This value can be used to filter
              results. </p> </li> <li> <p>FAILED - The query run failed. </p>
              </li> <li> <p>FINISHED - The query has finished running. </p>
              </li> <li> <p>PICKED - The query has been chosen to be run. </p>
              </li> <li> <p>STARTED - The query run has started. </p> </li> <li>
              <p>SUBMITTED - The query was submitted, but not yet processed.
              </p> </li> </ul>
    title: ListStatementsRequest
    type: object
  ListStatementsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      Statements:
        allOf:
          - $ref: '#/definitions/StatementList'
          - description: 'The SQL statements. '
    required:
      - Statements
    type: object
  ListTablesRequest:
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/Location'
          - description: >-
              The cluster identifier. This parameter is required when
              authenticating using either Secrets Manager or temporary
              credentials. 
      ConnectedDatabase:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A database name. The connected database is specified when you
              connect with your authentication credentials. 
      Database:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the database that contains the tables to list. If
              <code>ConnectedDatabase</code> is not specified, this is also the
              database to connect to with your authentication credentials.
      DbUser:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The database user name. This parameter is required when
              authenticating using temporary credentials. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/PageSize'
          - description: >-
              The maximum number of tables to return in the response. If more
              tables exist than fit in one response, then <code>NextToken</code>
              is returned to page through the results. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      SchemaPattern:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A pattern to filter results by schema name. Within a schema
              pattern, "%" means match any substring of 0 or more characters and
              "_" means match any one character. Only schema name entries
              matching the search pattern are returned. If
              <code>SchemaPattern</code> is not specified, then all tables that
              match <code>TablePattern</code> are returned. If neither
              <code>SchemaPattern</code> or <code>TablePattern</code> are
              specified, then all tables are returned. 
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or ARN of the secret that enables access to the database.
              This parameter is required when authenticating using Secrets
              Manager. 
      TablePattern:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A pattern to filter results by table name. Within a table pattern,
              "%" means match any substring of 0 or more characters and "_"
              means match any one character. Only table name entries matching
              the search pattern are returned. If <code>TablePattern</code> is
              not specified, then all tables that match
              <code>SchemaPattern</code>are returned. If neither
              <code>SchemaPattern</code> or <code>TablePattern</code> are
              specified, then all tables are returned. 
    required:
      - ClusterIdentifier
      - Database
    title: ListTablesRequest
    type: object
  ListTablesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A value that indicates the starting point for the next set of
              response records in a subsequent request. If a value is returned
              in a response, you can retrieve the next set of records by
              providing this returned NextToken value in the next NextToken
              parameter and retrying the command. If the NextToken field is
              empty, all response records have been retrieved for the request. 
      Tables:
        allOf:
          - $ref: '#/definitions/TableList'
          - description: 'The tables that match the request pattern. '
    type: object
  Location:
    type: string
  Long:
    type: integer
  PageSize:
    maximum: 1000
    minimum: 0
    type: integer
  ParameterName:
    pattern: '^[0-9a-zA-Z_]+$'
    type: string
  ParameterValue:
    minLength: 1
    type: string
  ResourceNotFoundException: {}
  SchemaList:
    items:
      $ref: '#/definitions/String'
    type: array
  SecretArn:
    type: string
  SqlList:
    items:
      $ref: '#/definitions/StatementString'
    maxItems: 40
    minItems: 1
    type: array
  SqlParameter:
    description: A parameter used in a SQL statement.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/ParameterName'
          - description: The name of the parameter.
      value:
        allOf:
          - $ref: '#/definitions/ParameterValue'
          - description: >-
              The value of the parameter. Amazon Redshift implicitly converts to
              the proper data type. For more inforation, see <a
              href="https://docs.aws.amazon.com/redshift/latest/dg/c_Supported_data_types.html">Data
              types</a> in the <i>Amazon Redshift Database Developer Guide</i>. 
    required:
      - name
      - value
    type: object
  SqlParametersList:
    items:
      $ref: '#/definitions/SqlParameter'
    minItems: 1
    type: array
  SqlRecords:
    items:
      $ref: '#/definitions/FieldList'
    type: array
  StatementData:
    description: The SQL statement to run.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The date and time (UTC) the statement was created. '
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The SQL statement identifier. This value is a universally unique
              identifier (UUID) generated by Amazon Redshift Data API. 
      IsBatchStatement:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether the statement is a batch query
              request.
      QueryParameters:
        allOf:
          - $ref: '#/definitions/SqlParametersList'
          - description: The parameters used in a SQL statement.
      QueryString:
        allOf:
          - $ref: '#/definitions/StatementString'
          - description: The SQL statement.
      QueryStrings:
        allOf:
          - $ref: '#/definitions/StatementStringList'
          - description: >-
              One or more SQL statements. Each query string in the array
              corresponds to one of the queries in a batch query request.
      SecretArn:
        allOf:
          - $ref: '#/definitions/SecretArn'
          - description: >-
              The name or Amazon Resource Name (ARN) of the secret that enables
              access to the database. 
      StatementName:
        allOf:
          - $ref: '#/definitions/StatementNameString'
          - description: 'The name of the SQL statement. '
      Status:
        allOf:
          - $ref: '#/definitions/StatusString'
          - description: >-
              The status of the SQL statement. An example is the that the SQL
              statement finished. 
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time (UTC) that the statement metadata was last
              updated.
    required:
      - Id
    type: object
  StatementId:
    pattern: '^[a-z0-9]{8}(-[a-z0-9]{4}){3}-[a-z0-9]{12}(:\d+)?$'
    type: string
  StatementList:
    items:
      $ref: '#/definitions/StatementData'
    type: array
  StatementNameString:
    maxLength: 500
    minLength: 0
    type: string
  StatementStatusString:
    enum:
      - SUBMITTED
      - PICKED
      - STARTED
      - FINISHED
      - ABORTED
      - FAILED
    type: string
  StatementString:
    type: string
  StatementStringList:
    items:
      $ref: '#/definitions/StatementString'
    type: array
  StatusString:
    enum:
      - SUBMITTED
      - PICKED
      - STARTED
      - FINISHED
      - ABORTED
      - FAILED
      - ALL
    type: string
  String:
    type: string
  SubStatementData:
    description: Information about an SQL statement.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The date and time (UTC) the statement was created. '
      Duration:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The amount of time in nanoseconds that the statement ran.
      Error:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The error message from the cluster if the SQL statement
              encountered an error while running.
      HasResultSet:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether the statement has a result set. The
              result set can be empty.
      Id:
        allOf:
          - $ref: '#/definitions/StatementId'
          - description: >-
              The identifier of the SQL statement. This value is a universally
              unique identifier (UUID) generated by Amazon Redshift Data API. A
              suffix indicates the number of the SQL statement. For example,
              <code>d9b6c0c9-0747-4bf4-b142-e8883122f766:2</code> has a suffix
              of <code>:2</code> that indicates the second SQL statement of a
              batch query.
      QueryString:
        allOf:
          - $ref: '#/definitions/StatementString'
          - description: The SQL statement text.
      RedshiftQueryId:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The SQL statement identifier. This value is a universally unique
              identifier (UUID) generated by Amazon Redshift Data API. 
      ResultRows:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              Either the number of rows returned from the SQL statement or the
              number of rows affected. If result size is greater than zero, the
              result rows can be the number of rows affected by SQL statements
              such as INSERT, UPDATE, DELETE, COPY, and others. A
              <code>-1</code> indicates the value is null.
      ResultSize:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The size in bytes of the returned results. A <code>-1</code>
              indicates the value is null.
      Status:
        allOf:
          - $ref: '#/definitions/StatementStatusString'
          - description: >-
              The status of the SQL statement. An example is the that the SQL
              statement finished. 
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time (UTC) that the statement metadata was last
              updated.
    required:
      - Id
    type: object
  SubStatementList:
    items:
      $ref: '#/definitions/SubStatementData'
    type: array
  TableList:
    items:
      $ref: '#/definitions/TableMember'
    type: array
  TableMember:
    description: 'The properties of a table. '
    properties:
      name:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The name of the table. '
      schema:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The schema containing the table. '
      type:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The type of the table. Possible values include TABLE, VIEW, SYSTEM
              TABLE, GLOBAL TEMPORARY, LOCAL TEMPORARY, ALIAS, and SYNONYM. 
    type: object
  Timestamp:
    format: date-time
    type: string
  ValidationException: {}
  bool:
    type: boolean
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/redshift-data/'
host: redshift-data.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>You can use the Amazon Redshift Data API to run queries on Amazon
    Redshift tables. You can run SQL statements, which are committed if the
    statement succeeds. </p> <p>For more information about the Amazon Redshift
    Data API, see <a
    href="https://docs.aws.amazon.com/redshift/latest/mgmt/data-api.html">Using
    the Amazon Redshift Data API</a> in the <i>Amazon Redshift Cluster
    Management Guide</i>. </p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Redshift Data API Service
  version: '2019-12-20'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: redshift-data
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/redshift-data-2019-12-20.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: redshift-data
paths:
  /#X-Amz-Target=RedshiftData.BatchExecuteStatement:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Runs one or more SQL statements, which can be data manipulation
        language (DML) or data definition language (DDL). Depending on the
        authorization method, use one of the following combinations of request
        parameters: </p> <ul> <li> <p>Secrets Manager - specify the Amazon
        Resource Name (ARN) of the secret, the database name, and the cluster
        identifier that matches the cluster in the secret. </p> </li> <li>
        <p>Temporary credentials - specify the cluster identifier, the database
        name, and the database user name. Permission to call the
        <code>redshift:GetClusterCredentials</code> operation is required to use
        this method. </p> </li> </ul>
      operationId: BatchExecuteStatement
      parameters:
        - enum:
            - RedshiftData.BatchExecuteStatement
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchExecuteStatementInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchExecuteStatementOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ActiveStatementsExceededException
          schema:
            $ref: '#/definitions/ActiveStatementsExceededException'
        '482':
          description: BatchExecuteStatementException
          schema:
            $ref: '#/definitions/BatchExecuteStatementException'
  /#X-Amz-Target=RedshiftData.CancelStatement:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Cancels a running query. To be canceled, a query must be running. '
      operationId: CancelStatement
      parameters:
        - enum:
            - RedshiftData.CancelStatement
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CancelStatementRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelStatementResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.DescribeStatement:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Describes the details about a specific instance when a query was run by
        the Amazon Redshift Data API. The information includes when the query
        started, when it finished, the query status, the number of rows
        returned, and the SQL statement. 
      operationId: DescribeStatement
      parameters:
        - enum:
            - RedshiftData.DescribeStatement
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStatementRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStatementResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.DescribeTable:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Describes the detailed information about a table from metadata in the
        cluster. The information includes its columns. A token is returned to
        page through the column list. Depending on the authorization method, use
        one of the following combinations of request parameters: </p> <ul> <li>
        <p>Secrets Manager - specify the Amazon Resource Name (ARN) of the
        secret, the database name, and the cluster identifier that matches the
        cluster in the secret. </p> </li> <li> <p>Temporary credentials -
        specify the cluster identifier, the database name, and the database user
        name. Permission to call the <code>redshift:GetClusterCredentials</code>
        operation is required to use this method. </p> </li> </ul>
      operationId: DescribeTable
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.DescribeTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTableRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTableResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.ExecuteStatement:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Runs an SQL statement, which can be data manipulation language (DML)
        or data definition language (DDL). This statement must be a single SQL
        statement. Depending on the authorization method, use one of the
        following combinations of request parameters: </p> <ul> <li> <p>Secrets
        Manager - specify the Amazon Resource Name (ARN) of the secret, the
        database name, and the cluster identifier that matches the cluster in
        the secret. </p> </li> <li> <p>Temporary credentials - specify the
        cluster identifier, the database name, and the database user name.
        Permission to call the <code>redshift:GetClusterCredentials</code>
        operation is required to use this method. </p> </li> </ul>
      operationId: ExecuteStatement
      parameters:
        - enum:
            - RedshiftData.ExecuteStatement
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteStatementInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExecuteStatementOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ExecuteStatementException
          schema:
            $ref: '#/definitions/ExecuteStatementException'
        '482':
          description: ActiveStatementsExceededException
          schema:
            $ref: '#/definitions/ActiveStatementsExceededException'
  /#X-Amz-Target=RedshiftData.GetStatementResult:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Fetches the temporarily cached result of an SQL statement. A token is
        returned to page through the statement results. 
      operationId: GetStatementResult
      parameters:
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.GetStatementResult
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetStatementResultRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStatementResultResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.ListDatabases:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>List the databases in a cluster. A token is returned to page through
        the database list. Depending on the authorization method, use one of the
        following combinations of request parameters: </p> <ul> <li> <p>Secrets
        Manager - specify the Amazon Resource Name (ARN) of the secret, the
        database name, and the cluster identifier that matches the cluster in
        the secret. </p> </li> <li> <p>Temporary credentials - specify the
        cluster identifier, the database name, and the database user name.
        Permission to call the <code>redshift:GetClusterCredentials</code>
        operation is required to use this method. </p> </li> </ul>
      operationId: ListDatabases
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.ListDatabases
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDatabasesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatabasesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.ListSchemas:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Lists the schemas in a database. A token is returned to page through
        the schema list. Depending on the authorization method, use one of the
        following combinations of request parameters: </p> <ul> <li> <p>Secrets
        Manager - specify the Amazon Resource Name (ARN) of the secret, the
        database name, and the cluster identifier that matches the cluster in
        the secret. </p> </li> <li> <p>Temporary credentials - specify the
        cluster identifier, the database name, and the database user name.
        Permission to call the <code>redshift:GetClusterCredentials</code>
        operation is required to use this method. </p> </li> </ul>
      operationId: ListSchemas
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.ListSchemas
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSchemasRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchemasResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.ListStatements:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        List of SQL statements. By default, only finished statements are shown.
        A token is returned to page through the statement list. 
      operationId: ListStatements
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.ListStatements
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListStatementsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStatementsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=RedshiftData.ListTables:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>List the tables in a database. If neither <code>SchemaPattern</code>
        nor <code>TablePattern</code> are specified, then all tables in the
        database are returned. A token is returned to page through the table
        list. Depending on the authorization method, use one of the following
        combinations of request parameters: </p> <ul> <li> <p>Secrets Manager -
        specify the Amazon Resource Name (ARN) of the secret, the database name,
        and the cluster identifier that matches the cluster in the secret. </p>
        </li> <li> <p>Temporary credentials - specify the cluster identifier,
        the database name, and the database user name. Permission to call the
        <code>redshift:GetClusterCredentials</code> operation is required to use
        this method. </p> </li> </ul>
      operationId: ListTables
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - RedshiftData.ListTables
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTablesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTablesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

