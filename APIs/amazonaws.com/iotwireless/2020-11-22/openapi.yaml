basePath: /
definitions:
  AbpV1_0_x:
    description: ABP device object for LoRaWAN specification v1.0.x
    properties:
      DevAddr:
        allOf:
          - $ref: '#/definitions/DevAddr'
          - description: The DevAddr value.
      SessionKeys:
        allOf:
          - $ref: '#/definitions/SessionKeysAbpV1_0_x'
          - description: Session keys for ABP v1.0.x
    type: object
  AbpV1_1:
    description: ABP device object for LoRaWAN specification v1.1
    properties:
      DevAddr:
        allOf:
          - $ref: '#/definitions/DevAddr'
          - description: The DevAddr value.
      SessionKeys:
        allOf:
          - $ref: '#/definitions/SessionKeysAbpV1_1'
          - description: Session keys for ABP v1.1
    type: object
  AccessDeniedException: {}
  AccountLinked:
    type: boolean
  AddGwMetadata:
    type: boolean
  AmazonId:
    description: The Sidewalk Amazon ID.
    maxLength: 2048
    type: string
  AmazonResourceName:
    maxLength: 1011
    minLength: 1
    type: string
  AppEui:
    pattern: '[a-fA-F0-9]{16}'
    type: string
  AppKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  AppSKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  AppServerPrivateKey:
    format: password
    maxLength: 4096
    minLength: 1
    pattern: '[a-fA-F0-9]{64}'
    type: string
  AssociateAwsAccountWithPartnerAccountRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkAccountInfo'
          - description: The Sidewalk account credentials.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
    required:
      - Sidewalk
    title: AssociateAwsAccountWithPartnerAccountRequest
    type: object
  AssociateAwsAccountWithPartnerAccountResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/PartnerAccountArn'
          - description: The Amazon Resource Name of the resource.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkAccountInfo'
          - description: The Sidewalk account credentials.
    type: object
  AssociateWirelessDeviceWithThingRequest:
    properties:
      ThingArn:
        allOf:
          - $ref: '#/definitions/ThingArn'
          - description: The ARN of the thing to associate with the wireless device.
    required:
      - ThingArn
    title: AssociateWirelessDeviceWithThingRequest
    type: object
  AssociateWirelessDeviceWithThingResponse:
    properties: {}
    type: object
  AssociateWirelessGatewayWithCertificateRequest:
    properties:
      IotCertificateId:
        allOf:
          - $ref: '#/definitions/IotCertificateId'
          - description: The ID of the certificate to associate with the wireless gateway.
    required:
      - IotCertificateId
    title: AssociateWirelessGatewayWithCertificateRequest
    type: object
  AssociateWirelessGatewayWithCertificateResponse:
    properties:
      IotCertificateId:
        allOf:
          - $ref: '#/definitions/IotCertificateId'
          - description: The ID of the certificate associated with the wireless gateway.
    type: object
  AssociateWirelessGatewayWithThingRequest:
    properties:
      ThingArn:
        allOf:
          - $ref: '#/definitions/ThingArn'
          - description: The ARN of the thing to associate with the wireless gateway.
    required:
      - ThingArn
    title: AssociateWirelessGatewayWithThingRequest
    type: object
  AssociateWirelessGatewayWithThingResponse:
    properties: {}
    type: object
  AutoCreateTasks:
    type: boolean
  BatteryLevel:
    description: Sidewalk device battery level.
    enum:
      - normal
      - low
      - critical
    type: string
  CertificateList:
    description: List of sidewalk certificates.
    properties:
      SigningAlg:
        allOf:
          - $ref: '#/definitions/SigningAlg'
          - description: The certificate chain algorithm provided by sidewalk.
      Value:
        allOf:
          - $ref: '#/definitions/CertificateValue'
          - description: The value of the chosen sidewalk certificate.
    required:
      - SigningAlg
      - Value
    type: object
  CertificatePEM:
    maxLength: 4096
    minLength: 1
    pattern: '[^-A-Za-z0-9\+/=]\|=[^=]\|=\{3,\}$\{1,4096\}'
    type: string
  CertificateValue:
    description: Certificate value.
    maxLength: 2048
    minLength: 0
    type: string
  ChannelMask:
    maxLength: 2048
    type: string
  ClassBTimeout:
    maximum: 1000
    minimum: 0
    type: integer
  ClassCTimeout:
    maximum: 1000
    minimum: 0
    type: integer
  ClientRequestToken:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9-_]+$'
    type: string
  ConflictException: {}
  ConnectionStatus:
    enum:
      - Connected
      - Disconnected
    type: string
  Crc:
    maximum: 4294967295
    minimum: 1
    type: integer
  CreateDestinationRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the new resource.
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: The rule name or topic rule to send messages to.
      ExpressionType:
        allOf:
          - $ref: '#/definitions/ExpressionType'
          - description: The type of value in <code>Expression</code>.
      Name:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the new resource.
      RoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the new destination. Tags are metadata that
              you can use to manage a resource.
    required:
      - Name
      - ExpressionType
      - Expression
      - RoleArn
    title: CreateDestinationRequest
    type: object
  CreateDestinationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DestinationArn'
          - description: The Amazon Resource Name of the new resource.
      Name:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the new resource.
    type: object
  CreateDeviceProfileRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANDeviceProfile'
          - description: >-
              The device profile information to use to create the device
              profile.
      Name:
        allOf:
          - $ref: '#/definitions/DeviceProfileName'
          - description: The name of the new resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the new device profile. Tags are metadata
              that you can use to manage a resource.
    title: CreateDeviceProfileRequest
    type: object
  CreateDeviceProfileResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DeviceProfileArn'
          - description: The Amazon Resource Name of the new resource.
      Id:
        allOf:
          - $ref: '#/definitions/DeviceProfileId'
          - description: The ID of the new device profile.
    type: object
  CreateServiceProfileRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANServiceProfile'
          - description: >-
              The service profile information to use to create the service
              profile.
      Name:
        allOf:
          - $ref: '#/definitions/ServiceProfileName'
          - description: The name of the new resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the new service profile. Tags are metadata
              that you can use to manage a resource.
    title: CreateServiceProfileRequest
    type: object
  CreateServiceProfileResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ServiceProfileArn'
          - description: The Amazon Resource Name of the new resource.
      Id:
        allOf:
          - $ref: '#/definitions/ServiceProfileId'
          - description: The ID of the new service profile.
    type: object
  CreateWirelessDeviceRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the new resource.
      DestinationName:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the destination to assign to the new wireless device.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANDevice'
          - description: >-
              The device configuration information to use to create the wireless
              device.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessDeviceName'
          - description: The name of the new resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the new wireless device. Tags are metadata
              that you can use to manage a resource.
      Type:
        allOf:
          - $ref: '#/definitions/WirelessDeviceType'
          - description: The wireless device type.
    required:
      - Type
      - DestinationName
    title: CreateWirelessDeviceRequest
    type: object
  CreateWirelessDeviceResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessDeviceArn'
          - description: The Amazon Resource Name of the new resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessDeviceId'
          - description: The ID of the new wireless device.
    type: object
  CreateWirelessGatewayRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the new resource.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANGateway'
          - description: >-
              The gateway configuration information to use to create the
              wireless gateway.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayName'
          - description: The name of the new resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the new wireless gateway. Tags are metadata
              that you can use to manage a resource.
    required:
      - LoRaWAN
    title: CreateWirelessGatewayRequest
    type: object
  CreateWirelessGatewayResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayArn'
          - description: The Amazon Resource Name of the new resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessDeviceId'
          - description: The ID of the new wireless gateway.
    type: object
  CreateWirelessGatewayTaskDefinitionRequest:
    properties:
      AutoCreateTasks:
        allOf:
          - $ref: '#/definitions/AutoCreateTasks'
          - description: >-
              Whether to automatically create tasks using this task definition
              for all gateways with the specified current version. If
              <code>false</code>, the task must me created by calling
              <code>CreateWirelessGatewayTask</code>.
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Each resource must have a unique client request token. If you try
              to create a new resource with the same token as a resource that
              already exists, an exception occurs. If you omit this value, AWS
              SDKs will automatically generate a unique client request. 
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskName'
          - description: The name of the new resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
      Update:
        allOf:
          - $ref: '#/definitions/UpdateWirelessGatewayTaskCreate'
          - description: Information about the gateways to update.
    required:
      - AutoCreateTasks
    title: CreateWirelessGatewayTaskDefinitionRequest
    type: object
  CreateWirelessGatewayTaskDefinitionResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionId'
          - description: The ID of the new wireless gateway task definition.
    type: object
  CreateWirelessGatewayTaskRequest:
    properties:
      WirelessGatewayTaskDefinitionId:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTaskDefinition.
    required:
      - WirelessGatewayTaskDefinitionId
    title: CreateWirelessGatewayTaskRequest
    type: object
  CreateWirelessGatewayTaskResponse:
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskStatus'
          - description: The status of the request.
      WirelessGatewayTaskDefinitionId:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTaskDefinition.
    type: object
  DeleteDestinationRequest:
    properties: {}
    title: DeleteDestinationRequest
    type: object
  DeleteDestinationResponse:
    properties: {}
    type: object
  DeleteDeviceProfileRequest:
    properties: {}
    title: DeleteDeviceProfileRequest
    type: object
  DeleteDeviceProfileResponse:
    properties: {}
    type: object
  DeleteServiceProfileRequest:
    properties: {}
    title: DeleteServiceProfileRequest
    type: object
  DeleteServiceProfileResponse:
    properties: {}
    type: object
  DeleteWirelessDeviceRequest:
    properties: {}
    title: DeleteWirelessDeviceRequest
    type: object
  DeleteWirelessDeviceResponse:
    properties: {}
    type: object
  DeleteWirelessGatewayRequest:
    properties: {}
    title: DeleteWirelessGatewayRequest
    type: object
  DeleteWirelessGatewayResponse:
    properties: {}
    type: object
  DeleteWirelessGatewayTaskDefinitionRequest:
    properties: {}
    title: DeleteWirelessGatewayTaskDefinitionRequest
    type: object
  DeleteWirelessGatewayTaskDefinitionResponse:
    properties: {}
    type: object
  DeleteWirelessGatewayTaskRequest:
    properties: {}
    title: DeleteWirelessGatewayTaskRequest
    type: object
  DeleteWirelessGatewayTaskResponse:
    properties: {}
    type: object
  Description:
    maxLength: 2048
    type: string
  DestinationArn:
    type: string
  DestinationList:
    items:
      $ref: '#/definitions/Destinations'
    type: array
  DestinationName:
    maxLength: 128
    pattern: '[a-zA-Z0-9-_]+'
    type: string
  Destinations:
    description: Describes a destination.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DestinationArn'
          - description: The Amazon Resource Name of the resource.
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource.
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: The rule name or topic rule to send messages to.
      ExpressionType:
        allOf:
          - $ref: '#/definitions/ExpressionType'
          - description: The type of value in <code>Expression</code>.
      Name:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the resource.
      RoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
    type: object
  DevAddr:
    pattern: '[a-fA-F0-9]{8}'
    type: string
  DevEui:
    pattern: '[a-fA-F0-9]{16}'
    type: string
  DevStatusReqFreq:
    maximum: 2147483647
    minimum: 0
    type: integer
  DeviceCertificateList:
    description: List of device certificate chain.
    items:
      $ref: '#/definitions/CertificateList'
    type: array
  DeviceProfile:
    description: Describes a device profile.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DeviceProfileArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/DeviceProfileId'
          - description: The ID of the device profile.
      Name:
        allOf:
          - $ref: '#/definitions/DeviceProfileName'
          - description: The name of the resource.
    type: object
  DeviceProfileArn:
    type: string
  DeviceProfileId:
    maxLength: 256
    type: string
  DeviceProfileList:
    items:
      $ref: '#/definitions/DeviceProfile'
    type: array
  DeviceProfileName:
    maxLength: 256
    type: string
  DeviceState:
    description: Device state defines the device status of sidewalk device.
    enum:
      - Provisioned
      - RegisteredNotSeen
      - RegisteredReachable
      - RegisteredUnreachable
    type: string
  DisassociateAwsAccountFromPartnerAccountRequest:
    properties: {}
    title: DisassociateAwsAccountFromPartnerAccountRequest
    type: object
  DisassociateAwsAccountFromPartnerAccountResponse:
    properties: {}
    type: object
  DisassociateWirelessDeviceFromThingRequest:
    properties: {}
    title: DisassociateWirelessDeviceFromThingRequest
    type: object
  DisassociateWirelessDeviceFromThingResponse:
    properties: {}
    type: object
  DisassociateWirelessGatewayFromCertificateRequest:
    properties: {}
    title: DisassociateWirelessGatewayFromCertificateRequest
    type: object
  DisassociateWirelessGatewayFromCertificateResponse:
    properties: {}
    type: object
  DisassociateWirelessGatewayFromThingRequest:
    properties: {}
    title: DisassociateWirelessGatewayFromThingRequest
    type: object
  DisassociateWirelessGatewayFromThingResponse:
    properties: {}
    type: object
  DlBucketSize:
    maximum: 2147483647
    minimum: 0
    type: integer
  DlRate:
    maximum: 2147483647
    minimum: 0
    type: integer
  DlRatePolicy:
    maxLength: 256
    type: string
  Double:
    format: double
    type: number
  DrMax:
    maximum: 15
    minimum: 0
    type: integer
  DrMin:
    maximum: 15
    minimum: 0
    type: integer
  EndPoint:
    maxLength: 256
    minLength: 1
    type: string
  Event:
    description: Sidewalk device status notification.
    enum:
      - discovered
      - lost
      - ack
      - nack
      - passthrough
    type: string
  Expression:
    maxLength: 2048
    type: string
  ExpressionType:
    enum:
      - RuleName
      - MqttTopic
    type: string
  FNwkSIntKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  FPort:
    maximum: 223
    minimum: 1
    type: integer
  FactoryPresetFreqsList:
    items:
      $ref: '#/definitions/PresetFreq'
    maxItems: 20
    minItems: 0
    type: array
  Fingerprint:
    format: password
    maxLength: 64
    minLength: 64
    pattern: '[a-fA-F0-9]{64}'
    type: string
  GatewayEui:
    pattern: >-
      ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
    type: string
  GetDestinationRequest:
    properties: {}
    title: GetDestinationRequest
    type: object
  GetDestinationResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DestinationArn'
          - description: The Amazon Resource Name of the resource.
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource.
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: The rule name or topic rule to send messages to.
      ExpressionType:
        allOf:
          - $ref: '#/definitions/ExpressionType'
          - description: The type of value in <code>Expression</code>.
      Name:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the resource.
      RoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
    type: object
  GetDeviceProfileRequest:
    properties: {}
    title: GetDeviceProfileRequest
    type: object
  GetDeviceProfileResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/DeviceProfileArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/DeviceProfileId'
          - description: The ID of the device profile.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANDeviceProfile'
          - description: Information about the device profile.
      Name:
        allOf:
          - $ref: '#/definitions/DeviceProfileName'
          - description: The name of the resource.
    type: object
  GetLogLevelsByResourceTypesRequest:
    properties: {}
    title: GetLogLevelsByResourceTypesRequest
    type: object
  GetLogLevelsByResourceTypesResponse:
    properties:
      DefaultLogLevel:
        $ref: '#/definitions/LogLevel'
      WirelessDeviceLogOptions:
        $ref: '#/definitions/WirelessDeviceLogOptionList'
      WirelessGatewayLogOptions:
        $ref: '#/definitions/WirelessGatewayLogOptionList'
    type: object
  GetPartnerAccountRequest:
    properties: {}
    title: GetPartnerAccountRequest
    type: object
  GetPartnerAccountResponse:
    properties:
      AccountLinked:
        allOf:
          - $ref: '#/definitions/AccountLinked'
          - description: Whether the partner account is linked to the AWS account.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkAccountInfoWithFingerprint'
          - description: The Sidewalk account credentials.
    type: object
  GetResourceLogLevelRequest:
    properties: {}
    title: GetResourceLogLevelRequest
    type: object
  GetResourceLogLevelResponse:
    properties:
      LogLevel:
        $ref: '#/definitions/LogLevel'
    type: object
  GetServiceEndpointRequest:
    properties: {}
    title: GetServiceEndpointRequest
    type: object
  GetServiceEndpointResponse:
    properties:
      ServerTrust:
        allOf:
          - $ref: '#/definitions/CertificatePEM'
          - description: The Root CA of the server trust certificate.
      ServiceEndpoint:
        allOf:
          - $ref: '#/definitions/EndPoint'
          - description: The service endpoint value.
      ServiceType:
        allOf:
          - $ref: '#/definitions/WirelessGatewayServiceType'
          - description: The endpoint's service type.
    type: object
  GetServiceProfileRequest:
    properties: {}
    title: GetServiceProfileRequest
    type: object
  GetServiceProfileResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ServiceProfileArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/ServiceProfileId'
          - description: The ID of the service profile.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANGetServiceProfileInfo'
          - description: Information about the service profile.
      Name:
        allOf:
          - $ref: '#/definitions/ServiceProfileName'
          - description: The name of the resource.
    type: object
  GetWirelessDeviceRequest:
    properties: {}
    title: GetWirelessDeviceRequest
    type: object
  GetWirelessDeviceResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessDeviceArn'
          - description: The Amazon Resource Name of the resource.
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource.
      DestinationName:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the destination to which the device is assigned.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessDeviceId'
          - description: The ID of the wireless device.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANDevice'
          - description: Information about the wireless device.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessDeviceName'
          - description: The name of the resource.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkDevice'
          - description: Sidewalk device object.
      ThingArn:
        allOf:
          - $ref: '#/definitions/ThingArn'
          - description: The ARN of the thing associated with the wireless device.
      ThingName:
        allOf:
          - $ref: '#/definitions/ThingName'
          - description: >-
              The name of the thing associated with the wireless device. The
              value is empty if a thing isn't associated with the device.
      Type:
        allOf:
          - $ref: '#/definitions/WirelessDeviceType'
          - description: The wireless device type.
    type: object
  GetWirelessDeviceStatisticsRequest:
    properties: {}
    title: GetWirelessDeviceStatisticsRequest
    type: object
  GetWirelessDeviceStatisticsResponse:
    properties:
      LastUplinkReceivedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the most recent uplink was received.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANDeviceMetadata'
          - description: Information about the wireless device's operations.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkDeviceMetadata'
          - description: MetaData for Sidewalk device.
      WirelessDeviceId:
        allOf:
          - $ref: '#/definitions/WirelessDeviceId'
          - description: The ID of the wireless device.
    type: object
  GetWirelessGatewayCertificateRequest:
    properties: {}
    title: GetWirelessGatewayCertificateRequest
    type: object
  GetWirelessGatewayCertificateResponse:
    properties:
      IotCertificateId:
        allOf:
          - $ref: '#/definitions/IotCertificateId'
          - description: The ID of the certificate associated with the wireless gateway.
      LoRaWANNetworkServerCertificateId:
        allOf:
          - $ref: '#/definitions/IotCertificateId'
          - description: >-
              The ID of the certificate that is associated with the wireless
              gateway and used for the LoRaWANNetworkServer endpoint.
    type: object
  GetWirelessGatewayFirmwareInformationRequest:
    properties: {}
    title: GetWirelessGatewayFirmwareInformationRequest
    type: object
  GetWirelessGatewayFirmwareInformationResponse:
    properties:
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayCurrentVersion'
          - description: Information about the wireless gateway's firmware.
    type: object
  GetWirelessGatewayRequest:
    properties: {}
    title: GetWirelessGatewayRequest
    type: object
  GetWirelessGatewayResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayArn'
          - description: The Amazon Resource Name of the resource.
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessGatewayId'
          - description: The ID of the wireless gateway.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANGateway'
          - description: Information about the wireless gateway.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayName'
          - description: The name of the resource.
      ThingArn:
        allOf:
          - $ref: '#/definitions/ThingArn'
          - description: The ARN of the thing associated with the wireless gateway.
      ThingName:
        allOf:
          - $ref: '#/definitions/ThingName'
          - description: >-
              The name of the thing associated with the wireless gateway. The
              value is empty if a thing isn't associated with the gateway.
    type: object
  GetWirelessGatewayStatisticsRequest:
    properties: {}
    title: GetWirelessGatewayStatisticsRequest
    type: object
  GetWirelessGatewayStatisticsResponse:
    properties:
      ConnectionStatus:
        allOf:
          - $ref: '#/definitions/ConnectionStatus'
          - description: The connection status of the wireless gateway.
      LastUplinkReceivedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the most recent uplink was received.
      WirelessGatewayId:
        allOf:
          - $ref: '#/definitions/WirelessGatewayId'
          - description: The ID of the wireless gateway.
    type: object
  GetWirelessGatewayTaskDefinitionRequest:
    properties: {}
    title: GetWirelessGatewayTaskDefinitionRequest
    type: object
  GetWirelessGatewayTaskDefinitionResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      AutoCreateTasks:
        allOf:
          - $ref: '#/definitions/AutoCreateTasks'
          - description: >-
              Whether to automatically create tasks using this task definition
              for all gateways with the specified current version. If
              <code>false</code>, the task must me created by calling
              <code>CreateWirelessGatewayTask</code>.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskName'
          - description: The name of the resource.
      Update:
        allOf:
          - $ref: '#/definitions/UpdateWirelessGatewayTaskCreate'
          - description: Information about the gateways to update.
    type: object
  GetWirelessGatewayTaskRequest:
    properties: {}
    title: GetWirelessGatewayTaskRequest
    type: object
  GetWirelessGatewayTaskResponse:
    properties:
      LastUplinkReceivedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the most recent uplink was received.
      Status:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskStatus'
          - description: The status of the request.
      TaskCreatedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the task was created.
      WirelessGatewayId:
        allOf:
          - $ref: '#/definitions/WirelessGatewayId'
          - description: The ID of the wireless gateway.
      WirelessGatewayTaskDefinitionId:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTask.
    type: object
  HrAllowed:
    type: boolean
  ISODateTimeString:
    pattern: >-
      ^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$
    type: string
  Identifier:
    maxLength: 256
    type: string
  Integer:
    type: integer
  InternalServerException: {}
  IotCertificateId:
    maxLength: 4096
    minLength: 1
    type: string
  JoinEui:
    pattern: '[a-fA-F0-9]{16}'
    type: string
  JoinEuiFilters:
    description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
    items:
      $ref: '#/definitions/JoinEuiRange'
    maxItems: 3
    minItems: 0
    type: array
  JoinEuiRange:
    description: >-
      A pair of join EUI describing a range [BegEui, EndEui], both ends are
      inclusive.
    items:
      $ref: '#/definitions/JoinEui'
    maxItems: 2
    minItems: 2
    type: array
  ListDestinationsRequest:
    properties: {}
    title: ListDestinationsRequest
    type: object
  ListDestinationsResponse:
    properties:
      DestinationList:
        allOf:
          - $ref: '#/definitions/DestinationList'
          - description: The list of destinations.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
    type: object
  ListDeviceProfilesRequest:
    properties: {}
    title: ListDeviceProfilesRequest
    type: object
  ListDeviceProfilesResponse:
    properties:
      DeviceProfileList:
        allOf:
          - $ref: '#/definitions/DeviceProfileList'
          - description: The list of device profiles.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
    type: object
  ListPartnerAccountsRequest:
    properties: {}
    title: ListPartnerAccountsRequest
    type: object
  ListPartnerAccountsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkAccountList'
          - description: The Sidewalk account credentials.
    type: object
  ListServiceProfilesRequest:
    properties: {}
    title: ListServiceProfilesRequest
    type: object
  ListServiceProfilesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      ServiceProfileList:
        allOf:
          - $ref: '#/definitions/ServiceProfileList'
          - description: The list of service profiles.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
    type: object
  ListWirelessDevicesRequest:
    properties: {}
    title: ListWirelessDevicesRequest
    type: object
  ListWirelessDevicesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      WirelessDeviceList:
        allOf:
          - $ref: '#/definitions/WirelessDeviceStatisticsList'
          - description: The ID of the wireless device.
    type: object
  ListWirelessGatewayTaskDefinitionsRequest:
    properties: {}
    title: ListWirelessGatewayTaskDefinitionsRequest
    type: object
  ListWirelessGatewayTaskDefinitionsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      TaskDefinitions:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionList'
          - description: The list of task definitions.
    type: object
  ListWirelessGatewaysRequest:
    properties: {}
    title: ListWirelessGatewaysRequest
    type: object
  ListWirelessGatewaysResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      WirelessGatewayList:
        allOf:
          - $ref: '#/definitions/WirelessGatewayStatisticsList'
          - description: The ID of the wireless gateway.
    type: object
  LoRaWANDevice:
    description: LoRaWAN object for create functions.
    properties:
      AbpV1_0_x:
        allOf:
          - $ref: '#/definitions/AbpV1_0_x'
          - description: LoRaWAN object for create APIs
      AbpV1_1:
        allOf:
          - $ref: '#/definitions/AbpV1_1'
          - description: ABP device object for create APIs for v1.1
      DevEui:
        allOf:
          - $ref: '#/definitions/DevEui'
          - description: The DevEUI value.
      DeviceProfileId:
        allOf:
          - $ref: '#/definitions/DeviceProfileId'
          - description: The ID of the device profile for the new wireless device.
      OtaaV1_0_x:
        allOf:
          - $ref: '#/definitions/OtaaV1_0_x'
          - description: OTAA device object for create APIs for v1.0.x
      OtaaV1_1:
        allOf:
          - $ref: '#/definitions/OtaaV1_1'
          - description: OTAA device object for v1.1 for create APIs
      ServiceProfileId:
        allOf:
          - $ref: '#/definitions/ServiceProfileId'
          - description: The ID of the service profile.
    type: object
  LoRaWANDeviceMetadata:
    description: LoRaWAN device metatdata.
    properties:
      DataRate:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The DataRate value.
      DevEui:
        allOf:
          - $ref: '#/definitions/DevEui'
          - description: The DevEUI value.
      FPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The FPort value.
      Frequency:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The device's channel frequency in Hz.
      Gateways:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayMetadataList'
          - description: Information about the gateways accessed by the device.
      Timestamp:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time of the metadata.
    type: object
  LoRaWANDeviceProfile:
    description: LoRaWANDeviceProfile object.
    properties:
      ClassBTimeout:
        allOf:
          - $ref: '#/definitions/ClassBTimeout'
          - description: The ClassBTimeout value.
      ClassCTimeout:
        allOf:
          - $ref: '#/definitions/ClassCTimeout'
          - description: The ClassCTimeout value.
      FactoryPresetFreqsList:
        allOf:
          - $ref: '#/definitions/FactoryPresetFreqsList'
          - description: The list of values that make up the FactoryPresetFreqs value.
      MacVersion:
        allOf:
          - $ref: '#/definitions/MacVersion'
          - description: >-
              The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this
              device profile.
      MaxDutyCycle:
        allOf:
          - $ref: '#/definitions/MaxDutyCycle'
          - description: The MaxDutyCycle value.
      MaxEirp:
        allOf:
          - $ref: '#/definitions/MaxEirp'
          - description: The MaxEIRP value.
      PingSlotDr:
        allOf:
          - $ref: '#/definitions/PingSlotDr'
          - description: The PingSlotDR value.
      PingSlotFreq:
        allOf:
          - $ref: '#/definitions/PingSlotFreq'
          - description: The PingSlotFreq value.
      PingSlotPeriod:
        allOf:
          - $ref: '#/definitions/PingSlotPeriod'
          - description: The PingSlotPeriod value.
      RegParamsRevision:
        allOf:
          - $ref: '#/definitions/RegParamsRevision'
          - description: The version of regional parameters.
      RfRegion:
        allOf:
          - $ref: '#/definitions/RfRegion'
          - description: The frequency band (RFRegion) value.
      RxDataRate2:
        allOf:
          - $ref: '#/definitions/RxDataRate2'
          - description: The RXDataRate2 value.
      RxDelay1:
        allOf:
          - $ref: '#/definitions/RxDelay1'
          - description: The RXDelay1 value.
      RxDrOffset1:
        allOf:
          - $ref: '#/definitions/RxDrOffset1'
          - description: The RXDROffset1 value.
      RxFreq2:
        allOf:
          - $ref: '#/definitions/RxFreq2'
          - description: The RXFreq2 value.
      Supports32BitFCnt:
        allOf:
          - $ref: '#/definitions/Supports32BitFCnt'
          - description: The Supports32BitFCnt value.
      SupportsClassB:
        allOf:
          - $ref: '#/definitions/SupportsClassB'
          - description: The SupportsClassB value.
      SupportsClassC:
        allOf:
          - $ref: '#/definitions/SupportsClassC'
          - description: The SupportsClassC value.
      SupportsJoin:
        allOf:
          - $ref: '#/definitions/SupportsJoin'
          - description: The SupportsJoin value.
    type: object
  LoRaWANGateway:
    description: LoRaWANGateway object.
    properties:
      GatewayEui:
        allOf:
          - $ref: '#/definitions/GatewayEui'
          - description: The gateway's EUI value.
      JoinEuiFilters:
        $ref: '#/definitions/JoinEuiFilters'
      NetIdFilters:
        $ref: '#/definitions/NetIdFilters'
      RfRegion:
        allOf:
          - $ref: '#/definitions/RfRegion'
          - description: The frequency band (RFRegion) value.
      SubBands:
        $ref: '#/definitions/SubBands'
    type: object
  LoRaWANGatewayCurrentVersion:
    description: LoRaWANGatewayCurrentVersion object.
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayVersion'
          - description: The version of the gateways that should receive the update.
    type: object
  LoRaWANGatewayMetadata:
    description: LoRaWAN gateway metatdata.
    properties:
      GatewayEui:
        allOf:
          - $ref: '#/definitions/GatewayEui'
          - description: The gateway's EUI value.
      Rssi:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The RSSI value.
      Snr:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The SNR value.
    type: object
  LoRaWANGatewayMetadataList:
    items:
      $ref: '#/definitions/LoRaWANGatewayMetadata'
    type: array
  LoRaWANGatewayVersion:
    description: LoRaWANGatewayVersion object.
    properties:
      Model:
        allOf:
          - $ref: '#/definitions/Model'
          - description: The model number of the wireless gateway.
      PackageVersion:
        allOf:
          - $ref: '#/definitions/PackageVersion'
          - description: The version of the wireless gateway firmware.
      Station:
        allOf:
          - $ref: '#/definitions/Station'
          - description: The basic station version of the wireless gateway.
    type: object
  LoRaWANGetServiceProfileInfo:
    description: LoRaWANGetServiceProfileInfo object.
    properties:
      AddGwMetadata:
        allOf:
          - $ref: '#/definitions/AddGwMetadata'
          - description: The AddGWMetaData value.
      ChannelMask:
        allOf:
          - $ref: '#/definitions/ChannelMask'
          - description: The ChannelMask value.
      DevStatusReqFreq:
        allOf:
          - $ref: '#/definitions/DevStatusReqFreq'
          - description: The DevStatusReqFreq value.
      DlBucketSize:
        allOf:
          - $ref: '#/definitions/DlBucketSize'
          - description: The DLBucketSize value.
      DlRate:
        allOf:
          - $ref: '#/definitions/DlRate'
          - description: The DLRate value.
      DlRatePolicy:
        allOf:
          - $ref: '#/definitions/DlRatePolicy'
          - description: The DLRatePolicy value.
      DrMax:
        allOf:
          - $ref: '#/definitions/DrMax'
          - description: The DRMax value.
      DrMin:
        allOf:
          - $ref: '#/definitions/DrMin'
          - description: The DRMin value.
      HrAllowed:
        allOf:
          - $ref: '#/definitions/HrAllowed'
          - description: >-
              The HRAllowed value that describes whether handover roaming is
              allowed.
      MinGwDiversity:
        allOf:
          - $ref: '#/definitions/MinGwDiversity'
          - description: The MinGwDiversity value.
      NwkGeoLoc:
        allOf:
          - $ref: '#/definitions/NwkGeoLoc'
          - description: The NwkGeoLoc value.
      PrAllowed:
        allOf:
          - $ref: '#/definitions/PrAllowed'
          - description: >-
              The PRAllowed value that describes whether passive roaming is
              allowed.
      RaAllowed:
        allOf:
          - $ref: '#/definitions/RaAllowed'
          - description: >-
              The RAAllowed value that describes whether roaming activation is
              allowed.
      ReportDevStatusBattery:
        allOf:
          - $ref: '#/definitions/ReportDevStatusBattery'
          - description: The ReportDevStatusBattery value.
      ReportDevStatusMargin:
        allOf:
          - $ref: '#/definitions/ReportDevStatusMargin'
          - description: The ReportDevStatusMargin value.
      TargetPer:
        allOf:
          - $ref: '#/definitions/TargetPer'
          - description: The TargetPER value.
      UlBucketSize:
        allOf:
          - $ref: '#/definitions/UlBucketSize'
          - description: The ULBucketSize value.
      UlRate:
        allOf:
          - $ref: '#/definitions/UlRate'
          - description: The ULRate value.
      UlRatePolicy:
        allOf:
          - $ref: '#/definitions/UlRatePolicy'
          - description: The ULRatePolicy value.
    type: object
  LoRaWANListDevice:
    description: LoRaWAN object for list functions.
    properties:
      DevEui:
        allOf:
          - $ref: '#/definitions/DevEui'
          - description: The DevEUI value.
    type: object
  LoRaWANSendDataToDevice:
    description: LoRaWAN router info.
    properties:
      FPort:
        allOf:
          - $ref: '#/definitions/FPort'
          - description: The Fport value.
    type: object
  LoRaWANServiceProfile:
    description: LoRaWANServiceProfile object.
    properties:
      AddGwMetadata:
        allOf:
          - $ref: '#/definitions/AddGwMetadata'
          - description: The AddGWMetaData value.
    type: object
  LoRaWANUpdateDevice:
    description: LoRaWAN object for update functions.
    properties:
      DeviceProfileId:
        allOf:
          - $ref: '#/definitions/DeviceProfileId'
          - description: The ID of the device profile for the wireless device.
      ServiceProfileId:
        allOf:
          - $ref: '#/definitions/ServiceProfileId'
          - description: The ID of the service profile.
    type: object
  LoRaWANUpdateGatewayTaskCreate:
    description: LoRaWANUpdateGatewayTaskCreate object.
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayVersion'
          - description: The version of the gateways that should receive the update.
      SigKeyCrc:
        allOf:
          - $ref: '#/definitions/Crc'
          - description: The CRC of the signature private key to check.
      UpdateSignature:
        allOf:
          - $ref: '#/definitions/UpdateSignature'
          - description: The signature used to verify the update firmware.
      UpdateVersion:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayVersion'
          - description: The firmware version to update the gateway to.
    type: object
  LoRaWANUpdateGatewayTaskEntry:
    description: LoRaWANUpdateGatewayTaskEntry object.
    properties:
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayVersion'
          - description: The version of the gateways that should receive the update.
      UpdateVersion:
        allOf:
          - $ref: '#/definitions/LoRaWANGatewayVersion'
          - description: The firmware version to update the gateway to.
    type: object
  LogLevel:
    description: The log level for a log message.
    enum:
      - INFO
      - ERROR
      - DISABLED
    type: string
  MacVersion:
    maxLength: 64
    type: string
  MaxDutyCycle:
    maximum: 100
    minimum: 0
    type: integer
  MaxEirp:
    maximum: 15
    minimum: 0
    type: integer
  MaxResults:
    maximum: 250
    minimum: 0
    type: integer
  MessageId:
    type: string
  MessageType:
    description: >-
      Sidewalk device message type. Default value is
      <code>CUSTOM_COMMAND_ID_NOTIFY</code>.
    enum:
      - CUSTOM_COMMAND_ID_NOTIFY
      - CUSTOM_COMMAND_ID_GET
      - CUSTOM_COMMAND_ID_SET
      - CUSTOM_COMMAND_ID_RESP
    type: string
  MinGwDiversity:
    maximum: 100
    minimum: 1
    type: integer
  Model:
    maxLength: 4096
    minLength: 1
    type: string
  NetId:
    description: LoRaWAN network ID.
    pattern: '[a-fA-F0-9]{6}'
    type: string
  NetIdFilters:
    description: >-
      A list of NetId values that are used by LoRa gateways to filter the uplink
      frames.
    items:
      $ref: '#/definitions/NetId'
    maxItems: 10
    minItems: 0
    type: array
  NextToken:
    maxLength: 4096
    type: string
  NwkGeoLoc:
    type: boolean
  NwkKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  NwkSEncKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  NwkSKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  OtaaV1_0_x:
    description: OTAA device object for v1.0.x
    properties:
      AppEui:
        allOf:
          - $ref: '#/definitions/AppEui'
          - description: The AppEUI value.
      AppKey:
        allOf:
          - $ref: '#/definitions/AppKey'
          - description: The AppKey value.
    type: object
  OtaaV1_1:
    description: OTAA device object for v1.1
    properties:
      AppKey:
        allOf:
          - $ref: '#/definitions/AppKey'
          - description: The AppKey value.
      JoinEui:
        allOf:
          - $ref: '#/definitions/JoinEui'
          - description: The JoinEUI value.
      NwkKey:
        allOf:
          - $ref: '#/definitions/NwkKey'
          - description: The NwkKey value.
    type: object
  PackageVersion:
    maxLength: 32
    minLength: 1
    type: string
  PartnerAccountArn:
    type: string
  PartnerAccountId:
    maxLength: 256
    type: string
  PartnerType:
    enum:
      - Sidewalk
    type: string
  PayloadData:
    maxLength: 2048
    pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
    type: string
  PingSlotDr:
    maximum: 15
    minimum: 0
    type: integer
  PingSlotFreq:
    maximum: 16700000
    minimum: 1000000
    type: integer
  PingSlotPeriod:
    maximum: 4096
    minimum: 128
    type: integer
  PrAllowed:
    type: boolean
  PresetFreq:
    maximum: 16700000
    minimum: 1000000
    type: integer
  PutResourceLogLevelRequest:
    properties:
      LogLevel:
        $ref: '#/definitions/LogLevel'
    required:
      - LogLevel
    title: PutResourceLogLevelRequest
    type: object
  PutResourceLogLevelResponse:
    properties: {}
    type: object
  RaAllowed:
    type: boolean
  RegParamsRevision:
    maxLength: 64
    type: string
  ReportDevStatusBattery:
    type: boolean
  ReportDevStatusMargin:
    type: boolean
  ResetAllResourceLogLevelsRequest:
    properties: {}
    title: ResetAllResourceLogLevelsRequest
    type: object
  ResetAllResourceLogLevelsResponse:
    properties: {}
    type: object
  ResetResourceLogLevelRequest:
    properties: {}
    title: ResetResourceLogLevelRequest
    type: object
  ResetResourceLogLevelResponse:
    properties: {}
    type: object
  ResourceIdentifier:
    description: >-
      The identifier of the resource. For a Wireless Device, it is the wireless
      device ID. For a wireless gateway, it is the wireless gateway ID.
    maxLength: 256
    type: string
  ResourceNotFoundException: {}
  ResourceType:
    type: string
  Result:
    maxLength: 2048
    type: string
  RfRegion:
    maxLength: 64
    type: string
  RoleArn:
    maxLength: 2048
    minLength: 20
    type: string
  RxDataRate2:
    maximum: 15
    minimum: 0
    type: integer
  RxDelay1:
    maximum: 15
    minimum: 0
    type: integer
  RxDrOffset1:
    maximum: 7
    minimum: 0
    type: integer
  RxFreq2:
    maximum: 16700000
    minimum: 1000000
    type: integer
  SNwkSIntKey:
    pattern: '[a-fA-F0-9]{32}'
    type: string
  SendDataToWirelessDeviceRequest:
    properties:
      PayloadData:
        allOf:
          - $ref: '#/definitions/PayloadData'
          - description: 'The binary to be sent to the end device, encoded in base64.'
      TransmitMode:
        allOf:
          - $ref: '#/definitions/TransmitMode'
          - description: >-
              The transmit mode to use to send data to the wireless device. Can
              be: <code>0</code> for UM (unacknowledge mode) or <code>1</code>
              for AM (acknowledge mode).
      WirelessMetadata:
        allOf:
          - $ref: '#/definitions/WirelessMetadata'
          - description: Metadata about the message request.
    required:
      - TransmitMode
      - PayloadData
    title: SendDataToWirelessDeviceRequest
    type: object
  SendDataToWirelessDeviceResponse:
    properties:
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID of the message sent to the wireless device.
    type: object
  Seq:
    maximum: 16383
    minimum: 0
    type: integer
  ServiceProfile:
    description: Information about a service profile.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ServiceProfileArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/ServiceProfileId'
          - description: The ID of the service profile.
      Name:
        allOf:
          - $ref: '#/definitions/ServiceProfileName'
          - description: The name of the resource.
    type: object
  ServiceProfileArn:
    type: string
  ServiceProfileId:
    maxLength: 256
    type: string
  ServiceProfileList:
    items:
      $ref: '#/definitions/ServiceProfile'
    type: array
  ServiceProfileName:
    maxLength: 256
    type: string
  SessionKeysAbpV1_0_x:
    description: Session keys for ABP v1.1
    properties:
      AppSKey:
        allOf:
          - $ref: '#/definitions/AppSKey'
          - description: The AppSKey value.
      NwkSKey:
        allOf:
          - $ref: '#/definitions/NwkSKey'
          - description: The NwkSKey value.
    type: object
  SessionKeysAbpV1_1:
    description: Session keys for ABP v1.1
    properties:
      AppSKey:
        allOf:
          - $ref: '#/definitions/AppSKey'
          - description: The AppSKey value.
      FNwkSIntKey:
        allOf:
          - $ref: '#/definitions/FNwkSIntKey'
          - description: The FNwkSIntKey value.
      NwkSEncKey:
        allOf:
          - $ref: '#/definitions/NwkSEncKey'
          - description: The NwkSEncKey value.
      SNwkSIntKey:
        allOf:
          - $ref: '#/definitions/SNwkSIntKey'
          - description: The SNwkSIntKey value.
    type: object
  SidewalkAccountInfo:
    description: Information about a Sidewalk account.
    properties:
      AmazonId:
        allOf:
          - $ref: '#/definitions/AmazonId'
          - description: The Sidewalk Amazon ID.
      AppServerPrivateKey:
        allOf:
          - $ref: '#/definitions/AppServerPrivateKey'
          - description: The Sidewalk application server private key.
    type: object
  SidewalkAccountInfoWithFingerprint:
    description: Information about a Sidewalk account.
    properties:
      AmazonId:
        allOf:
          - $ref: '#/definitions/AmazonId'
          - description: The Sidewalk Amazon ID.
      Arn:
        allOf:
          - $ref: '#/definitions/PartnerAccountArn'
          - description: The Amazon Resource Name of the resource.
      Fingerprint:
        allOf:
          - $ref: '#/definitions/Fingerprint'
          - description: The fingerprint of the Sidewalk application server private key.
    type: object
  SidewalkAccountList:
    items:
      $ref: '#/definitions/SidewalkAccountInfoWithFingerprint'
    type: array
  SidewalkDevice:
    description: Sidewalk device object.
    properties:
      AmazonId:
        $ref: '#/definitions/AmazonId'
      DeviceCertificates:
        allOf:
          - $ref: '#/definitions/DeviceCertificateList'
          - description: The sidewalk device certificates for Ed25519 and P256r1.
      SidewalkId:
        allOf:
          - $ref: '#/definitions/SidewalkId'
          - description: The sidewalk device identification.
      SidewalkManufacturingSn:
        allOf:
          - $ref: '#/definitions/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing series number.
    type: object
  SidewalkDeviceMetadata:
    description: MetaData for Sidewalk device.
    properties:
      BatteryLevel:
        allOf:
          - $ref: '#/definitions/BatteryLevel'
          - description: Sidewalk device battery level.
      DeviceState:
        allOf:
          - $ref: '#/definitions/DeviceState'
          - description: Device state defines the device status of sidewalk device.
      Event:
        allOf:
          - $ref: '#/definitions/Event'
          - description: Sidewalk device status notification.
      Rssi:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The RSSI value.
    type: object
  SidewalkId:
    description: The sidewalk device identification.
    maxLength: 256
    type: string
  SidewalkListDevice:
    description: Sidewalk object used by list functions.
    properties:
      AmazonId:
        allOf:
          - $ref: '#/definitions/AmazonId'
          - description: The Sidewalk Amazon ID.
      DeviceCertificates:
        allOf:
          - $ref: '#/definitions/DeviceCertificateList'
          - description: The sidewalk device certificates for Ed25519 and P256r1.
      SidewalkId:
        allOf:
          - $ref: '#/definitions/SidewalkId'
          - description: The sidewalk device identification.
      SidewalkManufacturingSn:
        allOf:
          - $ref: '#/definitions/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing series number.
    type: object
  SidewalkManufacturingSn:
    maxLength: 64
    type: string
  SidewalkSendDataToDevice:
    description: Information about a Sidewalk router.
    properties:
      MessageType:
        $ref: '#/definitions/MessageType'
      Seq:
        allOf:
          - $ref: '#/definitions/Seq'
          - description: The sequence number.
    type: object
  SidewalkUpdateAccount:
    description: Sidewalk update.
    properties:
      AppServerPrivateKey:
        allOf:
          - $ref: '#/definitions/AppServerPrivateKey'
          - description: The new Sidewalk application server private key.
    type: object
  SigningAlg:
    description: The certificate chain algorithm provided by sidewalk.
    enum:
      - Ed25519
      - P256r1
    type: string
  Station:
    maxLength: 4096
    minLength: 1
    type: string
  SubBand:
    description: A subset of supported frequency channels in a certain RFRegion.
    maximum: 8
    minimum: 1
    type: integer
  SubBands:
    description: >-
      A list of integer indicating which sub bands are supported by LoRa
      gateway.
    items:
      $ref: '#/definitions/SubBand'
    maxItems: 8
    minItems: 0
    type: array
  Supports32BitFCnt:
    type: boolean
  SupportsClassB:
    type: boolean
  SupportsClassC:
    type: boolean
  SupportsJoin:
    type: boolean
  Tag:
    description: A simple label consisting of a customer-defined key-value pair
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: The tag's key value.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The tag's value.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              Adds to or modifies the tags of the given resource. Tags are
              metadata that you can use to manage a resource.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  TargetPer:
    maximum: 100
    minimum: 0
    type: integer
  TestWirelessDeviceRequest:
    properties: {}
    title: TestWirelessDeviceRequest
    type: object
  TestWirelessDeviceResponse:
    properties:
      Result:
        allOf:
          - $ref: '#/definitions/Result'
          - description: The result returned by the test.
    type: object
  ThingArn:
    type: string
  ThingName:
    type: string
  ThrottlingException: {}
  TooManyTagsException: {}
  TransmitMode:
    maximum: 1
    minimum: 0
    type: integer
  UlBucketSize:
    maximum: 2147483647
    minimum: 0
    type: integer
  UlRate:
    maximum: 2147483647
    minimum: 0
    type: integer
  UlRatePolicy:
    maxLength: 256
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateDataSource:
    maxLength: 4096
    minLength: 1
    type: string
  UpdateDestinationRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: A new description of the resource.
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: The new rule name or topic rule to send messages to.
      ExpressionType:
        allOf:
          - $ref: '#/definitions/ExpressionType'
          - description: The type of value in <code>Expression</code>.
      RoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
    title: UpdateDestinationRequest
    type: object
  UpdateDestinationResponse:
    properties: {}
    type: object
  UpdateLogLevelsByResourceTypesRequest:
    properties:
      DefaultLogLevel:
        $ref: '#/definitions/LogLevel'
      WirelessDeviceLogOptions:
        $ref: '#/definitions/WirelessDeviceLogOptionList'
      WirelessGatewayLogOptions:
        $ref: '#/definitions/WirelessGatewayLogOptionList'
    title: UpdateLogLevelsByResourceTypesRequest
    type: object
  UpdateLogLevelsByResourceTypesResponse:
    properties: {}
    type: object
  UpdatePartnerAccountRequest:
    properties:
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkUpdateAccount'
          - description: The Sidewalk account credentials.
    required:
      - Sidewalk
    title: UpdatePartnerAccountRequest
    type: object
  UpdatePartnerAccountResponse:
    properties: {}
    type: object
  UpdateSignature:
    maxLength: 4096
    minLength: 1
    type: string
  UpdateWirelessDeviceRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: A new description of the resource.
      DestinationName:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the new destination for the device.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANUpdateDevice'
          - description: The updated wireless device's configuration.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessDeviceName'
          - description: The new name of the resource.
    title: UpdateWirelessDeviceRequest
    type: object
  UpdateWirelessDeviceResponse:
    properties: {}
    type: object
  UpdateWirelessGatewayRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: A new description of the resource.
      JoinEuiFilters:
        $ref: '#/definitions/JoinEuiFilters'
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayName'
          - description: The new name of the resource.
      NetIdFilters:
        $ref: '#/definitions/NetIdFilters'
    title: UpdateWirelessGatewayRequest
    type: object
  UpdateWirelessGatewayResponse:
    properties: {}
    type: object
  UpdateWirelessGatewayTaskCreate:
    description: UpdateWirelessGatewayTaskCreate object.
    properties:
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANUpdateGatewayTaskCreate'
          - description: The properties that relate to the LoRaWAN wireless gateway.
      UpdateDataRole:
        allOf:
          - $ref: '#/definitions/UpdateDataSource'
          - description: The IAM role used to read data from the S3 bucket.
      UpdateDataSource:
        allOf:
          - $ref: '#/definitions/UpdateDataSource'
          - description: The link to the S3 bucket.
    type: object
  UpdateWirelessGatewayTaskEntry:
    description: UpdateWirelessGatewayTaskEntry object.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessGatewayTaskDefinitionId'
          - description: The ID of the new wireless gateway task entry.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANUpdateGatewayTaskEntry'
          - description: The properties that relate to the LoRaWAN wireless gateway.
    type: object
  ValidationException: {}
  WirelessDeviceArn:
    type: string
  WirelessDeviceEvent:
    description: >-
      The event for a log message, if the log message is tied to a wireless
      device.
    enum:
      - Join
      - Rejoin
      - Uplink_Data
      - Downlink_Data
      - Registration
    type: string
  WirelessDeviceEventLogOption:
    description: >-
      <p>The log options for a wireless device event and can be used to set log
      levels for a specific wireless device event.</p> <p>For a LoRaWAN device,
      possible events for a log messsage are: <code>Join</code>,
      <code>Rejoin</code>, <code>Downlink_Data</code>, and
      <code>Uplink_Data</code>. For a Sidewalk device, possible events for a log
      message are <code>Registration</code>, <code>Downlink_Data</code>, and
      <code>Uplink_Data</code>.</p>
    properties:
      Event:
        $ref: '#/definitions/WirelessDeviceEvent'
      LogLevel:
        $ref: '#/definitions/LogLevel'
    required:
      - Event
      - LogLevel
    type: object
  WirelessDeviceEventLogOptionList:
    description: The list of wireless device event log options.
    items:
      $ref: '#/definitions/WirelessDeviceEventLogOption'
    type: array
  WirelessDeviceId:
    maxLength: 256
    type: string
  WirelessDeviceIdType:
    enum:
      - WirelessDeviceId
      - DevEui
      - ThingName
      - SidewalkManufacturingSn
    type: string
  WirelessDeviceLogOption:
    description: >-
      The log options for wireless devices and can be used to set log levels for
      a specific type of wireless device.
    properties:
      Events:
        $ref: '#/definitions/WirelessDeviceEventLogOptionList'
      LogLevel:
        $ref: '#/definitions/LogLevel'
      Type:
        allOf:
          - $ref: '#/definitions/WirelessDeviceType'
          - description: The wireless device type.
    required:
      - Type
      - LogLevel
    type: object
  WirelessDeviceLogOptionList:
    description: The list of wireless device log options.
    items:
      $ref: '#/definitions/WirelessDeviceLogOption'
    type: array
  WirelessDeviceName:
    maxLength: 256
    type: string
  WirelessDeviceStatistics:
    description: Information about a wireless device's operation.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessDeviceArn'
          - description: The Amazon Resource Name of the resource.
      DestinationName:
        allOf:
          - $ref: '#/definitions/DestinationName'
          - description: The name of the destination to which the device is assigned.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessDeviceId'
          - description: The ID of the wireless device reporting the data.
      LastUplinkReceivedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the most recent uplink was received.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANListDevice'
          - description: LoRaWAN device info.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessDeviceName'
          - description: The name of the resource.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkListDevice'
          - description: The Sidewalk account credentials.
      Type:
        allOf:
          - $ref: '#/definitions/WirelessDeviceType'
          - description: The wireless device type.
    type: object
  WirelessDeviceStatisticsList:
    items:
      $ref: '#/definitions/WirelessDeviceStatistics'
    type: array
  WirelessDeviceType:
    enum:
      - Sidewalk
      - LoRaWAN
    type: string
  WirelessGatewayArn:
    type: string
  WirelessGatewayEvent:
    description: >-
      The event for a log message, if the log message is tied to a wireless
      gateway.
    enum:
      - CUPS_Request
      - Certificate
    type: string
  WirelessGatewayEventLogOption:
    description: >-
      <p>The log options for a wireless gateway event and can be used to set log
      levels for a specific wireless gateway event.</p> <p>For a LoRaWAN
      gateway, possible events for a log message are <code>CUPS_Request</code>
      and <code>Certificate</code>.</p>
    properties:
      Event:
        $ref: '#/definitions/WirelessGatewayEvent'
      LogLevel:
        $ref: '#/definitions/LogLevel'
    required:
      - Event
      - LogLevel
    type: object
  WirelessGatewayEventLogOptionList:
    description: The list of wireless gateway event log options.
    items:
      $ref: '#/definitions/WirelessGatewayEventLogOption'
    type: array
  WirelessGatewayId:
    maxLength: 256
    type: string
  WirelessGatewayIdType:
    enum:
      - GatewayEui
      - WirelessGatewayId
      - ThingName
    type: string
  WirelessGatewayLogOption:
    description: >-
      The log options for wireless gateways and can be used to set log levels
      for a specific type of wireless gateway.
    properties:
      Events:
        $ref: '#/definitions/WirelessGatewayEventLogOptionList'
      LogLevel:
        $ref: '#/definitions/LogLevel'
      Type:
        $ref: '#/definitions/WirelessGatewayType'
    required:
      - Type
      - LogLevel
    type: object
  WirelessGatewayLogOptionList:
    description: The list of wireless gateway log options.
    items:
      $ref: '#/definitions/WirelessGatewayLogOption'
    type: array
  WirelessGatewayName:
    maxLength: 256
    type: string
  WirelessGatewayServiceType:
    enum:
      - CUPS
      - LNS
    type: string
  WirelessGatewayStatistics:
    description: Information about a wireless gateway's operation.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/WirelessGatewayArn'
          - description: The Amazon Resource Name of the resource.
      Description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the resource.
      Id:
        allOf:
          - $ref: '#/definitions/WirelessGatewayId'
          - description: The ID of the wireless gateway reporting the data.
      LastUplinkReceivedAt:
        allOf:
          - $ref: '#/definitions/ISODateTimeString'
          - description: The date and time when the most recent uplink was received.
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANGateway'
          - description: LoRaWAN gateway info.
      Name:
        allOf:
          - $ref: '#/definitions/WirelessGatewayName'
          - description: The name of the resource.
    type: object
  WirelessGatewayStatisticsList:
    items:
      $ref: '#/definitions/WirelessGatewayStatistics'
    type: array
  WirelessGatewayTaskDefinitionArn:
    type: string
  WirelessGatewayTaskDefinitionId:
    maxLength: 36
    pattern: >-
      [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
    type: string
  WirelessGatewayTaskDefinitionList:
    items:
      $ref: '#/definitions/UpdateWirelessGatewayTaskEntry'
    type: array
  WirelessGatewayTaskDefinitionType:
    enum:
      - UPDATE
    type: string
  WirelessGatewayTaskName:
    maxLength: 2048
    minLength: 1
    type: string
  WirelessGatewayTaskStatus:
    enum:
      - PENDING
      - IN_PROGRESS
      - FIRST_RETRY
      - SECOND_RETRY
      - COMPLETED
      - FAILED
    type: string
  WirelessGatewayType:
    description: The wireless gateway type.
    enum:
      - LoRaWAN
    type: string
  WirelessMetadata:
    description: WirelessMetadata object.
    properties:
      LoRaWAN:
        allOf:
          - $ref: '#/definitions/LoRaWANSendDataToDevice'
          - description: LoRaWAN device info.
      Sidewalk:
        allOf:
          - $ref: '#/definitions/SidewalkSendDataToDevice'
          - description: The Sidewalk account credentials.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotwireless/'
host: api.iotwireless.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: AWS IoT Wireless API documentation
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS IoT Wireless
  version: '2020-11-22'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: iotwireless
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotwireless-2020-11-22.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iotwireless
paths:
  /destinations:
    get:
      description: Lists the destinations registered to your AWS account.
      operationId: ListDestinations
      parameters:
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDestinationsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new destination that maps a device message to an AWS IoT rule.
      operationId: CreateDestination
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              Description:
                description: The description of the new resource.
                maxLength: 2048
                type: string
              Expression:
                description: The rule name or topic rule to send messages to.
                maxLength: 2048
                type: string
              ExpressionType:
                description: The type of value in <code>Expression</code>.
                enum:
                  - RuleName
                  - MqttTopic
                type: string
              Name:
                description: The name of the new resource.
                maxLength: 128
                pattern: '[a-zA-Z0-9-_]+'
                type: string
              RoleArn:
                description: The ARN of the IAM Role that authorizes the destination.
                maxLength: 2048
                minLength: 20
                type: string
              Tags:
                description: >-
                  The tags to attach to the new destination. Tags are metadata
                  that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            required:
              - Name
              - ExpressionType
              - Expression
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDestinationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/destinations/{Name}':
    delete:
      description: Deletes a destination.
      operationId: DeleteDestination
      parameters:
        - description: The name of the resource to delete.
          in: path
          maxLength: 128
          name: Name
          pattern: '[a-zA-Z0-9-_]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDestinationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets information about a destination.
      operationId: GetDestination
      parameters:
        - description: The name of the resource to get.
          in: path
          maxLength: 128
          name: Name
          pattern: '[a-zA-Z0-9-_]+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDestinationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates properties of a destination.
      operationId: UpdateDestination
      parameters:
        - description: The new name of the resource.
          in: path
          maxLength: 128
          name: Name
          pattern: '[a-zA-Z0-9-_]+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A new description of the resource.
                maxLength: 2048
                type: string
              Expression:
                description: The new rule name or topic rule to send messages to.
                maxLength: 2048
                type: string
              ExpressionType:
                description: The type of value in <code>Expression</code>.
                enum:
                  - RuleName
                  - MqttTopic
                type: string
              RoleArn:
                description: The ARN of the IAM Role that authorizes the destination.
                maxLength: 2048
                minLength: 20
                type: string
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDestinationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /device-profiles:
    get:
      description: Lists the device profiles registered to your AWS account.
      operationId: ListDeviceProfiles
      parameters:
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceProfilesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new device profile.
      operationId: CreateDeviceProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              LoRaWAN:
                description: LoRaWANDeviceProfile object.
                properties:
                  ClassBTimeout:
                    allOf:
                      - $ref: '#/definitions/ClassBTimeout'
                      - description: The ClassBTimeout value.
                  ClassCTimeout:
                    allOf:
                      - $ref: '#/definitions/ClassCTimeout'
                      - description: The ClassCTimeout value.
                  FactoryPresetFreqsList:
                    allOf:
                      - $ref: '#/definitions/FactoryPresetFreqsList'
                      - description: >-
                          The list of values that make up the FactoryPresetFreqs
                          value.
                  MacVersion:
                    allOf:
                      - $ref: '#/definitions/MacVersion'
                      - description: >-
                          The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to
                          use with this device profile.
                  MaxDutyCycle:
                    allOf:
                      - $ref: '#/definitions/MaxDutyCycle'
                      - description: The MaxDutyCycle value.
                  MaxEirp:
                    allOf:
                      - $ref: '#/definitions/MaxEirp'
                      - description: The MaxEIRP value.
                  PingSlotDr:
                    allOf:
                      - $ref: '#/definitions/PingSlotDr'
                      - description: The PingSlotDR value.
                  PingSlotFreq:
                    allOf:
                      - $ref: '#/definitions/PingSlotFreq'
                      - description: The PingSlotFreq value.
                  PingSlotPeriod:
                    allOf:
                      - $ref: '#/definitions/PingSlotPeriod'
                      - description: The PingSlotPeriod value.
                  RegParamsRevision:
                    allOf:
                      - $ref: '#/definitions/RegParamsRevision'
                      - description: The version of regional parameters.
                  RfRegion:
                    allOf:
                      - $ref: '#/definitions/RfRegion'
                      - description: The frequency band (RFRegion) value.
                  RxDataRate2:
                    allOf:
                      - $ref: '#/definitions/RxDataRate2'
                      - description: The RXDataRate2 value.
                  RxDelay1:
                    allOf:
                      - $ref: '#/definitions/RxDelay1'
                      - description: The RXDelay1 value.
                  RxDrOffset1:
                    allOf:
                      - $ref: '#/definitions/RxDrOffset1'
                      - description: The RXDROffset1 value.
                  RxFreq2:
                    allOf:
                      - $ref: '#/definitions/RxFreq2'
                      - description: The RXFreq2 value.
                  Supports32BitFCnt:
                    allOf:
                      - $ref: '#/definitions/Supports32BitFCnt'
                      - description: The Supports32BitFCnt value.
                  SupportsClassB:
                    allOf:
                      - $ref: '#/definitions/SupportsClassB'
                      - description: The SupportsClassB value.
                  SupportsClassC:
                    allOf:
                      - $ref: '#/definitions/SupportsClassC'
                      - description: The SupportsClassC value.
                  SupportsJoin:
                    allOf:
                      - $ref: '#/definitions/SupportsJoin'
                      - description: The SupportsJoin value.
                type: object
              Name:
                description: The name of the new resource.
                maxLength: 256
                type: string
              Tags:
                description: >-
                  The tags to attach to the new device profile. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeviceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/device-profiles/{Id}':
    delete:
      description: Deletes a device profile.
      operationId: DeleteDeviceProfile
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDeviceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets information about a device profile.
      operationId: GetDeviceProfile
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeviceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /log-levels:
    delete:
      description: >-
        Removes the log-level overrides for all resources; both wireless devices
        and wireless gateways.
      operationId: ResetAllResourceLogLevels
      parameters: []
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/ResetAllResourceLogLevelsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: >-
        Returns current default log levels or log levels by resource types.
        Based on resource types, log levels can be for wireless device log
        options or wireless gateway log options.
      operationId: GetLogLevelsByResourceTypes
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLogLevelsByResourceTypesResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Set default log level, or log levels by resource types. This can be for
        wireless device log options or wireless gateways log options and is used
        to control the log messages that'll be displayed in CloudWatch.
      operationId: UpdateLogLevelsByResourceTypes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DefaultLogLevel:
                description: The log level for a log message.
                enum:
                  - INFO
                  - ERROR
                  - DISABLED
                type: string
              WirelessDeviceLogOptions:
                description: The list of wireless device log options.
                items:
                  $ref: '#/definitions/WirelessDeviceLogOption'
                type: array
              WirelessGatewayLogOptions:
                description: The list of wireless gateway log options.
                items:
                  $ref: '#/definitions/WirelessGatewayLogOption'
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLogLevelsByResourceTypesResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/log-levels/{ResourceIdentifier}#resourceType':
    delete:
      description: >-
        Removes the log-level override, if any, for a specific resource-ID and
        resource-type. It can be used for a wireless device or a wireless
        gateway.
      operationId: ResetResourceLogLevel
      parameters:
        - description: >-
            The identifier of the resource. For a Wireless Device, it is the
            wireless device ID. For a wireless gateway, it is the wireless
            gateway ID.
          in: path
          maxLength: 256
          name: ResourceIdentifier
          required: true
          type: string
        - description: >-
            The type of the resource, which can be <code>WirelessDevice</code>
            or <code>WirelessGateway</code>.
          in: query
          name: resourceType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/ResetResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: >-
        Fetches the log-level override, if any, for a given resource-ID and
        resource-type. It can be used for a wireless device or a wireless
        gateway.
      operationId: GetResourceLogLevel
      parameters:
        - description: >-
            The identifier of the resource. For a Wireless Device, it is the
            wireless device ID. For a wireless gateway, it is the wireless
            gateway ID.
          in: path
          maxLength: 256
          name: ResourceIdentifier
          required: true
          type: string
        - description: >-
            The type of the resource, which can be <code>WirelessDevice</code>
            or <code>WirelessGateway</code>.
          in: query
          name: resourceType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Sets the log-level override for a resource-ID and resource-type. This
        option can be specified for a wireless gateway or a wireless device. A
        limit of 200 log level override can be set per account.
      operationId: PutResourceLogLevel
      parameters:
        - description: >-
            The identifier of the resource. For a Wireless Device, it is the
            wireless device ID. For a wireless gateway, it is the wireless
            gateway ID.
          in: path
          maxLength: 256
          name: ResourceIdentifier
          required: true
          type: string
        - description: >-
            The type of the resource, which can be <code>WirelessDevice</code>
            or <code>WirelessGateway</code>.
          in: query
          name: resourceType
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LogLevel:
                description: The log level for a log message.
                enum:
                  - INFO
                  - ERROR
                  - DISABLED
                type: string
            required:
              - LogLevel
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /partner-accounts:
    get:
      description: Lists the partner accounts associated with your AWS account.
      operationId: ListPartnerAccounts
      parameters:
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPartnerAccountsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Associates a partner account with your AWS account.
      operationId: AssociateAwsAccountWithPartnerAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              Sidewalk:
                description: Information about a Sidewalk account.
                properties:
                  AmazonId:
                    allOf:
                      - $ref: '#/definitions/AmazonId'
                      - description: The Sidewalk Amazon ID.
                  AppServerPrivateKey:
                    allOf:
                      - $ref: '#/definitions/AppServerPrivateKey'
                      - description: The Sidewalk application server private key.
                type: object
              Tags:
                description: >-
                  The tags to attach to the specified resource. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            required:
              - Sidewalk
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateAwsAccountWithPartnerAccountResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/partner-accounts/{PartnerAccountId}#partnerType':
    delete:
      description: >-
        Disassociates your AWS account from a partner account. If
        <code>PartnerAccountId</code> and <code>PartnerType</code> are
        <code>null</code>, disassociates your AWS account from all partner
        accounts.
      operationId: DisassociateAwsAccountFromPartnerAccount
      parameters:
        - description: The partner account ID to disassociate from the AWS account.
          in: path
          maxLength: 256
          name: PartnerAccountId
          required: true
          type: string
        - description: The partner type.
          enum:
            - Sidewalk
          in: query
          name: partnerType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateAwsAccountFromPartnerAccountResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: >-
        Gets information about a partner account. If
        <code>PartnerAccountId</code> and <code>PartnerType</code> are
        <code>null</code>, returns all partner accounts.
      operationId: GetPartnerAccount
      parameters:
        - description: The partner account ID to disassociate from the AWS account.
          in: path
          maxLength: 256
          name: PartnerAccountId
          required: true
          type: string
        - description: The partner type.
          enum:
            - Sidewalk
          in: query
          name: partnerType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPartnerAccountResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates properties of a partner account.
      operationId: UpdatePartnerAccount
      parameters:
        - description: The ID of the partner account to update.
          in: path
          maxLength: 256
          name: PartnerAccountId
          required: true
          type: string
        - description: The partner type.
          enum:
            - Sidewalk
          in: query
          name: partnerType
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Sidewalk:
                description: Sidewalk update.
                properties:
                  AppServerPrivateKey:
                    allOf:
                      - $ref: '#/definitions/AppServerPrivateKey'
                      - description: The new Sidewalk application server private key.
                type: object
            required:
              - Sidewalk
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePartnerAccountResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /service-endpoint:
    get:
      description: >-
        Gets the account-specific endpoint for Configuration and Update Server
        (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
      operationId: GetServiceEndpoint
      parameters:
        - description: >-
            The service type for which to get endpoint information about. Can be
            <code>CUPS</code> for the Configuration and Update Server endpoint,
            or <code>LNS</code> for the LoRaWAN Network Server endpoint.
          enum:
            - CUPS
            - LNS
          in: query
          name: serviceType
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceEndpointResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /service-profiles:
    get:
      description: Lists the service profiles registered to your AWS account.
      operationId: ListServiceProfiles
      parameters:
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServiceProfilesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new service profile.
      operationId: CreateServiceProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              LoRaWAN:
                description: LoRaWANServiceProfile object.
                properties:
                  AddGwMetadata:
                    allOf:
                      - $ref: '#/definitions/AddGwMetadata'
                      - description: The AddGWMetaData value.
                type: object
              Name:
                description: The name of the new resource.
                maxLength: 256
                type: string
              Tags:
                description: >-
                  The tags to attach to the new service profile. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateServiceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/service-profiles/{Id}':
    delete:
      description: Deletes a service profile.
      operationId: DeleteServiceProfile
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteServiceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets information about a service profile.
      operationId: GetServiceProfile
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /tags#resourceArn:
    get:
      description: Lists the tags (metadata) you have assigned to the resource.
      operationId: ListTagsForResource
      parameters:
        - description: The ARN of the resource for which you want to list tags.
          in: query
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds a tag to a resource.
      operationId: TagResource
      parameters:
        - description: The ARN of the resource to add tags to.
          in: query
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                description: >-
                  Adds to or modifies the tags of the given resource. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  /tags#resourceArn&tagKeys:
    delete:
      description: Removes one or more tags from a resource.
      operationId: UntagResource
      parameters:
        - description: The ARN of the resource to remove tags from.
          in: query
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: A list of the keys of the tags to remove from the resource.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 200
          minItems: 0
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /wireless-devices:
    get:
      description: Lists the wireless devices registered to your AWS account.
      operationId: ListWirelessDevices
      parameters:
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: >-
            A filter to list only the wireless devices that use this
            destination.
          in: query
          maxLength: 128
          name: destinationName
          pattern: '[a-zA-Z0-9-_]+'
          required: false
          type: string
        - description: >-
            A filter to list only the wireless devices that use this device
            profile.
          in: query
          maxLength: 256
          name: deviceProfileId
          required: false
          type: string
        - description: >-
            A filter to list only the wireless devices that use this service
            profile.
          in: query
          maxLength: 256
          name: serviceProfileId
          required: false
          type: string
        - description: >-
            A filter to list only the wireless devices that use this wireless
            device type.
          enum:
            - Sidewalk
            - LoRaWAN
          in: query
          name: wirelessDeviceType
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWirelessDevicesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Provisions a wireless device.
      operationId: CreateWirelessDevice
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              Description:
                description: The description of the new resource.
                maxLength: 2048
                type: string
              DestinationName:
                description: >-
                  The name of the destination to assign to the new wireless
                  device.
                maxLength: 128
                pattern: '[a-zA-Z0-9-_]+'
                type: string
              LoRaWAN:
                description: LoRaWAN object for create functions.
                properties:
                  AbpV1_0_x:
                    allOf:
                      - $ref: '#/definitions/AbpV1_0_x'
                      - description: LoRaWAN object for create APIs
                  AbpV1_1:
                    allOf:
                      - $ref: '#/definitions/AbpV1_1'
                      - description: ABP device object for create APIs for v1.1
                  DevEui:
                    allOf:
                      - $ref: '#/definitions/DevEui'
                      - description: The DevEUI value.
                  DeviceProfileId:
                    allOf:
                      - $ref: '#/definitions/DeviceProfileId'
                      - description: >-
                          The ID of the device profile for the new wireless
                          device.
                  OtaaV1_0_x:
                    allOf:
                      - $ref: '#/definitions/OtaaV1_0_x'
                      - description: OTAA device object for create APIs for v1.0.x
                  OtaaV1_1:
                    allOf:
                      - $ref: '#/definitions/OtaaV1_1'
                      - description: OTAA device object for v1.1 for create APIs
                  ServiceProfileId:
                    allOf:
                      - $ref: '#/definitions/ServiceProfileId'
                      - description: The ID of the service profile.
                type: object
              Name:
                description: The name of the new resource.
                maxLength: 256
                type: string
              Tags:
                description: >-
                  The tags to attach to the new wireless device. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
              Type:
                description: The wireless device type.
                enum:
                  - Sidewalk
                  - LoRaWAN
                type: string
            required:
              - Type
              - DestinationName
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-devices/{Identifier}#identifierType':
    get:
      description: Gets information about a wireless device.
      operationId: GetWirelessDevice
      parameters:
        - description: The identifier of the wireless device to get.
          in: path
          maxLength: 256
          name: Identifier
          required: true
          type: string
        - description: The type of identifier used in <code>identifier</code>.
          enum:
            - WirelessDeviceId
            - DevEui
            - ThingName
            - SidewalkManufacturingSn
          in: query
          name: identifierType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/wireless-devices/{Id}':
    delete:
      description: Deletes a wireless device.
      operationId: DeleteWirelessDevice
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates properties of a wireless device.
      operationId: UpdateWirelessDevice
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A new description of the resource.
                maxLength: 2048
                type: string
              DestinationName:
                description: The name of the new destination for the device.
                maxLength: 128
                pattern: '[a-zA-Z0-9-_]+'
                type: string
              LoRaWAN:
                description: LoRaWAN object for update functions.
                properties:
                  DeviceProfileId:
                    allOf:
                      - $ref: '#/definitions/DeviceProfileId'
                      - description: The ID of the device profile for the wireless device.
                  ServiceProfileId:
                    allOf:
                      - $ref: '#/definitions/ServiceProfileId'
                      - description: The ID of the service profile.
                type: object
              Name:
                description: The new name of the resource.
                maxLength: 256
                type: string
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-devices/{Id}/data':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Sends a decrypted application data frame to a device.
      operationId: SendDataToWirelessDevice
      parameters:
        - description: The ID of the wireless device to receive the data.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              PayloadData:
                description: 'The binary to be sent to the end device, encoded in base64.'
                maxLength: 2048
                pattern: >-
                  ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
              TransmitMode:
                description: >-
                  The transmit mode to use to send data to the wireless device.
                  Can be: <code>0</code> for UM (unacknowledge mode) or
                  <code>1</code> for AM (acknowledge mode).
                maximum: 1
                minimum: 0
                type: integer
              WirelessMetadata:
                description: WirelessMetadata object.
                properties:
                  LoRaWAN:
                    allOf:
                      - $ref: '#/definitions/LoRaWANSendDataToDevice'
                      - description: LoRaWAN device info.
                  Sidewalk:
                    allOf:
                      - $ref: '#/definitions/SidewalkSendDataToDevice'
                      - description: The Sidewalk account credentials.
                type: object
            required:
              - TransmitMode
              - PayloadData
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/SendDataToWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/wireless-devices/{Id}/statistics':
    get:
      description: Gets operating information about a wireless device.
      operationId: GetWirelessDeviceStatistics
      parameters:
        - description: The ID of the wireless device for which to get the data.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessDeviceStatisticsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/wireless-devices/{Id}/test':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Simulates a provisioned device by sending an uplink data payload of
        <code>Hello</code>.
      operationId: TestWirelessDevice
      parameters:
        - description: The ID of the wireless device to test.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestWirelessDeviceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/wireless-devices/{Id}/thing':
    delete:
      description: Disassociates a wireless device from its currently associated thing.
      operationId: DisassociateWirelessDeviceFromThing
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateWirelessDeviceFromThingResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Associates a wireless device with a thing.
      operationId: AssociateWirelessDeviceWithThing
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ThingArn:
                description: The ARN of the thing to associate with the wireless device.
                type: string
            required:
              - ThingArn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/AssociateWirelessDeviceWithThingResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /wireless-gateway-task-definitions:
    get:
      description: >-
        List the wireless gateway tasks definitions registered to your AWS
        account.
      operationId: ListWirelessGatewayTaskDefinitions
      parameters:
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: >-
            A filter to list only the wireless gateway task definitions that use
            this task definition type.
          enum:
            - UPDATE
          in: query
          name: taskDefinitionType
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWirelessGatewayTaskDefinitionsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a gateway task definition.
      operationId: CreateWirelessGatewayTaskDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AutoCreateTasks:
                description: >-
                  Whether to automatically create tasks using this task
                  definition for all gateways with the specified current
                  version. If <code>false</code>, the task must me created by
                  calling <code>CreateWirelessGatewayTask</code>.
                type: boolean
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              Name:
                description: The name of the new resource.
                maxLength: 2048
                minLength: 1
                type: string
              Tags:
                description: >-
                  The tags to attach to the specified resource. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
              Update:
                description: UpdateWirelessGatewayTaskCreate object.
                properties:
                  LoRaWAN:
                    allOf:
                      - $ref: '#/definitions/LoRaWANUpdateGatewayTaskCreate'
                      - description: >-
                          The properties that relate to the LoRaWAN wireless
                          gateway.
                  UpdateDataRole:
                    allOf:
                      - $ref: '#/definitions/UpdateDataSource'
                      - description: The IAM role used to read data from the S3 bucket.
                  UpdateDataSource:
                    allOf:
                      - $ref: '#/definitions/UpdateDataSource'
                      - description: The link to the S3 bucket.
                type: object
            required:
              - AutoCreateTasks
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-gateway-task-definitions/{Id}':
    delete:
      description: >-
        Deletes a wireless gateway task definition. Deleting this task
        definition does not affect tasks that are currently in progress.
      operationId: DeleteWirelessGatewayTaskDefinition
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 36
          name: Id
          pattern: >-
            [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets information about a wireless gateway task definition.
      operationId: GetWirelessGatewayTaskDefinition
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 36
          name: Id
          pattern: >-
            [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /wireless-gateways:
    get:
      description: Lists the wireless gateways registered to your AWS account.
      operationId: ListWirelessGateways
      parameters:
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          maxLength: 4096
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return in this operation.
          in: query
          maximum: 250
          minimum: 0
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWirelessGatewaysResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Provisions a wireless gateway.
      operationId: CreateWirelessGateway
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Each resource must have a unique client request token. If you
                  try to create a new resource with the same token as a resource
                  that already exists, an exception occurs. If you omit this
                  value, AWS SDKs will automatically generate a unique client
                  request. 
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]+$'
                type: string
              Description:
                description: The description of the new resource.
                maxLength: 2048
                type: string
              LoRaWAN:
                description: LoRaWANGateway object.
                properties:
                  GatewayEui:
                    allOf:
                      - $ref: '#/definitions/GatewayEui'
                      - description: The gateway's EUI value.
                  JoinEuiFilters:
                    $ref: '#/definitions/JoinEuiFilters'
                  NetIdFilters:
                    $ref: '#/definitions/NetIdFilters'
                  RfRegion:
                    allOf:
                      - $ref: '#/definitions/RfRegion'
                      - description: The frequency band (RFRegion) value.
                  SubBands:
                    $ref: '#/definitions/SubBands'
                type: object
              Name:
                description: The name of the new resource.
                maxLength: 256
                type: string
              Tags:
                description: >-
                  The tags to attach to the new wireless gateway. Tags are
                  metadata that you can use to manage a resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 200
                minItems: 0
                type: array
            required:
              - LoRaWAN
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateWirelessGatewayResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-gateways/{Identifier}#identifierType':
    get:
      description: Gets information about a wireless gateway.
      operationId: GetWirelessGateway
      parameters:
        - description: The identifier of the wireless gateway to get.
          in: path
          maxLength: 256
          name: Identifier
          required: true
          type: string
        - description: The type of identifier used in <code>identifier</code>.
          enum:
            - GatewayEui
            - WirelessGatewayId
            - ThingName
          in: query
          name: identifierType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/wireless-gateways/{Id}':
    delete:
      description: Deletes a wireless gateway.
      operationId: DeleteWirelessGateway
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWirelessGatewayResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates properties of a wireless gateway.
      operationId: UpdateWirelessGateway
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A new description of the resource.
                maxLength: 2048
                type: string
              JoinEuiFilters:
                description: >-
                  A list of JoinEuiRange used by LoRa gateways to filter LoRa
                  frames.
                items:
                  $ref: '#/definitions/JoinEuiRange'
                maxItems: 3
                minItems: 0
                type: array
              Name:
                description: The new name of the resource.
                maxLength: 256
                type: string
              NetIdFilters:
                description: >-
                  A list of NetId values that are used by LoRa gateways to
                  filter the uplink frames.
                items:
                  $ref: '#/definitions/NetId'
                maxItems: 10
                minItems: 0
                type: array
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWirelessGatewayResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-gateways/{Id}/certificate':
    delete:
      description: >-
        Disassociates a wireless gateway from its currently associated
        certificate.
      operationId: DisassociateWirelessGatewayFromCertificate
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateWirelessGatewayFromCertificateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: >-
        Gets the ID of the certificate that is currently associated with a
        wireless gateway.
      operationId: GetWirelessGatewayCertificate
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayCertificateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Associates a wireless gateway with a certificate.
      operationId: AssociateWirelessGatewayWithCertificate
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              IotCertificateId:
                description: >-
                  The ID of the certificate to associate with the wireless
                  gateway.
                maxLength: 4096
                minLength: 1
                type: string
            required:
              - IotCertificateId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateWirelessGatewayWithCertificateResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-gateways/{Id}/firmware-information':
    get:
      description: >-
        Gets the firmware version and other information about a wireless
        gateway.
      operationId: GetWirelessGatewayFirmwareInformation
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayFirmwareInformationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/wireless-gateways/{Id}/statistics':
    get:
      description: Gets operating information about a wireless gateway.
      operationId: GetWirelessGatewayStatistics
      parameters:
        - description: The ID of the wireless gateway for which to get the data.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayStatisticsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/wireless-gateways/{Id}/tasks':
    delete:
      description: Deletes a wireless gateway task.
      operationId: DeleteWirelessGatewayTask
      parameters:
        - description: The ID of the resource to delete.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets information about a wireless gateway task.
      operationId: GetWirelessGatewayTask
      parameters:
        - description: The ID of the resource to get.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a task for a wireless gateway.
      operationId: CreateWirelessGatewayTask
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              WirelessGatewayTaskDefinitionId:
                description: The ID of the WirelessGatewayTaskDefinition.
                maxLength: 36
                pattern: >-
                  [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
                type: string
            required:
              - WirelessGatewayTaskDefinitionId
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/wireless-gateways/{Id}/thing':
    delete:
      description: Disassociates a wireless gateway from its currently associated thing.
      operationId: DisassociateWirelessGatewayFromThing
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateWirelessGatewayFromThingResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Associates a wireless gateway with a thing.
      operationId: AssociateWirelessGatewayWithThing
      parameters:
        - description: The ID of the resource to update.
          in: path
          maxLength: 256
          name: Id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ThingArn:
                description: The ARN of the thing to associate with the wireless gateway.
                type: string
            required:
              - ThingArn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/AssociateWirelessGatewayWithThingResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

