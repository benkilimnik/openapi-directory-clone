basePath: /
definitions:
  AbortTransactionRequest:
    description: Contains the details of the transaction to abort.
    properties: {}
    type: object
  AbortTransactionResult:
    description: Contains the details of the aborted transaction.
    properties:
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
    type: object
  BadRequestException: {}
  CapacityExceededException: {}
  CommitDigest:
    type: string
  CommitTransactionRequest:
    description: Contains the details of the transaction to commit.
    properties:
      CommitDigest:
        allOf:
          - $ref: '#/definitions/CommitDigest'
          - description: >-
              <p>Specifies the commit digest for the transaction to commit. For
              every active transaction, the commit digest must be passed. QLDB
              validates <code>CommitDigest</code> and rejects the commit with an
              error if the digest computed on the client does not match the
              digest computed by QLDB.</p> <p>The purpose of the
              <code>CommitDigest</code> parameter is to ensure that QLDB commits
              a transaction if and only if the server has processed the exact
              set of statements sent by the client, in the same order that
              client sent them, and with no duplicates.</p>
      TransactionId:
        allOf:
          - $ref: '#/definitions/TransactionId'
          - description: Specifies the transaction ID of the transaction to commit.
    required:
      - TransactionId
      - CommitDigest
    type: object
  CommitTransactionResult:
    description: Contains the details of the committed transaction.
    properties:
      CommitDigest:
        allOf:
          - $ref: '#/definitions/CommitDigest'
          - description: The commit digest of the committed transaction.
      ConsumedIOs:
        allOf:
          - $ref: '#/definitions/IOUsage'
          - description: >-
              Contains metrics about the number of I/O requests that were
              consumed.
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
      TransactionId:
        allOf:
          - $ref: '#/definitions/TransactionId'
          - description: The transaction ID of the committed transaction.
    type: object
  EndSessionRequest:
    description: Specifies a request to end the session.
    properties: {}
    type: object
  EndSessionResult:
    description: Contains the details of the ended session.
    properties:
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
    type: object
  ExecuteStatementRequest:
    description: Specifies a request to execute a statement.
    properties:
      Parameters:
        allOf:
          - $ref: '#/definitions/StatementParameters'
          - description: >-
              Specifies the parameters for the parameterized statement in the
              request.
      Statement:
        allOf:
          - $ref: '#/definitions/Statement'
          - description: Specifies the statement of the request.
      TransactionId:
        allOf:
          - $ref: '#/definitions/TransactionId'
          - description: Specifies the transaction ID of the request.
    required:
      - TransactionId
      - Statement
    type: object
  ExecuteStatementResult:
    description: Contains the details of the executed statement.
    properties:
      ConsumedIOs:
        allOf:
          - $ref: '#/definitions/IOUsage'
          - description: >-
              Contains metrics about the number of I/O requests that were
              consumed.
      FirstPage:
        allOf:
          - $ref: '#/definitions/Page'
          - description: Contains the details of the first fetched page.
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
    type: object
  FetchPageRequest:
    description: Specifies the details of the page to be fetched.
    properties:
      NextPageToken:
        allOf:
          - $ref: '#/definitions/PageToken'
          - description: Specifies the next page token of the page to be fetched.
      TransactionId:
        allOf:
          - $ref: '#/definitions/TransactionId'
          - description: Specifies the transaction ID of the page to be fetched.
    required:
      - TransactionId
      - NextPageToken
    type: object
  FetchPageResult:
    description: Contains the page that was fetched.
    properties:
      ConsumedIOs:
        allOf:
          - $ref: '#/definitions/IOUsage'
          - description: >-
              Contains metrics about the number of I/O requests that were
              consumed.
      Page:
        allOf:
          - $ref: '#/definitions/Page'
          - description: Contains details of the fetched page.
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
    type: object
  IOUsage:
    description: Contains I/O usage metrics for a command that was invoked.
    properties:
      ReadIOs:
        allOf:
          - $ref: '#/definitions/ReadIOs'
          - description: The number of read I/O requests that the command made.
      WriteIOs:
        allOf:
          - $ref: '#/definitions/WriteIOs'
          - description: The number of write I/O requests that the command made.
    type: object
  InvalidSessionException: {}
  IonBinary:
    maxLength: 131072
    minLength: 1
    type: string
  IonText:
    maxLength: 1048576
    minLength: 1
    type: string
  LedgerName:
    maxLength: 32
    minLength: 1
    pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
    type: string
  LimitExceededException: {}
  OccConflictException: {}
  Page:
    description: Contains details of the fetched page.
    properties:
      NextPageToken:
        allOf:
          - $ref: '#/definitions/PageToken'
          - description: The token of the next page.
      Values:
        allOf:
          - $ref: '#/definitions/ValueHolders'
          - description: A structure that contains values in multiple encoding formats.
    type: object
  PageToken:
    maxLength: 1024
    minLength: 4
    pattern: '^[A-Za-z-0-9+/=]+$'
    type: string
  ProcessingTimeMilliseconds:
    type: integer
  RateExceededException: {}
  ReadIOs:
    type: integer
  SendCommandRequest:
    properties:
      AbortTransaction:
        allOf:
          - $ref: '#/definitions/AbortTransactionRequest'
          - description: Command to abort the current transaction.
      CommitTransaction:
        allOf:
          - $ref: '#/definitions/CommitTransactionRequest'
          - description: Command to commit the specified transaction.
      EndSession:
        allOf:
          - $ref: '#/definitions/EndSessionRequest'
          - description: Command to end the current session.
      ExecuteStatement:
        allOf:
          - $ref: '#/definitions/ExecuteStatementRequest'
          - description: Command to execute a statement in the specified transaction.
      FetchPage:
        allOf:
          - $ref: '#/definitions/FetchPageRequest'
          - description: Command to fetch a page.
      SessionToken:
        allOf:
          - $ref: '#/definitions/SessionToken'
          - description: >-
              <p>Specifies the session token for the current command. A session
              token is constant throughout the life of the session.</p> <p>To
              obtain a session token, run the <code>StartSession</code> command.
              This <code>SessionToken</code> is required for every subsequent
              command that is issued during the current session.</p>
      StartSession:
        allOf:
          - $ref: '#/definitions/StartSessionRequest'
          - description: >-
              Command to start a new session. A session token is obtained as
              part of the response.
      StartTransaction:
        allOf:
          - $ref: '#/definitions/StartTransactionRequest'
          - description: Command to start a new transaction.
    title: SendCommandRequest
    type: object
  SendCommandResult:
    properties:
      AbortTransaction:
        allOf:
          - $ref: '#/definitions/AbortTransactionResult'
          - description: Contains the details of the aborted transaction.
      CommitTransaction:
        allOf:
          - $ref: '#/definitions/CommitTransactionResult'
          - description: Contains the details of the committed transaction.
      EndSession:
        allOf:
          - $ref: '#/definitions/EndSessionResult'
          - description: Contains the details of the ended session.
      ExecuteStatement:
        allOf:
          - $ref: '#/definitions/ExecuteStatementResult'
          - description: Contains the details of the executed statement.
      FetchPage:
        allOf:
          - $ref: '#/definitions/FetchPageResult'
          - description: Contains the details of the fetched page.
      StartSession:
        allOf:
          - $ref: '#/definitions/StartSessionResult'
          - description: >-
              Contains the details of the started session that includes a
              session token. This <code>SessionToken</code> is required for
              every subsequent command that is issued during the current
              session.
      StartTransaction:
        allOf:
          - $ref: '#/definitions/StartTransactionResult'
          - description: Contains the details of the started transaction.
    type: object
  SessionToken:
    maxLength: 1024
    minLength: 4
    pattern: '^[A-Za-z-0-9+/=]+$'
    type: string
  StartSessionRequest:
    description: Specifies a request to start a new session.
    properties:
      LedgerName:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger to start a new session against.
    required:
      - LedgerName
    type: object
  StartSessionResult:
    description: Contains the details of the started session.
    properties:
      SessionToken:
        allOf:
          - $ref: '#/definitions/SessionToken'
          - description: >-
              Session token of the started session. This
              <code>SessionToken</code> is required for every subsequent command
              that is issued during the current session.
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
    type: object
  StartTransactionRequest:
    description: Specifies a request to start a transaction.
    properties: {}
    type: object
  StartTransactionResult:
    description: Contains the details of the started transaction.
    properties:
      TimingInformation:
        allOf:
          - $ref: '#/definitions/TimingInformation'
          - description: Contains server-side performance information for the command.
      TransactionId:
        allOf:
          - $ref: '#/definitions/TransactionId'
          - description: The transaction ID of the started transaction.
    type: object
  Statement:
    maxLength: 100000
    minLength: 1
    type: string
  StatementParameters:
    items:
      $ref: '#/definitions/ValueHolder'
    type: array
  TimingInformation:
    description: >-
      Contains server-side performance information for a command. Amazon QLDB
      captures timing information between the times when it receives the request
      and when it sends the corresponding response.
    properties:
      ProcessingTimeMilliseconds:
        allOf:
          - $ref: '#/definitions/ProcessingTimeMilliseconds'
          - description: >-
              The amount of time that QLDB spent on processing the command,
              measured in milliseconds.
    type: object
  TransactionId:
    maxLength: 22
    minLength: 22
    pattern: '^[A-Za-z-0-9]+$'
    type: string
  ValueHolder:
    description: A structure that can contain a value in multiple encoding formats.
    properties:
      IonBinary:
        allOf:
          - $ref: '#/definitions/IonBinary'
          - description: >-
              An Amazon Ion binary value contained in a <code>ValueHolder</code>
              structure.
      IonText:
        allOf:
          - $ref: '#/definitions/IonText'
          - description: >-
              An Amazon Ion plaintext value contained in a
              <code>ValueHolder</code> structure.
    type: object
  ValueHolders:
    items:
      $ref: '#/definitions/ValueHolder'
    type: array
  WriteIOs:
    type: integer
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/qldb/'
host: session.qldb.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>The transactional data APIs for Amazon QLDB</p> <note> <p>Instead of
    interacting directly with this API, we recommend using the QLDB driver or
    the QLDB shell to execute data transactions on a ledger.</p> <ul> <li> <p>If
    you are working with an AWS SDK, use the QLDB driver. The driver provides a
    high-level abstraction layer above this <i>QLDB Session</i> data plane and
    manages <code>SendCommand</code> API calls for you. For information and a
    list of supported programming languages, see <a
    href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html">Getting
    started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
    </li> <li> <p>If you are working with the AWS Command Line Interface (AWS
    CLI), use the QLDB shell. The shell is a command line interface that uses
    the QLDB driver to interact with a ledger. For information, see <a
    href="https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html">Accessing
    Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon QLDB Session
  version: '2019-07-11'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: qldb
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-session-2019-07-11.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: qldb-session
paths:
  /#X-Amz-Target=QLDBSession.SendCommand:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sends a command to an Amazon QLDB ledger.</p> <note> <p>Instead of
        interacting directly with this API, we recommend using the QLDB driver
        or the QLDB shell to execute data transactions on a ledger.</p> <ul>
        <li> <p>If you are working with an AWS SDK, use the QLDB driver. The
        driver provides a high-level abstraction layer above this <i>QLDB
        Session</i> data plane and manages <code>SendCommand</code> API calls
        for you. For information and a list of supported programming languages,
        see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html">Getting
        started with the driver</a> in the <i>Amazon QLDB Developer
        Guide</i>.</p> </li> <li> <p>If you are working with the AWS Command
        Line Interface (AWS CLI), use the QLDB shell. The shell is a command
        line interface that uses the QLDB driver to interact with a ledger. For
        information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html">Accessing
        Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>
      operationId: SendCommand
      parameters:
        - enum:
            - QLDBSession.SendCommand
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SendCommandRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendCommandResult'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InvalidSessionException
          schema:
            $ref: '#/definitions/InvalidSessionException'
        '482':
          description: OccConflictException
          schema:
            $ref: '#/definitions/OccConflictException'
        '483':
          description: RateExceededException
          schema:
            $ref: '#/definitions/RateExceededException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: CapacityExceededException
          schema:
            $ref: '#/definitions/CapacityExceededException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

