basePath: /
definitions:
  ActivationKey:
    maxLength: 29
    pattern: '[A-Z0-9]{5}(-[A-Z0-9]{5}){4}'
    type: string
  AgentArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$
    type: string
  AgentArnList:
    items:
      $ref: '#/definitions/AgentArn'
    maxItems: 4
    minItems: 1
    type: array
  AgentList:
    items:
      $ref: '#/definitions/AgentListEntry'
    type: array
  AgentListEntry:
    description: >-
      Represents a single entry in a list of agents. <code>AgentListEntry</code>
      returns an array that contains a list of agents when the <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListAgents.html">ListAgents</a>
      operation is called.
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: The Amazon Resource Name (ARN) of the agent.
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name of the agent.
      Status:
        allOf:
          - $ref: '#/definitions/AgentStatus'
          - description: The status of the agent.
    type: object
  AgentStatus:
    enum:
      - ONLINE
      - OFFLINE
    type: string
  Atime:
    enum:
      - NONE
      - BEST_EFFORT
    type: string
  BytesPerSecond:
    minimum: -1
    type: integer
  CancelTaskExecutionRequest:
    description: CancelTaskExecutionRequest
    properties:
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: The Amazon Resource Name (ARN) of the task execution to cancel.
    required:
      - TaskExecutionArn
    title: CancelTaskExecutionRequest
    type: object
  CancelTaskExecutionResponse:
    properties: {}
    type: object
  CreateAgentRequest:
    description: CreateAgentRequest
    properties:
      ActivationKey:
        allOf:
          - $ref: '#/definitions/ActivationKey'
          - description: >-
              <p>Your agent activation key. You can get the activation key
              either by sending an HTTP GET request with redirects that enable
              you to get the agent IP address (port 80). Alternatively, you can
              get it from the DataSync console.</p> <p>The redirect URL returned
              in the response provides you the activation key for your agent in
              the query string parameter <code>activationKey</code>. It might
              also include other activation-related parameters; however, these
              are merely defaults. The arguments you pass to this API call
              determine the actual configuration of your agent.</p> <p>For more
              information, see Activating an Agent in the <i>DataSync User
              Guide.</i> </p>
      AgentName:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              The name you configured for your agent. This value is a text
              reference that is used to identify the agent in the console.
      SecurityGroupArns:
        allOf:
          - $ref: '#/definitions/PLSecurityGroupArnList'
          - description: >-
              The ARNs of the security groups used to protect your data transfer
              task subnets. See <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_Ec2Config.html#DataSync-Type-Ec2Config-SecurityGroupArns">SecurityGroupArns</a>.
      SubnetArns:
        allOf:
          - $ref: '#/definitions/PLSubnetArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the subnets in which DataSync
              will create elastic network interfaces for each data transfer
              task. The agent that runs a task must be private. When you start a
              task that is associated with an agent created in a VPC, or one
              that has access to an IP address in a VPC, then the task is also
              private. In this case, DataSync creates four network interfaces
              for each task in your subnet. For a data transfer to work, the
              agent must be able to route to all these four network interfaces.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              <p>The key-value pair that represents the tag that you want to
              associate with the agent. The value can be an empty string. This
              value helps you manage, filter, and search for your agents.</p>
              <note> <p>Valid characters for key and value are letters, spaces,
              and numbers representable in UTF-8 format, and the following
              special characters: + - = . _ : / @. </p> </note>
      VpcEndpointId:
        allOf:
          - $ref: '#/definitions/VpcEndpointId'
          - description: >-
              <p>The ID of the VPC (virtual private cloud) endpoint that the
              agent has access to. This is the client-side VPC endpoint, also
              called a PrivateLink. If you don't have a PrivateLink VPC
              endpoint, see <a
              href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-service.html#create-endpoint-service">Creating
              a VPC Endpoint Service Configuration</a> in the Amazon VPC User
              Guide.</p> <p>VPC endpoint ID looks like this:
              <code>vpce-01234d5aff67890e1</code>.</p>
    required:
      - ActivationKey
    title: CreateAgentRequest
    type: object
  CreateAgentResponse:
    description: CreateAgentResponse
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: >-
              The Amazon Resource Name (ARN) of the agent. Use the
              <code>ListAgents</code> operation to return a list of agents for
              your account and Amazon Web Services Region.
    type: object
  CreateLocationEfsRequest:
    description: CreateLocationEfsRequest
    properties:
      Ec2Config:
        allOf:
          - $ref: '#/definitions/Ec2Config'
          - description: >-
              <p>The subnet and security group that the Amazon EFS file system
              uses. The security group that you provide needs to be able to
              communicate with the security group on the mount target in the
              subnet specified.</p> <p>The exact relationship between security
              group M (of the mount target) and security group S (which you
              provide for DataSync to use at this stage) is as follows: </p>
              <ul> <li> <p> Security group M (which you associate with the mount
              target) must allow inbound access for the Transmission Control
              Protocol (TCP) on the NFS port (2049) from security group S. You
              can enable inbound connections either by IP address (CIDR range)
              or security group. </p> </li> <li> <p>Security group S (provided
              to DataSync to access EFS) should have a rule that enables
              outbound connections to the NFS port on one of the file system’s
              mount targets. You can enable outbound connections either by IP
              address (CIDR range) or security group.</p> <p>For information
              about security groups and mount targets, see Security Groups for
              Amazon EC2 Instances and Mount Targets in the <i>Amazon EFS User
              Guide.</i> </p> </li> </ul>
      EfsFilesystemArn:
        allOf:
          - $ref: '#/definitions/EfsFilesystemArn'
          - description: The Amazon Resource Name (ARN) for the Amazon EFS file system.
      Subdirectory:
        allOf:
          - $ref: '#/definitions/EfsSubdirectory'
          - description: >-
              <p>A subdirectory in the location’s path. This subdirectory in the
              EFS file system is used to read data from the EFS source location
              or write data to the EFS destination. By default, DataSync uses
              the root directory.</p> <note> <p> <code>Subdirectory</code> must
              be specified with forward slashes. For example,
              <code>/path/to/folder</code>.</p> </note>
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents a tag that you want to add to
              the resource. The value can be an empty string. This value helps
              you manage, filter, and search for your resources. We recommend
              that you create a name tag for your location.
    required:
      - EfsFilesystemArn
      - Ec2Config
    title: CreateLocationEfsRequest
    type: object
  CreateLocationEfsResponse:
    description: CreateLocationEfs
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon EFS file system
              location that is created.
    type: object
  CreateLocationFsxWindowsRequest:
    properties:
      Domain:
        allOf:
          - $ref: '#/definitions/SmbDomain'
          - description: >-
              The name of the Windows domain that the FSx for Windows File
              Server belongs to.
      FsxFilesystemArn:
        allOf:
          - $ref: '#/definitions/FsxFilesystemArn'
          - description: >-
              The Amazon Resource Name (ARN) for the FSx for Windows File Server
              file system.
      Password:
        allOf:
          - $ref: '#/definitions/SmbPassword'
          - description: >-
              The password of the user who has the permissions to access files
              and folders in the FSx for Windows File Server file system.
      SecurityGroupArns:
        allOf:
          - $ref: '#/definitions/Ec2SecurityGroupArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the security groups that are
              to use to configure the FSx for Windows File Server file system.
      Subdirectory:
        allOf:
          - $ref: '#/definitions/FsxWindowsSubdirectory'
          - description: >-
              A subdirectory in the location’s path. This subdirectory in the
              Amazon FSx for Windows File Server file system is used to read
              data from the Amazon FSx for Windows File Server source location
              or write data to the FSx for Windows File Server destination.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents a tag that you want to add to
              the resource. The value can be an empty string. This value helps
              you manage, filter, and search for your resources. We recommend
              that you create a name tag for your location.
      User:
        allOf:
          - $ref: '#/definitions/SmbUser'
          - description: >-
              <p>The user who has the permissions to access files and folders in
              the FSx for Windows File Server file system.</p> <p>For
              information about choosing a user name that ensures sufficient
              permissions to files, folders, and metadata, see <a
              href="create-fsx-location.html#FSxWuser">user</a>.</p>
    required:
      - FsxFilesystemArn
      - SecurityGroupArns
      - User
      - Password
    title: CreateLocationFsxWindowsRequest
    type: object
  CreateLocationFsxWindowsResponse:
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the FSx for Windows File Server
              file system location that is created.
    type: object
  CreateLocationNfsRequest:
    description: CreateLocationNfsRequest
    properties:
      MountOptions:
        allOf:
          - $ref: '#/definitions/NfsMountOptions'
          - description: >-
              The NFS mount options that DataSync can use to mount your NFS
              share.
      OnPremConfig:
        allOf:
          - $ref: '#/definitions/OnPremConfig'
          - description: >-
              <p>Contains a list of Amazon Resource Names (ARNs) of agents that
              are used to connect to an NFS server. </p> <p>If you are copying
              data to or from your Snowcone device, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html#nfs-on-snowcone">NFS
              Server on Snowcone</a> for more information.</p>
      ServerHostname:
        allOf:
          - $ref: '#/definitions/ServerHostname'
          - description: >-
              <p>The name of the NFS server. This value is the IP address or
              Domain Name Service (DNS) name of the NFS server. An agent that is
              installed on-premises uses this host name to mount the NFS server
              in a network. </p> <p>If you are copying data to or from your
              Snowcone device, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html#nfs-on-snowcone">NFS
              Server on Snowcone</a> for more information.</p> <note> <p>This
              name must either be DNS-compliant or must be an IP version 4
              (IPv4) address.</p> </note>
      Subdirectory:
        allOf:
          - $ref: '#/definitions/NfsSubdirectory'
          - description: >-
              <p>The subdirectory in the NFS file system that is used to read
              data from the NFS source location or write data to the NFS
              destination. The NFS path should be a path that's exported by the
              NFS server, or a subdirectory of that path. The path should be
              such that it can be mounted by other NFS clients in your network.
              </p> <p>To see all the paths exported by your NFS server, run
              "<code>showmount -e nfs-server-name</code>" from an NFS client
              that has access to your server. You can specify any directory that
              appears in the results, and any subdirectory of that directory.
              Ensure that the NFS export is accessible without Kerberos
              authentication. </p> <p>To transfer all the data in the folder you
              specified, DataSync needs to have permissions to read all the
              data. To ensure this, either configure the NFS export with
              <code>no_root_squash,</code> or ensure that the permissions for
              all of the files that you want DataSync allow read access for all
              users. Doing either enables the agent to read the files. For the
              agent to access directories, you must additionally enable all
              execute access.</p> <p>If you are copying data to or from your
              Snowcone device, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html#nfs-on-snowcone">NFS
              Server on Snowcone</a> for more information.</p> <p>For
              information about NFS export configuration, see 18.7. The
              /etc/exports Configuration File in the Red Hat Enterprise Linux
              documentation.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents the tag that you want to add to
              the location. The value can be an empty string. We recommend using
              tags to name your resources.
    required:
      - Subdirectory
      - ServerHostname
      - OnPremConfig
    title: CreateLocationNfsRequest
    type: object
  CreateLocationNfsResponse:
    description: CreateLocationNfsResponse
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the source NFS file system
              location that is created.
    type: object
  CreateLocationObjectStorageRequest:
    description: CreateLocationObjectStorageRequest
    properties:
      AccessKey:
        allOf:
          - $ref: '#/definitions/ObjectStorageAccessKey'
          - description: >-
              Optional. The access key is used if credentials are required to
              access the self-managed object storage server. If your object
              storage requires a user name and password to authenticate, use
              <code>AccessKey</code> and <code>SecretKey</code> to provide the
              user name and password, respectively.
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Name (ARN) of the agents associated with the
              self-managed object storage server location.
      BucketName:
        allOf:
          - $ref: '#/definitions/ObjectStorageBucketName'
          - description: >-
              The bucket on the self-managed object storage server that is used
              to read data from.
      SecretKey:
        allOf:
          - $ref: '#/definitions/ObjectStorageSecretKey'
          - description: >-
              Optional. The secret key is used if credentials are required to
              access the self-managed object storage server. If your object
              storage requires a user name and password to authenticate, use
              <code>AccessKey</code> and <code>SecretKey</code> to provide the
              user name and password, respectively.
      ServerHostname:
        allOf:
          - $ref: '#/definitions/ServerHostname'
          - description: >-
              The name of the self-managed object storage server. This value is
              the IP address or Domain Name Service (DNS) name of the object
              storage server. An agent uses this host name to mount the object
              storage server in a network. 
      ServerPort:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerPort'
          - description: >-
              The port that your self-managed object storage server accepts
              inbound network traffic on. The server port is set by default to
              TCP 80 (HTTP) or TCP 443 (HTTPS). You can specify a custom port if
              your self-managed object storage server requires one.
      ServerProtocol:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerProtocol'
          - description: >-
              The protocol that the object storage server uses to communicate.
              Valid values are HTTP or HTTPS.
      Subdirectory:
        allOf:
          - $ref: '#/definitions/S3Subdirectory'
          - description: >-
              The subdirectory in the self-managed object storage server that is
              used to read data from.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents the tag that you want to add to
              the location. The value can be an empty string. We recommend using
              tags to name your resources.
    required:
      - ServerHostname
      - BucketName
      - AgentArns
    title: CreateLocationObjectStorageRequest
    type: object
  CreateLocationObjectStorageResponse:
    description: CreateLocationObjectStorageResponse
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the agents associated with the
              self-managed object storage server location.
    type: object
  CreateLocationS3Request:
    description: CreateLocationS3Request
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              If you are using DataSync on an Amazon Web Services Outpost,
              specify the Amazon Resource Names (ARNs) of the DataSync agents
              deployed on your Outpost. For more information about launching a
              DataSync agent on an Amazon Web Services Outpost, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/deploy-agents.html#outposts-agent">Deploy
              your DataSync agent on Outposts</a>.
      S3BucketArn:
        allOf:
          - $ref: '#/definitions/S3BucketArn'
          - description: >-
              The ARN of the Amazon S3 bucket. If the bucket is on an Amazon Web
              Services Outpost, this must be an access point ARN.
      S3Config:
        $ref: '#/definitions/S3Config'
      S3StorageClass:
        allOf:
          - $ref: '#/definitions/S3StorageClass'
          - description: >-
              <p>The Amazon S3 storage class that you want to store your files
              in when this location is used as a task destination. For buckets
              in Amazon Web Services Regions, the storage class defaults to
              Standard. For buckets on Outposts, the storage class defaults to
              Amazon Web Services S3 Outposts.</p> <p>For more information about
              S3 storage classes, see <a
              href="http://aws.amazon.com/s3/storage-classes/">Amazon S3 Storage
              Classes</a>. Some storage classes have behaviors that can affect
              your S3 storage cost. For detailed information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations
              when working with S3 storage classes in DataSync</a>.</p>
      Subdirectory:
        allOf:
          - $ref: '#/definitions/S3Subdirectory'
          - description: >-
              A subdirectory in the Amazon S3 bucket. This subdirectory in
              Amazon S3 is used to read data from the S3 source location or
              write data to the S3 destination.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents the tag that you want to add to
              the location. The value can be an empty string. We recommend using
              tags to name your resources.
    required:
      - S3BucketArn
      - S3Config
    title: CreateLocationS3Request
    type: object
  CreateLocationS3Response:
    description: CreateLocationS3Response
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the source Amazon S3 bucket
              location that is created.
    type: object
  CreateLocationSmbRequest:
    description: CreateLocationSmbRequest
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of agents to use for a Simple
              Message Block (SMB) location. 
      Domain:
        allOf:
          - $ref: '#/definitions/SmbDomain'
          - description: The name of the Windows domain that the SMB server belongs to.
      MountOptions:
        allOf:
          - $ref: '#/definitions/SmbMountOptions'
          - description: The mount options used by DataSync to access the SMB server.
      Password:
        allOf:
          - $ref: '#/definitions/SmbPassword'
          - description: >-
              The password of the user who can mount the share, has the
              permissions to access files and folders in the SMB share.
      ServerHostname:
        allOf:
          - $ref: '#/definitions/ServerHostname'
          - description: >-
              <p>The name of the SMB server. This value is the IP address or
              Domain Name Service (DNS) name of the SMB server. An agent that is
              installed on-premises uses this hostname to mount the SMB server
              in a network.</p> <note> <p>This name must either be DNS-compliant
              or must be an IP version 4 (IPv4) address.</p> </note>
      Subdirectory:
        allOf:
          - $ref: '#/definitions/SmbSubdirectory'
          - description: >-
              <p>The subdirectory in the SMB file system that is used to read
              data from the SMB source location or write data to the SMB
              destination. The SMB path should be a path that's exported by the
              SMB server, or a subdirectory of that path. The path should be
              such that it can be mounted by other SMB clients in your
              network.</p> <note> <p> <code>Subdirectory</code> must be
              specified with forward slashes. For example,
              <code>/path/to/folder</code>.</p> </note> <p>To transfer all the
              data in the folder you specified, DataSync needs to have
              permissions to mount the SMB share, as well as to access all the
              data in that share. To ensure this, either ensure that the
              user/password specified belongs to the user who can mount the
              share, and who has the appropriate permissions for all of the
              files and directories that you want DataSync to access, or use
              credentials of a member of the Backup Operators group to mount the
              share. Doing either enables the agent to access the data. For the
              agent to access directories, you must additionally enable all
              execute access.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents the tag that you want to add to
              the location. The value can be an empty string. We recommend using
              tags to name your resources.
      User:
        allOf:
          - $ref: '#/definitions/SmbUser'
          - description: >-
              <p>The user who can mount the share, has the permissions to access
              files and folders in the SMB share.</p> <p>For information about
              choosing a user name that ensures sufficient permissions to files,
              folders, and metadata, see <a
              href="create-smb-location.html#SMBuser">user</a>.</p>
    required:
      - Subdirectory
      - ServerHostname
      - User
      - Password
      - AgentArns
    title: CreateLocationSmbRequest
    type: object
  CreateLocationSmbResponse:
    description: CreateLocationSmbResponse
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the source SMB file system
              location that is created.
    type: object
  CreateTaskRequest:
    description: CreateTaskRequest
    properties:
      CloudWatchLogGroupArn:
        allOf:
          - $ref: '#/definitions/LogGroupArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon CloudWatch log group
              that is used to monitor and log events in the task. 
      DestinationLocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of an Amazon Web Services storage
              resource's location. 
      Excludes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to exclude
              from a task. The list should contain a single filter string that
              consists of the patterns to exclude. The patterns are delimited by
              "|" (that is, a pipe), for example,
              <code>"/folder1|/folder2"</code>. </p> <p> </p>
      Includes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              A list of filter rules that determines which files to include when
              running a task. The pattern should contain a single filter string
              that consists of the patterns to include. The patterns are
              delimited by "|" (that is, a pipe). For example:
              <code>"/folder1|/folder2</code>"
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              The name of a task. This value is a text reference that is used to
              identify the task in the console. 
      Options:
        allOf:
          - $ref: '#/definitions/Options'
          - description: >-
              <p>The set of configuration options that control the behavior of a
              single execution of the task that occurs when you call
              <code>StartTaskExecution</code>. You can configure these options
              to preserve metadata such as user ID (UID) and group ID (GID),
              file permissions, data integrity verification, and so on.</p>
              <p>For each individual task execution, you can override these
              options by specifying the <code>OverrideOptions</code> before
              starting the task execution. For more information, see the <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>
              operation. </p>
      Schedule:
        allOf:
          - $ref: '#/definitions/TaskSchedule'
          - description: >-
              Specifies a schedule used to periodically transfer files from a
              source to a destination location. The schedule should be specified
              in UTC time. For more information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/task-scheduling.html">Scheduling
              your task</a>.
      SourceLocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the source location for the
              task.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: >-
              The key-value pair that represents the tag that you want to add to
              the resource. The value can be an empty string. 
    required:
      - SourceLocationArn
      - DestinationLocationArn
    title: CreateTaskRequest
    type: object
  CreateTaskResponse:
    description: CreateTaskResponse
    properties:
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task.
    type: object
  DeleteAgentRequest:
    description: DeleteAgentRequest
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: >-
              The Amazon Resource Name (ARN) of the agent to delete. Use the
              <code>ListAgents</code> operation to return a list of agents for
              your account and Amazon Web Services Region.
    required:
      - AgentArn
    title: DeleteAgentRequest
    type: object
  DeleteAgentResponse:
    properties: {}
    type: object
  DeleteLocationRequest:
    description: DeleteLocation
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the location to delete.
    required:
      - LocationArn
    title: DeleteLocationRequest
    type: object
  DeleteLocationResponse:
    properties: {}
    type: object
  DeleteTaskRequest:
    description: DeleteTask
    properties:
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task to delete.
    required:
      - TaskArn
    title: DeleteTaskRequest
    type: object
  DeleteTaskResponse:
    properties: {}
    type: object
  DescribeAgentRequest:
    description: DescribeAgent
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: The Amazon Resource Name (ARN) of the agent to describe.
    required:
      - AgentArn
    title: DescribeAgentRequest
    type: object
  DescribeAgentResponse:
    description: DescribeAgentResponse
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: The Amazon Resource Name (ARN) of the agent.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: >-
              The time that the agent was activated (that is, created in your
              account).
      EndpointType:
        allOf:
          - $ref: '#/definitions/EndpointType'
          - description: >-
              The type of endpoint that your agent is connected to. If the
              endpoint is a VPC endpoint, the agent is not accessible over the
              public internet. 
      LastConnectionTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the agent last connected to DataSync.
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name of the agent.
      PrivateLinkConfig:
        allOf:
          - $ref: '#/definitions/PrivateLinkConfig'
          - description: >-
              The subnet and the security group that DataSync used to access a
              VPC endpoint.
      Status:
        allOf:
          - $ref: '#/definitions/AgentStatus'
          - description: >-
              The status of the agent. If the status is ONLINE, then the agent
              is configured properly and is available to use. The Running status
              is the normal running status for an agent. If the status is
              OFFLINE, the agent's VM is turned off or the agent is in an
              unhealthy state. When the issue that caused the unhealthy state is
              resolved, the agent returns to ONLINE status.
    type: object
  DescribeLocationEfsRequest:
    description: DescribeLocationEfsRequest
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the EFS location to describe.
    required:
      - LocationArn
    title: DescribeLocationEfsRequest
    type: object
  DescribeLocationEfsResponse:
    description: DescribeLocationEfsResponse
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the EFS location was created.
      Ec2Config:
        $ref: '#/definitions/Ec2Config'
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the EFS location that was
              described.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: The URL of the EFS location that was described.
    type: object
  DescribeLocationFsxWindowsRequest:
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the FSx for Windows File Server
              location to describe.
    required:
      - LocationArn
    title: DescribeLocationFsxWindowsRequest
    type: object
  DescribeLocationFsxWindowsResponse:
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: >-
              The time that the FSx for Windows File Server location was
              created.
      Domain:
        allOf:
          - $ref: '#/definitions/SmbDomain'
          - description: >-
              The name of the Windows domain that the FSx for Windows File
              Server belongs to.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the FSx for Windows File Server
              location that was described.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: >-
              The URL of the FSx for Windows File Server location that was
              described.
      SecurityGroupArns:
        allOf:
          - $ref: '#/definitions/Ec2SecurityGroupArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the security groups that are
              configured for the FSx for Windows File Server file system.
      User:
        allOf:
          - $ref: '#/definitions/SmbUser'
          - description: >-
              The user who has the permissions to access files and folders in
              the FSx for Windows File Server file system.
    type: object
  DescribeLocationNfsRequest:
    description: DescribeLocationNfsRequest
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the NFS location to describe.
    required:
      - LocationArn
    title: DescribeLocationNfsRequest
    type: object
  DescribeLocationNfsResponse:
    description: DescribeLocationNfsResponse
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the NFS location was created.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the NFS location that was
              described.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: The URL of the source NFS location that was described.
      MountOptions:
        allOf:
          - $ref: '#/definitions/NfsMountOptions'
          - description: The NFS mount options that DataSync used to mount your NFS share.
      OnPremConfig:
        $ref: '#/definitions/OnPremConfig'
    type: object
  DescribeLocationObjectStorageRequest:
    description: DescribeLocationObjectStorageRequest
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the self-managed object storage
              server location that was described.
    required:
      - LocationArn
    title: DescribeLocationObjectStorageRequest
    type: object
  DescribeLocationObjectStorageResponse:
    description: DescribeLocationObjectStorageResponse
    properties:
      AccessKey:
        allOf:
          - $ref: '#/definitions/ObjectStorageAccessKey'
          - description: >-
              Optional. The access key is used if credentials are required to
              access the self-managed object storage server. If your object
              storage requires a user name and password to authenticate, use
              <code>AccessKey</code> and <code>SecretKey</code> to provide the
              user name and password, respectively.
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Name (ARN) of the agents associated with the
              self-managed object storage server location.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: >-
              The time that the self-managed object storage server agent was
              created.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the self-managed object storage
              server location to describe.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: >-
              The URL of the source self-managed object storage server location
              that was described.
      ServerPort:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerPort'
          - description: >-
              The port that your self-managed object storage server accepts
              inbound network traffic on. The server port is set by default to
              TCP 80 (HTTP) or TCP 443 (HTTPS).
      ServerProtocol:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerProtocol'
          - description: >-
              The protocol that the object storage server uses to communicate.
              Valid values are HTTP or HTTPS.
    type: object
  DescribeLocationS3Request:
    description: DescribeLocationS3Request
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon S3 bucket location to
              describe.
    required:
      - LocationArn
    title: DescribeLocationS3Request
    type: object
  DescribeLocationS3Response:
    description: DescribeLocationS3Response
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              If you are using DataSync on an Amazon Web Services Outpost, the
              Amazon Resource Name (ARNs) of the EC2 agents deployed on your
              Outpost. For more information about launching a DataSync agent on
              an Amazon Web Services Outpost, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/deploy-agents.html#outposts-agent">Deploy
              your DataSync agent on Outposts</a>.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the Amazon S3 bucket location was created.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon S3 bucket or access
              point.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: The URL of the Amazon S3 location that was described.
      S3Config:
        $ref: '#/definitions/S3Config'
      S3StorageClass:
        allOf:
          - $ref: '#/definitions/S3StorageClass'
          - description: >-
              The Amazon S3 storage class that you chose to store your files in
              when this location is used as a task destination. For more
              information about S3 storage classes, see <a
              href="http://aws.amazon.com/s3/storage-classes/">Amazon S3 Storage
              Classes</a>. Some storage classes have behaviors that can affect
              your S3 storage cost. For detailed information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations
              when working with S3 storage classes in DataSync</a>.
    type: object
  DescribeLocationSmbRequest:
    description: DescribeLocationSmbRequest
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the SMB location to describe.
    required:
      - LocationArn
    title: DescribeLocationSmbRequest
    type: object
  DescribeLocationSmbResponse:
    description: DescribeLocationSmbResponse
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Name (ARN) of the source SMB file system
              location that is created.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the SMB location was created.
      Domain:
        allOf:
          - $ref: '#/definitions/SmbDomain'
          - description: The name of the Windows domain that the SMB server belongs to.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the SMB location that was
              described.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: The URL of the source SMB location that was described.
      MountOptions:
        allOf:
          - $ref: '#/definitions/SmbMountOptions'
          - description: >-
              The mount options that are available for DataSync to use to access
              an SMB location.
      User:
        allOf:
          - $ref: '#/definitions/SmbUser'
          - description: >-
              The user who can mount the share, has the permissions to access
              files and folders in the SMB share.
    type: object
  DescribeTaskExecutionRequest:
    description: DescribeTaskExecutionRequest
    properties:
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: The Amazon Resource Name (ARN) of the task that is being executed.
    required:
      - TaskExecutionArn
    title: DescribeTaskExecutionRequest
    type: object
  DescribeTaskExecutionResponse:
    description: DescribeTaskExecutionResponse
    properties:
      BytesTransferred:
        allOf:
          - $ref: '#/definitions/long'
          - description: The physical number of bytes transferred over the network.
      BytesWritten:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The number of logical bytes written to the destination Amazon Web
              Services storage resource.
      EstimatedBytesToTransfer:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The estimated physical number of bytes that is to be transferred
              over the network.
      EstimatedFilesToTransfer:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The expected number of files that is to be transferred over the
              network. This value is calculated during the PREPARING phase,
              before the TRANSFERRING phase. This value is the expected number
              of files to be transferred. It's calculated based on comparing the
              content of the source and destination locations and finding the
              delta that needs to be transferred. 
      Excludes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to exclude
              from a task. The list should contain a single filter string that
              consists of the patterns to exclude. The patterns are delimited by
              "|" (that is, a pipe), for example:
              <code>"/folder1|/folder2"</code> </p> <p> </p>
      FilesTransferred:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              <p>The actual number of files that was transferred over the
              network. This value is calculated and updated on an ongoing basis
              during the TRANSFERRING phase. It's updated periodically when each
              file is read from the source and sent over the network. </p> <p>If
              failures occur during a transfer, this value can be less than
              <code>EstimatedFilesToTransfer</code>. This value can also be
              greater than <code>EstimatedFilesTransferred</code> in some cases.
              This element is implementation-specific for some location types,
              so don't use it as an indicator for a correct file number or to
              monitor your task execution.</p>
      Includes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to include
              when running a task. The list should contain a single filter
              string that consists of the patterns to include. The patterns are
              delimited by "|" (that is, a pipe), for example:
              <code>"/folder1|/folder2"</code> </p> <p> </p>
      Options:
        $ref: '#/definitions/Options'
      Result:
        allOf:
          - $ref: '#/definitions/TaskExecutionResultDetail'
          - description: The result of the task execution.
      StartTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the task execution was started.
      Status:
        allOf:
          - $ref: '#/definitions/TaskExecutionStatus'
          - description: >-
              <p>The status of the task execution. </p> <p>For detailed
              information about task execution statuses, see Understanding Task
              Statuses in the <i>DataSync User Guide.</i> </p>
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the task execution that was
              described. <code>TaskExecutionArn</code> is hierarchical and
              includes <code>TaskArn</code> for the task that was executed. </p>
              <p>For example, a <code>TaskExecution</code> value with the ARN
              <code>arn:aws:datasync:us-east-1:111222333444:task/task-0208075f79cedf4a2/execution/exec-08ef1e88ec491019b</code>
              executed the task with the ARN
              <code>arn:aws:datasync:us-east-1:111222333444:task/task-0208075f79cedf4a2</code>.
              </p>
    type: object
  DescribeTaskRequest:
    description: DescribeTaskRequest
    properties:
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task to describe.
    required:
      - TaskArn
    title: DescribeTaskRequest
    type: object
  DescribeTaskResponse:
    description: DescribeTaskResponse
    properties:
      CloudWatchLogGroupArn:
        allOf:
          - $ref: '#/definitions/LogGroupArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the Amazon CloudWatch log
              group that was used to monitor and log events in the task.</p>
              <p>For more information on these groups, see Working with Log
              Groups and Log Streams in the <i>Amazon CloudWatch User
              Guide</i>.</p>
      CreationTime:
        allOf:
          - $ref: '#/definitions/Time'
          - description: The time that the task was created.
      CurrentTaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the task execution that is
              syncing files.
      DestinationLocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon Web Services storage
              resource's location.
      DestinationNetworkInterfaceArns:
        allOf:
          - $ref: '#/definitions/DestinationNetworkInterfaceArns'
          - description: >-
              The Amazon Resource Name (ARN) of the destination ENIs (Elastic
              Network Interface) that was created for your subnet.
      ErrorCode:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Errors that DataSync encountered during execution of the task. You
              can use this error code to help troubleshoot issues.
      ErrorDetail:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Detailed description of an error that was encountered during the
              task execution. You can use this information to help troubleshoot
              issues. 
      Excludes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to exclude
              from a task. The list should contain a single filter string that
              consists of the patterns to exclude. The patterns are delimited by
              "|" (that is, a pipe), for example:
              <code>"/folder1|/folder2"</code> </p> <p> </p>
      Includes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              A list of filter rules that determines which files to include when
              running a task. The pattern should contain a single filter string
              that consists of the patterns to include. The patterns are
              delimited by "|" (that is, a pipe). For example:
              <code>"/folder1|/folder2</code>"
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name of the task that was described.
      Options:
        allOf:
          - $ref: '#/definitions/Options'
          - description: >-
              <p>The set of configuration options that control the behavior of a
              single execution of the task that occurs when you call
              <code>StartTaskExecution</code>. You can configure these options
              to preserve metadata such as user ID (UID) and group (GID), file
              permissions, data integrity verification, and so on.</p> <p>For
              each individual task execution, you can override these options by
              specifying the overriding <code>OverrideOptions</code> value to <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>
              operation. </p>
      Schedule:
        allOf:
          - $ref: '#/definitions/TaskSchedule'
          - description: >-
              The schedule used to periodically transfer files from a source to
              a destination location.
      SourceLocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the source file system's
              location.
      SourceNetworkInterfaceArns:
        allOf:
          - $ref: '#/definitions/SourceNetworkInterfaceArns'
          - description: >-
              The Amazon Resource Name (ARN) of the source ENIs (Elastic Network
              Interface) that was created for your subnet.
      Status:
        allOf:
          - $ref: '#/definitions/TaskStatus'
          - description: >-
              <p>The status of the task that was described.</p> <p>For detailed
              information about task execution statuses, see Understanding Task
              Statuses in the <i>DataSync User Guide</i>.</p>
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task that was described.
    type: object
  DestinationNetworkInterfaceArns:
    items:
      $ref: '#/definitions/NetworkInterfaceArn'
    type: array
  Duration:
    minimum: 0
    type: integer
  Ec2Config:
    description: >-
      The subnet and the security group that DataSync uses to access target EFS
      file system. The subnet must have at least one mount target for that file
      system. The security group that you provide needs to be able to
      communicate with the security group on the mount target in the subnet
      specified. 
    properties:
      SecurityGroupArns:
        allOf:
          - $ref: '#/definitions/Ec2SecurityGroupArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the security groups that are
              configured for the Amazon EC2 resource.
      SubnetArn:
        allOf:
          - $ref: '#/definitions/Ec2SubnetArn'
          - description: >-
              The ARN of the subnet and the security group that DataSync uses to
              access the target EFS file system.
    required:
      - SubnetArn
      - SecurityGroupArns
    type: object
  Ec2SecurityGroupArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:security-group/.*$
    type: string
  Ec2SecurityGroupArnList:
    items:
      $ref: '#/definitions/Ec2SecurityGroupArn'
    maxItems: 5
    minItems: 1
    type: array
  Ec2SubnetArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\-0-9]*:[0-9]{12}:subnet/.*$
    type: string
  EfsFilesystemArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):elasticfilesystem:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$
    type: string
  EfsSubdirectory:
    maxLength: 4096
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\p{Zs}]*$'
    type: string
  Endpoint:
    maxLength: 15
    minLength: 7
    pattern: '\A(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}\z'
    type: string
  EndpointType:
    enum:
      - PUBLIC
      - PRIVATE_LINK
      - FIPS
    type: string
  FilterAttributeValue:
    maxLength: 255
    minLength: 1
    pattern: '^[0-9a-zA-Z_\ \-\:\*\.\\/\?-]*$'
    type: string
  FilterList:
    items:
      $ref: '#/definitions/FilterRule'
    maxItems: 1
    minItems: 0
    type: array
  FilterRule:
    description: >-
      Specifies which files, folders, and objects to include or exclude when
      transferring files from source to destination.
    properties:
      FilterType:
        allOf:
          - $ref: '#/definitions/FilterType'
          - description: >-
              The type of filter rule to apply. DataSync only supports the
              SIMPLE_PATTERN rule type.
      Value:
        allOf:
          - $ref: '#/definitions/FilterValue'
          - description: >-
              <p>A single filter string that consists of the patterns to include
              or exclude. The patterns are delimited by "|" (that is, a pipe),
              for example: <code>/folder1|/folder2</code> </p> <p> </p>
    type: object
  FilterType:
    enum:
      - SIMPLE_PATTERN
    maxLength: 128
    pattern: '^[A-Z0-9_]+$'
    type: string
  FilterValue:
    maxLength: 409600
    pattern: '^[^\x00]+$'
    type: string
  FilterValues:
    items:
      $ref: '#/definitions/FilterAttributeValue'
    type: array
  FsxFilesystemArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$
    type: string
  FsxWindowsSubdirectory:
    maxLength: 4096
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$'
    type: string
  Gid:
    enum:
      - NONE
      - INT_VALUE
      - NAME
      - BOTH
    type: string
  IamRoleArn:
    maxLength: 2048
    pattern: '^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$'
    type: string
  InputTagList:
    items:
      $ref: '#/definitions/TagListEntry'
    maxItems: 50
    minItems: 0
    type: array
  InternalException: {}
  InvalidRequestException: {}
  ListAgentsRequest:
    description: ListAgentsRequest
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of agents to list.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin the
              next list of agents.
    title: ListAgentsRequest
    type: object
  ListAgentsResponse:
    description: ListAgentsResponse
    properties:
      Agents:
        allOf:
          - $ref: '#/definitions/AgentList'
          - description: A list of agents in your account.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin
              returning the next list of agents.
    type: object
  ListLocationsRequest:
    description: ListLocationsRequest
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/LocationFilters'
          - description: >-
              You can use API filters to narrow down the list of resources
              returned by <code>ListLocations</code>. For example, to retrieve
              all tasks on a specific source location, you can use
              <code>ListLocations</code> with filter name <code>LocationType
              S3</code> and <code>Operator Equals</code>.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of locations to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin the
              next list of locations.
    title: ListLocationsRequest
    type: object
  ListLocationsResponse:
    description: ListLocationsResponse
    properties:
      Locations:
        allOf:
          - $ref: '#/definitions/LocationList'
          - description: An array that contains a list of locations.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin
              returning the next list of locations.
    type: object
  ListTagsForResourceRequest:
    description: ListTagsForResourceRequest
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of locations to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin the
              next list of locations.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/TaggableResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource whose tags to list.
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    description: ListTagsForResourceResponse
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin
              returning the next list of resource tags.
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagList'
          - description: Array of resource tags.
    type: object
  ListTaskExecutionsRequest:
    description: ListTaskExecutions
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of executed tasks to list.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin the
              next list of the executed tasks.
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: >-
              The Amazon Resource Name (ARN) of the task whose tasks you want to
              list.
    title: ListTaskExecutionsRequest
    type: object
  ListTaskExecutionsResponse:
    description: ListTaskExecutionsResponse
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin
              returning the next list of executed tasks.
      TaskExecutions:
        allOf:
          - $ref: '#/definitions/TaskExecutionList'
          - description: A list of executed tasks.
    type: object
  ListTasksRequest:
    description: ListTasksRequest
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/TaskFilters'
          - description: >-
              You can use API filters to narrow down the list of resources
              returned by <code>ListTasks</code>. For example, to retrieve all
              tasks on a specific source location, you can use
              <code>ListTasks</code> with filter name <code>LocationId</code>
              and <code>Operator Equals</code> with the ARN for the location.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of tasks to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin the
              next list of tasks.
    title: ListTasksRequest
    type: object
  ListTasksResponse:
    description: ListTasksResponse
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque string that indicates the position at which to begin
              returning the next list of tasks.
      Tasks:
        allOf:
          - $ref: '#/definitions/TaskList'
          - description: A list of all the tasks that are returned.
    type: object
  LocationArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$
    type: string
  LocationFilter:
    description: >-
      You can use API filters to narrow down the list of resources returned by
      <code>ListLocations</code>. For example, to retrieve all your Amazon S3
      locations, you can use <code>ListLocations</code> with filter name
      <code>LocationType S3</code> and <code>Operator Equals</code>.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/LocationFilterName'
          - description: >-
              The name of the filter being used. Each API call supports a list
              of filters that are available for it (for example,
              <code>LocationType</code> for <code>ListLocations</code>).
      Operator:
        allOf:
          - $ref: '#/definitions/Operator'
          - description: >-
              The operator that is used to compare filter values (for example,
              <code>Equals</code> or <code>Contains</code>). For more about API
              filtering operators, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/query-resources.html">API
              filters for ListTasks and ListLocations</a>.
      Values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: >-
              The values that you want to filter for. For example, you might
              want to display only Amazon S3 locations.
    required:
      - Name
      - Values
      - Operator
    type: object
  LocationFilterName:
    enum:
      - LocationUri
      - LocationType
      - CreationTime
    type: string
  LocationFilters:
    items:
      $ref: '#/definitions/LocationFilter'
    type: array
  LocationList:
    items:
      $ref: '#/definitions/LocationListEntry'
    type: array
  LocationListEntry:
    description: >-
      Represents a single entry in a list of locations.
      <code>LocationListEntry</code> returns an array that contains a list of
      locations when the <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListLocations.html">ListLocations</a>
      operation is called.
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the location. For Network File
              System (NFS) or Amazon EFS, the location is the export path. For
              Amazon S3, the location is the prefix path that you want to mount
              and use as the root of the location.
      LocationUri:
        allOf:
          - $ref: '#/definitions/LocationUri'
          - description: >-
              <p>Represents a list of URLs of a location.
              <code>LocationUri</code> returns an array that contains a list of
              locations when the <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListLocations.html">ListLocations</a>
              operation is called.</p> <p>Format:
              <code>TYPE://GLOBAL_ID/SUBDIR</code>.</p> <p>TYPE designates the
              type of location. Valid values: NFS | EFS | S3.</p> <p>GLOBAL_ID
              is the globally unique identifier of the resource that backs the
              location. An example for EFS is
              <code>us-east-2.fs-abcd1234</code>. An example for Amazon S3 is
              the bucket name, such as <code>myBucket</code>. An example for NFS
              is a valid IPv4 address or a host name compliant with Domain Name
              Service (DNS).</p> <p>SUBDIR is a valid file system path,
              delimited by forward slashes as is the *nix convention. For NFS
              and Amazon EFS, it's the export path to mount the location. For
              Amazon S3, it's the prefix path that you mount to and treat as the
              root of the location.</p> <p/>
    type: object
  LocationUri:
    maxLength: 4356
    pattern: '^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9.\-]+$'
    type: string
  LogGroupArn:
    maxLength: 562
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):logs:[a-z\-0-9]*:[0-9]{12}:log-group:([^:\*]*)(:\*)?$
    type: string
  LogLevel:
    enum:
      - 'OFF'
      - BASIC
      - TRANSFER
    type: string
  MaxResults:
    maximum: 100
    minimum: 0
    type: integer
  Mtime:
    enum:
      - NONE
      - PRESERVE
    type: string
  NetworkInterfaceArn:
    maxLength: 128
    pattern: >-
      ^arn:aws[\-a-z]{0,}:ec2:[a-z\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$
    type: string
  NextToken:
    maxLength: 65535
    pattern: '[a-zA-Z0-9=_-]+'
    type: string
  NfsMountOptions:
    description: >-
      Represents the mount options that are available for DataSync to access an
      NFS location.
    properties:
      Version:
        allOf:
          - $ref: '#/definitions/NfsVersion'
          - description: >-
              <p>The specific NFS version that you want DataSync to use to mount
              your NFS share. If the server refuses to use the version
              specified, the sync will fail. If you don't specify a version,
              DataSync defaults to <code>AUTOMATIC</code>. That is, DataSync
              automatically selects a version based on negotiation with the NFS
              server.</p> <p>You can specify the following NFS versions:</p>
              <ul> <li> <p> <b> <a
              href="https://tools.ietf.org/html/rfc1813">NFSv3</a> </b> -
              stateless protocol version that allows for asynchronous writes on
              the server.</p> </li> <li> <p> <b> <a
              href="https://tools.ietf.org/html/rfc3530">NFSv4.0</a> </b> -
              stateful, firewall-friendly protocol version that supports
              delegations and pseudo filesystems.</p> </li> <li> <p> <b> <a
              href="https://tools.ietf.org/html/rfc5661">NFSv4.1</a> </b> -
              stateful protocol version that supports sessions, directory
              delegations, and parallel data processing. Version 4.1 also
              includes all features available in version 4.0.</p> </li> </ul>
    type: object
  NfsSubdirectory:
    maxLength: 4096
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\p{Zs}]+$'
    type: string
  NfsVersion:
    enum:
      - AUTOMATIC
      - NFS3
      - NFS4_0
      - NFS4_1
    type: string
  ObjectStorageAccessKey:
    maxLength: 200
    minLength: 8
    pattern: ^.+$
    type: string
  ObjectStorageBucketName:
    maxLength: 63
    minLength: 3
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$'
    type: string
  ObjectStorageSecretKey:
    format: password
    maxLength: 200
    minLength: 8
    pattern: ^.+$
    type: string
  ObjectStorageServerPort:
    maximum: 65536
    minimum: 1
    type: integer
  ObjectStorageServerProtocol:
    enum:
      - HTTPS
      - HTTP
    type: string
  OnPremConfig:
    description: >-
      A list of Amazon Resource Names (ARNs) of agents to use for a Network File
      System (NFS) location.
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: ARNs of the agents to use for an NFS location.
    required:
      - AgentArns
    type: object
  Operator:
    enum:
      - Equals
      - NotEquals
      - In
      - LessThanOrEqual
      - LessThan
      - GreaterThanOrEqual
      - GreaterThan
      - Contains
      - NotContains
      - BeginsWith
    type: string
  Options:
    description: >-
      <p>Represents the options that are available to control the behavior of a
      <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>
      operation. Behavior includes preserving metadata such as user ID (UID),
      group ID (GID), and file permissions, and also overwriting files in the
      destination, data integrity verification, and so on.</p> <p>A task has a
      set of default options associated with it. If you don't specify an option
      in <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>,
      the default value is used. You can override the defaults options on each
      task execution by specifying an overriding <code>Options</code> value to
      <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>.</p>
    properties:
      Atime:
        allOf:
          - $ref: '#/definitions/Atime'
          - description: >-
              <p>A file metadata value that shows the last time a file was
              accessed (that is, when the file was read or written to). If you
              set <code>Atime</code> to BEST_EFFORT, DataSync attempts to
              preserve the original <code>Atime</code> attribute on all source
              files (that is, the version before the PREPARING phase). However,
              <code>Atime</code>'s behavior is not fully standard across
              platforms, so DataSync can only do this on a best-effort basis.
              </p> <p>Default value: BEST_EFFORT.</p> <p>BEST_EFFORT: Attempt to
              preserve the per-file <code>Atime</code> value (recommended).</p>
              <p>NONE: Ignore <code>Atime</code>.</p> <note> <p>If
              <code>Atime</code> is set to BEST_EFFORT, <code>Mtime</code> must
              be set to PRESERVE. </p> <p>If <code>Atime</code> is set to NONE,
              <code>Mtime</code> must also be NONE. </p> </note>
      BytesPerSecond:
        allOf:
          - $ref: '#/definitions/BytesPerSecond'
          - description: >-
              A value that limits the bandwidth used by DataSync. For example,
              if you want DataSync to use a maximum of 1 MB, set this value to
              <code>1048576</code> (<code>=1024*1024</code>).
      Gid:
        allOf:
          - $ref: '#/definitions/Gid'
          - description: >-
              <p>The POSIX group ID (GID) of the file's owners. This option
              should only be set for NFS, EFS, and S3 locations. For more
              information about what metadata is copied by DataSync, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata
              Copied by DataSync</a>. </p> <p>Default value: INT_VALUE. This
              preserves the integer value of the ID.</p> <p>INT_VALUE: Preserve
              the integer value of user ID (UID) and GID (recommended).</p>
              <p>NONE: Ignore UID and GID. </p>
      LogLevel:
        allOf:
          - $ref: '#/definitions/LogLevel'
          - description: >-
              A value that determines the type of logs that DataSync publishes
              to a log stream in the Amazon CloudWatch log group that you
              provide. For more information about providing a log group for
              DataSync, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_CreateTask.html#DataSync-CreateTask-request-CloudWatchLogGroupArn">CloudWatchLogGroupArn</a>.
              If set to <code>OFF</code>, no logs are published.
              <code>BASIC</code> publishes logs on errors for individual files
              transferred, and <code>TRANSFER</code> publishes logs for every
              file or object that is transferred and integrity checked.
      Mtime:
        allOf:
          - $ref: '#/definitions/Mtime'
          - description: >-
              <p>A value that indicates the last time that a file was modified
              (that is, a file was written to) before the PREPARING phase. This
              option is required for cases when you need to run the same task
              more than one time. </p> <p>Default value: PRESERVE. </p>
              <p>PRESERVE: Preserve original <code>Mtime</code>
              (recommended)</p> <p> NONE: Ignore <code>Mtime</code>. </p> <note>
              <p>If <code>Mtime</code> is set to PRESERVE, <code>Atime</code>
              must be set to BEST_EFFORT.</p> <p>If <code>Mtime</code> is set to
              NONE, <code>Atime</code> must also be set to NONE. </p> </note>
      OverwriteMode:
        allOf:
          - $ref: '#/definitions/OverwriteMode'
          - description: >-
              <p>A value that determines whether files at the destination should
              be overwritten or preserved when copying files. If set to
              <code>NEVER</code> a destination file will not be replaced by a
              source file, even if the destination file differs from the source
              file. If you modify files in the destination and you sync the
              files, you can use this value to protect against overwriting those
              changes. </p> <p>Some storage classes have specific behaviors that
              can affect your S3 storage cost. For detailed information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations
              when working with Amazon S3 storage classes in DataSync </a> in
              the <i>DataSync User Guide</i>.</p>
      PosixPermissions:
        allOf:
          - $ref: '#/definitions/PosixPermissions'
          - description: >-
              <p>A value that determines which users or groups can access a file
              for a specific purpose such as reading, writing, or execution of
              the file. This option should only be set for NFS, EFS, and S3
              locations. For more information about what metadata is copied by
              DataSync, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata
              Copied by DataSync</a>. </p> <p>Default value: PRESERVE.</p>
              <p>PRESERVE: Preserve POSIX-style permissions (recommended).</p>
              <p>NONE: Ignore permissions. </p> <note> <p>DataSync can preserve
              extant permissions of a source location.</p> </note>
      PreserveDeletedFiles:
        allOf:
          - $ref: '#/definitions/PreserveDeletedFiles'
          - description: >-
              <p>A value that specifies whether files in the destination that
              don't exist in the source file system should be preserved. This
              option can affect your storage cost. If your task deletes objects,
              you might incur minimum storage duration charges for certain
              storage classes. For detailed information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations
              when working with Amazon S3 storage classes in DataSync </a> in
              the <i>DataSync User Guide</i>.</p> <p>Default value:
              PRESERVE.</p> <p>PRESERVE: Ignore such destination files
              (recommended). </p> <p>REMOVE: Delete destination files that
              aren’t present in the source.</p>
      PreserveDevices:
        allOf:
          - $ref: '#/definitions/PreserveDevices'
          - description: >-
              <p>A value that determines whether DataSync should preserve the
              metadata of block and character devices in the source file system,
              and re-create the files with that device name and metadata on the
              destination. DataSync does not copy the contents of such devices,
              only the name and metadata. </p> <note> <p>DataSync can't sync the
              actual contents of such devices, because they are nonterminal and
              don't return an end-of-file (EOF) marker.</p> </note> <p>Default
              value: NONE.</p> <p>NONE: Ignore special devices (recommended).
              </p> <p>PRESERVE: Preserve character and block device metadata.
              This option isn't currently supported for Amazon EFS. </p>
      SecurityDescriptorCopyFlags:
        allOf:
          - $ref: '#/definitions/SmbSecurityDescriptorCopyFlags'
          - description: >-
              <p>A value that determines which components of the SMB security
              descriptor are copied from source to destination objects. </p>
              <p>This value is only used for transfers between SMB and Amazon
              FSx for Windows File Server locations, or between two Amazon FSx
              for Windows File Server locations. For more information about how
              DataSync handles metadata, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html">How
              DataSync Handles Metadata and Special Files</a>. </p> <p>Default
              value: OWNER_DACL.</p> <p> <b>OWNER_DACL</b>: For each copied
              object, DataSync copies the following metadata:</p> <ul> <li>
              <p>Object owner.</p> </li> <li> <p>NTFS discretionary access
              control lists (DACLs), which determine whether to grant access to
              an object.</p> </li> </ul> <p>When choosing this option, DataSync
              does NOT copy the NTFS system access control lists (SACLs), which
              are used by administrators to log attempts to access a secured
              object.</p> <p> <b>OWNER_DACL_SACL</b>: For each copied object,
              DataSync copies the following metadata:</p> <ul> <li> <p>Object
              owner.</p> </li> <li> <p>NTFS discretionary access control lists
              (DACLs), which determine whether to grant access to an object.</p>
              </li> <li> <p>NTFS system access control lists (SACLs), which are
              used by administrators to log attempts to access a secured
              object.</p> </li> </ul> <p>Copying SACLs requires granting
              additional permissions to the Windows user that DataSync uses to
              access your SMB location. For information about choosing a user
              that ensures sufficient permissions to files, folders, and
              metadata, see <a
              href="create-smb-location.html#SMBuser">user</a>.</p> <p>
              <b>NONE</b>: None of the SMB security descriptor components are
              copied. Destination objects are owned by the user that was
              provided for accessing the destination location. DACLs and SACLs
              are set based on the destination server’s configuration. </p>
      TaskQueueing:
        allOf:
          - $ref: '#/definitions/TaskQueueing'
          - description: >-
              <p>A value that determines whether tasks should be queued before
              executing the tasks. If set to <code>ENABLED</code>, the tasks
              will be queued. The default is <code>ENABLED</code>.</p> <p>If you
              use the same agent to run multiple tasks, you can enable the tasks
              to run in series. For more information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/run-task.html#queue-task-execution">Queueing
              task executions</a>.</p>
      TransferMode:
        allOf:
          - $ref: '#/definitions/TransferMode'
          - description: >-
              <p>A value that determines whether DataSync transfers only the
              data and metadata that differ between the source and the
              destination location, or whether DataSync transfers all the
              content from the source, without comparing to the destination
              location. </p> <p>CHANGED: DataSync copies only data or metadata
              that is new or different content from the source location to the
              destination location.</p> <p>ALL: DataSync copies all source
              location content to the destination, without comparing to existing
              content on the destination.</p>
      Uid:
        allOf:
          - $ref: '#/definitions/Uid'
          - description: >-
              <p>The POSIX user ID (UID) of the file's owner. This option should
              only be set for NFS, EFS, and S3 locations. To learn more about
              what metadata is copied by DataSync, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata
              Copied by DataSync</a>.</p> <p>Default value: INT_VALUE. This
              preserves the integer value of the ID.</p> <p>INT_VALUE: Preserve
              the integer value of UID and group ID (GID) (recommended).</p>
              <p>NONE: Ignore UID and GID. </p>
      VerifyMode:
        allOf:
          - $ref: '#/definitions/VerifyMode'
          - description: >-
              <p>A value that determines whether a data integrity verification
              should be performed at the end of a task execution after all data
              and metadata have been transferred. For more information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html">Configure
              task settings</a>. </p> <p>Default value:
              POINT_IN_TIME_CONSISTENT.</p> <p>ONLY_FILES_TRANSFERRED
              (recommended): Perform verification only on files that were
              transferred. </p> <p>POINT_IN_TIME_CONSISTENT: Scan the entire
              source and entire destination at the end of the transfer to verify
              that source and destination are fully synchronized. This option
              isn't supported when transferring to S3 Glacier or S3 Glacier Deep
              Archive storage classes.</p> <p>NONE: No additional verification
              is done at the end of the transfer, but all data transmissions are
              integrity-checked with checksum verification during the
              transfer.</p>
    type: object
  OutputTagList:
    items:
      $ref: '#/definitions/TagListEntry'
    maxItems: 55
    minItems: 0
    type: array
  OverwriteMode:
    enum:
      - ALWAYS
      - NEVER
    type: string
  PLSecurityGroupArnList:
    items:
      $ref: '#/definitions/Ec2SecurityGroupArn'
    maxItems: 1
    minItems: 1
    type: array
  PLSubnetArnList:
    items:
      $ref: '#/definitions/Ec2SubnetArn'
    maxItems: 1
    minItems: 1
    type: array
  PhaseStatus:
    enum:
      - PENDING
      - SUCCESS
      - ERROR
    type: string
  PosixPermissions:
    enum:
      - NONE
      - PRESERVE
    type: string
  PreserveDeletedFiles:
    enum:
      - PRESERVE
      - REMOVE
    type: string
  PreserveDevices:
    enum:
      - NONE
      - PRESERVE
    type: string
  PrivateLinkConfig:
    description: >-
      The VPC endpoint, subnet, and security group that an agent uses to access
      IP addresses in a VPC (Virtual Private Cloud).
    properties:
      PrivateLinkEndpoint:
        allOf:
          - $ref: '#/definitions/Endpoint'
          - description: >-
              The private endpoint that is configured for an agent that has
              access to IP addresses in a <a
              href="https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-service.html">PrivateLink</a>.
              An agent that is configured with this endpoint will not be
              accessible over the public internet.
      SecurityGroupArns:
        allOf:
          - $ref: '#/definitions/PLSecurityGroupArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the security groups that are
              configured for the EC2 resource that hosts an agent activated in a
              VPC or an agent that has access to a VPC endpoint.
      SubnetArns:
        allOf:
          - $ref: '#/definitions/PLSubnetArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of the subnets that are
              configured for an agent activated in a VPC or an agent that has
              access to a VPC endpoint.
      VpcEndpointId:
        allOf:
          - $ref: '#/definitions/VpcEndpointId'
          - description: >-
              The ID of the VPC endpoint that is configured for an agent. An
              agent that is configured with a VPC endpoint will not be
              accessible over the public internet.
    type: object
  S3BucketArn:
    maxLength: 156
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(s3|s3-outposts):[a-z\-0-9]*:[0-9]*:.*$
    type: string
  S3Config:
    description: >-
      <p>The Amazon Resource Name (ARN) of the Identity and Access Management
      (IAM) role that is used to access an Amazon S3 bucket.</p> <p>For detailed
      information about using such a role, see Creating a Location for Amazon S3
      in the <i>DataSync User Guide</i>.</p>
    properties:
      BucketAccessRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon S3 bucket to access. This bucket is used as a parameter
              in the <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/API_CreateLocationS3.html">CreateLocationS3</a>
              operation. 
    required:
      - BucketAccessRoleArn
    type: object
  S3StorageClass:
    enum:
      - STANDARD
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
      - OUTPOSTS
    type: string
  S3Subdirectory:
    maxLength: 4096
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\p{Zs}]*$'
    type: string
  ScheduleExpressionCron:
    maxLength: 256
    pattern: '^[a-zA-Z0-9\ \_\*\?\,\|\^\-\/\#\s\(\)\+]*$'
    type: string
  ServerHostname:
    maxLength: 255
    pattern: '^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9\-]*[A-Za-z0-9])$'
    type: string
  SmbDomain:
    maxLength: 253
    pattern: '^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$'
    type: string
  SmbMountOptions:
    description: >-
      Represents the mount options that are available for DataSync to access an
      SMB location.
    properties:
      Version:
        allOf:
          - $ref: '#/definitions/SmbVersion'
          - description: >-
              The specific SMB version that you want DataSync to use to mount
              your SMB share. If you don't specify a version, DataSync defaults
              to <code>AUTOMATIC</code>. That is, DataSync automatically selects
              a version based on negotiation with the SMB server.
    type: object
  SmbPassword:
    format: password
    maxLength: 104
    pattern: '^.{0,104}$'
    type: string
  SmbSecurityDescriptorCopyFlags:
    enum:
      - NONE
      - OWNER_DACL
      - OWNER_DACL_SACL
    type: string
  SmbSubdirectory:
    maxLength: 4096
    pattern: '^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$'
    type: string
  SmbUser:
    maxLength: 104
    pattern: '^[^\x5B\x5D\\/:;|=,+*?]{1,104}$'
    type: string
  SmbVersion:
    enum:
      - AUTOMATIC
      - SMB2
      - SMB3
    type: string
  SourceNetworkInterfaceArns:
    items:
      $ref: '#/definitions/NetworkInterfaceArn'
    type: array
  StartTaskExecutionRequest:
    description: StartTaskExecutionRequest
    properties:
      Excludes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              A list of filter rules that determines which files to exclude from
              a task. The list should contain a single filter string that
              consists of the patterns to exclude. The patterns are delimited by
              "|" (that is, a pipe), for example,
              <code>"/folder1|/folder2"</code>. 
      Includes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to include
              when running a task. The pattern should contain a single filter
              string that consists of the patterns to include. The patterns are
              delimited by "|" (that is, a pipe). For example:
              <code>"/folder1|/folder2"</code> </p> <p> </p>
      OverrideOptions:
        $ref: '#/definitions/Options'
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task to start.
    required:
      - TaskArn
    title: StartTaskExecutionRequest
    type: object
  StartTaskExecutionResponse:
    description: StartTaskExecutionResponse
    properties:
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the specific task execution that
              was started.
    type: object
  TagKey:
    maxLength: 256
    minLength: 1
    pattern: '^[a-zA-Z0-9\s+=._:/-]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagListEntry:
    description: >-
      Represents a single entry in a list of AWS resource tags.
      <code>TagListEntry</code> returns an array that contains a list of tasks
      when the <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTagsForResource.html">ListTagsForResource</a>
      operation is called.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: The key for an Amazon Web Services resource tag.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The value for an Amazon Web Services resource tag.
    required:
      - Key
    type: object
  TagResourceRequest:
    description: TagResourceRequest
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/TaggableResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to apply the tag
              to.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagList'
          - description: The tags to apply.
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 1
    pattern: '^[a-zA-Z0-9\s+=._:@/-]+$'
    type: string
  TaggableResourceArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]+:[0-9]{12}:(agent|task|location)/(agent|task|loc)-[0-9a-z]{17}$
    type: string
  TaskArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}$
    type: string
  TaskExecutionArn:
    maxLength: 128
    pattern: >-
      ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}/execution/exec-[0-9a-f]{17}$
    type: string
  TaskExecutionList:
    items:
      $ref: '#/definitions/TaskExecutionListEntry'
    type: array
  TaskExecutionListEntry:
    description: >-
      Represents a single entry in a list of task executions.
      <code>TaskExecutionListEntry</code> returns an array that contains a list
      of specific invocations of a task when the <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTaskExecutions.html">ListTaskExecutions</a>
      operation is called.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/TaskExecutionStatus'
          - description: The status of a task execution.
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: The Amazon Resource Name (ARN) of the task that was executed.
    type: object
  TaskExecutionResultDetail:
    description: >-
      Describes the detailed result of a <code>TaskExecution</code> operation.
      This result includes the time in milliseconds spent in each phase, the
      status of the task execution, and the errors encountered.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Errors that DataSync encountered during execution of the task. You
              can use this error code to help troubleshoot issues.
      ErrorDetail:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Detailed description of an error that was encountered during the
              task execution. You can use this information to help troubleshoot
              issues. 
      PrepareDuration:
        allOf:
          - $ref: '#/definitions/Duration'
          - description: >-
              The total time in milliseconds that DataSync spent in the
              PREPARING phase. 
      PrepareStatus:
        allOf:
          - $ref: '#/definitions/PhaseStatus'
          - description: The status of the PREPARING phase.
      TotalDuration:
        allOf:
          - $ref: '#/definitions/Duration'
          - description: >-
              The total time in milliseconds that DataSync took to transfer the
              file from the source to the destination location.
      TransferDuration:
        allOf:
          - $ref: '#/definitions/Duration'
          - description: >-
              The total time in milliseconds that DataSync spent in the
              TRANSFERRING phase.
      TransferStatus:
        allOf:
          - $ref: '#/definitions/PhaseStatus'
          - description: The status of the TRANSFERRING phase.
      VerifyDuration:
        allOf:
          - $ref: '#/definitions/Duration'
          - description: >-
              The total time in milliseconds that DataSync spent in the
              VERIFYING phase.
      VerifyStatus:
        allOf:
          - $ref: '#/definitions/PhaseStatus'
          - description: The status of the VERIFYING phase.
    type: object
  TaskExecutionStatus:
    enum:
      - QUEUED
      - LAUNCHING
      - PREPARING
      - TRANSFERRING
      - VERIFYING
      - SUCCESS
      - ERROR
    type: string
  TaskFilter:
    description: >-
      You can use API filters to narrow down the list of resources returned by
      <code>ListTasks</code>. For example, to retrieve all tasks on a source
      location, you can use <code>ListTasks</code> with filter name
      <code>LocationId</code> and <code>Operator Equals</code> with the ARN for
      the location.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/TaskFilterName'
          - description: >-
              The name of the filter being used. Each API call supports a list
              of filters that are available for it. For example,
              <code>LocationId</code> for <code>ListTasks</code>.
      Operator:
        allOf:
          - $ref: '#/definitions/Operator'
          - description: >-
              The operator that is used to compare filter values (for example,
              <code>Equals</code> or <code>Contains</code>). For more about API
              filtering operators, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/query-resources.html">API
              filters for ListTasks and ListLocations</a>.
      Values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: >-
              The values that you want to filter for. For example, you might
              want to display only tasks for a specific destination location.
    required:
      - Name
      - Values
      - Operator
    type: object
  TaskFilterName:
    enum:
      - LocationId
      - CreationTime
    type: string
  TaskFilters:
    items:
      $ref: '#/definitions/TaskFilter'
    type: array
  TaskList:
    items:
      $ref: '#/definitions/TaskListEntry'
    type: array
  TaskListEntry:
    description: >-
      Represents a single entry in a list of tasks. <code>TaskListEntry</code>
      returns an array that contains a list of tasks when the <a
      href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTasks.html">ListTasks</a>
      operation is called. A task includes the source and destination file
      systems to sync and the options to use for the tasks.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name of the task.
      Status:
        allOf:
          - $ref: '#/definitions/TaskStatus'
          - description: The status of the task.
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: The Amazon Resource Name (ARN) of the task.
    type: object
  TaskQueueing:
    enum:
      - ENABLED
      - DISABLED
    type: string
  TaskSchedule:
    description: >-
      Specifies the schedule you want your task to use for repeated executions.
      For more information, see <a
      href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html">Schedule
      Expressions for Rules</a>.
    properties:
      ScheduleExpression:
        allOf:
          - $ref: '#/definitions/ScheduleExpressionCron'
          - description: >-
              A cron expression that specifies when DataSync initiates a
              scheduled transfer from a source to a destination location. 
    required:
      - ScheduleExpression
    type: object
  TaskStatus:
    enum:
      - AVAILABLE
      - CREATING
      - QUEUED
      - RUNNING
      - UNAVAILABLE
    type: string
  Time:
    format: date-time
    type: string
  TransferMode:
    enum:
      - CHANGED
      - ALL
    type: string
  Uid:
    enum:
      - NONE
      - INT_VALUE
      - NAME
      - BOTH
    type: string
  UntagResourceRequest:
    description: UntagResourceRequest
    properties:
      Keys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: The keys in the key-value pair in the tag to remove.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/TaggableResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to remove the tag
              from.
    required:
      - ResourceArn
      - Keys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateAgentRequest:
    description: UpdateAgentRequest
    properties:
      AgentArn:
        allOf:
          - $ref: '#/definitions/AgentArn'
          - description: The Amazon Resource Name (ARN) of the agent to update.
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name that you want to use to configure the agent.
    required:
      - AgentArn
    title: UpdateAgentRequest
    type: object
  UpdateAgentResponse:
    properties: {}
    type: object
  UpdateLocationNfsRequest:
    properties:
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the NFS location to update.
      MountOptions:
        $ref: '#/definitions/NfsMountOptions'
      OnPremConfig:
        $ref: '#/definitions/OnPremConfig'
      Subdirectory:
        allOf:
          - $ref: '#/definitions/NfsSubdirectory'
          - description: >-
              <p>The subdirectory in the NFS file system that is used to read
              data from the NFS source location or write data to the NFS
              destination. The NFS path should be a path that's exported by the
              NFS server, or a subdirectory of that path. The path should be
              such that it can be mounted by other NFS clients in your
              network.</p> <p>To see all the paths exported by your NFS server,
              run "<code>showmount -e nfs-server-name</code>" from an NFS client
              that has access to your server. You can specify any directory that
              appears in the results, and any subdirectory of that directory.
              Ensure that the NFS export is accessible without Kerberos
              authentication. </p> <p>To transfer all the data in the folder
              that you specified, DataSync must have permissions to read all the
              data. To ensure this, either configure the NFS export with
              <code>no_root_squash</code>, or ensure that the files you want
              DataSync to access have permissions that allow read access for all
              users. Doing either option enables the agent to read the files.
              For the agent to access directories, you must additionally enable
              all execute access.</p> <p>If you are copying data to or from your
              Snowcone device, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html#nfs-on-snowcone">NFS
              Server on Snowcone</a> for more information.</p> <p>For
              information about NFS export configuration, see 18.7. The
              /etc/exports Configuration File in the Red Hat Enterprise Linux
              documentation.</p>
    required:
      - LocationArn
    title: UpdateLocationNfsRequest
    type: object
  UpdateLocationNfsResponse:
    properties: {}
    type: object
  UpdateLocationObjectStorageRequest:
    properties:
      AccessKey:
        allOf:
          - $ref: '#/definitions/ObjectStorageAccessKey'
          - description: >-
              Optional. The access key is used if credentials are required to
              access the self-managed object storage server. If your object
              storage requires a user name and password to authenticate, use
              <code>AccessKey</code> and <code>SecretKey</code> to provide the
              user name and password, respectively.
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Name (ARN) of the agents associated with the
              self-managed object storage server location.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the self-managed object storage
              server location to be updated.
      SecretKey:
        allOf:
          - $ref: '#/definitions/ObjectStorageSecretKey'
          - description: >-
              Optional. The secret key is used if credentials are required to
              access the self-managed object storage server. If your object
              storage requires a user name and password to authenticate, use
              <code>AccessKey</code> and <code>SecretKey</code> to provide the
              user name and password, respectively.
      ServerPort:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerPort'
          - description: >-
              The port that your self-managed object storage server accepts
              inbound network traffic on. The server port is set by default to
              TCP 80 (HTTP) or TCP 443 (HTTPS). You can specify a custom port if
              your self-managed object storage server requires one.
      ServerProtocol:
        allOf:
          - $ref: '#/definitions/ObjectStorageServerProtocol'
          - description: >-
              The protocol that the object storage server uses to communicate.
              Valid values are <code>HTTP</code> or <code>HTTPS</code>.
      Subdirectory:
        allOf:
          - $ref: '#/definitions/S3Subdirectory'
          - description: >-
              The subdirectory in the self-managed object storage server that is
              used to read data from.
    required:
      - LocationArn
    title: UpdateLocationObjectStorageRequest
    type: object
  UpdateLocationObjectStorageResponse:
    properties: {}
    type: object
  UpdateLocationSmbRequest:
    properties:
      AgentArns:
        allOf:
          - $ref: '#/definitions/AgentArnList'
          - description: >-
              The Amazon Resource Names (ARNs) of agents to use for a Simple
              Message Block (SMB) location.
      Domain:
        allOf:
          - $ref: '#/definitions/SmbDomain'
          - description: The name of the Windows domain that the SMB server belongs to.
      LocationArn:
        allOf:
          - $ref: '#/definitions/LocationArn'
          - description: The Amazon Resource Name (ARN) of the SMB location to update.
      MountOptions:
        $ref: '#/definitions/SmbMountOptions'
      Password:
        allOf:
          - $ref: '#/definitions/SmbPassword'
          - description: >-
              The password of the user who can mount the share has the
              permissions to access files and folders in the SMB share.
      Subdirectory:
        allOf:
          - $ref: '#/definitions/SmbSubdirectory'
          - description: >-
              <p>The subdirectory in the SMB file system that is used to read
              data from the SMB source location or write data to the SMB
              destination. The SMB path should be a path that's exported by the
              SMB server, or a subdirectory of that path. The path should be
              such that it can be mounted by other SMB clients in your
              network.</p> <note> <p> <code>Subdirectory</code> must be
              specified with forward slashes. For example,
              <code>/path/to/folder</code>.</p> </note> <p>To transfer all the
              data in the folder that you specified, DataSync must have
              permissions to mount the SMB share and to access all the data in
              that share. To ensure this, do either of the following:</p> <ul>
              <li> <p>Ensure that the user/password specified belongs to the
              user who can mount the share and who has the appropriate
              permissions for all of the files and directories that you want
              DataSync to access.</p> </li> <li> <p>Use credentials of a member
              of the Backup Operators group to mount the share. </p> </li> </ul>
              <p>Doing either of these options enables the agent to access the
              data. For the agent to access directories, you must also enable
              all execute access.</p>
      User:
        allOf:
          - $ref: '#/definitions/SmbUser'
          - description: >-
              The user who can mount the share has the permissions to access
              files and folders in the SMB share.
    required:
      - LocationArn
    title: UpdateLocationSmbRequest
    type: object
  UpdateLocationSmbResponse:
    properties: {}
    type: object
  UpdateTaskExecutionRequest:
    properties:
      Options:
        $ref: '#/definitions/Options'
      TaskExecutionArn:
        allOf:
          - $ref: '#/definitions/TaskExecutionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the specific task execution that
              is being updated. 
    required:
      - TaskExecutionArn
      - Options
    title: UpdateTaskExecutionRequest
    type: object
  UpdateTaskExecutionResponse:
    properties: {}
    type: object
  UpdateTaskRequest:
    description: UpdateTaskResponse
    properties:
      CloudWatchLogGroupArn:
        allOf:
          - $ref: '#/definitions/LogGroupArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource name of the
              CloudWatch LogGroup.
      Excludes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>A list of filter rules that determines which files to exclude
              from a task. The list should contain a single filter string that
              consists of the patterns to exclude. The patterns are delimited by
              "|" (that is, a pipe), for example:
              <code>"/folder1|/folder2"</code> </p> <p> </p>
      Includes:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              A list of filter rules that determines which files to include when
              running a task. The pattern should contain a single filter string
              that consists of the patterns to include. The patterns are
              delimited by "|" (that is, a pipe). For example:
              <code>"/folder1|/folder2</code>"
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The name of the task to update.
      Options:
        $ref: '#/definitions/Options'
      Schedule:
        allOf:
          - $ref: '#/definitions/TaskSchedule'
          - description: >-
              Specifies a schedule used to periodically transfer files from a
              source to a destination location. You can configure your task to
              execute hourly, daily, weekly or on specific days of the week. You
              control when in the day or hour you want the task to execute. The
              time you specify is UTC time. For more information, see <a
              href="https://docs.aws.amazon.com/datasync/latest/userguide/task-scheduling.html">Scheduling
              your task</a>.
      TaskArn:
        allOf:
          - $ref: '#/definitions/TaskArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource name of the task to
              update.
    required:
      - TaskArn
    title: UpdateTaskRequest
    type: object
  UpdateTaskResponse:
    properties: {}
    type: object
  VerifyMode:
    enum:
      - POINT_IN_TIME_CONSISTENT
      - ONLY_FILES_TRANSFERRED
      - NONE
    type: string
  VpcEndpointId:
    pattern: '^vpce-[0-9a-f]{17}$'
    type: string
  long:
    type: integer
  string:
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/datasync/'
host: datasync.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>DataSync</fullname> <p>DataSync is a managed data transfer service
    that makes it simpler for you to automate moving data between on-premises
    storage and Amazon Simple Storage Service (Amazon S3) or Amazon Elastic File
    System (Amazon EFS). </p> <p>This API interface reference for DataSync
    contains documentation for a programming interface that you can use to
    manage DataSync.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS DataSync
  version: '2018-11-09'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: datasync
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/datasync-2018-11-09.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: datasync
paths:
  /#X-Amz-Target=FmrsService.CancelTaskExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Cancels execution of a task. </p> <p>When you cancel a task
        execution, the transfer of some files is abruptly interrupted. The
        contents of files that are transferred to the destination might be
        incomplete or inconsistent with the source files. However, if you start
        a new task execution on the same task and you allow the task execution
        to complete, file content on the destination is complete and consistent.
        This applies to other unexpected failures that interrupt a task
        execution. In all of these cases, DataSync successfully complete the
        transfer when you start the next task execution.</p>
      operationId: CancelTaskExecution
      parameters:
        - enum:
            - FmrsService.CancelTaskExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CancelTaskExecutionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelTaskExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateAgent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Activates an DataSync agent that you have deployed on your host. The
        activation process associates your agent with your account. In the
        activation process, you specify information such as the Amazon Web
        Services Region that you want to activate the agent in. You activate the
        agent in the Amazon Web Services Region where your target locations (in
        Amazon S3 or Amazon EFS) reside. Your tasks are created in this Amazon
        Web Services Region.</p> <p>You can activate the agent in a VPC (virtual
        private cloud) or provide the agent access to a VPC endpoint so you can
        run tasks without going over the public internet.</p> <p>You can use an
        agent for more than one location. If a task uses multiple agents, all of
        them need to have status AVAILABLE for the task to run. If you use
        multiple agents for a source location, the status of all the agents must
        be AVAILABLE for the task to run. </p> <p>Agents are automatically
        updated by Amazon Web Services on a regular basis, using a mechanism
        that ensures minimal interruption to your tasks.</p> <p/>
      operationId: CreateAgent
      parameters:
        - enum:
            - FmrsService.CreateAgent
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAgentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAgentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationEfs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates an endpoint for an Amazon EFS file system.
      operationId: CreateLocationEfs
      parameters:
        - enum:
            - FmrsService.CreateLocationEfs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationEfsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationEfsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationFsxWindows:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an endpoint for an Amazon FSx for Windows File Server file
        system.
      operationId: CreateLocationFsxWindows
      parameters:
        - enum:
            - FmrsService.CreateLocationFsxWindows
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationFsxWindowsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationFsxWindowsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationNfs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Defines a file system on a Network File System (NFS) server that can be
        read from or written to.
      operationId: CreateLocationNfs
      parameters:
        - enum:
            - FmrsService.CreateLocationNfs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationNfsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationNfsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationObjectStorage:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an endpoint for a self-managed object storage bucket. For more
        information about self-managed object storage locations, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html">Creating
        a location for object storage</a>.
      operationId: CreateLocationObjectStorage
      parameters:
        - enum:
            - FmrsService.CreateLocationObjectStorage
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationObjectStorageRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationObjectStorageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationS3:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates an endpoint for an Amazon S3 bucket.</p> <p>For more
        information, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-locations-cli.html#create-location-s3-cli">Create
        an Amazon S3 location</a> in the <i>DataSync User Guide</i>.</p>
      operationId: CreateLocationS3
      parameters:
        - enum:
            - FmrsService.CreateLocationS3
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationS3Request'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationS3Response'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateLocationSmb:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Defines a file system on a Server Message Block (SMB) server that can be
        read from or written to.
      operationId: CreateLocationSmb
      parameters:
        - enum:
            - FmrsService.CreateLocationSmb
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLocationSmbRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLocationSmbResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.CreateTask:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a task.</p> <p>A task includes a source location and a
        destination location, and a configuration that specifies how data is
        transferred. A task always transfers data from the source location to
        the destination location. The configuration specifies options such as
        task scheduling, bandwidth limits, etc. A task is the complete
        definition of a data transfer.</p> <p>When you create a task that
        transfers data between Amazon Web Services services in different Amazon
        Web Services Regions, one of the two locations that you specify must
        reside in the Region where DataSync is being used. The other location
        must be specified in a different Region.</p> <p>You can transfer data
        between commercial Amazon Web Services Regions except for China, or
        between Amazon Web Services GovCloud (US) Regions.</p> <important>
        <p>When you use DataSync to copy files or objects between Amazon Web
        Services Regions, you pay for data transfer between Regions. This is
        billed as data transfer OUT from your source Region to your destination
        Region. For more information, see <a
        href="http://aws.amazon.com/ec2/pricing/on-demand/#Data_Transfer">Data
        Transfer pricing</a>. </p> </important>
      operationId: CreateTask
      parameters:
        - enum:
            - FmrsService.CreateTask
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTaskRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DeleteAgent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an agent. To specify which agent to delete, use the Amazon
        Resource Name (ARN) of the agent in your request. The operation
        disassociates the agent from your Amazon Web Services account. However,
        it doesn't delete the agent virtual machine (VM) from your on-premises
        environment.
      operationId: DeleteAgent
      parameters:
        - enum:
            - FmrsService.DeleteAgent
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAgentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAgentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DeleteLocation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Deletes the configuration of a location used by DataSync. '
      operationId: DeleteLocation
      parameters:
        - enum:
            - FmrsService.DeleteLocation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLocationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLocationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DeleteTask:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes a task.
      operationId: DeleteTask
      parameters:
        - enum:
            - FmrsService.DeleteTask
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTaskRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeAgent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata such as the name, the network interfaces, and the
        status (that is, whether the agent is running or not) for an agent. To
        specify which agent to describe, use the Amazon Resource Name (ARN) of
        the agent in your request. 
      operationId: DescribeAgent
      parameters:
        - enum:
            - FmrsService.DescribeAgent
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAgentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAgentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationEfs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata, such as the path information about an Amazon EFS
        location.
      operationId: DescribeLocationEfs
      parameters:
        - enum:
            - FmrsService.DescribeLocationEfs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationEfsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationEfsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationFsxWindows:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata, such as the path information about an Amazon FSx for
        Windows File Server location.
      operationId: DescribeLocationFsxWindows
      parameters:
        - enum:
            - FmrsService.DescribeLocationFsxWindows
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationFsxWindowsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationFsxWindowsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationNfs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Returns metadata, such as the path information, about an NFS location.'
      operationId: DescribeLocationNfs
      parameters:
        - enum:
            - FmrsService.DescribeLocationNfs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationNfsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationNfsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationObjectStorage:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata about a self-managed object storage server location.
        For more information about self-managed object storage locations, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html">Creating
        a location for object storage</a>.
      operationId: DescribeLocationObjectStorage
      parameters:
        - enum:
            - FmrsService.DescribeLocationObjectStorage
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationObjectStorageRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationObjectStorageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationS3:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata, such as bucket name, about an Amazon S3 bucket
        location.
      operationId: DescribeLocationS3
      parameters:
        - enum:
            - FmrsService.DescribeLocationS3
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationS3Request'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationS3Response'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeLocationSmb:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns metadata, such as the path and user information about an SMB
        location.
      operationId: DescribeLocationSmb
      parameters:
        - enum:
            - FmrsService.DescribeLocationSmb
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLocationSmbRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLocationSmbResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeTask:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns metadata about a task.
      operationId: DescribeTask
      parameters:
        - enum:
            - FmrsService.DescribeTask
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTaskRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.DescribeTaskExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns detailed metadata about a task that is being executed.
      operationId: DescribeTaskExecution
      parameters:
        - enum:
            - FmrsService.DescribeTaskExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTaskExecutionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTaskExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.ListAgents:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of agents owned by an Amazon Web Services account in
        the Amazon Web Services Region specified in the request. The returned
        list is ordered by agent Amazon Resource Name (ARN).</p> <p>By default,
        this operation returns a maximum of 100 agents. This operation supports
        pagination that enables you to optionally reduce the number of agents
        returned in a response.</p> <p>If you have more agents than are returned
        in a response (that is, the response returns only a truncated list of
        your agents), the response contains a marker that you can specify in
        your next request to fetch the next page of agents.</p>
      operationId: ListAgents
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - FmrsService.ListAgents
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAgentsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAgentsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.ListLocations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of source and destination locations.</p> <p>If you
        have more locations than are returned in a response (that is, the
        response returns only a truncated list of your agents), the response
        contains a token that you can specify in your next request to fetch the
        next page of locations.</p>
      operationId: ListLocations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - FmrsService.ListLocations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListLocationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLocationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Returns all the tags associated with a specified resource. '
      operationId: ListTagsForResource
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - FmrsService.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.ListTaskExecutions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of executed tasks.
      operationId: ListTaskExecutions
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - FmrsService.ListTaskExecutions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTaskExecutionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTaskExecutionsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.ListTasks:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of all the tasks.
      operationId: ListTasks
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - FmrsService.ListTasks
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTasksRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.StartTaskExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Starts a specific invocation of a task. A <code>TaskExecution</code>
        value represents an individual run of a task. Each task can have at most
        one <code>TaskExecution</code> at a time.</p> <p>
        <code>TaskExecution</code> has the following transition phases:
        INITIALIZING | PREPARING | TRANSFERRING | VERIFYING | SUCCESS/FAILURE.
        </p> <p>For detailed information, see the Task Execution section in the
        Components and Terminology topic in the <i>DataSync User Guide</i>.</p>
      operationId: StartTaskExecution
      parameters:
        - enum:
            - FmrsService.StartTaskExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartTaskExecutionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartTaskExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Applies a key-value pair to an Amazon Web Services resource.
      operationId: TagResource
      parameters:
        - enum:
            - FmrsService.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Removes a tag from an Amazon Web Services resource.
      operationId: UntagResource
      parameters:
        - enum:
            - FmrsService.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateAgent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Updates the name of an agent.
      operationId: UpdateAgent
      parameters:
        - enum:
            - FmrsService.UpdateAgent
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAgentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAgentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateLocationNfs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates some of the parameters of a previously created location for
        Network File System (NFS) access. For information about creating an NFS
        location, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html">Creating
        a location for NFS</a>.
      operationId: UpdateLocationNfs
      parameters:
        - enum:
            - FmrsService.UpdateLocationNfs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLocationNfsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLocationNfsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateLocationObjectStorage:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates some of the parameters of a previously created location for
        self-managed object storage server access. For information about
        creating a self-managed object storage location, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html">Creating
        a location for object storage</a>.
      operationId: UpdateLocationObjectStorage
      parameters:
        - enum:
            - FmrsService.UpdateLocationObjectStorage
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLocationObjectStorageRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLocationObjectStorageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateLocationSmb:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates some of the parameters of a previously created location for
        Server Message Block (SMB) file system access. For information about
        creating an SMB location, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/create-smb-location.html">Creating
        a location for SMB</a>.
      operationId: UpdateLocationSmb
      parameters:
        - enum:
            - FmrsService.UpdateLocationSmb
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLocationSmbRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLocationSmbResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateTask:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Updates the metadata associated with a task.
      operationId: UpdateTask
      parameters:
        - enum:
            - FmrsService.UpdateTask
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTaskRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  /#X-Amz-Target=FmrsService.UpdateTaskExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Updates execution of a task.</p> <p>You can modify bandwidth
        throttling for a task execution that is running or queued. For more
        information, see <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/working-with-task-executions.html#adjust-bandwidth-throttling">Adjusting
        Bandwidth Throttling for a Task Execution</a>.</p> <note> <p>The only
        <code>Option</code> that can be modified by
        <code>UpdateTaskExecution</code> is <code> <a
        href="https://docs.aws.amazon.com/datasync/latest/userguide/API_Options.html#DataSync-Type-Options-BytesPerSecond">BytesPerSecond</a>
        </code>.</p> </note>
      operationId: UpdateTaskExecution
      parameters:
        - enum:
            - FmrsService.UpdateTaskExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTaskExecutionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTaskExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

