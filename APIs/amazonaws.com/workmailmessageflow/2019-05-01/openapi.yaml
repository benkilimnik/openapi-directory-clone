basePath: /
definitions:
  GetRawMessageContentRequest:
    properties: {}
    title: GetRawMessageContentRequest
    type: object
  GetRawMessageContentResponse:
    properties:
      messageContent:
        allOf:
          - $ref: '#/definitions/messageContentBlob'
          - description: 'The raw content of the email message, in MIME format.'
    required:
      - messageContent
    type: object
  InvalidContentLocation: {}
  MessageFrozen: {}
  MessageRejected: {}
  PutRawMessageContentRequest:
    properties:
      content:
        allOf:
          - $ref: '#/definitions/RawMessageContent'
          - description: Describes the raw message content of the updated email message.
    required:
      - content
    title: PutRawMessageContentRequest
    type: object
  PutRawMessageContentResponse:
    properties: {}
    type: object
  RawMessageContent:
    description: >-
      <p>Provides the MIME content of the updated email message as an S3 object.
      All MIME content must meet the following criteria:</p> <ul> <li> <p>Each
      part of a multipart MIME message must be formatted properly.</p> </li>
      <li> <p>Attachments must be of a content type that Amazon SES supports.
      For more information, see <a
      href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types-appendix.html">Unsupported
      Attachment Types</a>.</p> </li> <li> <p>If any of the MIME parts in a
      message contain content that is outside of the 7-bit ASCII character
      range, we recommend encoding that content.</p> </li> <li> <p>Per <a
      href="https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6">RFC 5321</a>,
      the maximum length of each line of text, including the &lt;CRLF&gt;, must
      not exceed 1,000 characters.</p> </li> <li> <p>The message must contain
      all the required header fields. Check the returned error message for more
      information.</p> </li> <li> <p>The value of immutable headers must remain
      unchanged. Check the returned error message for more information.</p>
      </li> <li> <p>Certain unique headers can only appear once. Check the
      returned error message for more information.</p> </li> </ul>
    properties:
      s3Reference:
        allOf:
          - $ref: '#/definitions/S3Reference'
          - description: The S3 reference of an email message.
    required:
      - s3Reference
    type: object
  ResourceNotFoundException: {}
  S3Reference:
    description: >-
      <p>Amazon S3 object representing the updated message content, in MIME
      format.</p> <note> <p>The region for the S3 bucket containing the S3
      object must match the region used for WorkMail operations. Also, for
      WorkMail to process an S3 object, it must have permission to access that
      object. For more information, see <a
      href="https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html">
      Updating message content with AWS Lambda</a>.</p> </note>
    properties:
      bucket:
        allOf:
          - $ref: '#/definitions/s3BucketIdType'
          - description: The S3 bucket name.
      key:
        allOf:
          - $ref: '#/definitions/s3KeyIdType'
          - description: The S3 key object name.
      objectVersion:
        allOf:
          - $ref: '#/definitions/s3VersionType'
          - description: >-
              If you enable versioning for the bucket, you can specify the
              object version.
    required:
      - bucket
      - key
    type: object
  messageContentBlob:
    type: string
  messageIdType:
    maxLength: 120
    minLength: 1
    pattern: '[a-z0-9\-]*'
    type: string
  s3BucketIdType:
    maxLength: 63
    minLength: 3
    pattern: '^[a-z0-9][a-z0-9\-]*'
    type: string
  s3KeyIdType:
    maxLength: 1024
    minLength: 1
    pattern: '[a-zA-Z0-9\-/]*'
    type: string
  s3VersionType:
    maxLength: 1024
    minLength: 1
    pattern: .+
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/workmailmessageflow/'
host: workmailmessageflow.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    The WorkMail Message Flow API provides access to email messages as they are
    being sent and received by a WorkMail organization.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon WorkMail Message Flow
  version: '2019-05-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmailmessageflow-2019-05-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: workmailmessageflow
paths:
  '/messages/{messageId}':
    get:
      description: >-
        Retrieves the raw content of an in-transit email message, in MIME
        format.
      operationId: GetRawMessageContent
      parameters:
        - description: The identifier of the email message to retrieve.
          in: path
          maxLength: 120
          minLength: 1
          name: messageId
          pattern: '[a-z0-9\-]*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRawMessageContentResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Updates the raw content of an in-transit email message, in MIME
        format.</p> <p>This example describes how to update in-transit email
        message. For more information and examples for using this API, see <a
        href="https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html">
        Updating message content with AWS Lambda</a>.</p> <note> <p>Updates to
        an in-transit message only appear when you call
        <code>PutRawMessageContent</code> from an AWS Lambda function configured
        with a synchronous <a
        href="https://docs.aws.amazon.com/workmail/latest/adminguide/lambda.html#synchronous-rules">
        Run Lambda</a> rule. If you call <code>PutRawMessageContent</code> on a
        delivered or sent message, the message remains unchanged, even though <a
        href="https://docs.aws.amazon.com/workmail/latest/APIReference/API_messageflow_GetRawMessageContent.html">GetRawMessageContent</a>
        returns an updated message. </p> </note>
      operationId: PutRawMessageContent
      parameters:
        - description: The identifier of the email message being updated.
          in: path
          maxLength: 120
          minLength: 1
          name: messageId
          pattern: '[a-z0-9\-]*'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              content:
                description: >-
                  <p>Provides the MIME content of the updated email message as
                  an S3 object. All MIME content must meet the following
                  criteria:</p> <ul> <li> <p>Each part of a multipart MIME
                  message must be formatted properly.</p> </li> <li>
                  <p>Attachments must be of a content type that Amazon SES
                  supports. For more information, see <a
                  href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types-appendix.html">Unsupported
                  Attachment Types</a>.</p> </li> <li> <p>If any of the MIME
                  parts in a message contain content that is outside of the
                  7-bit ASCII character range, we recommend encoding that
                  content.</p> </li> <li> <p>Per <a
                  href="https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6">RFC
                  5321</a>, the maximum length of each line of text, including
                  the &lt;CRLF&gt;, must not exceed 1,000 characters.</p> </li>
                  <li> <p>The message must contain all the required header
                  fields. Check the returned error message for more
                  information.</p> </li> <li> <p>The value of immutable headers
                  must remain unchanged. Check the returned error message for
                  more information.</p> </li> <li> <p>Certain unique headers can
                  only appear once. Check the returned error message for more
                  information.</p> </li> </ul>
                properties:
                  s3Reference:
                    allOf:
                      - $ref: '#/definitions/S3Reference'
                      - description: The S3 reference of an email message.
                type: object
            required:
              - content
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRawMessageContentResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidContentLocation
          schema:
            $ref: '#/definitions/InvalidContentLocation'
        '482':
          description: MessageRejected
          schema:
            $ref: '#/definitions/MessageRejected'
        '483':
          description: MessageFrozen
          schema:
            $ref: '#/definitions/MessageFrozen'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

