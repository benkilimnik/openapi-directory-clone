basePath: /
definitions:
  ARN:
    type: string
  AccountAggregationSource:
    description: A collection of accounts and regions.
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountAggregationSourceAccountList'
          - description: 'The 12-digit account ID of the account being aggregated. '
      AllAwsRegions:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: 'If true, aggregate existing Config regions and future regions.'
      AwsRegions:
        allOf:
          - $ref: '#/definitions/AggregatorRegionList'
          - description: The source regions being aggregated.
    required:
      - AccountIds
    type: object
  AccountAggregationSourceAccountList:
    items:
      $ref: '#/definitions/AccountId'
    minItems: 1
    type: array
  AccountAggregationSourceList:
    items:
      $ref: '#/definitions/AccountAggregationSource'
    maxItems: 1
    minItems: 0
    type: array
  AccountId:
    pattern: '\d{12}'
    type: string
  AggregateComplianceByConfigRule:
    description: >-
      <p>Indicates whether an Config rule is compliant based on account ID,
      region, compliance, and rule name.</p> <p>A rule is compliant if all of
      the resources that the rule evaluated comply with it. It is noncompliant
      if any of these resources do not comply.</p>
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region from where the data is aggregated.
      Compliance:
        allOf:
          - $ref: '#/definitions/Compliance'
          - description: >-
              Indicates whether an Amazon Web Services resource or Config rule
              is compliant and provides the number of contributors that affect
              the compliance.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
    type: object
  AggregateComplianceByConfigRuleList:
    items:
      $ref: '#/definitions/AggregateComplianceByConfigRule'
    type: array
  AggregateComplianceByConformancePack:
    description: >-
      <p>Provides aggregate compliance of the conformance pack. Indicates
      whether a conformance pack is compliant based on the name of the
      conformance pack, account ID, and region.</p> <p>A conformance pack is
      compliant if all of the rules in a conformance packs are compliant. It is
      noncompliant if any of the rules are not compliant. The compliance status
      of a conformance pack is INSUFFICIENT_DATA only if all rules within a
      conformance pack cannot be evaluated due to insufficient data. If some of
      the rules in a conformance pack are compliant but the compliance status of
      other rules in that same conformance pack is INSUFFICIENT_DATA, the
      conformance pack shows compliant.</p>
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit Amazon Web Services account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: >-
              The source Amazon Web Services Region from where the data is
              aggregated.
      Compliance:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackCompliance'
          - description: The compliance status of the conformance pack.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: The name of the conformance pack.
    type: object
  AggregateComplianceByConformancePackList:
    items:
      $ref: '#/definitions/AggregateComplianceByConformancePack'
    type: array
  AggregateComplianceCount:
    description: >-
      Returns the number of compliant and noncompliant rules for one or more
      accounts and regions in an aggregator.
    properties:
      ComplianceSummary:
        allOf:
          - $ref: '#/definitions/ComplianceSummary'
          - description: The number of compliant and noncompliant Config rules.
      GroupName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The 12-digit account ID or region based on the GroupByKey value.
    type: object
  AggregateComplianceCountList:
    items:
      $ref: '#/definitions/AggregateComplianceCount'
    type: array
  AggregateConformancePackCompliance:
    description: >-
      <p>Provides the number of compliant and noncompliant rules within a
      conformance pack. Also provides the compliance status of the conformance
      pack and the total rule count which includes compliant rules, noncompliant
      rules, and rules that cannot be evaluated due to insufficient data.</p>
      <p>A conformance pack is compliant if all of the rules in a conformance
      packs are compliant. It is noncompliant if any of the rules are not
      compliant. The compliance status of a conformance pack is
      INSUFFICIENT_DATA only if all rules within a conformance pack cannot be
      evaluated due to insufficient data. If some of the rules in a conformance
      pack are compliant but the compliance status of other rules in that same
      conformance pack is INSUFFICIENT_DATA, the conformance pack shows
      compliant.</p>
    properties:
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: The compliance status of the conformance pack.
      CompliantRuleCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of compliant Config Rules.
      NonCompliantRuleCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of noncompliant Config Rules.
      TotalRuleCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Total number of compliant rules, noncompliant rules, and the rules
              that do not have any applicable resources to evaluate upon
              resulting in insufficient data.
    type: object
  AggregateConformancePackComplianceCount:
    description: The number of conformance packs that are compliant and noncompliant.
    properties:
      CompliantConformancePackCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Number of compliant conformance packs.
      NonCompliantConformancePackCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Number of noncompliant conformance packs.
    type: object
  AggregateConformancePackComplianceFilters:
    description: >-
      Filters the conformance packs based on an account ID, region, compliance
      type, and the name of the conformance pack.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit Amazon Web Services account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: >-
              The source Amazon Web Services Region from where the data is
              aggregated.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: The compliance status of the conformance pack.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: The name of the conformance pack.
    type: object
  AggregateConformancePackComplianceSummary:
    description: 'Provides a summary of compliance based on either account ID or region. '
    properties:
      ComplianceSummary:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackComplianceCount'
          - description: >-
              Returns an <code>AggregateConformancePackComplianceCount</code>
              object. 
      GroupName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Groups the result based on Amazon Web Services account ID or
              Amazon Web Services Region.
    type: object
  AggregateConformancePackComplianceSummaryFilters:
    description: 'Filters the results based on account ID and region. '
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit Amazon Web Services account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: >-
              The source Amazon Web Services Region from where the data is
              aggregated.
    type: object
  AggregateConformancePackComplianceSummaryGroupKey:
    enum:
      - ACCOUNT_ID
      - AWS_REGION
    type: string
  AggregateConformancePackComplianceSummaryList:
    items:
      $ref: '#/definitions/AggregateConformancePackComplianceSummary'
    type: array
  AggregateEvaluationResult:
    description: >-
      The details of an Config evaluation for an account ID and region in an
      aggregator. Provides the Amazon Web Services resource that was evaluated,
      the compliance of the resource, related time stamps, and supplementary
      information. 
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of the source account.
      Annotation:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Supplementary information about how the agrregate evaluation
              determined the compliance.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region from where the data is aggregated.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>The resource compliance status.</p> <p>For the
              <code>AggregationEvaluationResult</code> data type, Config
              supports only the <code>COMPLIANT</code> and
              <code>NON_COMPLIANT</code>. Config does not support the
              <code>NOT_APPLICABLE</code> and <code>INSUFFICIENT_DATA</code>
              value.</p>
      ConfigRuleInvokedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time when the Config rule evaluated the Amazon Web Services
              resource.
      EvaluationResultIdentifier:
        allOf:
          - $ref: '#/definitions/EvaluationResultIdentifier'
          - description: Uniquely identifies the evaluation result.
      ResultRecordedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when Config recorded the aggregate evaluation result.
    type: object
  AggregateEvaluationResultList:
    items:
      $ref: '#/definitions/AggregateEvaluationResult'
    type: array
  AggregateResourceIdentifier:
    description: >-
      The details that identify a resource that is collected by Config
      aggregator, including the resource type, ID, (if available) the custom
      resource name, the source account, and source region.
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Amazon Web Services resource.
      ResourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the Amazon Web Services resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The type of the Amazon Web Services resource.
      SourceAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of the source account.
      SourceRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region where data is aggregated.
    required:
      - SourceAccountId
      - SourceRegion
      - ResourceId
      - ResourceType
    type: object
  AggregatedSourceStatus:
    description: The current sync status between the source and the aggregator account.
    properties:
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region authorized to collect aggregated data.
      LastErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The error code that Config returned when the source account
              aggregation last failed.
      LastErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The message indicating that the source account aggregation failed
              due to an error.
      LastUpdateStatus:
        allOf:
          - $ref: '#/definitions/AggregatedSourceStatusType'
          - description: >-
              <p>Filters the last updated status type.</p> <ul> <li> <p>Valid
              value FAILED indicates errors while moving data.</p> </li> <li>
              <p>Valid value SUCCEEDED indicates the data was successfully
              moved.</p> </li> <li> <p>Valid value OUTDATED indicates the data
              is not the most recent.</p> </li> </ul>
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time of the last update.
      SourceId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The source account ID or an organization.
      SourceType:
        allOf:
          - $ref: '#/definitions/AggregatedSourceType'
          - description: The source account or an organization.
    type: object
  AggregatedSourceStatusList:
    items:
      $ref: '#/definitions/AggregatedSourceStatus'
    type: array
  AggregatedSourceStatusType:
    enum:
      - FAILED
      - SUCCEEDED
      - OUTDATED
    type: string
  AggregatedSourceStatusTypeList:
    items:
      $ref: '#/definitions/AggregatedSourceStatusType'
    minItems: 1
    type: array
  AggregatedSourceType:
    enum:
      - ACCOUNT
      - ORGANIZATION
    type: string
  AggregationAuthorization:
    description: >-
      An object that represents the authorizations granted to aggregator
      accounts and regions.
    properties:
      AggregationAuthorizationArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the aggregation object.
      AuthorizedAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the account authorized to aggregate
              data.
      AuthorizedAwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region authorized to collect aggregated data.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time stamp when the aggregation authorization was created.
    type: object
  AggregationAuthorizationList:
    items:
      $ref: '#/definitions/AggregationAuthorization'
    type: array
  AggregatorRegionList:
    items:
      $ref: '#/definitions/String'
    minItems: 1
    type: array
  AllSupported:
    type: boolean
  AmazonResourceName:
    maxLength: 1000
    minLength: 1
    type: string
  Annotation:
    maxLength: 256
    minLength: 0
    type: string
  AutoRemediationAttemptSeconds:
    maximum: 2678000
    minimum: 1
    type: integer
  AutoRemediationAttempts:
    maximum: 25
    minimum: 1
    type: integer
  AvailabilityZone:
    type: string
  AwsRegion:
    maxLength: 64
    minLength: 1
    type: string
  BaseConfigurationItem:
    description: The detailed configuration of a specified resource.
    properties:
      accountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit Amazon Web Services account ID associated with the
              resource.
      arn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: The Amazon Resource Name (ARN) of the resource.
      availabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZone'
          - description: The Availability Zone associated with the resource.
      awsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region where the resource resides.
      configuration:
        allOf:
          - $ref: '#/definitions/Configuration'
          - description: The description of the resource configuration.
      configurationItemCaptureTime:
        allOf:
          - $ref: '#/definitions/ConfigurationItemCaptureTime'
          - description: The time when the configuration recording was initiated.
      configurationItemStatus:
        allOf:
          - $ref: '#/definitions/ConfigurationItemStatus'
          - description: >-
              <p>The configuration item status. The valid values are:</p> <ul>
              <li> <p>OK – The resource configuration has been updated</p> </li>
              <li> <p>ResourceDiscovered – The resource was newly discovered</p>
              </li> <li> <p>ResourceNotRecorded – The resource was discovered
              but its configuration was not recorded since the recorder excludes
              the recording of resources of this type</p> </li> <li>
              <p>ResourceDeleted – The resource was deleted</p> </li> <li>
              <p>ResourceDeletedNotRecorded – The resource was deleted but its
              configuration was not recorded since the recorder excludes the
              recording of resources of this type</p> </li> </ul> <note> <p>The
              CIs do not incur any cost.</p> </note>
      configurationStateId:
        allOf:
          - $ref: '#/definitions/ConfigurationStateId'
          - description: >-
              An identifier that indicates the ordering of the configuration
              items of a resource.
      resourceCreationTime:
        allOf:
          - $ref: '#/definitions/ResourceCreationTime'
          - description: The time stamp when the resource was created.
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the resource (for example., sg-xxxxxx).'
      resourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: 'The custom name of the resource, if available.'
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The type of Amazon Web Services resource.
      supplementaryConfiguration:
        allOf:
          - $ref: '#/definitions/SupplementaryConfiguration'
          - description: >-
              Configuration attributes that Config returns for certain resource
              types to supplement the information returned for the configuration
              parameter.
      version:
        allOf:
          - $ref: '#/definitions/Version'
          - description: The version number of the resource configuration.
    type: object
  BaseConfigurationItems:
    items:
      $ref: '#/definitions/BaseConfigurationItem'
    type: array
  BaseResourceId:
    maxLength: 768
    minLength: 1
    type: string
  BatchGetAggregateResourceConfigRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      ResourceIdentifiers:
        allOf:
          - $ref: '#/definitions/ResourceIdentifiersList'
          - description: 'A list of aggregate ResourceIdentifiers objects. '
    required:
      - ConfigurationAggregatorName
      - ResourceIdentifiers
    title: BatchGetAggregateResourceConfigRequest
    type: object
  BatchGetAggregateResourceConfigResponse:
    properties:
      BaseConfigurationItems:
        allOf:
          - $ref: '#/definitions/BaseConfigurationItems'
          - description: >-
              A list that contains the current configuration of one or more
              resources.
      UnprocessedResourceIdentifiers:
        allOf:
          - $ref: '#/definitions/UnprocessedResourceIdentifierList'
          - description: >-
              A list of resource identifiers that were not processed with
              current scope. The list is empty if all the resources are
              processed.
    type: object
  BatchGetResourceConfigRequest:
    properties:
      resourceKeys:
        allOf:
          - $ref: '#/definitions/ResourceKeys'
          - description: >-
              A list of resource keys to be processed with the current request.
              Each element in the list consists of the resource type and
              resource ID.
    required:
      - resourceKeys
    title: BatchGetResourceConfigRequest
    type: object
  BatchGetResourceConfigResponse:
    properties:
      baseConfigurationItems:
        allOf:
          - $ref: '#/definitions/BaseConfigurationItems'
          - description: >-
              A list that contains the current configuration of one or more
              resources.
      unprocessedResourceKeys:
        allOf:
          - $ref: '#/definitions/ResourceKeys'
          - description: >-
              A list of resource keys that were not processed with the current
              response. The unprocessesResourceKeys value is in the same form as
              ResourceKeys, so the value can be directly provided to a
              subsequent BatchGetResourceConfig operation. If there are no
              unprocessed resource keys, the response contains an empty
              unprocessedResourceKeys list. 
    type: object
  Boolean:
    type: boolean
  ChannelName:
    maxLength: 256
    minLength: 1
    type: string
  ChronologicalOrder:
    enum:
      - Reverse
      - Forward
    type: string
  Compliance:
    description: >-
      Indicates whether an Amazon Web Services resource or Config rule is
      compliant and provides the number of contributors that affect the
      compliance.
    properties:
      ComplianceContributorCount:
        allOf:
          - $ref: '#/definitions/ComplianceContributorCount'
          - description: >-
              The number of Amazon Web Services resources or Config rules that
              cause a result of <code>NON_COMPLIANT</code>, up to a maximum
              number.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>Indicates whether an Amazon Web Services resource or Config
              rule is compliant.</p> <p>A resource is compliant if it complies
              with all of the Config rules that evaluate it. A resource is
              noncompliant if it does not comply with one or more of these
              rules.</p> <p>A rule is compliant if all of the resources that the
              rule evaluates comply with it. A rule is noncompliant if any of
              these resources do not comply.</p> <p>Config returns the
              <code>INSUFFICIENT_DATA</code> value when no evaluation results
              are available for the Amazon Web Services resource or Config
              rule.</p> <p>For the <code>Compliance</code> data type, Config
              supports only <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>,
              and <code>INSUFFICIENT_DATA</code> values. Config does not support
              the <code>NOT_APPLICABLE</code> value for the
              <code>Compliance</code> data type.</p>
    type: object
  ComplianceByConfigRule:
    description: >-
      Indicates whether an Config rule is compliant. A rule is compliant if all
      of the resources that the rule evaluated comply with it. A rule is
      noncompliant if any of these resources do not comply.
    properties:
      Compliance:
        allOf:
          - $ref: '#/definitions/Compliance'
          - description: Indicates whether the Config rule is compliant.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit64'
          - description: The name of the Config rule.
    type: object
  ComplianceByConfigRules:
    items:
      $ref: '#/definitions/ComplianceByConfigRule'
    type: array
  ComplianceByResource:
    description: >-
      Indicates whether an Amazon Web Services resource that is evaluated
      according to one or more Config rules is compliant. A resource is
      compliant if it complies with all of the rules that evaluate it. A
      resource is noncompliant if it does not comply with one or more of these
      rules.
    properties:
      Compliance:
        allOf:
          - $ref: '#/definitions/Compliance'
          - description: >-
              Indicates whether the Amazon Web Services resource complies with
              all of the Config rules that evaluated it.
      ResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: The ID of the Amazon Web Services resource that was evaluated.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of the Amazon Web Services resource that was evaluated.
    type: object
  ComplianceByResources:
    items:
      $ref: '#/definitions/ComplianceByResource'
    type: array
  ComplianceContributorCount:
    description: >-
      The number of Amazon Web Services resources or Config rules responsible
      for the current compliance of the item, up to a maximum number.
    properties:
      CapExceeded:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the maximum count is reached.
      CappedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of Amazon Web Services resources or Config rules
              responsible for the current compliance of the item.
    type: object
  ComplianceResourceTypes:
    items:
      $ref: '#/definitions/StringWithCharLimit256'
    maxItems: 100
    minItems: 0
    type: array
  ComplianceSummariesByResourceType:
    items:
      $ref: '#/definitions/ComplianceSummaryByResourceType'
    type: array
  ComplianceSummary:
    description: >-
      The number of Config rules or Amazon Web Services resources that are
      compliant and noncompliant.
    properties:
      ComplianceSummaryTimestamp:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time that Config created the compliance summary.
      CompliantResourceCount:
        allOf:
          - $ref: '#/definitions/ComplianceContributorCount'
          - description: >-
              The number of Config rules or Amazon Web Services resources that
              are compliant, up to a maximum of 25 for rules and 100 for
              resources.
      NonCompliantResourceCount:
        allOf:
          - $ref: '#/definitions/ComplianceContributorCount'
          - description: >-
              The number of Config rules or Amazon Web Services resources that
              are noncompliant, up to a maximum of 25 for rules and 100 for
              resources.
    type: object
  ComplianceSummaryByResourceType:
    description: >-
      The number of Amazon Web Services resources of a specific type that are
      compliant or noncompliant, up to a maximum of 100 for each.
    properties:
      ComplianceSummary:
        allOf:
          - $ref: '#/definitions/ComplianceSummary'
          - description: >-
              The number of Amazon Web Services resources that are compliant or
              noncompliant, up to a maximum of 100 for each.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of Amazon Web Services resource.
    type: object
  ComplianceType:
    enum:
      - COMPLIANT
      - NON_COMPLIANT
      - NOT_APPLICABLE
      - INSUFFICIENT_DATA
    type: string
  ComplianceTypes:
    items:
      $ref: '#/definitions/ComplianceType'
    maxItems: 3
    minItems: 0
    type: array
  ConfigExportDeliveryInfo:
    description: >-
      Provides status of the delivery of the snapshot or the configuration
      history to the specified Amazon S3 bucket. Also provides the status of
      notifications about the Amazon S3 delivery to the specified Amazon SNS
      topic.
    properties:
      lastAttemptTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time of the last attempted delivery.
      lastErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error code from the last attempted delivery.
      lastErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error message from the last attempted delivery.
      lastStatus:
        allOf:
          - $ref: '#/definitions/DeliveryStatus'
          - description: Status of the last attempted delivery.
      lastSuccessfulTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time of the last successful delivery.
      nextDeliveryTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time that the next delivery occurs.
    type: object
  ConfigRule:
    description: >-
      <p>An Config rule represents an Lambda function that you create for a
      custom rule or a predefined function for an Config managed rule. The
      function evaluates configuration items to assess whether your Amazon Web
      Services resources comply with your desired configurations. This function
      can run when Config detects a configuration change to an Amazon Web
      Services resource and at a periodic frequency that you choose (for
      example, every 24 hours).</p> <note> <p>You can use the Amazon Web
      Services CLI and Amazon Web Services SDKs if you want to create a rule
      that triggers evaluations for your resources when Config delivers the
      configuration snapshot. For more information, see
      <a>ConfigSnapshotDeliveryProperties</a>.</p> </note> <p>For more
      information about developing and using Config rules, see <a
      href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating
      Amazon Web Services resource Configurations with Config</a> in the
      <i>Config Developer Guide</i>.</p>
    properties:
      ConfigRuleArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The Amazon Resource Name (ARN) of the Config rule.
      ConfigRuleId:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit64'
          - description: The ID of the Config rule.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The name that you assign to the Config rule. The name is required
              if you are adding a new rule.
      ConfigRuleState:
        allOf:
          - $ref: '#/definitions/ConfigRuleState'
          - description: >-
              <p>Indicates whether the Config rule is active or is currently
              being deleted by Config. It can also indicate the evaluation
              status for the Config rule.</p> <p>Config sets the state of the
              rule to <code>EVALUATING</code> temporarily after you use the
              <code>StartConfigRulesEvaluation</code> request to evaluate your
              resources against the Config rule.</p> <p>Config sets the state of
              the rule to <code>DELETING_RESULTS</code> temporarily after you
              use the <code>DeleteEvaluationResults</code> request to delete the
              current evaluation results for the Config rule.</p> <p>Config
              temporarily sets the state of a rule to <code>DELETING</code>
              after you use the <code>DeleteConfigRule</code> request to delete
              the rule. After Config deletes the rule, the rule and all of its
              evaluations are erased and are no longer available.</p>
      CreatedBy:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              <p>Service principal name of the service that created the
              rule.</p> <note> <p>The field is populated only if the service
              linked rule is created by a service. The field is empty if you
              create your own rule.</p> </note>
      Description:
        allOf:
          - $ref: '#/definitions/EmptiableStringWithCharLimit256'
          - description: The description that you provide for the Config rule.
      InputParameters:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: >-
              A string, in JSON format, that is passed to the Config rule Lambda
              function.
      MaximumExecutionFrequency:
        allOf:
          - $ref: '#/definitions/MaximumExecutionFrequency'
          - description: >-
              <p>The maximum frequency with which Config runs evaluations for a
              rule. You can specify a value for
              <code>MaximumExecutionFrequency</code> when:</p> <ul> <li> <p>You
              are using an Config managed rule that is triggered at a periodic
              frequency.</p> </li> <li> <p>Your custom rule is triggered when
              Config delivers the configuration snapshot. For more information,
              see <a>ConfigSnapshotDeliveryProperties</a>.</p> </li> </ul>
              <note> <p>By default, rules with a periodic trigger are evaluated
              every 24 hours. To change the frequency, specify a valid value for
              the <code>MaximumExecutionFrequency</code> parameter.</p> </note>
      Scope:
        allOf:
          - $ref: '#/definitions/Scope'
          - description: >-
              <p>Defines which resources can trigger an evaluation for the rule.
              The scope can include one or more resource types, a combination of
              one resource type and one resource ID, or a combination of a tag
              key and value. Specify a scope to constrain the resources that can
              trigger an evaluation for the rule. If you do not specify a scope,
              evaluations are triggered when any resource in the recording group
              changes.</p> <note> <p>The scope can be empty. </p> </note>
      Source:
        allOf:
          - $ref: '#/definitions/Source'
          - description: >-
              Provides the rule owner (Amazon Web Services or customer), the
              rule identifier, and the notifications that cause the function to
              evaluate your Amazon Web Services resources.
    required:
      - Source
    type: object
  ConfigRuleComplianceFilters:
    description: >-
      Filters the compliance results based on account ID, region, compliance
      type, and rule name.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: 'The 12-digit account ID of the source account. '
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: 'The source region where the data is aggregated. '
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>The rule compliance status.</p> <p>For the
              <code>ConfigRuleComplianceFilters</code> data type, Config
              supports only <code>COMPLIANT</code> and
              <code>NON_COMPLIANT</code>. Config does not support the
              <code>NOT_APPLICABLE</code> and the <code>INSUFFICIENT_DATA</code>
              values.</p>
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
    type: object
  ConfigRuleComplianceSummaryFilters:
    description: Filters the results based on the account IDs and regions.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region where the data is aggregated.
    type: object
  ConfigRuleComplianceSummaryGroupKey:
    enum:
      - ACCOUNT_ID
      - AWS_REGION
    type: string
  ConfigRuleEvaluationStatus:
    description: >-
      <p>Status information for your Config managed rules. The status includes
      information such as the last time the rule ran, the last time it failed,
      and the related error for the last failure.</p> <p>This action does not
      return status information about custom Config rules.</p>
    properties:
      ConfigRuleArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the Config rule.
      ConfigRuleId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the Config rule.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
      FirstActivatedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time that you first activated the Config rule.
      FirstEvaluationStarted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Indicates whether Config has evaluated your resources against
              the rule at least once.</p> <ul> <li> <p> <code>true</code> -
              Config has evaluated your Amazon Web Services resources against
              the rule at least once.</p> </li> <li> <p> <code>false</code> -
              Config has not once finished evaluating your Amazon Web Services
              resources against the rule.</p> </li> </ul>
      LastDeactivatedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time that you last turned off the Config rule.
      LastErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error code that Config returned when the rule last failed.
      LastErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error message that Config returned when the rule last failed.
      LastFailedEvaluationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time that Config last failed to evaluate your Amazon Web
              Services resources against the rule.
      LastFailedInvocationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time that Config last failed to invoke the Config rule to
              evaluate your Amazon Web Services resources.
      LastSuccessfulEvaluationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time that Config last successfully evaluated your Amazon Web
              Services resources against the rule.
      LastSuccessfulInvocationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time that Config last successfully invoked the Config rule to
              evaluate your Amazon Web Services resources.
    type: object
  ConfigRuleEvaluationStatusList:
    items:
      $ref: '#/definitions/ConfigRuleEvaluationStatus'
    type: array
  ConfigRuleName:
    maxLength: 128
    minLength: 1
    pattern: .*\S.*
    type: string
  ConfigRuleNames:
    items:
      $ref: '#/definitions/ConfigRuleName'
    maxItems: 25
    minItems: 0
    type: array
  ConfigRuleState:
    enum:
      - ACTIVE
      - DELETING
      - DELETING_RESULTS
      - EVALUATING
    type: string
  ConfigRules:
    items:
      $ref: '#/definitions/ConfigRule'
    type: array
  ConfigSnapshotDeliveryProperties:
    description: >-
      <p>Provides options for how often Config delivers configuration snapshots
      to the Amazon S3 bucket in your delivery channel.</p> <p>The frequency for
      a rule that triggers evaluations for your resources when Config delivers
      the configuration snapshot is set by one of two values, depending on which
      is less frequent:</p> <ul> <li> <p>The value for the
      <code>deliveryFrequency</code> parameter within the delivery channel
      configuration, which sets how often Config delivers configuration
      snapshots. This value also sets how often Config invokes evaluations for
      Config rules.</p> </li> <li> <p>The value for the
      <code>MaximumExecutionFrequency</code> parameter, which sets the maximum
      frequency with which Config invokes evaluations for the rule. For more
      information, see <a>ConfigRule</a>.</p> </li> </ul> <p>If the
      <code>deliveryFrequency</code> value is less frequent than the
      <code>MaximumExecutionFrequency</code> value for a rule, Config invokes
      the rule only as often as the <code>deliveryFrequency</code> value.</p>
      <ol> <li> <p>For example, you want your rule to run evaluations when
      Config delivers the configuration snapshot.</p> </li> <li> <p>You specify
      the <code>MaximumExecutionFrequency</code> value for
      <code>Six_Hours</code>. </p> </li> <li> <p>You then specify the delivery
      channel <code>deliveryFrequency</code> value for
      <code>TwentyFour_Hours</code>.</p> </li> <li> <p>Because the value for
      <code>deliveryFrequency</code> is less frequent than
      <code>MaximumExecutionFrequency</code>, Config invokes evaluations for the
      rule every 24 hours. </p> </li> </ol> <p>You should set the
      <code>MaximumExecutionFrequency</code> value to be at least as frequent as
      the <code>deliveryFrequency</code> value. You can view the
      <code>deliveryFrequency</code> value by using the
      <code>DescribeDeliveryChannnels</code> action.</p> <p>To update the
      <code>deliveryFrequency</code> with which Config delivers your
      configuration snapshots, use the <code>PutDeliveryChannel</code>
      action.</p>
    properties:
      deliveryFrequency:
        allOf:
          - $ref: '#/definitions/MaximumExecutionFrequency'
          - description: The frequency with which Config delivers configuration snapshots.
    type: object
  ConfigStreamDeliveryInfo:
    description: >-
      A list that contains the status of the delivery of the configuration
      stream notification to the Amazon SNS topic.
    properties:
      lastErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error code from the last attempted delivery.
      lastErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error message from the last attempted delivery.
      lastStatus:
        allOf:
          - $ref: '#/definitions/DeliveryStatus'
          - description: >-
              <p>Status of the last attempted delivery.</p> <p> <b>Note</b>
              Providing an SNS topic on a <a
              href="https://docs.aws.amazon.com/config/latest/APIReference/API_DeliveryChannel.html">DeliveryChannel</a>
              for Config is optional. If the SNS delivery is turned off, the
              last status will be <b>Not_Applicable</b>.</p>
      lastStatusChangeTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time from the last status change.
    type: object
  Configuration:
    type: string
  ConfigurationAggregator:
    description: >-
      The details about the configuration aggregator, including information
      about source accounts, regions, and metadata of the aggregator. 
    properties:
      AccountAggregationSources:
        allOf:
          - $ref: '#/definitions/AccountAggregationSourceList'
          - description: Provides a list of source accounts and regions to be aggregated.
      ConfigurationAggregatorArn:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorArn'
          - description: The Amazon Resource Name (ARN) of the aggregator.
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the aggregator.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Amazon Web Services service that created the configuration
              aggregator.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time stamp when the configuration aggregator was created.
      LastUpdatedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time of the last update.
      OrganizationAggregationSource:
        allOf:
          - $ref: '#/definitions/OrganizationAggregationSource'
          - description: Provides an organization and list of regions to be aggregated.
    type: object
  ConfigurationAggregatorArn:
    pattern: >-
      arn:aws[a-z\-]*:config:[a-z\-\d]+:\d+:config-aggregator/config-aggregator-[a-z\d]+
    type: string
  ConfigurationAggregatorList:
    items:
      $ref: '#/definitions/ConfigurationAggregator'
    type: array
  ConfigurationAggregatorName:
    maxLength: 256
    minLength: 1
    pattern: '[\w\-]+'
    type: string
  ConfigurationAggregatorNameList:
    items:
      $ref: '#/definitions/ConfigurationAggregatorName'
    maxItems: 10
    minItems: 0
    type: array
  ConfigurationItem:
    description: A list that contains detailed configurations of a specified resource.
    properties:
      accountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit Amazon Web Services account ID associated with the
              resource.
      arn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: Amazon Resource Name (ARN) associated with the resource.
      availabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZone'
          - description: The Availability Zone associated with the resource.
      awsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region where the resource resides.
      configuration:
        allOf:
          - $ref: '#/definitions/Configuration'
          - description: The description of the resource configuration.
      configurationItemCaptureTime:
        allOf:
          - $ref: '#/definitions/ConfigurationItemCaptureTime'
          - description: The time when the configuration recording was initiated.
      configurationItemMD5Hash:
        allOf:
          - $ref: '#/definitions/ConfigurationItemMD5Hash'
          - description: >-
              <p>Unique MD5 hash that represents the configuration item's
              state.</p> <p>You can use MD5 hash to compare the states of two or
              more configuration items that are associated with the same
              resource.</p>
      configurationItemStatus:
        allOf:
          - $ref: '#/definitions/ConfigurationItemStatus'
          - description: >-
              <p>The configuration item status. The valid values are:</p> <ul>
              <li> <p>OK – The resource configuration has been updated</p> </li>
              <li> <p>ResourceDiscovered – The resource was newly discovered</p>
              </li> <li> <p>ResourceNotRecorded – The resource was discovered
              but its configuration was not recorded since the recorder excludes
              the recording of resources of this type</p> </li> <li>
              <p>ResourceDeleted – The resource was deleted</p> </li> <li>
              <p>ResourceDeletedNotRecorded – The resource was deleted but its
              configuration was not recorded since the recorder excludes the
              recording of resources of this type</p> </li> </ul> <note> <p>The
              CIs do not incur any cost.</p> </note>
      configurationStateId:
        allOf:
          - $ref: '#/definitions/ConfigurationStateId'
          - description: >-
              An identifier that indicates the ordering of the configuration
              items of a resource.
      relatedEvents:
        allOf:
          - $ref: '#/definitions/RelatedEventList'
          - description: >-
              <p>A list of CloudTrail event IDs.</p> <p>A populated field
              indicates that the current configuration was initiated by the
              events recorded in the CloudTrail log. For more information about
              CloudTrail, see <a
              href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">What
              Is CloudTrail</a>.</p> <p>An empty field indicates that the
              current configuration was not initiated by any event. As of
              Version 1.3, the relatedEvents field is empty. You can access the
              <a
              href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_LookupEvents.html">LookupEvents
              API</a> in the <i>CloudTrail API Reference</i> to retrieve the
              events for the resource.</p>
      relationships:
        allOf:
          - $ref: '#/definitions/RelationshipList'
          - description: A list of related Amazon Web Services resources.
      resourceCreationTime:
        allOf:
          - $ref: '#/definitions/ResourceCreationTime'
          - description: The time stamp when the resource was created.
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the resource (for example, <code>sg-xxxxxx</code>).'
      resourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: 'The custom name of the resource, if available.'
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The type of Amazon Web Services resource.
      supplementaryConfiguration:
        allOf:
          - $ref: '#/definitions/SupplementaryConfiguration'
          - description: >-
              Configuration attributes that Config returns for certain resource
              types to supplement the information returned for the
              <code>configuration</code> parameter.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: A mapping of key value tags associated with the resource.
      version:
        allOf:
          - $ref: '#/definitions/Version'
          - description: The version number of the resource configuration.
    type: object
  ConfigurationItemCaptureTime:
    format: date-time
    type: string
  ConfigurationItemList:
    items:
      $ref: '#/definitions/ConfigurationItem'
    type: array
  ConfigurationItemMD5Hash:
    type: string
  ConfigurationItemStatus:
    enum:
      - OK
      - ResourceDiscovered
      - ResourceNotRecorded
      - ResourceDeleted
      - ResourceDeletedNotRecorded
    type: string
  ConfigurationRecorder:
    description: >-
      An object that represents the recording of configuration changes of an
      Amazon Web Services resource.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/RecorderName'
          - description: >-
              The name of the recorder. By default, Config automatically assigns
              the name "default" when creating the configuration recorder. You
              cannot change the assigned name.
      recordingGroup:
        allOf:
          - $ref: '#/definitions/RecordingGroup'
          - description: >-
              Specifies the types of Amazon Web Services resources for which
              Config records configuration changes.
      roleARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Amazon Resource Name (ARN) of the IAM role used to describe the
              Amazon Web Services resources associated with the account.
    type: object
  ConfigurationRecorderList:
    items:
      $ref: '#/definitions/ConfigurationRecorder'
    type: array
  ConfigurationRecorderNameList:
    items:
      $ref: '#/definitions/RecorderName'
    type: array
  ConfigurationRecorderStatus:
    description: The current status of the configuration recorder.
    properties:
      lastErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error code indicating that the recording failed.
      lastErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The message indicating that the recording failed due to an error.
      lastStartTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time the recorder was last started.
      lastStatus:
        allOf:
          - $ref: '#/definitions/RecorderStatus'
          - description: The last (previous) status of the recorder.
      lastStatusChangeTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when the status was last changed.
      lastStopTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time the recorder was last stopped.
      name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the configuration recorder.
      recording:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Specifies whether or not the recorder is currently recording.
    type: object
  ConfigurationRecorderStatusList:
    items:
      $ref: '#/definitions/ConfigurationRecorderStatus'
    type: array
  ConfigurationStateId:
    type: string
  ConformancePackArn:
    maxLength: 2048
    minLength: 1
    type: string
  ConformancePackComplianceFilters:
    description: Filters the conformance pack by compliance types and Config rule names.
    properties:
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>.
              <code>INSUFFICIENT_DATA</code> is not supported.</p>
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConformancePackConfigRuleNames'
          - description: Filters the results by Config rule names.
    type: object
  ConformancePackComplianceResourceIds:
    items:
      $ref: '#/definitions/StringWithCharLimit256'
    maxItems: 5
    minItems: 0
    type: array
  ConformancePackComplianceSummary:
    description: Summary includes the name and status of the conformance pack.
    properties:
      ConformancePackComplianceStatus:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: >-
              The status of the conformance pack. The allowed values are
              <code>COMPLIANT</code>, <code>NON_COMPLIANT</code> and
              <code>INSUFFICIENT_DATA</code>.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: The name of the conformance pack name.
    required:
      - ConformancePackName
      - ConformancePackComplianceStatus
    type: object
  ConformancePackComplianceSummaryList:
    items:
      $ref: '#/definitions/ConformancePackComplianceSummary'
    maxItems: 5
    minItems: 1
    type: array
  ConformancePackComplianceType:
    enum:
      - COMPLIANT
      - NON_COMPLIANT
      - INSUFFICIENT_DATA
    type: string
  ConformancePackConfigRuleNames:
    items:
      $ref: '#/definitions/StringWithCharLimit64'
    maxItems: 10
    minItems: 0
    type: array
  ConformancePackDetail:
    description: >-
      Returns details of a conformance pack. A conformance pack is a collection
      of Config rules and remediation actions that can be easily deployed in an
      account and a region.
    properties:
      ConformancePackArn:
        allOf:
          - $ref: '#/definitions/ConformancePackArn'
          - description: Amazon Resource Name (ARN) of the conformance pack.
      ConformancePackId:
        allOf:
          - $ref: '#/definitions/ConformancePackId'
          - description: ID of the conformance pack.
      ConformancePackInputParameters:
        allOf:
          - $ref: '#/definitions/ConformancePackInputParameters'
          - description: A list of <code>ConformancePackInputParameter</code> objects.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: Amazon Web Services service that created the conformance pack.
      DeliveryS3Bucket:
        allOf:
          - $ref: '#/definitions/DeliveryS3Bucket'
          - description: >-
              <p>The name of the Amazon S3 bucket where Config stores
              conformance pack templates. </p> <note> <p>This field is
              optional.</p> </note>
      DeliveryS3KeyPrefix:
        allOf:
          - $ref: '#/definitions/DeliveryS3KeyPrefix'
          - description: >-
              <p>The prefix for the Amazon S3 bucket.</p> <note> <p>This field
              is optional.</p> </note>
      LastUpdateRequestedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: 'Last time when conformation pack update was requested. '
    required:
      - ConformancePackName
      - ConformancePackArn
      - ConformancePackId
    type: object
  ConformancePackDetailList:
    items:
      $ref: '#/definitions/ConformancePackDetail'
    maxItems: 25
    minItems: 0
    type: array
  ConformancePackEvaluationFilters:
    description: >-
      Filters a conformance pack by Config rule names, compliance types, Amazon
      Web Services resource types, and resource IDs.
    properties:
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>.
              <code>INSUFFICIENT_DATA</code> is not supported.</p>
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConformancePackConfigRuleNames'
          - description: Filters the results by Config rule names.
      ResourceIds:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceResourceIds'
          - description: >-
              <p>Filters the results by resource IDs.</p> <note> <p>This is
              valid only when you provide resource type. If there is no resource
              type, you will see an error.</p> </note>
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Filters the results by the resource type (for example,
              <code>"AWS::EC2::Instance"</code>). 
    type: object
  ConformancePackEvaluationResult:
    description: >-
      The details of a conformance pack evaluation. Provides Config rule and
      Amazon Web Services resource type that was evaluated, the compliance of
      the conformance pack, related time stamps, and supplementary information. 
    properties:
      Annotation:
        allOf:
          - $ref: '#/definitions/Annotation'
          - description: >-
              Supplementary information about how the evaluation determined the
              compliance. 
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: >-
              The compliance type. The allowed values are <code>COMPLIANT</code>
              and <code>NON_COMPLIANT</code>. <code>INSUFFICIENT_DATA</code> is
              not supported.
      ConfigRuleInvokedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when Config rule evaluated Amazon Web Services resource.
      EvaluationResultIdentifier:
        $ref: '#/definitions/EvaluationResultIdentifier'
      ResultRecordedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: 'The time when Config recorded the evaluation result. '
    required:
      - ComplianceType
      - EvaluationResultIdentifier
      - ConfigRuleInvokedTime
      - ResultRecordedTime
    type: object
  ConformancePackId:
    maxLength: 1024
    minLength: 1
    type: string
  ConformancePackInputParameter:
    description: >-
      Input parameters in the form of key-value pairs for the conformance pack,
      both of which you define. Keys can have a maximum character length of 255
      characters, and values can have a maximum length of 4096 characters.
    properties:
      ParameterName:
        allOf:
          - $ref: '#/definitions/ParameterName'
          - description: One part of a key-value pair.
      ParameterValue:
        allOf:
          - $ref: '#/definitions/ParameterValue'
          - description: 'Another part of the key-value pair. '
    required:
      - ParameterName
      - ParameterValue
    type: object
  ConformancePackInputParameters:
    items:
      $ref: '#/definitions/ConformancePackInputParameter'
    maxItems: 60
    minItems: 0
    type: array
  ConformancePackName:
    maxLength: 256
    minLength: 1
    pattern: '[a-zA-Z][-a-zA-Z0-9]*'
    type: string
  ConformancePackNamesList:
    items:
      $ref: '#/definitions/ConformancePackName'
    maxItems: 25
    minItems: 0
    type: array
  ConformancePackNamesToSummarizeList:
    items:
      $ref: '#/definitions/ConformancePackName'
    maxItems: 5
    minItems: 1
    type: array
  ConformancePackRuleCompliance:
    description: >-
      Compliance information of one or more Config rules within a conformance
      pack. You can filter using Config rule names and compliance types.
    properties:
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceType'
          - description: >-
              <p>Compliance of the Config rule.</p> <p>The allowed values are
              <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>INSUFFICIENT_DATA</code>.</p>
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: Name of the config rule.
      Controls:
        allOf:
          - $ref: '#/definitions/ControlsList'
          - description: >-
              Controls for the conformance pack. A control is a process to
              prevent or detect problems while meeting objectives. A control can
              align with a specific compliance regime or map to internal
              controls defined by an organization.
    type: object
  ConformancePackRuleComplianceList:
    items:
      $ref: '#/definitions/ConformancePackRuleCompliance'
    maxItems: 1000
    minItems: 0
    type: array
  ConformancePackRuleEvaluationResultsList:
    items:
      $ref: '#/definitions/ConformancePackEvaluationResult'
    maxItems: 100
    minItems: 0
    type: array
  ConformancePackState:
    enum:
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
    type: string
  ConformancePackStatusDetail:
    description: Status details of a conformance pack.
    properties:
      ConformancePackArn:
        allOf:
          - $ref: '#/definitions/ConformancePackArn'
          - description: Amazon Resource Name (ARN) of comformance pack.
      ConformancePackId:
        allOf:
          - $ref: '#/definitions/ConformancePackId'
          - description: ID of the conformance pack.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      ConformancePackState:
        allOf:
          - $ref: '#/definitions/ConformancePackState'
          - description: >-
              <p>Indicates deployment status of conformance pack.</p> <p>Config
              sets the state of the conformance pack to:</p> <ul> <li>
              <p>CREATE_IN_PROGRESS when a conformance pack creation is in
              progress for an account.</p> </li> <li> <p>CREATE_COMPLETE when a
              conformance pack has been successfully created in your
              account.</p> </li> <li> <p>CREATE_FAILED when a conformance pack
              creation failed in your account.</p> </li> <li>
              <p>DELETE_IN_PROGRESS when a conformance pack deletion is in
              progress. </p> </li> <li> <p>DELETE_FAILED when a conformance pack
              deletion failed in your account.</p> </li> </ul>
      ConformancePackStatusReason:
        allOf:
          - $ref: '#/definitions/ConformancePackStatusReason'
          - description: The reason of conformance pack creation failure.
      LastUpdateCompletedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              Last time when conformation pack creation and update was
              successful.
      LastUpdateRequestedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              Last time when conformation pack creation and update was
              requested.
      StackArn:
        allOf:
          - $ref: '#/definitions/StackArn'
          - description: 'Amazon Resource Name (ARN) of CloudFormation stack. '
    required:
      - ConformancePackName
      - ConformancePackId
      - ConformancePackArn
      - ConformancePackState
      - StackArn
      - LastUpdateRequestedTime
    type: object
  ConformancePackStatusDetailsList:
    items:
      $ref: '#/definitions/ConformancePackStatusDetail'
    maxItems: 25
    minItems: 0
    type: array
  ConformancePackStatusReason:
    maxLength: 2000
    minLength: 0
    type: string
  ConformancePackTemplateValidationException: {}
  ControlsList:
    items:
      $ref: '#/definitions/StringWithCharLimit128'
    maxItems: 20
    minItems: 0
    type: array
  CosmosPageLimit:
    maximum: 100
    minimum: 0
    type: integer
  Date:
    format: date-time
    type: string
  DeleteAggregationAuthorizationRequest:
    properties:
      AuthorizedAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the account authorized to aggregate
              data.
      AuthorizedAwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region authorized to collect aggregated data.
    required:
      - AuthorizedAccountId
      - AuthorizedAwsRegion
    title: DeleteAggregationAuthorizationRequest
    type: object
  DeleteConfigRuleRequest:
    description: <p/>
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule that you want to delete.
    required:
      - ConfigRuleName
    title: DeleteConfigRuleRequest
    type: object
  DeleteConfigurationAggregatorRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
    required:
      - ConfigurationAggregatorName
    title: DeleteConfigurationAggregatorRequest
    type: object
  DeleteConfigurationRecorderRequest:
    description: >-
      The request object for the <code>DeleteConfigurationRecorder</code>
      action.
    properties:
      ConfigurationRecorderName:
        allOf:
          - $ref: '#/definitions/RecorderName'
          - description: >-
              The name of the configuration recorder to be deleted. You can
              retrieve the name of your configuration recorder by using the
              <code>DescribeConfigurationRecorders</code> action.
    required:
      - ConfigurationRecorderName
    title: DeleteConfigurationRecorderRequest
    type: object
  DeleteConformancePackRequest:
    properties:
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack you want to delete.
    required:
      - ConformancePackName
    title: DeleteConformancePackRequest
    type: object
  DeleteDeliveryChannelRequest:
    description: >-
      The input for the <a>DeleteDeliveryChannel</a> action. The action accepts
      the following data, in JSON format. 
    properties:
      DeliveryChannelName:
        allOf:
          - $ref: '#/definitions/ChannelName'
          - description: The name of the delivery channel to delete.
    required:
      - DeliveryChannelName
    title: DeleteDeliveryChannelRequest
    type: object
  DeleteEvaluationResultsRequest:
    description: <p/>
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit64'
          - description: >-
              The name of the Config rule for which you want to delete the
              evaluation results.
    required:
      - ConfigRuleName
    title: DeleteEvaluationResultsRequest
    type: object
  DeleteEvaluationResultsResponse:
    description: >-
      The output when you delete the evaluation results for the specified Config
      rule.
    properties: {}
    type: object
  DeleteOrganizationConfigRuleRequest:
    properties:
      OrganizationConfigRuleName:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleName'
          - description: The name of organization config rule that you want to delete.
    required:
      - OrganizationConfigRuleName
    title: DeleteOrganizationConfigRuleRequest
    type: object
  DeleteOrganizationConformancePackRequest:
    properties:
      OrganizationConformancePackName:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackName'
          - description: The name of organization conformance pack that you want to delete.
    required:
      - OrganizationConformancePackName
    title: DeleteOrganizationConformancePackRequest
    type: object
  DeletePendingAggregationRequestRequest:
    properties:
      RequesterAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the account requesting to aggregate
              data.
      RequesterAwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region requesting to aggregate data.
    required:
      - RequesterAccountId
      - RequesterAwsRegion
    title: DeletePendingAggregationRequestRequest
    type: object
  DeleteRemediationConfigurationRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The name of the Config rule for which you want to delete
              remediation configuration.
      ResourceType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The type of a resource.
    required:
      - ConfigRuleName
    title: DeleteRemediationConfigurationRequest
    type: object
  DeleteRemediationConfigurationResponse:
    properties: {}
    type: object
  DeleteRemediationExceptionsRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The name of the Config rule for which you want to delete
              remediation exception configuration.
      ResourceKeys:
        allOf:
          - $ref: '#/definitions/RemediationExceptionResourceKeys'
          - description: >-
              An exception list of resource exception keys to be processed with
              the current request. Config adds exception for each resource key.
              For example, Config adds 3 exceptions for 3 resource keys. 
    required:
      - ConfigRuleName
      - ResourceKeys
    title: DeleteRemediationExceptionsRequest
    type: object
  DeleteRemediationExceptionsResponse:
    properties:
      FailedBatches:
        allOf:
          - $ref: '#/definitions/FailedDeleteRemediationExceptionsBatches'
          - description: >-
              Returns a list of failed delete remediation exceptions batch
              objects. Each object in the batch consists of a list of failed
              items and failure messages.
    type: object
  DeleteResourceConfigRequest:
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Unique identifier of the resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceTypeString'
          - description: The type of the resource.
    required:
      - ResourceType
      - ResourceId
    title: DeleteResourceConfigRequest
    type: object
  DeleteRetentionConfigurationRequest:
    properties:
      RetentionConfigurationName:
        allOf:
          - $ref: '#/definitions/RetentionConfigurationName'
          - description: The name of the retention configuration to delete.
    required:
      - RetentionConfigurationName
    title: DeleteRetentionConfigurationRequest
    type: object
  DeleteStoredQueryRequest:
    properties:
      QueryName:
        allOf:
          - $ref: '#/definitions/QueryName'
          - description: The name of the query that you want to delete.
    required:
      - QueryName
    title: DeleteStoredQueryRequest
    type: object
  DeleteStoredQueryResponse:
    properties: {}
    type: object
  DeliverConfigSnapshotRequest:
    description: The input for the <a>DeliverConfigSnapshot</a> action.
    properties:
      deliveryChannelName:
        allOf:
          - $ref: '#/definitions/ChannelName'
          - description: >-
              The name of the delivery channel through which the snapshot is
              delivered.
    required:
      - deliveryChannelName
    title: DeliverConfigSnapshotRequest
    type: object
  DeliverConfigSnapshotResponse:
    description: 'The output for the <a>DeliverConfigSnapshot</a> action, in JSON format.'
    properties:
      configSnapshotId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the snapshot that is being created.
    type: object
  DeliveryChannel:
    description: >-
      The channel through which Config delivers notifications and updated
      configuration states.
    properties:
      configSnapshotDeliveryProperties:
        allOf:
          - $ref: '#/definitions/ConfigSnapshotDeliveryProperties'
          - description: >-
              The options for how often Config delivers configuration snapshots
              to the Amazon S3 bucket.
      name:
        allOf:
          - $ref: '#/definitions/ChannelName'
          - description: >-
              The name of the delivery channel. By default, Config assigns the
              name "default" when creating the delivery channel. To change the
              delivery channel name, you must use the DeleteDeliveryChannel
              action to delete your current delivery channel, and then you must
              use the PutDeliveryChannel command to create a delivery channel
              that has the desired name.
      s3BucketName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The name of the Amazon S3 bucket to which Config delivers
              configuration snapshots and configuration history files.</p> <p>If
              you specify a bucket that belongs to another Amazon Web Services
              account, that bucket must have policies that grant access
              permissions to Config. For more information, see <a
              href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html">Permissions
              for the Amazon S3 Bucket</a> in the Config Developer Guide.</p>
      s3KeyPrefix:
        allOf:
          - $ref: '#/definitions/String'
          - description: The prefix for the specified Amazon S3 bucket.
      s3KmsKeyArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the Key Management Service (KMS
              ) KMS key (KMS key) used to encrypt objects delivered by Config.
              Must belong to the same Region as the destination S3 bucket.
      snsTopicARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which
              Config sends notifications about configuration changes.</p> <p>If
              you choose a topic from another account, the topic must have
              policies that grant access permissions to Config. For more
              information, see <a
              href="https://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html">Permissions
              for the Amazon SNS Topic</a> in the Config Developer Guide.</p>
    type: object
  DeliveryChannelList:
    items:
      $ref: '#/definitions/DeliveryChannel'
    type: array
  DeliveryChannelNameList:
    items:
      $ref: '#/definitions/ChannelName'
    type: array
  DeliveryChannelStatus:
    description: >-
      <p>The status of a specified delivery channel.</p> <p>Valid values:
      <code>Success</code> | <code>Failure</code> </p>
    properties:
      configHistoryDeliveryInfo:
        allOf:
          - $ref: '#/definitions/ConfigExportDeliveryInfo'
          - description: >-
              A list that contains the status of the delivery of the
              configuration history to the specified Amazon S3 bucket.
      configSnapshotDeliveryInfo:
        allOf:
          - $ref: '#/definitions/ConfigExportDeliveryInfo'
          - description: >-
              A list containing the status of the delivery of the snapshot to
              the specified Amazon S3 bucket.
      configStreamDeliveryInfo:
        allOf:
          - $ref: '#/definitions/ConfigStreamDeliveryInfo'
          - description: >-
              A list containing the status of the delivery of the configuration
              stream notification to the specified Amazon SNS topic.
      name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the delivery channel.
    type: object
  DeliveryChannelStatusList:
    items:
      $ref: '#/definitions/DeliveryChannelStatus'
    type: array
  DeliveryS3Bucket:
    maxLength: 63
    minLength: 0
    type: string
  DeliveryS3KeyPrefix:
    maxLength: 1024
    minLength: 0
    type: string
  DeliveryStatus:
    enum:
      - Success
      - Failure
      - Not_Applicable
    type: string
  DescribeAggregateComplianceByConfigRulesRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Filters:
        allOf:
          - $ref: '#/definitions/ConfigRuleComplianceFilters'
          - description: 'Filters the results by ConfigRuleComplianceFilters object. '
      Limit:
        allOf:
          - $ref: '#/definitions/GroupByAPILimit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is maximum. If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigurationAggregatorName
    title: DescribeAggregateComplianceByConfigRulesRequest
    type: object
  DescribeAggregateComplianceByConfigRulesResponse:
    properties:
      AggregateComplianceByConfigRules:
        allOf:
          - $ref: '#/definitions/AggregateComplianceByConfigRuleList'
          - description: Returns a list of AggregateComplianceByConfigRule object.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  DescribeAggregateComplianceByConformancePacksRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Filters:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackComplianceFilters'
          - description: >-
              Filters the result by
              <code>AggregateConformancePackComplianceFilters</code> object.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of conformance packs compliance details
              returned on each page. The default is maximum. If you specify 0,
              Config uses the default. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigurationAggregatorName
    title: DescribeAggregateComplianceByConformancePacksRequest
    type: object
  DescribeAggregateComplianceByConformancePacksResponse:
    properties:
      AggregateComplianceByConformancePacks:
        allOf:
          - $ref: '#/definitions/AggregateComplianceByConformancePackList'
          - description: >-
              Returns the <code>AggregateComplianceByConformancePack</code>
              object.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  DescribeAggregationAuthorizationsRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of AggregationAuthorizations returned on each
              page. The default is maximum. If you specify 0, Config uses the
              default.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribeAggregationAuthorizationsRequest
    type: object
  DescribeAggregationAuthorizationsResponse:
    properties:
      AggregationAuthorizations:
        allOf:
          - $ref: '#/definitions/AggregationAuthorizationList'
          - description: >-
              Returns a list of authorizations granted to various aggregator
              accounts and regions.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  DescribeComplianceByConfigRuleRequest:
    description: <p/>
    properties:
      ComplianceTypes:
        allOf:
          - $ref: '#/definitions/ComplianceTypes'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>.</p>
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConfigRuleNames'
          - description: >-
              Specify one or more Config rule names to filter the results by
              rule.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribeComplianceByConfigRuleRequest
    type: object
  DescribeComplianceByConfigRuleResponse:
    description: <p/>
    properties:
      ComplianceByConfigRules:
        allOf:
          - $ref: '#/definitions/ComplianceByConfigRules'
          - description: Indicates whether each of the specified Config rules is compliant.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  DescribeComplianceByResourceRequest:
    description: <p/>
    properties:
      ComplianceTypes:
        allOf:
          - $ref: '#/definitions/ComplianceTypes'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>INSUFFICIENT_DATA</code>.</p>
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is 10. You cannot specify a number greater than 100.
              If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      ResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: >-
              The ID of the Amazon Web Services resource for which you want
              compliance information. You can specify only one resource ID. If
              you specify a resource ID, you must also specify a type for
              <code>ResourceType</code>.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The types of Amazon Web Services resources for which you want
              compliance information (for example,
              <code>AWS::EC2::Instance</code>). For this action, you can specify
              that the resource type is an Amazon Web Services account by
              specifying <code>AWS::::Account</code>.
    title: DescribeComplianceByResourceRequest
    type: object
  DescribeComplianceByResourceResponse:
    description: <p/>
    properties:
      ComplianceByResources:
        allOf:
          - $ref: '#/definitions/ComplianceByResources'
          - description: >-
              Indicates whether the specified Amazon Web Services resource
              complies with all of the Config rules that evaluate it.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  DescribeConfigRuleEvaluationStatusRequest:
    description: <p/>
    properties:
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConfigRuleNames'
          - description: >-
              The name of the Config managed rules for which you want status
              information. If you do not specify any names, Config returns
              status information for all Config managed rules that you use.
      Limit:
        allOf:
          - $ref: '#/definitions/RuleLimit'
          - description: >-
              <p>The number of rule evaluation results that you want
              returned.</p> <p>This parameter is required if the rule limit for
              your account is more than the default of 150 rules.</p> <p>For
              information about requesting a rule limit increase, see <a
              href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config">Config
              Limits</a> in the <i>Amazon Web Services General Reference
              Guide</i>.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribeConfigRuleEvaluationStatusRequest
    type: object
  DescribeConfigRuleEvaluationStatusResponse:
    description: <p/>
    properties:
      ConfigRulesEvaluationStatus:
        allOf:
          - $ref: '#/definitions/ConfigRuleEvaluationStatusList'
          - description: Status information about your Config managed rules.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  DescribeConfigRulesRequest:
    description: <p/>
    properties:
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConfigRuleNames'
          - description: >-
              The names of the Config rules for which you want details. If you
              do not specify any names, Config returns details for all your
              rules.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribeConfigRulesRequest
    type: object
  DescribeConfigRulesResponse:
    description: <p/>
    properties:
      ConfigRules:
        allOf:
          - $ref: '#/definitions/ConfigRules'
          - description: The details about your Config rules.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  DescribeConfigurationAggregatorSourcesStatusRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of AggregatorSourceStatus returned on each
              page. The default is maximum. If you specify 0, Config uses the
              default.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      UpdateStatus:
        allOf:
          - $ref: '#/definitions/AggregatedSourceStatusTypeList'
          - description: >-
              <p>Filters the status type.</p> <ul> <li> <p>Valid value FAILED
              indicates errors while moving data.</p> </li> <li> <p>Valid value
              SUCCEEDED indicates the data was successfully moved.</p> </li>
              <li> <p>Valid value OUTDATED indicates the data is not the most
              recent.</p> </li> </ul>
    required:
      - ConfigurationAggregatorName
    title: DescribeConfigurationAggregatorSourcesStatusRequest
    type: object
  DescribeConfigurationAggregatorSourcesStatusResponse:
    properties:
      AggregatedSourceStatusList:
        allOf:
          - $ref: '#/definitions/AggregatedSourceStatusList'
          - description: 'Returns an AggregatedSourceStatus object. '
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  DescribeConfigurationAggregatorsRequest:
    properties:
      ConfigurationAggregatorNames:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorNameList'
          - description: The name of the configuration aggregators.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of configuration aggregators returned on each
              page. The default is maximum. If you specify 0, Config uses the
              default.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribeConfigurationAggregatorsRequest
    type: object
  DescribeConfigurationAggregatorsResponse:
    properties:
      ConfigurationAggregators:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorList'
          - description: Returns a ConfigurationAggregators object.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  DescribeConfigurationRecorderStatusRequest:
    description: The input for the <a>DescribeConfigurationRecorderStatus</a> action.
    properties:
      ConfigurationRecorderNames:
        allOf:
          - $ref: '#/definitions/ConfigurationRecorderNameList'
          - description: >-
              The name(s) of the configuration recorder. If the name is not
              specified, the action returns the current status of all the
              configuration recorders associated with the account.
    title: DescribeConfigurationRecorderStatusRequest
    type: object
  DescribeConfigurationRecorderStatusResponse:
    description: >-
      The output for the <a>DescribeConfigurationRecorderStatus</a> action, in
      JSON format.
    properties:
      ConfigurationRecordersStatus:
        allOf:
          - $ref: '#/definitions/ConfigurationRecorderStatusList'
          - description: A list that contains status of the specified recorders.
    type: object
  DescribeConfigurationRecordersRequest:
    description: The input for the <a>DescribeConfigurationRecorders</a> action.
    properties:
      ConfigurationRecorderNames:
        allOf:
          - $ref: '#/definitions/ConfigurationRecorderNameList'
          - description: A list of configuration recorder names.
    title: DescribeConfigurationRecordersRequest
    type: object
  DescribeConfigurationRecordersResponse:
    description: The output for the <a>DescribeConfigurationRecorders</a> action.
    properties:
      ConfigurationRecorders:
        allOf:
          - $ref: '#/definitions/ConfigurationRecorderList'
          - description: >-
              A list that contains the descriptions of the specified
              configuration recorders.
    type: object
  DescribeConformancePackComplianceLimit:
    maximum: 1000
    minimum: 0
    type: integer
  DescribeConformancePackComplianceRequest:
    properties:
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      Filters:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceFilters'
          - description: A <code>ConformancePackComplianceFilters</code> object.
      Limit:
        allOf:
          - $ref: '#/definitions/DescribeConformancePackComplianceLimit'
          - description: >-
              The maximum number of Config rules within a conformance pack are
              returned on each page.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    required:
      - ConformancePackName
    title: DescribeConformancePackComplianceRequest
    type: object
  DescribeConformancePackComplianceResponse:
    properties:
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      ConformancePackRuleComplianceList:
        allOf:
          - $ref: '#/definitions/ConformancePackRuleComplianceList'
          - description: >-
              Returns a list of <code>ConformancePackRuleCompliance</code>
              objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    required:
      - ConformancePackName
      - ConformancePackRuleComplianceList
    type: object
  DescribeConformancePackStatusRequest:
    properties:
      ConformancePackNames:
        allOf:
          - $ref: '#/definitions/ConformancePackNamesList'
          - description: Comma-separated list of conformance pack names.
      Limit:
        allOf:
          - $ref: '#/definitions/PageSizeLimit'
          - description: >-
              The maximum number of conformance packs status returned on each
              page.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    title: DescribeConformancePackStatusRequest
    type: object
  DescribeConformancePackStatusResponse:
    properties:
      ConformancePackStatusDetails:
        allOf:
          - $ref: '#/definitions/ConformancePackStatusDetailsList'
          - description: A list of <code>ConformancePackStatusDetail</code> objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    type: object
  DescribeConformancePacksRequest:
    properties:
      ConformancePackNames:
        allOf:
          - $ref: '#/definitions/ConformancePackNamesList'
          - description: >-
              Comma-separated list of conformance pack names for which you want
              details. If you do not specify any names, Config returns details
              for all your conformance packs. 
      Limit:
        allOf:
          - $ref: '#/definitions/PageSizeLimit'
          - description: The maximum number of conformance packs returned on each page.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    title: DescribeConformancePacksRequest
    type: object
  DescribeConformancePacksResponse:
    properties:
      ConformancePackDetails:
        allOf:
          - $ref: '#/definitions/ConformancePackDetailList'
          - description: Returns a list of <code>ConformancePackDetail</code> objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    type: object
  DescribeDeliveryChannelStatusRequest:
    description: The input for the <a>DeliveryChannelStatus</a> action.
    properties:
      DeliveryChannelNames:
        allOf:
          - $ref: '#/definitions/DeliveryChannelNameList'
          - description: A list of delivery channel names.
    title: DescribeDeliveryChannelStatusRequest
    type: object
  DescribeDeliveryChannelStatusResponse:
    description: The output for the <a>DescribeDeliveryChannelStatus</a> action.
    properties:
      DeliveryChannelsStatus:
        allOf:
          - $ref: '#/definitions/DeliveryChannelStatusList'
          - description: A list that contains the status of a specified delivery channel.
    type: object
  DescribeDeliveryChannelsRequest:
    description: The input for the <a>DescribeDeliveryChannels</a> action.
    properties:
      DeliveryChannelNames:
        allOf:
          - $ref: '#/definitions/DeliveryChannelNameList'
          - description: A list of delivery channel names.
    title: DescribeDeliveryChannelsRequest
    type: object
  DescribeDeliveryChannelsResponse:
    description: The output for the <a>DescribeDeliveryChannels</a> action.
    properties:
      DeliveryChannels:
        allOf:
          - $ref: '#/definitions/DeliveryChannelList'
          - description: >-
              A list that contains the descriptions of the specified delivery
              channel.
    type: object
  DescribeOrganizationConfigRuleStatusesRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of <code>OrganizationConfigRuleStatuses</code>
              returned on each page. If you do no specify a number, Config uses
              the default. The default is 100.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRuleNames:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleNames'
          - description: >-
              The names of organization config rules for which you want status
              details. If you do not specify any names, Config returns details
              for all your organization Config rules.
    title: DescribeOrganizationConfigRuleStatusesRequest
    type: object
  DescribeOrganizationConfigRuleStatusesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRuleStatuses:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleStatuses'
          - description: A list of <code>OrganizationConfigRuleStatus</code> objects.
    type: object
  DescribeOrganizationConfigRulesRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of organization config rules returned on each
              page. If you do no specify a number, Config uses the default. The
              default is 100.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRuleNames:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleNames'
          - description: >-
              The names of organization config rules for which you want details.
              If you do not specify any names, Config returns details for all
              your organization config rules.
    title: DescribeOrganizationConfigRulesRequest
    type: object
  DescribeOrganizationConfigRulesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRules:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRules'
          - description: Returns a list of <code>OrganizationConfigRule</code> objects.
    type: object
  DescribeOrganizationConformancePackStatusesRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of OrganizationConformancePackStatuses returned
              on each page. If you do no specify a number, Config uses the
              default. The default is 100. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response. 
      OrganizationConformancePackNames:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackNames'
          - description: >-
              The names of organization conformance packs for which you want
              status details. If you do not specify any names, Config returns
              details for all your organization conformance packs. 
    title: DescribeOrganizationConformancePackStatusesRequest
    type: object
  DescribeOrganizationConformancePackStatusesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response. 
      OrganizationConformancePackStatuses:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackStatuses'
          - description: 'A list of <code>OrganizationConformancePackStatus</code> objects. '
    type: object
  DescribeOrganizationConformancePacksRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of organization config packs returned on each
              page. If you do no specify a number, Config uses the default. The
              default is 100.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response.
      OrganizationConformancePackNames:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackNames'
          - description: The name that you assign to an organization conformance pack.
    title: DescribeOrganizationConformancePacksRequest
    type: object
  DescribeOrganizationConformancePacksResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response.
      OrganizationConformancePacks:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePacks'
          - description: Returns a list of OrganizationConformancePacks objects.
    type: object
  DescribePendingAggregationRequestsLimit:
    maximum: 20
    minimum: 0
    type: integer
  DescribePendingAggregationRequestsRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/DescribePendingAggregationRequestsLimit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is maximum. If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    title: DescribePendingAggregationRequestsRequest
    type: object
  DescribePendingAggregationRequestsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      PendingAggregationRequests:
        allOf:
          - $ref: '#/definitions/PendingAggregationRequestList'
          - description: Returns a PendingAggregationRequests object.
    type: object
  DescribeRemediationConfigurationsRequest:
    properties:
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ConfigRuleNames'
          - description: >-
              A list of Config rule names of remediation configurations for
              which you want details. 
    required:
      - ConfigRuleNames
    title: DescribeRemediationConfigurationsRequest
    type: object
  DescribeRemediationConfigurationsResponse:
    properties:
      RemediationConfigurations:
        allOf:
          - $ref: '#/definitions/RemediationConfigurations'
          - description: Returns a remediation configuration object.
    type: object
  DescribeRemediationExceptionsRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of RemediationExceptionResourceKey returned on
              each page. The default is 25. If you specify 0, Config uses the
              default.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
      ResourceKeys:
        allOf:
          - $ref: '#/definitions/RemediationExceptionResourceKeys'
          - description: >-
              An exception list of resource exception keys to be processed with
              the current request. Config adds exception for each resource key.
              For example, Config adds 3 exceptions for 3 resource keys. 
    required:
      - ConfigRuleName
    title: DescribeRemediationExceptionsRequest
    type: object
  DescribeRemediationExceptionsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
      RemediationExceptions:
        allOf:
          - $ref: '#/definitions/RemediationExceptions'
          - description: Returns a list of remediation exception objects.
    type: object
  DescribeRemediationExecutionStatusRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: A list of Config rule names.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of RemediationExecutionStatuses returned on
              each page. The default is maximum. If you specify 0, Config uses
              the default. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      ResourceKeys:
        allOf:
          - $ref: '#/definitions/ResourceKeys'
          - description: >-
              A list of resource keys to be processed with the current request.
              Each element in the list consists of the resource type and
              resource ID. 
    required:
      - ConfigRuleName
    title: DescribeRemediationExecutionStatusRequest
    type: object
  DescribeRemediationExecutionStatusResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      RemediationExecutionStatuses:
        allOf:
          - $ref: '#/definitions/RemediationExecutionStatuses'
          - description: Returns a list of remediation execution statuses objects.
    type: object
  DescribeRetentionConfigurationsRequest:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      RetentionConfigurationNames:
        allOf:
          - $ref: '#/definitions/RetentionConfigurationNameList'
          - description: >-
              <p>A list of names of retention configurations for which you want
              details. If you do not specify a name, Config returns details for
              all the retention configurations for that account.</p> <note>
              <p>Currently, Config supports only one retention configuration per
              region in your account.</p> </note>
    title: DescribeRetentionConfigurationsRequest
    type: object
  DescribeRetentionConfigurationsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      RetentionConfigurations:
        allOf:
          - $ref: '#/definitions/RetentionConfigurationList'
          - description: Returns a retention configuration object.
    type: object
  DiscoveredResourceIdentifierList:
    items:
      $ref: '#/definitions/AggregateResourceIdentifier'
    type: array
  EarlierTime:
    format: date-time
    type: string
  EmptiableStringWithCharLimit256:
    maxLength: 256
    minLength: 0
    type: string
  Evaluation:
    description: >-
      Identifies an Amazon Web Services resource and indicates whether it
      complies with the Config rule that it was evaluated against.
    properties:
      Annotation:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Supplementary information about how the evaluation determined the
              compliance.
      ComplianceResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: The ID of the Amazon Web Services resource that was evaluated.
      ComplianceResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of Amazon Web Services resource that was evaluated.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>Indicates whether the Amazon Web Services resource complies
              with the Config rule that it was evaluated against.</p> <p>For the
              <code>Evaluation</code> data type, Config supports only the
              <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>NOT_APPLICABLE</code> values. Config does not support the
              <code>INSUFFICIENT_DATA</code> value for this data type.</p>
              <p>Similarly, Config does not accept
              <code>INSUFFICIENT_DATA</code> as the value for
              <code>ComplianceType</code> from a <code>PutEvaluations</code>
              request. For example, an Lambda function for a custom Config rule
              cannot pass an <code>INSUFFICIENT_DATA</code> value to Config.</p>
      OrderingTimestamp:
        allOf:
          - $ref: '#/definitions/OrderingTimestamp'
          - description: >-
              The time of the event in Config that triggered the evaluation. For
              event-based evaluations, the time indicates when Config created
              the configuration item that triggered the evaluation. For periodic
              evaluations, the time indicates when Config triggered the
              evaluation at the frequency that you specified (for example, every
              24 hours).
    required:
      - ComplianceResourceType
      - ComplianceResourceId
      - ComplianceType
      - OrderingTimestamp
    type: object
  EvaluationResult:
    description: >-
      The details of an Config evaluation. Provides the Amazon Web Services
      resource that was evaluated, the compliance of the resource, related time
      stamps, and supplementary information.
    properties:
      Annotation:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Supplementary information about how the evaluation determined the
              compliance.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>Indicates whether the Amazon Web Services resource complies
              with the Config rule that evaluated it.</p> <p>For the
              <code>EvaluationResult</code> data type, Config supports only the
              <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>NOT_APPLICABLE</code> values. Config does not support the
              <code>INSUFFICIENT_DATA</code> value for the
              <code>EvaluationResult</code> data type.</p>
      ConfigRuleInvokedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time when the Config rule evaluated the Amazon Web Services
              resource.
      EvaluationResultIdentifier:
        allOf:
          - $ref: '#/definitions/EvaluationResultIdentifier'
          - description: Uniquely identifies the evaluation result.
      ResultRecordedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when Config recorded the evaluation result.
      ResultToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An encrypted token that associates an evaluation with an Config
              rule. The token identifies the rule, the Amazon Web Services
              resource being evaluated, and the event that triggered the
              evaluation.
    type: object
  EvaluationResultIdentifier:
    description: Uniquely identifies an evaluation result.
    properties:
      EvaluationResultQualifier:
        allOf:
          - $ref: '#/definitions/EvaluationResultQualifier'
          - description: >-
              Identifies an Config rule used to evaluate an Amazon Web Services
              resource, and provides the type and ID of the evaluated resource.
      OrderingTimestamp:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              The time of the event that triggered the evaluation of your Amazon
              Web Services resources. The time can indicate when Config
              delivered a configuration item change notification, or it can
              indicate when Config delivered the configuration snapshot,
              depending on which event triggered the evaluation.
    type: object
  EvaluationResultQualifier:
    description: >-
      Identifies an Config rule that evaluated an Amazon Web Services resource,
      and provides the type and ID of the resource that the rule evaluated.
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule that was used in the evaluation.
      ResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: The ID of the evaluated Amazon Web Services resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of Amazon Web Services resource that was evaluated.
    type: object
  EvaluationResults:
    items:
      $ref: '#/definitions/EvaluationResult'
    type: array
  Evaluations:
    items:
      $ref: '#/definitions/Evaluation'
    maxItems: 100
    minItems: 0
    type: array
  EventSource:
    enum:
      - aws.config
    type: string
  ExcludedAccounts:
    items:
      $ref: '#/definitions/AccountId'
    maxItems: 1000
    minItems: 0
    type: array
  ExecutionControls:
    description: The controls that Config uses for executing remediations.
    properties:
      SsmControls:
        allOf:
          - $ref: '#/definitions/SsmControls'
          - description: A SsmControls object.
    type: object
  Expression:
    maxLength: 4096
    minLength: 1
    type: string
  ExternalEvaluation:
    description: >-
      Identifies an Amazon Web Services resource and indicates whether it
      complies with the Config rule that it was evaluated against.
    properties:
      Annotation:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Supplementary information about the reason of compliance. For
              example, this task was completed on a specific date.
      ComplianceResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: >-
              The evaluated compliance resource ID. Config accepts only Amazon
              Web Services account ID.
      ComplianceResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The evaluated compliance resource type. Config accepts
              <code>AWS::::Account</code> resource type.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              The compliance of the Amazon Web Services resource. The valid
              values are <code>COMPLIANT, NON_COMPLIANT, </code> and
              <code>NOT_APPLICABLE</code>.
      OrderingTimestamp:
        allOf:
          - $ref: '#/definitions/OrderingTimestamp'
          - description: 'The time when the compliance was recorded. '
    required:
      - ComplianceResourceType
      - ComplianceResourceId
      - ComplianceType
      - OrderingTimestamp
    type: object
  FailedDeleteRemediationExceptionsBatch:
    description: >-
      List of each of the failed delete remediation exceptions with specific
      reasons.
    properties:
      FailedItems:
        allOf:
          - $ref: '#/definitions/RemediationExceptionResourceKeys'
          - description: >-
              Returns remediation exception resource key object of the failed
              items.
      FailureMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Returns a failure message for delete remediation exception. For
              example, Config creates an exception due to an internal error.
    type: object
  FailedDeleteRemediationExceptionsBatches:
    items:
      $ref: '#/definitions/FailedDeleteRemediationExceptionsBatch'
    type: array
  FailedRemediationBatch:
    description: List of each of the failed remediations with specific reasons.
    properties:
      FailedItems:
        allOf:
          - $ref: '#/definitions/RemediationConfigurations'
          - description: Returns remediation configurations of the failed items.
      FailureMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Returns a failure message. For example, the resource is already
              compliant.
    type: object
  FailedRemediationBatches:
    items:
      $ref: '#/definitions/FailedRemediationBatch'
    type: array
  FailedRemediationExceptionBatch:
    description: List of each of the failed remediation exceptions with specific reasons.
    properties:
      FailedItems:
        allOf:
          - $ref: '#/definitions/RemediationExceptions'
          - description: >-
              Returns remediation exception resource key object of the failed
              items.
      FailureMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Returns a failure message. For example, the auto-remediation has
              failed.
    type: object
  FailedRemediationExceptionBatches:
    items:
      $ref: '#/definitions/FailedRemediationExceptionBatch'
    type: array
  FieldInfo:
    description: Details about the fields such as name of the field.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/FieldName'
          - description: Name of the field.
    type: object
  FieldInfoList:
    items:
      $ref: '#/definitions/FieldInfo'
    type: array
  FieldName:
    type: string
  GetAggregateComplianceDetailsByConfigRuleRequest:
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of the source account.
      AwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region from where the data is aggregated.
      ComplianceType:
        allOf:
          - $ref: '#/definitions/ComplianceType'
          - description: >-
              <p>The resource compliance status.</p> <note> <p>For the
              <code>GetAggregateComplianceDetailsByConfigRuleRequest</code> data
              type, Config supports only the <code>COMPLIANT</code> and
              <code>NON_COMPLIANT</code>. Config does not support the
              <code>NOT_APPLICABLE</code> and <code>INSUFFICIENT_DATA</code>
              values.</p> </note>
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The name of the Config rule for which you want compliance
              information.
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is 50. You cannot specify a number greater than 100.
              If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigurationAggregatorName
      - ConfigRuleName
      - AccountId
      - AwsRegion
    title: GetAggregateComplianceDetailsByConfigRuleRequest
    type: object
  GetAggregateComplianceDetailsByConfigRuleResponse:
    properties:
      AggregateEvaluationResults:
        allOf:
          - $ref: '#/definitions/AggregateEvaluationResultList'
          - description: Returns an AggregateEvaluationResults object.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  GetAggregateConfigRuleComplianceSummaryRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Filters:
        allOf:
          - $ref: '#/definitions/ConfigRuleComplianceSummaryFilters'
          - description: >-
              Filters the results based on the
              ConfigRuleComplianceSummaryFilters object.
      GroupByKey:
        allOf:
          - $ref: '#/definitions/ConfigRuleComplianceSummaryGroupKey'
          - description: Groups the result based on ACCOUNT_ID or AWS_REGION.
      Limit:
        allOf:
          - $ref: '#/definitions/GroupByAPILimit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is 1000. You cannot specify a number greater than
              1000. If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigurationAggregatorName
    title: GetAggregateConfigRuleComplianceSummaryRequest
    type: object
  GetAggregateConfigRuleComplianceSummaryResponse:
    properties:
      AggregateComplianceCounts:
        allOf:
          - $ref: '#/definitions/AggregateComplianceCountList'
          - description: Returns a list of AggregateComplianceCounts object.
      GroupByKey:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: Groups the result based on ACCOUNT_ID or AWS_REGION.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  GetAggregateConformancePackComplianceSummaryRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Filters:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackComplianceSummaryFilters'
          - description: >-
              Filters the results based on the
              <code>AggregateConformancePackComplianceSummaryFilters</code>
              object.
      GroupByKey:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackComplianceSummaryGroupKey'
          - description: >-
              Groups the result based on Amazon Web Services account ID or
              Amazon Web Services Region.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of results returned on each page. The default
              is maximum. If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigurationAggregatorName
    title: GetAggregateConformancePackComplianceSummaryRequest
    type: object
  GetAggregateConformancePackComplianceSummaryResponse:
    properties:
      AggregateConformancePackComplianceSummaries:
        allOf:
          - $ref: '#/definitions/AggregateConformancePackComplianceSummaryList'
          - description: >-
              Returns a list of
              <code>AggregateConformancePackComplianceSummary</code> object.
      GroupByKey:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              Groups the result based on Amazon Web Services account ID or
              Amazon Web Services Region.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    type: object
  GetAggregateDiscoveredResourceCountsRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Filters:
        allOf:
          - $ref: '#/definitions/ResourceCountFilters'
          - description: >-
              Filters the results based on the <code>ResourceCountFilters</code>
              object.
      GroupByKey:
        allOf:
          - $ref: '#/definitions/ResourceCountGroupKey'
          - description: The key to group the resource counts.
      Limit:
        allOf:
          - $ref: '#/definitions/GroupByAPILimit'
          - description: >-
              The maximum number of <a>GroupedResourceCount</a> objects returned
              on each page. The default is 1000. You cannot specify a number
              greater than 1000. If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
    required:
      - ConfigurationAggregatorName
    title: GetAggregateDiscoveredResourceCountsRequest
    type: object
  GetAggregateDiscoveredResourceCountsResponse:
    properties:
      GroupByKey:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The key passed into the request object. If <code>GroupByKey</code>
              is not provided, the result will be empty.
      GroupedResourceCounts:
        allOf:
          - $ref: '#/definitions/GroupedResourceCountList'
          - description: Returns a list of GroupedResourceCount objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      TotalDiscoveredResources:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The total number of resources that are present in an aggregator
              with the filters that you provide.
    required:
      - TotalDiscoveredResources
    type: object
  GetAggregateResourceConfigRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      ResourceIdentifier:
        allOf:
          - $ref: '#/definitions/AggregateResourceIdentifier'
          - description: An object that identifies aggregate resource.
    required:
      - ConfigurationAggregatorName
      - ResourceIdentifier
    title: GetAggregateResourceConfigRequest
    type: object
  GetAggregateResourceConfigResponse:
    properties:
      ConfigurationItem:
        allOf:
          - $ref: '#/definitions/ConfigurationItem'
          - description: Returns a <code>ConfigurationItem</code> object.
    type: object
  GetComplianceDetailsByConfigRuleRequest:
    description: <p/>
    properties:
      ComplianceTypes:
        allOf:
          - $ref: '#/definitions/ComplianceTypes'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>NOT_APPLICABLE</code>.</p>
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit64'
          - description: >-
              The name of the Config rule for which you want compliance
              information.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of evaluation results returned on each page.
              The default is 10. You cannot specify a number greater than 100.
              If you specify 0, Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
    required:
      - ConfigRuleName
    title: GetComplianceDetailsByConfigRuleRequest
    type: object
  GetComplianceDetailsByConfigRuleResponse:
    description: <p/>
    properties:
      EvaluationResults:
        allOf:
          - $ref: '#/definitions/EvaluationResults'
          - description: >-
              Indicates whether the Amazon Web Services resource complies with
              the specified Config rule.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  GetComplianceDetailsByResourceRequest:
    description: <p/>
    properties:
      ComplianceTypes:
        allOf:
          - $ref: '#/definitions/ComplianceTypes'
          - description: >-
              <p>Filters the results by compliance.</p> <p>The allowed values
              are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
              <code>NOT_APPLICABLE</code>.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      ResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: >-
              The ID of the Amazon Web Services resource for which you want
              compliance information.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The type of the Amazon Web Services resource for which you want
              compliance information.
    required:
      - ResourceType
      - ResourceId
    title: GetComplianceDetailsByResourceRequest
    type: object
  GetComplianceDetailsByResourceResponse:
    description: <p/>
    properties:
      EvaluationResults:
        allOf:
          - $ref: '#/definitions/EvaluationResults'
          - description: >-
              Indicates whether the specified Amazon Web Services resource
              complies each Config rule.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  GetComplianceSummaryByConfigRuleResponse:
    description: <p/>
    properties:
      ComplianceSummary:
        allOf:
          - $ref: '#/definitions/ComplianceSummary'
          - description: >-
              The number of Config rules that are compliant and the number that
              are noncompliant, up to a maximum of 25 for each.
    type: object
  GetComplianceSummaryByResourceTypeRequest:
    description: <p/>
    properties:
      ResourceTypes:
        allOf:
          - $ref: '#/definitions/ResourceTypes'
          - description: >-
              <p>Specify one or more resource types to get the number of
              resources that are compliant and the number that are noncompliant
              for each resource type.</p> <p>For this request, you can specify
              an Amazon Web Services resource type such as
              <code>AWS::EC2::Instance</code>. You can specify that the resource
              type is an Amazon Web Services account by specifying
              <code>AWS::::Account</code>.</p>
    title: GetComplianceSummaryByResourceTypeRequest
    type: object
  GetComplianceSummaryByResourceTypeResponse:
    description: <p/>
    properties:
      ComplianceSummariesByResourceType:
        allOf:
          - $ref: '#/definitions/ComplianceSummariesByResourceType'
          - description: >-
              The number of resources that are compliant and the number that are
              noncompliant. If one or more resource types were provided with the
              request, the numbers are returned for each resource type. The
              maximum number returned is 100.
    type: object
  GetConformancePackComplianceDetailsLimit:
    maximum: 100
    minimum: 0
    type: integer
  GetConformancePackComplianceDetailsRequest:
    properties:
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      Filters:
        allOf:
          - $ref: '#/definitions/ConformancePackEvaluationFilters'
          - description: A <code>ConformancePackEvaluationFilters</code> object.
      Limit:
        allOf:
          - $ref: '#/definitions/GetConformancePackComplianceDetailsLimit'
          - description: >-
              The maximum number of evaluation results returned on each page. If
              you do no specify a number, Config uses the default. The default
              is 100.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    required:
      - ConformancePackName
    title: GetConformancePackComplianceDetailsRequest
    type: object
  GetConformancePackComplianceDetailsResponse:
    properties:
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack.
      ConformancePackRuleEvaluationResults:
        allOf:
          - $ref: '#/definitions/ConformancePackRuleEvaluationResultsList'
          - description: >-
              Returns a list of <code>ConformancePackEvaluationResult</code>
              objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response.
    required:
      - ConformancePackName
    type: object
  GetConformancePackComplianceSummaryRequest:
    properties:
      ConformancePackNames:
        allOf:
          - $ref: '#/definitions/ConformancePackNamesToSummarizeList'
          - description: Names of conformance packs.
      Limit:
        allOf:
          - $ref: '#/definitions/PageSizeLimit'
          - description: The maximum number of conformance packs returned on each page.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response.
    required:
      - ConformancePackNames
    title: GetConformancePackComplianceSummaryRequest
    type: object
  GetConformancePackComplianceSummaryResponse:
    properties:
      ConformancePackComplianceSummaryList:
        allOf:
          - $ref: '#/definitions/ConformancePackComplianceSummaryList'
          - description: 'A list of <code>ConformancePackComplianceSummary</code> objects. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response.
    type: object
  GetDiscoveredResourceCountsRequest:
    properties:
      limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of <a>ResourceCount</a> objects returned on
              each page. The default is 100. You cannot specify a number greater
              than 100. If you specify 0, Config uses the default.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      resourceTypes:
        allOf:
          - $ref: '#/definitions/ResourceTypes'
          - description: >-
              <p>The comma-separated list that specifies the resource types that
              you want Config to return (for example,
              <code>"AWS::EC2::Instance"</code>,
              <code>"AWS::IAM::User"</code>).</p> <p>If a value for
              <code>resourceTypes</code> is not specified, Config returns all
              resource types that Config is recording in the region for your
              account.</p> <note> <p>If the configuration recorder is turned
              off, Config returns an empty list of <a>ResourceCount</a> objects.
              If the configuration recorder is not recording a specific resource
              type (for example, S3 buckets), that resource type is not returned
              in the list of <a>ResourceCount</a> objects.</p> </note>
    title: GetDiscoveredResourceCountsRequest
    type: object
  GetDiscoveredResourceCountsResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
      resourceCounts:
        allOf:
          - $ref: '#/definitions/ResourceCounts'
          - description: >-
              The list of <code>ResourceCount</code> objects. Each object is
              listed in descending order by the number of resources.
      totalDiscoveredResources:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              <p>The total number of resources that Config is recording in the
              region for your account. If you specify resource types in the
              request, Config returns only the total number of resources for
              those resource types.</p> <p class="title"> <b>Example</b> </p>
              <ol> <li> <p>Config is recording three resource types in the US
              East (Ohio) Region for your account: 25 EC2 instances, 20 IAM
              users, and 15 S3 buckets, for a total of 60 resources.</p> </li>
              <li> <p>You make a call to the
              <code>GetDiscoveredResourceCounts</code> action and specify the
              resource type, <code>"AWS::EC2::Instances"</code>, in the
              request.</p> </li> <li> <p>Config returns 25 for
              <code>totalDiscoveredResources</code>.</p> </li> </ol>
    type: object
  GetOrganizationConfigRuleDetailedStatusRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/StatusDetailFilters'
          - description: A <code>StatusDetailFilters</code> object.
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of
              <code>OrganizationConfigRuleDetailedStatus</code> returned on each
              page. If you do not specify a number, Config uses the default. The
              default is 100.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRuleName:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleName'
          - description: >-
              The name of organization config rule for which you want status
              details for member accounts.
    required:
      - OrganizationConfigRuleName
    title: GetOrganizationConfigRuleDetailedStatusRequest
    type: object
  GetOrganizationConfigRuleDetailedStatusResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      OrganizationConfigRuleDetailedStatus:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleDetailedStatus'
          - description: A list of <code>MemberAccountStatus</code> objects.
    type: object
  GetOrganizationConformancePackDetailedStatusRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/OrganizationResourceDetailedStatusFilters'
          - description: An <code>OrganizationResourceDetailedStatusFilters</code> object.
      Limit:
        allOf:
          - $ref: '#/definitions/CosmosPageLimit'
          - description: >-
              The maximum number of
              <code>OrganizationConformancePackDetailedStatuses</code> returned
              on each page. If you do not specify a number, Config uses the
              default. The default is 100. 
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response. 
      OrganizationConformancePackName:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackName'
          - description: >-
              The name of organization conformance pack for which you want
              status details for member accounts.
    required:
      - OrganizationConformancePackName
    title: GetOrganizationConformancePackDetailedStatusRequest
    type: object
  GetOrganizationConformancePackDetailedStatusResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned on a previous page that you use to
              get the next page of results in a paginated response. 
      OrganizationConformancePackDetailedStatuses:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackDetailedStatuses'
          - description: >-
              A list of <code>OrganizationConformancePackDetailedStatus</code>
              objects. 
    type: object
  GetResourceConfigHistoryRequest:
    description: The input for the <a>GetResourceConfigHistory</a> action.
    properties:
      chronologicalOrder:
        allOf:
          - $ref: '#/definitions/ChronologicalOrder'
          - description: >-
              The chronological order for configuration items listed. By
              default, the results are listed in reverse chronological order.
      earlierTime:
        allOf:
          - $ref: '#/definitions/EarlierTime'
          - description: >-
              The time stamp that indicates an earlier time. If not specified,
              the action returns paginated results that contain configuration
              items that start when the first configuration item was recorded.
      laterTime:
        allOf:
          - $ref: '#/definitions/LaterTime'
          - description: >-
              The time stamp that indicates a later time. If not specified,
              current time is taken.
      limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of configuration items returned on each page.
              The default is 10. You cannot specify a number greater than 100.
              If you specify 0, Config uses the default.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the resource (for example., <code>sg-xxxxxx</code>).'
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type.
    required:
      - resourceType
      - resourceId
    title: GetResourceConfigHistoryRequest
    type: object
  GetResourceConfigHistoryResponse:
    description: The output for the <a>GetResourceConfigHistory</a> action.
    properties:
      configurationItems:
        allOf:
          - $ref: '#/definitions/ConfigurationItemList'
          - description: >-
              A list that contains the configuration history of one or more
              resources.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
    type: object
  GetStoredQueryRequest:
    properties:
      QueryName:
        allOf:
          - $ref: '#/definitions/QueryName'
          - description: The name of the query.
    required:
      - QueryName
    title: GetStoredQueryRequest
    type: object
  GetStoredQueryResponse:
    properties:
      StoredQuery:
        allOf:
          - $ref: '#/definitions/StoredQuery'
          - description: Returns a <code>StoredQuery</code> object.
    type: object
  GroupByAPILimit:
    maximum: 1000
    minimum: 0
    type: integer
  GroupedResourceCount:
    description: The count of resources that are grouped by the group name.
    properties:
      GroupName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The name of the group that can be region, account ID, or resource
              type. For example, region1, region2 if the region was chosen as
              <code>GroupByKey</code>.
      ResourceCount:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The number of resources in the group.
    required:
      - GroupName
      - ResourceCount
    type: object
  GroupedResourceCountList:
    items:
      $ref: '#/definitions/GroupedResourceCount'
    type: array
  IncludeGlobalResourceTypes:
    type: boolean
  InsufficientDeliveryPolicyException: {}
  InsufficientPermissionsException: {}
  Integer:
    type: integer
  InvalidConfigurationRecorderNameException: {}
  InvalidDeliveryChannelNameException: {}
  InvalidExpressionException: {}
  InvalidLimitException: {}
  InvalidNextTokenException: {}
  InvalidParameterValueException: {}
  InvalidRecordingGroupException: {}
  InvalidResultTokenException: {}
  InvalidRoleException: {}
  InvalidS3KeyPrefixException: {}
  InvalidS3KmsKeyArnException: {}
  InvalidSNSTopicARNException: {}
  InvalidTimeRangeException: {}
  LastDeliveryChannelDeleteFailedException: {}
  LaterTime:
    format: date-time
    type: string
  Limit:
    maximum: 100
    minimum: 0
    type: integer
  LimitExceededException: {}
  ListAggregateDiscoveredResourcesRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: 'The name of the configuration aggregator. '
      Filters:
        allOf:
          - $ref: '#/definitions/ResourceFilters'
          - description: >-
              Filters the results based on the <code>ResourceFilters</code>
              object.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of resource identifiers returned on each page.
              You cannot specify a number greater than 100. If you specify 0,
              Config uses the default.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of resources that you want Config to list in the
              response.
    required:
      - ConfigurationAggregatorName
      - ResourceType
    title: ListAggregateDiscoveredResourcesRequest
    type: object
  ListAggregateDiscoveredResourcesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      ResourceIdentifiers:
        allOf:
          - $ref: '#/definitions/DiscoveredResourceIdentifierList'
          - description: Returns a list of <code>ResourceIdentifiers</code> objects.
    type: object
  ListDiscoveredResourcesRequest:
    description: <p/>
    properties:
      includeDeletedResources:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether Config includes deleted resources in the
              results. By default, deleted resources are not included.
      limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of resource identifiers returned on each page.
              The default is 100. You cannot specify a number greater than 100.
              If you specify 0, Config uses the default.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response.
      resourceIds:
        allOf:
          - $ref: '#/definitions/ResourceIdList'
          - description: >-
              The IDs of only those resources that you want Config to list in
              the response. If you do not specify this parameter, Config lists
              all resources of the specified type that it has discovered.
      resourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: >-
              The custom name of only those resources that you want Config to
              list in the response. If you do not specify this parameter, Config
              lists all resources of the specified type that it has discovered.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of resources that you want Config to list in the
              response.
    required:
      - resourceType
    title: ListDiscoveredResourcesRequest
    type: object
  ListDiscoveredResourcesResponse:
    description: <p/>
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The string that you use in a subsequent request to get the next
              page of results in a paginated response.
      resourceIdentifiers:
        allOf:
          - $ref: '#/definitions/ResourceIdentifierList'
          - description: >-
              The details that identify a resource that is discovered by Config,
              including the resource type, ID, and (if available) the custom
              resource name.
    type: object
  ListStoredQueriesRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: The maximum number of results to be returned with a single call.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The nextToken string returned in a previous request that you use
              to request the next page of results in a paginated response.
    title: ListStoredQueriesRequest
    type: object
  ListStoredQueriesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              If the previous paginated request didn't return all of the
              remaining results, the response object's <code>NextToken</code>
              parameter value is set to a token. To retrieve the next set of
              results, call this action again and assign that token to the
              request object's <code>NextToken</code> parameter. If there are no
              remaining results, the previous response object's
              <code>NextToken</code> parameter is set to <code>null</code>. 
      StoredQueryMetadata:
        allOf:
          - $ref: '#/definitions/StoredQueryMetadataList'
          - description: A list of <code>StoredQueryMetadata</code> objects.
    type: object
  ListTagsForResourceRequest:
    properties:
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of tags returned on each page. The limit
              maximum is 50. You cannot specify a number greater than 50. If you
              specify 0, Config uses the default. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) that identifies the resource for
              which to list the tags. Currently, the supported resources are
              <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and
              <code>AggregatorAuthorization</code>.
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned on a previous page that
              you use to get the next page of results in a paginated response. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags for the resource.
    type: object
  Long:
    type: integer
  MaxActiveResourcesExceededException: {}
  MaxNumberOfConfigRulesExceededException: {}
  MaxNumberOfConfigurationRecordersExceededException: {}
  MaxNumberOfConformancePacksExceededException: {}
  MaxNumberOfDeliveryChannelsExceededException: {}
  MaxNumberOfOrganizationConfigRulesExceededException: {}
  MaxNumberOfOrganizationConformancePacksExceededException: {}
  MaxNumberOfRetentionConfigurationsExceededException: {}
  MaximumExecutionFrequency:
    enum:
      - One_Hour
      - Three_Hours
      - Six_Hours
      - Twelve_Hours
      - TwentyFour_Hours
    type: string
  MemberAccountRuleStatus:
    enum:
      - CREATE_SUCCESSFUL
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_SUCCESSFUL
      - DELETE_FAILED
      - DELETE_IN_PROGRESS
      - UPDATE_SUCCESSFUL
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    type: string
  MemberAccountStatus:
    description: >-
      Organization config rule creation or deletion status in each member
      account. This includes the name of the rule, the status, error code and
      error message when the rule creation or deletion failed.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of a member account.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit64'
          - description: The name of config rule deployed in the member account.
      ErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error code that is returned when config rule creation or
              deletion failed in the member account.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error message indicating that config rule account creation or
              deletion has failed due to an error in the member account.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The timestamp of the last status update.
      MemberAccountRuleStatus:
        allOf:
          - $ref: '#/definitions/MemberAccountRuleStatus'
          - description: >-
              <p>Indicates deployment status for config rule in the member
              account. When master account calls
              <code>PutOrganizationConfigRule</code> action for the first time,
              config rule status is created in the member account. When master
              account calls <code>PutOrganizationConfigRule</code> action for
              the second time, config rule status is updated in the member
              account. Config rule status is deleted when the master account
              deletes <code>OrganizationConfigRule</code> and disables service
              access for <code>config-multiaccountsetup.amazonaws.com</code>.
              </p> <p> Config sets the state of the rule to:</p> <ul> <li> <p>
              <code>CREATE_SUCCESSFUL</code> when config rule has been created
              in the member account. </p> </li> <li> <p>
              <code>CREATE_IN_PROGRESS</code> when config rule is being created
              in the member account.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> when config rule creation has failed in
              the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code>
              when config rule deletion has failed in the member account.</p>
              </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when config rule is
              being deleted in the member account.</p> </li> <li> <p>
              <code>DELETE_SUCCESSFUL</code> when config rule has been deleted
              in the member account. </p> </li> <li> <p>
              <code>UPDATE_SUCCESSFUL</code> when config rule has been updated
              in the member account.</p> </li> <li> <p>
              <code>UPDATE_IN_PROGRESS</code> when config rule is being updated
              in the member account.</p> </li> <li> <p>
              <code>UPDATE_FAILED</code> when config rule deletion has failed in
              the member account.</p> </li> </ul>
    required:
      - AccountId
      - ConfigRuleName
      - MemberAccountRuleStatus
    type: object
  MessageType:
    enum:
      - ConfigurationItemChangeNotification
      - ConfigurationSnapshotDeliveryCompleted
      - ScheduledNotification
      - OversizedConfigurationItemChangeNotification
    type: string
  Name:
    type: string
  NextToken:
    type: string
  NoAvailableConfigurationRecorderException: {}
  NoAvailableDeliveryChannelException: {}
  NoAvailableOrganizationException: {}
  NoRunningConfigurationRecorderException: {}
  NoSuchBucketException: {}
  NoSuchConfigRuleException: {}
  NoSuchConfigRuleInConformancePackException: {}
  NoSuchConfigurationAggregatorException: {}
  NoSuchConfigurationRecorderException: {}
  NoSuchConformancePackException: {}
  NoSuchDeliveryChannelException: {}
  NoSuchOrganizationConfigRuleException: {}
  NoSuchOrganizationConformancePackException: {}
  NoSuchRemediationConfigurationException: {}
  NoSuchRemediationExceptionException: {}
  NoSuchRetentionConfigurationException: {}
  OrderingTimestamp:
    format: date-time
    type: string
  OrganizationAccessDeniedException: {}
  OrganizationAggregationSource:
    description: >-
      This object contains regions to set up the aggregator and an IAM role to
      retrieve organization details.
    properties:
      AllAwsRegions:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: 'If true, aggregate existing Config regions and future regions.'
      AwsRegions:
        allOf:
          - $ref: '#/definitions/AggregatorRegionList'
          - description: The source regions being aggregated.
      RoleArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              ARN of the IAM role used to retrieve Amazon Web Services
              Organization details associated with the aggregator account.
    required:
      - RoleArn
    type: object
  OrganizationAllFeaturesNotEnabledException: {}
  OrganizationConfigRule:
    description: >-
      An organization config rule that has information about config rules that
      Config creates in member accounts.
    properties:
      ExcludedAccounts:
        allOf:
          - $ref: '#/definitions/ExcludedAccounts'
          - description: >-
              A comma-separated list of accounts excluded from organization
              config rule.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The timestamp of the last update.
      OrganizationConfigRuleArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: Amazon Resource Name (ARN) of organization config rule.
      OrganizationConfigRuleName:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleName'
          - description: The name that you assign to organization config rule.
      OrganizationCustomRuleMetadata:
        allOf:
          - $ref: '#/definitions/OrganizationCustomRuleMetadata'
          - description: An <code>OrganizationCustomRuleMetadata</code> object.
      OrganizationManagedRuleMetadata:
        allOf:
          - $ref: '#/definitions/OrganizationManagedRuleMetadata'
          - description: An <code>OrganizationManagedRuleMetadata</code> object.
    required:
      - OrganizationConfigRuleName
      - OrganizationConfigRuleArn
    type: object
  OrganizationConfigRuleDetailedStatus:
    items:
      $ref: '#/definitions/MemberAccountStatus'
    type: array
  OrganizationConfigRuleName:
    maxLength: 64
    minLength: 1
    pattern: .*\S.*
    type: string
  OrganizationConfigRuleNames:
    items:
      $ref: '#/definitions/StringWithCharLimit64'
    maxItems: 25
    minItems: 0
    type: array
  OrganizationConfigRuleStatus:
    description: Returns the status for an organization config rule in an organization.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error code that is returned when organization config rule
              creation or deletion has failed.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error message indicating that organization config rule creation
              or deletion failed due to an error.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The timestamp of the last update.
      OrganizationConfigRuleName:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleName'
          - description: The name that you assign to organization config rule.
      OrganizationRuleStatus:
        allOf:
          - $ref: '#/definitions/OrganizationRuleStatus'
          - description: >-
              <p>Indicates deployment status of an organization config rule.
              When master account calls PutOrganizationConfigRule action for the
              first time, config rule status is created in all the member
              accounts. When master account calls PutOrganizationConfigRule
              action for the second time, config rule status is updated in all
              the member accounts. Additionally, config rule status is updated
              when one or more member accounts join or leave an organization.
              Config rule status is deleted when the master account deletes
              OrganizationConfigRule in all the member accounts and disables
              service access for
              <code>config-multiaccountsetup.amazonaws.com</code>.</p> <p>Config
              sets the state of the rule to:</p> <ul> <li> <p>
              <code>CREATE_SUCCESSFUL</code> when an organization config rule
              has been successfully created in all the member accounts. </p>
              </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when an
              organization config rule creation is in progress.</p> </li> <li>
              <p> <code>CREATE_FAILED</code> when an organization config rule
              creation failed in one or more member accounts within that
              organization.</p> </li> <li> <p> <code>DELETE_FAILED</code> when
              an organization config rule deletion failed in one or more member
              accounts within that organization.</p> </li> <li> <p>
              <code>DELETE_IN_PROGRESS</code> when an organization config rule
              deletion is in progress.</p> </li> <li> <p>
              <code>DELETE_SUCCESSFUL</code> when an organization config rule
              has been successfully deleted from all the member accounts.</p>
              </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when an organization
              config rule has been successfully updated in all the member
              accounts.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when
              an organization config rule update is in progress.</p> </li> <li>
              <p> <code>UPDATE_FAILED</code> when an organization config rule
              update failed in one or more member accounts within that
              organization.</p> </li> </ul>
    required:
      - OrganizationConfigRuleName
      - OrganizationRuleStatus
    type: object
  OrganizationConfigRuleStatuses:
    items:
      $ref: '#/definitions/OrganizationConfigRuleStatus'
    type: array
  OrganizationConfigRuleTriggerType:
    enum:
      - ConfigurationItemChangeNotification
      - OversizedConfigurationItemChangeNotification
      - ScheduledNotification
    type: string
  OrganizationConfigRuleTriggerTypes:
    items:
      $ref: '#/definitions/OrganizationConfigRuleTriggerType'
    type: array
  OrganizationConfigRules:
    items:
      $ref: '#/definitions/OrganizationConfigRule'
    type: array
  OrganizationConformancePack:
    description: >-
      An organization conformance pack that has information about conformance
      packs that Config creates in member accounts. 
    properties:
      ConformancePackInputParameters:
        allOf:
          - $ref: '#/definitions/ConformancePackInputParameters'
          - description: A list of <code>ConformancePackInputParameter</code> objects.
      DeliveryS3Bucket:
        allOf:
          - $ref: '#/definitions/DeliveryS3Bucket'
          - description: >-
              <p>The name of the Amazon S3 bucket where Config stores
              conformance pack templates. </p> <note> <p>This field is
              optional.</p> </note>
      DeliveryS3KeyPrefix:
        allOf:
          - $ref: '#/definitions/DeliveryS3KeyPrefix'
          - description: >-
              <p>Any folder structure you want to add to an Amazon S3
              bucket.</p> <note> <p>This field is optional.</p> </note>
      ExcludedAccounts:
        allOf:
          - $ref: '#/definitions/ExcludedAccounts'
          - description: >-
              A comma-separated list of accounts excluded from organization
              conformance pack.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: Last time when organization conformation pack was updated.
      OrganizationConformancePackArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: Amazon Resource Name (ARN) of organization conformance pack.
      OrganizationConformancePackName:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackName'
          - description: The name you assign to an organization conformance pack.
    required:
      - OrganizationConformancePackName
      - OrganizationConformancePackArn
      - LastUpdateTime
    type: object
  OrganizationConformancePackDetailedStatus:
    description: >-
      Organization conformance pack creation or deletion status in each member
      account. This includes the name of the conformance pack, the status, error
      code and error message when the conformance pack creation or deletion
      failed. 
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit account ID of a member account.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The name of conformance pack deployed in the member account.
      ErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error code that is returned when conformance pack creation or
              deletion failed in the member account. 
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error message indicating that conformance pack account creation
              or deletion has failed due to an error in the member account. 
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The timestamp of the last status update.
      Status:
        allOf:
          - $ref: '#/definitions/OrganizationResourceDetailedStatus'
          - description: >-
              <p>Indicates deployment status for conformance pack in a member
              account. When master account calls
              <code>PutOrganizationConformancePack</code> action for the first
              time, conformance pack status is created in the member account.
              When master account calls
              <code>PutOrganizationConformancePack</code> action for the second
              time, conformance pack status is updated in the member account.
              Conformance pack status is deleted when the master account deletes
              <code>OrganizationConformancePack</code> and disables service
              access for <code>config-multiaccountsetup.amazonaws.com</code>.
              </p> <p> Config sets the state of the conformance pack to:</p>
              <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when conformance pack
              has been created in the member account. </p> </li> <li> <p>
              <code>CREATE_IN_PROGRESS</code> when conformance pack is being
              created in the member account.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> when conformance pack creation has
              failed in the member account.</p> </li> <li> <p>
              <code>DELETE_FAILED</code> when conformance pack deletion has
              failed in the member account.</p> </li> <li> <p>
              <code>DELETE_IN_PROGRESS</code> when conformance pack is being
              deleted in the member account.</p> </li> <li> <p>
              <code>DELETE_SUCCESSFUL</code> when conformance pack has been
              deleted in the member account. </p> </li> <li> <p>
              <code>UPDATE_SUCCESSFUL</code> when conformance pack has been
              updated in the member account.</p> </li> <li> <p>
              <code>UPDATE_IN_PROGRESS</code> when conformance pack is being
              updated in the member account.</p> </li> <li> <p>
              <code>UPDATE_FAILED</code> when conformance pack deletion has
              failed in the member account.</p> </li> </ul>
    required:
      - AccountId
      - ConformancePackName
      - Status
    type: object
  OrganizationConformancePackDetailedStatuses:
    items:
      $ref: '#/definitions/OrganizationConformancePackDetailedStatus'
    type: array
  OrganizationConformancePackName:
    maxLength: 128
    minLength: 1
    pattern: '[a-zA-Z][-a-zA-Z0-9]*'
    type: string
  OrganizationConformancePackNames:
    items:
      $ref: '#/definitions/OrganizationConformancePackName'
    maxItems: 25
    minItems: 0
    type: array
  OrganizationConformancePackStatus:
    description: >-
      Returns the status for an organization conformance pack in an
      organization.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error code that is returned when organization conformance pack
              creation or deletion has failed in a member account. 
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An error message indicating that organization conformance pack
              creation or deletion failed due to an error. 
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The timestamp of the last update.
      OrganizationConformancePackName:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackName'
          - description: The name that you assign to organization conformance pack.
      Status:
        allOf:
          - $ref: '#/definitions/OrganizationResourceStatus'
          - description: >-
              <p>Indicates deployment status of an organization conformance
              pack. When master account calls PutOrganizationConformancePack for
              the first time, conformance pack status is created in all the
              member accounts. When master account calls
              PutOrganizationConformancePack for the second time, conformance
              pack status is updated in all the member accounts. Additionally,
              conformance pack status is updated when one or more member
              accounts join or leave an organization. Conformance pack status is
              deleted when the master account deletes
              OrganizationConformancePack in all the member accounts and
              disables service access for
              <code>config-multiaccountsetup.amazonaws.com</code>.</p> <p>Config
              sets the state of the conformance pack to:</p> <ul> <li> <p>
              <code>CREATE_SUCCESSFUL</code> when an organization conformance
              pack has been successfully created in all the member accounts.
              </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when an
              organization conformance pack creation is in progress.</p> </li>
              <li> <p> <code>CREATE_FAILED</code> when an organization
              conformance pack creation failed in one or more member accounts
              within that organization.</p> </li> <li> <p>
              <code>DELETE_FAILED</code> when an organization conformance pack
              deletion failed in one or more member accounts within that
              organization.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code>
              when an organization conformance pack deletion is in progress.</p>
              </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when an organization
              conformance pack has been successfully deleted from all the member
              accounts.</p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when
              an organization conformance pack has been successfully updated in
              all the member accounts.</p> </li> <li> <p>
              <code>UPDATE_IN_PROGRESS</code> when an organization conformance
              pack update is in progress.</p> </li> <li> <p>
              <code>UPDATE_FAILED</code> when an organization conformance pack
              update failed in one or more member accounts within that
              organization.</p> </li> </ul>
    required:
      - OrganizationConformancePackName
      - Status
    type: object
  OrganizationConformancePackStatuses:
    items:
      $ref: '#/definitions/OrganizationConformancePackStatus'
    type: array
  OrganizationConformancePackTemplateValidationException: {}
  OrganizationConformancePacks:
    items:
      $ref: '#/definitions/OrganizationConformancePack'
    type: array
  OrganizationCustomRuleMetadata:
    description: >-
      An object that specifies organization custom rule metadata such as
      resource type, resource ID of Amazon Web Services resource, Lambda
      function ARN, and organization trigger types that trigger Config to
      evaluate your Amazon Web Services resources against a rule. It also
      provides the frequency with which you want Config to run evaluations for
      the rule if the trigger type is periodic.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256Min0'
          - description: The description that you provide for organization config rule.
      InputParameters:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit2048'
          - description: >-
              A string, in JSON format, that is passed to organization config
              rule Lambda function.
      LambdaFunctionArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The lambda function ARN.
      MaximumExecutionFrequency:
        allOf:
          - $ref: '#/definitions/MaximumExecutionFrequency'
          - description: >-
              <p>The maximum frequency with which Config runs evaluations for a
              rule. Your custom rule is triggered when Config delivers the
              configuration snapshot. For more information, see
              <a>ConfigSnapshotDeliveryProperties</a>.</p> <note> <p>By default,
              rules with a periodic trigger are evaluated every 24 hours. To
              change the frequency, specify a valid value for the
              <code>MaximumExecutionFrequency</code> parameter.</p> </note>
      OrganizationConfigRuleTriggerTypes:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleTriggerTypes'
          - description: >-
              <p>The type of notification that triggers Config to run an
              evaluation for a rule. You can specify the following notification
              types:</p> <ul> <li> <p>
              <code>ConfigurationItemChangeNotification</code> - Triggers an
              evaluation when Config delivers a configuration item as a result
              of a resource change.</p> </li> <li> <p>
              <code>OversizedConfigurationItemChangeNotification</code> -
              Triggers an evaluation when Config delivers an oversized
              configuration item. Config may generate this notification type
              when a resource changes and the notification exceeds the maximum
              size allowed by Amazon SNS.</p> </li> <li> <p>
              <code>ScheduledNotification</code> - Triggers a periodic
              evaluation at the frequency specified for
              <code>MaximumExecutionFrequency</code>.</p> </li> </ul>
      ResourceIdScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit768'
          - description: The ID of the Amazon Web Services resource that was evaluated.
      ResourceTypesScope:
        allOf:
          - $ref: '#/definitions/ResourceTypesScope'
          - description: The type of the Amazon Web Services resource that was evaluated.
      TagKeyScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit128'
          - description: >-
              One part of a key-value pair that make up a tag. A key is a
              general label that acts like a category for more specific tag
              values. 
      TagValueScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The optional part of a key-value pair that make up a tag. A value
              acts as a descriptor within a tag category (key). 
    required:
      - LambdaFunctionArn
      - OrganizationConfigRuleTriggerTypes
    type: object
  OrganizationManagedRuleMetadata:
    description: >-
      An object that specifies organization managed rule metadata such as
      resource type and ID of Amazon Web Services resource along with the rule
      identifier. It also provides the frequency with which you want Config to
      run evaluations for the rule if the trigger type is periodic.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256Min0'
          - description: The description that you provide for organization config rule.
      InputParameters:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit2048'
          - description: >-
              A string, in JSON format, that is passed to organization config
              rule Lambda function.
      MaximumExecutionFrequency:
        allOf:
          - $ref: '#/definitions/MaximumExecutionFrequency'
          - description: >-
              <p>The maximum frequency with which Config runs evaluations for a
              rule. You are using an Config managed rule that is triggered at a
              periodic frequency.</p> <note> <p>By default, rules with a
              periodic trigger are evaluated every 24 hours. To change the
              frequency, specify a valid value for the
              <code>MaximumExecutionFrequency</code> parameter.</p> </note>
      ResourceIdScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit768'
          - description: The ID of the Amazon Web Services resource that was evaluated.
      ResourceTypesScope:
        allOf:
          - $ref: '#/definitions/ResourceTypesScope'
          - description: The type of the Amazon Web Services resource that was evaluated.
      RuleIdentifier:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              For organization config managed rules, a predefined identifier
              from a list. For example, <code>IAM_PASSWORD_POLICY</code> is a
              managed rule. To reference a managed rule, see <a
              href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using
              Config managed rules</a>.
      TagKeyScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit128'
          - description: >-
              One part of a key-value pair that make up a tag. A key is a
              general label that acts like a category for more specific tag
              values. 
      TagValueScope:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The optional part of a key-value pair that make up a tag. A value
              acts as a descriptor within a tag category (key).
    required:
      - RuleIdentifier
    type: object
  OrganizationResourceDetailedStatus:
    enum:
      - CREATE_SUCCESSFUL
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_SUCCESSFUL
      - DELETE_FAILED
      - DELETE_IN_PROGRESS
      - UPDATE_SUCCESSFUL
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    type: string
  OrganizationResourceDetailedStatusFilters:
    description: >-
      Status filter object to filter results based on specific member account ID
      or status type for an organization conformance pack.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the member account within an
              organization.
      Status:
        allOf:
          - $ref: '#/definitions/OrganizationResourceDetailedStatus'
          - description: >-
              <p>Indicates deployment status for conformance pack in a member
              account. When master account calls
              <code>PutOrganizationConformancePack</code> action for the first
              time, conformance pack status is created in the member account.
              When master account calls
              <code>PutOrganizationConformancePack</code> action for the second
              time, conformance pack status is updated in the member account.
              Conformance pack status is deleted when the master account deletes
              <code>OrganizationConformancePack</code> and disables service
              access for <code>config-multiaccountsetup.amazonaws.com</code>.
              </p> <p> Config sets the state of the conformance pack to:</p>
              <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when conformance pack
              has been created in the member account. </p> </li> <li> <p>
              <code>CREATE_IN_PROGRESS</code> when conformance pack is being
              created in the member account.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> when conformance pack creation has
              failed in the member account.</p> </li> <li> <p>
              <code>DELETE_FAILED</code> when conformance pack deletion has
              failed in the member account.</p> </li> <li> <p>
              <code>DELETE_IN_PROGRESS</code> when conformance pack is being
              deleted in the member account.</p> </li> <li> <p>
              <code>DELETE_SUCCESSFUL</code> when conformance pack has been
              deleted in the member account. </p> </li> <li> <p>
              <code>UPDATE_SUCCESSFUL</code> when conformance pack has been
              updated in the member account.</p> </li> <li> <p>
              <code>UPDATE_IN_PROGRESS</code> when conformance pack is being
              updated in the member account.</p> </li> <li> <p>
              <code>UPDATE_FAILED</code> when conformance pack deletion has
              failed in the member account.</p> </li> </ul>
    type: object
  OrganizationResourceStatus:
    enum:
      - CREATE_SUCCESSFUL
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_SUCCESSFUL
      - DELETE_FAILED
      - DELETE_IN_PROGRESS
      - UPDATE_SUCCESSFUL
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    type: string
  OrganizationRuleStatus:
    enum:
      - CREATE_SUCCESSFUL
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_SUCCESSFUL
      - DELETE_FAILED
      - DELETE_IN_PROGRESS
      - UPDATE_SUCCESSFUL
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    type: string
  OversizedConfigurationItemException: {}
  Owner:
    enum:
      - CUSTOM_LAMBDA
      - AWS
    type: string
  PageSizeLimit:
    maximum: 20
    minimum: 0
    type: integer
  ParameterName:
    maxLength: 255
    minLength: 0
    type: string
  ParameterValue:
    maxLength: 4096
    minLength: 0
    type: string
  PendingAggregationRequest:
    description: >-
      An object that represents the account ID and region of an aggregator
      account that is requesting authorization but is not yet authorized.
    properties:
      RequesterAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the account requesting to aggregate
              data.
      RequesterAwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: 'The region requesting to aggregate data. '
    type: object
  PendingAggregationRequestList:
    items:
      $ref: '#/definitions/PendingAggregationRequest'
    type: array
  Percentage:
    maximum: 100
    minimum: 1
    type: integer
  PutAggregationAuthorizationRequest:
    properties:
      AuthorizedAccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the account authorized to aggregate
              data.
      AuthorizedAwsRegion:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region authorized to collect aggregated data.
      Tags:
        allOf:
          - $ref: '#/definitions/TagsList'
          - description: An array of tag object.
    required:
      - AuthorizedAccountId
      - AuthorizedAwsRegion
    title: PutAggregationAuthorizationRequest
    type: object
  PutAggregationAuthorizationResponse:
    properties:
      AggregationAuthorization:
        allOf:
          - $ref: '#/definitions/AggregationAuthorization'
          - description: 'Returns an AggregationAuthorization object. '
    type: object
  PutConfigRuleRequest:
    properties:
      ConfigRule:
        allOf:
          - $ref: '#/definitions/ConfigRule'
          - description: The rule that you want to add to your account.
      Tags:
        allOf:
          - $ref: '#/definitions/TagsList'
          - description: An array of tag object.
    required:
      - ConfigRule
    title: PutConfigRuleRequest
    type: object
  PutConfigurationAggregatorRequest:
    properties:
      AccountAggregationSources:
        allOf:
          - $ref: '#/definitions/AccountAggregationSourceList'
          - description: 'A list of AccountAggregationSource object. '
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      OrganizationAggregationSource:
        allOf:
          - $ref: '#/definitions/OrganizationAggregationSource'
          - description: An OrganizationAggregationSource object.
      Tags:
        allOf:
          - $ref: '#/definitions/TagsList'
          - description: An array of tag object.
    required:
      - ConfigurationAggregatorName
    title: PutConfigurationAggregatorRequest
    type: object
  PutConfigurationAggregatorResponse:
    properties:
      ConfigurationAggregator:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregator'
          - description: Returns a ConfigurationAggregator object.
    type: object
  PutConfigurationRecorderRequest:
    description: The input for the <a>PutConfigurationRecorder</a> action.
    properties:
      ConfigurationRecorder:
        allOf:
          - $ref: '#/definitions/ConfigurationRecorder'
          - description: >-
              The configuration recorder object that records each configuration
              change made to the resources.
    required:
      - ConfigurationRecorder
    title: PutConfigurationRecorderRequest
    type: object
  PutConformancePackRequest:
    properties:
      ConformancePackInputParameters:
        allOf:
          - $ref: '#/definitions/ConformancePackInputParameters'
          - description: A list of <code>ConformancePackInputParameter</code> objects.
      ConformancePackName:
        allOf:
          - $ref: '#/definitions/ConformancePackName'
          - description: Name of the conformance pack you want to create.
      DeliveryS3Bucket:
        allOf:
          - $ref: '#/definitions/DeliveryS3Bucket'
          - description: >-
              <p>The name of the Amazon S3 bucket where Config stores
              conformance pack templates.</p> <note> <p>This field is
              optional.</p> </note>
      DeliveryS3KeyPrefix:
        allOf:
          - $ref: '#/definitions/DeliveryS3KeyPrefix'
          - description: >-
              <p>The prefix for the Amazon S3 bucket. </p> <note> <p>This field
              is optional.</p> </note>
      TemplateBody:
        allOf:
          - $ref: '#/definitions/TemplateBody'
          - description: >-
              <p>A string containing full conformance pack template body.
              Structure containing the template body with a minimum length of 1
              byte and a maximum length of 51,200 bytes.</p> <note> <p>You can
              only use a YAML template with one resource type, that is, config
              rule and a remediation action. </p> </note>
      TemplateS3Uri:
        allOf:
          - $ref: '#/definitions/TemplateS3Uri'
          - description: >-
              <p>Location of file containing the template body
              (<code>s3://bucketname/prefix</code>). The uri must point to the
              conformance pack template (max size: 300 KB) that is located in an
              Amazon S3 bucket in the same region as the conformance pack. </p>
              <note> <p>You must have access to read Amazon S3 bucket.</p>
              </note>
    required:
      - ConformancePackName
    title: PutConformancePackRequest
    type: object
  PutConformancePackResponse:
    properties:
      ConformancePackArn:
        allOf:
          - $ref: '#/definitions/ConformancePackArn'
          - description: ARN of the conformance pack.
    type: object
  PutDeliveryChannelRequest:
    description: The input for the <a>PutDeliveryChannel</a> action.
    properties:
      DeliveryChannel:
        allOf:
          - $ref: '#/definitions/DeliveryChannel'
          - description: >-
              The configuration delivery channel object that delivers the
              configuration information to an Amazon S3 bucket and to an Amazon
              SNS topic.
    required:
      - DeliveryChannel
    title: PutDeliveryChannelRequest
    type: object
  PutEvaluationsRequest:
    description: <p/>
    properties:
      Evaluations:
        allOf:
          - $ref: '#/definitions/Evaluations'
          - description: >-
              The assessments that the Lambda function performs. Each evaluation
              identifies an Amazon Web Services resource and indicates whether
              it complies with the Config rule that invokes the Lambda function.
      ResultToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An encrypted token that associates an evaluation with an Config
              rule. Identifies the rule and the event that triggered the
              evaluation.
      TestMode:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Use this parameter to specify a test run for
              <code>PutEvaluations</code>. You can verify whether your Lambda
              function will deliver evaluation results to Config. No updates
              occur to your existing evaluations, and evaluation results are not
              sent to Config.</p> <note> <p>When <code>TestMode</code> is
              <code>true</code>, <code>PutEvaluations</code> doesn't require a
              valid value for the <code>ResultToken</code> parameter, but the
              value cannot be null.</p> </note>
    required:
      - ResultToken
    title: PutEvaluationsRequest
    type: object
  PutEvaluationsResponse:
    description: <p/>
    properties:
      FailedEvaluations:
        allOf:
          - $ref: '#/definitions/Evaluations'
          - description: Requests that failed because of a client or server error.
    type: object
  PutExternalEvaluationRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
      ExternalEvaluation:
        allOf:
          - $ref: '#/definitions/ExternalEvaluation'
          - description: >-
              An <code>ExternalEvaluation</code> object that provides details
              about compliance.
    required:
      - ConfigRuleName
      - ExternalEvaluation
    title: PutExternalEvaluationRequest
    type: object
  PutExternalEvaluationResponse:
    properties: {}
    type: object
  PutOrganizationConfigRuleRequest:
    properties:
      ExcludedAccounts:
        allOf:
          - $ref: '#/definitions/ExcludedAccounts'
          - description: >-
              A comma-separated list of accounts that you want to exclude from
              an organization config rule.
      OrganizationConfigRuleName:
        allOf:
          - $ref: '#/definitions/OrganizationConfigRuleName'
          - description: The name that you assign to an organization config rule.
      OrganizationCustomRuleMetadata:
        allOf:
          - $ref: '#/definitions/OrganizationCustomRuleMetadata'
          - description: An <code>OrganizationCustomRuleMetadata</code> object.
      OrganizationManagedRuleMetadata:
        allOf:
          - $ref: '#/definitions/OrganizationManagedRuleMetadata'
          - description: 'An <code>OrganizationManagedRuleMetadata</code> object. '
    required:
      - OrganizationConfigRuleName
    title: PutOrganizationConfigRuleRequest
    type: object
  PutOrganizationConfigRuleResponse:
    properties:
      OrganizationConfigRuleArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The Amazon Resource Name (ARN) of an organization config rule.
    type: object
  PutOrganizationConformancePackRequest:
    properties:
      ConformancePackInputParameters:
        allOf:
          - $ref: '#/definitions/ConformancePackInputParameters'
          - description: A list of <code>ConformancePackInputParameter</code> objects.
      DeliveryS3Bucket:
        allOf:
          - $ref: '#/definitions/DeliveryS3Bucket'
          - description: >-
              <p>The name of the Amazon S3 bucket where Config stores
              conformance pack templates.</p> <note> <p>This field is optional.
              If used, it must be prefixed with
              <code>awsconfigconforms</code>.</p> </note>
      DeliveryS3KeyPrefix:
        allOf:
          - $ref: '#/definitions/DeliveryS3KeyPrefix'
          - description: >-
              <p>The prefix for the Amazon S3 bucket.</p> <note> <p>This field
              is optional.</p> </note>
      ExcludedAccounts:
        allOf:
          - $ref: '#/definitions/ExcludedAccounts'
          - description: >-
              A list of Amazon Web Services accounts to be excluded from an
              organization conformance pack while deploying a conformance pack.
      OrganizationConformancePackName:
        allOf:
          - $ref: '#/definitions/OrganizationConformancePackName'
          - description: Name of the organization conformance pack you want to create.
      TemplateBody:
        allOf:
          - $ref: '#/definitions/TemplateBody'
          - description: >-
              A string containing full conformance pack template body. Structure
              containing the template body with a minimum length of 1 byte and a
              maximum length of 51,200 bytes.
      TemplateS3Uri:
        allOf:
          - $ref: '#/definitions/TemplateS3Uri'
          - description: >-
              <p>Location of file containing the template body. The uri must
              point to the conformance pack template (max size: 300 KB).</p>
              <note> <p>You must have access to read Amazon S3 bucket.</p>
              </note>
    required:
      - OrganizationConformancePackName
    title: PutOrganizationConformancePackRequest
    type: object
  PutOrganizationConformancePackResponse:
    properties:
      OrganizationConformancePackArn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: ARN of the organization conformance pack.
    type: object
  PutRemediationConfigurationsRequest:
    properties:
      RemediationConfigurations:
        allOf:
          - $ref: '#/definitions/RemediationConfigurations'
          - description: A list of remediation configuration objects.
    required:
      - RemediationConfigurations
    title: PutRemediationConfigurationsRequest
    type: object
  PutRemediationConfigurationsResponse:
    properties:
      FailedBatches:
        allOf:
          - $ref: '#/definitions/FailedRemediationBatches'
          - description: Returns a list of failed remediation batch objects.
    type: object
  PutRemediationExceptionsRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The name of the Config rule for which you want to create
              remediation exception.
      ExpirationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The exception is automatically deleted after the expiration date.
      Message:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: The message contains an explanation of the exception.
      ResourceKeys:
        allOf:
          - $ref: '#/definitions/RemediationExceptionResourceKeys'
          - description: >-
              An exception list of resource exception keys to be processed with
              the current request. Config adds exception for each resource key.
              For example, Config adds 3 exceptions for 3 resource keys. 
    required:
      - ConfigRuleName
      - ResourceKeys
    title: PutRemediationExceptionsRequest
    type: object
  PutRemediationExceptionsResponse:
    properties:
      FailedBatches:
        allOf:
          - $ref: '#/definitions/FailedRemediationExceptionBatches'
          - description: >-
              Returns a list of failed remediation exceptions batch objects.
              Each object in the batch consists of a list of failed items and
              failure messages.
    type: object
  PutResourceConfigRequest:
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/Configuration'
          - description: >-
              <p>The configuration object of the resource in valid JSON format.
              It must match the schema registered with CloudFormation.</p>
              <note> <p>The configuration JSON must not exceed 64 KB.</p>
              </note>
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Unique identifier of the resource.
      ResourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: Name of the resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceTypeString'
          - description: >-
              <p>The type of the resource. The custom resource type must be
              registered with CloudFormation. </p> <note> <p>You cannot use the
              organization names “amzn”, “amazon”, “alexa”, “custom” with custom
              resource types. It is the first part of the ResourceType up to the
              first ::.</p> </note>
      SchemaVersionId:
        allOf:
          - $ref: '#/definitions/SchemaVersionId'
          - description: >-
              Version of the schema registered for the ResourceType in
              CloudFormation.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: Tags associated with the resource.
    required:
      - ResourceType
      - SchemaVersionId
      - ResourceId
      - Configuration
    title: PutResourceConfigRequest
    type: object
  PutRetentionConfigurationRequest:
    properties:
      RetentionPeriodInDays:
        allOf:
          - $ref: '#/definitions/RetentionPeriodInDays'
          - description: >-
              <p>Number of days Config stores your historical information.</p>
              <note> <p>Currently, only applicable to the configuration item
              history.</p> </note>
    required:
      - RetentionPeriodInDays
    title: PutRetentionConfigurationRequest
    type: object
  PutRetentionConfigurationResponse:
    properties:
      RetentionConfiguration:
        allOf:
          - $ref: '#/definitions/RetentionConfiguration'
          - description: Returns a retention configuration object.
    type: object
  PutStoredQueryRequest:
    properties:
      StoredQuery:
        allOf:
          - $ref: '#/definitions/StoredQuery'
          - description: >-
              <p>A list of <code>StoredQuery</code> objects. The mandatory
              fields are <code>QueryName</code> and <code>Expression</code>.</p>
              <note> <p>When you are creating a query, you must provide a query
              name and an expression. When you are updating a query, you must
              provide a query name but updating the description is optional.</p>
              </note>
      Tags:
        allOf:
          - $ref: '#/definitions/TagsList'
          - description: A list of <code>Tags</code> object.
    required:
      - StoredQuery
    title: PutStoredQueryRequest
    type: object
  PutStoredQueryResponse:
    properties:
      QueryArn:
        allOf:
          - $ref: '#/definitions/QueryArn'
          - description: >-
              Amazon Resource Name (ARN) of the query. For example,
              arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
    type: object
  QueryArn:
    maxLength: 500
    minLength: 1
    pattern: >-
      ^arn:aws[a-z\-]*:config:[a-z\-\d]+:\d+:stored-query/[a-zA-Z0-9-_]+/query-[a-zA-Z\d-_/]+$
    type: string
  QueryDescription:
    maxLength: 256
    minLength: 0
    pattern: '[\s\S]*'
    type: string
  QueryExpression:
    maxLength: 4096
    minLength: 1
    pattern: '[\s\S]*'
    type: string
  QueryId:
    maxLength: 36
    minLength: 1
    pattern: ^\S+$
    type: string
  QueryInfo:
    description: Details about the query.
    properties:
      SelectFields:
        allOf:
          - $ref: '#/definitions/FieldInfoList'
          - description: Returns a <code>FieldInfo</code> object.
    type: object
  QueryName:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9-_]+$'
    type: string
  RecorderName:
    maxLength: 256
    minLength: 1
    type: string
  RecorderStatus:
    enum:
      - Pending
      - Success
      - Failure
    type: string
  RecordingGroup:
    description: >-
      <p>Specifies the types of Amazon Web Services resource for which Config
      records configuration changes.</p> <p>In the recording group, you specify
      whether all supported types or specific types of resources are
      recorded.</p> <p>By default, Config records configuration changes for all
      supported types of regional resources that Config discovers in the region
      in which it is running. Regional resources are tied to a region and can be
      used only in that region. Examples of regional resources are EC2 instances
      and EBS volumes.</p> <p>You can also have Config record configuration
      changes for supported types of global resources (for example, IAM
      resources). Global resources are not tied to an individual region and can
      be used in all regions.</p> <important> <p>The configuration details for
      any global resource are the same in all regions. If you customize Config
      in multiple regions to record global resources, it will create multiple
      configuration items each time a global resource changes: one configuration
      item for each region. These configuration items will contain identical
      data. To prevent duplicate configuration items, you should consider
      customizing Config in only one region to record global resources, unless
      you want the configuration items to be available in multiple regions.</p>
      </important> <p>If you don't want Config to record all resources, you can
      specify which types of resources it will record with the
      <code>resourceTypes</code> parameter.</p> <p>For a list of supported
      resource types, see <a
      href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
      Resource Types</a>.</p> <p>For more information, see <a
      href="https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html">Selecting
      Which Resources Config Records</a>.</p>
    properties:
      allSupported:
        allOf:
          - $ref: '#/definitions/AllSupported'
          - description: >-
              <p>Specifies whether Config records configuration changes for
              every supported type of regional resource.</p> <p>If you set this
              option to <code>true</code>, when Config adds support for a new
              type of regional resource, it starts recording resources of that
              type automatically.</p> <p>If you set this option to
              <code>true</code>, you cannot enumerate a list of
              <code>resourceTypes</code>.</p>
      includeGlobalResourceTypes:
        allOf:
          - $ref: '#/definitions/IncludeGlobalResourceTypes'
          - description: >-
              <p>Specifies whether Config includes all supported types of global
              resources (for example, IAM resources) with the resources that it
              records.</p> <p>Before you can set this option to
              <code>true</code>, you must set the <code>allSupported</code>
              option to <code>true</code>.</p> <p>If you set this option to
              <code>true</code>, when Config adds support for a new type of
              global resource, it starts recording resources of that type
              automatically.</p> <p>The configuration details for any global
              resource are the same in all regions. To prevent duplicate
              configuration items, you should consider customizing Config in
              only one region to record global resources.</p>
      resourceTypes:
        allOf:
          - $ref: '#/definitions/ResourceTypeList'
          - description: >-
              <p>A comma-separated list that specifies the types of Amazon Web
              Services resources for which Config records configuration changes
              (for example, <code>AWS::EC2::Instance</code> or
              <code>AWS::CloudTrail::Trail</code>).</p> <p>To record all
              configuration changes, you must set the <code>allSupported</code>
              option to <code>true</code>.</p> <p>If you set this option to
              <code>false</code>, when Config adds support for a new type of
              resource, it will not record resources of that type unless you
              manually add that type to your recording group.</p> <p>For a list
              of valid <code>resourceTypes</code> values, see the
              <b>resourceType Value</b> column in <a
              href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
              Amazon Web Services resource Types</a>.</p>
    type: object
  ReevaluateConfigRuleNames:
    items:
      $ref: '#/definitions/ConfigRuleName'
    maxItems: 25
    minItems: 1
    type: array
  RelatedEvent:
    type: string
  RelatedEventList:
    items:
      $ref: '#/definitions/RelatedEvent'
    type: array
  Relationship:
    description: The relationship of the related resource to the main resource.
    properties:
      relationshipName:
        allOf:
          - $ref: '#/definitions/RelationshipName'
          - description: The type of relationship with the related resource.
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the related resource (for example,
              <code>sg-xxxxxx</code>).
      resourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: 'The custom name of the related resource, if available.'
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type of the related resource.
    type: object
  RelationshipList:
    items:
      $ref: '#/definitions/Relationship'
    type: array
  RelationshipName:
    type: string
  RemediationConfiguration:
    description: >-
      An object that represents the details about the remediation configuration
      that includes the remediation action, parameters, and data to execute the
      action.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: Amazon Resource Name (ARN) of remediation configuration.
      Automatic:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: The remediation is triggered automatically.
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
      CreatedByService:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: >-
              Name of the service that owns the service linked rule, if
              applicable.
      ExecutionControls:
        allOf:
          - $ref: '#/definitions/ExecutionControls'
          - description: An ExecutionControls object.
      MaximumAutomaticAttempts:
        allOf:
          - $ref: '#/definitions/AutoRemediationAttempts'
          - description: >-
              <p>The maximum number of failed attempts for auto-remediation. If
              you do not select a number, the default is 5.</p> <p>For example,
              if you specify MaximumAutomaticAttempts as 5 with
              RetryAttemptSeconds as 50 seconds, Config will put a
              RemediationException on your behalf for the failing resource after
              the 5th failed attempt within 50 seconds.</p>
      Parameters:
        allOf:
          - $ref: '#/definitions/RemediationParameters'
          - description: An object of the RemediationParameterValue.
      ResourceType:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The type of a resource. '
      RetryAttemptSeconds:
        allOf:
          - $ref: '#/definitions/AutoRemediationAttemptSeconds'
          - description: >-
              <p>Maximum time in seconds that Config runs auto-remediation. If
              you do not select a number, the default is 60 seconds. </p> <p>For
              example, if you specify RetryAttemptSeconds as 50 seconds and
              MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
              times within 50 seconds before throwing an exception.</p>
      TargetId:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: Target ID is the name of the public document.
      TargetType:
        allOf:
          - $ref: '#/definitions/RemediationTargetType'
          - description: >-
              The type of the target. Target executes remediation. For example,
              SSM document.
      TargetVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>Version of the target. For example, version of the SSM
              document.</p> <note> <p>If you make backward incompatible changes
              to the SSM document, you must call PutRemediationConfiguration API
              again to ensure the remediations can run.</p> </note>
    required:
      - ConfigRuleName
      - TargetType
      - TargetId
    type: object
  RemediationConfigurations:
    items:
      $ref: '#/definitions/RemediationConfiguration'
    maxItems: 25
    minItems: 0
    type: array
  RemediationException:
    description: >-
      An object that represents the details about the remediation exception. The
      details include the rule name, an explanation of an exception, the time
      when the exception will be deleted, the resource ID, and resource type. 
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: The name of the Config rule.
      ExpirationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when the remediation exception will be deleted.
      Message:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: An explanation of an remediation exception.
      ResourceId:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: 'The ID of the resource (for example., sg-xxxxxx).'
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of a resource.
    required:
      - ConfigRuleName
      - ResourceType
      - ResourceId
    type: object
  RemediationExceptionResourceKey:
    description: >-
      The details that identify a resource within Config, including the resource
      type and resource ID. 
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit1024'
          - description: 'The ID of the resource (for example., sg-xxxxxx).'
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: The type of a resource.
    type: object
  RemediationExceptionResourceKeys:
    items:
      $ref: '#/definitions/RemediationExceptionResourceKey'
    maxItems: 100
    minItems: 1
    type: array
  RemediationExceptions:
    items:
      $ref: '#/definitions/RemediationException'
    maxItems: 25
    minItems: 0
    type: array
  RemediationExecutionState:
    enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    type: string
  RemediationExecutionStatus:
    description: >-
      Provides details of the current status of the invoked remediation action
      for that resource.
    properties:
      InvocationTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: Start time when the remediation was executed.
      LastUpdatedTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when the remediation execution was last updated.
      ResourceKey:
        $ref: '#/definitions/ResourceKey'
      State:
        allOf:
          - $ref: '#/definitions/RemediationExecutionState'
          - description: ENUM of the values.
      StepDetails:
        allOf:
          - $ref: '#/definitions/RemediationExecutionSteps'
          - description: Details of every step.
    type: object
  RemediationExecutionStatuses:
    items:
      $ref: '#/definitions/RemediationExecutionStatus'
    type: array
  RemediationExecutionStep:
    description: Name of the step from the SSM document.
    properties:
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: An error message if the step was interrupted during execution.
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The details of the step.
      StartTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when the step started.
      State:
        allOf:
          - $ref: '#/definitions/RemediationExecutionStepState'
          - description: The valid status of the step.
      StopTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The time when the step stopped.
    type: object
  RemediationExecutionStepState:
    enum:
      - SUCCEEDED
      - PENDING
      - FAILED
    type: string
  RemediationExecutionSteps:
    items:
      $ref: '#/definitions/RemediationExecutionStep'
    type: array
  RemediationInProgressException: {}
  RemediationParameterValue:
    description: >-
      The value is either a dynamic (resource) value or a static value. You must
      select either a dynamic value or a static value.
    properties:
      ResourceValue:
        allOf:
          - $ref: '#/definitions/ResourceValue'
          - description: The value is dynamic and changes at run-time.
      StaticValue:
        allOf:
          - $ref: '#/definitions/StaticValue'
          - description: The value is static and does not change at run-time.
    type: object
  RemediationParameters:
    additionalProperties:
      $ref: '#/definitions/RemediationParameterValue'
    maxProperties: 25
    minProperties: 0
    type: object
  RemediationTargetType:
    enum:
      - SSM_DOCUMENT
    type: string
  ResourceConcurrentModificationException: {}
  ResourceCount:
    description: An object that contains the resource type and the number of resources.
    properties:
      count:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The number of resources.
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The resource type (for example,
              <code>"AWS::EC2::Instance"</code>).
    type: object
  ResourceCountFilters:
    description: 'Filters the resource count based on account ID, region, and resource type.'
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit ID of the account.
      Region:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The region where the account is located.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The type of the Amazon Web Services resource.
    type: object
  ResourceCountGroupKey:
    enum:
      - RESOURCE_TYPE
      - ACCOUNT_ID
      - AWS_REGION
    type: string
  ResourceCounts:
    items:
      $ref: '#/definitions/ResourceCount'
    type: array
  ResourceCreationTime:
    format: date-time
    type: string
  ResourceDeletionTime:
    format: date-time
    type: string
  ResourceFilters:
    description: >-
      Filters the results by resource account ID, region, resource ID, and
      resource name.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The 12-digit source account ID.
      Region:
        allOf:
          - $ref: '#/definitions/AwsRegion'
          - description: The source region.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the resource.
      ResourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the resource.
    type: object
  ResourceId:
    maxLength: 768
    minLength: 1
    type: string
  ResourceIdList:
    items:
      $ref: '#/definitions/ResourceId'
    type: array
  ResourceIdentifier:
    description: >-
      The details that identify a resource that is discovered by Config,
      including the resource type, ID, and (if available) the custom resource
      name.
    properties:
      resourceDeletionTime:
        allOf:
          - $ref: '#/definitions/ResourceDeletionTime'
          - description: The time that the resource was deleted.
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the resource (for example, <code>sg-xxxxxx</code>).'
      resourceName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The custom name of the resource (if available).
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The type of resource.
    type: object
  ResourceIdentifierList:
    items:
      $ref: '#/definitions/ResourceIdentifier'
    type: array
  ResourceIdentifiersList:
    items:
      $ref: '#/definitions/AggregateResourceIdentifier'
    maxItems: 100
    minItems: 1
    type: array
  ResourceInUseException: {}
  ResourceKey:
    description: >-
      The details that identify a resource within Config, including the resource
      type and resource ID.
    properties:
      resourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the resource (for example., sg-xxxxxx). '
      resourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type.
    required:
      - resourceType
      - resourceId
    type: object
  ResourceKeys:
    items:
      $ref: '#/definitions/ResourceKey'
    maxItems: 100
    minItems: 1
    type: array
  ResourceName:
    type: string
  ResourceNotDiscoveredException: {}
  ResourceNotFoundException: {}
  ResourceType:
    enum:
      - 'AWS::EC2::CustomerGateway'
      - 'AWS::EC2::EIP'
      - 'AWS::EC2::Host'
      - 'AWS::EC2::Instance'
      - 'AWS::EC2::InternetGateway'
      - 'AWS::EC2::NetworkAcl'
      - 'AWS::EC2::NetworkInterface'
      - 'AWS::EC2::RouteTable'
      - 'AWS::EC2::SecurityGroup'
      - 'AWS::EC2::Subnet'
      - 'AWS::CloudTrail::Trail'
      - 'AWS::EC2::Volume'
      - 'AWS::EC2::VPC'
      - 'AWS::EC2::VPNConnection'
      - 'AWS::EC2::VPNGateway'
      - 'AWS::EC2::RegisteredHAInstance'
      - 'AWS::EC2::NatGateway'
      - 'AWS::EC2::EgressOnlyInternetGateway'
      - 'AWS::EC2::VPCEndpoint'
      - 'AWS::EC2::VPCEndpointService'
      - 'AWS::EC2::FlowLog'
      - 'AWS::EC2::VPCPeeringConnection'
      - 'AWS::Elasticsearch::Domain'
      - 'AWS::IAM::Group'
      - 'AWS::IAM::Policy'
      - 'AWS::IAM::Role'
      - 'AWS::IAM::User'
      - 'AWS::ElasticLoadBalancingV2::LoadBalancer'
      - 'AWS::ACM::Certificate'
      - 'AWS::RDS::DBInstance'
      - 'AWS::RDS::DBSubnetGroup'
      - 'AWS::RDS::DBSecurityGroup'
      - 'AWS::RDS::DBSnapshot'
      - 'AWS::RDS::DBCluster'
      - 'AWS::RDS::DBClusterSnapshot'
      - 'AWS::RDS::EventSubscription'
      - 'AWS::S3::Bucket'
      - 'AWS::S3::AccountPublicAccessBlock'
      - 'AWS::Redshift::Cluster'
      - 'AWS::Redshift::ClusterSnapshot'
      - 'AWS::Redshift::ClusterParameterGroup'
      - 'AWS::Redshift::ClusterSecurityGroup'
      - 'AWS::Redshift::ClusterSubnetGroup'
      - 'AWS::Redshift::EventSubscription'
      - 'AWS::SSM::ManagedInstanceInventory'
      - 'AWS::CloudWatch::Alarm'
      - 'AWS::CloudFormation::Stack'
      - 'AWS::ElasticLoadBalancing::LoadBalancer'
      - 'AWS::AutoScaling::AutoScalingGroup'
      - 'AWS::AutoScaling::LaunchConfiguration'
      - 'AWS::AutoScaling::ScalingPolicy'
      - 'AWS::AutoScaling::ScheduledAction'
      - 'AWS::DynamoDB::Table'
      - 'AWS::CodeBuild::Project'
      - 'AWS::WAF::RateBasedRule'
      - 'AWS::WAF::Rule'
      - 'AWS::WAF::RuleGroup'
      - 'AWS::WAF::WebACL'
      - 'AWS::WAFRegional::RateBasedRule'
      - 'AWS::WAFRegional::Rule'
      - 'AWS::WAFRegional::RuleGroup'
      - 'AWS::WAFRegional::WebACL'
      - 'AWS::CloudFront::Distribution'
      - 'AWS::CloudFront::StreamingDistribution'
      - 'AWS::Lambda::Function'
      - 'AWS::NetworkFirewall::Firewall'
      - 'AWS::NetworkFirewall::FirewallPolicy'
      - 'AWS::NetworkFirewall::RuleGroup'
      - 'AWS::ElasticBeanstalk::Application'
      - 'AWS::ElasticBeanstalk::ApplicationVersion'
      - 'AWS::ElasticBeanstalk::Environment'
      - 'AWS::WAFv2::WebACL'
      - 'AWS::WAFv2::RuleGroup'
      - 'AWS::WAFv2::IPSet'
      - 'AWS::WAFv2::RegexPatternSet'
      - 'AWS::WAFv2::ManagedRuleSet'
      - 'AWS::XRay::EncryptionConfig'
      - 'AWS::SSM::AssociationCompliance'
      - 'AWS::SSM::PatchCompliance'
      - 'AWS::Shield::Protection'
      - 'AWS::ShieldRegional::Protection'
      - 'AWS::Config::ConformancePackCompliance'
      - 'AWS::Config::ResourceCompliance'
      - 'AWS::ApiGateway::Stage'
      - 'AWS::ApiGateway::RestApi'
      - 'AWS::ApiGatewayV2::Stage'
      - 'AWS::ApiGatewayV2::Api'
      - 'AWS::CodePipeline::Pipeline'
      - 'AWS::ServiceCatalog::CloudFormationProvisionedProduct'
      - 'AWS::ServiceCatalog::CloudFormationProduct'
      - 'AWS::ServiceCatalog::Portfolio'
      - 'AWS::SQS::Queue'
      - 'AWS::KMS::Key'
      - 'AWS::QLDB::Ledger'
      - 'AWS::SecretsManager::Secret'
      - 'AWS::SNS::Topic'
      - 'AWS::SSM::FileData'
      - 'AWS::Backup::BackupPlan'
      - 'AWS::Backup::BackupSelection'
      - 'AWS::Backup::BackupVault'
      - 'AWS::Backup::RecoveryPoint'
      - 'AWS::ECR::Repository'
      - 'AWS::ECS::Cluster'
      - 'AWS::ECS::Service'
      - 'AWS::ECS::TaskDefinition'
      - 'AWS::EFS::AccessPoint'
      - 'AWS::EFS::FileSystem'
      - 'AWS::EKS::Cluster'
    type: string
  ResourceTypeList:
    items:
      $ref: '#/definitions/ResourceType'
    type: array
  ResourceTypeString:
    maxLength: 196
    minLength: 1
    type: string
  ResourceTypes:
    items:
      $ref: '#/definitions/StringWithCharLimit256'
    maxItems: 20
    minItems: 0
    type: array
  ResourceTypesScope:
    items:
      $ref: '#/definitions/StringWithCharLimit256'
    maxItems: 100
    minItems: 0
    type: array
  ResourceValue:
    description: The dynamic value of the resource.
    properties:
      Value:
        allOf:
          - $ref: '#/definitions/ResourceValueType'
          - description: The value is a resource ID.
    required:
      - Value
    type: object
  ResourceValueType:
    enum:
      - RESOURCE_ID
    type: string
  Results:
    items:
      $ref: '#/definitions/String'
    type: array
  RetentionConfiguration:
    description: >-
      An object with the name of the retention configuration and the retention
      period in days. The object stores the configuration for data retention in
      Config.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RetentionConfigurationName'
          - description: The name of the retention configuration object.
      RetentionPeriodInDays:
        allOf:
          - $ref: '#/definitions/RetentionPeriodInDays'
          - description: >-
              <p>Number of days Config stores your historical information.</p>
              <note> <p>Currently, only applicable to the configuration item
              history.</p> </note>
    required:
      - Name
      - RetentionPeriodInDays
    type: object
  RetentionConfigurationList:
    items:
      $ref: '#/definitions/RetentionConfiguration'
    type: array
  RetentionConfigurationName:
    maxLength: 256
    minLength: 1
    pattern: '[\w\-]+'
    type: string
  RetentionConfigurationNameList:
    items:
      $ref: '#/definitions/RetentionConfigurationName'
    maxItems: 1
    minItems: 0
    type: array
  RetentionPeriodInDays:
    maximum: 2557
    minimum: 30
    type: integer
  RuleLimit:
    maximum: 50
    minimum: 0
    type: integer
  SchemaVersionId:
    maxLength: 128
    minLength: 1
    pattern: '[A-Za-z0-9-]+'
    type: string
  Scope:
    description: >-
      Defines which resources trigger an evaluation for an Config rule. The
      scope can include one or more resource types, a combination of a tag key
      and value, or a combination of one resource type and one resource ID.
      Specify a scope to constrain which resources trigger an evaluation for a
      rule. Otherwise, evaluations for the rule are triggered when any resource
      in your recording group changes in configuration.
    properties:
      ComplianceResourceId:
        allOf:
          - $ref: '#/definitions/BaseResourceId'
          - description: >-
              The ID of the only Amazon Web Services resource that you want to
              trigger an evaluation for the rule. If you specify a resource ID,
              you must specify one resource type for
              <code>ComplianceResourceTypes</code>.
      ComplianceResourceTypes:
        allOf:
          - $ref: '#/definitions/ComplianceResourceTypes'
          - description: >-
              The resource types of only those Amazon Web Services resources
              that you want to trigger an evaluation for the rule. You can only
              specify one type if you also specify a resource ID for
              <code>ComplianceResourceId</code>.
      TagKey:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit128'
          - description: >-
              The tag key that is applied to only those Amazon Web Services
              resources that you want to trigger an evaluation for the rule.
      TagValue:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              The tag value applied to only those Amazon Web Services resources
              that you want to trigger an evaluation for the rule. If you
              specify a value for <code>TagValue</code>, you must also specify a
              value for <code>TagKey</code>.
    type: object
  SelectAggregateResourceConfigRequest:
    properties:
      ConfigurationAggregatorName:
        allOf:
          - $ref: '#/definitions/ConfigurationAggregatorName'
          - description: The name of the configuration aggregator.
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: 'The SQL query SELECT command. '
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: 'The maximum number of query results returned on each page. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: >-
              The maximum number of query results returned on each page. Config
              also allows the Limit request parameter.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The nextToken string returned in a previous request that you use
              to request the next page of results in a paginated response. 
    required:
      - Expression
      - ConfigurationAggregatorName
    title: SelectAggregateResourceConfigRequest
    type: object
  SelectAggregateResourceConfigResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The nextToken string returned in a previous request that you use
              to request the next page of results in a paginated response. 
      QueryInfo:
        $ref: '#/definitions/QueryInfo'
      Results:
        allOf:
          - $ref: '#/definitions/Results'
          - description: Returns the results for the SQL query.
    type: object
  SelectResourceConfigRequest:
    properties:
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: The SQL query <code>SELECT</code> command.
      Limit:
        allOf:
          - $ref: '#/definitions/Limit'
          - description: 'The maximum number of query results returned on each page. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response. 
    required:
      - Expression
    title: SelectResourceConfigRequest
    type: object
  SelectResourceConfigResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> string returned in a previous request
              that you use to request the next page of results in a paginated
              response. 
      QueryInfo:
        allOf:
          - $ref: '#/definitions/QueryInfo'
          - description: Returns the <code>QueryInfo</code> object.
      Results:
        allOf:
          - $ref: '#/definitions/Results'
          - description: Returns the results for the SQL query.
    type: object
  Source:
    description: >-
      Provides the Config rule owner (Amazon Web Services or customer), the rule
      identifier, and the events that trigger the evaluation of your Amazon Web
      Services resources.
    properties:
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: >-
              Indicates whether Amazon Web Services or the customer owns and
              manages the Config rule.
      SourceDetails:
        allOf:
          - $ref: '#/definitions/SourceDetails'
          - description: >-
              Provides the source and type of the event that causes Config to
              evaluate your Amazon Web Services resources.
      SourceIdentifier:
        allOf:
          - $ref: '#/definitions/StringWithCharLimit256'
          - description: >-
              <p>For Config managed rules, a predefined identifier from a list.
              For example, <code>IAM_PASSWORD_POLICY</code> is a managed rule.
              To reference a managed rule, see <a
              href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using
              Config managed rules</a>.</p> <p>For custom rules, the identifier
              is the Amazon Resource Name (ARN) of the rule's Lambda function,
              such as
              <code>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</code>.</p>
    required:
      - Owner
      - SourceIdentifier
    type: object
  SourceDetail:
    description: >-
      Provides the source and the message types that trigger Config to evaluate
      your Amazon Web Services resources against a rule. It also provides the
      frequency with which you want Config to run evaluations for the rule if
      the trigger type is periodic. You can specify the parameter values for
      <code>SourceDetail</code> only for custom rules. 
    properties:
      EventSource:
        allOf:
          - $ref: '#/definitions/EventSource'
          - description: >-
              The source of the event, such as an Amazon Web Services service,
              that triggers Config to evaluate your Amazon Web Services
              resources.
      MaximumExecutionFrequency:
        allOf:
          - $ref: '#/definitions/MaximumExecutionFrequency'
          - description: >-
              <p>The frequency at which you want Config to run evaluations for a
              custom rule with a periodic trigger. If you specify a value for
              <code>MaximumExecutionFrequency</code>, then
              <code>MessageType</code> must use the
              <code>ScheduledNotification</code> value.</p> <note> <p>By
              default, rules with a periodic trigger are evaluated every 24
              hours. To change the frequency, specify a valid value for the
              <code>MaximumExecutionFrequency</code> parameter.</p> <p>Based on
              the valid value you choose, Config runs evaluations once for each
              valid value. For example, if you choose <code>Three_Hours</code>,
              Config runs evaluations once every three hours. In this case,
              <code>Three_Hours</code> is the frequency of this rule. </p>
              </note>
      MessageType:
        allOf:
          - $ref: '#/definitions/MessageType'
          - description: >-
              <p>The type of notification that triggers Config to run an
              evaluation for a rule. You can specify the following notification
              types:</p> <ul> <li> <p>
              <code>ConfigurationItemChangeNotification</code> - Triggers an
              evaluation when Config delivers a configuration item as a result
              of a resource change.</p> </li> <li> <p>
              <code>OversizedConfigurationItemChangeNotification</code> -
              Triggers an evaluation when Config delivers an oversized
              configuration item. Config may generate this notification type
              when a resource changes and the notification exceeds the maximum
              size allowed by Amazon SNS.</p> </li> <li> <p>
              <code>ScheduledNotification</code> - Triggers a periodic
              evaluation at the frequency specified for
              <code>MaximumExecutionFrequency</code>.</p> </li> <li> <p>
              <code>ConfigurationSnapshotDeliveryCompleted</code> - Triggers a
              periodic evaluation when Config delivers a configuration
              snapshot.</p> </li> </ul> <p>If you want your custom rule to be
              triggered by configuration changes, specify two SourceDetail
              objects, one for <code>ConfigurationItemChangeNotification</code>
              and one for
              <code>OversizedConfigurationItemChangeNotification</code>.</p>
    type: object
  SourceDetails:
    items:
      $ref: '#/definitions/SourceDetail'
    maxItems: 25
    minItems: 0
    type: array
  SsmControls:
    description: Amazon Web Services Systems Manager (SSM) specific remediation controls.
    properties:
      ConcurrentExecutionRatePercentage:
        allOf:
          - $ref: '#/definitions/Percentage'
          - description: >-
              The maximum percentage of remediation actions allowed to run in
              parallel on the non-compliant resources for that specific rule.
              You can specify a percentage, such as 10%. The default value is
              10. 
      ErrorPercentage:
        allOf:
          - $ref: '#/definitions/Percentage'
          - description: >-
              The percentage of errors that are allowed before SSM stops running
              automations on non-compliant resources for that specific rule. You
              can specify a percentage of errors, for example 10%. If you do not
              specifiy a percentage, the default is 50%. For example, if you set
              the ErrorPercentage to 40% for 10 non-compliant resources, then
              SSM stops running the automations when the fifth error is
              received. 
    type: object
  StackArn:
    maxLength: 2048
    minLength: 1
    type: string
  StartConfigRulesEvaluationRequest:
    description: <p/>
    properties:
      ConfigRuleNames:
        allOf:
          - $ref: '#/definitions/ReevaluateConfigRuleNames'
          - description: >-
              The list of names of Config rules that you want to run evaluations
              for.
    title: StartConfigRulesEvaluationRequest
    type: object
  StartConfigRulesEvaluationResponse:
    description: The output when you start the evaluation for the specified Config rule.
    properties: {}
    type: object
  StartConfigurationRecorderRequest:
    description: The input for the <a>StartConfigurationRecorder</a> action.
    properties:
      ConfigurationRecorderName:
        allOf:
          - $ref: '#/definitions/RecorderName'
          - description: >-
              The name of the recorder object that records each configuration
              change made to the resources.
    required:
      - ConfigurationRecorderName
    title: StartConfigurationRecorderRequest
    type: object
  StartRemediationExecutionRequest:
    properties:
      ConfigRuleName:
        allOf:
          - $ref: '#/definitions/ConfigRuleName'
          - description: >-
              The list of names of Config rules that you want to run remediation
              execution for.
      ResourceKeys:
        allOf:
          - $ref: '#/definitions/ResourceKeys'
          - description: >-
              A list of resource keys to be processed with the current request.
              Each element in the list consists of the resource type and
              resource ID. 
    required:
      - ConfigRuleName
      - ResourceKeys
    title: StartRemediationExecutionRequest
    type: object
  StartRemediationExecutionResponse:
    properties:
      FailedItems:
        allOf:
          - $ref: '#/definitions/ResourceKeys'
          - description: >-
              For resources that have failed to start execution, the API returns
              a resource key object.
      FailureMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Returns a failure message. For example, the resource is already
              compliant.
    type: object
  StaticParameterValues:
    items:
      $ref: '#/definitions/StringWithCharLimit256'
    maxItems: 25
    minItems: 0
    type: array
  StaticValue:
    description: The static value of the resource.
    properties:
      Values:
        allOf:
          - $ref: '#/definitions/StaticParameterValues'
          - description: 'A list of values. For example, the ARN of the assumed role. '
    required:
      - Values
    type: object
  StatusDetailFilters:
    description: >-
      Status filter object to filter results based on specific member account ID
      or status type for an organization config rule. 
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The 12-digit account ID of the member account within an
              organization.
      MemberAccountRuleStatus:
        allOf:
          - $ref: '#/definitions/MemberAccountRuleStatus'
          - description: >-
              <p>Indicates deployment status for config rule in the member
              account. When master account calls
              <code>PutOrganizationConfigRule</code> action for the first time,
              config rule status is created in the member account. When master
              account calls <code>PutOrganizationConfigRule</code> action for
              the second time, config rule status is updated in the member
              account. Config rule status is deleted when the master account
              deletes <code>OrganizationConfigRule</code> and disables service
              access for <code>config-multiaccountsetup.amazonaws.com</code>.
              </p> <p>Config sets the state of the rule to:</p> <ul> <li> <p>
              <code>CREATE_SUCCESSFUL</code> when config rule has been created
              in the member account.</p> </li> <li> <p>
              <code>CREATE_IN_PROGRESS</code> when config rule is being created
              in the member account.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> when config rule creation has failed in
              the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code>
              when config rule deletion has failed in the member account.</p>
              </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when config rule is
              being deleted in the member account.</p> </li> <li> <p>
              <code>DELETE_SUCCESSFUL</code> when config rule has been deleted
              in the member account.</p> </li> <li> <p>
              <code>UPDATE_SUCCESSFUL</code> when config rule has been updated
              in the member account.</p> </li> <li> <p>
              <code>UPDATE_IN_PROGRESS</code> when config rule is being updated
              in the member account.</p> </li> <li> <p>
              <code>UPDATE_FAILED</code> when config rule deletion has failed in
              the member account.</p> </li> </ul>
    type: object
  StopConfigurationRecorderRequest:
    description: The input for the <a>StopConfigurationRecorder</a> action.
    properties:
      ConfigurationRecorderName:
        allOf:
          - $ref: '#/definitions/RecorderName'
          - description: >-
              The name of the recorder object that records each configuration
              change made to the resources.
    required:
      - ConfigurationRecorderName
    title: StopConfigurationRecorderRequest
    type: object
  StoredQuery:
    description: Provides the details of a stored query.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/QueryDescription'
          - description: A unique description for the query.
      Expression:
        allOf:
          - $ref: '#/definitions/QueryExpression'
          - description: >-
              The expression of the query. For example, <code>SELECT resourceId,
              resourceType,
              supplementaryConfiguration.BucketVersioningConfiguration.status
              WHERE resourceType = 'AWS::S3::Bucket' AND
              supplementaryConfiguration.BucketVersioningConfiguration.status =
              'Off'.</code> 
      QueryArn:
        allOf:
          - $ref: '#/definitions/QueryArn'
          - description: >-
              Amazon Resource Name (ARN) of the query. For example,
              arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
      QueryId:
        allOf:
          - $ref: '#/definitions/QueryId'
          - description: The ID of the query.
      QueryName:
        allOf:
          - $ref: '#/definitions/QueryName'
          - description: The name of the query.
    required:
      - QueryName
    type: object
  StoredQueryMetadata:
    description: 'Returns details of a specific query. '
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/QueryDescription'
          - description: A unique description for the query.
      QueryArn:
        allOf:
          - $ref: '#/definitions/QueryArn'
          - description: >-
              Amazon Resource Name (ARN) of the query. For example,
              arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
      QueryId:
        allOf:
          - $ref: '#/definitions/QueryId'
          - description: 'The ID of the query. '
      QueryName:
        allOf:
          - $ref: '#/definitions/QueryName'
          - description: The name of the query.
    required:
      - QueryId
      - QueryArn
      - QueryName
    type: object
  StoredQueryMetadataList:
    items:
      $ref: '#/definitions/StoredQueryMetadata'
    type: array
  String:
    type: string
  StringWithCharLimit1024:
    maxLength: 1024
    minLength: 1
    type: string
  StringWithCharLimit128:
    maxLength: 128
    minLength: 1
    type: string
  StringWithCharLimit2048:
    maxLength: 2048
    minLength: 1
    type: string
  StringWithCharLimit256:
    maxLength: 256
    minLength: 1
    type: string
  StringWithCharLimit256Min0:
    maxLength: 256
    minLength: 0
    type: string
  StringWithCharLimit64:
    maxLength: 64
    minLength: 1
    type: string
  StringWithCharLimit768:
    maxLength: 768
    minLength: 1
    type: string
  SupplementaryConfiguration:
    additionalProperties:
      $ref: '#/definitions/SupplementaryConfigurationValue'
    type: object
  SupplementaryConfigurationName:
    type: string
  SupplementaryConfigurationValue:
    type: string
  Tag:
    description: >-
      The tags for the resource. The metadata that you apply to a resource to
      help you categorize and organize them. Each tag consists of a key and an
      optional value, both of which you define. Tag keys can have a maximum
      character length of 128 characters, and tag values can have a maximum
      length of 256 characters.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              One part of a key-value pair that make up a tag. A key is a
              general label that acts like a category for more specific tag
              values.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              The optional part of a key-value pair that make up a tag. A value
              acts as a descriptor within a tag category (key).
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    minItems: 1
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) that identifies the resource for
              which to list the tags. Currently, the supported resources are
              <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and
              <code>AggregatorAuthorization</code>.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: An array of tag object.
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/Value'
    type: object
  TagsList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    minItems: 0
    type: array
  TemplateBody:
    maxLength: 51200
    minLength: 1
    type: string
  TemplateS3Uri:
    maxLength: 1024
    minLength: 1
    pattern: 's3://.*'
    type: string
  TooManyTagsException: {}
  UnprocessedResourceIdentifierList:
    items:
      $ref: '#/definitions/AggregateResourceIdentifier'
    type: array
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) that identifies the resource for
              which to list the tags. Currently, the supported resources are
              <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and
              <code>AggregatorAuthorization</code>.
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: The keys of the tags to be removed.
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  ValidationException: {}
  Value:
    type: string
  Version:
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/config/'
host: config.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>Config</fullname> <p>Config provides a way to keep track of the
    configurations of all the Amazon Web Services resources associated with your
    Amazon Web Services account. You can use Config to get the current and
    historical configurations of each Amazon Web Services resource and also to
    get information about the relationship between the resources. An Amazon Web
    Services resource can be an Amazon Compute Cloud (Amazon EC2) instance, an
    Elastic Block Store (EBS) volume, an elastic network Interface (ENI), or a
    security group. For a complete list of resources currently supported by
    Config, see <a
    href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
    Amazon Web Services resources</a>.</p> <p>You can access and manage Config
    through the Amazon Web Services Management Console, the Amazon Web Services
    Command Line Interface (Amazon Web Services CLI), the Config API, or the
    Amazon Web Services SDKs for Config. This reference guide contains
    documentation for the Config API and the Amazon Web Services CLI commands
    that you can use to manage Config. The Config API uses the Signature Version
    4 protocol for signing requests. For more information about how to sign a
    request with this protocol, see <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4 Signing Process</a>. For detailed information about Config
    features and their associated actions or commands, as well as how to work
    with Amazon Web Services Management Console, see <a
    href="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html">What
    Is Config</a> in the <i>Config Developer Guide</i>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Config
  version: '2014-11-12'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/config-2014-11-12.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: config
paths:
  /#X-Amz-Target=StarlingDoveService.BatchGetAggregateResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the current configuration items for resources that are
        present in your Config aggregator. The operation also returns a list of
        resources that are not processed in the current request. If there are no
        unprocessed resources, the operation returns an empty
        <code>unprocessedResourceIdentifiers</code> list. </p> <note> <ul> <li>
        <p>The API does not return results for deleted resources.</p> </li> <li>
        <p> The API does not return tags and relationships.</p> </li> </ul>
        </note>
      operationId: BatchGetAggregateResourceConfig
      parameters:
        - enum:
            - StarlingDoveService.BatchGetAggregateResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetAggregateResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetAggregateResourceConfigResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the <code>BaseConfigurationItem</code> for one or more
        requested resources. The operation also returns a list of resources that
        are not processed in the current request. If there are no unprocessed
        resources, the operation returns an empty unprocessedResourceKeys list.
        </p> <note> <ul> <li> <p>The API does not return results for deleted
        resources.</p> </li> <li> <p> The API does not return any tags for the
        requested resources. This information is filtered out of the
        supplementaryConfiguration section of the API response.</p> </li> </ul>
        </note>
      operationId: BatchGetResourceConfig
      parameters:
        - enum:
            - StarlingDoveService.BatchGetResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetResourceConfigResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DeleteAggregationAuthorization:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the authorization granted to the specified configuration
        aggregator account in a specified region.
      operationId: DeleteAggregationAuthorization
      parameters:
        - enum:
            - StarlingDoveService.DeleteAggregationAuthorization
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAggregationAuthorizationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified Config rule and all of its evaluation
        results.</p> <p>Config sets the state of a rule to <code>DELETING</code>
        until the deletion is complete. You cannot update a rule while it is in
        this state. If you make a <code>PutConfigRule</code> or
        <code>DeleteConfigRule</code> request for the rule, you will receive a
        <code>ResourceInUseException</code>.</p> <p>You can check the state of a
        rule by using the <code>DescribeConfigRules</code> request.</p>
      operationId: DeleteConfigRule
      parameters:
        - enum:
            - StarlingDoveService.DeleteConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationAggregator:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the specified configuration aggregator and the aggregated data
        associated with the aggregator.
      operationId: DeleteConfigurationAggregator
      parameters:
        - enum:
            - StarlingDoveService.DeleteConfigurationAggregator
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConfigurationAggregatorRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationRecorder:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the configuration recorder.</p> <p>After the configuration
        recorder is deleted, Config will not record resource configuration
        changes until you create a new configuration recorder.</p> <p>This
        action does not delete the configuration information that was previously
        recorded. You will be able to access the previously recorded information
        by using the <code>GetResourceConfigHistory</code> action, but you will
        not be able to access this information in the Config console until you
        create a new configuration recorder.</p>
      operationId: DeleteConfigurationRecorder
      parameters:
        - enum:
            - StarlingDoveService.DeleteConfigurationRecorder
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConfigurationRecorderRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoSuchConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DeleteConformancePack:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified conformance pack and all the Config rules,
        remediation actions, and all evaluation results within that conformance
        pack.</p> <p>Config sets the conformance pack to
        <code>DELETE_IN_PROGRESS</code> until the deletion is complete. You
        cannot update a conformance pack while it is in this state.</p>
      operationId: DeleteConformancePack
      parameters:
        - enum:
            - StarlingDoveService.DeleteConformancePack
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConformancePackRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConformancePackException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /#X-Amz-Target=StarlingDoveService.DeleteDeliveryChannel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the delivery channel.</p> <p>Before you can delete the
        delivery channel, you must stop the configuration recorder by using the
        <a>StopConfigurationRecorder</a> action.</p>
      operationId: DeleteDeliveryChannel
      parameters:
        - enum:
            - StarlingDoveService.DeleteDeliveryChannel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDeliveryChannelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchDeliveryChannelException
          schema:
            $ref: '#/definitions/NoSuchDeliveryChannelException'
        '481':
          description: LastDeliveryChannelDeleteFailedException
          schema:
            $ref: '#/definitions/LastDeliveryChannelDeleteFailedException'
  /#X-Amz-Target=StarlingDoveService.DeleteEvaluationResults:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the evaluation results for the specified Config rule. You can
        specify one Config rule per request. After you delete the evaluation
        results, you can call the <a>StartConfigRulesEvaluation</a> API to start
        evaluating your Amazon Web Services resources against the rule.
      operationId: DeleteEvaluationResults
      parameters:
        - enum:
            - StarlingDoveService.DeleteEvaluationResults
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEvaluationResultsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEvaluationResultsResponse'
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /#X-Amz-Target=StarlingDoveService.DeleteOrganizationConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified organization config rule and all of its
        evaluation results from all member accounts in that organization. </p>
        <p>Only a master account and a delegated administrator account can
        delete an organization config rule. When calling this API with a
        delegated administrator, you must ensure Organizations
        <code>ListDelegatedAdministrator</code> permissions are added.</p>
        <p>Config sets the state of a rule to DELETE_IN_PROGRESS until the
        deletion is complete. You cannot update a rule while it is in this
        state.</p>
      operationId: DeleteOrganizationConfigRule
      parameters:
        - enum:
            - StarlingDoveService.DeleteOrganizationConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteOrganizationConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchOrganizationConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConfigRuleException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DeleteOrganizationConformancePack:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified organization conformance pack and all of the
        config rules and remediation actions from all member accounts in that
        organization. </p> <p> Only a master account or a delegated
        administrator account can delete an organization conformance pack. When
        calling this API with a delegated administrator, you must ensure
        Organizations <code>ListDelegatedAdministrator</code> permissions are
        added.</p> <p>Config sets the state of a conformance pack to
        DELETE_IN_PROGRESS until the deletion is complete. You cannot update a
        conformance pack while it is in this state. </p>
      operationId: DeleteOrganizationConformancePack
      parameters:
        - enum:
            - StarlingDoveService.DeleteOrganizationConformancePack
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteOrganizationConformancePackRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchOrganizationConformancePackException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConformancePackException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DeletePendingAggregationRequest:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes pending authorization requests for a specified aggregator
        account in a specified region.
      operationId: DeletePendingAggregationRequest
      parameters:
        - enum:
            - StarlingDoveService.DeletePendingAggregationRequest
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePendingAggregationRequestRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes the remediation configuration.
      operationId: DeleteRemediationConfiguration
      parameters:
        - enum:
            - StarlingDoveService.DeleteRemediationConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRemediationConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRemediationConfigurationResponse'
        '480':
          description: NoSuchRemediationConfigurationException
          schema:
            $ref: '#/definitions/NoSuchRemediationConfigurationException'
        '481':
          description: RemediationInProgressException
          schema:
            $ref: '#/definitions/RemediationInProgressException'
        '482':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationExceptions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes one or more remediation exceptions mentioned in the resource
        keys.</p> <note> <p>Config generates a remediation exception when a
        problem occurs executing a remediation action to a specific resource.
        Remediation exceptions blocks auto-remediation until the exception is
        cleared.</p> </note>
      operationId: DeleteRemediationExceptions
      parameters:
        - enum:
            - StarlingDoveService.DeleteRemediationExceptions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRemediationExceptionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRemediationExceptionsResponse'
        '480':
          description: NoSuchRemediationExceptionException
          schema:
            $ref: '#/definitions/NoSuchRemediationExceptionException'
  /#X-Amz-Target=StarlingDoveService.DeleteResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Records the configuration state for a custom resource that has been
        deleted. This API records a new ConfigurationItem with a ResourceDeleted
        status. You can retrieve the ConfigurationItems recorded for this
        resource in your Config History. 
      operationId: DeleteResourceConfig
      parameters:
        - enum:
            - StarlingDoveService.DeleteResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NoRunningConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoRunningConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DeleteRetentionConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes the retention configuration.
      operationId: DeleteRetentionConfiguration
      parameters:
        - enum:
            - StarlingDoveService.DeleteRetentionConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRetentionConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: NoSuchRetentionConfigurationException
          schema:
            $ref: '#/definitions/NoSuchRetentionConfigurationException'
  /#X-Amz-Target=StarlingDoveService.DeleteStoredQuery:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the stored query for a single Amazon Web Services account and a
        single Amazon Web Services Region.
      operationId: DeleteStoredQuery
      parameters:
        - enum:
            - StarlingDoveService.DeleteStoredQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStoredQueryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStoredQueryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=StarlingDoveService.DeliverConfigSnapshot:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Schedules delivery of a configuration snapshot to the Amazon S3
        bucket in the specified delivery channel. After the delivery has
        started, Config sends the following notifications using an Amazon SNS
        topic that you have specified.</p> <ul> <li> <p>Notification of the
        start of the delivery.</p> </li> <li> <p>Notification of the completion
        of the delivery, if the delivery was successfully completed.</p> </li>
        <li> <p>Notification of delivery failure, if the delivery failed.</p>
        </li> </ul>
      operationId: DeliverConfigSnapshot
      parameters:
        - enum:
            - StarlingDoveService.DeliverConfigSnapshot
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeliverConfigSnapshotRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeliverConfigSnapshotResponse'
        '480':
          description: NoSuchDeliveryChannelException
          schema:
            $ref: '#/definitions/NoSuchDeliveryChannelException'
        '481':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
        '482':
          description: NoRunningConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoRunningConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConfigRules:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of compliant and noncompliant rules with the number of
        resources for compliant and noncompliant rules. Does not display rules
        that do not have compliance results. </p> <note> <p>The results can
        return an empty result page, but if you have a <code>nextToken</code>,
        the results are displayed on the next page.</p> </note>
      operationId: DescribeAggregateComplianceByConfigRules
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeAggregateComplianceByConfigRules
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAggregateComplianceByConfigRulesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAggregateComplianceByConfigRulesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConformancePacks:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of the conformance packs and their associated
        compliance status with the count of compliant and noncompliant Config
        rules within each conformance pack. Also returns the total rule count
        which includes compliant rules, noncompliant rules, and rules that
        cannot be evaluated due to insufficient data.</p> <note> <p>The results
        can return an empty result page, but if you have a
        <code>nextToken</code>, the results are displayed on the next page.</p>
        </note>
      operationId: DescribeAggregateComplianceByConformancePacks
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeAggregateComplianceByConformancePacks
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAggregateComplianceByConformancePacksRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: >-
              #/definitions/DescribeAggregateComplianceByConformancePacksResponse
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregationAuthorizations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of authorizations granted to various aggregator accounts
        and regions.
      operationId: DescribeAggregationAuthorizations
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeAggregationAuthorizations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAggregationAuthorizationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAggregationAuthorizationsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Indicates whether the specified Config rules are compliant. If a rule
        is noncompliant, this action returns the number of Amazon Web Services
        resources that do not comply with the rule.</p> <p>A rule is compliant
        if all of the evaluated resources comply with it. It is noncompliant if
        any of these resources do not comply.</p> <p>If Config has no current
        evaluation results for the rule, it returns
        <code>INSUFFICIENT_DATA</code>. This result might indicate one of the
        following conditions:</p> <ul> <li> <p>Config has never invoked an
        evaluation for the rule. To check whether it has, use the
        <code>DescribeConfigRuleEvaluationStatus</code> action to get the
        <code>LastSuccessfulInvocationTime</code> and
        <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's
        Lambda function is failing to send evaluation results to Config. Verify
        that the role you assigned to your configuration recorder includes the
        <code>config:PutEvaluations</code> permission. If the rule is a custom
        rule, verify that the Lambda execution role includes the
        <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The
        rule's Lambda function has returned <code>NOT_APPLICABLE</code> for all
        evaluation results. This can occur if the resources were deleted or
        removed from the rule's scope.</p> </li> </ul>
      operationId: DescribeComplianceByConfigRule
      parameters:
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeComplianceByConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeComplianceByConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeComplianceByConfigRuleResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Indicates whether the specified Amazon Web Services resources are
        compliant. If a resource is noncompliant, this action returns the number
        of Config rules that the resource does not comply with.</p> <p>A
        resource is compliant if it complies with all the Config rules that
        evaluate it. It is noncompliant if it does not comply with one or more
        of these rules.</p> <p>If Config has no current evaluation results for
        the resource, it returns <code>INSUFFICIENT_DATA</code>. This result
        might indicate one of the following conditions about the rules that
        evaluate the resource:</p> <ul> <li> <p>Config has never invoked an
        evaluation for the rule. To check whether it has, use the
        <code>DescribeConfigRuleEvaluationStatus</code> action to get the
        <code>LastSuccessfulInvocationTime</code> and
        <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's
        Lambda function is failing to send evaluation results to Config. Verify
        that the role that you assigned to your configuration recorder includes
        the <code>config:PutEvaluations</code> permission. If the rule is a
        custom rule, verify that the Lambda execution role includes the
        <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The
        rule's Lambda function has returned <code>NOT_APPLICABLE</code> for all
        evaluation results. This can occur if the resources were deleted or
        removed from the rule's scope.</p> </li> </ul>
      operationId: DescribeComplianceByResource
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeComplianceByResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeComplianceByResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeComplianceByResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRuleEvaluationStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns status information for each of your Config managed rules. The
        status includes information such as the last time Config invoked the
        rule, the last time Config failed to invoke the rule, and the related
        error for the last failure.
      operationId: DescribeConfigRuleEvaluationStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConfigRuleEvaluationStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigRuleEvaluationStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigRuleEvaluationStatusResponse'
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRules:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns details about your Config rules.
      operationId: DescribeConfigRules
      parameters:
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConfigRules
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigRulesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigRulesResponse'
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns status information for sources within an aggregator. The status
        includes information about the last time Config verified authorization
        between the source account and an aggregator account. In case of a
        failure, the status contains the related error code or message. 
      operationId: DescribeConfigurationAggregatorSourcesStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationAggregatorSourcesStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationAggregatorSourcesStatusResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregators:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the details of one or more configuration aggregators. If the
        configuration aggregator is not specified, this action returns the
        details for all the configuration aggregators associated with the
        account. 
      operationId: DescribeConfigurationAggregators
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConfigurationAggregators
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationAggregatorsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationAggregatorsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorderStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the current status of the specified configuration recorder.
        If a configuration recorder is not specified, this action returns the
        status of all configuration recorders associated with the account.</p>
        <note> <p>Currently, you can specify only one configuration recorder per
        region in your account.</p> </note>
      operationId: DescribeConfigurationRecorderStatus
      parameters:
        - enum:
            - StarlingDoveService.DescribeConfigurationRecorderStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationRecorderStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationRecorderStatusResponse'
        '480':
          description: NoSuchConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoSuchConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorders:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the details for the specified configuration recorders. If the
        configuration recorder is not specified, this action returns the details
        for all configuration recorders associated with the account.</p> <note>
        <p>Currently, you can specify only one configuration recorder per region
        in your account.</p> </note>
      operationId: DescribeConfigurationRecorders
      parameters:
        - enum:
            - StarlingDoveService.DescribeConfigurationRecorders
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationRecordersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationRecordersResponse'
        '480':
          description: NoSuchConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoSuchConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePackCompliance:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns compliance details for each rule in that conformance
        pack.</p> <note> <p>You must provide exact rule names.</p> </note>
      operationId: DescribeConformancePackCompliance
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConformancePackCompliance
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConformancePackComplianceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConformancePackComplianceResponse'
        '480':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: NoSuchConfigRuleInConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleInConformancePackException'
        '484':
          description: NoSuchConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConformancePackException'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePackStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Provides one or more conformance packs deployment status.</p> <note>
        <p>If there are no conformance packs then you will see an empty
        result.</p> </note>
      operationId: DescribeConformancePackStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConformancePackStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConformancePackStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConformancePackStatusResponse'
        '480':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePacks:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of one or more conformance packs.
      operationId: DescribeConformancePacks
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeConformancePacks
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConformancePacksRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConformancePacksResponse'
        '480':
          description: NoSuchConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConformancePackException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannelStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the current status of the specified delivery channel. If a
        delivery channel is not specified, this action returns the current
        status of all delivery channels associated with the account.</p> <note>
        <p>Currently, you can specify only one delivery channel per region in
        your account.</p> </note>
      operationId: DescribeDeliveryChannelStatus
      parameters:
        - enum:
            - StarlingDoveService.DescribeDeliveryChannelStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeliveryChannelStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeliveryChannelStatusResponse'
        '480':
          description: NoSuchDeliveryChannelException
          schema:
            $ref: '#/definitions/NoSuchDeliveryChannelException'
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannels:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns details about the specified delivery channel. If a delivery
        channel is not specified, this action returns the details of all
        delivery channels associated with the account.</p> <note> <p>Currently,
        you can specify only one delivery channel per region in your
        account.</p> </note>
      operationId: DescribeDeliveryChannels
      parameters:
        - enum:
            - StarlingDoveService.DescribeDeliveryChannels
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeliveryChannelsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeliveryChannelsResponse'
        '480':
          description: NoSuchDeliveryChannelException
          schema:
            $ref: '#/definitions/NoSuchDeliveryChannelException'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRuleStatuses:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Provides organization config rule deployment status for an
        organization.</p> <note> <p>The status is not considered successful
        until organization config rule is successfully deployed in all the
        member accounts with an exception of excluded accounts.</p> <p>When you
        specify the limit and the next token, you receive a paginated response.
        Limit and next token are not applicable if you specify organization
        config rule names. It is only applicable, when you request all the
        organization config rules.</p> </note>
      operationId: DescribeOrganizationConfigRuleStatuses
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeOrganizationConfigRuleStatuses
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationConfigRuleStatusesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationConfigRuleStatusesResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRules:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of organization config rules. </p> <note> <p>When you
        specify the limit and the next token, you receive a paginated response.
        Limit and next token are not applicable if you specify organization
        config rule names. It is only applicable, when you request all the
        organization config rules.</p> </note>
      operationId: DescribeOrganizationConfigRules
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeOrganizationConfigRules
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationConfigRulesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationConfigRulesResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePackStatuses:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Provides organization conformance pack deployment status for an
        organization. </p> <note> <p>The status is not considered successful
        until organization conformance pack is successfully deployed in all the
        member accounts with an exception of excluded accounts.</p> <p>When you
        specify the limit and the next token, you receive a paginated response.
        Limit and next token are not applicable if you specify organization
        conformance pack names. They are only applicable, when you request all
        the organization conformance packs.</p> </note>
      operationId: DescribeOrganizationConformancePackStatuses
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeOrganizationConformancePackStatuses
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationConformancePackStatusesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationConformancePackStatusesResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePacks:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of organization conformance packs. </p> <note> <p>When
        you specify the limit and the next token, you receive a paginated
        response. </p> <p>Limit and next token are not applicable if you specify
        organization conformance packs names. They are only applicable, when you
        request all the organization conformance packs. </p> </note>
      operationId: DescribeOrganizationConformancePacks
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeOrganizationConformancePacks
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationConformancePacksRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationConformancePacksResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.DescribePendingAggregationRequests:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of all pending aggregation requests.
      operationId: DescribePendingAggregationRequests
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribePendingAggregationRequests
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribePendingAggregationRequestsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePendingAggregationRequestsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns the details of one or more remediation configurations.
      operationId: DescribeRemediationConfigurations
      parameters:
        - enum:
            - StarlingDoveService.DescribeRemediationConfigurations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRemediationConfigurationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRemediationConfigurationsResponse'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExceptions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the details of one or more remediation exceptions. A detailed
        view of a remediation exception for a set of resources that includes an
        explanation of an exception and the time when the exception will be
        deleted. When you specify the limit and the next token, you receive a
        paginated response. </p> <note> <p>Config generates a remediation
        exception when a problem occurs executing a remediation action to a
        specific resource. Remediation exceptions blocks auto-remediation until
        the exception is cleared.</p> <p>When you specify the limit and the next
        token, you receive a paginated response. </p> <p>Limit and next token
        are not applicable if you request resources in batch. It is only
        applicable, when you request all resources.</p> </note>
      operationId: DescribeRemediationExceptions
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeRemediationExceptions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRemediationExceptionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRemediationExceptionsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExecutionStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a detailed view of a Remediation Execution for a set of
        resources including state, timestamps for when steps for the remediation
        execution occur, and any error messages for steps that have failed. When
        you specify the limit and the next token, you receive a paginated
        response.
      operationId: DescribeRemediationExecutionStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeRemediationExecutionStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRemediationExecutionStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRemediationExecutionStatusResponse'
        '480':
          description: NoSuchRemediationConfigurationException
          schema:
            $ref: '#/definitions/NoSuchRemediationConfigurationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.DescribeRetentionConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the details of one or more retention configurations. If the
        retention configuration name is not specified, this action returns the
        details for all the retention configurations for that account.</p>
        <note> <p>Currently, Config supports only one retention configuration
        per region in your account.</p> </note>
      operationId: DescribeRetentionConfigurations
      parameters:
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.DescribeRetentionConfigurations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRetentionConfigurationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRetentionConfigurationsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: NoSuchRetentionConfigurationException
          schema:
            $ref: '#/definitions/NoSuchRetentionConfigurationException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.GetAggregateComplianceDetailsByConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the evaluation results for the specified Config rule for a
        specific resource in a rule. The results indicate which Amazon Web
        Services resources were evaluated by the rule, when each resource was
        last evaluated, and whether each resource complies with the rule. </p>
        <note> <p>The results can return an empty result page. But if you have a
        <code>nextToken</code>, the results are displayed on the next page.</p>
        </note>
      operationId: GetAggregateComplianceDetailsByConfigRule
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetAggregateComplianceDetailsByConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAggregateComplianceDetailsByConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAggregateComplianceDetailsByConfigRuleResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.GetAggregateConfigRuleComplianceSummary:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the number of compliant and noncompliant rules for one or
        more accounts and regions in an aggregator.</p> <note> <p>The results
        can return an empty result page, but if you have a nextToken, the
        results are displayed on the next page.</p> </note>
      operationId: GetAggregateConfigRuleComplianceSummary
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetAggregateConfigRuleComplianceSummary
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAggregateConfigRuleComplianceSummaryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAggregateConfigRuleComplianceSummaryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.GetAggregateConformancePackComplianceSummary:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the count of compliant and noncompliant conformance packs
        across all Amazon Web Services accounts and Amazon Web Services Regions
        in an aggregator. You can filter based on Amazon Web Services account ID
        or Amazon Web Services Region.</p> <note> <p>The results can return an
        empty result page, but if you have a nextToken, the results are
        displayed on the next page.</p> </note>
      operationId: GetAggregateConformancePackComplianceSummary
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetAggregateConformancePackComplianceSummary
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAggregateConformancePackComplianceSummaryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAggregateConformancePackComplianceSummaryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.GetAggregateDiscoveredResourceCounts:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the resource counts across accounts and regions that are
        present in your Config aggregator. You can request the resource counts
        by providing filters and GroupByKey.</p> <p>For example, if the input
        contains accountID 12345678910 and region us-east-1 in filters, the API
        returns the count of resources in account ID 12345678910 and region
        us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the API
        returns resource counts for all source accounts that are present in your
        aggregator.</p>
      operationId: GetAggregateDiscoveredResourceCounts
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetAggregateDiscoveredResourceCounts
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAggregateDiscoveredResourceCountsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAggregateDiscoveredResourceCountsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.GetAggregateResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns configuration item that is aggregated for your specific resource
        in a specific source account and region.
      operationId: GetAggregateResourceConfig
      parameters:
        - enum:
            - StarlingDoveService.GetAggregateResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAggregateResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAggregateResourceConfigResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
        '482':
          description: OversizedConfigurationItemException
          schema:
            $ref: '#/definitions/OversizedConfigurationItemException'
        '483':
          description: ResourceNotDiscoveredException
          schema:
            $ref: '#/definitions/ResourceNotDiscoveredException'
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the evaluation results for the specified Config rule. The
        results indicate which Amazon Web Services resources were evaluated by
        the rule, when each resource was last evaluated, and whether each
        resource complies with the rule.
      operationId: GetComplianceDetailsByConfigRule
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetComplianceDetailsByConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetComplianceDetailsByConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceDetailsByConfigRuleResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the evaluation results for the specified Amazon Web Services
        resource. The results indicate which Config rules were used to evaluate
        the resource, when each rule was last used, and whether the resource
        complies with each rule.
      operationId: GetComplianceDetailsByResource
      parameters:
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetComplianceDetailsByResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetComplianceDetailsByResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceDetailsByResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Returns the number of Config rules that are compliant and noncompliant,
        up to a maximum of 25 for each.
      operationId: GetComplianceSummaryByConfigRule
      parameters:
        - enum:
            - StarlingDoveService.GetComplianceSummaryByConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceSummaryByConfigRuleResponse'
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByResourceType:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the number of resources that are compliant and the number that
        are noncompliant. You can specify one or more resource types to get
        these numbers for each resource type. The maximum number returned is
        100.
      operationId: GetComplianceSummaryByResourceType
      parameters:
        - enum:
            - StarlingDoveService.GetComplianceSummaryByResourceType
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetComplianceSummaryByResourceTypeRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceSummaryByResourceTypeResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceDetails:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns compliance details of a conformance pack for all Amazon Web
        Services resources that are monitered by conformance pack.
      operationId: GetConformancePackComplianceDetails
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetConformancePackComplianceDetails
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetConformancePackComplianceDetailsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConformancePackComplianceDetailsResponse'
        '480':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: NoSuchConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConformancePackException'
        '483':
          description: NoSuchConfigRuleInConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleInConformancePackException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceSummary:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns compliance details for the conformance pack based on the
        cumulative compliance results of all the rules in that conformance pack.
      operationId: GetConformancePackComplianceSummary
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetConformancePackComplianceSummary
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetConformancePackComplianceSummaryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConformancePackComplianceSummaryResponse'
        '480':
          description: NoSuchConformancePackException
          schema:
            $ref: '#/definitions/NoSuchConformancePackException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.GetDiscoveredResourceCounts:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the resource types, the number of each resource type, and the
        total number of resources that Config is recording in this region for
        your Amazon Web Services account. </p> <p class="title"> <b>Example</b>
        </p> <ol> <li> <p>Config is recording three resource types in the US
        East (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and
        15 S3 buckets.</p> </li> <li> <p>You make a call to the
        <code>GetDiscoveredResourceCounts</code> action and specify that you
        want all resource types. </p> </li> <li> <p>Config returns the
        following:</p> <ul> <li> <p>The resource types (EC2 instances, IAM
        users, and S3 buckets).</p> </li> <li> <p>The number of each resource
        type (25, 20, and 15).</p> </li> <li> <p>The total number of all
        resources (60).</p> </li> </ul> </li> </ol> <p>The response is
        paginated. By default, Config lists 100 <a>ResourceCount</a> objects on
        each page. You can customize this number with the <code>limit</code>
        parameter. The response includes a <code>nextToken</code> string. To get
        the next page of results, run the request again and specify the string
        for the <code>nextToken</code> parameter.</p> <note> <p>If you make a
        call to the <a>GetDiscoveredResourceCounts</a> action, you might not
        immediately receive resource counts in the following situations:</p>
        <ul> <li> <p>You are a new Config customer.</p> </li> <li> <p>You just
        enabled resource recording.</p> </li> </ul> <p>It might take a few
        minutes for Config to record and count your resources. Wait a few
        minutes and then retry the <a>GetDiscoveredResourceCounts</a> action.
        </p> </note>
      operationId: GetDiscoveredResourceCounts
      parameters:
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetDiscoveredResourceCounts
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDiscoveredResourceCountsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiscoveredResourceCountsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.GetOrganizationConfigRuleDetailedStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns detailed status for each member account within an organization
        for a given organization config rule.
      operationId: GetOrganizationConfigRuleDetailedStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetOrganizationConfigRuleDetailedStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetOrganizationConfigRuleDetailedStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOrganizationConfigRuleDetailedStatusResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.GetOrganizationConformancePackDetailedStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns detailed status for each member account within an organization
        for a given organization conformance pack.
      operationId: GetOrganizationConformancePackDetailedStatus
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetOrganizationConformancePackDetailedStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetOrganizationConformancePackDetailedStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOrganizationConformancePackDetailedStatusResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          schema:
            $ref: '#/definitions/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
  /#X-Amz-Target=StarlingDoveService.GetResourceConfigHistory:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a list of <code>ConfigurationItems</code> for the specified
        resource. The list contains details about each state of the resource
        during the specified time interval. If you specified a retention period
        to retain your <code>ConfigurationItems</code> between a minimum of 30
        days and a maximum of 7 years (2557 days), Config returns the
        <code>ConfigurationItems</code> for the specified retention period. </p>
        <p>The response is paginated. By default, Config returns a limit of 10
        configuration items per page. You can customize this number with the
        <code>limit</code> parameter. The response includes a
        <code>nextToken</code> string. To get the next page of results, run the
        request again and specify the string for the <code>nextToken</code>
        parameter.</p> <note> <p>Each call to the API is limited to span a
        duration of seven days. It is likely that the number of records returned
        is smaller than the specified <code>limit</code>. In such cases, you can
        make another call, using the <code>nextToken</code>.</p> </note>
      operationId: GetResourceConfigHistory
      parameters:
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.GetResourceConfigHistory
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResourceConfigHistoryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourceConfigHistoryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidTimeRangeException
          schema:
            $ref: '#/definitions/InvalidTimeRangeException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
        '485':
          description: ResourceNotDiscoveredException
          schema:
            $ref: '#/definitions/ResourceNotDiscoveredException'
  /#X-Amz-Target=StarlingDoveService.GetStoredQuery:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns the details of a specific stored query.
      operationId: GetStoredQuery
      parameters:
        - enum:
            - StarlingDoveService.GetStoredQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetStoredQueryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStoredQueryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=StarlingDoveService.ListAggregateDiscoveredResources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Accepts a resource type and returns a list of resource identifiers
        that are aggregated for a specific resource type across accounts and
        regions. A resource identifier includes the resource type, ID, (if
        available) the custom resource name, source account, and source region.
        You can narrow the results to include only resources that have specific
        resource IDs, or a resource name, or source account ID, or source
        region.</p> <p>For example, if the input consists of accountID
        12345678910 and the region is us-east-1 for resource type
        <code>AWS::EC2::Instance</code> then the API returns all the EC2
        instance identifiers of accountID 12345678910 and region us-east-1.</p>
      operationId: ListAggregateDiscoveredResources
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.ListAggregateDiscoveredResources
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAggregateDiscoveredResourcesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAggregateDiscoveredResourcesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
  /#X-Amz-Target=StarlingDoveService.ListDiscoveredResources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Accepts a resource type and returns a list of resource identifiers
        for the resources of that type. A resource identifier includes the
        resource type, ID, and (if available) the custom resource name. The
        results consist of resources that Config has discovered, including those
        that Config is not currently recording. You can narrow the results to
        include only resources that have specific resource IDs or a resource
        name.</p> <note> <p>You can specify either resource IDs or a resource
        name, but not both, in the same request.</p> </note> <p>The response is
        paginated. By default, Config lists 100 resource identifiers on each
        page. You can customize this number with the <code>limit</code>
        parameter. The response includes a <code>nextToken</code> string. To get
        the next page of results, run the request again and specify the string
        for the <code>nextToken</code> parameter.</p>
      operationId: ListDiscoveredResources
      parameters:
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.ListDiscoveredResources
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDiscoveredResourcesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDiscoveredResourcesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.ListStoredQueries:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the stored queries for a single Amazon Web Services account and a
        single Amazon Web Services Region. The default is 100. 
      operationId: ListStoredQueries
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.ListStoredQueries
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListStoredQueriesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStoredQueriesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: List the tags for Config resource.
      operationId: ListTagsForResource
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.PutAggregationAuthorization:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Authorizes the aggregator account and region to collect data from the
        source account and region. 
      operationId: PutAggregationAuthorization
      parameters:
        - enum:
            - StarlingDoveService.PutAggregationAuthorization
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutAggregationAuthorizationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAggregationAuthorizationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.PutConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds or updates an Config rule for evaluating whether your Amazon Web
        Services resources comply with your desired configurations.</p> <p>You
        can use this action for custom Config rules and Config managed rules. A
        custom Config rule is a rule that you develop and maintain. An Config
        managed rule is a customizable, predefined rule that Config
        provides.</p> <p>If you are adding a new custom Config rule, you must
        first create the Lambda function that the rule invokes to evaluate your
        resources. When you use the <code>PutConfigRule</code> action to add the
        rule to Config, you must specify the Amazon Resource Name (ARN) that
        Lambda assigns to the function. Specify the ARN for the
        <code>SourceIdentifier</code> key. This key is part of the
        <code>Source</code> object, which is part of the <code>ConfigRule</code>
        object. </p> <p>If you are adding an Config managed rule, specify the
        rule's identifier for the <code>SourceIdentifier</code> key. To
        reference Config managed rule identifiers, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">About
        Config managed rules</a>.</p> <p>For any new rule that you add, specify
        the <code>ConfigRuleName</code> in the <code>ConfigRule</code> object.
        Do not specify the <code>ConfigRuleArn</code> or the
        <code>ConfigRuleId</code>. These values are generated by Config for new
        rules.</p> <p>If you are updating a rule that you added previously, you
        can specify the rule by <code>ConfigRuleName</code>,
        <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the
        <code>ConfigRule</code> data type that you use in this request.</p>
        <p>The maximum number of rules that Config supports is 150.</p> <p>For
        information about requesting a rule limit increase, see <a
        href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config">Config
        Limits</a> in the <i>Amazon Web Services General Reference
        Guide</i>.</p> <p>For more information about developing and using Config
        rules, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating
        Amazon Web Services resource Configurations with Config</a> in the
        <i>Config Developer Guide</i>.</p>
      operationId: PutConfigRule
      parameters:
        - enum:
            - StarlingDoveService.PutConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MaxNumberOfConfigRulesExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfConfigRulesExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '484':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.PutConfigurationAggregator:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates and updates the configuration aggregator with the selected
        source accounts and regions. The source account can be individual
        account(s) or an organization.</p> <p> <code>accountIds</code> that are
        passed will be replaced with existing accounts. If you want to add
        additional accounts into the aggregator, call
        <code>DescribeAggregator</code> to get the previous accounts and then
        append new ones.</p> <note> <p>Config should be enabled in source
        accounts and regions you want to aggregate.</p> <p>If your source type
        is an organization, you must be signed in to the management account or a
        registered delegated administrator and all the features must be enabled
        in your organization. If the caller is a management account, Config
        calls <code>EnableAwsServiceAccess</code> API to enable integration
        between Config and Organizations. If the caller is a registered
        delegated administrator, Config calls
        <code>ListDelegatedAdministrators</code> API to verify whether the
        caller is a valid delegated administrator.</p> <p>To register a
        delegated administrator, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/set-up-aggregator-cli.html#register-a-delegated-administrator-cli">Register
        a Delegated Administrator</a> in the Config developer guide. </p>
        </note>
      operationId: PutConfigurationAggregator
      parameters:
        - enum:
            - StarlingDoveService.PutConfigurationAggregator
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutConfigurationAggregatorRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutConfigurationAggregatorResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
        '484':
          description: NoAvailableOrganizationException
          schema:
            $ref: '#/definitions/NoAvailableOrganizationException'
        '485':
          description: OrganizationAllFeaturesNotEnabledException
          schema:
            $ref: '#/definitions/OrganizationAllFeaturesNotEnabledException'
  /#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a new configuration recorder to record the selected resource
        configurations.</p> <p>You can use this action to change the role
        <code>roleARN</code> or the <code>recordingGroup</code> of an existing
        recorder. To change the role, call the action on the existing
        configuration recorder and specify a role.</p> <note> <p>Currently, you
        can specify only one configuration recorder per region in your
        account.</p> <p>If <code>ConfigurationRecorder</code> does not have the
        <b>recordingGroup</b> parameter specified, the default is to record all
        supported resource types.</p> </note>
      operationId: PutConfigurationRecorder
      parameters:
        - enum:
            - StarlingDoveService.PutConfigurationRecorder
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutConfigurationRecorderRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: MaxNumberOfConfigurationRecordersExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfConfigurationRecordersExceededException'
        '481':
          description: InvalidConfigurationRecorderNameException
          schema:
            $ref: '#/definitions/InvalidConfigurationRecorderNameException'
        '482':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '483':
          description: InvalidRecordingGroupException
          schema:
            $ref: '#/definitions/InvalidRecordingGroupException'
  /#X-Amz-Target=StarlingDoveService.PutConformancePack:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates or updates a conformance pack. A conformance pack is a
        collection of Config rules that can be easily deployed in an account and
        a region and across Amazon Web Services Organization.</p> <p>This API
        creates a service linked role
        <code>AWSServiceRoleForConfigConforms</code> in your account. The
        service linked role is created only when the role does not exist in your
        account. </p> <note> <p>You must specify either the
        <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter,
        but not both. If you provide both Config uses the
        <code>TemplateS3Uri</code> parameter and ignores the
        <code>TemplateBody</code> parameter.</p> </note>
      operationId: PutConformancePack
      parameters:
        - enum:
            - StarlingDoveService.PutConformancePack
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutConformancePackRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutConformancePackResponse'
        '480':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '481':
          description: ConformancePackTemplateValidationException
          schema:
            $ref: '#/definitions/ConformancePackTemplateValidationException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: MaxNumberOfConformancePacksExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfConformancePacksExceededException'
  /#X-Amz-Target=StarlingDoveService.PutDeliveryChannel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a delivery channel object to deliver configuration
        information to an Amazon S3 bucket and Amazon SNS topic.</p> <p>Before
        you can create a delivery channel, you must create a configuration
        recorder.</p> <p>You can use this action to change the Amazon S3 bucket
        or an Amazon SNS topic of the existing delivery channel. To change the
        Amazon S3 bucket or an Amazon SNS topic, call this action and specify
        the changed values for the S3 bucket and the SNS topic. If you specify a
        different value for either the S3 bucket or the SNS topic, this action
        will keep the existing value for the parameter that is not changed.</p>
        <note> <p>You can have only one delivery channel per region in your
        account.</p> </note>
      operationId: PutDeliveryChannel
      parameters:
        - enum:
            - StarlingDoveService.PutDeliveryChannel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutDeliveryChannelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: MaxNumberOfDeliveryChannelsExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfDeliveryChannelsExceededException'
        '481':
          description: NoAvailableConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoAvailableConfigurationRecorderException'
        '482':
          description: InvalidDeliveryChannelNameException
          schema:
            $ref: '#/definitions/InvalidDeliveryChannelNameException'
        '483':
          description: NoSuchBucketException
          schema:
            $ref: '#/definitions/NoSuchBucketException'
        '484':
          description: InvalidS3KeyPrefixException
          schema:
            $ref: '#/definitions/InvalidS3KeyPrefixException'
        '485':
          description: InvalidS3KmsKeyArnException
          schema:
            $ref: '#/definitions/InvalidS3KmsKeyArnException'
        '486':
          description: InvalidSNSTopicARNException
          schema:
            $ref: '#/definitions/InvalidSNSTopicARNException'
        '487':
          description: InsufficientDeliveryPolicyException
          schema:
            $ref: '#/definitions/InsufficientDeliveryPolicyException'
  /#X-Amz-Target=StarlingDoveService.PutEvaluations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Used by an Lambda function to deliver evaluation results to Config. This
        action is required in every Lambda function that is invoked by an Config
        rule.
      operationId: PutEvaluations
      parameters:
        - enum:
            - StarlingDoveService.PutEvaluations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutEvaluationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutEvaluationsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidResultTokenException
          schema:
            $ref: '#/definitions/InvalidResultTokenException'
        '482':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
  /#X-Amz-Target=StarlingDoveService.PutExternalEvaluation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Add or updates the evaluations for process checks. This API checks if
        the rule is a process check when the name of the Config rule is
        provided.
      operationId: PutExternalEvaluation
      parameters:
        - enum:
            - StarlingDoveService.PutExternalEvaluation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutExternalEvaluationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutExternalEvaluationResponse'
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds or updates organization config rule for your entire organization
        evaluating whether your Amazon Web Services resources comply with your
        desired configurations.</p> <p> Only a master account and a delegated
        administrator can create or update an organization config rule. When
        calling this API with a delegated administrator, you must ensure
        Organizations <code>ListDelegatedAdministrator</code> permissions are
        added. </p> <p>This API enables organization service access through the
        <code>EnableAWSServiceAccess</code> action and creates a service linked
        role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master
        or delegated administrator account of your organization. The service
        linked role is created only when the role does not exist in the caller
        account. Config verifies the existence of role with <code>GetRole</code>
        action.</p> <p>To use this API with delegated administrator, register a
        delegated administrator by calling Amazon Web Services Organization
        <code>register-delegated-administrator</code> for
        <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p>You can use
        this action to create both custom Config rules and Config managed rules.
        If you are adding a new custom Config rule, you must first create Lambda
        function in the master account or a delegated administrator that the
        rule invokes to evaluate your resources. You also need to create an IAM
        role in the managed-account that can be assumed by the Lambda function.
        When you use the <code>PutOrganizationConfigRule</code> action to add
        the rule to Config, you must specify the Amazon Resource Name (ARN) that
        Lambda assigns to the function. If you are adding an Config managed
        rule, specify the rule's identifier for the <code>RuleIdentifier</code>
        key.</p> <p>The maximum number of organization config rules that Config
        supports is 150 and 3 delegated administrator per organization. </p>
        <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code>
        API to enable all features in an organization.</p> <p>Specify either
        <code>OrganizationCustomRuleMetadata</code> or
        <code>OrganizationManagedRuleMetadata</code>.</p> </note>
      operationId: PutOrganizationConfigRule
      parameters:
        - enum:
            - StarlingDoveService.PutOrganizationConfigRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutOrganizationConfigRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutOrganizationConfigRuleResponse'
        '480':
          description: MaxNumberOfOrganizationConfigRulesExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfOrganizationConfigRulesExceededException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
        '485':
          description: NoAvailableOrganizationException
          schema:
            $ref: '#/definitions/NoAvailableOrganizationException'
        '486':
          description: OrganizationAllFeaturesNotEnabledException
          schema:
            $ref: '#/definitions/OrganizationAllFeaturesNotEnabledException'
        '487':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
  /#X-Amz-Target=StarlingDoveService.PutOrganizationConformancePack:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deploys conformance packs across member accounts in an Amazon Web
        Services Organization.</p> <p>Only a master account and a delegated
        administrator can call this API. When calling this API with a delegated
        administrator, you must ensure Organizations
        <code>ListDelegatedAdministrator</code> permissions are added.</p>
        <p>This API enables organization service access for
        <code>config-multiaccountsetup.amazonaws.com</code> through the
        <code>EnableAWSServiceAccess</code> action and creates a service linked
        role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master
        or delegated administrator account of your organization. The service
        linked role is created only when the role does not exist in the caller
        account. To use this API with delegated administrator, register a
        delegated administrator by calling Amazon Web Services Organization
        <code>register-delegate-admin</code> for
        <code>config-multiaccountsetup.amazonaws.com</code>.</p> <note>
        <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to
        enable all features in an organization.</p> <p>You must specify either
        the <code>TemplateS3Uri</code> or the <code>TemplateBody</code>
        parameter, but not both. If you provide both Config uses the
        <code>TemplateS3Uri</code> parameter and ignores the
        <code>TemplateBody</code> parameter.</p> <p>Config sets the state of a
        conformance pack to CREATE_IN_PROGRESS and UPDATE_IN_PROGRESS until the
        conformance pack is created or updated. You cannot update a conformance
        pack while it is in this state.</p> <p>You can create 50 conformance
        packs with 25 Config rules in each pack and 3 delegated administrator
        per organization. </p> </note>
      operationId: PutOrganizationConformancePack
      parameters:
        - enum:
            - StarlingDoveService.PutOrganizationConformancePack
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutOrganizationConformancePackRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutOrganizationConformancePackResponse'
        '480':
          description: MaxNumberOfOrganizationConformancePacksExceededException
          schema:
            $ref: >-
              #/definitions/MaxNumberOfOrganizationConformancePacksExceededException
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: OrganizationAccessDeniedException
          schema:
            $ref: '#/definitions/OrganizationAccessDeniedException'
        '484':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '485':
          description: OrganizationConformancePackTemplateValidationException
          schema:
            $ref: >-
              #/definitions/OrganizationConformancePackTemplateValidationException
        '486':
          description: OrganizationAllFeaturesNotEnabledException
          schema:
            $ref: '#/definitions/OrganizationAllFeaturesNotEnabledException'
        '487':
          description: NoAvailableOrganizationException
          schema:
            $ref: '#/definitions/NoAvailableOrganizationException'
  /#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds or updates the remediation configuration with a specific Config
        rule with the selected target or action. The API creates the
        <code>RemediationConfiguration</code> object for the Config rule. The
        Config rule must already exist for you to add a remediation
        configuration. The target (SSM document) must exist and have permissions
        to use the target. </p> <note> <p>If you make backward incompatible
        changes to the SSM document, you must call this again to ensure the
        remediations can run.</p> <p>This API does not support adding
        remediation configurations for service-linked Config Rules such as
        Organization Config rules, the rules deployed by conformance packs, and
        rules deployed by Amazon Web Services Security Hub.</p> </note>
      operationId: PutRemediationConfigurations
      parameters:
        - enum:
            - StarlingDoveService.PutRemediationConfigurations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRemediationConfigurationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRemediationConfigurationsResponse'
        '480':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.PutRemediationExceptions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>A remediation exception is when a specific resource is no longer
        considered for auto-remediation. This API adds a new exception or
        updates an existing exception for a specific resource with a specific
        Config rule. </p> <note> <p>Config generates a remediation exception
        when a problem occurs executing a remediation action to a specific
        resource. Remediation exceptions blocks auto-remediation until the
        exception is cleared.</p> </note>
      operationId: PutRemediationExceptions
      parameters:
        - enum:
            - StarlingDoveService.PutRemediationExceptions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRemediationExceptionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRemediationExceptionsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
  /#X-Amz-Target=StarlingDoveService.PutResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Records the configuration state for the resource provided in the
        request. The configuration state of a resource is represented in Config
        as Configuration Items. Once this API records the configuration item,
        you can retrieve the list of configuration items for the custom resource
        type using existing Config APIs. </p> <note> <p>The custom resource type
        must be registered with CloudFormation. This API accepts the
        configuration item registered with CloudFormation.</p> <p>When you call
        this API, Config only stores configuration state of the resource
        provided in the request. This API does not change or remediate the
        configuration of the resource. </p> <p>Write-only schema properites are
        not recorded as part of the published configuration item.</p> </note>
      operationId: PutResourceConfig
      parameters:
        - enum:
            - StarlingDoveService.PutResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: NoRunningConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoRunningConfigurationRecorderException'
        '483':
          description: MaxActiveResourcesExceededException
          schema:
            $ref: '#/definitions/MaxActiveResourcesExceededException'
  /#X-Amz-Target=StarlingDoveService.PutRetentionConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates and updates the retention configuration with details about
        retention period (number of days) that Config stores your historical
        information. The API creates the <code>RetentionConfiguration</code>
        object and names the object as <b>default</b>. When you have a
        <code>RetentionConfiguration</code> object named <b>default</b>, calling
        the API modifies the default object. </p> <note> <p>Currently, Config
        supports only one retention configuration per region in your
        account.</p> </note>
      operationId: PutRetentionConfiguration
      parameters:
        - enum:
            - StarlingDoveService.PutRetentionConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRetentionConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRetentionConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MaxNumberOfRetentionConfigurationsExceededException
          schema:
            $ref: '#/definitions/MaxNumberOfRetentionConfigurationsExceededException'
  /#X-Amz-Target=StarlingDoveService.PutStoredQuery:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Saves a new query or updates an existing saved query. The
        <code>QueryName</code> must be unique for a single Amazon Web Services
        account and a single Amazon Web Services Region. You can create upto 300
        queries in a single Amazon Web Services account and a single Amazon Web
        Services Region.
      operationId: PutStoredQuery
      parameters:
        - enum:
            - StarlingDoveService.PutStoredQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutStoredQueryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutStoredQueryResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: ResourceConcurrentModificationException
          schema:
            $ref: '#/definitions/ResourceConcurrentModificationException'
  /#X-Amz-Target=StarlingDoveService.SelectAggregateResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Accepts a structured query language (SQL) SELECT command and an
        aggregator to query configuration state of Amazon Web Services resources
        across multiple accounts and regions, performs the corresponding search,
        and returns resource configurations matching the properties.</p> <p>For
        more information about query components, see the <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/query-components.html">
        <b>Query Components</b> </a> section in the Config Developer Guide.</p>
        <note> <p>If you run an aggregation query (i.e., using <code>GROUP
        BY</code> or using aggregate functions such as <code>COUNT</code>; e.g.,
        <code>SELECT resourceId, COUNT(*) WHERE resourceType = 'AWS::IAM::Role'
        GROUP BY resourceId</code>) and do not specify the
        <code>MaxResults</code> or the <code>Limit</code> query parameters, the
        default page size is set to 500.</p> <p>If you run a non-aggregation
        query (i.e., not using <code>GROUP BY</code> or aggregate function;
        e.g., <code>SELECT * WHERE resourceType = 'AWS::IAM::Role'</code>) and
        do not specify the <code>MaxResults</code> or the <code>Limit</code>
        query parameters, the default page size is set to 25.</p> </note>
      operationId: SelectAggregateResourceConfig
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.SelectAggregateResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SelectAggregateResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelectAggregateResourceConfigResponse'
        '480':
          description: InvalidExpressionException
          schema:
            $ref: '#/definitions/InvalidExpressionException'
        '481':
          description: NoSuchConfigurationAggregatorException
          schema:
            $ref: '#/definitions/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.SelectResourceConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Accepts a structured query language (SQL) <code>SELECT</code>
        command, performs the corresponding search, and returns resource
        configurations matching the properties.</p> <p>For more information
        about query components, see the <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/query-components.html">
        <b>Query Components</b> </a> section in the Config Developer Guide.</p>
      operationId: SelectResourceConfig
      parameters:
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - StarlingDoveService.SelectResourceConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SelectResourceConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelectResourceConfigResponse'
        '480':
          description: InvalidExpressionException
          schema:
            $ref: '#/definitions/InvalidExpressionException'
        '481':
          description: InvalidLimitException
          schema:
            $ref: '#/definitions/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /#X-Amz-Target=StarlingDoveService.StartConfigRulesEvaluation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Runs an on-demand evaluation for the specified Config rules against
        the last known configuration state of the resources. Use
        <code>StartConfigRulesEvaluation</code> when you want to test that a
        rule you updated is working as expected.
        <code>StartConfigRulesEvaluation</code> does not re-record the latest
        configuration state for your resources. It re-runs an evaluation against
        the last known state of your resources. </p> <p>You can specify up to 25
        Config rules per request. </p> <p>An existing
        <code>StartConfigRulesEvaluation</code> call for the specified rules
        must complete before you can call the API again. If you chose to have
        Config stream to an Amazon SNS topic, you will receive a
        <code>ConfigRuleEvaluationStarted</code> notification when the
        evaluation starts.</p> <note> <p>You don't need to call the
        <code>StartConfigRulesEvaluation</code> API to run an evaluation for a
        new rule. When you create a rule, Config evaluates your resources
        against the rule automatically. </p> </note> <p>The
        <code>StartConfigRulesEvaluation</code> API is useful if you want to run
        on-demand evaluations, such as the following example:</p> <ol> <li>
        <p>You have a custom rule that evaluates your IAM resources every 24
        hours.</p> </li> <li> <p>You update your Lambda function to add
        additional conditions to your rule.</p> </li> <li> <p>Instead of waiting
        for the next periodic evaluation, you call the
        <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>Config
        invokes your Lambda function and evaluates your IAM resources.</p> </li>
        <li> <p>Your custom rule will still run periodic evaluations every 24
        hours.</p> </li> </ol>
      operationId: StartConfigRulesEvaluation
      parameters:
        - enum:
            - StarlingDoveService.StartConfigRulesEvaluation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartConfigRulesEvaluationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartConfigRulesEvaluationResponse'
        '480':
          description: NoSuchConfigRuleException
          schema:
            $ref: '#/definitions/NoSuchConfigRuleException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=StarlingDoveService.StartConfigurationRecorder:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Starts recording configurations of the Amazon Web Services resources
        you have selected to record in your Amazon Web Services account.</p>
        <p>You must have created at least one delivery channel to successfully
        start the configuration recorder.</p>
      operationId: StartConfigurationRecorder
      parameters:
        - enum:
            - StarlingDoveService.StartConfigurationRecorder
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartConfigurationRecorderRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoSuchConfigurationRecorderException'
        '481':
          description: NoAvailableDeliveryChannelException
          schema:
            $ref: '#/definitions/NoAvailableDeliveryChannelException'
  /#X-Amz-Target=StarlingDoveService.StartRemediationExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Runs an on-demand remediation for the specified Config rules against
        the last known remediation configuration. It runs an execution against
        the current state of your resources. Remediation execution is
        asynchronous.</p> <p>You can specify up to 100 resource keys per
        request. An existing StartRemediationExecution call for the specified
        resource keys must complete before you can call the API again.</p>
      operationId: StartRemediationExecution
      parameters:
        - enum:
            - StarlingDoveService.StartRemediationExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartRemediationExecutionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartRemediationExecutionResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: NoSuchRemediationConfigurationException
          schema:
            $ref: '#/definitions/NoSuchRemediationConfigurationException'
  /#X-Amz-Target=StarlingDoveService.StopConfigurationRecorder:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Stops recording configurations of the Amazon Web Services resources you
        have selected to record in your Amazon Web Services account.
      operationId: StopConfigurationRecorder
      parameters:
        - enum:
            - StarlingDoveService.StopConfigurationRecorder
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopConfigurationRecorderRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          schema:
            $ref: '#/definitions/NoSuchConfigurationRecorderException'
  /#X-Amz-Target=StarlingDoveService.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Associates the specified tags to a resource with the specified
        resourceArn. If existing tags on a resource are not specified in the
        request parameters, they are not changed. When a resource is deleted,
        the tags associated with that resource are deleted as well.
      operationId: TagResource
      parameters:
        - enum:
            - StarlingDoveService.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  /#X-Amz-Target=StarlingDoveService.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes specified tags from a resource.
      operationId: UntagResource
      parameters:
        - enum:
            - StarlingDoveService.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

