basePath: /
definitions:
  AmazonResourceType:
    maxLength: 256
    minLength: 0
    pattern: '[\s\S]*'
    type: string
  ComplianceDetails:
    description: >-
      Information that shows whether a resource is compliant with the effective
      tag policy, including details on any noncompliant tag keys.
    properties:
      ComplianceStatus:
        allOf:
          - $ref: '#/definitions/ComplianceStatus'
          - description: Whether a resource is compliant with the effective tag policy.
      KeysWithNoncompliantValues:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: >-
              These are keys defined in the effective policy that are on the
              resource with either incorrect case treatment or noncompliant
              values. 
      NoncompliantKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: >-
              These tag keys on the resource are noncompliant with the effective
              tag policy.
    type: object
  ComplianceStatus:
    type: boolean
  ConcurrentModificationException: {}
  ConstraintViolationException: {}
  DescribeReportCreationInput:
    properties: {}
    title: DescribeReportCreationInput
    type: object
  DescribeReportCreationOutput:
    properties:
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: Details of the common errors that all operations return.
      S3Location:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: >-
              The path to the Amazon S3 bucket where the report was stored on
              creation.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              <p>Reports the status of the operation.</p> <p>The operation
              status can be one of the following:</p> <ul> <li> <p>
              <code>RUNNING</code> - Report creation is in progress.</p> </li>
              <li> <p> <code>SUCCEEDED</code> - Report creation is complete. You
              can open the report from the Amazon S3 bucket that you specified
              when you ran <code>StartReportCreation</code>.</p> </li> <li> <p>
              <code>FAILED</code> - Report creation timed out or the Amazon S3
              bucket is not accessible. </p> </li> <li> <p> <code>NO
              REPORT</code> - No report was generated in the last 90 days.</p>
              </li> </ul>
    type: object
  ErrorCode:
    enum:
      - InternalServiceException
      - InvalidParameterException
    type: string
  ErrorMessage:
    type: string
  ExcludeCompliantResources:
    type: boolean
  FailedResourcesMap:
    additionalProperties:
      $ref: '#/definitions/FailureInfo'
    type: object
  FailureInfo:
    description: >-
      <p>Information about the errors that are returned for each failed
      resource. This information can include
      <code>InternalServiceException</code> and
      <code>InvalidParameterException</code> errors. It can also include any
      valid error code returned by the AWS service that hosts the resource that
      the ARN key represents.</p> <p>The following are common error codes that
      you might receive from other AWS services:</p> <ul> <li> <p>
      <b>InternalServiceException</b> – This can mean that the Resource Groups
      Tagging API didn't receive a response from another AWS service. It can
      also mean the the resource type in the request is not supported by the
      Resource Groups Tagging API. In these cases, it's safe to retry the
      request and then call <a
      href="http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html">GetResources</a>
      to verify the changes.</p> </li> <li> <p> <b>AccessDeniedException</b> –
      This can mean that you need permission to calling tagging operations in
      the AWS service that contains the resource. For example, to use the
      Resource Groups Tagging API to tag a CloudWatch alarm resource, you need
      permission to call <a
      href="http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html">
      <code>TagResources</code> </a> <i>and</i> <a
      href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">
      <code>TagResource</code> </a> in the CloudWatch API. </p> </li> </ul>
      <p>For more information on errors that are generated from other AWS
      services, see the documentation for that service. </p>
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: >-
              The code of the common error. Valid values include
              <code>InternalServiceException</code>,
              <code>InvalidParameterException</code>, and any valid error code
              returned by the AWS service that hosts the resource that you want
              to tag.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: The message of the common error.
      StatusCode:
        allOf:
          - $ref: '#/definitions/StatusCode'
          - description: The HTTP status code of the common error.
    type: object
  GetComplianceSummaryInput:
    properties:
      GroupBy:
        allOf:
          - $ref: '#/definitions/GroupBy'
          - description: >-
              Specifies a list of attributes to group the counts of noncompliant
              resources by. If supplied, the counts are sorted by those
              attributes.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResultsGetComplianceSummary'
          - description: >-
              Specifies the maximum number of results to be returned in each
              page. A query can return fewer than this maximum, even if there
              are more results still to return. You should always check the
              <code>PaginationToken</code> response value to see if there are
              more results. You can specify a minimum of 1 and a maximum value
              of 100.
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              Specifies a <code>PaginationToken</code> response value from a
              previous request to indicate that you want the next page of
              results. Leave this parameter empty in your initial request.
      RegionFilters:
        allOf:
          - $ref: '#/definitions/RegionFilterList'
          - description: >-
              Specifies a list of AWS Regions to limit the output by. If you use
              this parameter, the count of returned noncompliant resources
              includes only resources in the specified Regions.
      ResourceTypeFilters:
        allOf:
          - $ref: '#/definitions/ResourceTypeFilterList'
          - description: >-
              <p>Specifies that you want the response to include information for
              only resources of the specified types. The format of each resource
              type is <code>service[:resourceType]</code>. For example,
              specifying a resource type of <code>ec2</code> returns all Amazon
              EC2 resources (which includes EC2 instances). Specifying a
              resource type of <code>ec2:instance</code> returns only EC2
              instances. </p> <p>The string for each service name and resource
              type is the same as that embedded in a resource's Amazon Resource
              Name (ARN). Consult the <i>AWS General Reference</i> for the
              following:</p> <ul> <li> <p>For a list of service name strings,
              see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">AWS
              Service Namespaces</a>.</p> </li> <li> <p>For resource type
              strings, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax">Example
              ARNs</a>.</p> </li> <li> <p>For more information about ARNs, see
              <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs) and AWS Service Namespaces</a>.</p> </li>
              </ul> <p>You can specify multiple resource types by using a comma
              separated array. The array can include up to 100 items. Note that
              the length constraint requirement applies to each resource type
              filter. </p>
      TagKeyFilters:
        allOf:
          - $ref: '#/definitions/TagKeyFilterList'
          - description: >-
              Specifies that you want the response to include information for
              only resources that have tags with the specified tag keys. If you
              use this parameter, the count of returned noncompliant resources
              includes only resources that have the specified tag keys.
      TargetIdFilters:
        allOf:
          - $ref: '#/definitions/TargetIdFilterList'
          - description: >-
              Specifies target identifiers (usually, specific account IDs) to
              limit the output by. If you use this parameter, the count of
              returned noncompliant resources includes only resources with the
              specified target IDs.
    title: GetComplianceSummaryInput
    type: object
  GetComplianceSummaryOutput:
    properties:
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A string that indicates that there is more data available than
              this response contains. To receive the next part of the response,
              specify this response value as the <code>PaginationToken</code>
              value in the request for the next page.
      SummaryList:
        allOf:
          - $ref: '#/definitions/SummaryList'
          - description: A table that shows counts of noncompliant resources.
    type: object
  GetResourcesInput:
    properties:
      ExcludeCompliantResources:
        allOf:
          - $ref: '#/definitions/ExcludeCompliantResources'
          - description: >-
              <p>Specifies whether to exclude resources that are compliant with
              the tag policy. Set this to <code>true</code> if you are
              interested in retrieving information on noncompliant resources
              only.</p> <p>You can use this parameter only if the
              <code>IncludeComplianceDetails</code> parameter is also set to
              <code>true</code>.</p>
      IncludeComplianceDetails:
        allOf:
          - $ref: '#/definitions/IncludeComplianceDetails'
          - description: >-
              Specifies whether to include details regarding the compliance with
              the effective tag policy. Set this to <code>true</code> to
              determine whether resources are compliant with the tag policy and
              to get details.
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              Specifies a <code>PaginationToken</code> response value from a
              previous request to indicate that you want the next page of
              results. Leave this parameter empty in your initial request.
      ResourceARNList:
        allOf:
          - $ref: '#/definitions/ResourceARNListForGet'
          - description: >-
              <p>Specifies a list of ARNs of resources for which you want to
              retrieve tag data. You can't specify both this parameter and any
              of the pagination parameters (<code>ResourcesPerPage</code>,
              <code>TagsPerPage</code>, <code>PaginationToken</code>) in the
              same request. If you specify both, you get an <code>Invalid
              Parameter</code> exception.</p> <p>If a resource specified by this
              parameter doesn't exist, it doesn't generate an error; it simply
              isn't included in the response.</p> <p>An ARN (Amazon Resource
              Name) uniquely identifies a resource. For more information, see <a
              href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS
              General Reference</i>.</p>
      ResourceTypeFilters:
        allOf:
          - $ref: '#/definitions/ResourceTypeFilterList'
          - description: >-
              <p>Specifies the resource types that you want included in the
              response. The format of each resource type is
              <code>service[:resourceType]</code>. For example, specifying a
              resource type of <code>ec2</code> returns all Amazon EC2 resources
              (which includes EC2 instances). Specifying a resource type of
              <code>ec2:instance</code> returns only EC2 instances. </p> <p>The
              string for each service name and resource type is the same as that
              embedded in a resource's Amazon Resource Name (ARN). Consult the
              <i>AWS General Reference</i> for the following:</p> <p>For more
              information about ARNs, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs) and AWS Service Namespaces</a>.</p> <p>You
              can specify multiple resource types by using an array. The array
              can include up to 100 items. Note that the length constraint
              requirement applies to each resource type filter. </p>
      ResourcesPerPage:
        allOf:
          - $ref: '#/definitions/ResourcesPerPage'
          - description: >-
              Specifies the maximum number of results to be returned in each
              page. A query can return fewer than this maximum, even if there
              are more results still to return. You should always check the
              <code>PaginationToken</code> response value to see if there are
              more results. You can specify a minimum of 1 and a maximum value
              of 100.
      TagFilters:
        allOf:
          - $ref: '#/definitions/TagFilterList'
          - description: >-
              <p>Specifies a list of TagFilters (keys and values) to restrict
              the output to only those resources that have the specified tag
              and, if included, the specified value. Each <code>TagFilter</code>
              must contain a key with values optional. A request can include up
              to 50 keys, and each key can include up to 20 values. </p> <p>Note
              the following when deciding how to use TagFilters:</p> <ul> <li>
              <p>If you <i>don't</i> specify a <code>TagFilter</code>, the
              response includes all resources that are currently tagged or ever
              had a tag. Resources that currently don't have tags are shown with
              an empty tag set, like this: <code>"Tags": []</code>.</p> </li>
              <li> <p>If you specify more than one filter in a single request,
              the response returns only those resources that satisfy all
              filters.</p> </li> <li> <p>If you specify a filter that contains
              more than one value for a key, the response returns resources that
              match any of the specified values for that key.</p> </li> <li>
              <p>If you don't specify any values for a key, the response returns
              resources that are tagged with that key and any or no value.</p>
              <p>For example, for the following filters: <code>filter1=
              {keyA,{value1}}</code>,
              <code>filter2={keyB,{value2,value3,value4}}</code>, <code>filter3=
              {keyC}</code>:</p> <ul> <li> <p>
              <code>GetResources({filter1})</code> returns resources tagged with
              <code>key1=value1</code> </p> </li> <li> <p>
              <code>GetResources({filter2})</code> returns resources tagged with
              <code>key2=value2</code> or <code>key2=value3</code> or
              <code>key2=value4</code> </p> </li> <li> <p>
              <code>GetResources({filter3})</code> returns resources tagged with
              any tag with the key <code>key3</code>, and with any or no
              value</p> </li> <li> <p>
              <code>GetResources({filter1,filter2,filter3})</code> returns
              resources tagged with <code>(key1=value1) and (key2=value2 or
              key2=value3 or key2=value4) and (key3, any or no value)</code>
              </p> </li> </ul> </li> </ul>
      TagsPerPage:
        allOf:
          - $ref: '#/definitions/TagsPerPage'
          - description: >-
              <p>AWS recommends using <code>ResourcesPerPage</code> instead of
              this parameter.</p> <p>A limit that restricts the number of tags
              (key and value pairs) returned by <code>GetResources</code> in
              paginated output. A resource with no tags is counted as having one
              tag (one key and value pair).</p> <p> <code>GetResources</code>
              does not split a resource and its associated tags across pages. If
              the specified <code>TagsPerPage</code> would cause such a break, a
              <code>PaginationToken</code> is returned in place of the affected
              resource and its tags. Use that token in another request to get
              the remaining data. For example, if you specify a
              <code>TagsPerPage</code> of <code>100</code> and the account has
              22 resources with 10 tags each (meaning that each resource has 10
              key and value pairs), the output will consist of three pages. The
              first page displays the first 10 resources, each with its 10 tags.
              The second page displays the next 10 resources, each with its 10
              tags. The third page displays the remaining 2 resources, each with
              its 10 tags.</p> <p>You can set <code>TagsPerPage</code> to a
              minimum of 100 items up to a maximum of 500 items.</p>
    title: GetResourcesInput
    type: object
  GetResourcesOutput:
    properties:
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A string that indicates that there is more data available than
              this response contains. To receive the next part of the response,
              specify this response value as the <code>PaginationToken</code>
              value in the request for the next page.
      ResourceTagMappingList:
        allOf:
          - $ref: '#/definitions/ResourceTagMappingList'
          - description: >-
              A list of resource ARNs and the tags (keys and values) associated
              with those ARNs.
    type: object
  GetTagKeysInput:
    properties:
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              Specifies a <code>PaginationToken</code> response value from a
              previous request to indicate that you want the next page of
              results. Leave this parameter empty in your initial request.
    title: GetTagKeysInput
    type: object
  GetTagKeysOutput:
    properties:
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A string that indicates that there is more data available than
              this response contains. To receive the next part of the response,
              specify this response value as the <code>PaginationToken</code>
              value in the request for the next page.
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: A list of all tag keys in the AWS account.
    type: object
  GetTagValuesInput:
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              Specifies the tag key for which you want to list all existing
              values that are currently used in the specified AWS Region for the
              calling AWS account.
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              Specifies a <code>PaginationToken</code> response value from a
              previous request to indicate that you want the next page of
              results. Leave this parameter empty in your initial request.
    required:
      - Key
    title: GetTagValuesInput
    type: object
  GetTagValuesOutput:
    properties:
      PaginationToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A string that indicates that there is more data available than
              this response contains. To receive the next part of the response,
              specify this response value as the <code>PaginationToken</code>
              value in the request for the next page.
      TagValues:
        allOf:
          - $ref: '#/definitions/TagValuesOutputList'
          - description: >-
              A list of all tag values for the specified key currently used in
              the specified AWS Region for the calling AWS account.
    type: object
  GroupBy:
    items:
      $ref: '#/definitions/GroupByAttribute'
    type: array
  GroupByAttribute:
    enum:
      - TARGET_ID
      - REGION
      - RESOURCE_TYPE
    type: string
  IncludeComplianceDetails:
    type: boolean
  InternalServiceException: {}
  InvalidParameterException: {}
  LastUpdated:
    type: string
  MaxResultsGetComplianceSummary:
    maximum: 1000
    minimum: 1
    type: integer
  NonCompliantResources:
    type: integer
  PaginationToken:
    maxLength: 2048
    minLength: 0
    pattern: '[\s\S]*'
    type: string
  PaginationTokenExpiredException: {}
  Region:
    maxLength: 256
    minLength: 1
    pattern: '[\s\S]*'
    type: string
  RegionFilterList:
    items:
      $ref: '#/definitions/Region'
    maxItems: 100
    minItems: 1
    type: array
  ResourceARN:
    maxLength: 1011
    minLength: 1
    pattern: '[\s\S]*'
    type: string
  ResourceARNListForGet:
    items:
      $ref: '#/definitions/ResourceARN'
    maxItems: 100
    minItems: 1
    type: array
  ResourceARNListForTagUntag:
    items:
      $ref: '#/definitions/ResourceARN'
    maxItems: 20
    minItems: 1
    type: array
  ResourceTagMapping:
    description: >-
      A list of resource ARNs and the tags (keys and values) that are associated
      with each.
    properties:
      ComplianceDetails:
        allOf:
          - $ref: '#/definitions/ComplianceDetails'
          - description: >-
              Information that shows whether a resource is compliant with the
              effective tag policy, including details on any noncompliant tag
              keys.
      ResourceARN:
        allOf:
          - $ref: '#/definitions/ResourceARN'
          - description: The ARN of the resource.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags that have been applied to one or more AWS resources.
    type: object
  ResourceTagMappingList:
    items:
      $ref: '#/definitions/ResourceTagMapping'
    type: array
  ResourceTypeFilterList:
    items:
      $ref: '#/definitions/AmazonResourceType'
    type: array
  ResourcesPerPage:
    type: integer
  S3Bucket:
    maxLength: 63
    minLength: 3
    pattern: '[a-z0-9.-]*'
    type: string
  S3Location:
    type: string
  StartReportCreationInput:
    properties:
      S3Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: >-
              <p>The name of the Amazon S3 bucket where the report will be
              stored; for example:</p> <p> <code>awsexamplebucket</code> </p>
              <p>For more information on S3 bucket requirements, including an
              example bucket policy, see the example S3 bucket policy on this
              page.</p>
    required:
      - S3Bucket
    title: StartReportCreationInput
    type: object
  StartReportCreationOutput:
    properties: {}
    type: object
  Status:
    type: string
  StatusCode:
    type: integer
  Summary:
    description: A count of noncompliant resources.
    properties:
      LastUpdated:
        allOf:
          - $ref: '#/definitions/LastUpdated'
          - description: >-
              The timestamp that shows when this summary was generated in this
              Region. 
      NonCompliantResources:
        allOf:
          - $ref: '#/definitions/NonCompliantResources'
          - description: The count of noncompliant resources.
      Region:
        allOf:
          - $ref: '#/definitions/Region'
          - description: The AWS Region that the summary applies to.
      ResourceType:
        allOf:
          - $ref: '#/definitions/AmazonResourceType'
          - description: The AWS resource type.
      TargetId:
        allOf:
          - $ref: '#/definitions/TargetId'
          - description: >-
              The account identifier or the root identifier of the organization.
              If you don't know the root ID, you can call the AWS Organizations
              <a
              href="http://docs.aws.amazon.com/organizations/latest/APIReference/API_ListRoots.html">ListRoots</a>
              API.
      TargetIdType:
        allOf:
          - $ref: '#/definitions/TargetIdType'
          - description: 'Whether the target is an account, an OU, or the organization root.'
    type: object
  SummaryList:
    items:
      $ref: '#/definitions/Summary'
    type: array
  Tag:
    description: >-
      The metadata that you apply to AWS resources to help you categorize and
      organize them. Each tag consists of a key and a value, both of which you
      define. For more information, see <a
      href="http://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
      AWS Resources</a> in the <i>AWS General Reference</i>.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              One part of a key-value pair that makes up a tag. A key is a
              general label that acts like a category for more specific tag
              values.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              One part of a key-value pair that make up a tag. A value acts as a
              descriptor within a tag category (key). The value can be empty or
              null.
    required:
      - Key
      - Value
    type: object
  TagFilter:
    description: >-
      A list of tags (keys and values) that are used to specify the associated
      resources.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              One part of a key-value pair that makes up a tag. A key is a
              general label that acts like a category for more specific tag
              values.
      Values:
        allOf:
          - $ref: '#/definitions/TagValueList'
          - description: >-
              One part of a key-value pair that make up a tag. A value acts as a
              descriptor within a tag category (key). The value can be empty or
              null.
    type: object
  TagFilterList:
    items:
      $ref: '#/definitions/TagFilter'
    maxItems: 50
    minItems: 0
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '[\s\S]*'
    type: string
  TagKeyFilterList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagKeyListForUntag:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourcesInput:
    properties:
      ResourceARNList:
        allOf:
          - $ref: '#/definitions/ResourceARNListForTagUntag'
          - description: >-
              <p>Specifies the list of ARNs of the resources that you want to
              apply tags to.</p> <p>An ARN (Amazon Resource Name) uniquely
              identifies a resource. For more information, see <a
              href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS
              General Reference</i>.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Specifies a list of tags that you want to add to the specified
              resources. A tag consists of a key and a value that you define.
    required:
      - ResourceARNList
      - Tags
    title: TagResourcesInput
    type: object
  TagResourcesOutput:
    properties:
      FailedResourcesMap:
        allOf:
          - $ref: '#/definitions/FailedResourcesMap'
          - description: >-
              A map containing a key-value pair for each failed item that
              couldn't be tagged. The key is the ARN of the failed resource. The
              value is a <code>FailureInfo</code> object that contains an error
              code, a status code, and an error message. If there are no errors,
              the <code>FailedResourcesMap</code> is empty.
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '[\s\S]*'
    type: string
  TagValueList:
    items:
      $ref: '#/definitions/TagValue'
    maxItems: 20
    minItems: 0
    type: array
  TagValuesOutputList:
    items:
      $ref: '#/definitions/TagValue'
    type: array
  TagsPerPage:
    type: integer
  TargetId:
    maxLength: 68
    minLength: 6
    pattern: '[a-zA-Z0-9-]*'
    type: string
  TargetIdFilterList:
    items:
      $ref: '#/definitions/TargetId'
    maxItems: 100
    minItems: 1
    type: array
  TargetIdType:
    enum:
      - ACCOUNT
      - OU
      - ROOT
    type: string
  ThrottledException: {}
  UntagResourcesInput:
    properties:
      ResourceARNList:
        allOf:
          - $ref: '#/definitions/ResourceARNListForTagUntag'
          - description: >-
              <p>Specifies a list of ARNs of the resources that you want to
              remove tags from.</p> <p>An ARN (Amazon Resource Name) uniquely
              identifies a resource. For more information, see <a
              href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS
              General Reference</i>.</p>
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyListForUntag'
          - description: >-
              Specifies a list of tag keys that you want to remove from the
              specified resources.
    required:
      - ResourceARNList
      - TagKeys
    title: UntagResourcesInput
    type: object
  UntagResourcesOutput:
    properties:
      FailedResourcesMap:
        allOf:
          - $ref: '#/definitions/FailedResourcesMap'
          - description: >-
              A map containing a key-value pair for each failed item that
              couldn't be untagged. The key is the ARN of the failed resource.
              The value is a <code>FailureInfo</code> object that contains an
              error code, a status code, and an error message. If there are no
              errors, the <code>FailedResourcesMap</code> is empty.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/tagging/'
host: tagging.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: <fullname>Resource Groups Tagging API</fullname>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Resource Groups Tagging API
  version: '2017-01-26'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resourcegroupstaggingapi-2017-01-26.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: resourcegroupstaggingapi
paths:
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.DescribeReportCreation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Describes the status of the <code>StartReportCreation</code>
        operation. </p> <p>You can call this operation only from the
        organization's management account and from the us-east-1 Region.</p>
      operationId: DescribeReportCreation
      parameters:
        - enum:
            - ResourceGroupsTaggingAPI_20170126.DescribeReportCreation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReportCreationInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReportCreationOutput'
        '480':
          description: ConstraintViolationException
          schema:
            $ref: '#/definitions/ConstraintViolationException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetComplianceSummary:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a table that shows counts of resources that are noncompliant
        with their tag policies.</p> <p>For more information on tag policies,
        see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag
        Policies</a> in the <i>AWS Organizations User Guide.</i> </p> <p>You can
        call this operation only from the organization's management account and
        from the us-east-1 Region.</p> <p>This operation supports pagination,
        where the response can be sent in multiple pages. You should check the
        <code>PaginationToken</code> response parameter to determine if there
        are additional results available to return. Repeat the query, passing
        the <code>PaginationToken</code> response parameter value as an input to
        the next request until you recieve a <code>null</code> value. A null
        value for <code>PaginationToken</code> indicates that there are no more
        results waiting to be returned.</p>
      operationId: GetComplianceSummary
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PaginationToken
          required: false
          type: string
        - enum:
            - ResourceGroupsTaggingAPI_20170126.GetComplianceSummary
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetComplianceSummaryInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceSummaryOutput'
        '480':
          description: ConstraintViolationException
          schema:
            $ref: '#/definitions/ConstraintViolationException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetResources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns all the tagged or previously tagged resources that are
        located in the specified Region for the AWS account.</p> <p>Depending on
        what information you want returned, you can also specify the
        following:</p> <ul> <li> <p> <i>Filters</i> that specify what tags and
        resource types you want returned. The response includes all tags that
        are associated with the requested resources.</p> </li> <li>
        <p>Information about compliance with the account's effective tag policy.
        For more information on tag policies, see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag
        Policies</a> in the <i>AWS Organizations User Guide.</i> </p> </li>
        </ul> <p>This operation supports pagination, where the response can be
        sent in multiple pages. You should check the
        <code>PaginationToken</code> response parameter to determine if there
        are additional results available to return. Repeat the query, passing
        the <code>PaginationToken</code> response parameter value as an input to
        the next request until you recieve a <code>null</code> value. A null
        value for <code>PaginationToken</code> indicates that there are no more
        results waiting to be returned.</p>
      operationId: GetResources
      parameters:
        - description: Pagination limit
          in: query
          name: ResourcesPerPage
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PaginationToken
          required: false
          type: string
        - enum:
            - ResourceGroupsTaggingAPI_20170126.GetResources
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResourcesInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourcesOutput'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          schema:
            $ref: '#/definitions/PaginationTokenExpiredException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagKeys:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns all tag keys currently in use in the specified Region for the
        calling AWS account.</p> <p>This operation supports pagination, where
        the response can be sent in multiple pages. You should check the
        <code>PaginationToken</code> response parameter to determine if there
        are additional results available to return. Repeat the query, passing
        the <code>PaginationToken</code> response parameter value as an input to
        the next request until you recieve a <code>null</code> value. A null
        value for <code>PaginationToken</code> indicates that there are no more
        results waiting to be returned.</p>
      operationId: GetTagKeys
      parameters:
        - description: Pagination token
          in: query
          name: PaginationToken
          required: false
          type: string
        - enum:
            - ResourceGroupsTaggingAPI_20170126.GetTagKeys
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTagKeysInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTagKeysOutput'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          schema:
            $ref: '#/definitions/PaginationTokenExpiredException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagValues:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns all tag values for the specified key that are used in the
        specified AWS Region for the calling AWS account.</p> <p>This operation
        supports pagination, where the response can be sent in multiple pages.
        You should check the <code>PaginationToken</code> response parameter to
        determine if there are additional results available to return. Repeat
        the query, passing the <code>PaginationToken</code> response parameter
        value as an input to the next request until you recieve a
        <code>null</code> value. A null value for <code>PaginationToken</code>
        indicates that there are no more results waiting to be returned.</p>
      operationId: GetTagValues
      parameters:
        - description: Pagination token
          in: query
          name: PaginationToken
          required: false
          type: string
        - enum:
            - ResourceGroupsTaggingAPI_20170126.GetTagValues
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTagValuesInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTagValuesOutput'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          schema:
            $ref: '#/definitions/PaginationTokenExpiredException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.StartReportCreation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Generates a report that lists all tagged resources in the accounts
        across your organization and tells whether each resource is compliant
        with the effective tag policy. Compliance data is refreshed daily. The
        report is generated asynchronously.</p> <p>The generated report is saved
        to the following location:</p> <p>
        <code>s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv</code>
        </p> <p>You can call this operation only from the organization's
        management account and from the us-east-1 Region.</p>
      operationId: StartReportCreation
      parameters:
        - enum:
            - ResourceGroupsTaggingAPI_20170126.StartReportCreation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartReportCreationInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartReportCreationOutput'
        '480':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '481':
          description: ConstraintViolationException
          schema:
            $ref: '#/definitions/ConstraintViolationException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.TagResources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Applies one or more tags to the specified resources. Note the
        following:</p> <ul> <li> <p>Not all resources can have tags. For a list
        of services with resources that support tagging using this operation,
        see <a
        href="https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html">Services
        that support the Resource Groups Tagging API</a>.</p> </li> <li> <p>Each
        resource can have up to 50 tags. For other limits, see <a
        href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions">Tag
        Naming and Usage Conventions</a> in the <i>AWS General Reference.</i>
        </p> </li> <li> <p>You can only tag resources that are located in the
        specified AWS Region for the AWS account.</p> </li> <li> <p>To add tags
        to a resource, you need the necessary permissions for the service that
        the resource belongs to as well as permissions for adding tags. For more
        information, see the documentation for each service.</p> </li> </ul>
        <important> <p>Do not store personally identifiable information (PII) or
        other confidential or sensitive information in tags. We use tags to
        provide you with billing and administration services. Tags are not
        intended to be used for private or sensitive data.</p> </important>
      operationId: TagResources
      parameters:
        - enum:
            - ResourceGroupsTaggingAPI_20170126.TagResources
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourcesInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourcesOutput'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.UntagResources:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Removes the specified tags from the specified resources. When you
        specify a tag key, the action removes both that key and its associated
        value. The operation succeeds even if you attempt to remove tags from a
        resource that were already removed. Note the following:</p> <ul> <li>
        <p>To remove tags from a resource, you need the necessary permissions
        for the service that the resource belongs to as well as permissions for
        removing tags. For more information, see the documentation for the
        service whose resource you want to untag.</p> </li> <li> <p>You can only
        tag resources that are located in the specified AWS Region for the
        calling AWS account.</p> </li> </ul>
      operationId: UntagResources
      parameters:
        - enum:
            - ResourceGroupsTaggingAPI_20170126.UntagResources
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourcesInput'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourcesOutput'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

