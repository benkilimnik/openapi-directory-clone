basePath: /
definitions:
  ASConfigMaxConcurrency:
    maximum: 200
    minimum: 1
    type: integer
  ASConfigMaxSize:
    maximum: 25
    minimum: 1
    type: integer
  ASConfigMinSize:
    maximum: 25
    minimum: 1
    type: integer
  AppRunnerResourceArn:
    maxLength: 1011
    minLength: 1
    pattern: >-
      arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
    type: string
  AssociateCustomDomainRequest:
    properties:
      DomainName:
        allOf:
          - $ref: '#/definitions/DomainName'
          - description: >-
              A custom domain endpoint to associate. Specify a root domain (for
              example, <code>example.com</code>), a subdomain (for example,
              <code>login.example.com</code> or
              <code>admin.login.example.com</code>), or a wildcard (for example,
              <code>*.example.com</code>).
      EnableWWWSubdomain:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              <p>Set to <code>true</code> to associate the subdomain
              <code>www.<i>DomainName</i> </code> with the App Runner service in
              addition to the base domain.</p> <p>Default: <code>true</code>
              </p>
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to associate a custom domain name with.
    required:
      - ServiceArn
      - DomainName
    title: AssociateCustomDomainRequest
    type: object
  AssociateCustomDomainResponse:
    properties:
      CustomDomain:
        allOf:
          - $ref: '#/definitions/CustomDomain'
          - description: A description of the domain name that's being associated.
      DNSTarget:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The App Runner subdomain of the App Runner service. The custom
              domain name is mapped to this target name.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service with
              which a custom domain name is associated.
    required:
      - DNSTarget
      - ServiceArn
      - CustomDomain
    type: object
  AuthenticationConfiguration:
    description: >-
      Describes resources needed to authenticate access to some source
      repositories. The specific resource depends on the repository provider.
    properties:
      AccessRoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role that grants the App
              Runner service access to a source repository. It's required for
              ECR image repositories (but not for ECR Public repositories).
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner connection that
              enables the App Runner service to connect to a source repository.
              It's required for GitHub code repositories.
    type: object
  AutoScalingConfiguration:
    description: >-
      <p>Describes an AWS App Runner automatic scaling configuration resource.
      Multiple revisions of a configuration have the same
      <code>AutoScalingConfigurationName</code> and different
      <code>AutoScalingConfigurationRevision</code> values.</p> <p>A higher
      <code>MinSize</code> increases the spread of your App Runner service over
      more Availability Zones in the AWS Region. The tradeoff is a higher
      minimal cost.</p> <p>A lower <code>MaxSize</code> controls your cost. The
      tradeoff is lower responsiveness during peak demand.</p>
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this auto scaling configuration.
      AutoScalingConfigurationName:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationName'
          - description: >-
              The customer-provided auto scaling configuration name. It can be
              used in multiple revisions of a configuration.
      AutoScalingConfigurationRevision:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The revision of this auto scaling configuration. It's unique among
              all the active configurations (<code>"Status": "ACTIVE"</code>)
              that share the same <code>AutoScalingConfigurationName</code>.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the auto scaling configuration was created. It's in
              Unix time stamp format.
      DeletedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the auto scaling configuration was deleted. It's in
              Unix time stamp format.
      Latest:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              It's set to <code>true</code> for the configuration with the
              highest <code>Revision</code> among all configurations that share
              the same <code>Name</code>. It's set to <code>false</code>
              otherwise.
      MaxConcurrency:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum number of concurrent requests that an instance
              processes. If the number of concurrent requests exceeds this
              limit, App Runner scales the service up.
      MaxSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum number of instances that a service scales up to. At
              most <code>MaxSize</code> instances actively serve traffic for
              your service.
      MinSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The minimum number of instances that App Runner provisions for
              a service. The service always has at least <code>MinSize</code>
              provisioned instances. Some of them actively serve traffic. The
              rest of them (provisioned and inactive instances) are a
              cost-effective compute capacity reserve and are ready to be
              quickly activated. You pay for memory usage of all the provisioned
              instances. You pay for CPU usage of only the active subset.</p>
              <p>App Runner temporarily doubles the number of provisioned
              instances during deployments, to maintain the same capacity for
              both old and new code.</p>
      Status:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationStatus'
          - description: >-
              The current state of the auto scaling configuration. If the status
              of a configuration revision is <code>INACTIVE</code>, it was
              deleted and can't be used. Inactive configuration revisions are
              permanently removed some time after they are deleted.
    type: object
  AutoScalingConfigurationName:
    maxLength: 32
    minLength: 4
    pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
    type: string
  AutoScalingConfigurationStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
  AutoScalingConfigurationSummary:
    description: >-
      <p>Provides summary information about an AWS App Runner automatic scaling
      configuration resource.</p> <p>This type contains limited information
      about an auto scaling configuration. It includes only identification
      information, without configuration details. It's returned by the
      <a>ListAutoScalingConfigurations</a> action. Complete configuration
      information is returned by the <a>CreateAutoScalingConfiguration</a>,
      <a>DescribeAutoScalingConfiguration</a>, and
      <a>DeleteAutoScalingConfiguration</a> actions using the
      <a>AutoScalingConfiguration</a> type.</p>
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this auto scaling configuration.
      AutoScalingConfigurationName:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationName'
          - description: >-
              The customer-provided auto scaling configuration name. It can be
              used in multiple revisions of a configuration.
      AutoScalingConfigurationRevision:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The revision of this auto scaling configuration. It's unique among
              all the active configurations (<code>"Status": "ACTIVE"</code>)
              with the same <code>AutoScalingConfigurationName</code>.
    type: object
  AutoScalingConfigurationSummaryList:
    items:
      $ref: '#/definitions/AutoScalingConfigurationSummary'
    type: array
  Boolean:
    type: boolean
  BuildCommand:
    format: password
    type: string
  CertificateValidationRecord:
    description: >-
      Describes a certificate CNAME record to add to your DNS. For more
      information, see <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_AssociateCustomDomain.html">AssociateCustomDomain</a>.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The certificate CNAME record name.
      Status:
        allOf:
          - $ref: '#/definitions/CertificateValidationRecordStatus'
          - description: >-
              The current state of the certificate CNAME record validation. It
              should change to <code>SUCCESS</code> after App Runner completes
              validation with your DNS.
      Type:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The record type, always <code>CNAME</code>.'
      Value:
        allOf:
          - $ref: '#/definitions/String'
          - description: The certificate CNAME record value.
    type: object
  CertificateValidationRecordList:
    items:
      $ref: '#/definitions/CertificateValidationRecord'
    type: array
  CertificateValidationRecordStatus:
    enum:
      - PENDING_VALIDATION
      - SUCCESS
      - FAILED
    type: string
  CodeConfiguration:
    description: >-
      Describes the configuration that AWS App Runner uses to build and run an
      App Runner service from a source code repository.
    properties:
      CodeConfigurationValues:
        allOf:
          - $ref: '#/definitions/CodeConfigurationValues'
          - description: >-
              The basic configuration for building and running the App Runner
              service. Use it to quickly launch an App Runner service without
              providing a <code>apprunner.yaml</code> file in the source code
              repository (or ignoring the file if it exists).
      ConfigurationSource:
        allOf:
          - $ref: '#/definitions/ConfigurationSource'
          - description: >-
              <p>The source of the App Runner configuration. Values are
              interpreted as follows:</p> <ul> <li> <p> <code>REPOSITORY</code>
              – App Runner reads configuration values from the
              <code>apprunner.yaml</code> file in the source code repository and
              ignores <code>CodeConfigurationValues</code>.</p> </li> <li> <p>
              <code>API</code> – App Runner uses configuration values provided
              in <code>CodeConfigurationValues</code> and ignores the
              <code>apprunner.yaml</code> file in the source code
              repository.</p> </li> </ul>
    required:
      - ConfigurationSource
    type: object
  CodeConfigurationValues:
    description: >-
      Describes the basic configuration needed for building and running an AWS
      App Runner service. This type doesn't support the full set of possible
      configuration options. Fur full configuration capabilities, use a
      <code>apprunner.yaml</code> file in the source code repository.
    properties:
      BuildCommand:
        allOf:
          - $ref: '#/definitions/BuildCommand'
          - description: The command App Runner runs to build your application.
      Port:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The port that your application listens to in the container.</p>
              <p>Default: <code>8080</code> </p>
      Runtime:
        allOf:
          - $ref: '#/definitions/Runtime'
          - description: >-
              A runtime environment type for building and running an App Runner
              service. It represents a programming language runtime.
      RuntimeEnvironmentVariables:
        allOf:
          - $ref: '#/definitions/RuntimeEnvironmentVariables'
          - description: >-
              The environment variables that are available to your running App
              Runner service. An array of key-value pairs. Keys with a prefix of
              <code>AWSAPPRUNNER</code> are reserved for system use and aren't
              valid.
      StartCommand:
        allOf:
          - $ref: '#/definitions/StartCommand'
          - description: The command App Runner runs to start your application.
    required:
      - Runtime
    type: object
  CodeRepository:
    description: Describes a source code repository.
    properties:
      CodeConfiguration:
        allOf:
          - $ref: '#/definitions/CodeConfiguration'
          - description: >-
              Configuration for building and running the service from a source
              code repository.
      RepositoryUrl:
        allOf:
          - $ref: '#/definitions/String'
          - description: The location of the repository that contains the source code.
      SourceCodeVersion:
        allOf:
          - $ref: '#/definitions/SourceCodeVersion'
          - description: The version that should be used within the source code repository.
    required:
      - RepositoryUrl
      - SourceCodeVersion
    type: object
  ConfigurationSource:
    enum:
      - REPOSITORY
      - API
    type: string
  Connection:
    description: Describes an AWS App Runner connection resource.
    properties:
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this connection.
      ConnectionName:
        allOf:
          - $ref: '#/definitions/ConnectionName'
          - description: The customer-provided connection name.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The App Runner connection creation time, expressed as a Unix time
              stamp.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: The source repository provider.
      Status:
        allOf:
          - $ref: '#/definitions/ConnectionStatus'
          - description: >-
              The current state of the App Runner connection. When the state is
              <code>AVAILABLE</code>, you can use the connection to create an
              App Runner service.
    type: object
  ConnectionName:
    maxLength: 32
    minLength: 4
    pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
    type: string
  ConnectionStatus:
    enum:
      - PENDING_HANDSHAKE
      - AVAILABLE
      - ERROR
      - DELETED
    type: string
  ConnectionSummary:
    description: Provides summary information about an AWS App Runner connection resource.
    properties:
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this connection.
      ConnectionName:
        allOf:
          - $ref: '#/definitions/ConnectionName'
          - description: The customer-provided connection name.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The App Runner connection creation time, expressed as a Unix time
              stamp.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: The source repository provider.
      Status:
        allOf:
          - $ref: '#/definitions/ConnectionStatus'
          - description: >-
              The current state of the App Runner connection. When the state is
              <code>AVAILABLE</code>, you can use the connection to create an
              App Runner service.
    type: object
  ConnectionSummaryList:
    items:
      $ref: '#/definitions/ConnectionSummary'
    type: array
  Cpu:
    maxLength: 6
    minLength: 4
    pattern: 1024|2048|(1|2) vCPU
    type: string
  CreateAutoScalingConfigurationRequest:
    properties:
      AutoScalingConfigurationName:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationName'
          - description: >-
              A name for the auto scaling configuration. When you use it for the
              first time in an AWS Region, App Runner creates revision number
              <code>1</code> of this name. When you use the same name in
              subsequent calls, App Runner creates incremental revisions of the
              configuration.
      MaxConcurrency:
        allOf:
          - $ref: '#/definitions/ASConfigMaxConcurrency'
          - description: >-
              <p>The maximum number of concurrent requests that you want an
              instance to process. If the number of concurrent requests exceeds
              this limit, App Runner scales up your service.</p> <p>Default:
              <code>100</code> </p>
      MaxSize:
        allOf:
          - $ref: '#/definitions/ASConfigMaxSize'
          - description: >-
              <p>The maximum number of instances that your service scales up to.
              At most <code>MaxSize</code> instances actively serve traffic for
              your service.</p> <p>Default: <code>25</code> </p>
      MinSize:
        allOf:
          - $ref: '#/definitions/ASConfigMinSize'
          - description: >-
              <p>The minimum number of instances that App Runner provisions for
              your service. The service always has at least <code>MinSize</code>
              provisioned instances. Some of them actively serve traffic. The
              rest of them (provisioned and inactive instances) are a
              cost-effective compute capacity reserve and are ready to be
              quickly activated. You pay for memory usage of all the provisioned
              instances. You pay for CPU usage of only the active subset.</p>
              <p>App Runner temporarily doubles the number of provisioned
              instances during deployments, to maintain the same capacity for
              both old and new code.</p> <p>Default: <code>1</code> </p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of metadata items that you can associate with your auto
              scaling configuration resource. A tag is a key-value pair.
    required:
      - AutoScalingConfigurationName
    title: CreateAutoScalingConfigurationRequest
    type: object
  CreateAutoScalingConfigurationResponse:
    properties:
      AutoScalingConfiguration:
        allOf:
          - $ref: '#/definitions/AutoScalingConfiguration'
          - description: >-
              A description of the App Runner auto scaling configuration that's
              created by this request.
    required:
      - AutoScalingConfiguration
    type: object
  CreateConnectionRequest:
    properties:
      ConnectionName:
        allOf:
          - $ref: '#/definitions/ConnectionName'
          - description: >-
              A name for the new connection. It must be unique across all App
              Runner connections for the AWS account in the AWS Region.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: The source repository provider.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of metadata items that you can associate with your
              connection resource. A tag is a key-value pair.
    required:
      - ConnectionName
      - ProviderType
    title: CreateConnectionRequest
    type: object
  CreateConnectionResponse:
    properties:
      Connection:
        allOf:
          - $ref: '#/definitions/Connection'
          - description: >-
              A description of the App Runner connection that's created by this
              request.
    required:
      - Connection
    type: object
  CreateServiceRequest:
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of an App Runner automatic scaling
              configuration resource that you want to associate with your
              service. If not provided, App Runner associates the latest
              revision of a default auto scaling configuration.
      EncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/EncryptionConfiguration'
          - description: >-
              An optional custom encryption key that App Runner uses to encrypt
              the copy of your source repository that it maintains and your
              service logs. By default, App Runner uses an AWS managed CMK.
      HealthCheckConfiguration:
        allOf:
          - $ref: '#/definitions/HealthCheckConfiguration'
          - description: >-
              The settings for the health check that AWS App Runner performs to
              monitor the health of your service.
      InstanceConfiguration:
        allOf:
          - $ref: '#/definitions/InstanceConfiguration'
          - description: >-
              The runtime configuration of instances (scaling units) of the App
              Runner service.
      ServiceName:
        allOf:
          - $ref: '#/definitions/ServiceName'
          - description: >-
              A name for the new service. It must be unique across all the
              running App Runner services in your AWS account in the AWS Region.
      SourceConfiguration:
        allOf:
          - $ref: '#/definitions/SourceConfiguration'
          - description: >-
              The source to deploy to the App Runner service. It can be a code
              or an image repository.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              An optional list of metadata items that you can associate with
              your service resource. A tag is a key-value pair.
    required:
      - ServiceName
      - SourceConfiguration
    title: CreateServiceRequest
    type: object
  CreateServiceResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a
              href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a>
              call to track the operation's progress.
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A description of the App Runner service that's created by this
              request.
    required:
      - Service
      - OperationId
    type: object
  CustomDomain:
    description: >-
      Describes a custom domain that's associated with an AWS App Runner
      service.
    properties:
      CertificateValidationRecords:
        allOf:
          - $ref: '#/definitions/CertificateValidationRecordList'
          - description: >-
              A list of certificate CNAME records that's used for this domain
              name.
      DomainName:
        allOf:
          - $ref: '#/definitions/DomainName'
          - description: >-
              An associated custom domain endpoint. It can be a root domain (for
              example, <code>example.com</code>), a subdomain (for example,
              <code>login.example.com</code> or
              <code>admin.login.example.com</code>), or a wildcard (for example,
              <code>*.example.com</code>).
      EnableWWWSubdomain:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              When <code>true</code>, the subdomain <code>www.<i>DomainName</i>
              </code> is associated with the App Runner service in addition to
              the base domain.
      Status:
        allOf:
          - $ref: '#/definitions/CustomDomainAssociationStatus'
          - description: The current state of the domain name association.
    required:
      - DomainName
      - EnableWWWSubdomain
      - Status
    type: object
  CustomDomainAssociationStatus:
    enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - DELETING
      - DELETE_FAILED
      - PENDING_CERTIFICATE_DNS_VALIDATION
      - BINDING_CERTIFICATE
    type: string
  CustomDomainList:
    items:
      $ref: '#/definitions/CustomDomain'
    type: array
  DeleteAutoScalingConfigurationRequest:
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the App Runner auto scaling
              configuration that you want to delete.</p> <p>The ARN can be a
              full auto scaling configuration ARN, or a partial ARN ending with
              either <code>.../<i>name</i> </code> or
              <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't
              specified, the latest active revision is deleted.</p>
    required:
      - AutoScalingConfigurationArn
    title: DeleteAutoScalingConfigurationRequest
    type: object
  DeleteAutoScalingConfigurationResponse:
    properties:
      AutoScalingConfiguration:
        allOf:
          - $ref: '#/definitions/AutoScalingConfiguration'
          - description: >-
              A description of the App Runner auto scaling configuration that
              this request just deleted.
    required:
      - AutoScalingConfiguration
    type: object
  DeleteConnectionRequest:
    properties:
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner connection that
              you want to delete.
    required:
      - ConnectionArn
    title: DeleteConnectionRequest
    type: object
  DeleteConnectionResponse:
    properties:
      Connection:
        allOf:
          - $ref: '#/definitions/Connection'
          - description: >-
              A description of the App Runner connection that this request just
              deleted.
    type: object
  DeleteServiceRequest:
    properties:
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to delete.
    required:
      - ServiceArn
    title: DeleteServiceRequest
    type: object
  DeleteServiceResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a>ListOperations</a>
              call to track the operation's progress.
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A description of the App Runner service that this request just
              deleted.
    required:
      - Service
      - OperationId
    type: object
  DescribeAutoScalingConfigurationRequest:
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the App Runner auto scaling
              configuration that you want a description for.</p> <p>The ARN can
              be a full auto scaling configuration ARN, or a partial ARN ending
              with either <code>.../<i>name</i> </code> or
              <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't
              specified, the latest active revision is described.</p>
    required:
      - AutoScalingConfigurationArn
    title: DescribeAutoScalingConfigurationRequest
    type: object
  DescribeAutoScalingConfigurationResponse:
    properties:
      AutoScalingConfiguration:
        allOf:
          - $ref: '#/definitions/AutoScalingConfiguration'
          - description: >-
              A full description of the App Runner auto scaling configuration
              that you specified in this request.
    required:
      - AutoScalingConfiguration
    type: object
  DescribeCustomDomainsMaxResults:
    maximum: 5
    minimum: 1
    type: integer
  DescribeCustomDomainsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/DescribeCustomDomainsMaxResults'
          - description: >-
              <p>The maximum number of results that each response (result page)
              can include. It's used for a paginated request.</p> <p>If you
              don't specify <code>MaxResults</code>, the request retrieves all
              available results in a single response.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>A token from a previous result page. It's used for a paginated
              request. The request retrieves the next result page. All other
              parameter values must be identical to the ones that are specified
              in the initial request.</p> <p>If you don't specify
              <code>NextToken</code>, the request retrieves the first result
              page.</p>
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want associated custom domain names to be described for.
    required:
      - ServiceArn
    title: DescribeCustomDomainsRequest
    type: object
  DescribeCustomDomainsResponse:
    properties:
      CustomDomains:
        allOf:
          - $ref: '#/definitions/CustomDomainList'
          - description: >-
              A list of descriptions of custom domain names that are associated
              with the service. In a paginated request, the request returns up
              to <code>MaxResults</code> records per call.
      DNSTarget:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The App Runner subdomain of the App Runner service. The associated
              custom domain names are mapped to this target name.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The token that you can pass in a subsequent request to get the
              next result page. It's returned in a paginated request.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service whose
              associated custom domain names you want to describe.
    required:
      - DNSTarget
      - ServiceArn
      - CustomDomains
    type: object
  DescribeServiceRequest:
    properties:
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want a description for.
    required:
      - ServiceArn
    title: DescribeServiceRequest
    type: object
  DescribeServiceResponse:
    properties:
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A full description of the App Runner service that you specified in
              this request.
    required:
      - Service
    type: object
  DisassociateCustomDomainRequest:
    properties:
      DomainName:
        allOf:
          - $ref: '#/definitions/DomainName'
          - description: >-
              The domain name that you want to disassociate from the App Runner
              service.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to disassociate a custom domain name from.
    required:
      - ServiceArn
      - DomainName
    title: DisassociateCustomDomainRequest
    type: object
  DisassociateCustomDomainResponse:
    properties:
      CustomDomain:
        allOf:
          - $ref: '#/definitions/CustomDomain'
          - description: A description of the domain name that's being disassociated.
      DNSTarget:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The App Runner subdomain of the App Runner service. The
              disassociated custom domain name was mapped to this target name.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that a
              custom domain name is disassociated from.
    required:
      - DNSTarget
      - ServiceArn
      - CustomDomain
    type: object
  DomainName:
    maxLength: 255
    minLength: 1
    type: string
  EncryptionConfiguration:
    description: >-
      Describes a custom encryption key that AWS App Runner uses to encrypt
      copies of the source repository and service logs.
    properties:
      KmsKey:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: The ARN of the KMS key that's used for encryption.
    required:
      - KmsKey
    type: object
  HealthCheckConfiguration:
    description: >-
      Describes the settings for the health check that AWS App Runner performs
      to monitor the health of a service.
    properties:
      HealthyThreshold:
        allOf:
          - $ref: '#/definitions/HealthCheckHealthyThreshold'
          - description: >-
              <p>The number of consecutive checks that must succeed before App
              Runner decides that the service is healthy.</p> <p>Default:
              <code>3</code> </p>
      Interval:
        allOf:
          - $ref: '#/definitions/HealthCheckInterval'
          - description: >-
              <p>The time interval, in seconds, between health checks.</p>
              <p>Default: <code>5</code> </p>
      Path:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The URL that health check requests are sent to.</p> <p>
              <code>Path</code> is only applicable when you set
              <code>Protocol</code> to <code>HTTP</code>.</p> <p>Default:
              <code>"/"</code> </p>
      Protocol:
        allOf:
          - $ref: '#/definitions/HealthCheckProtocol'
          - description: >-
              <p>The IP protocol that App Runner uses to perform health checks
              for your service.</p> <p>If you set <code>Protocol</code> to
              <code>HTTP</code>, App Runner sends health check requests to the
              HTTP path specified by <code>Path</code>.</p> <p>Default:
              <code>TCP</code> </p>
      Timeout:
        allOf:
          - $ref: '#/definitions/HealthCheckTimeout'
          - description: >-
              <p>The time, in seconds, to wait for a health check response
              before deciding it failed.</p> <p>Default: <code>2</code> </p>
      UnhealthyThreshold:
        allOf:
          - $ref: '#/definitions/HealthCheckUnhealthyThreshold'
          - description: >-
              <p>The number of consecutive checks that must fail before App
              Runner decides that the service is unhealthy.</p> <p>Default:
              <code>3</code> </p>
    type: object
  HealthCheckHealthyThreshold:
    maximum: 20
    minimum: 1
    type: integer
  HealthCheckInterval:
    maximum: 20
    minimum: 1
    type: integer
  HealthCheckProtocol:
    enum:
      - TCP
      - HTTP
    type: string
  HealthCheckTimeout:
    maximum: 20
    minimum: 1
    type: integer
  HealthCheckUnhealthyThreshold:
    maximum: 20
    minimum: 1
    type: integer
  ImageConfiguration:
    description: >-
      Describes the configuration that AWS App Runner uses to run an App Runner
      service using an image pulled from a source image repository.
    properties:
      Port:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The port that your application listens to in the container.</p>
              <p>Default: <code>8080</code> </p>
      RuntimeEnvironmentVariables:
        allOf:
          - $ref: '#/definitions/RuntimeEnvironmentVariables'
          - description: >-
              Environment variables that are available to your running App
              Runner service. An array of key-value pairs. Keys with a prefix of
              <code>AWSAPPRUNNER</code> are reserved for system use and aren't
              valid.
      StartCommand:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional command that App Runner runs to start the application
              in the source image. If specified, this command overrides the
              Docker image’s default start command.
    type: object
  ImageIdentifier:
    maxLength: 1024
    minLength: 1
    pattern: >-
      ([0-9]{12}.dkr.ecr.[a-z\-]+-[0-9]{1}.amazonaws.com\/.*)|(^public\.ecr\.aws\/.+\/.+)
    type: string
  ImageRepository:
    description: Describes a source image repository.
    properties:
      ImageConfiguration:
        allOf:
          - $ref: '#/definitions/ImageConfiguration'
          - description: Configuration for running the identified image.
      ImageIdentifier:
        allOf:
          - $ref: '#/definitions/ImageIdentifier'
          - description: >-
              <p>The identifier of an image.</p> <p>For an image in Amazon
              Elastic Container Registry (Amazon ECR), this is an image name.
              For the image name format, see <a
              href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling
              an image</a> in the <i>Amazon ECR User Guide</i>.</p>
      ImageRepositoryType:
        allOf:
          - $ref: '#/definitions/ImageRepositoryType'
          - description: >-
              The type of the image repository. This reflects the repository
              provider and whether the repository is private or public.
    required:
      - ImageIdentifier
      - ImageRepositoryType
    type: object
  ImageRepositoryType:
    enum:
      - ECR
      - ECR_PUBLIC
    type: string
  InstanceConfiguration:
    description: >-
      Describes the runtime configuration of an AWS App Runner service instance
      (scaling unit).
    properties:
      Cpu:
        allOf:
          - $ref: '#/definitions/Cpu'
          - description: >-
              <p>The number of CPU units reserved for each instance of your App
              Runner service.</p> <p>Default: <code>1 vCPU</code> </p>
      InstanceRoleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that provides
              permissions to your App Runner service. These are permissions that
              your code needs when it calls any AWS APIs.
      Memory:
        allOf:
          - $ref: '#/definitions/Memory'
          - description: >-
              <p>The amount of memory, in MB or GB, reserved for each instance
              of your App Runner service.</p> <p>Default: <code>2 GB</code> </p>
    type: object
  Integer:
    type: integer
  InternalServiceErrorException: {}
  InvalidRequestException: {}
  InvalidStateException: {}
  KmsKeyArn:
    maxLength: 256
    minLength: 0
    pattern: >-
      arn:aws(-[\w]+)*:kms:[a-z\-]+-[0-9]{1}:[0-9]{12}:key\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
    type: string
  ListAutoScalingConfigurationsRequest:
    properties:
      AutoScalingConfigurationName:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationName'
          - description: >-
              The name of the App Runner auto scaling configuration that you
              want to list. If specified, App Runner lists revisions that share
              this name. If not specified, App Runner returns revisions of all
              configurations.
      LatestOnly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Set to <code>true</code> to list only the latest revision for
              each requested configuration name.</p> <p>Keep as
              <code>false</code> to list all revisions for each requested
              configuration name.</p> <p>Default: <code>false</code> </p>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of results to include in each response
              (result page). It's used for a paginated request.</p> <p>If you
              don't specify <code>MaxResults</code>, the request retrieves all
              available results in a single response.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>A token from a previous result page. It's used for a paginated
              request. The request retrieves the next result page. All other
              parameter values must be identical to the ones that are specified
              in the initial request.</p> <p>If you don't specify
              <code>NextToken</code>, the request retrieves the first result
              page.</p>
    title: ListAutoScalingConfigurationsRequest
    type: object
  ListAutoScalingConfigurationsResponse:
    properties:
      AutoScalingConfigurationSummaryList:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationSummaryList'
          - description: >-
              A list of summary information records for auto scaling
              configurations. In a paginated request, the request returns up to
              <code>MaxResults</code> records for each call.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token that you can pass in a subsequent request to get the
              next result page. It's returned in a paginated request.
    required:
      - AutoScalingConfigurationSummaryList
    type: object
  ListConnectionsRequest:
    properties:
      ConnectionName:
        allOf:
          - $ref: '#/definitions/ConnectionName'
          - description: >-
              If specified, only this connection is returned. If not specified,
              the result isn't filtered by name.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of results to include in each response
              (result page). Used for a paginated request.</p> <p>If you don't
              specify <code>MaxResults</code>, the request retrieves all
              available results in a single response.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>A token from a previous result page. Used for a paginated
              request. The request retrieves the next result page. All other
              parameter values must be identical to the ones specified in the
              initial request.</p> <p>If you don't specify
              <code>NextToken</code>, the request retrieves the first result
              page.</p>
    title: ListConnectionsRequest
    type: object
  ListConnectionsResponse:
    properties:
      ConnectionSummaryList:
        allOf:
          - $ref: '#/definitions/ConnectionSummaryList'
          - description: >-
              A list of summary information records for connections. In a
              paginated request, the request returns up to
              <code>MaxResults</code> records for each call.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token that you can pass in a subsequent request to get the
              next result page. Returned in a paginated request.
    required:
      - ConnectionSummaryList
    type: object
  ListOperationsMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  ListOperationsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/ListOperationsMaxResults'
          - description: >-
              <p>The maximum number of results to include in each response
              (result page). It's used for a paginated request.</p> <p>If you
              don't specify <code>MaxResults</code>, the request retrieves all
              available results in a single response.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>A token from a previous result page. It's used for a paginated
              request. The request retrieves the next result page. All other
              parameter values must be identical to the ones specified in the
              initial request.</p> <p>If you don't specify
              <code>NextToken</code>, the request retrieves the first result
              page.</p>
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want a list of operations for.
    required:
      - ServiceArn
    title: ListOperationsRequest
    type: object
  ListOperationsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The token that you can pass in a subsequent request to get the
              next result page. It's returned in a paginated request.
      OperationSummaryList:
        allOf:
          - $ref: '#/definitions/OperationSummaryList'
          - description: >-
              A list of operation summary information records. In a paginated
              request, the request returns up to <code>MaxResults</code> records
              for each call.
    type: object
  ListServicesRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/ServiceMaxResults'
          - description: >-
              <p>The maximum number of results to include in each response
              (result page). It's used for a paginated request.</p> <p>If you
              don't specify <code>MaxResults</code>, the request retrieves all
              available results in a single response.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>A token from a previous result page. Used for a paginated
              request. The request retrieves the next result page. All other
              parameter values must be identical to the ones specified in the
              initial request.</p> <p>If you don't specify
              <code>NextToken</code>, the request retrieves the first result
              page.</p>
    title: ListServicesRequest
    type: object
  ListServicesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The token that you can pass in a subsequent request to get the
              next result page. It's returned in a paginated request.
      ServiceSummaryList:
        allOf:
          - $ref: '#/definitions/ServiceSummaryList'
          - description: >-
              A list of service summary information records. In a paginated
              request, the request returns up to <code>MaxResults</code> records
              for each call.
    required:
      - ServiceSummaryList
    type: object
  ListTagsForResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the resource that a tag list
              is requested for.</p> <p>It must be the ARN of an App Runner
              resource.</p>
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag key-value pairs that are associated with the
              resource.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  Memory:
    maxLength: 4
    minLength: 4
    pattern: 2048|3072|4096|(2|3|4) GB
    type: string
  NextToken:
    maxLength: 1024
    minLength: 1
    pattern: .*
    type: string
  NullableBoolean:
    type: boolean
  OperationStatus:
    enum:
      - PENDING
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      - ROLLBACK_IN_PROGRESS
      - ROLLBACK_FAILED
      - ROLLBACK_SUCCEEDED
    type: string
  OperationSummary:
    description: >-
      Provides summary information for an operation that occurred on an AWS App
      Runner service.
    properties:
      EndedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the operation ended. It's in the Unix time stamp
              format.
      Id:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              A unique ID of this operation. It's unique in the scope of the App
              Runner service.
      StartedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the operation started. It's in the Unix time stamp
              format.
      Status:
        allOf:
          - $ref: '#/definitions/OperationStatus'
          - description: The current state of the operation.
      TargetArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource that the operation
              acted on (for example, an App Runner service).
      Type:
        allOf:
          - $ref: '#/definitions/OperationType'
          - description: >-
              The type of operation. It indicates a specific action that
              occured.
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the operation was last updated. It's in the Unix
              time stamp format.
    type: object
  OperationSummaryList:
    items:
      $ref: '#/definitions/OperationSummary'
    type: array
  OperationType:
    enum:
      - START_DEPLOYMENT
      - CREATE_SERVICE
      - PAUSE_SERVICE
      - RESUME_SERVICE
      - DELETE_SERVICE
    type: string
  PauseServiceRequest:
    properties:
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to pause.
    required:
      - ServiceArn
    title: PauseServiceRequest
    type: object
  PauseServiceResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a>ListOperations</a>
              call to track the operation's progress.
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A description of the App Runner service that this request just
              paused.
    required:
      - Service
    type: object
  ProviderType:
    enum:
      - GITHUB
    type: string
  ResourceNotFoundException: {}
  ResumeServiceRequest:
    properties:
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to resume.
    required:
      - ServiceArn
    title: ResumeServiceRequest
    type: object
  ResumeServiceResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a>ListOperations</a>
              call to track the operation's progress.
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A description of the App Runner service that this request just
              resumed.
    required:
      - Service
    type: object
  RoleArn:
    maxLength: 102
    minLength: 29
    pattern: >-
      arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:role/[\w+=,.@-]{1,64}
    type: string
  Runtime:
    enum:
      - PYTHON_3
      - NODEJS_12
    type: string
  RuntimeEnvironmentVariables:
    additionalProperties:
      $ref: '#/definitions/RuntimeEnvironmentVariablesValue'
    type: object
  RuntimeEnvironmentVariablesKey:
    format: password
    type: string
  RuntimeEnvironmentVariablesValue:
    format: password
    type: string
  Service:
    description: >-
      <p>Describes an AWS App Runner service. It can describe a service in any
      state, including deleted services.</p> <p>This type contains the full
      information about a service, including configuration details. It's
      returned by the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>,
      <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>,
      and <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a>
      actions. A subset of this information is returned by the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a>
      action using the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html">ServiceSummary</a>
      type.</p>
    properties:
      AutoScalingConfigurationSummary:
        allOf:
          - $ref: '#/definitions/AutoScalingConfigurationSummary'
          - description: >-
              Summary information for the App Runner automatic scaling
              configuration resource that's associated with this service.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the App Runner service was created. It's in the Unix
              time stamp format.
      DeletedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the App Runner service was deleted. It's in the Unix
              time stamp format.
      EncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/EncryptionConfiguration'
          - description: >-
              The encryption key that App Runner uses to encrypt the service
              logs and the copy of the source repository that App Runner
              maintains for the service. It can be either a customer-provided
              encryption key or an AWS managed CMK.
      HealthCheckConfiguration:
        allOf:
          - $ref: '#/definitions/HealthCheckConfiguration'
          - description: >-
              The settings for the health check that App Runner performs to
              monitor the health of this service.
      InstanceConfiguration:
        allOf:
          - $ref: '#/definitions/InstanceConfiguration'
          - description: >-
              The runtime configuration of instances (scaling units) of this
              service.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this service.
      ServiceId:
        allOf:
          - $ref: '#/definitions/ServiceId'
          - description: >-
              An ID that App Runner generated for this service. It's unique
              within the AWS Region.
      ServiceName:
        allOf:
          - $ref: '#/definitions/ServiceName'
          - description: The customer-provided service name.
      ServiceUrl:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A subdomain URL that App Runner generated for this service. You
              can use this URL to access your service web application.
      SourceConfiguration:
        allOf:
          - $ref: '#/definitions/SourceConfiguration'
          - description: >-
              The source deployed to the App Runner service. It can be a code or
              an image repository.
      Status:
        allOf:
          - $ref: '#/definitions/ServiceStatus'
          - description: >-
              <p>The current state of the App Runner service. These particular
              values mean the following.</p> <ul> <li> <p>
              <code>CREATE_FAILED</code> – The service failed to create. To
              troubleshoot this failure, read the failure events and logs,
              change any parameters that need to be fixed, and retry the call to
              create the service.</p> <p>The failed service isn't usable, and
              still counts towards your service quota. When you're done
              analyzing the failure, delete the service.</p> </li> <li> <p>
              <code>DELETE_FAILED</code> – The service failed to delete and
              can't be successfully recovered. Retry the service deletion call
              to ensure that all related resources are removed.</p> </li> </ul>
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the App Runner service was last updated at. It's in
              the Unix time stamp format.
    required:
      - ServiceName
      - ServiceId
      - ServiceArn
      - ServiceUrl
      - CreatedAt
      - UpdatedAt
      - Status
      - SourceConfiguration
      - InstanceConfiguration
      - AutoScalingConfigurationSummary
    type: object
  ServiceId:
    maxLength: 32
    minLength: 32
    pattern: >-
      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}
    type: string
  ServiceMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  ServiceName:
    maxLength: 40
    minLength: 4
    pattern: '[A-Za-z0-9][A-Za-z0-9-_]{3,39}'
    type: string
  ServiceQuotaExceededException: {}
  ServiceStatus:
    enum:
      - CREATE_FAILED
      - RUNNING
      - DELETED
      - DELETE_FAILED
      - PAUSED
      - OPERATION_IN_PROGRESS
    type: string
  ServiceSummary:
    description: >-
      <p>Provides summary information for an AWS App Runner service.</p> <p>This
      type contains limited information about a service. It doesn't include
      configuration details. It's returned by the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a>
      action. Complete service information is returned by the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>,
      <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>,
      and <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a>
      actions using the <a
      href="https://docs.aws.amazon.com/apprunner/latest/api/API_Service.html">Service</a>
      type.</p>
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the App Runner service was created. It's in the Unix
              time stamp format.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: The Amazon Resource Name (ARN) of this service.
      ServiceId:
        allOf:
          - $ref: '#/definitions/ServiceId'
          - description: >-
              An ID that App Runner generated for this service. It's unique
              within the AWS Region.
      ServiceName:
        allOf:
          - $ref: '#/definitions/ServiceName'
          - description: The customer-provided service name.
      ServiceUrl:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A subdomain URL that App Runner generated for this service. You
              can use this URL to access your service web application.
      Status:
        allOf:
          - $ref: '#/definitions/ServiceStatus'
          - description: >-
              <p>The current state of the App Runner service. These particular
              values mean the following.</p> <ul> <li> <p>
              <code>CREATE_FAILED</code> – The service failed to create. Read
              the failure events and logs, change any parameters that need to be
              fixed, and retry the call to create the service.</p> <p>The failed
              service isn't usable, and still counts towards your service quota.
              When you're done analyzing the failure, delete the service.</p>
              </li> <li> <p> <code>DELETE_FAILED</code> – The service failed to
              delete and can't be successfully recovered. Retry the service
              deletion call to ensure that all related resources are
              removed.</p> </li> </ul>
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time when the App Runner service was last updated. It's in
              theUnix time stamp format.
    type: object
  ServiceSummaryList:
    items:
      $ref: '#/definitions/ServiceSummary'
    type: array
  SourceCodeVersion:
    description: >-
      Identifies a version of code that AWS App Runner refers to within a source
      code repository.
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/SourceCodeVersionType'
          - description: >-
              <p>The type of version identifier.</p> <p>For a git-based
              repository, branches represent versions.</p>
      Value:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>A source code version.</p> <p>For a git-based repository, a
              branch name maps to a specific version. App Runner uses the most
              recent commit to the branch.</p>
    required:
      - Type
      - Value
    type: object
  SourceCodeVersionType:
    enum:
      - BRANCH
    type: string
  SourceConfiguration:
    description: >-
      Describes the source deployed to an AWS App Runner service. It can be a
      code or an image repository.
    properties:
      AuthenticationConfiguration:
        allOf:
          - $ref: '#/definitions/AuthenticationConfiguration'
          - description: >-
              Describes the resources that are needed to authenticate access to
              some source repositories.
      AutoDeploymentsEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              <p>If <code>true</code>, continuous integration from the source
              repository is enabled for the App Runner service. Each repository
              change (source code commit or new image version) starts a
              deployment.</p> <p>Default: <code>true</code> </p>
      CodeRepository:
        allOf:
          - $ref: '#/definitions/CodeRepository'
          - description: >-
              <p>The description of a source code repository.</p> <p>You must
              provide either this member or <code>ImageRepository</code> (but
              not both).</p>
      ImageRepository:
        allOf:
          - $ref: '#/definitions/ImageRepository'
          - description: >-
              <p>The description of a source image repository.</p> <p>You must
              provide either this member or <code>CodeRepository</code> (but not
              both).</p>
    type: object
  StartCommand:
    format: password
    type: string
  StartDeploymentRequest:
    properties:
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to manually deploy to.
    required:
      - ServiceArn
    title: StartDeploymentRequest
    type: object
  StartDeploymentResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a>ListOperations</a>
              call to track the operation's progress.
    required:
      - OperationId
    type: object
  String:
    maxLength: 51200
    minLength: 0
    pattern: .*
    type: string
  Tag:
    description: >-
      Describes a tag that is applied to an AWS App Runner resource. A tag is a
      metadata item consisting of a key-value pair.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: The key of the tag.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The value of the tag.
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:).+'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the resource that you want to
              update tags for.</p> <p>It must be the ARN of an App Runner
              resource.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tag key-value pairs to add or update. If a key is new to
              the resource, the tag is added with the provided value. If a key
              is already associated with the resource, the value of the tag is
              updated.
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: .*
    type: string
  Timestamp:
    format: date-time
    type: string
  UUID:
    maxLength: 36
    minLength: 36
    pattern: >-
      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}
    type: string
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the resource that you want to
              remove tags from.</p> <p>It must be the ARN of an App Runner
              resource.</p>
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: A list of tag keys that you want to remove.
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateServiceRequest:
    properties:
      AutoScalingConfigurationArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of an App Runner automatic scaling
              configuration resource that you want to associate with your
              service.
      HealthCheckConfiguration:
        allOf:
          - $ref: '#/definitions/HealthCheckConfiguration'
          - description: >-
              The settings for the health check that AWS App Runner performs to
              monitor the health of your service.
      InstanceConfiguration:
        allOf:
          - $ref: '#/definitions/InstanceConfiguration'
          - description: >-
              The runtime configuration to apply to instances (scaling units) of
              the App Runner service.
      ServiceArn:
        allOf:
          - $ref: '#/definitions/AppRunnerResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the App Runner service that you
              want to update.
      SourceConfiguration:
        allOf:
          - $ref: '#/definitions/SourceConfiguration'
          - description: >-
              <p>The source configuration to apply to the App Runner
              service.</p> <p>You can change the configuration of the code or
              image repository that the service uses. However, you can't switch
              from code to image or the other way around. This means that you
              must provide the same structure member of
              <code>SourceConfiguration</code> that you originally included when
              you created the service. Specifically, you can include either
              <code>CodeRepository</code> or <code>ImageRepository</code>. To
              update the source configuration, set the values to members of the
              structure that you include.</p>
    required:
      - ServiceArn
    title: UpdateServiceRequest
    type: object
  UpdateServiceResponse:
    properties:
      OperationId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The unique ID of the asynchronous operation that this request
              started. You can use it combined with the <a>ListOperations</a>
              call to track the operation's progress.
      Service:
        allOf:
          - $ref: '#/definitions/Service'
          - description: >-
              A description of the App Runner service updated by this request.
              All configuration values in the returned <code>Service</code>
              structure reflect configuration changes that are being applied by
              this request.
    required:
      - Service
      - OperationId
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/apprunner/'
host: apprunner.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>AWS App Runner</fullname> <p>AWS App Runner is an application
    service that provides a fast, simple, and cost-effective way to go directly
    from an existing container image or source code to a running service in the
    AWS cloud in seconds. You don't need to learn new technologies, decide which
    compute service to use, or understand how to provision and configure AWS
    resources.</p> <p>App Runner connects directly to your container registry or
    source code repository. It provides an automatic delivery pipeline with
    fully managed operations, high performance, scalability, and security.</p>
    <p>For more information about App Runner, see the <a
    href="https://docs.aws.amazon.com/apprunner/latest/dg/">AWS App Runner
    Developer Guide</a>. For release information, see the <a
    href="https://docs.aws.amazon.com/apprunner/latest/relnotes/">AWS App Runner
    Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs),
    Integrated Development Environment (IDE) Toolkits, and command line tools
    that you can use to access the API, see <a
    href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p>
    <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that
    App Runner supports, see <a
    href="https://docs.aws.amazon.com/general/latest/gr/apprunner.html">AWS App
    Runner endpoints and quotas</a> in the <i>AWS General Reference</i>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS App Runner
  version: '2020-05-15'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: apprunner
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apprunner-2020-05-15.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: apprunner
paths:
  /#X-Amz-Target=AppRunner.AssociateCustomDomain:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Associate your own domain name with the AWS App Runner subdomain URL
        of your App Runner service.</p> <p>After you call
        <code>AssociateCustomDomain</code> and receive a successful response,
        use the information in the <a>CustomDomain</a> record that's returned to
        add CNAME records to your Domain Name System (DNS). For each mapped
        domain name, add a mapping to the target App Runner subdomain and one or
        more certificate validation records. App Runner then performs DNS
        validation to verify that you own or control the domain name that you
        associated. App Runner tracks domain validity in a certificate stored in
        <a href="https://docs.aws.amazon.com/acm/latest/userguide">AWS
        Certificate Manager (ACM)</a>.</p>
      operationId: AssociateCustomDomain
      parameters:
        - enum:
            - AppRunner.AssociateCustomDomain
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateCustomDomainRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateCustomDomainResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.CreateAutoScalingConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Create an AWS App Runner automatic scaling configuration resource.
        App Runner requires this resource when you create App Runner services
        that require non-default auto scaling settings. You can share an auto
        scaling configuration across multiple services.</p> <p>Create multiple
        revisions of a configuration by using the same
        <code>AutoScalingConfigurationName</code> and different
        <code>AutoScalingConfigurationRevision</code> values. When you create a
        service, you can set it to use the latest active revision of an auto
        scaling configuration or a specific revision.</p> <p>Configure a higher
        <code>MinSize</code> to increase the spread of your App Runner service
        over more Availability Zones in the AWS Region. The tradeoff is a higher
        minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control
        your cost. The tradeoff is lower responsiveness during peak demand.</p>
      operationId: CreateAutoScalingConfiguration
      parameters:
        - enum:
            - AppRunner.CreateAutoScalingConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAutoScalingConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAutoScalingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /#X-Amz-Target=AppRunner.CreateConnection:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Create an AWS App Runner connection resource. App Runner requires a
        connection resource when you create App Runner services that access
        private repositories from certain third-party providers. You can share a
        connection across multiple services.</p> <p>A connection resource is
        needed to access GitHub repositories. GitHub requires a user interface
        approval process through the App Runner console before you can use the
        connection.</p>
      operationId: CreateConnection
      parameters:
        - enum:
            - AppRunner.CreateConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateConnectionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /#X-Amz-Target=AppRunner.CreateService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Create an AWS App Runner service. After the service is created, the
        action also automatically starts a deployment.</p> <p>This is an
        asynchronous operation. On a successful call, you can use the returned
        <code>OperationId</code> and the <a
        href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a>
        call to track the operation's progress.</p>
      operationId: CreateService
      parameters:
        - enum:
            - AppRunner.CreateService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /#X-Amz-Target=AppRunner.DeleteAutoScalingConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Delete an AWS App Runner automatic scaling configuration resource. You
        can delete a specific revision or the latest active revision. You can't
        delete a configuration that's used by one or more App Runner services.
      operationId: DeleteAutoScalingConfiguration
      parameters:
        - enum:
            - AppRunner.DeleteAutoScalingConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAutoScalingConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAutoScalingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=AppRunner.DeleteConnection:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Delete an AWS App Runner connection. You must first ensure that there
        are no running App Runner services that use this connection. If there
        are any, the <code>DeleteConnection</code> action fails.
      operationId: DeleteConnection
      parameters:
        - enum:
            - AppRunner.DeleteConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConnectionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConnectionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.DeleteService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Delete an AWS App Runner service.</p> <p>This is an asynchronous
        operation. On a successful call, you can use the returned
        <code>OperationId</code> and the <a>ListOperations</a> call to track the
        operation's progress.</p>
      operationId: DeleteService
      parameters:
        - enum:
            - AppRunner.DeleteService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.DescribeAutoScalingConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Return a full description of an AWS App Runner automatic scaling
        configuration resource.
      operationId: DescribeAutoScalingConfiguration
      parameters:
        - enum:
            - AppRunner.DescribeAutoScalingConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutoScalingConfigurationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutoScalingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=AppRunner.DescribeCustomDomains:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Return a description of custom domain names that are associated with an
        AWS App Runner service.
      operationId: DescribeCustomDomains
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AppRunner.DescribeCustomDomains
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCustomDomainsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCustomDomainsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=AppRunner.DescribeService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Return a full description of an AWS App Runner service.
      operationId: DescribeService
      parameters:
        - enum:
            - AppRunner.DescribeService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.DisassociateCustomDomain:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Disassociate a custom domain name from an AWS App Runner service.</p>
        <p>Certificates tracking domain validity are associated with a custom
        domain and are stored in <a
        href="https://docs.aws.amazon.com/acm/latest/userguide">AWS Certificate
        Manager (ACM)</a>. These certificates aren't deleted as part of this
        action. App Runner delays certificate deletion for 30 days after a
        domain is disassociated from your service.</p>
      operationId: DisassociateCustomDomain
      parameters:
        - enum:
            - AppRunner.DisassociateCustomDomain
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateCustomDomainRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateCustomDomainResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.ListAutoScalingConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of AWS App Runner automatic scaling configurations in
        your AWS account. You can query the revisions for a specific
        configuration name or the revisions for all configurations in your
        account. You can optionally query only the latest revision of each
        requested name.
      operationId: ListAutoScalingConfigurations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AppRunner.ListAutoScalingConfigurations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAutoScalingConfigurationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAutoScalingConfigurationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.ListConnections:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of AWS App Runner connections that are associated with
        your AWS account.
      operationId: ListConnections
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AppRunner.ListConnections
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListConnectionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConnectionsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.ListOperations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Return a list of operations that occurred on an AWS App Runner
        service.</p> <p>The resulting list of <a>OperationSummary</a> objects is
        sorted in reverse chronological order. The first object on the list
        represents the last started operation.</p>
      operationId: ListOperations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AppRunner.ListOperations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOperationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOperationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=AppRunner.ListServices:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of running AWS App Runner services in your AWS account.
      operationId: ListServices
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AppRunner.ListServices
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListServicesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServicesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        List tags that are associated with for an AWS App Runner resource. The
        response contains a list of tag key-value pairs.
      operationId: ListTagsForResource
      parameters:
        - enum:
            - AppRunner.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.PauseService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Pause an active AWS App Runner service. App Runner reduces compute
        capacity for the service to zero and loses state (for example, ephemeral
        storage is removed).</p> <p>This is an asynchronous operation. On a
        successful call, you can use the returned <code>OperationId</code> and
        the <a>ListOperations</a> call to track the operation's progress.</p>
      operationId: PauseService
      parameters:
        - enum:
            - AppRunner.PauseService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PauseServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PauseServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.ResumeService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Resume an active AWS App Runner service. App Runner provisions
        compute capacity for the service.</p> <p>This is an asynchronous
        operation. On a successful call, you can use the returned
        <code>OperationId</code> and the <a>ListOperations</a> call to track the
        operation's progress.</p>
      operationId: ResumeService
      parameters:
        - enum:
            - AppRunner.ResumeService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResumeServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResumeServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.StartDeployment:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Initiate a manual deployment of the latest commit in a source code
        repository or the latest image in a source image repository to an AWS
        App Runner service.</p> <p>For a source code repository, App Runner
        retrieves the commit and builds a Docker image. For a source image
        repository, App Runner retrieves the latest Docker image. In both cases,
        App Runner then deploys the new image to your service and starts a new
        container instance.</p> <p>This is an asynchronous operation. On a
        successful call, you can use the returned <code>OperationId</code> and
        the <a>ListOperations</a> call to track the operation's progress.</p>
      operationId: StartDeployment
      parameters:
        - enum:
            - AppRunner.StartDeployment
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartDeploymentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartDeploymentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=AppRunner.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Add tags to, or update the tag values of, an App Runner resource. A tag
        is a key-value pair.
      operationId: TagResource
      parameters:
        - enum:
            - AppRunner.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Remove tags from an App Runner resource.
      operationId: UntagResource
      parameters:
        - enum:
            - AppRunner.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  /#X-Amz-Target=AppRunner.UpdateService:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Update an AWS App Runner service. You can update the source
        configuration and instance configuration of the service. You can also
        update the ARN of the auto scaling configuration resource that's
        associated with the service. However, you can't change the name or the
        encryption configuration of the service. These can be set only when you
        create the service.</p> <p>To update the tags applied to your service,
        use the separate actions <a>TagResource</a> and
        <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a
        successful call, you can use the returned <code>OperationId</code> and
        the <a>ListOperations</a> call to track the operation's progress.</p>
      operationId: UpdateService
      parameters:
        - enum:
            - AppRunner.UpdateService
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateServiceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

