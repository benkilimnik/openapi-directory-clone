basePath: /
definitions:
  AWSAccountId:
    maxLength: 1024
    minLength: 1
    pattern: '^[0-9]+$'
    type: string
  AccountRoleStatus:
    enum:
      - READY
      - CREATING
      - PENDING_DELETION
      - DELETING
      - DELETED
    type: string
  ActionTarget:
    description: Describes a remediation action target.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the remediation action target.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the remediation target.
    type: object
  App:
    description: An individual Firewall Manager application.
    properties:
      AppName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The application's name.
      Port:
        allOf:
          - $ref: '#/definitions/IPPortNumber'
          - description: 'The application''s port number, for example <code>80</code>.'
      Protocol:
        allOf:
          - $ref: '#/definitions/Protocol'
          - description: >-
              The IP protocol name or number. The name can be one of
              <code>tcp</code>, <code>udp</code>, or <code>icmp</code>. For
              information on possible numbers, see <a
              href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
              Numbers</a>.
    required:
      - AppName
      - Protocol
      - Port
    type: object
  AppsList:
    items:
      $ref: '#/definitions/App'
    type: array
  AppsListData:
    description: An Firewall Manager applications list.
    properties:
      AppsList:
        allOf:
          - $ref: '#/definitions/AppsList'
          - description: >-
              An array of applications in the Firewall Manager applications
              list.
      CreateTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: The time that the Firewall Manager applications list was created.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The time that the Firewall Manager applications list was last
              updated.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: The ID of the Firewall Manager applications list.
      ListName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the Firewall Manager applications list.
      ListUpdateToken:
        allOf:
          - $ref: '#/definitions/UpdateToken'
          - description: >-
              A unique identifier for each update to the list. When you update
              the list, the update token must match the token of the current
              version of the application list. You can retrieve the update token
              by getting the list. 
      PreviousAppsList:
        allOf:
          - $ref: '#/definitions/PreviousAppsList'
          - description: >-
              A map of previous version numbers to their corresponding
              <code>App</code> object arrays.
    required:
      - ListName
      - AppsList
    type: object
  AppsListDataSummary:
    description: Details of the Firewall Manager applications list.
    properties:
      AppsList:
        allOf:
          - $ref: '#/definitions/AppsList'
          - description: >-
              An array of <code>App</code> objects in the Firewall Manager
              applications list.
      ListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the applications list.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: The ID of the applications list.
      ListName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the applications list.
    type: object
  AppsListsData:
    items:
      $ref: '#/definitions/AppsListDataSummary'
    type: array
  AssociateAdminAccountRequest:
    properties:
      AdminAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account ID to associate with Firewall
              Manager as the Firewall Manager administrator account. This must
              be an Organizations member account. For more information about
              Organizations, see <a
              href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts.html">Managing
              the Amazon Web Services Accounts in Your Organization</a>. 
    required:
      - AdminAccount
    title: AssociateAdminAccountRequest
    type: object
  AwsEc2InstanceViolation:
    description: Violation detail for an EC2 instance resource.
    properties:
      AwsEc2NetworkInterfaceViolations:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceViolations'
          - description: >-
              Violation detail for network interfaces associated with the EC2
              instance.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: The resource ID of the EC2 instance.
    type: object
  AwsEc2NetworkInterfaceViolation:
    description: Violation detail for network interfaces associated with an EC2 instance.
    properties:
      ViolatingSecurityGroups:
        allOf:
          - $ref: '#/definitions/ResourceIdList'
          - description: >-
              List of security groups that violate the rules specified in the
              primary security group of the Firewall Manager policy.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: The resource ID of the network interface.
    type: object
  AwsEc2NetworkInterfaceViolations:
    items:
      $ref: '#/definitions/AwsEc2NetworkInterfaceViolation'
    type: array
  AwsVPCSecurityGroupViolation:
    description: >-
      Violation detail for the rule violation in a security group when compared
      to the primary security group of the Firewall Manager policy.
    properties:
      PartialMatches:
        allOf:
          - $ref: '#/definitions/PartialMatches'
          - description: >-
              List of rules specified in the security group of the Firewall
              Manager policy that partially match the
              <code>ViolationTarget</code> rule.
      PossibleSecurityGroupRemediationActions:
        allOf:
          - $ref: '#/definitions/SecurityGroupRemediationActions'
          - description: >-
              Remediation options for the rule specified in the
              <code>ViolationTarget</code>.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: The security group rule that is being evaluated.
      ViolationTargetDescription:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the security group that violates the policy.
    type: object
  BasicInteger:
    maximum: 2147483647
    minimum: -2147483648
    type: integer
  Boolean:
    type: boolean
  CIDR:
    maxLength: 256
    minLength: 0
    pattern: '[a-f0-9:./]+'
    type: string
  ComplianceViolator:
    description: Details of the resource that is not protected by the policy.
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The resource type. This is in the format shown in the <a
              href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">Amazon
              Web Services Resource Types Reference</a>. For example:
              <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code>,
              <code>AWS::CloudFront::Distribution</code>, or
              <code>AWS::NetworkFirewall::FirewallPolicy</code>.
      ViolationReason:
        allOf:
          - $ref: '#/definitions/ViolationReason'
          - description: The reason that the resource is not protected by the policy.
    type: object
  ComplianceViolators:
    items:
      $ref: '#/definitions/ComplianceViolator'
    type: array
  CustomerPolicyScopeId:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  CustomerPolicyScopeIdList:
    items:
      $ref: '#/definitions/CustomerPolicyScopeId'
    type: array
  CustomerPolicyScopeIdType:
    enum:
      - ACCOUNT
      - ORG_UNIT
    type: string
  CustomerPolicyScopeMap:
    additionalProperties:
      $ref: '#/definitions/CustomerPolicyScopeIdList'
    type: object
  DeleteAppsListRequest:
    properties:
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: >-
              The ID of the applications list that you want to delete. You can
              retrieve this ID from <code>PutAppsList</code>,
              <code>ListAppsLists</code>, and <code>GetAppsList</code>.
    required:
      - ListId
    title: DeleteAppsListRequest
    type: object
  DeleteNotificationChannelRequest:
    properties: {}
    title: DeleteNotificationChannelRequest
    type: object
  DeletePolicyRequest:
    properties:
      DeleteAllPolicyResources:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>If <code>True</code>, the request performs cleanup according to
              the policy type. </p> <p>For WAF and Shield Advanced policies, the
              cleanup does the following:</p> <ul> <li> <p>Deletes rule groups
              created by Firewall Manager</p> </li> <li> <p>Removes web ACLs
              from in-scope resources</p> </li> <li> <p>Deletes web ACLs that
              contain no rules or rule groups</p> </li> </ul> <p>For security
              group policies, the cleanup does the following for each security
              group in the policy:</p> <ul> <li> <p>Disassociates the security
              group from in-scope resources </p> </li> <li> <p>Deletes the
              security group if it was created through Firewall Manager and if
              it's no longer associated with any resources through another
              policy</p> </li> </ul> <p>After the cleanup, in-scope resources
              are no longer protected by web ACLs in this policy. Protection of
              out-of-scope resources remains unchanged. Scope is determined by
              tags that you create and accounts that you associate with the
              policy. When creating the policy, if you specify that only
              resources in specific accounts or with specific tags are in scope
              of the policy, those accounts and resources are handled by the
              policy. All others are out of scope. If you don't specify tags or
              accounts, all resources are in scope. </p>
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the policy that you want to delete. You can retrieve
              this ID from <code>PutPolicy</code> and <code>ListPolicies</code>.
    required:
      - PolicyId
    title: DeletePolicyRequest
    type: object
  DeleteProtocolsListRequest:
    properties:
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: >-
              The ID of the protocols list that you want to delete. You can
              retrieve this ID from <code>PutProtocolsList</code>,
              <code>ListProtocolsLists</code>, and
              <code>GetProtocolsLost</code>.
    required:
      - ListId
    title: DeleteProtocolsListRequest
    type: object
  DependentServiceName:
    enum:
      - AWSCONFIG
      - AWSWAF
      - AWSSHIELD_ADVANCED
      - AWSVPC
    type: string
  DestinationType:
    enum:
      - IPV4
      - IPV6
      - PREFIX_LIST
    type: string
  DetailedInfo:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=,+\-@]*)$'
    type: string
  DisassociateAdminAccountRequest:
    properties: {}
    title: DisassociateAdminAccountRequest
    type: object
  DnsDuplicateRuleGroupViolation:
    description: >-
      A DNS Firewall rule group that Firewall Manager tried to associate with a
      VPC is already associated with the VPC and can't be associated again. 
    properties:
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: 'Information about the VPC ID. '
      ViolationTargetDescription:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the violation that specifies the rule group and
              VPC.
    type: object
  DnsRuleGroupLimitExceededViolation:
    description: >-
      The VPC that Firewall Manager was applying a DNS Fireall policy to reached
      the limit for associated DNS Firewall rule groups. Firewall Manager tried
      to associate another rule group with the VPC and failed due to the limit. 
    properties:
      NumberOfRuleGroupsAlreadyAssociated:
        allOf:
          - $ref: '#/definitions/BasicInteger'
          - description: 'The number of rule groups currently associated with the VPC. '
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: 'Information about the VPC ID. '
      ViolationTargetDescription:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the violation that specifies the rule group and
              VPC.
    type: object
  DnsRuleGroupPriorities:
    items:
      $ref: '#/definitions/DnsRuleGroupPriority'
    type: array
  DnsRuleGroupPriority:
    maximum: 10000
    minimum: 0
    type: integer
  DnsRuleGroupPriorityConflictViolation:
    description: >-
      A rule group that Firewall Manager tried to associate with a VPC has the
      same priority as a rule group that's already associated. 
    properties:
      ConflictingPolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the Firewall Manager DNS Firewall policy that was
              already applied to the VPC. This policy contains the rule group
              that's already associated with the VPC. 
      ConflictingPriority:
        allOf:
          - $ref: '#/definitions/DnsRuleGroupPriority'
          - description: The priority setting of the two conflicting rule groups.
      UnavailablePriorities:
        allOf:
          - $ref: '#/definitions/DnsRuleGroupPriorities'
          - description: >-
              The priorities of rule groups that are already associated with the
              VPC. To retry your operation, choose priority settings that aren't
              in this list for the rule groups in your new DNS Firewall policy. 
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: 'Information about the VPC ID. '
      ViolationTargetDescription:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the violation that specifies the VPC and the rule
              group that's already associated with it.
    type: object
  EC2AssociateRouteTableAction:
    description: >-
      The action of associating an EC2 resource, such as a subnet or internet
      gateway, with a route table.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the EC2 route table that is associated with the
              remediation action.
      GatewayId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              The ID of the gateway to be used with the EC2 route table that is
              associated with the remediation action.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              The ID of the EC2 route table that is associated with the
              remediation action.
      SubnetId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              The ID of the subnet for the EC2 route table that is associated
              with the remediation action.
    required:
      - RouteTableId
    type: object
  EC2CopyRouteTableAction:
    description: An action that copies the EC2 route table for use in remediation.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the copied EC2 route table that is associated
              with the remediation action.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              The ID of the copied EC2 route table that is associated with the
              remediation action.
      VpcId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              The VPC ID of the copied EC2 route table that is associated with
              the remediation action.
    required:
      - VpcId
      - RouteTableId
    type: object
  EC2CreateRouteAction:
    description: Information about the CreateRoute action in Amazon EC2.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of CreateRoute action in Amazon EC2.
      DestinationCidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: >-
              Information about the IPv4 CIDR address block used for the
              destination match.
      DestinationIpv6CidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: Information about the IPv6 CIDR block destination.
      DestinationPrefixListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              Information about the ID of a prefix list used for the destination
              match.
      GatewayId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              Information about the ID of an internet gateway or virtual private
              gateway attached to your VPC.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: Information about the ID of the route table for the route.
      VpcEndpointId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              Information about the ID of a VPC endpoint. Supported for Gateway
              Load Balancer endpoints only.
    required:
      - RouteTableId
    type: object
  EC2CreateRouteTableAction:
    description: Information about the CreateRouteTable action in Amazon EC2.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the CreateRouteTable action.
      VpcId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: Information about the ID of a VPC.
    required:
      - VpcId
    type: object
  EC2DeleteRouteAction:
    description: Information about the DeleteRoute action in Amazon EC2.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the DeleteRoute action.
      DestinationCidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: >-
              Information about the IPv4 CIDR range for the route. The value you
              specify must match the CIDR for the route exactly.
      DestinationIpv6CidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: >-
              Information about the IPv6 CIDR range for the route. The value you
              specify must match the CIDR for the route exactly.
      DestinationPrefixListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the ID of the prefix list for the route.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: Information about the ID of the route table.
    required:
      - RouteTableId
    type: object
  EC2ReplaceRouteAction:
    description: Information about the ReplaceRoute action in Amazon EC2.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the ReplaceRoute action in Amazon EC2.
      DestinationCidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: >-
              Information about the IPv4 CIDR address block used for the
              destination match. The value that you provide must match the CIDR
              of an existing route in the table.
      DestinationIpv6CidrBlock:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: >-
              Information about the IPv6 CIDR address block used for the
              destination match. The value that you provide must match the CIDR
              of an existing route in the table.
      DestinationPrefixListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the ID of the prefix list for the route.
      GatewayId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              Information about the ID of an internet gateway or virtual private
              gateway.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: Information about the ID of the route table.
    required:
      - RouteTableId
    type: object
  EC2ReplaceRouteTableAssociationAction:
    description: Information about the ReplaceRouteTableAssociation action in Amazon EC2.
    properties:
      AssociationId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: Information about the association ID.
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              A description of the ReplaceRouteTableAssociation action in Amazon
              EC2.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ActionTarget'
          - description: >-
              Information about the ID of the new route table to associate with
              the subnet.
    required:
      - AssociationId
      - RouteTableId
    type: object
  EvaluationResult:
    description: >-
      Describes the compliance status for the account. An account is considered
      noncompliant if it includes resources that are not protected by the
      specified policy or that don't comply with the policy.
    properties:
      ComplianceStatus:
        allOf:
          - $ref: '#/definitions/PolicyComplianceStatusType'
          - description: >-
              Describes an Amazon Web Services account's compliance with the
              Firewall Manager policy.
      EvaluationLimitExceeded:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates that over 100 resources are noncompliant with the
              Firewall Manager policy.
      ViolatorCount:
        allOf:
          - $ref: '#/definitions/ResourceCount'
          - description: >-
              The number of resources that are noncompliant with the specified
              policy. For WAF and Shield Advanced policies, a resource is
              considered noncompliant if it is not associated with the policy.
              For security group policies, a resource is considered noncompliant
              if it doesn't comply with the rules of the policy and remediation
              is disabled or not possible.
    type: object
  EvaluationResults:
    items:
      $ref: '#/definitions/EvaluationResult'
    type: array
  ExpectedRoute:
    description: Information about the expected route in the route table.
    properties:
      AllowedTargets:
        allOf:
          - $ref: '#/definitions/LengthBoundedStringList'
          - description: Information about the allowed targets.
      ContributingSubnets:
        allOf:
          - $ref: '#/definitions/ResourceIdList'
          - description: Information about the contributing subnets.
      IpV4Cidr:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: Information about the IPv4 CIDR block.
      IpV6Cidr:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: Information about the IPv6 CIDR block.
      PrefixListId:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: Information about the ID of the prefix list for the route.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the route table ID.
    type: object
  ExpectedRoutes:
    items:
      $ref: '#/definitions/ExpectedRoute'
    type: array
  GetAdminAccountRequest:
    properties: {}
    title: GetAdminAccountRequest
    type: object
  GetAdminAccountResponse:
    properties:
      AdminAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that is set as the Firewall
              Manager administrator.
      RoleStatus:
        allOf:
          - $ref: '#/definitions/AccountRoleStatus'
          - description: >-
              The status of the Amazon Web Services account that you set as the
              Firewall Manager administrator.
    type: object
  GetAppsListRequest:
    properties:
      DefaultList:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether the list to retrieve is a default list owned by
              Firewall Manager.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: >-
              The ID of the Firewall Manager applications list that you want the
              details for.
    required:
      - ListId
    title: GetAppsListRequest
    type: object
  GetAppsListResponse:
    properties:
      AppsList:
        allOf:
          - $ref: '#/definitions/AppsListData'
          - description: >-
              Information about the specified Firewall Manager applications
              list.
      AppsListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the applications list.
    type: object
  GetComplianceDetailRequest:
    properties:
      MemberAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that owns the resources that you
              want to get the details for.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the policy that you want to get the details for.
              <code>PolicyId</code> is returned by <code>PutPolicy</code> and by
              <code>ListPolicies</code>.
    required:
      - PolicyId
      - MemberAccount
    title: GetComplianceDetailRequest
    type: object
  GetComplianceDetailResponse:
    properties:
      PolicyComplianceDetail:
        allOf:
          - $ref: '#/definitions/PolicyComplianceDetail'
          - description: >-
              Information about the resources and the policy that you specified
              in the <code>GetComplianceDetail</code> request.
    type: object
  GetNotificationChannelRequest:
    properties: {}
    title: GetNotificationChannelRequest
    type: object
  GetNotificationChannelResponse:
    properties:
      SnsRoleName:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The IAM role that is used by Firewall Manager to record activity
              to SNS.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: 'The SNS topic that records Firewall Manager activity. '
    type: object
  GetPolicyRequest:
    properties:
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the Firewall Manager policy that you want the details
              for.
    required:
      - PolicyId
    title: GetPolicyRequest
    type: object
  GetPolicyResponse:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: Information about the specified Firewall Manager policy.
      PolicyArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the specified policy.
    type: object
  GetProtectionStatusRequest:
    properties:
      EndTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The end of the time period to query for the attacks. This is a
              <code>timestamp</code> type. The request syntax listing indicates
              a <code>number</code> type because the default used by Firewall
              Manager is Unix time in seconds. However, any valid
              <code>timestamp</code> format is allowed.
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              Specifies the number of objects that you want Firewall Manager to
              return for this request. If you have more objects than the number
              that you specify for <code>MaxResults</code>, the response
              includes a <code>NextToken</code> value that you can use to get
              another batch of objects.
      MemberAccountId:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that is in scope of the policy
              that you want to get the details for.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> and you have
              more objects than the number that you specify for
              <code>MaxResults</code>, Firewall Manager returns a
              <code>NextToken</code> value in the response, which you can use to
              retrieve another group of objects. For the second and subsequent
              <code>GetProtectionStatus</code> requests, specify the value of
              <code>NextToken</code> from the previous response to get
              information about another batch of objects.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the policy for which you want to get the attack
              information.
      StartTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The start of the time period to query for the attacks. This is a
              <code>timestamp</code> type. The request syntax listing indicates
              a <code>number</code> type because the default used by Firewall
              Manager is Unix time in seconds. However, any valid
              <code>timestamp</code> format is allowed.
    required:
      - PolicyId
    title: GetProtectionStatusRequest
    type: object
  GetProtectionStatusResponse:
    properties:
      AdminAccountId:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The ID of the Firewall Manager administrator account for this
              policy.
      Data:
        allOf:
          - $ref: '#/definitions/ProtectionData'
          - description: >-
              <p>Details about the attack, including the following:</p> <ul>
              <li> <p>Attack type</p> </li> <li> <p>Account ID</p> </li> <li>
              <p>ARN of the resource attacked</p> </li> <li> <p>Start time of
              the attack</p> </li> <li> <p>End time of the attack (ongoing
              attacks will not have an end time)</p> </li> </ul> <p>The details
              are in JSON format. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              <p>If you have more objects than the number that you specified for
              <code>MaxResults</code> in the request, the response includes a
              <code>NextToken</code> value. To list more objects, submit another
              <code>GetProtectionStatus</code> request, and specify the
              <code>NextToken</code> value from the response in the
              <code>NextToken</code> value in the next request.</p> <p>Amazon
              Web Services SDKs provide auto-pagination that identify
              <code>NextToken</code> in a response and make subsequent request
              calls automatically on your behalf. However, this feature is not
              supported by <code>GetProtectionStatus</code>. You must submit
              subsequent requests with <code>NextToken</code> using your own
              processes. </p>
      ServiceType:
        allOf:
          - $ref: '#/definitions/SecurityServiceType'
          - description: >-
              The service type that is protected by the policy. Currently, this
              is always <code>SHIELD_ADVANCED</code>.
    type: object
  GetProtocolsListRequest:
    properties:
      DefaultList:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether the list to retrieve is a default list owned by
              Firewall Manager.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: >-
              The ID of the Firewall Manager protocols list that you want the
              details for.
    required:
      - ListId
    title: GetProtocolsListRequest
    type: object
  GetProtocolsListResponse:
    properties:
      ProtocolsList:
        allOf:
          - $ref: '#/definitions/ProtocolsListData'
          - description: Information about the specified Firewall Manager protocols list.
      ProtocolsListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the specified protocols list.
    type: object
  GetViolationDetailsRequest:
    properties:
      MemberAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: The Amazon Web Services account ID that you want the details for.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the Firewall Manager policy that you want the details
              for. This currently only supports security group content audit
              policies.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the resource that has violations.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The resource type. This is in the format shown in the <a
              href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">Amazon
              Web Services Resource Types Reference</a>. Supported resource
              types are: <code>AWS::EC2::Instance</code>,
              <code>AWS::EC2::NetworkInterface</code>,
              <code>AWS::EC2::SecurityGroup</code>,
              <code>AWS::NetworkFirewall::FirewallPolicy</code>, and
              <code>AWS::EC2::Subnet</code>. 
    required:
      - PolicyId
      - MemberAccount
      - ResourceId
      - ResourceType
    title: GetViolationDetailsRequest
    type: object
  GetViolationDetailsResponse:
    properties:
      ViolationDetail:
        allOf:
          - $ref: '#/definitions/ViolationDetail'
          - description: Violation detail for a resource.
    type: object
  IPPortNumber:
    maximum: 65535
    minimum: 0
    type: integer
  InternalErrorException: {}
  InvalidInputException: {}
  InvalidOperationException: {}
  InvalidTypeException: {}
  IssueInfoMap:
    additionalProperties:
      $ref: '#/definitions/DetailedInfo'
    type: object
  LengthBoundedString:
    maxLength: 1024
    minLength: 0
    type: string
  LengthBoundedStringList:
    items:
      $ref: '#/definitions/LengthBoundedString'
    type: array
  LimitExceededException: {}
  ListAppsListsRequest:
    properties:
      DefaultLists:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether the lists to retrieve are default lists owned by
              Firewall Manager.
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              <p>The maximum number of objects that you want Firewall Manager to
              return for this request. If more objects are available, in the
              response, Firewall Manager provides a <code>NextToken</code> value
              that you can use in a subsequent call to get the next batch of
              objects.</p> <p>If you don't specify this, Firewall Manager
              returns all available objects.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> in your list
              request, and you have more objects than the maximum, Firewall
              Manager returns this token in the response. For all but the first
              request, you provide the token returned by the prior request in
              the request parameters, to retrieve the next batch of objects.
    required:
      - MaxResults
    title: ListAppsListsRequest
    type: object
  ListAppsListsResponse:
    properties:
      AppsLists:
        allOf:
          - $ref: '#/definitions/AppsListsData'
          - description: An array of <code>AppsListDataSummary</code> objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> in your list
              request, and you have more objects than the maximum, Firewall
              Manager returns this token in the response. You can use this token
              in subsequent requests to retrieve the next batch of objects.
    type: object
  ListComplianceStatusRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              Specifies the number of <code>PolicyComplianceStatus</code>
              objects that you want Firewall Manager to return for this request.
              If you have more <code>PolicyComplianceStatus</code> objects than
              the number that you specify for <code>MaxResults</code>, the
              response includes a <code>NextToken</code> value that you can use
              to get another batch of <code>PolicyComplianceStatus</code>
              objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> and you have
              more <code>PolicyComplianceStatus</code> objects than the number
              that you specify for <code>MaxResults</code>, Firewall Manager
              returns a <code>NextToken</code> value in the response that allows
              you to list another group of <code>PolicyComplianceStatus</code>
              objects. For the second and subsequent
              <code>ListComplianceStatus</code> requests, specify the value of
              <code>NextToken</code> from the previous response to get
              information about another batch of
              <code>PolicyComplianceStatus</code> objects.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the Firewall Manager policy that you want the details
              for.
    required:
      - PolicyId
    title: ListComplianceStatusRequest
    type: object
  ListComplianceStatusResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you have more <code>PolicyComplianceStatus</code> objects than
              the number that you specified for <code>MaxResults</code> in the
              request, the response includes a <code>NextToken</code> value. To
              list more <code>PolicyComplianceStatus</code> objects, submit
              another <code>ListComplianceStatus</code> request, and specify the
              <code>NextToken</code> value from the response in the
              <code>NextToken</code> value in the next request.
      PolicyComplianceStatusList:
        allOf:
          - $ref: '#/definitions/PolicyComplianceStatusList'
          - description: An array of <code>PolicyComplianceStatus</code> objects.
    type: object
  ListId:
    maxLength: 36
    minLength: 36
    pattern: '^[a-z0-9A-Z-]{36}$'
    type: string
  ListMemberAccountsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              Specifies the number of member account IDs that you want Firewall
              Manager to return for this request. If you have more IDs than the
              number that you specify for <code>MaxResults</code>, the response
              includes a <code>NextToken</code> value that you can use to get
              another batch of member account IDs.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> and you have
              more account IDs than the number that you specify for
              <code>MaxResults</code>, Firewall Manager returns a
              <code>NextToken</code> value in the response that allows you to
              list another group of IDs. For the second and subsequent
              <code>ListMemberAccountsRequest</code> requests, specify the value
              of <code>NextToken</code> from the previous response to get
              information about another batch of member account IDs.
    title: ListMemberAccountsRequest
    type: object
  ListMemberAccountsResponse:
    properties:
      MemberAccounts:
        allOf:
          - $ref: '#/definitions/MemberAccounts'
          - description: An array of account IDs.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you have more member account IDs than the number that you
              specified for <code>MaxResults</code> in the request, the response
              includes a <code>NextToken</code> value. To list more IDs, submit
              another <code>ListMemberAccounts</code> request, and specify the
              <code>NextToken</code> value from the response in the
              <code>NextToken</code> value in the next request.
    type: object
  ListPoliciesRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              Specifies the number of <code>PolicySummary</code> objects that
              you want Firewall Manager to return for this request. If you have
              more <code>PolicySummary</code> objects than the number that you
              specify for <code>MaxResults</code>, the response includes a
              <code>NextToken</code> value that you can use to get another batch
              of <code>PolicySummary</code> objects.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> and you have
              more <code>PolicySummary</code> objects than the number that you
              specify for <code>MaxResults</code>, Firewall Manager returns a
              <code>NextToken</code> value in the response that allows you to
              list another group of <code>PolicySummary</code> objects. For the
              second and subsequent <code>ListPolicies</code> requests, specify
              the value of <code>NextToken</code> from the previous response to
              get information about another batch of <code>PolicySummary</code>
              objects.
    title: ListPoliciesRequest
    type: object
  ListPoliciesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you have more <code>PolicySummary</code> objects than the
              number that you specified for <code>MaxResults</code> in the
              request, the response includes a <code>NextToken</code> value. To
              list more <code>PolicySummary</code> objects, submit another
              <code>ListPolicies</code> request, and specify the
              <code>NextToken</code> value from the response in the
              <code>NextToken</code> value in the next request.
      PolicyList:
        allOf:
          - $ref: '#/definitions/PolicySummaryList'
          - description: An array of <code>PolicySummary</code> objects.
    type: object
  ListProtocolsListsRequest:
    properties:
      DefaultLists:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether the lists to retrieve are default lists owned by
              Firewall Manager.
      MaxResults:
        allOf:
          - $ref: '#/definitions/PaginationMaxResults'
          - description: >-
              <p>The maximum number of objects that you want Firewall Manager to
              return for this request. If more objects are available, in the
              response, Firewall Manager provides a <code>NextToken</code> value
              that you can use in a subsequent call to get the next batch of
              objects.</p> <p>If you don't specify this, Firewall Manager
              returns all available objects.</p>
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> in your list
              request, and you have more objects than the maximum, Firewall
              Manager returns this token in the response. For all but the first
              request, you provide the token returned by the prior request in
              the request parameters, to retrieve the next batch of objects.
    required:
      - MaxResults
    title: ListProtocolsListsRequest
    type: object
  ListProtocolsListsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              If you specify a value for <code>MaxResults</code> in your list
              request, and you have more objects than the maximum, Firewall
              Manager returns this token in the response. You can use this token
              in subsequent requests to retrieve the next batch of objects.
      ProtocolsLists:
        allOf:
          - $ref: '#/definitions/ProtocolsListsData'
          - description: An array of <code>ProtocolsListDataSummary</code> objects.
    type: object
  ListTagsForResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to return tags for.
              The Firewall Manager resources that support tagging are policies,
              applications lists, and protocols lists. 
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags associated with the resource.
    type: object
  ManagedServiceData:
    maxLength: 4096
    minLength: 1
    pattern: .*
    type: string
  MemberAccounts:
    items:
      $ref: '#/definitions/AWSAccountId'
    type: array
  NetworkFirewallAction:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9]+$'
    type: string
  NetworkFirewallActionList:
    items:
      $ref: '#/definitions/NetworkFirewallAction'
    type: array
  NetworkFirewallBlackHoleRouteDetectedViolation:
    description: >-
      Violation detail for an internet gateway route with an inactive state in
      the customer subnet route table or Network Firewall subnet route table.
    properties:
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the route table ID.
      ViolatingRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: Information about the route or routes that are in violation.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: The subnet that has an inactive state.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  NetworkFirewallInternetTrafficNotInspectedViolation:
    description: >-
      Violation detail for the subnet for which internet traffic that hasn't
      been inspected.
    properties:
      ActualFirewallSubnetRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The actual firewall subnet routes.
      ActualInternetGatewayRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The actual internet gateway routes.
      CurrentFirewallSubnetRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the subnet route table for the current firewall.
      CurrentInternetGatewayRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The current route table for the internet gateway.
      ExpectedFirewallEndpoint:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The expected endpoint for the current firewall.
      ExpectedFirewallSubnetRoutes:
        allOf:
          - $ref: '#/definitions/ExpectedRoutes'
          - description: The firewall subnet routes that are expected.
      ExpectedInternetGatewayRoutes:
        allOf:
          - $ref: '#/definitions/ExpectedRoutes'
          - description: The internet gateway routes that are expected.
      FirewallSubnetId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The firewall subnet ID.
      InternetGatewayId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The internet gateway ID.
      IsRouteTableUsedInDifferentAZ:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Information about whether the route table is used in another
              Availability Zone.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the route table ID.
      SubnetAvailabilityZone:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: The subnet Availability Zone.
      SubnetId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The subnet ID.
      ViolatingRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The route or routes that are in violation.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  NetworkFirewallInvalidRouteConfigurationViolation:
    description: >-
      Violation detail for the improperly configured subnet route. It's possible
      there is a missing route table route, or a configuration that causes
      traffic to cross an Availability Zone boundary.
    properties:
      ActualFirewallEndpoint:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The actual firewall endpoint.
      ActualFirewallSubnetId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The actual subnet ID for the firewall.
      ActualFirewallSubnetRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The actual firewall subnet routes that are expected.
      ActualInternetGatewayRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The actual internet gateway routes.
      AffectedSubnets:
        allOf:
          - $ref: '#/definitions/ResourceIdList'
          - description: The subnets that are affected.
      CurrentFirewallSubnetRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The subnet route table for the current firewall.
      CurrentInternetGatewayRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The route table for the current internet gateway.
      ExpectedFirewallEndpoint:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The firewall endpoint that's expected.
      ExpectedFirewallSubnetId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The expected subnet ID for the firewall.
      ExpectedFirewallSubnetRoutes:
        allOf:
          - $ref: '#/definitions/ExpectedRoutes'
          - description: The firewall subnet routes that are expected.
      ExpectedInternetGatewayRoutes:
        allOf:
          - $ref: '#/definitions/ExpectedRoutes'
          - description: The expected routes for the internet gateway.
      InternetGatewayId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The internet gateway ID.
      IsRouteTableUsedInDifferentAZ:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Information about whether the route table is used in another
              Availability Zone.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The route table ID.
      ViolatingRoute:
        allOf:
          - $ref: '#/definitions/Route'
          - description: The route that's in violation.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  NetworkFirewallMissingExpectedRTViolation:
    description: >-
      Violation detail for Network Firewall for a subnet that's not associated
      to the expected Firewall Manager managed route table.
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: 'The Availability Zone of a violating subnet. '
      CurrentRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The resource ID of the current route table that's associated with
              the subnet, if one is available.
      ExpectedRouteTable:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The resource ID of the route table that should be associated with
              the subnet.
      VPC:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID of the VPC associated with a violating subnet.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: >-
              The ID of the Network Firewall or VPC resource that's in
              violation.
    type: object
  NetworkFirewallMissingExpectedRoutesViolation:
    description: Violation detail for an expected route missing in Network Firewall.
    properties:
      ExpectedRoutes:
        allOf:
          - $ref: '#/definitions/ExpectedRoutes'
          - description: The expected routes.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: The target of the violation.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  NetworkFirewallMissingFirewallViolation:
    description: >-
      Violation detail for Network Firewall for a subnet that doesn't have a
      Firewall Manager managed firewall in its VPC. 
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: 'The Availability Zone of a violating subnet. '
      TargetViolationReason:
        allOf:
          - $ref: '#/definitions/TargetViolationReason'
          - description: 'The reason the resource has this violation, if one is available. '
      VPC:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID of the VPC associated with a violating subnet.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: >-
              The ID of the Network Firewall or VPC resource that's in
              violation.
    type: object
  NetworkFirewallMissingSubnetViolation:
    description: >-
      Violation detail for Network Firewall for an Availability Zone that's
      missing the expected Firewall Manager managed subnet.
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: 'The Availability Zone of a violating subnet. '
      TargetViolationReason:
        allOf:
          - $ref: '#/definitions/TargetViolationReason'
          - description: 'The reason the resource has this violation, if one is available. '
      VPC:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID of the VPC associated with a violating subnet.
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: >-
              The ID of the Network Firewall or VPC resource that's in
              violation.
    type: object
  NetworkFirewallPolicyDescription:
    description: The definition of the Network Firewall firewall policy.
    properties:
      StatefulRuleGroups:
        allOf:
          - $ref: '#/definitions/StatefulRuleGroupList'
          - description: >-
              The stateful rule groups that are used in the Network Firewall
              firewall policy. 
      StatelessCustomActions:
        allOf:
          - $ref: '#/definitions/NetworkFirewallActionList'
          - description: >-
              Names of custom actions that are available for use in the
              stateless default actions settings.
      StatelessDefaultActions:
        allOf:
          - $ref: '#/definitions/NetworkFirewallActionList'
          - description: >-
              The actions to take on packets that don't match any of the
              stateless rule groups. 
      StatelessFragmentDefaultActions:
        allOf:
          - $ref: '#/definitions/NetworkFirewallActionList'
          - description: >-
              The actions to take on packet fragments that don't match any of
              the stateless rule groups. 
      StatelessRuleGroups:
        allOf:
          - $ref: '#/definitions/StatelessRuleGroupList'
          - description: >-
              The stateless rule groups that are used in the Network Firewall
              firewall policy. 
    type: object
  NetworkFirewallPolicyModifiedViolation:
    description: >-
      Violation detail for Network Firewall for a firewall policy that has a
      different <a>NetworkFirewallPolicyDescription</a> than is required by the
      Firewall Manager policy. 
    properties:
      CurrentPolicyDescription:
        allOf:
          - $ref: '#/definitions/NetworkFirewallPolicyDescription'
          - description: 'The policy that''s currently in use in the individual account. '
      ExpectedPolicyDescription:
        allOf:
          - $ref: '#/definitions/NetworkFirewallPolicyDescription'
          - description: >-
              The policy that should be in use in the individual account in
              order to be compliant. 
      ViolationTarget:
        allOf:
          - $ref: '#/definitions/ViolationTarget'
          - description: >-
              The ID of the Network Firewall or VPC resource that's in
              violation.
    type: object
  NetworkFirewallResourceName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9-]+$'
    type: string
  NetworkFirewallUnexpectedFirewallRoutesViolation:
    description: Violation detail for an unexpected route that's present in a route table.
    properties:
      FirewallEndpoint:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The endpoint of the firewall.
      FirewallSubnetId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The subnet ID for the firewall.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the route table.
      ViolatingRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The routes that are in violation.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  NetworkFirewallUnexpectedGatewayRoutesViolation:
    description: >-
      Violation detail for an unexpected gateway route that’s present in a route
      table.
    properties:
      GatewayId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the gateway ID.
      RouteTableId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the route table.
      ViolatingRoutes:
        allOf:
          - $ref: '#/definitions/Routes'
          - description: The routes that are in violation.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: Information about the VPC ID.
    type: object
  OrderedRemediationActions:
    items:
      $ref: '#/definitions/RemediationActionWithOrder'
    type: array
  PaginationMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  PaginationToken:
    maxLength: 4096
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  PartialMatch:
    description: >-
      The reference rule that partially matches the <code>ViolationTarget</code>
      rule and violation reason.
    properties:
      Reference:
        allOf:
          - $ref: '#/definitions/ReferenceRule'
          - description: >-
              The reference rule from the primary security group of the Firewall
              Manager policy.
      TargetViolationReasons:
        allOf:
          - $ref: '#/definitions/TargetViolationReasons'
          - description: The violation reason.
    type: object
  PartialMatches:
    items:
      $ref: '#/definitions/PartialMatch'
    type: array
  Policy:
    description: An Firewall Manager policy.
    properties:
      DeleteUnusedFMManagedResources:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether Firewall Manager should delete Firewall Manager
              managed resources, such as web ACLs and security groups, when they
              are not in use by the Firewall Manager policy. By default,
              Firewall Manager doesn't delete unused Firewall Manager managed
              resources. This option is not available for Shield Advanced or WAF
              Classic policies.
      ExcludeMap:
        allOf:
          - $ref: '#/definitions/CustomerPolicyScopeMap'
          - description: >-
              <p>Specifies the Amazon Web Services account IDs and Organizations
              organizational units (OUs) to exclude from the policy. Specifying
              an OU is the equivalent of specifying all accounts in the OU and
              in any of its child OUs, including any child OUs and accounts that
              are added at a later time.</p> <p>You can specify inclusions or
              exclusions, but not both. If you specify an
              <code>IncludeMap</code>, Firewall Manager applies the policy to
              all accounts specified by the <code>IncludeMap</code>, and does
              not evaluate any <code>ExcludeMap</code> specifications. If you do
              not specify an <code>IncludeMap</code>, then Firewall Manager
              applies the policy to all accounts except for those specified by
              the <code>ExcludeMap</code>.</p> <p>You can specify account IDs,
              OUs, or a combination: </p> <ul> <li> <p>Specify account IDs by
              setting the key to <code>ACCOUNT</code>. For example, the
              following is a valid map: <code>{“ACCOUNT” : [“accountID1”,
              “accountID2”]}</code>.</p> </li> <li> <p>Specify OUs by setting
              the key to <code>ORG_UNIT</code>. For example, the following is a
              valid map: <code>{“ORG_UNIT” : [“ouid111”, “ouid112”]}</code>.</p>
              </li> <li> <p>Specify accounts and OUs together in a single map,
              separated with a comma. For example, the following is a valid map:
              <code>{“ACCOUNT” : [“accountID1”, “accountID2”], “ORG_UNIT” :
              [“ouid111”, “ouid112”]}</code>.</p> </li> </ul>
      ExcludeResourceTags:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              If set to <code>True</code>, resources with the tags that are
              specified in the <code>ResourceTag</code> array are not in scope
              of the policy. If set to <code>False</code>, and the
              <code>ResourceTag</code> array is not null, only resources with
              the specified tags are in scope of the policy.
      IncludeMap:
        allOf:
          - $ref: '#/definitions/CustomerPolicyScopeMap'
          - description: >-
              <p>Specifies the Amazon Web Services account IDs and Organizations
              organizational units (OUs) to include in the policy. Specifying an
              OU is the equivalent of specifying all accounts in the OU and in
              any of its child OUs, including any child OUs and accounts that
              are added at a later time.</p> <p>You can specify inclusions or
              exclusions, but not both. If you specify an
              <code>IncludeMap</code>, Firewall Manager applies the policy to
              all accounts specified by the <code>IncludeMap</code>, and does
              not evaluate any <code>ExcludeMap</code> specifications. If you do
              not specify an <code>IncludeMap</code>, then Firewall Manager
              applies the policy to all accounts except for those specified by
              the <code>ExcludeMap</code>.</p> <p>You can specify account IDs,
              OUs, or a combination: </p> <ul> <li> <p>Specify account IDs by
              setting the key to <code>ACCOUNT</code>. For example, the
              following is a valid map: <code>{“ACCOUNT” : [“accountID1”,
              “accountID2”]}</code>.</p> </li> <li> <p>Specify OUs by setting
              the key to <code>ORG_UNIT</code>. For example, the following is a
              valid map: <code>{“ORG_UNIT” : [“ouid111”, “ouid112”]}</code>.</p>
              </li> <li> <p>Specify accounts and OUs together in a single map,
              separated with a comma. For example, the following is a valid map:
              <code>{“ACCOUNT” : [“accountID1”, “accountID2”], “ORG_UNIT” :
              [“ouid111”, “ouid112”]}</code>.</p> </li> </ul>
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the Firewall Manager policy.
      PolicyName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the Firewall Manager policy.
      PolicyUpdateToken:
        allOf:
          - $ref: '#/definitions/PolicyUpdateToken'
          - description: >-
              A unique identifier for each update to the policy. When issuing a
              <code>PutPolicy</code> request, the <code>PolicyUpdateToken</code>
              in the request must match the <code>PolicyUpdateToken</code> of
              the current policy version. To get the
              <code>PolicyUpdateToken</code> of the current policy version, use
              a <code>GetPolicy</code> request.
      RemediationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates if the policy should be automatically applied to new
              resources.
      ResourceTags:
        allOf:
          - $ref: '#/definitions/ResourceTags'
          - description: An array of <code>ResourceTag</code> objects.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              <p>The type of resource protected by or in scope of the policy.
              This is in the format shown in the <a
              href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">Amazon
              Web Services Resource Types Reference</a>. To apply this policy to
              multiple resource types, specify a resource type of
              <code>ResourceTypeList</code> and then specify the resource types
              in a <code>ResourceTypeList</code>.</p> <p>For WAF and Shield
              Advanced, example resource types include
              <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code> and
              <code>AWS::CloudFront::Distribution</code>. For a security group
              common policy, valid values are
              <code>AWS::EC2::NetworkInterface</code> and
              <code>AWS::EC2::Instance</code>. For a security group content
              audit policy, valid values are
              <code>AWS::EC2::SecurityGroup</code>,
              <code>AWS::EC2::NetworkInterface</code>, and
              <code>AWS::EC2::Instance</code>. For a security group usage audit
              policy, the value is <code>AWS::EC2::SecurityGroup</code>. For an
              Network Firewall policy or DNS Firewall policy, the value is
              <code>AWS::EC2::VPC</code>.</p>
      ResourceTypeList:
        allOf:
          - $ref: '#/definitions/ResourceTypeList'
          - description: >-
              An array of <code>ResourceType</code> objects. Use this only to
              specify multiple resource types. To specify a single resource
              type, use <code>ResourceType</code>.
      SecurityServicePolicyData:
        allOf:
          - $ref: '#/definitions/SecurityServicePolicyData'
          - description: >-
              Details about the security service that is being used to protect
              the resources.
    required:
      - PolicyName
      - SecurityServicePolicyData
      - ResourceType
      - ExcludeResourceTags
      - RemediationEnabled
    type: object
  PolicyComplianceDetail:
    description: >-
      Describes the noncompliant resources in a member account for a specific
      Firewall Manager policy. A maximum of 100 entries are displayed. If more
      than 100 resources are noncompliant, <code>EvaluationLimitExceeded</code>
      is set to <code>True</code>.
    properties:
      EvaluationLimitExceeded:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates if over 100 resources are noncompliant with the Firewall
              Manager policy.
      ExpiredAt:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              A timestamp that indicates when the returned information should be
              considered out of date.
      IssueInfoMap:
        allOf:
          - $ref: '#/definitions/IssueInfoMap'
          - description: >-
              Details about problems with dependent services, such as WAF or
              Config, and the error message received that indicates the problem
              with the service.
      MemberAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: The Amazon Web Services account ID.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the Firewall Manager policy.
      PolicyOwner:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that created the Firewall Manager
              policy.
      Violators:
        allOf:
          - $ref: '#/definitions/ComplianceViolators'
          - description: >-
              An array of resources that aren't protected by the WAF or Shield
              Advanced policy or that aren't in compliance with the security
              group policy.
    type: object
  PolicyComplianceStatus:
    description: >-
      Indicates whether the account is compliant with the specified policy. An
      account is considered noncompliant if it includes resources that are not
      protected by the policy, for WAF and Shield Advanced policies, or that are
      noncompliant with the policy, for security group policies.
    properties:
      EvaluationResults:
        allOf:
          - $ref: '#/definitions/EvaluationResults'
          - description: An array of <code>EvaluationResult</code> objects.
      IssueInfoMap:
        allOf:
          - $ref: '#/definitions/IssueInfoMap'
          - description: >-
              Details about problems with dependent services, such as WAF or
              Config, and the error message received that indicates the problem
              with the service.
      LastUpdated:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              Timestamp of the last update to the <code>EvaluationResult</code>
              objects.
      MemberAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: The member account ID.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the Firewall Manager policy.
      PolicyName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the Firewall Manager policy.
      PolicyOwner:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that created the Firewall Manager
              policy.
    type: object
  PolicyComplianceStatusList:
    items:
      $ref: '#/definitions/PolicyComplianceStatus'
    type: array
  PolicyComplianceStatusType:
    enum:
      - COMPLIANT
      - NON_COMPLIANT
    type: string
  PolicyId:
    maxLength: 36
    minLength: 36
    pattern: '^[a-z0-9A-Z-]{36}$'
    type: string
  PolicySummary:
    description: 'Details of the Firewall Manager policy. '
    properties:
      DeleteUnusedFMManagedResources:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether Firewall Manager should delete Firewall Manager
              managed resources, such as web ACLs and security groups, when they
              are not in use by the Firewall Manager policy. By default,
              Firewall Manager doesn't delete unused Firewall Manager managed
              resources. This option is not available for Shield Advanced or WAF
              Classic policies.
      PolicyArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the specified policy.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the specified policy.
      PolicyName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the specified policy.
      RemediationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates if the policy should be automatically applied to new
              resources.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of resource protected by or in scope of the policy. This
              is in the format shown in the <a
              href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">Amazon
              Web Services Resource Types Reference</a>. For WAF and Shield
              Advanced, examples include
              <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code> and
              <code>AWS::CloudFront::Distribution</code>. For a security group
              common policy, valid values are
              <code>AWS::EC2::NetworkInterface</code> and
              <code>AWS::EC2::Instance</code>. For a security group content
              audit policy, valid values are
              <code>AWS::EC2::SecurityGroup</code>,
              <code>AWS::EC2::NetworkInterface</code>, and
              <code>AWS::EC2::Instance</code>. For a security group usage audit
              policy, the value is <code>AWS::EC2::SecurityGroup</code>. For an
              Network Firewall policy or DNS Firewall policy, the value is
              <code>AWS::EC2::VPC</code>.
      SecurityServiceType:
        allOf:
          - $ref: '#/definitions/SecurityServiceType'
          - description: >-
              The service that the policy is using to protect the resources.
              This specifies the type of policy that is created, either an WAF
              policy, a Shield Advanced policy, or a security group policy.
    type: object
  PolicySummaryList:
    items:
      $ref: '#/definitions/PolicySummary'
    type: array
  PolicyUpdateToken:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  PossibleRemediationAction:
    description: A list of remediation actions.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the list of remediation actions.
      IsDefaultAction:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Information about whether an action is taken by default.
      OrderedRemediationActions:
        allOf:
          - $ref: '#/definitions/OrderedRemediationActions'
          - description: The ordered list of remediation actions.
    required:
      - OrderedRemediationActions
    type: object
  PossibleRemediationActionList:
    items:
      $ref: '#/definitions/PossibleRemediationAction'
    type: array
  PossibleRemediationActions:
    description: >-
      A list of possible remediation action lists. Each individual possible
      remediation action is a list of individual remediation actions.
    properties:
      Actions:
        allOf:
          - $ref: '#/definitions/PossibleRemediationActionList'
          - description: Information about the actions.
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of the possible remediation actions list.
    type: object
  PreviousAppsList:
    additionalProperties:
      $ref: '#/definitions/AppsList'
    type: object
  PreviousListVersion:
    maxLength: 2
    minLength: 1
    pattern: '^\d{1,2}$'
    type: string
  PreviousProtocolsList:
    additionalProperties:
      $ref: '#/definitions/ProtocolsList'
    type: object
  ProtectionData:
    type: string
  Protocol:
    maxLength: 20
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ProtocolsList:
    items:
      $ref: '#/definitions/Protocol'
    type: array
  ProtocolsListData:
    description: An Firewall Manager protocols list.
    properties:
      CreateTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: The time that the Firewall Manager protocols list was created.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The time that the Firewall Manager protocols list was last
              updated.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: The ID of the Firewall Manager protocols list.
      ListName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the Firewall Manager protocols list.
      ListUpdateToken:
        allOf:
          - $ref: '#/definitions/UpdateToken'
          - description: >-
              A unique identifier for each update to the list. When you update
              the list, the update token must match the token of the current
              version of the application list. You can retrieve the update token
              by getting the list. 
      PreviousProtocolsList:
        allOf:
          - $ref: '#/definitions/PreviousProtocolsList'
          - description: >-
              A map of previous version numbers to their corresponding protocol
              arrays.
      ProtocolsList:
        allOf:
          - $ref: '#/definitions/ProtocolsList'
          - description: An array of protocols in the Firewall Manager protocols list.
    required:
      - ListName
      - ProtocolsList
    type: object
  ProtocolsListDataSummary:
    description: Details of the Firewall Manager protocols list.
    properties:
      ListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the specified protocols list.
      ListId:
        allOf:
          - $ref: '#/definitions/ListId'
          - description: The ID of the specified protocols list.
      ListName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the specified protocols list.
      ProtocolsList:
        allOf:
          - $ref: '#/definitions/ProtocolsList'
          - description: An array of protocols in the Firewall Manager protocols list.
    type: object
  ProtocolsListsData:
    items:
      $ref: '#/definitions/ProtocolsListDataSummary'
    type: array
  PutAppsListRequest:
    properties:
      AppsList:
        allOf:
          - $ref: '#/definitions/AppsListData'
          - description: >-
              The details of the Firewall Manager applications list to be
              created.
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags associated with the resource.
    required:
      - AppsList
    title: PutAppsListRequest
    type: object
  PutAppsListResponse:
    properties:
      AppsList:
        allOf:
          - $ref: '#/definitions/AppsListData'
          - description: The details of the Firewall Manager applications list.
      AppsListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the applications list.
    type: object
  PutNotificationChannelRequest:
    properties:
      SnsRoleName:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role that allows Amazon
              SNS to record Firewall Manager activity. 
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the SNS topic that collects
              notifications from Firewall Manager.
    required:
      - SnsTopicArn
      - SnsRoleName
    title: PutNotificationChannelRequest
    type: object
  PutPolicyRequest:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: The details of the Firewall Manager policy to be created.
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags to add to the Amazon Web Services resource.
    required:
      - Policy
    title: PutPolicyRequest
    type: object
  PutPolicyResponse:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: The details of the Firewall Manager policy.
      PolicyArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the policy.
    type: object
  PutProtocolsListRequest:
    properties:
      ProtocolsList:
        allOf:
          - $ref: '#/definitions/ProtocolsListData'
          - description: The details of the Firewall Manager protocols list to be created.
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags associated with the resource.
    required:
      - ProtocolsList
    title: PutProtocolsListRequest
    type: object
  PutProtocolsListResponse:
    properties:
      ProtocolsList:
        allOf:
          - $ref: '#/definitions/ProtocolsListData'
          - description: The details of the Firewall Manager protocols list.
      ProtocolsListArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the protocols list.
    type: object
  ReferenceRule:
    type: string
  RemediationAction:
    description: >-
      Information about an individual action you can take to remediate a
      violation.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: A description of a remediation action.
      EC2AssociateRouteTableAction:
        allOf:
          - $ref: '#/definitions/EC2AssociateRouteTableAction'
          - description: >-
              Information about the AssociateRouteTable action in the Amazon EC2
              API.
      EC2CopyRouteTableAction:
        allOf:
          - $ref: '#/definitions/EC2CopyRouteTableAction'
          - description: Information about the CopyRouteTable action in the Amazon EC2 API.
      EC2CreateRouteAction:
        allOf:
          - $ref: '#/definitions/EC2CreateRouteAction'
          - description: Information about the CreateRoute action in the Amazon EC2 API.
      EC2CreateRouteTableAction:
        allOf:
          - $ref: '#/definitions/EC2CreateRouteTableAction'
          - description: >-
              Information about the CreateRouteTable action in the Amazon EC2
              API.
      EC2DeleteRouteAction:
        allOf:
          - $ref: '#/definitions/EC2DeleteRouteAction'
          - description: Information about the DeleteRoute action in the Amazon EC2 API.
      EC2ReplaceRouteAction:
        allOf:
          - $ref: '#/definitions/EC2ReplaceRouteAction'
          - description: Information about the ReplaceRoute action in the Amazon EC2 API.
      EC2ReplaceRouteTableAssociationAction:
        allOf:
          - $ref: '#/definitions/EC2ReplaceRouteTableAssociationAction'
          - description: >-
              Information about the ReplaceRouteTableAssociation action in the
              Amazon EC2 API.
    type: object
  RemediationActionDescription:
    maxLength: 1024
    minLength: 0
    pattern: .*
    type: string
  RemediationActionType:
    enum:
      - REMOVE
      - MODIFY
    type: string
  RemediationActionWithOrder:
    description: An ordered list of actions you can take to remediate a violation.
    properties:
      Order:
        allOf:
          - $ref: '#/definitions/BasicInteger'
          - description: The order of the remediation actions in the list.
      RemediationAction:
        allOf:
          - $ref: '#/definitions/RemediationAction'
          - description: Information about an action you can take to remediate a violation.
    type: object
  ResourceArn:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceCount:
    minimum: 0
    type: integer
  ResourceId:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceIdList:
    items:
      $ref: '#/definitions/ResourceId'
    type: array
  ResourceName:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceNotFoundException: {}
  ResourceTag:
    description: >-
      The resource tags that Firewall Manager uses to determine if a particular
      resource should be included or excluded from the Firewall Manager policy.
      Tags enable you to categorize your Amazon Web Services resources in
      different ways, for example, by purpose, owner, or environment. Each tag
      consists of a key and an optional value. Firewall Manager combines the
      tags with "AND" so that, if you add more than one tag to a policy scope, a
      resource must have all the specified tags to be included or excluded. For
      more information, see <a
      href="https://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/tag-editor.html">Working
      with Tag Editor</a>.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/ResourceTagKey'
          - description: The resource tag key.
      Value:
        allOf:
          - $ref: '#/definitions/ResourceTagValue'
          - description: The resource tag value.
    required:
      - Key
    type: object
  ResourceTagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceTagValue:
    maxLength: 256
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceTags:
    items:
      $ref: '#/definitions/ResourceTag'
    maxItems: 8
    minItems: 0
    type: array
  ResourceType:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ResourceTypeList:
    items:
      $ref: '#/definitions/ResourceType'
    type: array
  ResourceViolation:
    description: Violation detail based on resource type.
    properties:
      AwsEc2InstanceViolation:
        allOf:
          - $ref: '#/definitions/AwsEc2InstanceViolation'
          - description: Violation detail for an EC2 instance.
      AwsEc2NetworkInterfaceViolation:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceViolation'
          - description: Violation detail for a network interface.
      AwsVPCSecurityGroupViolation:
        allOf:
          - $ref: '#/definitions/AwsVPCSecurityGroupViolation'
          - description: Violation detail for security groups.
      DnsDuplicateRuleGroupViolation:
        allOf:
          - $ref: '#/definitions/DnsDuplicateRuleGroupViolation'
          - description: >-
              Violation detail for a DNS Firewall policy that indicates that a
              rule group that Firewall Manager tried to associate with a VPC is
              already associated with the VPC and can't be associated again. 
      DnsRuleGroupLimitExceededViolation:
        allOf:
          - $ref: '#/definitions/DnsRuleGroupLimitExceededViolation'
          - description: >-
              Violation detail for a DNS Firewall policy that indicates that the
              VPC reached the limit for associated DNS Firewall rule groups.
              Firewall Manager tried to associate another rule group with the
              VPC and failed. 
      DnsRuleGroupPriorityConflictViolation:
        allOf:
          - $ref: '#/definitions/DnsRuleGroupPriorityConflictViolation'
          - description: >-
              Violation detail for a DNS Firewall policy that indicates that a
              rule group that Firewall Manager tried to associate with a VPC has
              the same priority as a rule group that's already associated. 
      NetworkFirewallBlackHoleRouteDetectedViolation:
        $ref: '#/definitions/NetworkFirewallBlackHoleRouteDetectedViolation'
      NetworkFirewallInternetTrafficNotInspectedViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallInternetTrafficNotInspectedViolation'
          - description: >-
              Violation detail for the subnet for which internet traffic hasn't
              been inspected.
      NetworkFirewallInvalidRouteConfigurationViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallInvalidRouteConfigurationViolation'
          - description: The route configuration is invalid.
      NetworkFirewallMissingExpectedRTViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallMissingExpectedRTViolation'
          - description: >-
              Violation detail for an Network Firewall policy that indicates
              that a subnet is not associated with the expected Firewall Manager
              managed route table. 
      NetworkFirewallMissingExpectedRoutesViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallMissingExpectedRoutesViolation'
          - description: Expected routes are missing from Network Firewall.
      NetworkFirewallMissingFirewallViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallMissingFirewallViolation'
          - description: >-
              Violation detail for an Network Firewall policy that indicates
              that a subnet has no Firewall Manager managed firewall in its
              VPC. 
      NetworkFirewallMissingSubnetViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallMissingSubnetViolation'
          - description: >-
              Violation detail for an Network Firewall policy that indicates
              that an Availability Zone is missing the expected Firewall Manager
              managed subnet.
      NetworkFirewallPolicyModifiedViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallPolicyModifiedViolation'
          - description: >-
              Violation detail for an Network Firewall policy that indicates
              that a firewall policy in an individual account has been modified
              in a way that makes it noncompliant. For example, the individual
              account owner might have deleted a rule group, changed the
              priority of a stateless rule group, or changed a policy default
              action.
      NetworkFirewallUnexpectedFirewallRoutesViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallUnexpectedFirewallRoutesViolation'
          - description: There's an unexpected firewall route.
      NetworkFirewallUnexpectedGatewayRoutesViolation:
        allOf:
          - $ref: '#/definitions/NetworkFirewallUnexpectedGatewayRoutesViolation'
          - description: There's an unexpected gateway route.
      PossibleRemediationActions:
        allOf:
          - $ref: '#/definitions/PossibleRemediationActions'
          - description: >-
              A list of possible remediation action lists. Each individual
              possible remediation action is a list of individual remediation
              actions.
    type: object
  ResourceViolations:
    items:
      $ref: '#/definitions/ResourceViolation'
    type: array
  Route:
    description: Describes a route in a route table.
    properties:
      Destination:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: The destination of the route.
      DestinationType:
        allOf:
          - $ref: '#/definitions/DestinationType'
          - description: The type of destination for the route.
      Target:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: The route's target.
      TargetType:
        allOf:
          - $ref: '#/definitions/TargetType'
          - description: The type of target for the route.
    type: object
  Routes:
    items:
      $ref: '#/definitions/Route'
    type: array
  SecurityGroupRemediationAction:
    description: >-
      Remediation option for the rule specified in the
      <code>ViolationTarget</code>.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/RemediationActionDescription'
          - description: Brief description of the action that will be performed.
      IsDefaultAction:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates if the current action is the default action.
      RemediationActionType:
        allOf:
          - $ref: '#/definitions/RemediationActionType'
          - description: The remediation action that will be performed.
      RemediationResult:
        allOf:
          - $ref: '#/definitions/SecurityGroupRuleDescription'
          - description: >-
              The final state of the rule specified in the
              <code>ViolationTarget</code> after it is remediated.
    type: object
  SecurityGroupRemediationActions:
    items:
      $ref: '#/definitions/SecurityGroupRemediationAction'
    type: array
  SecurityGroupRuleDescription:
    description: Describes a set of permissions for a security group rule.
    properties:
      FromPort:
        allOf:
          - $ref: '#/definitions/IPPortNumber'
          - description: >-
              The start of the port range for the TCP and UDP protocols, or an
              ICMP/ICMPv6 type number. A value of <code>-1</code> indicates all
              ICMP/ICMPv6 types.
      IPV4Range:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: The IPv4 ranges for the security group rule.
      IPV6Range:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: The IPv6 ranges for the security group rule.
      PrefixListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the prefix list for the security group rule.
      Protocol:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: >-
              The IP protocol name (<code>tcp</code>, <code>udp</code>,
              <code>icmp</code>, <code>icmpv6</code>) or number.
      ToPort:
        allOf:
          - $ref: '#/definitions/IPPortNumber'
          - description: >-
              The end of the port range for the TCP and UDP protocols, or an
              ICMP/ICMPv6 code. A value of <code>-1</code> indicates all
              ICMP/ICMPv6 codes.
    type: object
  SecurityServicePolicyData:
    description: >-
      Details about the security service that is being used to protect the
      resources.
    properties:
      ManagedServiceData:
        allOf:
          - $ref: '#/definitions/ManagedServiceData'
          - description: >-
              <p>Details about the service that are specific to the service
              type, in JSON format. For service type
              <code>SHIELD_ADVANCED</code>, this is an empty string.</p> <ul>
              <li> <p>Example: <code>DNS_FIREWALL</code> </p> <p>
              <code>"{\"type\":\"DNS_FIREWALL\",\"preProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-1\",\"priority\":10}],\"postProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-2\",\"priority\":9911}]}"</code>
              </p> <note> <p>Valid values for <code>preProcessRuleGroups</code>
              are between 1 and 99. Valid values for
              <code>postProcessRuleGroups</code> are between 9901 and 10000.</p>
              </note> </li> <li> <p>Example: <code>NETWORK_FIREWALL</code> </p>
              <p>
              <code>"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-west-1:1234567891011:stateless-rulegroup/rulegroup2\",\"priority\":10}],\"networkFirewallStatelessDefaultActions\":[\"aws:pass\",\"custom1\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"custom2\",\"aws:pass\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"custom1\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"dimension1\"}]}}},{\"actionName\":\"custom2\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"dimension2\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-west-1:1234567891011:stateful-rulegroup/rulegroup1\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":true,\"allowedIPV4CidrList\":[\"10.24.34.0/28\"]}
              }"</code> </p> </li> <li> <p>Example: <code>WAFV2</code> </p> <p>
              <code>"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"version\":null,\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesAmazonIpReputationList\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"</code>
              </p> <p>In the <code>loggingConfiguration</code>, you can specify
              one <code>logDestinationConfigs</code>, you can optionally provide
              up to 20 <code>redactedFields</code>, and the
              <code>RedactedFieldType</code> must be one of <code>URI</code>,
              <code>QUERY_STRING</code>, <code>HEADER</code>, or
              <code>METHOD</code>.</p> </li> <li> <p>Example: <code>WAF
              Classic</code> </p> <p> <code>"{\"type\": \"WAF\", \"ruleGroups\":
              [{\"id\":\"12345678-1bcd-9012-efga-0987654321ab\",
              \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\":
              {\"type\": \"BLOCK\"}}"</code> </p> </li> <li> <p>Example:
              <code>SECURITY_GROUPS_COMMON</code> </p> <p>
              <code>"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false,
              \"applyToAllEC2InstanceENIs\":false,\"securityGroups\":[{\"id\":\"
              sg-000e55995d61a06bd\"}]}"</code> </p> </li> <li> <p>Example:
              Shared VPCs. Apply the preceding policy to resources in shared
              VPCs as well as to those in VPCs that the account owns </p> <p>
              <code>"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false,
              \"applyToAllEC2InstanceENIs\":false,\"includeSharedVPC\":true,\"securityGroups\":[{\"id\":\"
              sg-000e55995d61a06bd\"}]}"</code> </p> </li> <li> <p>Example:
              <code>SECURITY_GROUPS_CONTENT_AUDIT</code> </p> <p>
              <code>"{\"type\":\"SECURITY_GROUPS_CONTENT_AUDIT\",\"securityGroups\":[{\"id\":\"sg-000e55995d61a06bd\"}],\"securityGroupAction\":{\"type\":\"ALLOW\"}}"</code>
              </p> <p>The security group action for content audit can be
              <code>ALLOW</code> or <code>DENY</code>. For <code>ALLOW</code>,
              all in-scope security group rules must be within the allowed range
              of the policy's security group rules. For <code>DENY</code>, all
              in-scope security group rules must not contain a value or a range
              that matches a rule value or range in the policy security
              group.</p> </li> <li> <p>Example:
              <code>SECURITY_GROUPS_USAGE_AUDIT</code> </p> <p>
              <code>"{\"type\":\"SECURITY_GROUPS_USAGE_AUDIT\",\"deleteUnusedSecurityGroups\":true,\"coalesceRedundantSecurityGroups\":true}"</code>
              </p> </li> </ul>
      Type:
        allOf:
          - $ref: '#/definitions/SecurityServiceType'
          - description: >-
              The service that the policy is using to protect the resources.
              This specifies the type of policy that is created, either an WAF
              policy, a Shield Advanced policy, or a security group policy. For
              security group policies, Firewall Manager supports one security
              group for each common policy and for each content audit policy.
              This is an adjustable limit that you can increase by contacting
              Amazon Web Services Support.
    required:
      - Type
    type: object
  SecurityServiceType:
    enum:
      - WAF
      - WAFV2
      - SHIELD_ADVANCED
      - SECURITY_GROUPS_COMMON
      - SECURITY_GROUPS_CONTENT_AUDIT
      - SECURITY_GROUPS_USAGE_AUDIT
      - NETWORK_FIREWALL
      - DNS_FIREWALL
    type: string
  StatefulRuleGroup:
    description: >-
      Network Firewall stateful rule group, used in a
      <a>NetworkFirewallPolicyDescription</a>. 
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID of the rule group.
      RuleGroupName:
        allOf:
          - $ref: '#/definitions/NetworkFirewallResourceName'
          - description: The name of the rule group.
    type: object
  StatefulRuleGroupList:
    items:
      $ref: '#/definitions/StatefulRuleGroup'
    type: array
  StatelessRuleGroup:
    description: >-
      Network Firewall stateless rule group, used in a
      <a>NetworkFirewallPolicyDescription</a>. 
    properties:
      Priority:
        allOf:
          - $ref: '#/definitions/StatelessRuleGroupPriority'
          - description: >-
              The priority of the rule group. Network Firewall evaluates the
              stateless rule groups in a firewall policy starting from the
              lowest priority setting. 
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID of the rule group.
      RuleGroupName:
        allOf:
          - $ref: '#/definitions/NetworkFirewallResourceName'
          - description: The name of the rule group.
    type: object
  StatelessRuleGroupList:
    items:
      $ref: '#/definitions/StatelessRuleGroup'
    type: array
  StatelessRuleGroupPriority:
    maximum: 65535
    minimum: 1
    type: integer
  Tag:
    description: >-
      A collection of key:value pairs associated with an Amazon Web Services
      resource. The key:value pair can be anything you define. Typically, the
      tag key represents a category (such as "environment") and the tag value
      represents a specific value within that category (such as "test,"
      "development," or "production"). You can add up to 50 tags to each Amazon
      Web Services resource. 
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              Part of the key:value pair that defines a tag. You can use a tag
              key to describe a category of information, such as "customer." Tag
              keys are case-sensitive.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              Part of the key:value pair that defines a tag. You can use a tag
              value to describe a specific value within a category, such as
              "companyA" or "companyB." Tag values are case-sensitive. 
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to return tags for.
              The Firewall Manager resources that support tagging are policies,
              applications lists, and protocols lists. 
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags to add to the resource.
    required:
      - ResourceArn
      - TagList
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TargetType:
    enum:
      - GATEWAY
      - CARRIER_GATEWAY
      - INSTANCE
      - LOCAL_GATEWAY
      - NAT_GATEWAY
      - NETWORK_INTERFACE
      - VPC_ENDPOINT
      - VPC_PEERING_CONNECTION
      - EGRESS_ONLY_INTERNET_GATEWAY
      - TRANSIT_GATEWAY
    type: string
  TargetViolationReason:
    maxLength: 256
    minLength: 0
    pattern: \w+
    type: string
  TargetViolationReasons:
    items:
      $ref: '#/definitions/TargetViolationReason'
    type: array
  TimeStamp:
    format: date-time
    type: string
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to return tags for.
              The Firewall Manager resources that support tagging are policies,
              applications lists, and protocols lists. 
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: 'The keys of the tags to remove from the resource. '
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateToken:
    maxLength: 1024
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ViolationDetail:
    description: >-
      Violations for a resource based on the specified Firewall Manager policy
      and Amazon Web Services account.
    properties:
      MemberAccount:
        allOf:
          - $ref: '#/definitions/AWSAccountId'
          - description: >-
              The Amazon Web Services account that the violation details were
              requested for.
      PolicyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: >-
              The ID of the Firewall Manager policy that the violation details
              were requested for.
      ResourceDescription:
        allOf:
          - $ref: '#/definitions/LengthBoundedString'
          - description: Brief description for the requested resource.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The resource ID that the violation details were requested for.
      ResourceTags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The <code>ResourceTag</code> objects associated with the resource.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: The resource type that the violation details were requested for.
      ResourceViolations:
        allOf:
          - $ref: '#/definitions/ResourceViolations'
          - description: List of violations for the requested resource.
    required:
      - PolicyId
      - MemberAccount
      - ResourceId
      - ResourceType
      - ResourceViolations
    type: object
  ViolationReason:
    enum:
      - WEB_ACL_MISSING_RULE_GROUP
      - RESOURCE_MISSING_WEB_ACL
      - RESOURCE_INCORRECT_WEB_ACL
      - RESOURCE_MISSING_SHIELD_PROTECTION
      - RESOURCE_MISSING_WEB_ACL_OR_SHIELD_PROTECTION
      - RESOURCE_MISSING_SECURITY_GROUP
      - RESOURCE_VIOLATES_AUDIT_SECURITY_GROUP
      - SECURITY_GROUP_UNUSED
      - SECURITY_GROUP_REDUNDANT
      - FMS_CREATED_SECURITY_GROUP_EDITED
      - MISSING_FIREWALL
      - MISSING_FIREWALL_SUBNET_IN_AZ
      - MISSING_EXPECTED_ROUTE_TABLE
      - NETWORK_FIREWALL_POLICY_MODIFIED
      - INTERNET_GATEWAY_MISSING_EXPECTED_ROUTE
      - FIREWALL_SUBNET_MISSING_EXPECTED_ROUTE
      - UNEXPECTED_FIREWALL_ROUTES
      - UNEXPECTED_TARGET_GATEWAY_ROUTES
      - TRAFFIC_INSPECTION_CROSSES_AZ_BOUNDARY
      - INVALID_ROUTE_CONFIGURATION
      - MISSING_TARGET_GATEWAY
      - INTERNET_TRAFFIC_NOT_INSPECTED
      - BLACK_HOLE_ROUTE_DETECTED
      - BLACK_HOLE_ROUTE_DETECTED_IN_FIREWALL_SUBNET
      - RESOURCE_MISSING_DNS_FIREWALL
    type: string
  ViolationTarget:
    maxLength: 1024
    minLength: 0
    pattern: .*
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/fms/'
host: fms.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>This is the <i>Firewall Manager API Reference</i>. This guide is for
    developers who need detailed information about the Firewall Manager API
    actions, data types, and errors. For detailed information about Firewall
    Manager features, see the <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-chapter.html">Firewall
    Manager Developer Guide</a>.</p> <p>Some API actions require explicit
    resource permissions. For information, see the developer guide topic <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall
    Manager required permissions for API actions</a>. </p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Firewall Management Service
  version: '2018-01-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fms-2018-01-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: fms
paths:
  /#X-Amz-Target=AWSFMS_20180101.AssociateAdminAccount:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sets the Firewall Manager administrator account. The account must be
        a member of the organization in Organizations whose resources you want
        to protect. Firewall Manager sets the permissions that allow the account
        to administer your Firewall Manager policies.</p> <p>The account that
        you associate with Firewall Manager is called the Firewall Manager
        administrator account. </p>
      operationId: AssociateAdminAccount
      parameters:
        - enum:
            - AWSFMS_20180101.AssociateAdminAccount
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateAdminAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /#X-Amz-Target=AWSFMS_20180101.DeleteAppsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Permanently deletes an Firewall Manager applications list.
      operationId: DeleteAppsList
      parameters:
        - enum:
            - AWSFMS_20180101.DeleteAppsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAppsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.DeleteNotificationChannel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an Firewall Manager association with the IAM role and the Amazon
        Simple Notification Service (SNS) topic that is used to record Firewall
        Manager SNS logs.
      operationId: DeleteNotificationChannel
      parameters:
        - enum:
            - AWSFMS_20180101.DeleteNotificationChannel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotificationChannelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.DeletePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Permanently deletes an Firewall Manager policy. '
      operationId: DeletePolicy
      parameters:
        - enum:
            - AWSFMS_20180101.DeletePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /#X-Amz-Target=AWSFMS_20180101.DeleteProtocolsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Permanently deletes an Firewall Manager protocols list.
      operationId: DeleteProtocolsList
      parameters:
        - enum:
            - AWSFMS_20180101.DeleteProtocolsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProtocolsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.DisassociateAdminAccount:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Disassociates the account that has been set as the Firewall Manager
        administrator account. To set a different account as the administrator
        account, you must submit an <code>AssociateAdminAccount</code> request.
      operationId: DisassociateAdminAccount
      parameters:
        - enum:
            - AWSFMS_20180101.DisassociateAdminAccount
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateAdminAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetAdminAccount:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the Organizations account that is associated with Firewall
        Manager as the Firewall Manager administrator.
      operationId: GetAdminAccount
      parameters:
        - enum:
            - AWSFMS_20180101.GetAdminAccount
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAdminAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAdminAccountResponse'
        '480':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetAppsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns information about the specified Firewall Manager applications
        list.
      operationId: GetAppsList
      parameters:
        - enum:
            - AWSFMS_20180101.GetAppsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAppsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAppsListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetComplianceDetail:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns detailed compliance information about the specified member
        account. Details include resources that are in and out of compliance
        with the specified policy. </p> <ul> <li> <p>Resources are considered
        noncompliant for WAF and Shield Advanced policies if the specified
        policy has not been applied to them.</p> </li> <li> <p>Resources are
        considered noncompliant for security group policies if they are in scope
        of the policy, they violate one or more of the policy rules, and
        remediation is disabled or not possible.</p> </li> <li> <p>Resources are
        considered noncompliant for Network Firewall policies if a firewall is
        missing in the VPC, if the firewall endpoint isn't set up in an expected
        Availability Zone and subnet, if a subnet created by the Firewall
        Manager doesn't have the expected route table, and for modifications to
        a firewall policy that violate the Firewall Manager policy's rules.</p>
        </li> <li> <p>Resources are considered noncompliant for DNS Firewall
        policies if a DNS Firewall rule group is missing from the rule group
        associations for the VPC. </p> </li> </ul>
      operationId: GetComplianceDetail
      parameters:
        - enum:
            - AWSFMS_20180101.GetComplianceDetail
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetComplianceDetailRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComplianceDetailResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
  /#X-Amz-Target=AWSFMS_20180101.GetNotificationChannel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Information about the Amazon Simple Notification Service (SNS) topic
        that is used to record Firewall Manager SNS logs.
      operationId: GetNotificationChannel
      parameters:
        - enum:
            - AWSFMS_20180101.GetNotificationChannel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetNotificationChannelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNotificationChannelResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns information about the specified Firewall Manager policy.
      operationId: GetPolicy
      parameters:
        - enum:
            - AWSFMS_20180101.GetPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '483':
          description: InvalidTypeException
          schema:
            $ref: '#/definitions/InvalidTypeException'
  /#X-Amz-Target=AWSFMS_20180101.GetProtectionStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        If you created a Shield Advanced policy, returns policy-level attack
        summary information in the event of a potential DDoS attack. Other
        policy types are currently unsupported.
      operationId: GetProtectionStatus
      parameters:
        - enum:
            - AWSFMS_20180101.GetProtectionStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetProtectionStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProtectionStatusResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetProtocolsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns information about the specified Firewall Manager protocols list.
      operationId: GetProtocolsList
      parameters:
        - enum:
            - AWSFMS_20180101.GetProtocolsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetProtocolsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProtocolsListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.GetViolationDetails:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Retrieves violations for a resource based on the specified Firewall
        Manager policy and Amazon Web Services account.
      operationId: GetViolationDetails
      parameters:
        - enum:
            - AWSFMS_20180101.GetViolationDetails
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetViolationDetailsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetViolationDetailsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListAppsLists:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns an array of <code>AppsListDataSummary</code> objects.
      operationId: ListAppsLists
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSFMS_20180101.ListAppsLists
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAppsListsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAppsListsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListComplianceStatus:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns an array of <code>PolicyComplianceStatus</code> objects. Use
        <code>PolicyComplianceStatus</code> to get a summary of which member
        accounts are protected by the specified policy. 
      operationId: ListComplianceStatus
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSFMS_20180101.ListComplianceStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListComplianceStatusRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComplianceStatusResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListMemberAccounts:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a <code>MemberAccounts</code> object that lists the member
        accounts in the administrator's Amazon Web Services organization.</p>
        <p>The <code>ListMemberAccounts</code> must be submitted by the account
        that is set as the Firewall Manager administrator.</p>
      operationId: ListMemberAccounts
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSFMS_20180101.ListMemberAccounts
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListMemberAccountsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMemberAccountsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListPolicies:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns an array of <code>PolicySummary</code> objects.
      operationId: ListPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSFMS_20180101.ListPolicies
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPoliciesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListProtocolsLists:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns an array of <code>ProtocolsListDataSummary</code> objects.
      operationId: ListProtocolsLists
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSFMS_20180101.ListProtocolsLists
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListProtocolsListsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProtocolsListsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Retrieves the list of tags for the specified Amazon Web Services
        resource. 
      operationId: ListTagsForResource
      parameters:
        - enum:
            - AWSFMS_20180101.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  /#X-Amz-Target=AWSFMS_20180101.PutAppsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates an Firewall Manager applications list.
      operationId: PutAppsList
      parameters:
        - enum:
            - AWSFMS_20180101.PutAppsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutAppsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAppsListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.PutNotificationChannel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Designates the IAM role and Amazon Simple Notification Service (SNS)
        topic that Firewall Manager uses to record SNS logs.</p> <p>To perform
        this action outside of the console, you must configure the SNS topic to
        allow the Firewall Manager role <code>AWSServiceRoleForFMS</code> to
        publish SNS logs. For more information, see <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall
        Manager required permissions for API actions</a> in the <i>Firewall
        Manager Developer Guide</i>.</p>
      operationId: PutNotificationChannel
      parameters:
        - enum:
            - AWSFMS_20180101.PutNotificationChannel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutNotificationChannelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.PutPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates an Firewall Manager policy.</p> <p>Firewall Manager provides
        the following types of policies: </p> <ul> <li> <p>An WAF policy (type
        WAFV2), which defines rule groups to run first in the corresponding WAF
        web ACL and rule groups to run last in the web ACL.</p> </li> <li> <p>An
        WAF Classic policy (type WAF), which defines a rule group. </p> </li>
        <li> <p>A Shield Advanced policy, which applies Shield Advanced
        protection to specified accounts and resources.</p> </li> <li> <p>A
        security group policy, which manages VPC security groups across your
        Amazon Web Services organization. </p> </li> <li> <p>An Network Firewall
        policy, which provides firewall rules to filter network traffic in
        specified Amazon VPCs.</p> </li> <li> <p>A DNS Firewall policy, which
        provides Route 53 Resolver DNS Firewall rules to filter DNS queries for
        specified VPCs.</p> </li> </ul> <p>Each policy is specific to one of the
        types. If you want to enforce more than one policy type across accounts,
        create multiple policies. You can create multiple policies for each
        type.</p> <p>You must be subscribed to Shield Advanced to create a
        Shield Advanced policy. For more information about subscribing to Shield
        Advanced, see <a
        href="https://docs.aws.amazon.com/waf/latest/DDOSAPIReference/API_CreateSubscription.html">CreateSubscription</a>.</p>
      operationId: PutPolicy
      parameters:
        - enum:
            - AWSFMS_20180101.PutPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '485':
          description: InvalidTypeException
          schema:
            $ref: '#/definitions/InvalidTypeException'
  /#X-Amz-Target=AWSFMS_20180101.PutProtocolsList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates an Firewall Manager protocols list.
      operationId: PutProtocolsList
      parameters:
        - enum:
            - AWSFMS_20180101.PutProtocolsList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutProtocolsListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutProtocolsListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
  /#X-Amz-Target=AWSFMS_20180101.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds one or more tags to an Amazon Web Services resource.
      operationId: TagResource
      parameters:
        - enum:
            - AWSFMS_20180101.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /#X-Amz-Target=AWSFMS_20180101.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Removes one or more tags from an Amazon Web Services resource.
      operationId: UntagResource
      parameters:
        - enum:
            - AWSFMS_20180101.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidOperationException
          schema:
            $ref: '#/definitions/InvalidOperationException'
        '482':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

