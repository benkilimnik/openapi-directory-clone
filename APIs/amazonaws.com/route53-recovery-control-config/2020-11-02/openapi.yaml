basePath: /
definitions:
  AccessDeniedException: {}
  AssertionRule:
    description: >-
      An assertion rule enforces that, when a routing control state is changed,
      the criteria set by the rule configuration is met. Otherwise, the change
      to the routing control is not accepted.
    properties:
      AssertedControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              The routing controls that are part of transactions that are
              evaluated to determine if a request to change a routing control
              state is allowed. For example, you might include three routing
              controls, one for each of three Amazon Web Services Regions.
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the control panel.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: >-
              Name of the assertion rule. You can use any non-white space
              character in the name.
      RuleConfig:
        allOf:
          - $ref: '#/definitions/RuleConfig'
          - description: >-
              The criteria that you set for specific assertion controls (routing
              controls) that designate how many controls must be enabled as the
              result of a transaction. For example, if you have three assertion
              controls, you might specify atleast 2 for your rule configuration.
              This means that at least two assertion controls must be enabled,
              so that at least two Amazon Web Services Regions are enabled.
      SafetyRuleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the assertion rule.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              The deployment status of an assertion rule. Status can be one of
              the following: PENDING, DEPLOYED, PENDING_DELETION.
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - Status
      - ControlPanelArn
      - SafetyRuleArn
      - AssertedControls
      - RuleConfig
      - WaitPeriodMs
      - Name
    type: object
  AssertionRuleUpdate:
    description: >-
      An update to an assertion rule. You can update the name or the evaluation
      period (wait period). If you don't specify one of the items to update, the
      item is unchanged.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: >-
              The name of the assertion rule. You can use any non-white space
              character in the name.
      SafetyRuleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the assertion rule.
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - SafetyRuleArn
      - WaitPeriodMs
      - Name
    type: object
  Cluster:
    description: >-
      A cluster is a set of five consensus-forming Regional endpoints that
      represent the infrastructure that hosts your routing controls. Typically,
      you host together on one cluster all of the routing controls for your
      applications.
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the cluster.
      ClusterEndpoints:
        allOf:
          - $ref: '#/definitions/__listOfClusterEndpoint'
          - description: >-
              <p>Endpoints for a cluster. Specify one of these endpoints when
              you want to set or retrieve a routing control state in the
              cluster.</p> <p>To get or update the routing control state, see
              the Amazon Route 53 Application Recovery Controller Cluster (Data
              Plane) Actions.</p>
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the cluster.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              Deployment status of a resource. Status can be one of the
              following: PENDING, DEPLOYED, PENDING_DELETION.
    type: object
  ClusterEndpoint:
    description: >-
      A cluster endpoint. Specify an endpoint when you want to set or retrieve a
      routing control state in the cluster.
    properties:
      Endpoint:
        allOf:
          - $ref: '#/definitions/__stringMin1Max128'
          - description: >-
              <p>A cluster endpoint. Specify an endpoint and Amazon Web Services
              Region when you want to set or retrieve a routing control state in
              the cluster.</p> <p>To get or update the routing control state,
              see the Amazon Route 53 Application Recovery Controller Cluster
              (Data Plane) Actions.</p>
      Region:
        allOf:
          - $ref: '#/definitions/__stringMin1Max32'
          - description: The Amazon Web Services Region for a cluster endpoint.
    type: object
  ConflictException: {}
  ControlPanel:
    description: >-
      A control panel represents a group of routing controls that can be changed
      together in a single transaction.
    properties:
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the cluster that includes the
              control panel.
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the control panel.
      DefaultControlPanel:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: >-
              A flag that Amazon Route 53 Application Recovery Controller sets
              to true to designate the default control panel for a cluster. When
              you create a cluster, Amazon Route 53 Application Recovery
              Controller creates a control panel, and sets this flag for that
              control panel. If you create a control panel yourself, this flag
              is set to false.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: >-
              The name of the control panel. You can use any non-white space
              character in the name.
      RoutingControlCount:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: The number of routing controls in the control panel.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              The deployment status of control panel. Status can be one of the
              following: PENDING, DEPLOYED, PENDING_DELETION.
    type: object
  CreateClusterRequest:
    description: Creates a cluster.
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/__stringMax64'
          - description: Unique client idempotency token.
      ClusterName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the cluster.
    required:
      - ClusterName
    title: CreateClusterRequest
    type: object
  CreateClusterResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The cluster that was created.
    type: object
  CreateControlPanelRequest:
    description: The details of the control panel that you're creating.
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/__stringMax64'
          - description: Unique client idempotency token.
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the cluster for the control
              panel.
      ControlPanelName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the control panel.
    required:
      - ClusterArn
      - ControlPanelName
    title: CreateControlPanelRequest
    type: object
  CreateControlPanelResponse:
    properties:
      ControlPanel:
        allOf:
          - $ref: '#/definitions/ControlPanel'
          - description: Information about a control panel.
    type: object
  CreateRoutingControlRequest:
    description: The details of the routing control that you're creating.
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/__stringMax64'
          - description: Unique client idempotency token.
      ClusterArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the cluster that includes the
              routing control.
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the control panel that includes
              the routing control.
      RoutingControlName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the routing control.
    required:
      - ClusterArn
      - RoutingControlName
    title: CreateRoutingControlRequest
    type: object
  CreateRoutingControlResponse:
    properties:
      RoutingControl:
        allOf:
          - $ref: '#/definitions/RoutingControl'
          - description: The routing control that is created.
    type: object
  CreateSafetyRuleRequest:
    description: The request body that you include when you create a safety rule.
    properties:
      AssertionRule:
        $ref: '#/definitions/NewAssertionRule'
      ClientToken:
        allOf:
          - $ref: '#/definitions/__stringMax64'
          - description: Unique client idempotency token.
      GatingRule:
        $ref: '#/definitions/NewGatingRule'
    title: CreateSafetyRuleRequest
    type: object
  CreateSafetyRuleResponse:
    properties:
      AssertionRule:
        $ref: '#/definitions/AssertionRule'
      GatingRule:
        $ref: '#/definitions/GatingRule'
    type: object
  DeleteClusterRequest:
    properties: {}
    title: DeleteClusterRequest
    type: object
  DeleteClusterResponse:
    properties: {}
    type: object
  DeleteControlPanelRequest:
    properties: {}
    title: DeleteControlPanelRequest
    type: object
  DeleteControlPanelResponse:
    properties: {}
    type: object
  DeleteRoutingControlRequest:
    properties: {}
    title: DeleteRoutingControlRequest
    type: object
  DeleteRoutingControlResponse:
    properties: {}
    type: object
  DeleteSafetyRuleRequest:
    properties: {}
    title: DeleteSafetyRuleRequest
    type: object
  DeleteSafetyRuleResponse:
    properties: {}
    type: object
  DescribeClusterRequest:
    properties: {}
    title: DescribeClusterRequest
    type: object
  DescribeClusterResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The cluster for the DescribeCluster request.
    type: object
  DescribeControlPanelRequest:
    properties: {}
    title: DescribeControlPanelRequest
    type: object
  DescribeControlPanelResponse:
    properties:
      ControlPanel:
        allOf:
          - $ref: '#/definitions/ControlPanel'
          - description: Information about the control panel.
    type: object
  DescribeRoutingControlRequest:
    properties: {}
    title: DescribeRoutingControlRequest
    type: object
  DescribeRoutingControlResponse:
    properties:
      RoutingControl:
        allOf:
          - $ref: '#/definitions/RoutingControl'
          - description: Information about the routing control.
    type: object
  DescribeSafetyRuleRequest:
    properties: {}
    title: DescribeSafetyRuleRequest
    type: object
  DescribeSafetyRuleResponse:
    properties:
      AssertionRule:
        $ref: '#/definitions/AssertionRule'
      GatingRule:
        $ref: '#/definitions/GatingRule'
    type: object
  GatingRule:
    description: >-
      A gating rule verifies that a set of gating controls evaluates as true,
      based on a rule configuration that you specify. If the gating rule
      evaluates to true, Amazon Route 53 Application Recovery Controller allows
      a set of routing control state changes to run and complete against the set
      of target controls.
    properties:
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the control panel.
      GatingControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              The gating controls for the gating rule. That is, routing controls
              that are evaluated by the rule configuration that you specify.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name for the gating rule.
      RuleConfig:
        allOf:
          - $ref: '#/definitions/RuleConfig'
          - description: >-
              The criteria that you set for specific gating controls (routing
              controls) that designates how many controls must be enabled to
              allow you to change (set or unset) the target controls.
      SafetyRuleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the gating rule.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              The deployment status of a gating rule. Status can be one of the
              following: PENDING, DEPLOYED, PENDING_DELETION.
      TargetControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              <p>Routing controls that can only be set or unset if the specified
              RuleConfig evaluates to true for the specified GatingControls. For
              example, say you have three gating controls, one for each of three
              Amazon Web Services Regions. Now you specify ATLEAST 2 as your
              RuleConfig. With these settings, you can only change (set or
              unset) the routing controls that you have specified as
              TargetControls if that rule evaluates to true.</p> <p>In other
              words, your ability to change the routing controls that you have
              specified as TargetControls is gated by the rule that you set for
              the routing controls in GatingControls.</p>
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - Status
      - TargetControls
      - ControlPanelArn
      - SafetyRuleArn
      - GatingControls
      - RuleConfig
      - WaitPeriodMs
      - Name
    type: object
  GatingRuleUpdate:
    description: >-
      Update to a gating rule. You can update the name or the evaluation period
      (wait period). If you don't specify one of the items to update, the item
      is unchanged.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name for the gating rule.
      SafetyRuleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the gating rule.
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - SafetyRuleArn
      - WaitPeriodMs
      - Name
    type: object
  InternalServerException: {}
  ListAssociatedRoute53HealthChecksRequest:
    properties: {}
    title: ListAssociatedRoute53HealthChecksRequest
    type: object
  ListAssociatedRoute53HealthChecksResponse:
    properties:
      HealthCheckIds:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: Identifiers for the health checks.
      NextToken:
        allOf:
          - $ref: '#/definitions/__stringMax8096'
          - description: The token that identifies which batch of results you want to see.
    type: object
  ListClustersRequest:
    properties: {}
    title: ListClustersRequest
    type: object
  ListClustersResponse:
    properties:
      Clusters:
        allOf:
          - $ref: '#/definitions/__listOfCluster'
          - description: An array of the clusters in an account.
      NextToken:
        allOf:
          - $ref: '#/definitions/__stringMax8096'
          - description: The token that identifies which batch of results you want to see.
    type: object
  ListControlPanelsRequest:
    properties: {}
    title: ListControlPanelsRequest
    type: object
  ListControlPanelsResponse:
    properties:
      ControlPanels:
        allOf:
          - $ref: '#/definitions/__listOfControlPanel'
          - description: The result of a successful ListControlPanel request.
      NextToken:
        allOf:
          - $ref: '#/definitions/__stringMax8096'
          - description: The token that identifies which batch of results you want to see.
    type: object
  ListRoutingControlsRequest:
    properties: {}
    title: ListRoutingControlsRequest
    type: object
  ListRoutingControlsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/__stringMax8096'
          - description: The token that identifies which batch of results you want to see.
      RoutingControls:
        allOf:
          - $ref: '#/definitions/__listOfRoutingControl'
          - description: An array of routing controls.
    type: object
  ListSafetyRulesRequest:
    properties: {}
    title: ListSafetyRulesRequest
    type: object
  ListSafetyRulesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/__stringMax8096'
          - description: The token that identifies which batch of results you want to see.
      SafetyRules:
        allOf:
          - $ref: '#/definitions/__listOfRule'
          - description: The list of safety rules in a control panel.
    type: object
  MaxResults:
    maximum: 1000
    minimum: 1
    type: integer
  NewAssertionRule:
    description: A new assertion rule for a control panel.
    properties:
      AssertedControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              The routing controls that are part of transactions that are
              evaluated to determine if a request to change a routing control
              state is allowed. For example, you might include three routing
              controls, one for each of three Amazon Web Services Regions.
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) for the control panel.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: >-
              The name of the assertion rule. You can use any non-white space
              character in the name.
      RuleConfig:
        allOf:
          - $ref: '#/definitions/RuleConfig'
          - description: >-
              The criteria that you set for specific assertion controls (routing
              controls) that designate how many controls must be enabled as the
              result of a transaction. For example, if you have three assertion
              controls, you might specify atleast 2 for your rule configuration.
              This means that at least two assertion controls must be enabled,
              so that at least two Amazon Web Services Regions are enabled.
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - ControlPanelArn
      - AssertedControls
      - RuleConfig
      - WaitPeriodMs
      - Name
    type: object
  NewGatingRule:
    description: A new gating rule for a control panel.
    properties:
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the control panel.
      GatingControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              The gating controls for the new gating rule. That is, routing
              controls that are evaluated by the rule configuration that you
              specify.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name for the new gating rule.
      RuleConfig:
        allOf:
          - $ref: '#/definitions/RuleConfig'
          - description: >-
              The criteria that you set for specific gating controls (routing
              controls) that designates how many controls must be enabled to
              allow you to change (set or unset) the target controls.
      TargetControls:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: >-
              <p>Routing controls that can only be set or unset if the specified
              RuleConfig evaluates to true for the specified GatingControls. For
              example, say you have three gating controls, one for each of three
              Amazon Web Services Regions. Now you specify AtLeast 2 as your
              RuleConfig. With these settings, you can only change (set or
              unset) the routing controls that you have specified as
              TargetControls if that rule evaluates to true.</p> <p>In other
              words, your ability to change the routing controls that you have
              specified as TargetControls is gated by the rule that you set for
              the routing controls in GatingControls.</p>
      WaitPeriodMs:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              An evaluation period, in milliseconds (ms), during which any
              request against the target routing controls will fail. This helps
              prevent "flapping" of state. The wait period is 5000 ms by
              default, but you can choose a custom value.
    required:
      - TargetControls
      - ControlPanelArn
      - GatingControls
      - RuleConfig
      - WaitPeriodMs
      - Name
    type: object
  ResourceNotFoundException: {}
  RoutingControl:
    description: >-
      A routing control has one of two states: ON and OFF. You can map the
      routing control state to the state of an Amazon Route 53 health check,
      which can be used to control traffic routing.
    properties:
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the control panel that includes
              the routing control.
      Name:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the routing control.
      RoutingControlArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the routing control.
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              The deployment status of a routing control. Status can be one of
              the following: PENDING, DEPLOYED, PENDING_DELETION.
    type: object
  Rule:
    description: A safety rule. A safety rule can be an assertion rule or a gating rule.
    properties:
      ASSERTION:
        allOf:
          - $ref: '#/definitions/AssertionRule'
          - description: >-
              An assertion rule enforces that, when a routing control state is
              changed, the criteria set by the rule configuration is met.
              Otherwise, the change to the routing control is not accepted.
      GATING:
        allOf:
          - $ref: '#/definitions/GatingRule'
          - description: >-
              A gating rule verifies that a set of gating controls evaluates as
              true, based on a rule configuration that you specify. If the
              gating rule evaluates to true, Amazon Route 53 Application
              Recovery Controller allows a set of routing control state changes
              to run and complete against the set of target controls.
    type: object
  RuleConfig:
    description: >-
      The rule configuration for an assertion rule. That is, the criteria that
      you set for specific assertion controls (routing controls) that specify
      how many controls must be enabled after a transaction completes.
    properties:
      Inverted:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: >-
              Logical negation of the rule. If the rule would usually evaluate
              true, it's evaluated as false, and vice versa.
      Threshold:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              The value of N, when you specify an ATLEAST rule type. That is,
              Threshold is the number of controls that must be set when you
              specify an ATLEAST type.
      Type:
        allOf:
          - $ref: '#/definitions/RuleType'
          - description: 'A rule can be one of the following: ATLEAST, AND, or OR.'
    required:
      - Type
      - Inverted
      - Threshold
    type: object
  RuleType:
    description: >-
      <p>An enumerated type that determines how the evaluated rules are
      processed. RuleType can be one of the following:</p> <p>ATLEAST - At least
      N routing controls must be set. You specify N as the Threshold in the rule
      configuration.</p> <p>AND - All routing controls must be set. This is a
      shortcut for "At least N," where N is the total number of controls in the
      rule.</p> <p>OR - Any control must be set. This is a shortcut for "At
      least N," where N is 1.</p>
    enum:
      - ATLEAST
      - AND
      - OR
    type: string
  ServiceQuotaExceededException: {}
  Status:
    description: >-
      <p>The deployment status of a resource. Status can be one of the
      following:</p> <p>PENDING: Amazon Route 53 Application Recovery Controller
      is creating the resource.</p> <p>DEPLOYED: The resource is deployed and
      ready to use.</p> <p>PENDING_DELETION: Amazon Route 53 Application
      Recovery Controller is deleting the resource.</p>
    enum:
      - PENDING
      - DEPLOYED
      - PENDING_DELETION
    type: string
  ThrottlingException: {}
  UpdateControlPanelRequest:
    description: The details of the control panel that you're updating.
    properties:
      ControlPanelArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the control panel.
      ControlPanelName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the control panel.
    required:
      - ControlPanelArn
      - ControlPanelName
    title: UpdateControlPanelRequest
    type: object
  UpdateControlPanelResponse:
    properties:
      ControlPanel:
        allOf:
          - $ref: '#/definitions/ControlPanel'
          - description: The control panel to update.
    type: object
  UpdateRoutingControlRequest:
    description: The details of the routing control that you're updating.
    properties:
      RoutingControlArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the routing control.
      RoutingControlName:
        allOf:
          - $ref: '#/definitions/__stringMin1Max64PatternS'
          - description: The name of the routing control.
    required:
      - RoutingControlName
      - RoutingControlArn
    title: UpdateRoutingControlRequest
    type: object
  UpdateRoutingControlResponse:
    properties:
      RoutingControl:
        allOf:
          - $ref: '#/definitions/RoutingControl'
          - description: The routing control that was updated.
    type: object
  UpdateSafetyRuleRequest:
    properties:
      AssertionRuleUpdate:
        $ref: '#/definitions/AssertionRuleUpdate'
      GatingRuleUpdate:
        $ref: '#/definitions/GatingRuleUpdate'
    title: UpdateSafetyRuleRequest
    type: object
  UpdateSafetyRuleResponse:
    properties:
      AssertionRule:
        $ref: '#/definitions/AssertionRule'
      GatingRule:
        $ref: '#/definitions/GatingRule'
    type: object
  ValidationException: {}
  __boolean:
    type: boolean
  __integer:
    type: integer
  __listOfCluster:
    items:
      $ref: '#/definitions/Cluster'
    type: array
  __listOfClusterEndpoint:
    items:
      $ref: '#/definitions/ClusterEndpoint'
    type: array
  __listOfControlPanel:
    items:
      $ref: '#/definitions/ControlPanel'
    type: array
  __listOfRoutingControl:
    items:
      $ref: '#/definitions/RoutingControl'
    type: array
  __listOfRule:
    items:
      $ref: '#/definitions/Rule'
    type: array
  __listOf__string:
    items:
      $ref: '#/definitions/__string'
    type: array
  __string:
    type: string
  __stringMax64:
    maxLength: 64
    type: string
  __stringMax8096:
    maxLength: 8096
    type: string
  __stringMin1Max128:
    maxLength: 128
    minLength: 1
    type: string
  __stringMin1Max32:
    maxLength: 32
    minLength: 1
    type: string
  __stringMin1Max64PatternS:
    maxLength: 64
    minLength: 1
    pattern: ^\S+$
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/route53-recovery-control-config/'
host: route53-recovery-control-config.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    Recovery Control Configuration API Reference for Amazon Route 53 Application
    Recovery Controller
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Route53 Recovery Control Config
  version: '2020-11-02'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: route53-recovery-control-config
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53-recovery-control-config-2020-11-02.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: route53-recovery-control-config
paths:
  /cluster:
    get:
      description: Returns an array of all the clusters in an account.
      operationId: ListClusters
      parameters:
        - description: The number of objects that you want to return with this call.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The token that identifies which batch of results you want to see.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListClustersResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Create a new cluster. A cluster is a set of redundant Regional endpoints
        against which you can run API calls to update or get the state of one or
        more routing controls. Each cluster has a name, status, Amazon Resource
        Name (ARN), and an array of the five cluster endpoints (one for each
        supported Amazon Web Services Region) that you can use with API calls to
        the Amazon Route 53 Application Recovery Controller cluster data plane.
      operationId: CreateCluster
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: Unique client idempotency token.
                maxLength: 64
                type: string
              ClusterName:
                description: The name of the cluster.
                maxLength: 64
                minLength: 1
                pattern: ^\S+$
                type: string
            required:
              - ClusterName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/cluster/{ClusterArn}':
    delete:
      description: Delete a cluster.
      operationId: DeleteCluster
      parameters:
        - description: The Amazon Resource Name (ARN) of the cluster that you're deleting.
          in: path
          name: ClusterArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: >-
        Display the details about a cluster. The response includes the cluster
        name, endpoints, status, and Amazon Resource Name (ARN).
      operationId: DescribeCluster
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the cluster that you're getting
            details for.
          in: path
          name: ClusterArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /controlpanel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a new control panel. A control panel represents a group of
        routing controls that can be changed together in a single transaction.
        You can use a control panel to centrally view the operational status of
        applications across your organization, and trigger multi-app failovers
        in a single transaction, for example, to fail over an Availability Zone
        or AWS Region.
      operationId: CreateControlPanel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: Unique client idempotency token.
                maxLength: 64
                type: string
              ClusterArn:
                description: >-
                  The Amazon Resource Name (ARN) of the cluster for the control
                  panel.
                type: string
              ControlPanelName:
                description: The name of the control panel.
                maxLength: 64
                minLength: 1
                pattern: ^\S+$
                type: string
            required:
              - ClusterArn
              - ControlPanelName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateControlPanelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    put:
      consumes:
        - application/json
      description: >-
        Updates a control panel. The only update you can make to a control panel
        is to change the name of the control panel.
      operationId: UpdateControlPanel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ControlPanelArn:
                description: The Amazon Resource Name (ARN) of the control panel.
                type: string
              ControlPanelName:
                description: The name of the control panel.
                maxLength: 64
                minLength: 1
                pattern: ^\S+$
                type: string
            required:
              - ControlPanelArn
              - ControlPanelName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateControlPanelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/controlpanel/{ControlPanelArn}':
    delete:
      description: Deletes a control panel.
      operationId: DeleteControlPanel
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the control panel that you're
            deleting.
          in: path
          name: ControlPanelArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteControlPanelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Displays details about a control panel.
      operationId: DescribeControlPanel
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the control panel that you're
            getting details for.
          in: path
          name: ControlPanelArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeControlPanelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/controlpanel/{ControlPanelArn}/routingcontrols':
    get:
      description: >-
        Returns an array of routing controls for a control panel. A routing
        control is an Amazon Route 53 Application Recovery Controller construct
        that has one of two states: ON and OFF. You can map the routing control
        state to the state of an Amazon Route 53 health check, which can be used
        to control routing.
      operationId: ListRoutingControls
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the control panel that you're
            getting routing control details for.
          in: path
          name: ControlPanelArn
          required: true
          type: string
        - description: The number of objects that you want to return with this call.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The token that identifies which batch of results you want to see.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRoutingControlsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/controlpanel/{ControlPanelArn}/safetyrules':
    get:
      description: >-
        List the safety rules (the assertion rules and gating rules) that you've
        defined for the routing controls in a control panel.
      operationId: ListSafetyRules
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the control panel that you're
            getting details for.
          in: path
          name: ControlPanelArn
          required: true
          type: string
        - description: The number of objects that you want to return with this call.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The token that identifies which batch of results you want to see.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSafetyRulesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /controlpanels:
    get:
      description: Returns an array of control panels for a cluster.
      operationId: ListControlPanels
      parameters:
        - description: The Amazon Resource Name (ARN) of a cluster.
          in: query
          name: ClusterArn
          required: false
          type: string
        - description: The number of objects that you want to return with this call.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The token that identifies which batch of results you want to see.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListControlPanelsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /routingcontrol:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a new routing control.</p> <p>A routing control has one of
        two states: ON and OFF. You can map the routing control state to the
        state of an Amazon Route 53 health check, which can be used to control
        traffic routing.</p> <p>To get or update the routing control state, see
        the Recovery Cluster (data plane) API actions for Amazon Route 53
        Application Recovery Controller.</p>
      operationId: CreateRoutingControl
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: Unique client idempotency token.
                maxLength: 64
                type: string
              ClusterArn:
                description: >-
                  The Amazon Resource Name (ARN) of the cluster that includes
                  the routing control.
                type: string
              ControlPanelArn:
                description: >-
                  The Amazon Resource Name (ARN) of the control panel that
                  includes the routing control.
                type: string
              RoutingControlName:
                description: The name of the routing control.
                maxLength: 64
                minLength: 1
                pattern: ^\S+$
                type: string
            required:
              - ClusterArn
              - RoutingControlName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRoutingControlResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    put:
      consumes:
        - application/json
      description: >-
        Updates a routing control. You can only update the name of the routing
        control. To get or update the routing control state, see the Recovery
        Cluster (data plane) API actions for Amazon Route 53 Application
        Recovery Controller.
      operationId: UpdateRoutingControl
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              RoutingControlArn:
                description: The Amazon Resource Name (ARN) of the routing control.
                type: string
              RoutingControlName:
                description: The name of the routing control.
                maxLength: 64
                minLength: 1
                pattern: ^\S+$
                type: string
            required:
              - RoutingControlArn
              - RoutingControlName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRoutingControlResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/routingcontrol/{RoutingControlArn}':
    delete:
      description: Deletes a routing control.
      operationId: DeleteRoutingControl
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the routing control that you're
            deleting.
          in: path
          name: RoutingControlArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRoutingControlResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: >-
        <p>Displays details about a routing control. A routing control has one
        of two states: ON and OFF. You can map the routing control state to the
        state of an Amazon Route 53 health check, which can be used to control
        routing.</p> <p>To get or update the routing control state, see the
        Recovery Cluster (data plane) API actions for Amazon Route 53
        Application Recovery Controller.</p>
      operationId: DescribeRoutingControl
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the routing control that you're
            getting details for.
          in: path
          name: RoutingControlArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRoutingControlResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/routingcontrol/{RoutingControlArn}/associatedRoute53HealthChecks':
    get:
      description: >-
        Returns an array of all Amazon Route 53 health checks associated with a
        specific routing control.
      operationId: ListAssociatedRoute53HealthChecks
      parameters:
        - description: The number of objects that you want to return with this call.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The token that identifies which batch of results you want to see.
          in: query
          name: NextToken
          required: false
          type: string
        - description: >-
            The Amazon Resource Name (ARN) of the routing control that you're
            getting details for.
          in: path
          name: RoutingControlArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociatedRoute53HealthChecksResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /safetyrule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a safety rule in a control panel. Safety rules let you add
        safeguards around enabling and disabling routing controls, to help
        prevent unexpected outcomes.</p> <p>There are two types of safety rules:
        assertion rules and gating rules.</p> <p>Assertion rule: An assertion
        rule enforces that, when a routing control state is changed, the
        criteria set by the rule configuration is met. Otherwise, the change to
        the routing control is not accepted.</p> <p>Gating rule: A gating rule
        verifies that a set of gating controls evaluates as true, based on a
        rule configuration that you specify. If the gating rule evaluates to
        true, Amazon Route 53 Application Recovery Controller allows a set of
        routing control state changes to run and complete against the set of
        target controls.</p>
      operationId: CreateSafetyRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AssertionRule:
                description: A new assertion rule for a control panel.
                properties:
                  AssertedControls:
                    allOf:
                      - $ref: '#/definitions/__listOf__string'
                      - description: >-
                          The routing controls that are part of transactions
                          that are evaluated to determine if a request to change
                          a routing control state is allowed. For example, you
                          might include three routing controls, one for each of
                          three Amazon Web Services Regions.
                  ControlPanelArn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The Amazon Resource Name (ARN) for the control panel.
                  Name:
                    allOf:
                      - $ref: '#/definitions/__stringMin1Max64PatternS'
                      - description: >-
                          The name of the assertion rule. You can use any
                          non-white space character in the name.
                  RuleConfig:
                    allOf:
                      - $ref: '#/definitions/RuleConfig'
                      - description: >-
                          The criteria that you set for specific assertion
                          controls (routing controls) that designate how many
                          controls must be enabled as the result of a
                          transaction. For example, if you have three assertion
                          controls, you might specify atleast 2 for your rule
                          configuration. This means that at least two assertion
                          controls must be enabled, so that at least two Amazon
                          Web Services Regions are enabled.
                  WaitPeriodMs:
                    allOf:
                      - $ref: '#/definitions/__integer'
                      - description: >-
                          An evaluation period, in milliseconds (ms), during
                          which any request against the target routing controls
                          will fail. This helps prevent "flapping" of state. The
                          wait period is 5000 ms by default, but you can choose
                          a custom value.
                type: object
              ClientToken:
                description: Unique client idempotency token.
                maxLength: 64
                type: string
              GatingRule:
                description: A new gating rule for a control panel.
                properties:
                  ControlPanelArn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The Amazon Resource Name (ARN) of the control panel.
                  GatingControls:
                    allOf:
                      - $ref: '#/definitions/__listOf__string'
                      - description: >-
                          The gating controls for the new gating rule. That is,
                          routing controls that are evaluated by the rule
                          configuration that you specify.
                  Name:
                    allOf:
                      - $ref: '#/definitions/__stringMin1Max64PatternS'
                      - description: The name for the new gating rule.
                  RuleConfig:
                    allOf:
                      - $ref: '#/definitions/RuleConfig'
                      - description: >-
                          The criteria that you set for specific gating controls
                          (routing controls) that designates how many controls
                          must be enabled to allow you to change (set or unset)
                          the target controls.
                  TargetControls:
                    allOf:
                      - $ref: '#/definitions/__listOf__string'
                      - description: >-
                          <p>Routing controls that can only be set or unset if
                          the specified RuleConfig evaluates to true for the
                          specified GatingControls. For example, say you have
                          three gating controls, one for each of three Amazon
                          Web Services Regions. Now you specify AtLeast 2 as
                          your RuleConfig. With these settings, you can only
                          change (set or unset) the routing controls that you
                          have specified as TargetControls if that rule
                          evaluates to true.</p> <p>In other words, your ability
                          to change the routing controls that you have specified
                          as TargetControls is gated by the rule that you set
                          for the routing controls in GatingControls.</p>
                  WaitPeriodMs:
                    allOf:
                      - $ref: '#/definitions/__integer'
                      - description: >-
                          An evaluation period, in milliseconds (ms), during
                          which any request against the target routing controls
                          will fail. This helps prevent "flapping" of state. The
                          wait period is 5000 ms by default, but you can choose
                          a custom value.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSafetyRuleResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        Update a safety rule (an assertion rule or gating rule) for the routing
        controls in a control panel. You can only update the name and the
        waiting period for a safety rule. To make other updates, delete the
        safety rule and create a new safety rule.
      operationId: UpdateSafetyRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AssertionRuleUpdate:
                description: >-
                  An update to an assertion rule. You can update the name or the
                  evaluation period (wait period). If you don't specify one of
                  the items to update, the item is unchanged.
                properties:
                  Name:
                    allOf:
                      - $ref: '#/definitions/__stringMin1Max64PatternS'
                      - description: >-
                          The name of the assertion rule. You can use any
                          non-white space character in the name.
                  SafetyRuleArn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The Amazon Resource Name (ARN) of the assertion rule.
                  WaitPeriodMs:
                    allOf:
                      - $ref: '#/definitions/__integer'
                      - description: >-
                          An evaluation period, in milliseconds (ms), during
                          which any request against the target routing controls
                          will fail. This helps prevent "flapping" of state. The
                          wait period is 5000 ms by default, but you can choose
                          a custom value.
                type: object
              GatingRuleUpdate:
                description: >-
                  Update to a gating rule. You can update the name or the
                  evaluation period (wait period). If you don't specify one of
                  the items to update, the item is unchanged.
                properties:
                  Name:
                    allOf:
                      - $ref: '#/definitions/__stringMin1Max64PatternS'
                      - description: The name for the gating rule.
                  SafetyRuleArn:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The Amazon Resource Name (ARN) of the gating rule.
                  WaitPeriodMs:
                    allOf:
                      - $ref: '#/definitions/__integer'
                      - description: >-
                          An evaluation period, in milliseconds (ms), during
                          which any request against the target routing controls
                          will fail. This helps prevent "flapping" of state. The
                          wait period is 5000 ms by default, but you can choose
                          a custom value.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSafetyRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/safetyrule/{SafetyRuleArn}':
    delete:
      description: <p>Deletes a safety rule.</p>/&gt;
      operationId: DeleteSafetyRule
      parameters:
        - description: The request body that you include when you update a safety rule.
          in: path
          name: SafetyRuleArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSafetyRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: >-
        Describes the safety rules (that is, the assertion rules and gating
        rules) for the routing controls in a control panel.
      operationId: DescribeSafetyRule
      parameters:
        - description: The request body that you include when you update a safety rule.
          in: path
          name: SafetyRuleArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSafetyRuleResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

