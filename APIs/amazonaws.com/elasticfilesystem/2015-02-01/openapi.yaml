basePath: /
definitions:
  AccessPointAlreadyExists: {}
  AccessPointArn:
    maxLength: 128
    pattern: >-
      ^arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}$
    type: string
  AccessPointDescription:
    description: Provides a description of an EFS file system access point.
    properties:
      AccessPointArn:
        allOf:
          - $ref: '#/definitions/AccessPointArn'
          - description: >-
              The unique Amazon Resource Name (ARN) associated with the access
              point.
      AccessPointId:
        allOf:
          - $ref: '#/definitions/AccessPointId'
          - description: 'The ID of the access point, assigned by Amazon EFS.'
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              The opaque string specified in the request to ensure idempotent
              creation.
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: The ID of the EFS file system that the access point applies to.
      LifeCycleState:
        allOf:
          - $ref: '#/definitions/LifeCycleState'
          - description: Identifies the lifecycle phase of the access point.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the access point. This is the value of the
              <code>Name</code> tag.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AwsAccountId'
          - description: >-
              Identified the Amazon Web Services account that owns the access
              point resource.
      PosixUser:
        allOf:
          - $ref: '#/definitions/PosixUser'
          - description: >-
              The full POSIX identity, including the user ID, group ID, and
              secondary group IDs on the access point that is used for all file
              operations by NFS clients using the access point.
      RootDirectory:
        allOf:
          - $ref: '#/definitions/RootDirectory'
          - description: >-
              The directory on the Amazon EFS file system that the access point
              exposes as the root directory to NFS clients using the access
              point.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The tags associated with the access point, presented as an array
              of Tag objects.
    type: object
  AccessPointDescriptions:
    items:
      $ref: '#/definitions/AccessPointDescription'
    type: array
  AccessPointId:
    maxLength: 128
    pattern: >-
      ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$
    type: string
  AccessPointLimitExceeded: {}
  AccessPointNotFound: {}
  AvailabilityZoneId:
    type: string
  AvailabilityZoneName:
    maxLength: 64
    minLength: 1
    pattern: .+
    type: string
  AvailabilityZonesMismatch: {}
  AwsAccountId:
    maxLength: 14
    pattern: '^(\d{12})|(\d{4}-\d{4}-\d{4})$'
    type: string
  Backup:
    type: boolean
  BackupPolicy:
    description: >-
      The backup policy for the file system used to create automatic daily
      backups. If status has a value of <code>ENABLED</code>, the file system is
      being automatically backed up. For more information, see <a
      href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic
      backups</a>.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/Status'
          - description: >-
              <p>Describes the status of the file system's backup policy.</p>
              <ul> <li> <p> <b> <code>ENABLED</code> </b> - EFS is automatically
              backing up the file system.</p> </li> <li> <p> <b>
              <code>ENABLING</code> </b> - EFS is turning on automatic backups
              for the file system.</p> </li> <li> <p> <b> <code>DISABLED</code>
              </b> - automatic back ups are turned off for the file system.</p>
              </li> <li> <p> <b> <code>DISABLING</code> </b> - EFS is turning
              off automatic backups for the file system.</p> </li> </ul>
    required:
      - Status
    type: object
  BackupPolicyDescription:
    properties:
      BackupPolicy:
        allOf:
          - $ref: '#/definitions/BackupPolicy'
          - description: >-
              Describes the file system's backup policy, indicating whether
              automatic backups are turned on or off..
    type: object
  BadRequest: {}
  BypassPolicyLockoutSafetyCheck:
    type: boolean
  ClientToken:
    maxLength: 64
    minLength: 1
    pattern: .+
    type: string
  CreateAccessPointRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A string of up to 64 ASCII characters that Amazon EFS uses to
              ensure idempotent creation.
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: >-
              The ID of the EFS file system that the access point provides
              access to.
      PosixUser:
        allOf:
          - $ref: '#/definitions/PosixUser'
          - description: >-
              The operating system user and group applied to all file system
              requests made using the access point.
      RootDirectory:
        allOf:
          - $ref: '#/definitions/RootDirectory'
          - description: >-
              <p>Specifies the directory on the Amazon EFS file system that the
              access point exposes as the root directory of your file system to
              NFS clients using the access point. The clients using the access
              point can only access the root directory and below. If the
              <code>RootDirectory</code> &gt; <code>Path</code> specified does
              not exist, EFS creates it and applies the
              <code>CreationInfo</code> settings when a client connects to an
              access point. When specifying a <code>RootDirectory</code>, you
              need to provide the <code>Path</code>, and the
              <code>CreationInfo</code>.</p> <p>Amazon EFS creates a root
              directory only if you have provided the CreationInfo: OwnUid,
              OwnGID, and permissions for the directory. If you do not provide
              this information, Amazon EFS does not create the root directory.
              If the root directory does not exist, attempts to mount using the
              access point will fail.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              Creates tags associated with the access point. Each tag is a
              key-value pair, each key must be unique. For more information, see
              <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              Amazon Web Services resources</a> in the <i>Amazon Web Services
              General Reference Guide</i>.
    required:
      - ClientToken
      - FileSystemId
    title: CreateAccessPointRequest
    type: object
  CreateFileSystemRequest:
    properties:
      AvailabilityZoneName:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneName'
          - description: >-
              <p>Used to create a file system that uses One Zone storage
              classes. It specifies the Amazon Web Services Availability Zone in
              which to create the file system. Use the format
              <code>us-east-1a</code> to specify the Availability Zone. For more
              information about One Zone storage classes, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using
              EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>
              <note> <p>One Zone storage classes are not available in all
              Availability Zones in Amazon Web Services Regions where Amazon EFS
              is available.</p> </note>
      Backup:
        allOf:
          - $ref: '#/definitions/Backup'
          - description: >-
              <p>Specifies whether automatic backups are enabled on the file
              system that you are creating. Set the value to <code>true</code>
              to enable automatic backups. If you are creating a file system
              that uses One Zone storage classes, automatic backups are enabled
              by default. For more information, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic
              backups</a> in the <i>Amazon EFS User Guide</i>.</p> <p>Default is
              <code>false</code>. However, if you specify an
              <code>AvailabilityZoneName</code>, the default is
              <code>true</code>.</p> <note> <p>Backup is not available in all
              Amazon Web Services Regionswhere Amazon EFS is available.</p>
              </note>
      CreationToken:
        allOf:
          - $ref: '#/definitions/CreationToken'
          - description: >-
              A string of up to 64 ASCII characters. Amazon EFS uses this to
              ensure idempotent creation.
      Encrypted:
        allOf:
          - $ref: '#/definitions/Encrypted'
          - description: >-
              A Boolean value that, if true, creates an encrypted file system.
              When creating an encrypted file system, you have the option of
              specifying <a>CreateFileSystemRequest$KmsKeyId</a> for an existing
              Key Management Service (KMS customer master key (CMK). If you
              don't specify a CMK, then the default CMK for Amazon EFS,
              <code>/aws/elasticfilesystem</code>, is used to protect the
              encrypted file system. 
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyId'
          - description: >-
              <p>The ID of the KMS CMK that you want to use to protect the
              encrypted file system. This parameter is only required if you want
              to use a non-default KMS key. If this parameter is not specified,
              the default CMK for Amazon EFS is used. This ID can be in one of
              the following formats:</p> <ul> <li> <p>Key ID - A unique
              identifier of the key, for example
              <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li>
              <p>ARN - An Amazon Resource Name (ARN) for the key, for example
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>
              </li> <li> <p>Key alias - A previously created display name for a
              key, for example <code>alias/projectKey1</code>.</p> </li> <li>
              <p>Key alias ARN - An ARN for a key alias, for example
              <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>
              </li> </ul> <p>If <code>KmsKeyId</code> is specified, the
              <a>CreateFileSystemRequest$Encrypted</a> parameter must be set to
              true.</p> <important> <p>EFS accepts only symmetric KMS keys. You
              cannot use asymmetric KMS keys with EFS file systems.</p>
              </important>
      PerformanceMode:
        allOf:
          - $ref: '#/definitions/PerformanceMode'
          - description: >-
              <p>The performance mode of the file system. We recommend
              <code>generalPurpose</code> performance mode for most file
              systems. File systems using the <code>maxIO</code> performance
              mode can scale to higher levels of aggregate throughput and
              operations per second with a tradeoff of slightly higher latencies
              for most file operations. The performance mode can't be changed
              after the file system has been created.</p> <note> <p>The
              <code>maxIO</code> mode is not supported on file systems using One
              Zone storage classes.</p> </note>
      ProvisionedThroughputInMibps:
        allOf:
          - $ref: '#/definitions/ProvisionedThroughputInMibps'
          - description: >-
              The throughput, measured in MiB/s, that you want to provision for
              a file system that you're creating. Valid values are 1-1024.
              Required if <code>ThroughputMode</code> is set to
              <code>provisioned</code>. The upper limit for throughput is 1024
              MiB/s. To increase this limit, contact Amazon Web Services
              Support. For more information, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
              EFS quotas that you can increase</a> in the <i>Amazon EFS User
              Guide</i>.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              Use to create one or more tags associated with the file system.
              Each tag is a user-defined key-value pair. Name your file system
              on creation by including a
              <code>"Key":"Name","Value":"{value}"</code> key-value pair. Each
              key must be unique. For more information, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              Amazon Web Services resources</a> in the <i>Amazon Web Services
              General Reference Guide</i>.
      ThroughputMode:
        allOf:
          - $ref: '#/definitions/ThroughputMode'
          - description: >-
              <p>Specifies the throughput mode for the file system, either
              <code>bursting</code> or <code>provisioned</code>. If you set
              <code>ThroughputMode</code> to <code>provisioned</code>, you must
              also set a value for <code>ProvisionedThroughputInMibps</code>.
              After you create the file system, you can decrease your file
              system's throughput in Provisioned Throughput mode or change
              between the throughput modes, as long as it’s been more than 24
              hours since the last decrease or throughput mode change. For more
              information, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying
              throughput with provisioned mode</a> in the <i>Amazon EFS User
              Guide</i>. </p> <p>Default is <code>bursting</code>.</p>
    required:
      - CreationToken
    title: CreateFileSystemRequest
    type: object
  CreateMountTargetRequest:
    description: <p/>
    properties:
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: The ID of the file system for which to create the mount target.
      IpAddress:
        allOf:
          - $ref: '#/definitions/IpAddress'
          - description: >-
              Valid IPv4 address within the address range of the specified
              subnet.
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroups'
          - description: >-
              Up to five VPC security group IDs, of the form
              <code>sg-xxxxxxxx</code>. These must be for the same VPC as subnet
              specified.
      SubnetId:
        allOf:
          - $ref: '#/definitions/SubnetId'
          - description: >-
              The ID of the subnet to add the mount target in. For file systems
              that use One Zone storage classes, use the subnet that is
              associated with the file system's Availability Zone.
    required:
      - FileSystemId
      - SubnetId
    title: CreateMountTargetRequest
    type: object
  CreateTagsRequest:
    description: <p/>
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              An array of <code>Tag</code> objects to add. Each <code>Tag</code>
              object is a key-value pair. 
    required:
      - Tags
    title: CreateTagsRequest
    type: object
  CreationInfo:
    description: >-
      <p>Required if the <code>RootDirectory</code> &gt; <code>Path</code>
      specified does not exist. Specifies the POSIX IDs and permissions to apply
      to the access point's <code>RootDirectory</code> &gt; <code>Path</code>.
      If the access point root directory does not exist, EFS creates it with
      these settings when a client connects to the access point. When specifying
      <code>CreationInfo</code>, you must include values for all properties.
      </p> <p>Amazon EFS creates a root directory only if you have provided the
      CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do
      not provide this information, Amazon EFS does not create the root
      directory. If the root directory does not exist, attempts to mount using
      the access point will fail.</p> <important> <p>If you do not provide
      <code>CreationInfo</code> and the specified <code>RootDirectory</code>
      does not exist, attempts to mount the file system using the access point
      will fail.</p> </important>
    properties:
      OwnerGid:
        allOf:
          - $ref: '#/definitions/OwnerGid'
          - description: >-
              Specifies the POSIX group ID to apply to the
              <code>RootDirectory</code>. Accepts values from 0 to 2^32
              (4294967295).
      OwnerUid:
        allOf:
          - $ref: '#/definitions/OwnerUid'
          - description: >-
              Specifies the POSIX user ID to apply to the
              <code>RootDirectory</code>. Accepts values from 0 to 2^32
              (4294967295).
      Permissions:
        allOf:
          - $ref: '#/definitions/Permissions'
          - description: >-
              Specifies the POSIX permissions to apply to the
              <code>RootDirectory</code>, in the format of an octal number
              representing the file's mode bits.
    required:
      - OwnerUid
      - OwnerGid
      - Permissions
    type: object
  CreationToken:
    maxLength: 64
    minLength: 1
    pattern: .+
    type: string
  DeleteAccessPointRequest:
    properties: {}
    title: DeleteAccessPointRequest
    type: object
  DeleteFileSystemPolicyRequest:
    properties: {}
    title: DeleteFileSystemPolicyRequest
    type: object
  DeleteFileSystemRequest:
    description: <p/>
    properties: {}
    title: DeleteFileSystemRequest
    type: object
  DeleteMountTargetRequest:
    description: <p/>
    properties: {}
    title: DeleteMountTargetRequest
    type: object
  DeleteTagsRequest:
    description: <p/>
    properties:
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeys'
          - description: A list of tag keys to delete.
    required:
      - TagKeys
    title: DeleteTagsRequest
    type: object
  DependencyTimeout: {}
  DescribeAccessPointsRequest:
    properties: {}
    title: DescribeAccessPointsRequest
    type: object
  DescribeAccessPointsResponse:
    properties:
      AccessPoints:
        allOf:
          - $ref: '#/definitions/AccessPointDescriptions'
          - description: An array of access point descriptions.
      NextToken:
        allOf:
          - $ref: '#/definitions/Token'
          - description: >-
              Present if there are more access points than returned in the
              response. You can use the NextMarker in the subsequent request to
              fetch the additional descriptions.
    type: object
  DescribeAccountPreferencesRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              (Optional) When retrieving account preferences, you can optionally
              specify the <code>MaxItems</code> parameter to limit the number of
              objects returned in a response. The default value is 100. 
      NextToken:
        allOf:
          - $ref: '#/definitions/Token'
          - description: >-
              (Optional) You can use <code>NextToken</code> in a subsequent
              request to fetch the next page of Amazon Web Services account
              preferences if the response payload was paginated.
    title: DescribeAccountPreferencesRequest
    type: object
  DescribeAccountPreferencesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/Token'
          - description: >-
              Present if there are more records than returned in the response.
              You can use the <code>NextToken</code> in the subsequent request
              to fetch the additional descriptions.
      ResourceIdPreference:
        allOf:
          - $ref: '#/definitions/ResourceIdPreference'
          - description: >-
              Describes the resource ID preference setting for the Amazon Web
              Services account associated with the user making the request, in
              the current Amazon Web Services Region.
    type: object
  DescribeBackupPolicyRequest:
    properties: {}
    title: DescribeBackupPolicyRequest
    type: object
  DescribeFileSystemPolicyRequest:
    properties: {}
    title: DescribeFileSystemPolicyRequest
    type: object
  DescribeFileSystemsRequest:
    description: <p/>
    properties: {}
    title: DescribeFileSystemsRequest
    type: object
  DescribeFileSystemsResponse:
    example:
      FileSystems:
        - CreationTime: '1481841524.0'
          CreationToken: tokenstring
          FileSystemId: fs-01234567
          LifeCycleState: available
          Name: MyFileSystem
          NumberOfMountTargets: 1
          OwnerId: 012345678912
          PerformanceMode: generalPurpose
          SizeInBytes:
            Value: 6144
          Tags:
            - Key: Name
              Value: MyFileSystem
    properties:
      FileSystems:
        allOf:
          - $ref: '#/definitions/FileSystemDescriptions'
          - description: An array of file system descriptions.
      Marker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: Present if provided by caller in the request (String).
      NextMarker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: >-
              Present if there are more file systems than returned in the
              response (String). You can use the <code>NextMarker</code> in the
              subsequent request to fetch the descriptions.
    type: object
  DescribeLifecycleConfigurationRequest:
    properties: {}
    title: DescribeLifecycleConfigurationRequest
    type: object
  DescribeMountTargetSecurityGroupsRequest:
    description: <p/>
    properties: {}
    title: DescribeMountTargetSecurityGroupsRequest
    type: object
  DescribeMountTargetSecurityGroupsResponse:
    example:
      SecurityGroups:
        - sg-4567abcd
    properties:
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroups'
          - description: An array of security groups.
    required:
      - SecurityGroups
    type: object
  DescribeMountTargetsRequest:
    description: <p/>
    properties: {}
    title: DescribeMountTargetsRequest
    type: object
  DescribeMountTargetsResponse:
    description: <p/>
    example:
      MountTargets:
        - FileSystemId: fs-01234567
          IpAddress: 192.0.0.2
          LifeCycleState: available
          MountTargetId: fsmt-12340abc
          NetworkInterfaceId: eni-cedf6789
          OwnerId: 012345678912
          SubnetId: subnet-1234abcd
    properties:
      Marker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: >-
              If the request included the <code>Marker</code>, the response
              returns that value in this field.
      MountTargets:
        allOf:
          - $ref: '#/definitions/MountTargetDescriptions'
          - description: >-
              Returns the file system's mount targets as an array of
              <code>MountTargetDescription</code> objects.
      NextMarker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: >-
              If a value is present, there are more mount targets to return. In
              a subsequent request, you can provide <code>Marker</code> in your
              request with this value to retrieve the next set of mount targets.
    type: object
  DescribeTagsRequest:
    description: <p/>
    properties: {}
    title: DescribeTagsRequest
    type: object
  DescribeTagsResponse:
    description: <p/>
    example:
      Tags:
        - Key: Name
          Value: MyFileSystem
    properties:
      Marker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: >-
              If the request included a <code>Marker</code>, the response
              returns that value in this field.
      NextMarker:
        allOf:
          - $ref: '#/definitions/Marker'
          - description: >-
              If a value is present, there are more tags to return. In a
              subsequent request, you can provide the value of
              <code>NextMarker</code> as the value of the <code>Marker</code>
              parameter in your next request to retrieve the next set of tags.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              Returns tags associated with the file system as an array of
              <code>Tag</code> objects. 
    required:
      - Tags
    type: object
  Encrypted:
    type: boolean
  FileSystemAlreadyExists: {}
  FileSystemArn:
    type: string
  FileSystemDescription:
    description: A description of the file system.
    example:
      CreationTime: '1481841524.0'
      CreationToken: tokenstring
      Encrypted: true
      FileSystemId: fs-01234567
      LifeCycleState: creating
      NumberOfMountTargets: 0
      OwnerId: 012345678912
      PerformanceMode: generalPurpose
      SizeInBytes:
        Value: 0
      Tags:
        - Key: Name
          Value: MyFileSystem
    properties:
      AvailabilityZoneId:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneId'
          - description: >-
              The unique and consistent identifier of the Availability Zone in
              which the file system's One Zone storage classes exist. For
              example, <code>use1-az1</code> is an Availability Zone ID for the
              us-east-1 Amazon Web Services Region, and it has the same location
              in every Amazon Web Services account.
      AvailabilityZoneName:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneName'
          - description: >-
              Describes the Amazon Web Services Availability Zone in which the
              file system is located, and is valid only for file systems using
              One Zone storage classes. For more information, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using
              EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time that the file system was created, in seconds (since
              1970-01-01T00:00:00Z).
      CreationToken:
        allOf:
          - $ref: '#/definitions/CreationToken'
          - description: The opaque string specified in the request.
      Encrypted:
        allOf:
          - $ref: '#/definitions/Encrypted'
          - description: >-
              A Boolean value that, if true, indicates that the file system is
              encrypted.
      FileSystemArn:
        allOf:
          - $ref: '#/definitions/FileSystemArn'
          - description: >-
              The Amazon Resource Name (ARN) for the EFS file system, in the
              format
              <code>arn:aws:elasticfilesystem:<i>region</i>:<i>account-id</i>:file-system/<i>file-system-id</i>
              </code>. Example with sample data:
              <code>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</code> 
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: 'The ID of the file system, assigned by Amazon EFS.'
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyId'
          - description: >-
              The ID of an Key Management Service customer master key (CMK) that
              was used to protect the encrypted file system.
      LifeCycleState:
        allOf:
          - $ref: '#/definitions/LifeCycleState'
          - description: The lifecycle phase of the file system.
      Name:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              You can add tags to a file system, including a <code>Name</code>
              tag. For more information, see <a>CreateFileSystem</a>. If the
              file system has a <code>Name</code> tag, Amazon EFS returns the
              value in this field. 
      NumberOfMountTargets:
        allOf:
          - $ref: '#/definitions/MountTargetCount'
          - description: >-
              The current number of mount targets that the file system has. For
              more information, see <a>CreateMountTarget</a>.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AwsAccountId'
          - description: >-
              The Amazon Web Services account that created the file system. If
              the file system was created by an IAM user, the parent account to
              which the user belongs is the owner.
      PerformanceMode:
        allOf:
          - $ref: '#/definitions/PerformanceMode'
          - description: The performance mode of the file system.
      ProvisionedThroughputInMibps:
        allOf:
          - $ref: '#/definitions/ProvisionedThroughputInMibps'
          - description: >-
              The amount of provisioned throughput, measured in MiB/s, for the
              file system. Valid for file systems using
              <code>ThroughputMode</code> set to <code>provisioned</code>.
      SizeInBytes:
        allOf:
          - $ref: '#/definitions/FileSystemSize'
          - description: >-
              The latest known metered size (in bytes) of data stored in the
              file system, in its <code>Value</code> field, and the time at
              which that size was determined in its <code>Timestamp</code>
              field. The <code>Timestamp</code> value is the integer number of
              seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code>
              value doesn't represent the size of a consistent snapshot of the
              file system, but it is eventually consistent when there are no
              writes to the file system. That is, <code>SizeInBytes</code>
              represents actual size only if the file system is not modified for
              a period longer than a couple of hours. Otherwise, the value is
              not the exact size that the file system was at any point in time. 
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The tags associated with the file system, presented as an array of
              <code>Tag</code> objects.
      ThroughputMode:
        allOf:
          - $ref: '#/definitions/ThroughputMode'
          - description: >-
              Displays the file system's throughput mode. For more information,
              see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes">Throughput
              modes</a> in the <i>Amazon EFS User Guide</i>. 
    required:
      - OwnerId
      - CreationToken
      - FileSystemId
      - CreationTime
      - LifeCycleState
      - NumberOfMountTargets
      - SizeInBytes
      - PerformanceMode
      - Tags
    type: object
  FileSystemDescriptions:
    items:
      $ref: '#/definitions/FileSystemDescription'
    type: array
  FileSystemId:
    maxLength: 128
    pattern: >-
      ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
    type: string
  FileSystemInUse: {}
  FileSystemLimitExceeded: {}
  FileSystemNotFound: {}
  FileSystemNullableSizeValue:
    minimum: 0
    type: integer
  FileSystemPolicyDescription:
    properties:
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: >-
              Specifies the EFS file system to which the
              <code>FileSystemPolicy</code> applies.
      Policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: >-
              The JSON formatted <code>FileSystemPolicy</code> for the EFS file
              system.
    type: object
  FileSystemSize:
    description: >-
      The latest known metered size (in bytes) of data stored in the file
      system, in its <code>Value</code> field, and the time at which that size
      was determined in its <code>Timestamp</code> field. The value doesn't
      represent the size of a consistent snapshot of the file system, but it is
      eventually consistent when there are no writes to the file system. That
      is, the value represents the actual size only if the file system is not
      modified for a period longer than a couple of hours. Otherwise, the value
      is not necessarily the exact size the file system was at any instant in
      time.
    properties:
      Timestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time at which the size of data, returned in the
              <code>Value</code> field, was determined. The value is the integer
              number of seconds since 1970-01-01T00:00:00Z.
      Value:
        allOf:
          - $ref: '#/definitions/FileSystemSizeValue'
          - description: >-
              The latest known metered size (in bytes) of data stored in the
              file system.
      ValueInIA:
        allOf:
          - $ref: '#/definitions/FileSystemNullableSizeValue'
          - description: >-
              The latest known metered size (in bytes) of data stored in the
              Infrequent Access storage class.
      ValueInStandard:
        allOf:
          - $ref: '#/definitions/FileSystemNullableSizeValue'
          - description: >-
              The latest known metered size (in bytes) of data stored in the
              Standard storage class.
    required:
      - Value
    type: object
  FileSystemSizeValue:
    minimum: 0
    type: integer
  Gid:
    maximum: 4294967295
    minimum: 0
    type: integer
  IncorrectFileSystemLifeCycleState: {}
  IncorrectMountTargetState: {}
  InsufficientThroughputCapacity: {}
  InternalServerError: {}
  InvalidPolicyException: {}
  IpAddress:
    maxLength: 15
    minLength: 7
    pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'
    type: string
  IpAddressInUse: {}
  KmsKeyId:
    maxLength: 2048
    pattern: >-
      ^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$
    type: string
  LifeCycleState:
    enum:
      - creating
      - available
      - updating
      - deleting
      - deleted
      - error
    type: string
  LifecycleConfigurationDescription:
    example:
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS
    properties:
      LifecyclePolicies:
        allOf:
          - $ref: '#/definitions/LifecyclePolicies'
          - description: >-
              An array of lifecycle management policies. EFS supports a maximum
              of one policy per file system.
    type: object
  LifecyclePolicies:
    items:
      $ref: '#/definitions/LifecyclePolicy'
    maxItems: 2
    type: array
  LifecyclePolicy:
    description: >-
      Describes a policy used by EFS lifecycle management to transition files to
      the Infrequent Access (IA) storage class.
    properties:
      TransitionToIA:
        allOf:
          - $ref: '#/definitions/TransitionToIARules'
          - description: ' Describes the period of time that a file is not accessed, after which it transitions to the IA storage class. Metadata operations such as listing the contents of a directory don''t count as file access events.'
      TransitionToPrimaryStorageClass:
        allOf:
          - $ref: '#/definitions/TransitionToPrimaryStorageClassRules'
          - description: >-
              Describes the policy used to transition a file from infequent
              access storage to primary storage.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/Token'
          - description: ' <code>NextToken</code> is present if the response payload is paginated. You can use <code>NextToken</code> in a subsequent request to fetch the next page of access point descriptions.'
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: An array of the tags for the specified EFS resource.
    type: object
  Marker:
    maxLength: 128
    minLength: 1
    pattern: .+
    type: string
  MaxItems:
    minimum: 1
    type: integer
  MaxResults:
    description: Max results used for pagination.
    minimum: 1
    type: integer
  ModifyMountTargetSecurityGroupsRequest:
    description: <p/>
    properties:
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroups'
          - description: An array of up to five VPC security group IDs.
    title: ModifyMountTargetSecurityGroupsRequest
    type: object
  MountTargetConflict: {}
  MountTargetCount:
    minimum: 0
    type: integer
  MountTargetDescription:
    description: Provides a description of a mount target.
    example:
      FileSystemId: fs-01234567
      IpAddress: 192.0.0.2
      LifeCycleState: creating
      MountTargetId: fsmt-12340abc
      NetworkInterfaceId: eni-cedf6789
      OwnerId: 012345678912
      SubnetId: subnet-1234abcd
    properties:
      AvailabilityZoneId:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneId'
          - description: >-
              The unique and consistent identifier of the Availability Zone that
              the mount target resides in. For example, <code>use1-az1</code> is
              an AZ ID for the us-east-1 Region and it has the same location in
              every Amazon Web Services account.
      AvailabilityZoneName:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneName'
          - description: >-
              The name of the Availability Zone in which the mount target is
              located. Availability Zones are independently mapped to names for
              each Amazon Web Services account. For example, the Availability
              Zone <code>us-east-1a</code> for your Amazon Web Services account
              might not be the same location as <code>us-east-1a</code> for
              another Amazon Web Services account.
      FileSystemId:
        allOf:
          - $ref: '#/definitions/FileSystemId'
          - description: The ID of the file system for which the mount target is intended.
      IpAddress:
        allOf:
          - $ref: '#/definitions/IpAddress'
          - description: >-
              Address at which the file system can be mounted by using the mount
              target.
      LifeCycleState:
        allOf:
          - $ref: '#/definitions/LifeCycleState'
          - description: Lifecycle state of the mount target.
      MountTargetId:
        allOf:
          - $ref: '#/definitions/MountTargetId'
          - description: System-assigned mount target ID.
      NetworkInterfaceId:
        allOf:
          - $ref: '#/definitions/NetworkInterfaceId'
          - description: >-
              The ID of the network interface that Amazon EFS created when it
              created the mount target.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AwsAccountId'
          - description: Amazon Web Services account ID that owns the resource.
      SubnetId:
        allOf:
          - $ref: '#/definitions/SubnetId'
          - description: The ID of the mount target's subnet.
      VpcId:
        allOf:
          - $ref: '#/definitions/VpcId'
          - description: >-
              The virtual private cloud (VPC) ID that the mount target is
              configured in.
    required:
      - MountTargetId
      - FileSystemId
      - SubnetId
      - LifeCycleState
    type: object
  MountTargetDescriptions:
    items:
      $ref: '#/definitions/MountTargetDescription'
    type: array
  MountTargetId:
    maxLength: 45
    minLength: 13
    pattern: '^fsmt-[0-9a-f]{8,40}$'
    type: string
  MountTargetNotFound: {}
  Name:
    type: string
  NetworkInterfaceId:
    type: string
  NetworkInterfaceLimitExceeded: {}
  NoFreeAddressesInSubnet: {}
  OwnerGid:
    maximum: 4294967295
    minimum: 0
    type: integer
  OwnerUid:
    maximum: 4294967295
    minimum: 0
    type: integer
  Path:
    maxLength: 100
    minLength: 1
    pattern: '^(\/|(\/(?!\.)+[^$#<>;`|&?{}^*/\n]+){1,4})$'
    type: string
  PerformanceMode:
    enum:
      - generalPurpose
      - maxIO
    type: string
  Permissions:
    maxLength: 4
    minLength: 3
    pattern: '^[0-7]{3,4}$'
    type: string
  Policy:
    maxLength: 20000
    minLength: 1
    pattern: '[\s\S]+'
    type: string
  PolicyNotFound: {}
  PosixUser:
    description: >-
      The full POSIX identity, including the user ID, group ID, and any
      secondary group IDs, on the access point that is used for all file system
      operations performed by NFS clients using the access point.
    properties:
      Gid:
        allOf:
          - $ref: '#/definitions/Gid'
          - description: >-
              The POSIX group ID used for all file system operations using this
              access point.
      SecondaryGids:
        allOf:
          - $ref: '#/definitions/SecondaryGids'
          - description: >-
              Secondary POSIX group IDs used for all file system operations
              using this access point.
      Uid:
        allOf:
          - $ref: '#/definitions/Uid'
          - description: >-
              The POSIX user ID used for all file system operations using this
              access point.
    required:
      - Uid
      - Gid
    type: object
  ProvisionedThroughputInMibps:
    format: double
    minimum: 1
    type: number
  PutAccountPreferencesRequest:
    properties:
      ResourceIdType:
        allOf:
          - $ref: '#/definitions/ResourceIdType'
          - description: >-
              Specifies the EFS resource ID preference to set for the user's
              Amazon Web Services account, in the current Amazon Web Services
              Region, either <code>LONG_ID</code> (17 characters), or
              <code>SHORT_ID</code> (8 characters).
    required:
      - ResourceIdType
    title: PutAccountPreferencesRequest
    type: object
  PutAccountPreferencesResponse:
    properties:
      ResourceIdPreference:
        $ref: '#/definitions/ResourceIdPreference'
    type: object
  PutBackupPolicyRequest:
    properties:
      BackupPolicy:
        allOf:
          - $ref: '#/definitions/BackupPolicy'
          - description: >-
              The backup policy included in the <code>PutBackupPolicy</code>
              request.
    required:
      - BackupPolicy
    title: PutBackupPolicyRequest
    type: object
  PutFileSystemPolicyRequest:
    properties:
      BypassPolicyLockoutSafetyCheck:
        allOf:
          - $ref: '#/definitions/BypassPolicyLockoutSafetyCheck'
          - description: >-
              (Optional) A flag to indicate whether to bypass the
              <code>FileSystemPolicy</code> lockout safety check. The policy
              lockout safety check determines whether the policy in the request
              will prevent the principal making the request will be locked out
              from making future <code>PutFileSystemPolicy</code> requests on
              the file system. Set <code>BypassPolicyLockoutSafetyCheck</code>
              to <code>True</code> only when you intend to prevent the principal
              that is making the request from making a subsequent
              <code>PutFileSystemPolicy</code> request on the file system. The
              default value is False. 
      Policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: >-
              The <code>FileSystemPolicy</code> that you're creating. Accepts a
              JSON formatted policy definition. EFS file system policies have a
              20,000 character limit. To find out more about the elements that
              make up a file system policy, see <a
              href="https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies">EFS
              Resource-based Policies</a>. 
    required:
      - Policy
    title: PutFileSystemPolicyRequest
    type: object
  PutLifecycleConfigurationRequest:
    properties:
      LifecyclePolicies:
        allOf:
          - $ref: '#/definitions/LifecyclePolicies'
          - description: >-
              An array of <code>LifecyclePolicy</code> objects that define the
              file system's <code>LifecycleConfiguration</code> object. A
              <code>LifecycleConfiguration</code> object tells lifecycle
              management when to transition files from the Standard storage
              class to the Infrequent Access storage class.
    required:
      - LifecyclePolicies
    title: PutLifecycleConfigurationRequest
    type: object
  Resource:
    description: 'An EFS resource, for example a file system or a mount target.'
    enum:
      - FILE_SYSTEM
      - MOUNT_TARGET
    type: string
  ResourceId:
    maxLength: 128
    pattern: >-
      ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$
    type: string
  ResourceIdPreference:
    description: >-
      Describes the resource type and its ID preference for the user's Amazon
      Web Services account, in the current Amazon Web Services Region.
    properties:
      ResourceIdType:
        allOf:
          - $ref: '#/definitions/ResourceIdType'
          - description: >-
              Identifies the EFS resource ID preference, either
              <code>LONG_ID</code> (17 characters) or <code>SHORT_ID</code> (8
              characters).
      Resources:
        allOf:
          - $ref: '#/definitions/Resources'
          - description: >-
              Identifies the Amazon EFS resources to which the ID preference
              setting applies, <code>FILE_SYSTEM</code> and
              <code>MOUNT_TARGET</code>.
    type: object
  ResourceIdType:
    description: >-
      A preference indicating a choice to use 63bit/32bit IDs for all applicable
      resources.
    enum:
      - LONG_ID
      - SHORT_ID
    type: string
  Resources:
    description: EFS resources to which a preference applies to.
    items:
      $ref: '#/definitions/Resource'
    type: array
  RootDirectory:
    description: >-
      Specifies the directory on the Amazon EFS file system that the access
      point provides access to. The access point exposes the specified file
      system path as the root directory of your file system to applications
      using the access point. NFS clients using the access point can only access
      data in the access point's <code>RootDirectory</code> and it's
      subdirectories.
    properties:
      CreationInfo:
        allOf:
          - $ref: '#/definitions/CreationInfo'
          - description: >-
              <p>(Optional) Specifies the POSIX IDs and permissions to apply to
              the access point's <code>RootDirectory</code>. If the
              <code>RootDirectory</code> &gt; <code>Path</code> specified does
              not exist, EFS creates the root directory using the
              <code>CreationInfo</code> settings when a client connects to an
              access point. When specifying the <code>CreationInfo</code>, you
              must provide values for all properties. </p> <important> <p>If you
              do not provide <code>CreationInfo</code> and the specified
              <code>RootDirectory</code> &gt; <code>Path</code> does not exist,
              attempts to mount the file system using the access point will
              fail.</p> </important>
      Path:
        allOf:
          - $ref: '#/definitions/Path'
          - description: >-
              Specifies the path on the EFS file system to expose as the root
              directory to NFS clients using the access point to access the EFS
              file system. A path can have up to four subdirectories. If the
              specified path does not exist, you are required to provide the
              <code>CreationInfo</code>.
    type: object
  SecondaryGids:
    items:
      $ref: '#/definitions/Gid'
    maxItems: 16
    minItems: 0
    type: array
  SecurityGroup:
    maxLength: 43
    minLength: 11
    pattern: '^sg-[0-9a-f]{8,40}'
    type: string
  SecurityGroupLimitExceeded: {}
  SecurityGroupNotFound: {}
  SecurityGroups:
    items:
      $ref: '#/definitions/SecurityGroup'
    maxItems: 100
    type: array
  Status:
    enum:
      - ENABLED
      - ENABLING
      - DISABLED
      - DISABLING
    type: string
  SubnetId:
    maxLength: 47
    minLength: 15
    pattern: '^subnet-[0-9a-f]{8,40}$'
    type: string
  SubnetNotFound: {}
  Tag:
    description: >-
      A tag is a key-value pair. Allowed characters are letters, white space,
      and numbers that can be represented in UTF-8, and the following
      characters:<code> + - = . _ : /</code>.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: 'The tag key (String). The key can''t start with <code>aws:</code>.'
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The value of the tag key.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?![aA]{1}[wW]{1}[sS]{1}:)([\p{L}\p{Z}\p{N}_.:/=+\-@]+)$'
    type: string
  TagKeys:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              An array of <code>Tag</code> objects to add. Each <code>Tag</code>
              object is a key-value pair.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagValue:
    maxLength: 256
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Tags:
    items:
      $ref: '#/definitions/Tag'
    type: array
  ThroughputLimitExceeded: {}
  ThroughputMode:
    enum:
      - bursting
      - provisioned
    type: string
  Timestamp:
    format: date-time
    type: string
  Token:
    description: Token used for pagination.
    maxLength: 128
    minLength: 1
    pattern: .+
    type: string
  TooManyRequests: {}
  TransitionToIARules:
    enum:
      - AFTER_7_DAYS
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_90_DAYS
    type: string
  TransitionToPrimaryStorageClassRules:
    enum:
      - AFTER_1_ACCESS
    type: string
  Uid:
    maximum: 4294967295
    minimum: 0
    type: integer
  UnsupportedAvailabilityZone: {}
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UpdateFileSystemRequest:
    properties:
      ProvisionedThroughputInMibps:
        allOf:
          - $ref: '#/definitions/ProvisionedThroughputInMibps'
          - description: >-
              (Optional) Sets the amount of provisioned throughput, in MiB/s,
              for the file system. Valid values are 1-1024. If you are changing
              the throughput mode to provisioned, you must also provide the
              amount of provisioned throughput. Required if
              <code>ThroughputMode</code> is changed to <code>provisioned</code>
              on update.
      ThroughputMode:
        allOf:
          - $ref: '#/definitions/ThroughputMode'
          - description: >-
              (Optional) Updates the file system's throughput mode. If you're
              not updating your throughput mode, you don't need to provide this
              value in your request. If you are changing the
              <code>ThroughputMode</code> to <code>provisioned</code>, you must
              also set a value for <code>ProvisionedThroughputInMibps</code>.
    title: UpdateFileSystemRequest
    type: object
  ValidationException: {}
  VpcId:
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/elasticfilesystem/'
host: elasticfilesystem.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File
    System (Amazon EFS) provides simple, scalable file storage for use with
    Amazon EC2 instances in the Amazon Web Services Cloud. With Amazon EFS,
    storage capacity is elastic, growing and shrinking automatically as you add
    and remove files, so your applications have the storage they need, when they
    need it. For more information, see the <a
    href="https://docs.aws.amazon.com/efs/latest/ug/api-reference.html">Amazon
    Elastic File System API Reference</a> and the <a
    href="https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html">Amazon
    Elastic File System User Guide</a>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Elastic File System
  version: '2015-02-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticfilesystem-2015-02-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: elasticfilesystem
paths:
  /2015-02-01/access-points:
    get:
      description: >-
        <p>Returns the description of a specific Amazon EFS access point if the
        <code>AccessPointId</code> is provided. If you provide an EFS
        <code>FileSystemId</code>, it returns descriptions of all access points
        for that file system. You can provide either an
        <code>AccessPointId</code> or a <code>FileSystemId</code> in the
        request, but not both. </p> <p>This operation requires permissions for
        the <code>elasticfilesystem:DescribeAccessPoints</code> action.</p>
      operationId: DescribeAccessPoints
      parameters:
        - description: >-
            (Optional) When retrieving all access points for a file system, you
            can optionally specify the <code>MaxItems</code> parameter to limit
            the number of objects returned in a response. The default value is
            100. 
          in: query
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: ' <code>NextToken</code> is present if the response is paginated. You can use <code>NextMarker</code> in the subsequent request to fetch the next page of access point descriptions.'
          in: query
          maxLength: 128
          minLength: 1
          name: NextToken
          pattern: .+
          required: false
          type: string
        - description: >-
            (Optional) Specifies an EFS access point to describe in the
            response; mutually exclusive with <code>FileSystemId</code>.
          in: query
          maxLength: 128
          name: AccessPointId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$
          required: false
          type: string
        - description: >-
            (Optional) If you provide a <code>FileSystemId</code>, EFS returns
            all access points for that file system; mutually exclusive with
            <code>AccessPointId</code>.
          in: query
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccessPointsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates an EFS access point. An access point is an
        application-specific view into an EFS file system that applies an
        operating system user and group, and a file system path, to any file
        system request made through the access point. The operating system user
        and group override any identity information provided by the NFS client.
        The file system path is exposed as the access point's root directory.
        Applications using the access point can only access data in its own
        directory and below. To learn more, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Mounting
        a file system using EFS access points</a>.</p> <p>This operation
        requires permissions for the
        <code>elasticfilesystem:CreateAccessPoint</code> action.</p>
      operationId: CreateAccessPoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: >-
                  A string of up to 64 ASCII characters that Amazon EFS uses to
                  ensure idempotent creation.
                maxLength: 64
                minLength: 1
                pattern: .+
                type: string
              FileSystemId:
                description: >-
                  The ID of the EFS file system that the access point provides
                  access to.
                maxLength: 128
                pattern: >-
                  ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
                type: string
              PosixUser:
                description: >-
                  The full POSIX identity, including the user ID, group ID, and
                  any secondary group IDs, on the access point that is used for
                  all file system operations performed by NFS clients using the
                  access point.
                properties:
                  Gid:
                    allOf:
                      - $ref: '#/definitions/Gid'
                      - description: >-
                          The POSIX group ID used for all file system operations
                          using this access point.
                  SecondaryGids:
                    allOf:
                      - $ref: '#/definitions/SecondaryGids'
                      - description: >-
                          Secondary POSIX group IDs used for all file system
                          operations using this access point.
                  Uid:
                    allOf:
                      - $ref: '#/definitions/Uid'
                      - description: >-
                          The POSIX user ID used for all file system operations
                          using this access point.
                type: object
              RootDirectory:
                description: >-
                  Specifies the directory on the Amazon EFS file system that the
                  access point provides access to. The access point exposes the
                  specified file system path as the root directory of your file
                  system to applications using the access point. NFS clients
                  using the access point can only access data in the access
                  point's <code>RootDirectory</code> and it's subdirectories.
                properties:
                  CreationInfo:
                    allOf:
                      - $ref: '#/definitions/CreationInfo'
                      - description: >-
                          <p>(Optional) Specifies the POSIX IDs and permissions
                          to apply to the access point's
                          <code>RootDirectory</code>. If the
                          <code>RootDirectory</code> &gt; <code>Path</code>
                          specified does not exist, EFS creates the root
                          directory using the <code>CreationInfo</code> settings
                          when a client connects to an access point. When
                          specifying the <code>CreationInfo</code>, you must
                          provide values for all properties. </p> <important>
                          <p>If you do not provide <code>CreationInfo</code> and
                          the specified <code>RootDirectory</code> &gt;
                          <code>Path</code> does not exist, attempts to mount
                          the file system using the access point will fail.</p>
                          </important>
                  Path:
                    allOf:
                      - $ref: '#/definitions/Path'
                      - description: >-
                          Specifies the path on the EFS file system to expose as
                          the root directory to NFS clients using the access
                          point to access the EFS file system. A path can have
                          up to four subdirectories. If the specified path does
                          not exist, you are required to provide the
                          <code>CreationInfo</code>.
                type: object
              Tags:
                description: >-
                  Creates tags associated with the access point. Each tag is a
                  key-value pair, each key must be unique. For more information,
                  see <a
                  href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
                  Amazon Web Services resources</a> in the <i>Amazon Web
                  Services General Reference Guide</i>.
                items:
                  $ref: '#/definitions/Tag'
                type: array
            required:
              - ClientToken
              - FileSystemId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccessPointDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: AccessPointAlreadyExists
          schema:
            $ref: '#/definitions/AccessPointAlreadyExists'
        '482':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '484':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '485':
          description: AccessPointLimitExceeded
          schema:
            $ref: '#/definitions/AccessPointLimitExceeded'
  '/2015-02-01/access-points/{AccessPointId}':
    delete:
      description: >-
        <p>Deletes the specified access point. After deletion is complete, new
        clients can no longer connect to the access points. Clients connected to
        the access point at the time of deletion will continue to function until
        they terminate their connection.</p> <p>This operation requires
        permissions for the <code>elasticfilesystem:DeleteAccessPoint</code>
        action.</p>
      operationId: DeleteAccessPoint
      parameters:
        - description: The ID of the access point that you want to delete.
          in: path
          maxLength: 128
          name: AccessPointId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /2015-02-01/account-preferences:
    get:
      consumes:
        - application/json
      description: >-
        Returns the account preferences settings for the Amazon Web Services
        account associated with the user making the request, in the current
        Amazon Web Services Region. For more information, see <a
        href="efs/latest/ug/manage-efs-resource-ids.html">Managing Amazon EFS
        resource IDs</a>.
      operationId: DescribeAccountPreferences
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              MaxResults:
                description: Max results used for pagination.
                minimum: 1
                type: integer
              NextToken:
                description: Token used for pagination.
                maxLength: 128
                minLength: 1
                pattern: .+
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountPreferencesResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Use this operation to set the account preference in the current Amazon
        Web Services Region to use either long 17 character (63 bit) or short 8
        character (32 bit) IDs for new EFS file systems and mount targets
        created. All existing resource IDs are not affected by any changes you
        make. You can set the ID preference during the opt-in period as EFS
        transitions to long resource IDs. For more information, see <a
        href="efs/latest/ug/manage-efs-resource-ids.html">Managing Amazon EFS
        resource IDs</a>.
      operationId: PutAccountPreferences
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ResourceIdType:
                description: >-
                  A preference indicating a choice to use 63bit/32bit IDs for
                  all applicable resources.
                enum:
                  - LONG_ID
                  - SHORT_ID
                type: string
            required:
              - ResourceIdType
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAccountPreferencesResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
  '/2015-02-01/create-tags/{FileSystemId}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <note> <p>DEPRECATED - CreateTags is deprecated and not maintained.
        Please use the API action to create tags for EFS resources.</p> </note>
        <p>Creates or overwrites tags associated with a file system. Each tag is
        a key-value pair. If a tag key specified in the request already exists
        on the file system, this operation overwrites its value with the value
        provided in the request. If you add the <code>Name</code> tag to your
        file system, Amazon EFS returns it in the response to the
        <a>DescribeFileSystems</a> operation. </p> <p>This operation requires
        permission for the <code>elasticfilesystem:CreateTags</code> action.</p>
      operationId: CreateTags
      parameters:
        - description: >-
            The ID of the file system whose tags you want to modify (String).
            This operation modifies the tags only, not the file system.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                description: >-
                  An array of <code>Tag</code> objects to add. Each
                  <code>Tag</code> object is a key-value pair. 
                items:
                  $ref: '#/definitions/Tag'
                type: array
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
  '/2015-02-01/delete-tags/{FileSystemId}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <note> <p>DEPRECATED - DeleteTags is deprecated and not maintained.
        Please use the API action to remove tags from EFS resources.</p> </note>
        <p>Deletes the specified tags from a file system. If the
        <code>DeleteTags</code> request includes a tag key that doesn't exist,
        Amazon EFS ignores it and doesn't cause an error. For more information
        about tags and related restrictions, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
        restrictions</a> in the <i>Billing and Cost Management User
        Guide</i>.</p> <p>This operation requires permissions for the
        <code>elasticfilesystem:DeleteTags</code> action.</p>
      operationId: DeleteTags
      parameters:
        - description: The ID of the file system whose tags you want to delete (String).
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              TagKeys:
                description: A list of tag keys to delete.
                items:
                  $ref: '#/definitions/TagKey'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - TagKeys
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
  /2015-02-01/file-systems:
    get:
      description: >-
        <p>Returns the description of a specific Amazon EFS file system if
        either the file system <code>CreationToken</code> or the
        <code>FileSystemId</code> is provided. Otherwise, it returns
        descriptions of all file systems owned by the caller's Amazon Web
        Services account in the Amazon Web Services Region of the endpoint that
        you're calling.</p> <p>When retrieving all file system descriptions, you
        can optionally specify the <code>MaxItems</code> parameter to limit the
        number of descriptions in a response. Currently, this number is
        automatically set to 10. If more file system descriptions remain, Amazon
        EFS returns a <code>NextMarker</code>, an opaque token, in the response.
        In this case, you should send a subsequent request with the
        <code>Marker</code> request parameter set to the value of
        <code>NextMarker</code>. </p> <p>To retrieve a list of your file system
        descriptions, this operation is used in an iterative process, where
        <code>DescribeFileSystems</code> is called first without the
        <code>Marker</code> and then the operation continues to call it with the
        <code>Marker</code> parameter set to the value of the
        <code>NextMarker</code> from the previous response until the response
        has no <code>NextMarker</code>. </p> <p> The order of file systems
        returned in the response of one <code>DescribeFileSystems</code> call
        and the order of file systems returned across the responses of a
        multi-call iteration is unspecified. </p> <p> This operation requires
        permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
        action. </p>
      operationId: DescribeFileSystems
      parameters:
        - description: >-
            (Optional) Specifies the maximum number of file systems to return in
            the response (integer). This number is automatically set to 100. The
            response is paginated at 100 per page if you have more than 100 file
            systems. 
          in: query
          minimum: 1
          name: MaxItems
          required: false
          type: integer
        - description: >-
            (Optional) Opaque pagination token returned from a previous
            <code>DescribeFileSystems</code> operation (String). If present,
            specifies to continue the list from where the returning call had
            left off. 
          in: query
          maxLength: 128
          minLength: 1
          name: Marker
          pattern: .+
          required: false
          type: string
        - description: >-
            (Optional) Restricts the list to the file system with this creation
            token (String). You specify a creation token when you create an
            Amazon EFS file system.
          in: query
          maxLength: 64
          minLength: 1
          name: CreationToken
          pattern: .+
          required: false
          type: string
        - description: >-
            (Optional) ID of the file system whose description you want to
            retrieve (String).
          in: query
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFileSystemsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a new, empty file system. The operation requires a creation
        token in the request that Amazon EFS uses to ensure idempotent creation
        (calling the operation with same creation token has no effect). If a
        file system does not currently exist that is owned by the caller's
        Amazon Web Services account with the specified creation token, this
        operation does the following:</p> <ul> <li> <p>Creates a new, empty file
        system. The file system will have an Amazon EFS assigned ID, and an
        initial lifecycle state <code>creating</code>.</p> </li> <li> <p>Returns
        with the description of the created file system.</p> </li> </ul>
        <p>Otherwise, this operation returns a
        <code>FileSystemAlreadyExists</code> error with the ID of the existing
        file system.</p> <note> <p>For basic use cases, you can use a randomly
        generated UUID for the creation token.</p> </note> <p> The idempotent
        operation allows you to retry a <code>CreateFileSystem</code> call
        without risk of creating an extra file system. This can happen when an
        initial call fails in a way that leaves it uncertain whether or not a
        file system was actually created. An example might be that a transport
        level timeout occurred or your connection was reset. As long as you use
        the same creation token, if the initial call had succeeded in creating a
        file system, the client can learn of its existence from the
        <code>FileSystemAlreadyExists</code> error.</p> <p>For more information,
        see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/creating-using-create-fs.html#creating-using-create-fs-part1">Creating
        a file system</a> in the <i>Amazon EFS User Guide</i>.</p> <note> <p>The
        <code>CreateFileSystem</code> call returns while the file system's
        lifecycle state is still <code>creating</code>. You can check the file
        system creation status by calling the <a>DescribeFileSystems</a>
        operation, which among other things returns the file system state.</p>
        </note> <p>This operation accepts an optional
        <code>PerformanceMode</code> parameter that you choose for your file
        system. We recommend <code>generalPurpose</code> performance mode for
        most file systems. File systems using the <code>maxIO</code> performance
        mode can scale to higher levels of aggregate throughput and operations
        per second with a tradeoff of slightly higher latencies for most file
        operations. The performance mode can't be changed after the file system
        has been created. For more information, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
        EFS performance modes</a>.</p> <p>You can set the throughput mode for
        the file system using the <code>ThroughputMode</code> parameter.</p>
        <p>After the file system is fully created, Amazon EFS sets its lifecycle
        state to <code>available</code>, at which point you can create one or
        more mount targets for the file system in your VPC. For more
        information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
        file system on an EC2 instances in your VPC by using the mount target.
        For more information, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
        EFS: How it Works</a>. </p> <p> This operation requires permissions for
        the <code>elasticfilesystem:CreateFileSystem</code> action. </p>
      operationId: CreateFileSystem
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AvailabilityZoneName:
                description: >-
                  <p>Used to create a file system that uses One Zone storage
                  classes. It specifies the Amazon Web Services Availability
                  Zone in which to create the file system. Use the format
                  <code>us-east-1a</code> to specify the Availability Zone. For
                  more information about One Zone storage classes, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using
                  EFS storage classes</a> in the <i>Amazon EFS User
                  Guide</i>.</p> <note> <p>One Zone storage classes are not
                  available in all Availability Zones in Amazon Web Services
                  Regions where Amazon EFS is available.</p> </note>
                maxLength: 64
                minLength: 1
                pattern: .+
                type: string
              Backup:
                description: >-
                  <p>Specifies whether automatic backups are enabled on the file
                  system that you are creating. Set the value to
                  <code>true</code> to enable automatic backups. If you are
                  creating a file system that uses One Zone storage classes,
                  automatic backups are enabled by default. For more
                  information, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic
                  backups</a> in the <i>Amazon EFS User Guide</i>.</p>
                  <p>Default is <code>false</code>. However, if you specify an
                  <code>AvailabilityZoneName</code>, the default is
                  <code>true</code>.</p> <note> <p>Backup is not available in
                  all Amazon Web Services Regionswhere Amazon EFS is
                  available.</p> </note>
                type: boolean
              CreationToken:
                description: >-
                  A string of up to 64 ASCII characters. Amazon EFS uses this to
                  ensure idempotent creation.
                maxLength: 64
                minLength: 1
                pattern: .+
                type: string
              Encrypted:
                description: >-
                  A Boolean value that, if true, creates an encrypted file
                  system. When creating an encrypted file system, you have the
                  option of specifying <a>CreateFileSystemRequest$KmsKeyId</a>
                  for an existing Key Management Service (KMS customer master
                  key (CMK). If you don't specify a CMK, then the default CMK
                  for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used
                  to protect the encrypted file system. 
                type: boolean
              KmsKeyId:
                description: >-
                  <p>The ID of the KMS CMK that you want to use to protect the
                  encrypted file system. This parameter is only required if you
                  want to use a non-default KMS key. If this parameter is not
                  specified, the default CMK for Amazon EFS is used. This ID can
                  be in one of the following formats:</p> <ul> <li> <p>Key ID -
                  A unique identifier of the key, for example
                  <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li>
                  <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for
                  example
                  <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>
                  </li> <li> <p>Key alias - A previously created display name
                  for a key, for example <code>alias/projectKey1</code>.</p>
                  </li> <li> <p>Key alias ARN - An ARN for a key alias, for
                  example
                  <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>
                  </li> </ul> <p>If <code>KmsKeyId</code> is specified, the
                  <a>CreateFileSystemRequest$Encrypted</a> parameter must be set
                  to true.</p> <important> <p>EFS accepts only symmetric KMS
                  keys. You cannot use asymmetric KMS keys with EFS file
                  systems.</p> </important>
                maxLength: 2048
                pattern: >-
                  ^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$
                type: string
              PerformanceMode:
                description: >-
                  <p>The performance mode of the file system. We recommend
                  <code>generalPurpose</code> performance mode for most file
                  systems. File systems using the <code>maxIO</code> performance
                  mode can scale to higher levels of aggregate throughput and
                  operations per second with a tradeoff of slightly higher
                  latencies for most file operations. The performance mode can't
                  be changed after the file system has been created.</p> <note>
                  <p>The <code>maxIO</code> mode is not supported on file
                  systems using One Zone storage classes.</p> </note>
                enum:
                  - generalPurpose
                  - maxIO
                type: string
              ProvisionedThroughputInMibps:
                description: >-
                  The throughput, measured in MiB/s, that you want to provision
                  for a file system that you're creating. Valid values are
                  1-1024. Required if <code>ThroughputMode</code> is set to
                  <code>provisioned</code>. The upper limit for throughput is
                  1024 MiB/s. To increase this limit, contact Amazon Web
                  Services Support. For more information, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
                  EFS quotas that you can increase</a> in the <i>Amazon EFS User
                  Guide</i>.
                format: double
                minimum: 1
                type: number
              Tags:
                description: >-
                  Use to create one or more tags associated with the file
                  system. Each tag is a user-defined key-value pair. Name your
                  file system on creation by including a
                  <code>"Key":"Name","Value":"{value}"</code> key-value pair.
                  Each key must be unique. For more information, see <a
                  href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
                  Amazon Web Services resources</a> in the <i>Amazon Web
                  Services General Reference Guide</i>.
                items:
                  $ref: '#/definitions/Tag'
                type: array
              ThroughputMode:
                description: >-
                  <p>Specifies the throughput mode for the file system, either
                  <code>bursting</code> or <code>provisioned</code>. If you set
                  <code>ThroughputMode</code> to <code>provisioned</code>, you
                  must also set a value for
                  <code>ProvisionedThroughputInMibps</code>. After you create
                  the file system, you can decrease your file system's
                  throughput in Provisioned Throughput mode or change between
                  the throughput modes, as long as it’s been more than 24 hours
                  since the last decrease or throughput mode change. For more
                  information, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying
                  throughput with provisioned mode</a> in the <i>Amazon EFS User
                  Guide</i>. </p> <p>Default is <code>bursting</code>.</p>
                enum:
                  - bursting
                  - provisioned
                type: string
            required:
              - CreationToken
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/FileSystemDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemAlreadyExists
          schema:
            $ref: '#/definitions/FileSystemAlreadyExists'
        '483':
          description: FileSystemLimitExceeded
          schema:
            $ref: '#/definitions/FileSystemLimitExceeded'
        '484':
          description: InsufficientThroughputCapacity
          schema:
            $ref: '#/definitions/InsufficientThroughputCapacity'
        '485':
          description: ThroughputLimitExceeded
          schema:
            $ref: '#/definitions/ThroughputLimitExceeded'
        '486':
          description: UnsupportedAvailabilityZone
          schema:
            $ref: '#/definitions/UnsupportedAvailabilityZone'
  '/2015-02-01/file-systems/{FileSystemId}':
    delete:
      description: >-
        <p>Deletes a file system, permanently severing access to its contents.
        Upon return, the file system no longer exists and you can't access any
        contents of the deleted file system.</p> <p> You can't delete a file
        system that is in use. That is, if the file system has any mount
        targets, you must first delete them. For more information, see
        <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>. </p> <note>
        <p>The <code>DeleteFileSystem</code> call returns while the file system
        state is still <code>deleting</code>. You can check the file system
        deletion status by calling the <a>DescribeFileSystems</a> operation,
        which returns a list of file systems in your account. If you pass file
        system ID or creation token for the deleted file system, the
        <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code>
        error.</p> </note> <p>This operation requires permissions for the
        <code>elasticfilesystem:DeleteFileSystem</code> action.</p>
      operationId: DeleteFileSystem
      parameters:
        - description: The ID of the file system you want to delete.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: FileSystemInUse
          schema:
            $ref: '#/definitions/FileSystemInUse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates the throughput mode or the amount of provisioned throughput of
        an existing file system.
      operationId: UpdateFileSystem
      parameters:
        - description: The ID of the file system that you want to update.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ProvisionedThroughputInMibps:
                description: >-
                  (Optional) Sets the amount of provisioned throughput, in
                  MiB/s, for the file system. Valid values are 1-1024. If you
                  are changing the throughput mode to provisioned, you must also
                  provide the amount of provisioned throughput. Required if
                  <code>ThroughputMode</code> is changed to
                  <code>provisioned</code> on update.
                format: double
                minimum: 1
                type: number
              ThroughputMode:
                description: >-
                  (Optional) Updates the file system's throughput mode. If
                  you're not updating your throughput mode, you don't need to
                  provide this value in your request. If you are changing the
                  <code>ThroughputMode</code> to <code>provisioned</code>, you
                  must also set a value for
                  <code>ProvisionedThroughputInMibps</code>.
                enum:
                  - bursting
                  - provisioned
                type: string
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/FileSystemDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
        '483':
          description: InsufficientThroughputCapacity
          schema:
            $ref: '#/definitions/InsufficientThroughputCapacity'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '485':
          description: ThroughputLimitExceeded
          schema:
            $ref: '#/definitions/ThroughputLimitExceeded'
        '486':
          description: TooManyRequests
          schema:
            $ref: '#/definitions/TooManyRequests'
  '/2015-02-01/file-systems/{FileSystemId}/backup-policy':
    get:
      description: Returns the backup policy for the specified EFS file system.
      operationId: DescribeBackupPolicy
      parameters:
        - description: >-
            Specifies which EFS file system to retrieve the
            <code>BackupPolicy</code> for.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BackupPolicyDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: PolicyNotFound
          schema:
            $ref: '#/definitions/PolicyNotFound'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates the file system's backup policy. Use this action to start or
        stop automatic backups of the file system. 
      operationId: PutBackupPolicy
      parameters:
        - description: Specifies which EFS file system to update the backup policy for.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPolicy:
                description: >-
                  The backup policy for the file system used to create automatic
                  daily backups. If status has a value of <code>ENABLED</code>,
                  the file system is being automatically backed up. For more
                  information, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic
                  backups</a>.
                properties:
                  Status:
                    allOf:
                      - $ref: '#/definitions/Status'
                      - description: >-
                          <p>Describes the status of the file system's backup
                          policy.</p> <ul> <li> <p> <b> <code>ENABLED</code>
                          </b> - EFS is automatically backing up the file
                          system.</p> </li> <li> <p> <b> <code>ENABLING</code>
                          </b> - EFS is turning on automatic backups for the
                          file system.</p> </li> <li> <p> <b>
                          <code>DISABLED</code> </b> - automatic back ups are
                          turned off for the file system.</p> </li> <li> <p> <b>
                          <code>DISABLING</code> </b> - EFS is turning off
                          automatic backups for the file system.</p> </li> </ul>
                type: object
            required:
              - BackupPolicy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BackupPolicyDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration':
    get:
      description: >-
        <p>Returns the current <code>LifecycleConfiguration</code> object for
        the specified Amazon EFS file system. EFS lifecycle management uses the
        <code>LifecycleConfiguration</code> object to identify which files to
        move to the EFS Infrequent Access (IA) storage class. For a file system
        without a <code>LifecycleConfiguration</code> object, the call returns
        an empty array in the response.</p> <p>When EFS Intelligent Tiering is
        enabled, <code>TransitionToPrimaryStorageClass</code> has a value of
        <code>AFTER_1_ACCESS</code>.</p> <p>This operation requires permissions
        for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
        operation.</p>
      operationId: DescribeLifecycleConfiguration
      parameters:
        - description: >-
            The ID of the file system whose <code>LifecycleConfiguration</code>
            object you want to retrieve (String).
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LifecycleConfigurationDescription'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Enables lifecycle management by creating a new
        <code>LifecycleConfiguration</code> object. A
        <code>LifecycleConfiguration</code> object defines when files in an
        Amazon EFS file system are automatically transitioned to the lower-cost
        EFS Infrequent Access (IA) storage class. To enable EFS Intelligent
        Tiering, set the value of <code>TransitionToPrimaryStorageClass</code>
        to <code>AFTER_1_ACCESS</code>. For more information, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html">EFS
        Lifecycle Management</a>.</p> <p>A <code>LifecycleConfiguration</code>
        applies to all files in a file system.</p> <p>Each Amazon EFS file
        system supports one lifecycle configuration, which applies to all files
        in the file system. If a <code>LifecycleConfiguration</code> object
        already exists for the specified file system, a
        <code>PutLifecycleConfiguration</code> call modifies the existing
        configuration. A <code>PutLifecycleConfiguration</code> call with an
        empty <code>LifecyclePolicies</code> array in the request body deletes
        any existing <code>LifecycleConfiguration</code> and disables lifecycle
        management.</p> <p>In the request, specify the following: </p> <ul> <li>
        <p>The ID for the file system for which you are enabling, disabling, or
        modifying lifecycle management.</p> </li> <li> <p>A
        <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code>
        objects that define when files are moved to the IA storage class. The
        array can contain only one <code>LifecyclePolicy</code> item.</p> </li>
        </ul> <p>This operation requires permissions for the
        <code>elasticfilesystem:PutLifecycleConfiguration</code> operation.</p>
        <p>To apply a <code>LifecycleConfiguration</code> object to an encrypted
        file system, you need the same Key Management Service permissions as
        when you created the encrypted file system. </p>
      operationId: PutLifecycleConfiguration
      parameters:
        - description: >-
            The ID of the file system for which you are creating the
            <code>LifecycleConfiguration</code> object (String).
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LifecyclePolicies:
                description: >-
                  An array of <code>LifecyclePolicy</code> objects that define
                  the file system's <code>LifecycleConfiguration</code> object.
                  A <code>LifecycleConfiguration</code> object tells lifecycle
                  management when to transition files from the Standard storage
                  class to the Infrequent Access storage class.
                items:
                  $ref: '#/definitions/LifecyclePolicy'
                maxItems: 2
                type: array
            required:
              - LifecyclePolicies
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LifecycleConfigurationDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
  '/2015-02-01/file-systems/{FileSystemId}/policy':
    delete:
      description: >-
        <p>Deletes the <code>FileSystemPolicy</code> for the specified file
        system. The default <code>FileSystemPolicy</code> goes into effect once
        the existing policy is deleted. For more information about the default
        file system policy, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/res-based-policies-efs.html">Using
        Resource-based Policies with EFS</a>.</p> <p>This operation requires
        permissions for the
        <code>elasticfilesystem:DeleteFileSystemPolicy</code> action.</p>
      operationId: DeleteFileSystemPolicy
      parameters:
        - description: >-
            Specifies the EFS file system for which to delete the
            <code>FileSystemPolicy</code>.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
    get:
      description: >-
        <p>Returns the <code>FileSystemPolicy</code> for the specified EFS file
        system.</p> <p>This operation requires permissions for the
        <code>elasticfilesystem:DescribeFileSystemPolicy</code> action.</p>
      operationId: DescribeFileSystemPolicy
      parameters:
        - description: >-
            Specifies which EFS file system to retrieve the
            <code>FileSystemPolicy</code> for.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FileSystemPolicyDescription'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: PolicyNotFound
          schema:
            $ref: '#/definitions/PolicyNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Applies an Amazon EFS <code>FileSystemPolicy</code> to an Amazon EFS
        file system. A file system policy is an IAM resource-based policy and
        can contain multiple policy statements. A file system always has exactly
        one file system policy, which can be the default policy or an explicit
        policy set or updated using this API operation. EFS file system policies
        have a 20,000 character limit. When an explicit policy is set, it
        overrides the default policy. For more information about the default
        file system policy, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html#default-filesystempolicy">Default
        EFS File System Policy</a>. </p> <p>EFS file system policies have a
        20,000 character limit.</p> <p>This operation requires permissions for
        the <code>elasticfilesystem:PutFileSystemPolicy</code> action.</p>
      operationId: PutFileSystemPolicy
      parameters:
        - description: >-
            The ID of the EFS file system that you want to create or update the
            <code>FileSystemPolicy</code> for.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BypassPolicyLockoutSafetyCheck:
                description: >-
                  (Optional) A flag to indicate whether to bypass the
                  <code>FileSystemPolicy</code> lockout safety check. The policy
                  lockout safety check determines whether the policy in the
                  request will prevent the principal making the request will be
                  locked out from making future <code>PutFileSystemPolicy</code>
                  requests on the file system. Set
                  <code>BypassPolicyLockoutSafetyCheck</code> to
                  <code>True</code> only when you intend to prevent the
                  principal that is making the request from making a subsequent
                  <code>PutFileSystemPolicy</code> request on the file system.
                  The default value is False. 
                type: boolean
              Policy:
                description: >-
                  The <code>FileSystemPolicy</code> that you're creating.
                  Accepts a JSON formatted policy definition. EFS file system
                  policies have a 20,000 character limit. To find out more about
                  the elements that make up a file system policy, see <a
                  href="https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies">EFS
                  Resource-based Policies</a>. 
                maxLength: 20000
                minLength: 1
                pattern: '[\s\S]+'
                type: string
            required:
              - Policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FileSystemPolicyDescription'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: InvalidPolicyException
          schema:
            $ref: '#/definitions/InvalidPolicyException'
        '483':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
  /2015-02-01/mount-targets:
    get:
      description: >-
        <p>Returns the descriptions of all the current mount targets, or a
        specific mount target, for a file system. When requesting all of the
        current mount targets, the order of mount targets returned in the
        response is unspecified.</p> <p>This operation requires permissions for
        the <code>elasticfilesystem:DescribeMountTargets</code> action, on
        either the file system ID that you specify in <code>FileSystemId</code>,
        or on the file system of the mount target that you specify in
        <code>MountTargetId</code>.</p>
      operationId: DescribeMountTargets
      parameters:
        - description: >-
            (Optional) Maximum number of mount targets to return in the
            response. Currently, this number is automatically set to 10, and
            other values are ignored. The response is paginated at 100 per page
            if you have more than 100 mount targets.
          in: query
          minimum: 1
          name: MaxItems
          required: false
          type: integer
        - description: >-
            (Optional) Opaque pagination token returned from a previous
            <code>DescribeMountTargets</code> operation (String). If present, it
            specifies to continue the list from where the previous returning
            call left off.
          in: query
          maxLength: 128
          minLength: 1
          name: Marker
          pattern: .+
          required: false
          type: string
        - description: >-
            (Optional) ID of the file system whose mount targets you want to
            list (String). It must be included in your request if an
            <code>AccessPointId</code> or <code>MountTargetId</code> is not
            included. Accepts either a file system ID or ARN as input.
          in: query
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: false
          type: string
        - description: >-
            (Optional) ID of the mount target that you want to have described
            (String). It must be included in your request if
            <code>FileSystemId</code> is not included. Accepts either a mount
            target ID or ARN as input.
          in: query
          maxLength: 45
          minLength: 13
          name: MountTargetId
          pattern: '^fsmt-[0-9a-f]{8,40}$'
          required: false
          type: string
        - description: >-
            (Optional) The ID of the access point whose mount targets that you
            want to list. It must be included in your request if a
            <code>FileSystemId</code> or <code>MountTargetId</code> is not
            included in your request. Accepts either an access point ID or ARN
            as input.
          in: query
          maxLength: 128
          name: AccessPointId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMountTargetsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: MountTargetNotFound
          schema:
            $ref: '#/definitions/MountTargetNotFound'
        '484':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a mount target for a file system. You can then mount the file
        system on EC2 instances by using the mount target.</p> <p>You can create
        one mount target in each Availability Zone in your VPC. All EC2
        instances in a VPC within a given Availability Zone share a single mount
        target for a given file system. If you have multiple subnets in an
        Availability Zone, you create a mount target in one of the subnets. EC2
        instances do not need to be in the same subnet as the mount target in
        order to access their file system.</p> <p>You can create only one mount
        target for an EFS file system using One Zone storage classes. You must
        create that mount target in the same Availability Zone in which the file
        system is located. Use the <code>AvailabilityZoneName</code> and
        <code>AvailabiltyZoneId</code> properties in the
        <a>DescribeFileSystems</a> response object to get this information. Use
        the <code>subnetId</code> associated with the file system's Availability
        Zone when creating the mount target.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
        EFS: How it Works</a>. </p> <p>To create a mount target for a file
        system, the file system's lifecycle state must be
        <code>available</code>. For more information, see
        <a>DescribeFileSystems</a>.</p> <p>In the request, provide the
        following:</p> <ul> <li> <p>The file system ID for which you are
        creating the mount target.</p> </li> <li> <p>A subnet ID, which
        determines the following:</p> <ul> <li> <p>The VPC in which Amazon EFS
        creates the mount target</p> </li> <li> <p>The Availability Zone in
        which Amazon EFS creates the mount target</p> </li> <li> <p>The IP
        address range from which Amazon EFS selects the IP address of the mount
        target (if you don't specify an IP address in the request)</p> </li>
        </ul> </li> </ul> <p>After creating the mount target, Amazon EFS returns
        a response that includes, a <code>MountTargetId</code> and an
        <code>IpAddress</code>. You use this IP address when mounting the file
        system in an EC2 instance. You can also use the mount target's DNS name
        when mounting the file system. The EC2 instance on which you mount the
        file system by using the mount target can resolve the mount target's DNS
        name to its IP address. For more information, see <a
        href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
        it Works: Implementation Overview</a>. </p> <p>Note that you can create
        mount targets for a file system in only one VPC, and there can be only
        one mount target per Availability Zone. That is, if the file system
        already has one or more mount targets created for it, the subnet
        specified in the request to add another mount target must meet the
        following requirements:</p> <ul> <li> <p>Must belong to the same VPC as
        the subnets of the existing mount targets</p> </li> <li> <p>Must not be
        in the same Availability Zone as any of the subnets of the existing
        mount targets</p> </li> </ul> <p>If the request satisfies the
        requirements, Amazon EFS does the following:</p> <ul> <li> <p>Creates a
        new mount target in the specified subnet.</p> </li> <li> <p>Also creates
        a new network interface in the subnet as follows:</p> <ul> <li> <p>If
        the request provides an <code>IpAddress</code>, Amazon EFS assigns that
        IP address to the network interface. Otherwise, Amazon EFS assigns a
        free address in the subnet (in the same way that the Amazon EC2
        <code>CreateNetworkInterface</code> call does when a request does not
        specify a primary private IP address).</p> </li> <li> <p>If the request
        provides <code>SecurityGroups</code>, this network interface is
        associated with those security groups. Otherwise, it belongs to the
        default security group for the subnet's VPC.</p> </li> <li> <p>Assigns
        the description <code>Mount target <i>fsmt-id</i> for file system
        <i>fs-id</i> </code> where <code> <i>fsmt-id</i> </code> is the mount
        target ID, and <code> <i>fs-id</i> </code> is the
        <code>FileSystemId</code>.</p> </li> <li> <p>Sets the
        <code>requesterManaged</code> property of the network interface to
        <code>true</code>, and the <code>requesterId</code> value to
        <code>EFS</code>.</p> </li> </ul> <p>Each Amazon EFS mount target has
        one corresponding requester-managed EC2 network interface. After the
        network interface is created, Amazon EFS sets the
        <code>NetworkInterfaceId</code> field in the mount target's description
        to the network interface ID, and the <code>IpAddress</code> field to its
        address. If network interface creation fails, the entire
        <code>CreateMountTarget</code> operation fails.</p> </li> </ul> <note>
        <p>The <code>CreateMountTarget</code> call returns only after creating
        the network interface, but while the mount target state is still
        <code>creating</code>, you can check the mount target creation status by
        calling the <a>DescribeMountTargets</a> operation, which among other
        things returns the mount target state.</p> </note> <p>We recommend that
        you create a mount target in each of the Availability Zones. There are
        cost considerations for using a file system in an Availability Zone
        through a mount target created in another Availability Zone. For more
        information, see <a href="http://aws.amazon.com/efs/">Amazon EFS</a>. In
        addition, by always using a mount target local to the instance's
        Availability Zone, you eliminate a partial failure scenario. If the
        Availability Zone in which your mount target is created goes down, then
        you can't access your file system through that mount target. </p>
        <p>This operation requires permissions for the following action on the
        file system:</p> <ul> <li> <p>
        <code>elasticfilesystem:CreateMountTarget</code> </p> </li> </ul>
        <p>This operation also requires permissions for the following Amazon EC2
        actions:</p> <ul> <li> <p> <code>ec2:DescribeSubnets</code> </p> </li>
        <li> <p> <code>ec2:DescribeNetworkInterfaces</code> </p> </li> <li> <p>
        <code>ec2:CreateNetworkInterface</code> </p> </li> </ul>
      operationId: CreateMountTarget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              FileSystemId:
                description: >-
                  The ID of the file system for which to create the mount
                  target.
                maxLength: 128
                pattern: >-
                  ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
                type: string
              IpAddress:
                description: >-
                  Valid IPv4 address within the address range of the specified
                  subnet.
                maxLength: 15
                minLength: 7
                pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'
                type: string
              SecurityGroups:
                description: >-
                  Up to five VPC security group IDs, of the form
                  <code>sg-xxxxxxxx</code>. These must be for the same VPC as
                  subnet specified.
                items:
                  $ref: '#/definitions/SecurityGroup'
                maxItems: 100
                type: array
              SubnetId:
                description: >-
                  The ID of the subnet to add the mount target in. For file
                  systems that use One Zone storage classes, use the subnet that
                  is associated with the file system's Availability Zone.
                maxLength: 47
                minLength: 15
                pattern: '^subnet-[0-9a-f]{8,40}$'
                type: string
            required:
              - FileSystemId
              - SubnetId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MountTargetDescription'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: IncorrectFileSystemLifeCycleState
          schema:
            $ref: '#/definitions/IncorrectFileSystemLifeCycleState'
        '484':
          description: MountTargetConflict
          schema:
            $ref: '#/definitions/MountTargetConflict'
        '485':
          description: SubnetNotFound
          schema:
            $ref: '#/definitions/SubnetNotFound'
        '486':
          description: NoFreeAddressesInSubnet
          schema:
            $ref: '#/definitions/NoFreeAddressesInSubnet'
        '487':
          description: IpAddressInUse
          schema:
            $ref: '#/definitions/IpAddressInUse'
        '488':
          description: NetworkInterfaceLimitExceeded
          schema:
            $ref: '#/definitions/NetworkInterfaceLimitExceeded'
        '489':
          description: SecurityGroupLimitExceeded
          schema:
            $ref: '#/definitions/SecurityGroupLimitExceeded'
        '490':
          description: SecurityGroupNotFound
          schema:
            $ref: '#/definitions/SecurityGroupNotFound'
        '491':
          description: UnsupportedAvailabilityZone
          schema:
            $ref: '#/definitions/UnsupportedAvailabilityZone'
        '492':
          description: AvailabilityZonesMismatch
          schema:
            $ref: '#/definitions/AvailabilityZonesMismatch'
  '/2015-02-01/mount-targets/{MountTargetId}':
    delete:
      description: >-
        <p>Deletes the specified mount target.</p> <p>This operation forcibly
        breaks any mounts of the file system by using the mount target that is
        being deleted, which might disrupt instances or applications using those
        mounts. To avoid applications getting cut off abruptly, you might
        consider unmounting any mounts of the mount target, if feasible. The
        operation also deletes the associated network interface. Uncommitted
        writes might be lost, but breaking a mount target using this operation
        does not corrupt the file system itself. The file system you created
        remains. You can mount an EC2 instance in your VPC by using another
        mount target.</p> <p>This operation requires permissions for the
        following action on the file system:</p> <ul> <li> <p>
        <code>elasticfilesystem:DeleteMountTarget</code> </p> </li> </ul> <note>
        <p>The <code>DeleteMountTarget</code> call returns while the mount
        target state is still <code>deleting</code>. You can check the mount
        target deletion by calling the <a>DescribeMountTargets</a> operation,
        which returns a list of mount target descriptions for the given file
        system. </p> </note> <p>The operation also requires permissions for the
        following Amazon EC2 action on the mount target's network interface:</p>
        <ul> <li> <p> <code>ec2:DeleteNetworkInterface</code> </p> </li> </ul>
      operationId: DeleteMountTarget
      parameters:
        - description: The ID of the mount target to delete (String).
          in: path
          maxLength: 45
          minLength: 13
          name: MountTargetId
          pattern: '^fsmt-[0-9a-f]{8,40}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: DependencyTimeout
          schema:
            $ref: '#/definitions/DependencyTimeout'
        '483':
          description: MountTargetNotFound
          schema:
            $ref: '#/definitions/MountTargetNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2015-02-01/mount-targets/{MountTargetId}/security-groups':
    get:
      description: >-
        <p>Returns the security groups currently in effect for a mount target.
        This operation requires that the network interface of the mount target
        has been created and the lifecycle state of the mount target is not
        <code>deleted</code>.</p> <p>This operation requires permissions for the
        following actions:</p> <ul> <li> <p>
        <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
        on the mount target's file system. </p> </li> <li> <p>
        <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount
        target's network interface. </p> </li> </ul>
      operationId: DescribeMountTargetSecurityGroups
      parameters:
        - description: >-
            The ID of the mount target whose security groups you want to
            retrieve.
          in: path
          maxLength: 45
          minLength: 13
          name: MountTargetId
          pattern: '^fsmt-[0-9a-f]{8,40}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMountTargetSecurityGroupsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: MountTargetNotFound
          schema:
            $ref: '#/definitions/MountTargetNotFound'
        '483':
          description: IncorrectMountTargetState
          schema:
            $ref: '#/definitions/IncorrectMountTargetState'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Modifies the set of security groups in effect for a mount target.</p>
        <p>When you create a mount target, Amazon EFS also creates a new network
        interface. For more information, see <a>CreateMountTarget</a>. This
        operation replaces the security groups in effect for the network
        interface associated with a mount target, with the
        <code>SecurityGroups</code> provided in the request. This operation
        requires that the network interface of the mount target has been created
        and the lifecycle state of the mount target is not <code>deleted</code>.
        </p> <p>The operation requires permissions for the following
        actions:</p> <ul> <li> <p>
        <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on
        the mount target's file system. </p> </li> <li> <p>
        <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount
        target's network interface. </p> </li> </ul>
      operationId: ModifyMountTargetSecurityGroups
      parameters:
        - description: The ID of the mount target whose security groups you want to modify.
          in: path
          maxLength: 45
          minLength: 13
          name: MountTargetId
          pattern: '^fsmt-[0-9a-f]{8,40}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              SecurityGroups:
                description: An array of up to five VPC security group IDs.
                items:
                  $ref: '#/definitions/SecurityGroup'
                maxItems: 100
                type: array
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: MountTargetNotFound
          schema:
            $ref: '#/definitions/MountTargetNotFound'
        '483':
          description: IncorrectMountTargetState
          schema:
            $ref: '#/definitions/IncorrectMountTargetState'
        '484':
          description: SecurityGroupLimitExceeded
          schema:
            $ref: '#/definitions/SecurityGroupLimitExceeded'
        '485':
          description: SecurityGroupNotFound
          schema:
            $ref: '#/definitions/SecurityGroupNotFound'
  '/2015-02-01/resource-tags/{ResourceId}':
    get:
      description: >-
        <p>Lists all tags for a top-level EFS resource. You must provide the ID
        of the resource that you want to retrieve the tags for.</p> <p>This
        operation requires permissions for the
        <code>elasticfilesystem:DescribeAccessPoints</code> action.</p>
      operationId: ListTagsForResource
      parameters:
        - description: >-
            Specifies the EFS resource you want to retrieve tags for. You can
            retrieve tags for EFS file systems and access points using this API
            endpoint.
          in: path
          maxLength: 128
          name: ResourceId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$
          required: true
          type: string
        - description: >-
            (Optional) Specifies the maximum number of tag objects to return in
            the response. The default value is 100.
          in: query
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            (Optional) You can use <code>NextToken</code> in a subsequent
            request to fetch the next page of access point descriptions if the
            response payload was paginated.
          in: query
          maxLength: 128
          minLength: 1
          name: NextToken
          pattern: .+
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a tag for an EFS resource. You can create tags for EFS file
        systems and access points using this API operation.</p> <p>This
        operation requires permissions for the
        <code>elasticfilesystem:TagResource</code> action.</p>
      operationId: TagResource
      parameters:
        - description: >-
            The ID specifying the EFS resource that you want to create a tag
            for.
          in: path
          maxLength: 128
          name: ResourceId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                description: >-
                  An array of <code>Tag</code> objects to add. Each
                  <code>Tag</code> object is a key-value pair.
                items:
                  $ref: '#/definitions/Tag'
                type: array
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
  '/2015-02-01/resource-tags/{ResourceId}#tagKeys':
    delete:
      description: >-
        <p>Removes tags from an EFS resource. You can remove tags from EFS file
        systems and access points using this API operation.</p> <p>This
        operation requires permissions for the
        <code>elasticfilesystem:UntagResource</code> action.</p>
      operationId: UntagResource
      parameters:
        - description: Specifies the EFS resource that you want to remove tags from.
          in: path
          maxLength: 128
          name: ResourceId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The keys of the key-value tag pairs that you want to remove from the
            specified EFS resource.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: AccessPointNotFound
          schema:
            $ref: '#/definitions/AccessPointNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2015-02-01/tags/{FileSystemId}/':
    get:
      deprecated: true
      description: >-
        <note> <p>DEPRECATED - The DeleteTags action is deprecated and not
        maintained. Please use the API action to remove tags from EFS
        resources.</p> </note> <p>Returns the tags associated with a file
        system. The order of tags returned in the response of one
        <code>DescribeTags</code> call and the order of tags returned across the
        responses of a multiple-call iteration (when using pagination) is
        unspecified. </p> <p> This operation requires permissions for the
        <code>elasticfilesystem:DescribeTags</code> action. </p>
      operationId: DescribeTags
      parameters:
        - description: >-
            (Optional) The maximum number of file system tags to return in the
            response. Currently, this number is automatically set to 100, and
            other values are ignored. The response is paginated at 100 per page
            if you have more than 100 tags.
          in: query
          minimum: 1
          name: MaxItems
          required: false
          type: integer
        - description: >-
            (Optional) An opaque pagination token returned from a previous
            <code>DescribeTags</code> operation (String). If present, it
            specifies to continue the list from where the previous call left
            off.
          in: query
          maxLength: 128
          minLength: 1
          name: Marker
          pattern: .+
          required: false
          type: string
        - description: The ID of the file system whose tag set you want to retrieve.
          in: path
          maxLength: 128
          name: FileSystemId
          pattern: >-
            ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

