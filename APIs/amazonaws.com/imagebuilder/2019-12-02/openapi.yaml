basePath: /
definitions:
  AccountId:
    pattern: '^[0-9]{12}$'
    type: string
  AccountList:
    items:
      $ref: '#/definitions/AccountId'
    maxItems: 1536
    minItems: 1
    type: array
  AdditionalInstanceConfiguration:
    description: >-
      In addition to your infrastruction configuration, these settings provide
      an extra layer of control over your build instances. For instances where
      Image Builder installs the SSM agent, you can choose whether to keep it
      for the AMI that you create. You can also specify commands to run on
      launch for all of your build instances.
    properties:
      systemsManagerAgent:
        allOf:
          - $ref: '#/definitions/SystemsManagerAgent'
          - description: Contains settings for the SSM agent on your build instance.
      userDataOverride:
        allOf:
          - $ref: '#/definitions/UserDataOverride'
          - description: >-
              <p>Use this property to provide commands or a command script to
              run when you launch your build instance.</p> <note> <p>The
              userDataOverride property replaces any commands that Image Builder
              might have added to ensure that SSM is installed on your Linux
              build instance. If you override the user data, make sure that you
              add commands to install SSM, if it is not pre-installed on your
              source image.</p> </note>
    type: object
  Ami:
    description: ' Details of an Amazon EC2 AMI.'
    properties:
      accountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The account ID of the owner of the AMI.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The description of the Amazon EC2 AMI. Minimum and maximum length
              are in characters.
      image:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The AMI ID of the Amazon EC2 AMI.
      name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the Amazon EC2 AMI.
      region:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon Web Services Region of the Amazon EC2 AMI.
      state:
        $ref: '#/definitions/ImageState'
    type: object
  AmiDistributionConfiguration:
    description: ' Define and configure the output AMIs of the pipeline.'
    properties:
      amiTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags to apply to AMIs distributed to this Region.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The description of the distribution configuration. Minimum and
              maximum length are in characters.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The KMS key identifier used to encrypt the distributed image.
      launchPermission:
        allOf:
          - $ref: '#/definitions/LaunchPermissionConfiguration'
          - description: ' Launch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.'
      name:
        allOf:
          - $ref: '#/definitions/AmiNameString'
          - description: The name of the distribution configuration.
      targetAccountIds:
        allOf:
          - $ref: '#/definitions/AccountList'
          - description: The ID of an account to which you want to distribute an image.
    type: object
  AmiList:
    items:
      $ref: '#/definitions/Ami'
    type: array
  AmiNameString:
    maxLength: 127
    minLength: 1
    pattern: '^[-_A-Za-z0-9{][-_A-Za-z0-9\s:{}\.]+[-_A-Za-z0-9}]$'
    type: string
  Arn:
    type: string
  Boolean:
    type: boolean
  CallRateLimitExceededException: {}
  CancelImageCreationRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image whose creation you
              want to cancel.
    required:
      - imageBuildVersionArn
      - clientToken
    title: CancelImageCreationRequest
    type: object
  CancelImageCreationResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image whose creation has
              been cancelled.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ClientException: {}
  ClientToken:
    maxLength: 36
    minLength: 1
    type: string
  Component:
    description: A detailed view of a component.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the component.
      changeDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The change description of the component.
      data:
        allOf:
          - $ref: '#/definitions/ComponentData'
          - description: The data of the component.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date that the component was created.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the component.
      encrypted:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: The encryption status of the component.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The KMS key identifier used to encrypt the component.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the component.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the component.
      parameters:
        allOf:
          - $ref: '#/definitions/ComponentParameterDetailList'
          - description: >-
              Contains parameter details for each of the parameters that are
              defined for the component.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the component.
      supportedOsVersions:
        allOf:
          - $ref: '#/definitions/OsVersionList'
          - description: >-
              The operating system (OS) version supported by the component. If
              the OS information is available, a prefix match is performed
              against the parent image OS version during image recipe creation.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags associated with the component.
      type:
        allOf:
          - $ref: '#/definitions/ComponentType'
          - description: >-
              The type of the component denotes whether the component is used to
              build the image or only to test it.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: The version of the component.
    type: object
  ComponentBuildVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
    type: string
  ComponentConfiguration:
    description: ' Configuration details of the component.'
    properties:
      componentArn:
        allOf:
          - $ref: '#/definitions/ComponentVersionArnOrBuildVersionArn'
          - description: The Amazon Resource Name (ARN) of the component.
      parameters:
        allOf:
          - $ref: '#/definitions/ComponentParameterList'
          - description: >-
              A group of parameter settings that are used to configure the
              component for a specific recipe.
    required:
      - componentArn
    type: object
  ComponentConfigurationList:
    items:
      $ref: '#/definitions/ComponentConfiguration'
    minItems: 1
    type: array
  ComponentData:
    type: string
  ComponentFormat:
    enum:
      - SHELL
    type: string
  ComponentParameter:
    description: Contains a key/value pair that sets the named component parameter.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/ComponentParameterName'
          - description: The name of the component parameter to set.
      value:
        allOf:
          - $ref: '#/definitions/ComponentParameterValueList'
          - description: Sets the value for the named component parameter.
    required:
      - name
      - value
    type: object
  ComponentParameterDescription:
    maxLength: 1024
    minLength: 1
    pattern: '[^\x00]+'
    type: string
  ComponentParameterDetail:
    description: >-
      Defines a parameter that is used to provide configuration details for the
      component.
    properties:
      defaultValue:
        allOf:
          - $ref: '#/definitions/ComponentParameterValueList'
          - description: The default value of this parameter if no input is provided.
      description:
        allOf:
          - $ref: '#/definitions/ComponentParameterDescription'
          - description: Describes this parameter.
      name:
        allOf:
          - $ref: '#/definitions/ComponentParameterName'
          - description: The name of this input parameter.
      type:
        allOf:
          - $ref: '#/definitions/ComponentParameterType'
          - description: >-
              The type of input this parameter provides. The currently supported
              value is "string".
    required:
      - name
      - type
    type: object
  ComponentParameterDetailList:
    items:
      $ref: '#/definitions/ComponentParameterDetail'
    type: array
  ComponentParameterList:
    items:
      $ref: '#/definitions/ComponentParameter'
    minItems: 1
    type: array
  ComponentParameterName:
    maxLength: 256
    minLength: 1
    pattern: '[^\x00]+'
    type: string
  ComponentParameterType:
    maxLength: 20
    minLength: 1
    pattern: ^String|Integer|Boolean|StringList$
    type: string
  ComponentParameterValue:
    minLength: 1
    pattern: '[^\x00]+'
    type: string
  ComponentParameterValueList:
    items:
      $ref: '#/definitions/ComponentParameterValue'
    type: array
  ComponentSummary:
    description: A high-level summary of a component.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the component.
      changeDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The change description of the component.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date that the component was created.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the component.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the component.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the component.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the component.
      supportedOsVersions:
        allOf:
          - $ref: '#/definitions/OsVersionList'
          - description: >-
              The operating system (OS) version supported by the component. If
              the OS information is available, a prefix match is performed
              against the parent image OS version during image recipe creation.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags associated with the component.
      type:
        allOf:
          - $ref: '#/definitions/ComponentType'
          - description: >-
              The type of the component denotes whether the component is used to
              build the image or only to test it.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: The version of the component.
    type: object
  ComponentSummaryList:
    items:
      $ref: '#/definitions/ComponentSummary'
    type: array
  ComponentType:
    enum:
      - BUILD
      - TEST
    type: string
  ComponentVersion:
    description: >-
      The defining characteristics of a specific version of an Amazon Web
      Services TOE component.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the component.</p> <note>
              <p>Semantic versioning is included in each object's Amazon
              Resource Name (ARN), at the level that applies to that object as
              follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not
              include specific values in any of the nodes. The nodes are either
              left off entirely, or they are specified as wildcards, for
              example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first
              three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li>
              <li> <p>Build version ARNs have all four nodes, and point to a
              specific build for a specific version of an object.</p> </li>
              </ol> </note>
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date that the component was created.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the component.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the component.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the component.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the component.
      supportedOsVersions:
        allOf:
          - $ref: '#/definitions/OsVersionList'
          - description: >-
              he operating system (OS) version supported by the component. If
              the OS information is available, a prefix match is performed
              against the parent image OS version during image recipe creation.
      type:
        allOf:
          - $ref: '#/definitions/ComponentType'
          - description: >-
              The type of the component denotes whether the component is used to
              build the image or only to test it.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the component.</p> <note> <p>The
              semantic version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p>
              <b>Filtering:</b> When you retrieve or reference a resource with a
              semantic version, you can use wildcards (x) to filter your
              results. When you use a wildcard in any node, all nodes to the
              right of the first wildcard must also be wildcards. For example,
              specifying "1.2.x", or "1.x.x" works to filter list results, but
              neither "1.x.2", nor "x.2.x" will work. You do not have to specify
              the build - Image Builder automatically uses a wildcard for that,
              if applicable.</p> </note>
    type: object
  ComponentVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
    type: string
  ComponentVersionArnOrBuildVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/(?:(?:([0-9]+|x)\.([0-9]+|x)\.([0-9]+|x))|(?:[0-9]+\.[0-9]+\.[0-9]+/[0-9]+))$
    type: string
  ComponentVersionList:
    items:
      $ref: '#/definitions/ComponentVersion'
    type: array
  Container:
    description: A container encapsulates the runtime environment for an application.
    properties:
      imageUris:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of URIs for containers created in the context Region.
      region:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Containers and container images are Region-specific. This is the
              Region context for the container.
    type: object
  ContainerDistributionConfiguration:
    description: >-
      Container distribution settings for encryption, licensing, and sharing in
      a specific Region.
    properties:
      containerTags:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              Tags that are attached to the container distribution
              configuration.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the container distribution configuration.
      targetRepository:
        allOf:
          - $ref: '#/definitions/TargetContainerRepository'
          - description: >-
              The destination repository for the container distribution
              configuration.
    required:
      - targetRepository
    type: object
  ContainerList:
    items:
      $ref: '#/definitions/Container'
    type: array
  ContainerRecipe:
    description: A container recipe.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the container recipe.</p>
              <note> <p>Semantic versioning is included in each object's Amazon
              Resource Name (ARN), at the level that applies to that object as
              follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not
              include specific values in any of the nodes. The nodes are either
              left off entirely, or they are specified as wildcards, for
              example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first
              three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li>
              <li> <p>Build version ARNs have all four nodes, and point to a
              specific build for a specific version of an object.</p> </li>
              </ol> </note>
      components:
        allOf:
          - $ref: '#/definitions/ComponentConfigurationList'
          - description: >-
              Components for build and test that are included in the container
              recipe.
      containerType:
        allOf:
          - $ref: '#/definitions/ContainerType'
          - description: 'Specifies the type of container, such as Docker.'
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date when this container recipe was created.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the container recipe.
      dockerfileTemplateData:
        allOf:
          - $ref: '#/definitions/DockerFileTemplate'
          - description: >-
              Dockerfiles are text documents that are used to build Docker
              containers, and ensure that they contain all of the elements
              required by the application running inside. The template data
              consists of contextual variables where Image Builder places build
              information or scripts, based on your container image recipe.
      encrypted:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: A flag that indicates if the target container is encrypted.
      instanceConfiguration:
        allOf:
          - $ref: '#/definitions/InstanceConfiguration'
          - description: >-
              A group of options that can be used to configure an instance for
              building and testing container images.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Identifies which KMS key is used to encrypt the container image
              for distribution to the target Region.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the container recipe.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the container recipe.
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source image for the container recipe.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: 'The system platform for the container, such as Windows or Linux.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Tags that are attached to the container recipe.
      targetRepository:
        allOf:
          - $ref: '#/definitions/TargetContainerRepository'
          - description: The destination repository for the container image.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the container recipe.</p> <note> <p>The
              semantic version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p>
              <b>Filtering:</b> When you retrieve or reference a resource with a
              semantic version, you can use wildcards (x) to filter your
              results. When you use a wildcard in any node, all nodes to the
              right of the first wildcard must also be wildcards. For example,
              specifying "1.2.x", or "1.x.x" works to filter list results, but
              neither "1.x.2", nor "x.2.x" will work. You do not have to specify
              the build - Image Builder automatically uses a wildcard for that,
              if applicable.</p> </note>
      workingDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The working directory for use during build and test workflows.
    type: object
  ContainerRecipeArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
    type: string
  ContainerRecipeSummary:
    description: A summary of a container recipe
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the container recipe.
      containerType:
        allOf:
          - $ref: '#/definitions/ContainerType'
          - description: 'Specifies the type of container, such as "Docker".'
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date when this container recipe was created.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the container recipe.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the container recipe.
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source image for the container recipe.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: 'The system platform for the container, such as Windows or Linux.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Tags that are attached to the container recipe.
    type: object
  ContainerRecipeSummaryList:
    items:
      $ref: '#/definitions/ContainerRecipeSummary'
    type: array
  ContainerRepositoryService:
    enum:
      - ECR
    type: string
  ContainerType:
    enum:
      - DOCKER
    type: string
  CreateComponentRequest:
    properties:
      changeDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The change description of the component. Describes what change has
              been made in this version, or what makes this version different
              from other versions of this component.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token of the component.
      data:
        allOf:
          - $ref: '#/definitions/InlineComponentData'
          - description: >-
              The data of the component. Used to specify the data inline. Either
              <code>data</code> or <code>uri</code> can be used to specify the
              data within the component.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The description of the component. Describes the contents of the
              component.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of the KMS key that should be used to encrypt this
              component.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the component.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the component.
      semanticVersion:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the component. This version follows the
              semantic version syntax.</p> <note> <p>The semantic version has
              four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>
      supportedOsVersions:
        allOf:
          - $ref: '#/definitions/OsVersionList'
          - description: ' The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the component.
      uri:
        allOf:
          - $ref: '#/definitions/Uri'
          - description: >-
              The uri of the component. Must be an Amazon S3 URL and the
              requester must have permission to access the Amazon S3 bucket. If
              you use Amazon S3, you can specify component content up to your
              service quota. Either <code>data</code> or <code>uri</code> can be
              used to specify the data within the component.
    required:
      - name
      - semanticVersion
      - platform
      - clientToken
    title: CreateComponentRequest
    type: object
  CreateComponentResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      componentBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ComponentBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the component that was created
              by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  CreateContainerRecipeRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The client token used to make this request idempotent.
      components:
        allOf:
          - $ref: '#/definitions/ComponentConfigurationList'
          - description: >-
              Components for build and test that are included in the container
              recipe.
      containerType:
        allOf:
          - $ref: '#/definitions/ContainerType'
          - description: The type of container to create.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the container recipe.
      dockerfileTemplateData:
        allOf:
          - $ref: '#/definitions/InlineDockerFileTemplate'
          - description: >-
              The Dockerfile template used to build your image as an inline data
              blob.
      dockerfileTemplateUri:
        allOf:
          - $ref: '#/definitions/Uri'
          - description: >-
              The Amazon S3 URI for the Dockerfile that will be used to build
              your container image.
      imageOsVersionOverride:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Specifies the operating system version for the source image.
      instanceConfiguration:
        allOf:
          - $ref: '#/definitions/InstanceConfiguration'
          - description: >-
              A group of options that can be used to configure an instance for
              building and testing container images.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Identifies which KMS key is used to encrypt the container image.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the container recipe.
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source image for the container recipe.
      platformOverride:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: >-
              Specifies the operating system platform when you use a custom
              source image.
      semanticVersion:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the container recipe. This version
              follows the semantic version syntax.</p> <note> <p>The semantic
              version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Tags that are attached to the container recipe.
      targetRepository:
        allOf:
          - $ref: '#/definitions/TargetContainerRepository'
          - description: The destination repository for the container image.
      workingDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The working directory for use during build and test workflows.
    required:
      - containerType
      - name
      - semanticVersion
      - components
      - parentImage
      - targetRepository
      - clientToken
    title: CreateContainerRecipeRequest
    type: object
  CreateContainerRecipeResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The client token used to make this request idempotent.
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              Returns the Amazon Resource Name (ARN) of the container recipe
              that the request created.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  CreateDistributionConfigurationRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token of the distribution configuration.'
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The description of the distribution configuration.'
      distributions:
        allOf:
          - $ref: '#/definitions/DistributionList'
          - description: ' The distributions of the distribution configuration.'
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: ' The name of the distribution configuration.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: ' The tags of the distribution configuration.'
    required:
      - name
      - distributions
      - clientToken
    title: CreateDistributionConfigurationRequest
    type: object
  CreateDistributionConfigurationResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token used to make this request idempotent.'
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: ' The Amazon Resource Name (ARN) of the distribution configuration that was created by this request.'
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The request ID that uniquely identifies this request.'
    type: object
  CreateImagePipelineRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token used to make this request idempotent.'
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that is
              used to configure images created by this container pipeline.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The description of the image pipeline.'
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.'
      enhancedImageMetadataEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.'
      imageTestsConfiguration:
        allOf:
          - $ref: '#/definitions/ImageTestsConfiguration'
          - description: ' The image test configuration of the image pipeline.'
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.'
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: ' The name of the image pipeline.'
      schedule:
        allOf:
          - $ref: '#/definitions/Schedule'
          - description: ' The schedule of the image pipeline.'
      status:
        allOf:
          - $ref: '#/definitions/PipelineStatus'
          - description: ' The status of the image pipeline.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: ' The tags of the image pipeline.'
    required:
      - name
      - infrastructureConfigurationArn
      - clientToken
    title: CreateImagePipelineRequest
    type: object
  CreateImagePipelineResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token used to make this request idempotent.'
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: ' The Amazon Resource Name (ARN) of the image pipeline that was created by this request.'
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The request ID that uniquely identifies this request.'
    type: object
  CreateImageRecipeRequest:
    properties:
      additionalInstanceConfiguration:
        allOf:
          - $ref: '#/definitions/AdditionalInstanceConfiguration'
          - description: >-
              Specify additional settings and launch scripts for your build
              instances.
      blockDeviceMappings:
        allOf:
          - $ref: '#/definitions/InstanceBlockDeviceMappings'
          - description: The block device mappings of the image recipe.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      components:
        allOf:
          - $ref: '#/definitions/ComponentConfigurationList'
          - description: The components of the image recipe.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The description of the image recipe.'
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: ' The name of the image recipe.'
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The parent image of the image recipe. The value of the string can
              be the ARN of the parent image or an AMI ID. The format for the
              ARN follows this example:
              <code>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</code>.
              You can provide the specific version that you want to use, or you
              can use a wildcard in all of the fields. If you enter an AMI ID
              for the string value, you must have access to the AMI, and the AMI
              must be in the same Region in which you are using Image Builder.
      semanticVersion:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the image recipe. This version follows
              the semantic version syntax.</p> <note> <p>The semantic version
              has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: ' The tags of the image recipe.'
      workingDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The working directory used during build and test workflows.
    required:
      - name
      - semanticVersion
      - components
      - parentImage
      - clientToken
    title: CreateImageRecipeRequest
    type: object
  CreateImageRecipeResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe that was
              created by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  CreateImageRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token used to make this request idempotent.'
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that
              defines how images are configured and tested.
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.'
      enhancedImageMetadataEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.'
      imageTestsConfiguration:
        allOf:
          - $ref: '#/definitions/ImageTestsConfiguration'
          - description: ' The image tests configuration of the image.'
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: ' The tags of the image.'
    required:
      - infrastructureConfigurationArn
      - clientToken
    title: CreateImageRequest
    type: object
  CreateImageResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: ' The idempotency token used to make this request idempotent.'
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: ' The Amazon Resource Name (ARN) of the image that was created by this request.'
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ' The request ID that uniquely identifies this request.'
    type: object
  CreateInfrastructureConfigurationRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the infrastructure configuration.
      instanceProfileName:
        allOf:
          - $ref: '#/definitions/InstanceProfileNameType'
          - description: >-
              The instance profile to associate with the instance used to
              customize your Amazon EC2 AMI.
      instanceTypes:
        allOf:
          - $ref: '#/definitions/InstanceTypeList'
          - description: >-
              The instance types of the infrastructure configuration. You can
              specify one or more instance types to use for this build. The
              service will pick one of these instance types based on
              availability.
      keyPair:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The key pair of the infrastructure configuration. This can be used
              to log on to and debug the instance used to create your image.
      logging:
        allOf:
          - $ref: '#/definitions/Logging'
          - description: The logging configuration of the infrastructure configuration.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the infrastructure configuration.
      resourceTags:
        allOf:
          - $ref: '#/definitions/ResourceTagMap'
          - description: The tags attached to the resource created by Image Builder.
      securityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIds'
          - description: >-
              The security group IDs to associate with the instance used to
              customize your Amazon EC2 AMI.
      snsTopicArn:
        allOf:
          - $ref: '#/definitions/SnsTopicArn'
          - description: The SNS topic on which to send image build events.
      subnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The subnet ID in which to place the instance used to customize
              your Amazon EC2 AMI.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the infrastructure configuration.
      terminateInstanceOnFailure:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              The terminate instance on failure setting of the infrastructure
              configuration. Set to false if you want Image Builder to retain
              the instance used to configure your AMI if the build or test phase
              of your workflow fails.
    required:
      - name
      - instanceProfileName
      - clientToken
    title: CreateInfrastructureConfigurationRequest
    type: object
  CreateInfrastructureConfigurationResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              that was created by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DateTime:
    type: string
  DeleteComponentRequest:
    properties: {}
    title: DeleteComponentRequest
    type: object
  DeleteComponentResponse:
    properties:
      componentBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ComponentBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the component build version that
              was deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteContainerRecipeRequest:
    properties: {}
    title: DeleteContainerRecipeRequest
    type: object
  DeleteContainerRecipeResponse:
    properties:
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that was
              deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteDistributionConfigurationRequest:
    properties: {}
    title: DeleteDistributionConfigurationRequest
    type: object
  DeleteDistributionConfigurationResponse:
    properties:
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the distribution configuration
              that was deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteImagePipelineRequest:
    properties: {}
    title: DeleteImagePipelineRequest
    type: object
  DeleteImagePipelineResponse:
    properties:
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline that was
              deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteImageRecipeRequest:
    properties: {}
    title: DeleteImageRecipeRequest
    type: object
  DeleteImageRecipeResponse:
    properties:
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe that was
              deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteImageRequest:
    properties: {}
    title: DeleteImageRequest
    type: object
  DeleteImageResponse:
    properties:
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: The Amazon Resource Name (ARN) of the image that was deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  DeleteInfrastructureConfigurationRequest:
    properties: {}
    title: DeleteInfrastructureConfigurationRequest
    type: object
  DeleteInfrastructureConfigurationResponse:
    properties:
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              that was deleted.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  Distribution:
    description: ' Defines the settings for a specific Region.'
    properties:
      amiDistributionConfiguration:
        allOf:
          - $ref: '#/definitions/AmiDistributionConfiguration'
          - description: >-
              The specific AMI settings; for example, launch permissions or AMI
              tags.
      containerDistributionConfiguration:
        allOf:
          - $ref: '#/definitions/ContainerDistributionConfiguration'
          - description: >-
              Container distribution settings for encryption, licensing, and
              sharing in a specific Region.
      launchTemplateConfigurations:
        allOf:
          - $ref: '#/definitions/LaunchTemplateConfigurationList'
          - description: >-
              A group of launchTemplateConfiguration settings that apply to
              image distribution for specified accounts.
      licenseConfigurationArns:
        allOf:
          - $ref: '#/definitions/LicenseConfigurationArnList'
          - description: >-
              The License Manager Configuration to associate with the AMI in the
              specified Region.
      region:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The target Region.
    required:
      - region
    type: object
  DistributionConfiguration:
    description: A distribution configuration.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the distribution configuration.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this distribution configuration was created.
      dateUpdated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: >-
              The date on which this distribution configuration was last
              updated.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the distribution configuration.
      distributions:
        allOf:
          - $ref: '#/definitions/DistributionList'
          - description: >-
              The distribution objects that apply Region-specific settings for
              the deployment of the image to targeted Regions.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the distribution configuration.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the distribution configuration.
      timeoutMinutes:
        allOf:
          - $ref: '#/definitions/DistributionTimeoutMinutes'
          - description: >-
              The maximum duration in minutes for this distribution
              configuration.
    required:
      - timeoutMinutes
    type: object
  DistributionConfigurationArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
    type: string
  DistributionConfigurationSummary:
    description: A high-level overview of a distribution configuration.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the distribution configuration.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which the distribution configuration was created.
      dateUpdated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which the distribution configuration was updated.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the distribution configuration.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the distribution configuration.
      regions:
        allOf:
          - $ref: '#/definitions/RegionList'
          - description: A list of Regions where the container image is distributed to.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags associated with the distribution configuration.
    type: object
  DistributionConfigurationSummaryList:
    items:
      $ref: '#/definitions/DistributionConfigurationSummary'
    type: array
  DistributionList:
    items:
      $ref: '#/definitions/Distribution'
    type: array
  DistributionTimeoutMinutes:
    maximum: 720
    minimum: 30
    type: integer
  DockerFileTemplate:
    type: string
  EbsInstanceBlockDeviceSpecification:
    description: Amazon EBS-specific block device mapping specifications.
    properties:
      deleteOnTermination:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: Use to configure delete on termination of the associated device.
      encrypted:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: Use to configure device encryption.
      iops:
        allOf:
          - $ref: '#/definitions/EbsIopsInteger'
          - description: Use to configure device IOPS.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Use to configure the KMS key to use when encrypting the device.
      snapshotId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The snapshot that defines the device contents.
      volumeSize:
        allOf:
          - $ref: '#/definitions/EbsVolumeSizeInteger'
          - description: Use to override the device's volume size.
      volumeType:
        allOf:
          - $ref: '#/definitions/EbsVolumeType'
          - description: Use to override the device's volume type.
    type: object
  EbsIopsInteger:
    maximum: 10000
    minimum: 100
    type: integer
  EbsVolumeSizeInteger:
    maximum: 16000
    minimum: 1
    type: integer
  EbsVolumeType:
    enum:
      - standard
      - io1
      - io2
      - gp2
      - gp3
      - sc1
      - st1
    type: string
  EmptyString:
    maxLength: 0
    minLength: 0
    type: string
  Filter:
    description: >-
      A filter name and value pair that is used to return a more specific list
      of results from a list operation. Filters can be used to match a set of
      resources by specific criteria, such as tags, attributes, or IDs.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/FilterName'
          - description: The name of the filter. Filter names are case-sensitive.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The filter values. Filter values are case-sensitive.
    type: object
  FilterList:
    items:
      $ref: '#/definitions/Filter'
    maxItems: 10
    minItems: 1
    type: array
  FilterName:
    pattern: '^[a-zA-Z]{1,1024}$'
    type: string
  FilterValue:
    pattern: '^[0-9a-zA-Z./_ :-]{1,1024}$'
    type: string
  FilterValues:
    items:
      $ref: '#/definitions/FilterValue'
    maxItems: 10
    minItems: 1
    type: array
  ForbiddenException: {}
  GetComponentPolicyRequest:
    properties: {}
    title: GetComponentPolicyRequest
    type: object
  GetComponentPolicyResponse:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The component policy.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetComponentRequest:
    properties: {}
    title: GetComponentRequest
    type: object
  GetComponentResponse:
    properties:
      component:
        allOf:
          - $ref: '#/definitions/Component'
          - description: The component object associated with the specified ARN.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetContainerRecipePolicyRequest:
    properties: {}
    title: GetContainerRecipePolicyRequest
    type: object
  GetContainerRecipePolicyResponse:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The container recipe policy object that is returned.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetContainerRecipeRequest:
    properties: {}
    title: GetContainerRecipeRequest
    type: object
  GetContainerRecipeResponse:
    properties:
      containerRecipe:
        allOf:
          - $ref: '#/definitions/ContainerRecipe'
          - description: The container recipe object that is returned.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetDistributionConfigurationRequest:
    properties: {}
    title: GetDistributionConfigurationRequest
    type: object
  GetDistributionConfigurationResponse:
    properties:
      distributionConfiguration:
        allOf:
          - $ref: '#/definitions/DistributionConfiguration'
          - description: The distribution configuration object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetImagePipelineRequest:
    properties: {}
    title: GetImagePipelineRequest
    type: object
  GetImagePipelineResponse:
    properties:
      imagePipeline:
        allOf:
          - $ref: '#/definitions/ImagePipeline'
          - description: The image pipeline object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetImagePolicyRequest:
    properties: {}
    title: GetImagePolicyRequest
    type: object
  GetImagePolicyResponse:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The image policy object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetImageRecipePolicyRequest:
    properties: {}
    title: GetImageRecipePolicyRequest
    type: object
  GetImageRecipePolicyResponse:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The image recipe policy object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetImageRecipeRequest:
    properties: {}
    title: GetImageRecipeRequest
    type: object
  GetImageRecipeResponse:
    properties:
      imageRecipe:
        allOf:
          - $ref: '#/definitions/ImageRecipe'
          - description: The image recipe object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetImageRequest:
    properties: {}
    title: GetImageRequest
    type: object
  GetImageResponse:
    properties:
      image:
        allOf:
          - $ref: '#/definitions/Image'
          - description: The image object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  GetInfrastructureConfigurationRequest:
    description: ' GetInfrastructureConfiguration request object.'
    properties: {}
    title: GetInfrastructureConfigurationRequest
    type: object
  GetInfrastructureConfigurationResponse:
    description: GetInfrastructureConfiguration response object.
    properties:
      infrastructureConfiguration:
        allOf:
          - $ref: '#/definitions/InfrastructureConfiguration'
          - description: The infrastructure configuration object.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  IdempotentParameterMismatchException: {}
  Image:
    description: >-
      An Image Builder image. You must specify exactly one recipe for the image
      – either a container recipe (<code>containerRecipe</code>), which creates
      a container image, or an image recipe (<code>imageRecipe</code>), which
      creates an AMI.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the image.</p> <note>
              <p>Semantic versioning is included in each object's Amazon
              Resource Name (ARN), at the level that applies to that object as
              follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not
              include specific values in any of the nodes. The nodes are either
              left off entirely, or they are specified as wildcards, for
              example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first
              three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li>
              <li> <p>Build version ARNs have all four nodes, and point to a
              specific build for a specific version of an object.</p> </li>
              </ol> </note>
      containerRecipe:
        allOf:
          - $ref: '#/definitions/ContainerRecipe'
          - description: >-
              The recipe that is used to create an Image Builder container
              image.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image was created.
      distributionConfiguration:
        allOf:
          - $ref: '#/definitions/DistributionConfiguration'
          - description: The distribution configuration used when creating this image.
      enhancedImageMetadataEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
      imageRecipe:
        allOf:
          - $ref: '#/definitions/ImageRecipe'
          - description: The image recipe used when creating the image.
      imageTestsConfiguration:
        allOf:
          - $ref: '#/definitions/ImageTestsConfiguration'
          - description: The image tests configuration used when creating this image.
      infrastructureConfiguration:
        allOf:
          - $ref: '#/definitions/InfrastructureConfiguration'
          - description: The infrastructure used when creating this image.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image.
      osVersion:
        allOf:
          - $ref: '#/definitions/OsVersion'
          - description: >-
              The operating system version of the instance. For example, Amazon
              Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
      outputResources:
        allOf:
          - $ref: '#/definitions/OutputResources'
          - description: The output resources produced when creating this image.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the image.
      sourcePipelineArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline that created
              this image.
      sourcePipelineName:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image pipeline that created this image.
      state:
        allOf:
          - $ref: '#/definitions/ImageState'
          - description: The state of the image.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the image.
      type:
        allOf:
          - $ref: '#/definitions/ImageType'
          - description: Specifies whether this is an AMI or container image.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the image.</p> <note> <p>The semantic
              version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p>
              <b>Filtering:</b> When you retrieve or reference a resource with a
              semantic version, you can use wildcards (x) to filter your
              results. When you use a wildcard in any node, all nodes to the
              right of the first wildcard must also be wildcards. For example,
              specifying "1.2.x", or "1.x.x" works to filter list results, but
              neither "1.x.2", nor "x.2.x" will work. You do not have to specify
              the build - Image Builder automatically uses a wildcard for that,
              if applicable.</p> </note>
    type: object
  ImageBuildVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
    type: string
  ImageBuilderArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\.(?:x|[0-9]+)\.(?:x|[0-9]+))(?:/[0-9]+)?)?$
    type: string
  ImagePackage:
    description: Represents a package installed on an Image Builder image.
    properties:
      packageName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the package as reported to the operating system
              package manager.
      packageVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The version of the package as reported to the operating system
              package manager.
    type: object
  ImagePackageList:
    items:
      $ref: '#/definitions/ImagePackage'
    type: array
  ImagePipeline:
    description: Details of an image pipeline.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the image pipeline.
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that is
              used for this pipeline.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image pipeline was created.
      dateLastRun:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image pipeline was last run.
      dateNextRun:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image pipeline will next be run.
      dateUpdated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image pipeline was last updated.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the image pipeline.
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the distribution configuration
              associated with this image pipeline.
      enhancedImageMetadataEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe associated with
              this image pipeline.
      imageTestsConfiguration:
        allOf:
          - $ref: '#/definitions/ImageTestsConfiguration'
          - description: The image tests configuration of the image pipeline.
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              associated with this image pipeline.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image pipeline.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the image pipeline.
      schedule:
        allOf:
          - $ref: '#/definitions/Schedule'
          - description: The schedule of the image pipeline.
      status:
        allOf:
          - $ref: '#/definitions/PipelineStatus'
          - description: The status of the image pipeline.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of this image pipeline.
    type: object
  ImagePipelineArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
    type: string
  ImagePipelineList:
    items:
      $ref: '#/definitions/ImagePipeline'
    type: array
  ImageRecipe:
    description: An image recipe.
    properties:
      additionalInstanceConfiguration:
        allOf:
          - $ref: '#/definitions/AdditionalInstanceConfiguration'
          - description: >-
              Before you create a new AMI, Image Builder launches temporary
              Amazon EC2 instances to build and test your image configuration.
              Instance configuration adds a layer of control over those
              instances. You can define settings and add scripts to run when an
              instance is launched from your AMI.
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the image recipe.
      blockDeviceMappings:
        allOf:
          - $ref: '#/definitions/InstanceBlockDeviceMappings'
          - description: >-
              The block device mappings to apply when creating images from this
              recipe.
      components:
        allOf:
          - $ref: '#/definitions/ComponentConfigurationList'
          - description: The components of the image recipe.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image recipe was created.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the image recipe.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image recipe.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the image recipe.
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The parent image of the image recipe.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the image recipe.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the image recipe.
      type:
        allOf:
          - $ref: '#/definitions/ImageType'
          - description: >-
              Specifies which type of image is created by the recipe - an AMI or
              a container image.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: The version of the image recipe.
      workingDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The working directory to be used during build and test workflows.
    type: object
  ImageRecipeArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
    type: string
  ImageRecipeSummary:
    description: A summary of an image recipe.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the image recipe.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image recipe was created.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image recipe.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the image recipe.
      parentImage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The parent image of the image recipe.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the image recipe.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the image recipe.
    type: object
  ImageRecipeSummaryList:
    items:
      $ref: '#/definitions/ImageRecipeSummary'
    type: array
  ImageState:
    description: ' Image state shows the image status and the reason for that status.'
    properties:
      reason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The reason for the image's status.
      status:
        allOf:
          - $ref: '#/definitions/ImageStatus'
          - description: The status of the image.
    type: object
  ImageStatus:
    enum:
      - PENDING
      - CREATING
      - BUILDING
      - TESTING
      - DISTRIBUTING
      - INTEGRATING
      - AVAILABLE
      - CANCELLED
      - FAILED
      - DEPRECATED
      - DELETED
    type: string
  ImageSummary:
    description: An image summary.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: The Amazon Resource Name (ARN) of the image.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which this image was created.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the image.
      osVersion:
        allOf:
          - $ref: '#/definitions/OsVersion'
          - description: >-
              The operating system version of the instance. For example, Amazon
              Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
      outputResources:
        allOf:
          - $ref: '#/definitions/OutputResources'
          - description: The output resources produced when creating this image.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the image.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the image.
      state:
        allOf:
          - $ref: '#/definitions/ImageState'
          - description: The state of the image.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the image.
      type:
        allOf:
          - $ref: '#/definitions/ImageType'
          - description: Specifies whether this is an AMI or container image.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: The version of the image.
    type: object
  ImageSummaryList:
    items:
      $ref: '#/definitions/ImageSummary'
    type: array
  ImageTestsConfiguration:
    description: Image tests configuration.
    properties:
      imageTestsEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: Defines if tests should be executed when building this image.
      timeoutMinutes:
        allOf:
          - $ref: '#/definitions/ImageTestsTimeoutMinutes'
          - description: The maximum time in minutes that tests are permitted to run.
    type: object
  ImageTestsTimeoutMinutes:
    maximum: 1440
    minimum: 60
    type: integer
  ImageType:
    enum:
      - AMI
      - DOCKER
    type: string
  ImageVersion:
    description: >-
      The defining characteristics of a specific version of an Image Builder
      image.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of a specific version of an
              Image Builder image.</p> <note> <p>Semantic versioning is included
              in each object's Amazon Resource Name (ARN), at the level that
              applies to that object as follows:</p> <ol> <li> <p>Versionless
              ARNs and Name ARNs do not include specific values in any of the
              nodes. The nodes are either left off entirely, or they are
              specified as wildcards, for example: x.x.x.</p> </li> <li>
              <p>Version ARNs have only the first three nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build
              version ARNs have all four nodes, and point to a specific build
              for a specific version of an object.</p> </li> </ol> </note>
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: >-
              The date on which this specific version of the Image Builder image
              was created.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of this specific version of an Image Builder image.
      osVersion:
        allOf:
          - $ref: '#/definitions/OsVersion'
          - description: >-
              The operating system version of the Amazon EC2 build instance. For
              example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server
              2019.
      owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the image version.
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: >-
              The platform of the image version, for example "Windows" or
              "Linux".
      type:
        allOf:
          - $ref: '#/definitions/ImageType'
          - description: Specifies whether this image is an AMI or a container image.
      version:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>Details for a specific version of an Image Builder image. This
              version follows the semantic version syntax.</p> <note> <p>The
              semantic version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Assignment:</b> For the first three nodes you can
              assign any positive integer value, including zero, with an upper
              limit of 2^30-1, or 1073741823 for each node. Image Builder
              automatically assigns the build number, and that is not open for
              updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern
              that adheres to the assignment requirements for the nodes that you
              can assign. For example, you might choose a software version
              pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p>
              <b>Filtering:</b> When you retrieve or reference a resource with a
              semantic version, you can use wildcards (x) to filter your
              results. When you use a wildcard in any node, all nodes to the
              right of the first wildcard must also be wildcards. For example,
              specifying "1.2.x", or "1.x.x" works to filter list results, but
              neither "1.x.2", nor "x.2.x" will work. You do not have to specify
              the build - Image Builder automatically uses a wildcard for that,
              if applicable.</p> </note>
    type: object
  ImageVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
    type: string
  ImageVersionArnOrBuildVersionArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/(?:(?:([0-9]+|x)\.([0-9]+|x)\.([0-9]+|x))|(?:[0-9]+\.[0-9]+\.[0-9]+/[0-9]+))$
    type: string
  ImageVersionList:
    items:
      $ref: '#/definitions/ImageVersion'
    type: array
  ImportComponentRequest:
    properties:
      changeDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The change description of the component. Describes what change has
              been made in this version, or what makes this version different
              from other versions of this component.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token of the component.
      data:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The data of the component. Used to specify the data inline. Either
              <code>data</code> or <code>uri</code> can be used to specify the
              data within the component.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The description of the component. Describes the contents of the
              component.
      format:
        allOf:
          - $ref: '#/definitions/ComponentFormat'
          - description: The format of the resource that you want to import as a component.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of the KMS key that should be used to encrypt this
              component.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: ' The name of the component.'
      platform:
        allOf:
          - $ref: '#/definitions/Platform'
          - description: The platform of the component.
      semanticVersion:
        allOf:
          - $ref: '#/definitions/VersionNumber'
          - description: >-
              <p>The semantic version of the component. This version follows the
              semantic version syntax.</p> <note> <p>The semantic version has
              four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Filtering:</b> When you retrieve or reference a
              resource with a semantic version, you can use wildcards (x) to
              filter your results. When you use a wildcard in any node, all
              nodes to the right of the first wildcard must also be wildcards.
              For example, specifying "1.2.x", or "1.x.x" works to filter list
              results, but neither "1.x.2", nor "x.2.x" will work. You do not
              have to specify the build - Image Builder automatically uses a
              wildcard for that, if applicable.</p> </note>
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the component.
      type:
        allOf:
          - $ref: '#/definitions/ComponentType'
          - description: >-
              The type of the component denotes whether the component is used to
              build the image, or only to test it.
      uri:
        allOf:
          - $ref: '#/definitions/Uri'
          - description: >-
              The uri of the component. Must be an Amazon S3 URL and the
              requester must have permission to access the Amazon S3 bucket. If
              you use Amazon S3, you can specify component content up to your
              service quota. Either <code>data</code> or <code>uri</code> can be
              used to specify the data within the component.
    required:
      - name
      - semanticVersion
      - type
      - format
      - platform
      - clientToken
    title: ImportComponentRequest
    type: object
  ImportComponentResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      componentBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ComponentBuildVersionArn'
          - description: The Amazon Resource Name (ARN) of the imported component.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  InfrastructureConfiguration:
    description: Details of the infrastructure configuration.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure
              configuration.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which the infrastructure configuration was created.
      dateUpdated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: >-
              The date on which the infrastructure configuration was last
              updated.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the infrastructure configuration.
      instanceProfileName:
        allOf:
          - $ref: '#/definitions/InstanceProfileNameType'
          - description: The instance profile of the infrastructure configuration.
      instanceTypes:
        allOf:
          - $ref: '#/definitions/InstanceTypeList'
          - description: The instance types of the infrastructure configuration.
      keyPair:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon EC2 key pair of the infrastructure configuration.
      logging:
        allOf:
          - $ref: '#/definitions/Logging'
          - description: The logging configuration of the infrastructure configuration.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the infrastructure configuration.
      resourceTags:
        allOf:
          - $ref: '#/definitions/ResourceTagMap'
          - description: The tags attached to the resource created by Image Builder.
      securityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIds'
          - description: The security group IDs of the infrastructure configuration.
      snsTopicArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The SNS topic Amazon Resource Name (ARN) of the infrastructure
              configuration.
      subnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The subnet ID of the infrastructure configuration.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the infrastructure configuration.
      terminateInstanceOnFailure:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              The terminate instance on failure configuration of the
              infrastructure configuration.
    type: object
  InfrastructureConfigurationArn:
    pattern: >-
      ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
    type: string
  InfrastructureConfigurationSummary:
    description: The infrastructure used when building Amazon EC2 AMIs.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/ImageBuilderArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure
              configuration.
      dateCreated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: The date on which the infrastructure configuration was created.
      dateUpdated:
        allOf:
          - $ref: '#/definitions/DateTime'
          - description: >-
              The date on which the infrastructure configuration was last
              updated.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the infrastructure configuration.
      instanceProfileName:
        allOf:
          - $ref: '#/definitions/InstanceProfileNameType'
          - description: The instance profile of the infrastructure configuration.
      instanceTypes:
        allOf:
          - $ref: '#/definitions/InstanceTypeList'
          - description: The instance types of the infrastructure configuration.
      name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name of the infrastructure configuration.
      resourceTags:
        allOf:
          - $ref: '#/definitions/ResourceTagMap'
          - description: The tags attached to the image created by Image Builder.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags of the infrastructure configuration.
    type: object
  InfrastructureConfigurationSummaryList:
    items:
      $ref: '#/definitions/InfrastructureConfigurationSummary'
    type: array
  InlineComponentData:
    maxLength: 16000
    minLength: 1
    pattern: '[^\x00]+'
    type: string
  InlineDockerFileTemplate:
    maxLength: 16000
    minLength: 1
    pattern: '[^\x00]+'
    type: string
  InstanceBlockDeviceMapping:
    description: >-
      Defines block device mappings for the instance used to configure your
      image.
    properties:
      deviceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The device to which these mappings apply.
      ebs:
        allOf:
          - $ref: '#/definitions/EbsInstanceBlockDeviceSpecification'
          - description: Use to manage Amazon EBS-specific configuration for this mapping.
      noDevice:
        allOf:
          - $ref: '#/definitions/EmptyString'
          - description: Use to remove a mapping from the parent image.
      virtualName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Use to manage instance ephemeral devices.
    type: object
  InstanceBlockDeviceMappings:
    items:
      $ref: '#/definitions/InstanceBlockDeviceMapping'
    type: array
  InstanceConfiguration:
    description: >-
      Defines a custom source AMI and block device mapping configurations of an
      instance used for building and testing container images.
    properties:
      blockDeviceMappings:
        allOf:
          - $ref: '#/definitions/InstanceBlockDeviceMappings'
          - description: >-
              Defines the block devices to attach for building an instance from
              this Image Builder AMI.
      image:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The AMI ID to use as the base image for a container build and test
              instance. If not specified, Image Builder will use the appropriate
              ECS-optimized AMI as a base image.
    type: object
  InstanceProfileNameType:
    maxLength: 256
    minLength: 1
    pattern: '^[\w+=,.@-]+$'
    type: string
  InstanceType:
    type: string
  InstanceTypeList:
    items:
      $ref: '#/definitions/InstanceType'
    type: array
  InvalidPaginationTokenException: {}
  InvalidParameterCombinationException: {}
  InvalidParameterException: {}
  InvalidParameterValueException: {}
  InvalidRequestException: {}
  InvalidVersionNumberException: {}
  LaunchPermissionConfiguration:
    description: >-
      Describes the configuration for a launch permission. The launch permission
      modification request is sent to the <a
      href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html">Amazon
      EC2 ModifyImageAttribute</a> API on behalf of the user for each Region
      they have selected to distribute the AMI. To make an AMI public, set the
      launch permission authorized accounts to <code>all</code>. See the
      examples for making an AMI public at <a
      href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html">Amazon
      EC2 ModifyImageAttribute</a>.
    properties:
      userGroups:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The name of the group.
      userIds:
        allOf:
          - $ref: '#/definitions/AccountList'
          - description: The Amazon Web Services account ID.
    type: object
  LaunchTemplateConfiguration:
    description: Identifies an Amazon EC2 launch template to use for a specific account.
    properties:
      accountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The account ID that this configuration applies to.
      launchTemplateId:
        allOf:
          - $ref: '#/definitions/LaunchTemplateId'
          - description: Identifies the Amazon EC2 launch template to use.
      setDefaultVersion:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Set the specified Amazon EC2 launch template as the default launch
              template for the specified account.
    required:
      - launchTemplateId
    type: object
  LaunchTemplateConfigurationList:
    items:
      $ref: '#/definitions/LaunchTemplateConfiguration'
    maxItems: 100
    minItems: 1
    type: array
  LaunchTemplateId:
    pattern: '^lt-[a-z0-9-_]{17}$'
    type: string
  LicenseConfigurationArn:
    pattern: >-
      ^arn:aws[^:]*:license-manager:[^:]+:[0-9]{12}:license-configuration:lic-[a-z0-9-_]{32}$
    type: string
  LicenseConfigurationArnList:
    items:
      $ref: '#/definitions/LicenseConfigurationArn'
    maxItems: 50
    minItems: 1
    type: array
  ListComponentBuildVersionsRequest:
    properties:
      componentVersionArn:
        allOf:
          - $ref: '#/definitions/ComponentVersionArn'
          - description: >-
              The component version Amazon Resource Name (ARN) whose versions
              you want to list.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    required:
      - componentVersionArn
    title: ListComponentBuildVersionsRequest
    type: object
  ListComponentBuildVersionsResponse:
    properties:
      componentSummaryList:
        allOf:
          - $ref: '#/definitions/ComponentSummaryList'
          - description: >-
              The list of component summaries for the specified semantic
              version.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListComponentsRequest:
    properties:
      byName:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Returns the list of component build versions for the specified
              name.
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>description</code> </p> </li> <li> <p> <code>name</code>
              </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p>
              <code>supportedOsVersion</code> </p> </li> <li> <p>
              <code>type</code> </p> </li> <li> <p> <code>version</code> </p>
              </li> </ul>
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
      owner:
        allOf:
          - $ref: '#/definitions/Ownership'
          - description: >-
              The owner defines which components you want to list. By default,
              this request will only show components owned by your account. You
              can use this field to specify if you want to view components owned
              by yourself, by Amazon, or those components that have been shared
              with you by other customers.
    title: ListComponentsRequest
    type: object
  ListComponentsResponse:
    properties:
      componentVersionList:
        allOf:
          - $ref: '#/definitions/ComponentVersionList'
          - description: >-
              <p>The list of component semantic versions.</p> <note> <p>The
              semantic version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> </note>
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListContainerRecipesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>containerType</code> </p> </li> <li> <p>
              <code>name</code> </p> </li> <li> <p> <code>parentImage</code>
              </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum number of results to return in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Provides a token for pagination, which determines where to begin
              the next set of results when the current set reaches the maximum
              for one request.
      owner:
        allOf:
          - $ref: '#/definitions/Ownership'
          - description: >-
              Returns container recipes belonging to the specified owner, that
              have been shared with you. You can omit this field to return
              container recipes belonging to your account.
    title: ListContainerRecipesRequest
    type: object
  ListContainerRecipesResponse:
    properties:
      containerRecipeSummaryList:
        allOf:
          - $ref: '#/definitions/ContainerRecipeSummaryList'
          - description: The list of container recipes returned for the request.
      nextToken:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The next token field is used for paginated responses. When this is
              not empty, there are additional container recipes that the service
              has not included in this response. Use this token with the next
              request to retrieve additional list items.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListDistributionConfigurationsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: You can filter on <code>name</code> to streamline results.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    title: ListDistributionConfigurationsRequest
    type: object
  ListDistributionConfigurationsResponse:
    properties:
      distributionConfigurationSummaryList:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationSummaryList'
          - description: The list of distributions.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImageBuildVersionsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code>
              </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p>
              <code>type</code> </p> </li> <li> <p> <code>version</code> </p>
              </li> </ul>
      imageVersionArn:
        allOf:
          - $ref: '#/definitions/ImageVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image whose build versions
              you want to retrieve.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    required:
      - imageVersionArn
    title: ListImageBuildVersionsRequest
    type: object
  ListImageBuildVersionsResponse:
    properties:
      imageSummaryList:
        allOf:
          - $ref: '#/definitions/ImageSummaryList'
          - description: The list of image build versions.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImagePackagesRequest:
    properties:
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              Filter results for the ListImagePackages request by the Image
              Build Version ARN
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: >-
              The maxiumum number of results to return from the
              ListImagePackages request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    required:
      - imageBuildVersionArn
    title: ListImagePackagesRequest
    type: object
  ListImagePackagesResponse:
    properties:
      imagePackageList:
        allOf:
          - $ref: '#/definitions/ImagePackageList'
          - description: The list of Image Packages returned in the response.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImagePipelineImagesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>name</code> </p> </li> <li> <p> <code>version</code>
              </p> </li> </ul>
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline whose images
              you want to view.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    required:
      - imagePipelineArn
    title: ListImagePipelineImagesRequest
    type: object
  ListImagePipelineImagesResponse:
    properties:
      imageSummaryList:
        allOf:
          - $ref: '#/definitions/ImageSummaryList'
          - description: The list of images built by this pipeline.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImagePipelinesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>description</code> </p> </li> <li> <p>
              <code>distributionConfigurationArn</code> </p> </li> <li> <p>
              <code>imageRecipeArn</code> </p> </li> <li> <p>
              <code>infrastructureConfigurationArn</code> </p> </li> <li> <p>
              <code>name</code> </p> </li> <li> <p> <code>status</code> </p>
              </li> </ul>
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    title: ListImagePipelinesRequest
    type: object
  ListImagePipelinesResponse:
    properties:
      imagePipelineList:
        allOf:
          - $ref: '#/definitions/ImagePipelineList'
          - description: The list of image pipelines.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImageRecipesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code>
              </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
      owner:
        allOf:
          - $ref: '#/definitions/Ownership'
          - description: >-
              The owner defines which image recipes you want to list. By
              default, this request will only show image recipes owned by your
              account. You can use this field to specify if you want to view
              image recipes owned by yourself, by Amazon, or those image recipes
              that have been shared with you by other customers.
    title: ListImageRecipesRequest
    type: object
  ListImageRecipesResponse:
    properties:
      imageRecipeSummaryList:
        allOf:
          - $ref: '#/definitions/ImageRecipeSummaryList'
          - description: The list of image pipelines.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListImagesRequest:
    properties:
      byName:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Requests a list of images with a specific recipe name.
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Use the following filters to streamline results:</p> <ul> <li>
              <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code>
              </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p>
              <code>type</code> </p> </li> <li> <p> <code>version</code> </p>
              </li> </ul>
      includeDeprecated:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: Includes deprecated images in the response list.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
      owner:
        allOf:
          - $ref: '#/definitions/Ownership'
          - description: >-
              The owner defines which images you want to list. By default, this
              request will only show images owned by your account. You can use
              this field to specify if you want to view images owned by
              yourself, by Amazon, or those images that have been shared with
              you by other customers.
    title: ListImagesRequest
    type: object
  ListImagesResponse:
    properties:
      imageVersionList:
        allOf:
          - $ref: '#/definitions/ImageVersionList'
          - description: >-
              <p>The list of image semantic versions.</p> <note> <p>The semantic
              version has four nodes:
              &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
              assign values for the first three, and can filter on all of
              them.</p> <p> <b>Filtering:</b> When you retrieve or reference a
              resource with a semantic version, you can use wildcards (x) to
              filter your results. When you use a wildcard in any node, all
              nodes to the right of the first wildcard must also be wildcards.
              For example, specifying "1.2.x", or "1.x.x" works to filter list
              results, but neither "1.x.2", nor "x.2.x" will work. You do not
              have to specify the build - Image Builder automatically uses a
              wildcard for that, if applicable.</p> </note>
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListInfrastructureConfigurationsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: You can filter on <code>name</code> to streamline results.
      maxResults:
        allOf:
          - $ref: '#/definitions/RestrictedInteger'
          - description: The maximum items to return in a request.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token to specify where to start paginating. This is the
              NextToken from a previously truncated response.
    title: ListInfrastructureConfigurationsRequest
    type: object
  ListInfrastructureConfigurationsResponse:
    properties:
      infrastructureConfigurationSummaryList:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationSummaryList'
          - description: The list of infrastructure configurations.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The next token used for paginated responses. When this is not
              empty, there are additional elements that the service has not
              included in this request. Use this token with the next request to
              retrieve additional objects.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags for the specified resource.
    type: object
  Logging:
    description: Logging configuration defines where Image Builder uploads your logs.
    properties:
      s3Logs:
        allOf:
          - $ref: '#/definitions/S3Logs'
          - description: The Amazon S3 logging configuration.
    type: object
  NonEmptyString:
    maxLength: 1024
    minLength: 1
    type: string
  NullableBoolean:
    type: boolean
  OsVersion:
    minLength: 1
    type: string
  OsVersionList:
    items:
      $ref: '#/definitions/OsVersion'
    maxItems: 25
    minItems: 1
    type: array
  OutputResources:
    description: The resources produced by this image.
    properties:
      amis:
        allOf:
          - $ref: '#/definitions/AmiList'
          - description: The Amazon EC2 AMIs created by this image.
      containers:
        allOf:
          - $ref: '#/definitions/ContainerList'
          - description: >-
              Container images that the pipeline has generated and stored in the
              output repository.
    type: object
  Ownership:
    enum:
      - Self
      - Shared
      - Amazon
    type: string
  PaginationToken:
    maxLength: 65535
    minLength: 1
    type: string
  PipelineExecutionStartCondition:
    enum:
      - EXPRESSION_MATCH_ONLY
      - EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE
    type: string
  PipelineStatus:
    enum:
      - DISABLED
      - ENABLED
    type: string
  Platform:
    enum:
      - Windows
      - Linux
    type: string
  PutComponentPolicyRequest:
    properties:
      componentArn:
        allOf:
          - $ref: '#/definitions/ComponentBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the component that this policy
              should be applied to.
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The policy to apply.
    required:
      - componentArn
      - policy
    title: PutComponentPolicyRequest
    type: object
  PutComponentPolicyResponse:
    properties:
      componentArn:
        allOf:
          - $ref: '#/definitions/ComponentBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the component that this policy
              was applied to.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  PutContainerRecipePolicyRequest:
    properties:
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that this
              policy should be applied to.
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The policy to apply to the container recipe.
    required:
      - containerRecipeArn
      - policy
    title: PutContainerRecipePolicyRequest
    type: object
  PutContainerRecipePolicyResponse:
    properties:
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container recipe that this
              policy was applied to.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  PutImagePolicyRequest:
    properties:
      imageArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image that this policy
              should be applied to.
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The policy to apply.
    required:
      - imageArn
      - policy
    title: PutImagePolicyRequest
    type: object
  PutImagePolicyResponse:
    properties:
      imageArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image that this policy was
              applied to.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  PutImageRecipePolicyRequest:
    properties:
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe that this
              policy should be applied to.
      policy:
        allOf:
          - $ref: '#/definitions/ResourcePolicyDocument'
          - description: The policy to apply.
    required:
      - imageRecipeArn
      - policy
    title: PutImageRecipePolicyRequest
    type: object
  PutImageRecipePolicyResponse:
    properties:
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe that this
              policy was applied to.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  RegionList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  ResourceAlreadyExistsException: {}
  ResourceDependencyException: {}
  ResourceInUseException: {}
  ResourceName:
    pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
    type: string
  ResourceNotFoundException: {}
  ResourcePolicyDocument:
    maxLength: 30000
    minLength: 1
    type: string
  ResourceTagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 30
    minProperties: 1
    type: object
  RestrictedInteger:
    maximum: 25
    minimum: 1
    type: integer
  S3Logs:
    description: Amazon S3 logging configuration.
    properties:
      s3BucketName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon S3 bucket in which to store the logs.
      s3KeyPrefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon S3 path in which to store the logs.
    type: object
  Schedule:
    description: >-
      A schedule configures how often and when a pipeline will automatically
      create a new image.
    properties:
      pipelineExecutionStartCondition:
        allOf:
          - $ref: '#/definitions/PipelineExecutionStartCondition'
          - description: >-
              The condition configures when the pipeline should trigger a new
              image build. When the <code>pipelineExecutionStartCondition</code>
              is set to
              <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>,
              and you use semantic version filters on the source image or
              components in your image recipe, EC2 Image Builder will build a
              new image only when there are new versions of the image or
              components in your recipe that match the semantic version filter.
              When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will
              build a new image every time the CRON expression matches the
              current time. For semantic version syntax, see <a
              href="https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html">CreateComponent</a>
              in the <i> EC2 Image Builder API Reference</i>.
      scheduleExpression:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The cron expression determines how often EC2 Image Builder
              evaluates your <code>pipelineExecutionStartCondition</code>.</p>
              <p>For information on how to format a cron expression in Image
              Builder, see <a
              href="https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html">Use
              cron expressions in EC2 Image Builder</a>.</p>
      timezone:
        allOf:
          - $ref: '#/definitions/Timezone'
          - description: >-
              The timezone that applies to the scheduling expression. For
              example, "Etc/UTC", "America/Los_Angeles" in the <a
              href="https://www.joda.org/joda-time/timezones.html">IANA timezone
              format</a>. If not specified this defaults to UTC.
    type: object
  SecurityGroupIds:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  ServiceException: {}
  ServiceQuotaExceededException: {}
  ServiceUnavailableException: {}
  SnsTopicArn:
    pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'
    type: string
  StartImagePipelineExecutionRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline that you want
              to manually invoke.
    required:
      - imagePipelineArn
      - clientToken
    title: StartImagePipelineExecutionRequest
    type: object
  StartImagePipelineExecutionResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imageBuildVersionArn:
        allOf:
          - $ref: '#/definitions/ImageBuildVersionArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image that was created by
              this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  StringList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  SystemsManagerAgent:
    description: Contains settings for the SSM agent on your build instance.
    properties:
      uninstallAfterBuild:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              Controls whether the SSM agent is removed from your final build
              image, prior to creating the new AMI. If this is set to true, then
              the agent is removed from the final image. If it's set to false,
              then the agent is left in, so that it is included in the new AMI.
              The default value is false.
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags to apply to the resource.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  TargetContainerRepository:
    description: The container repository where the output container image is stored.
    properties:
      repositoryName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the container repository where the output container
              image is stored. This name is prefixed by the repository location.
      service:
        allOf:
          - $ref: '#/definitions/ContainerRepositoryService'
          - description: Specifies the service in which this image was registered.
    required:
      - service
      - repositoryName
    type: object
  Timezone:
    maxLength: 100
    minLength: 3
    pattern: '[a-zA-Z0-9]{2,}(?:\/[a-zA-z0-9-_+]+)*'
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateDistributionConfigurationRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token of the distribution configuration.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the distribution configuration.
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the distribution configuration
              that you want to update.
      distributions:
        allOf:
          - $ref: '#/definitions/DistributionList'
          - description: The distributions of the distribution configuration.
    required:
      - distributionConfigurationArn
      - distributions
      - clientToken
    title: UpdateDistributionConfigurationRequest
    type: object
  UpdateDistributionConfigurationResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the distribution configuration
              that was updated by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  UpdateImagePipelineRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      containerRecipeArn:
        allOf:
          - $ref: '#/definitions/ContainerRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the container pipeline to
              update.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the image pipeline.
      distributionConfigurationArn:
        allOf:
          - $ref: '#/definitions/DistributionConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the distribution configuration
              that will be used to configure and distribute images updated by
              this image pipeline.
      enhancedImageMetadataEnabled:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline that you want
              to update.
      imageRecipeArn:
        allOf:
          - $ref: '#/definitions/ImageRecipeArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image recipe that will be
              used to configure images updated by this image pipeline.
      imageTestsConfiguration:
        allOf:
          - $ref: '#/definitions/ImageTestsConfiguration'
          - description: The image test configuration of the image pipeline.
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              that will be used to build images updated by this image pipeline.
      schedule:
        allOf:
          - $ref: '#/definitions/Schedule'
          - description: The schedule of the image pipeline.
      status:
        allOf:
          - $ref: '#/definitions/PipelineStatus'
          - description: The status of the image pipeline.
    required:
      - imagePipelineArn
      - infrastructureConfigurationArn
      - clientToken
    title: UpdateImagePipelineRequest
    type: object
  UpdateImagePipelineResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      imagePipelineArn:
        allOf:
          - $ref: '#/definitions/ImagePipelineArn'
          - description: >-
              The Amazon Resource Name (ARN) of the image pipeline that was
              updated by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  UpdateInfrastructureConfigurationRequest:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the infrastructure configuration.
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              that you want to update.
      instanceProfileName:
        allOf:
          - $ref: '#/definitions/InstanceProfileNameType'
          - description: >-
              The instance profile to associate with the instance used to
              customize your Amazon EC2 AMI.
      instanceTypes:
        allOf:
          - $ref: '#/definitions/InstanceTypeList'
          - description: >-
              The instance types of the infrastructure configuration. You can
              specify one or more instance types to use for this build. The
              service will pick one of these instance types based on
              availability.
      keyPair:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The key pair of the infrastructure configuration. This can be used
              to log on to and debug the instance used to create your image.
      logging:
        allOf:
          - $ref: '#/definitions/Logging'
          - description: The logging configuration of the infrastructure configuration.
      resourceTags:
        allOf:
          - $ref: '#/definitions/ResourceTagMap'
          - description: The tags attached to the resource created by Image Builder.
      securityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIds'
          - description: >-
              The security group IDs to associate with the instance used to
              customize your Amazon EC2 AMI.
      snsTopicArn:
        allOf:
          - $ref: '#/definitions/SnsTopicArn'
          - description: The SNS topic on which to send image build events.
      subnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The subnet ID to place the instance used to customize your Amazon
              EC2 AMI in.
      terminateInstanceOnFailure:
        allOf:
          - $ref: '#/definitions/NullableBoolean'
          - description: >-
              The terminate instance on failure setting of the infrastructure
              configuration. Set to false if you want Image Builder to retain
              the instance used to configure your AMI if the build or test phase
              of your workflow fails.
    required:
      - infrastructureConfigurationArn
      - instanceProfileName
      - clientToken
    title: UpdateInfrastructureConfigurationRequest
    type: object
  UpdateInfrastructureConfigurationResponse:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: The idempotency token used to make this request idempotent.
      infrastructureConfigurationArn:
        allOf:
          - $ref: '#/definitions/InfrastructureConfigurationArn'
          - description: >-
              The Amazon Resource Name (ARN) of the infrastructure configuration
              that was updated by this request.
      requestId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The request ID that uniquely identifies this request.
    type: object
  Uri:
    type: string
  UserDataOverride:
    maxLength: 21847
    minLength: 1
    pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
    type: string
  VersionNumber:
    pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/imagebuilder/'
host: imagebuilder.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    EC2 Image Builder is a fully managed Amazon Web Services service that makes
    it easier to automate the creation, management, and deployment of
    customized, secure, and up-to-date "golden" server images that are
    pre-installed and pre-configured with software and settings to meet specific
    IT standards.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: EC2 Image Builder
  version: '2019-12-02'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: imagebuilder
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/imagebuilder-2019-12-02.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: imagebuilder
paths:
  /CancelImageCreation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        CancelImageCreation cancels the creation of Image. This operation can
        only be used on images in a non-terminal state.
      operationId: CancelImageCreation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              imageBuildVersionArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image whose creation you
                  want to cancel.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
                type: string
            required:
              - imageBuildVersionArn
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelImageCreationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /CreateComponent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Creates a new component that can be used to build, validate, test, and
        assess your image.
      operationId: CreateComponent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              changeDescription:
                description: >-
                  The change description of the component. Describes what change
                  has been made in this version, or what makes this version
                  different from other versions of this component.
                maxLength: 1024
                minLength: 1
                type: string
              clientToken:
                description: The idempotency token of the component.
                maxLength: 36
                minLength: 1
                type: string
              data:
                description: >-
                  The data of the component. Used to specify the data inline.
                  Either <code>data</code> or <code>uri</code> can be used to
                  specify the data within the component.
                maxLength: 16000
                minLength: 1
                pattern: '[^\x00]+'
                type: string
              description:
                description: >-
                  The description of the component. Describes the contents of
                  the component.
                maxLength: 1024
                minLength: 1
                type: string
              kmsKeyId:
                description: >-
                  The ID of the KMS key that should be used to encrypt this
                  component.
                maxLength: 1024
                minLength: 1
                type: string
              name:
                description: The name of the component.
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              platform:
                description: The platform of the component.
                enum:
                  - Windows
                  - Linux
                type: string
              semanticVersion:
                description: >-
                  <p>The semantic version of the component. This version follows
                  the semantic version syntax.</p> <note> <p>The semantic
                  version has four nodes:
                  &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You
                  can assign values for the first three, and can filter on all
                  of them.</p> <p> <b>Assignment:</b> For the first three nodes
                  you can assign any positive integer value, including zero,
                  with an upper limit of 2^30-1, or 1073741823 for each node.
                  Image Builder automatically assigns the build number, and that
                  is not open for updates.</p> <p> <b>Patterns:</b> You can use
                  any numeric pattern that adheres to the assignment
                  requirements for the nodes that you can assign. For example,
                  you might choose a software version pattern, such as 1.0.0, or
                  a date, such as 2021.01.01.</p> </note>
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
                type: string
              supportedOsVersions:
                description: ' The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'
                items:
                  $ref: '#/definitions/OsVersion'
                maxItems: 25
                minItems: 1
                type: array
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags of the component.
                maxProperties: 50
                minProperties: 1
                type: object
              uri:
                description: >-
                  The uri of the component. Must be an Amazon S3 URL and the
                  requester must have permission to access the Amazon S3 bucket.
                  If you use Amazon S3, you can specify component content up to
                  your service quota. Either <code>data</code> or
                  <code>uri</code> can be used to specify the data within the
                  component.
                type: string
            required:
              - name
              - semanticVersion
              - platform
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '490':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateContainerRecipe:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Creates a new container recipe. Container recipes define how images are
        configured, tested, and assessed.
      operationId: CreateContainerRecipe
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The client token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              components:
                description: >-
                  Components for build and test that are included in the
                  container recipe.
                items:
                  $ref: '#/definitions/ComponentConfiguration'
                minItems: 1
                type: array
              containerType:
                description: The type of container to create.
                enum:
                  - DOCKER
                type: string
              description:
                description: The description of the container recipe.
                maxLength: 1024
                minLength: 1
                type: string
              dockerfileTemplateData:
                description: >-
                  The Dockerfile template used to build your image as an inline
                  data blob.
                maxLength: 16000
                minLength: 1
                pattern: '[^\x00]+'
                type: string
              dockerfileTemplateUri:
                description: >-
                  The Amazon S3 URI for the Dockerfile that will be used to
                  build your container image.
                type: string
              imageOsVersionOverride:
                description: Specifies the operating system version for the source image.
                maxLength: 1024
                minLength: 1
                type: string
              instanceConfiguration:
                description: >-
                  Defines a custom source AMI and block device mapping
                  configurations of an instance used for building and testing
                  container images.
                properties:
                  blockDeviceMappings:
                    allOf:
                      - $ref: '#/definitions/InstanceBlockDeviceMappings'
                      - description: >-
                          Defines the block devices to attach for building an
                          instance from this Image Builder AMI.
                  image:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: >-
                          The AMI ID to use as the base image for a container
                          build and test instance. If not specified, Image
                          Builder will use the appropriate ECS-optimized AMI as
                          a base image.
                type: object
              kmsKeyId:
                description: >-
                  Identifies which KMS key is used to encrypt the container
                  image.
                maxLength: 1024
                minLength: 1
                type: string
              name:
                description: The name of the container recipe.
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              parentImage:
                description: The source image for the container recipe.
                maxLength: 1024
                minLength: 1
                type: string
              platformOverride:
                description: >-
                  Specifies the operating system platform when you use a custom
                  source image.
                enum:
                  - Windows
                  - Linux
                type: string
              semanticVersion:
                description: >-
                  <p>The semantic version of the container recipe. This version
                  follows the semantic version syntax.</p> <note> <p>The
                  semantic version has four nodes:
                  &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You
                  can assign values for the first three, and can filter on all
                  of them.</p> <p> <b>Assignment:</b> For the first three nodes
                  you can assign any positive integer value, including zero,
                  with an upper limit of 2^30-1, or 1073741823 for each node.
                  Image Builder automatically assigns the build number, and that
                  is not open for updates.</p> <p> <b>Patterns:</b> You can use
                  any numeric pattern that adheres to the assignment
                  requirements for the nodes that you can assign. For example,
                  you might choose a software version pattern, such as 1.0.0, or
                  a date, such as 2021.01.01.</p> </note>
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Tags that are attached to the container recipe.
                maxProperties: 50
                minProperties: 1
                type: object
              targetRepository:
                description: >-
                  The container repository where the output container image is
                  stored.
                properties:
                  repositoryName:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: >-
                          The name of the container repository where the output
                          container image is stored. This name is prefixed by
                          the repository location.
                  service:
                    allOf:
                      - $ref: '#/definitions/ContainerRepositoryService'
                      - description: >-
                          Specifies the service in which this image was
                          registered.
                type: object
              workingDirectory:
                description: The working directory for use during build and test workflows.
                maxLength: 1024
                minLength: 1
                type: string
            required:
              - containerType
              - name
              - semanticVersion
              - components
              - parentImage
              - targetRepository
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateContainerRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '490':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateDistributionConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Creates a new distribution configuration. Distribution configurations
        define and configure the outputs of your pipeline.
      operationId: CreateDistributionConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: ' The idempotency token of the distribution configuration.'
                maxLength: 36
                minLength: 1
                type: string
              description:
                description: ' The description of the distribution configuration.'
                maxLength: 1024
                minLength: 1
                type: string
              distributions:
                description: ' The distributions of the distribution configuration.'
                items:
                  $ref: '#/definitions/Distribution'
                type: array
              name:
                description: ' The name of the distribution configuration.'
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: ' The tags of the distribution configuration.'
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - name
              - distributions
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '490':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateImage:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Creates a new image. This request will create a new image along with all of the configured output resources defined in the distribution configuration. You must specify exactly one recipe for your image, using either a ContainerRecipeArn or an ImageRecipeArn.'
      operationId: CreateImage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: ' The idempotency token used to make this request idempotent.'
                maxLength: 36
                minLength: 1
                type: string
              containerRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the container recipe that
                  defines how images are configured and tested.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
                type: string
              enhancedImageMetadataEnabled:
                description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
                type: boolean
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              imageTestsConfiguration:
                description: Image tests configuration.
                properties:
                  imageTestsEnabled:
                    allOf:
                      - $ref: '#/definitions/NullableBoolean'
                      - description: >-
                          Defines if tests should be executed when building this
                          image.
                  timeoutMinutes:
                    allOf:
                      - $ref: '#/definitions/ImageTestsTimeoutMinutes'
                      - description: >-
                          The maximum time in minutes that tests are permitted
                          to run.
                type: object
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: ' The tags of the image.'
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - infrastructureConfigurationArn
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateImagePipeline:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Creates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images.'
      operationId: CreateImagePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: ' The idempotency token used to make this request idempotent.'
                maxLength: 36
                minLength: 1
                type: string
              containerRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the container recipe that is
                  used to configure images created by this container pipeline.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              description:
                description: ' The description of the image pipeline.'
                maxLength: 1024
                minLength: 1
                type: string
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
                type: string
              enhancedImageMetadataEnabled:
                description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
                type: boolean
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              imageTestsConfiguration:
                description: Image tests configuration.
                properties:
                  imageTestsEnabled:
                    allOf:
                      - $ref: '#/definitions/NullableBoolean'
                      - description: >-
                          Defines if tests should be executed when building this
                          image.
                  timeoutMinutes:
                    allOf:
                      - $ref: '#/definitions/ImageTestsTimeoutMinutes'
                      - description: >-
                          The maximum time in minutes that tests are permitted
                          to run.
                type: object
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.'
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
                type: string
              name:
                description: ' The name of the image pipeline.'
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              schedule:
                description: >-
                  A schedule configures how often and when a pipeline will
                  automatically create a new image.
                properties:
                  pipelineExecutionStartCondition:
                    allOf:
                      - $ref: '#/definitions/PipelineExecutionStartCondition'
                      - description: >-
                          The condition configures when the pipeline should
                          trigger a new image build. When the
                          <code>pipelineExecutionStartCondition</code> is set to
                          <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>,
                          and you use semantic version filters on the source
                          image or components in your image recipe, EC2 Image
                          Builder will build a new image only when there are new
                          versions of the image or components in your recipe
                          that match the semantic version filter. When it is set
                          to <code>EXPRESSION_MATCH_ONLY</code>, it will build a
                          new image every time the CRON expression matches the
                          current time. For semantic version syntax, see <a
                          href="https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html">CreateComponent</a>
                          in the <i> EC2 Image Builder API Reference</i>.
                  scheduleExpression:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: >-
                          <p>The cron expression determines how often EC2 Image
                          Builder evaluates your
                          <code>pipelineExecutionStartCondition</code>.</p>
                          <p>For information on how to format a cron expression
                          in Image Builder, see <a
                          href="https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html">Use
                          cron expressions in EC2 Image Builder</a>.</p>
                  timezone:
                    allOf:
                      - $ref: '#/definitions/Timezone'
                      - description: >-
                          The timezone that applies to the scheduling
                          expression. For example, "Etc/UTC",
                          "America/Los_Angeles" in the <a
                          href="https://www.joda.org/joda-time/timezones.html">IANA
                          timezone format</a>. If not specified this defaults to
                          UTC.
                type: object
              status:
                description: ' The status of the image pipeline.'
                enum:
                  - DISABLED
                  - ENABLED
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: ' The tags of the image pipeline.'
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - name
              - infrastructureConfigurationArn
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '489':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateImageRecipe:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Creates a new image recipe. Image recipes define how images are configured, tested, and assessed.'
      operationId: CreateImageRecipe
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              additionalInstanceConfiguration:
                description: >-
                  In addition to your infrastruction configuration, these
                  settings provide an extra layer of control over your build
                  instances. For instances where Image Builder installs the SSM
                  agent, you can choose whether to keep it for the AMI that you
                  create. You can also specify commands to run on launch for all
                  of your build instances.
                properties:
                  systemsManagerAgent:
                    allOf:
                      - $ref: '#/definitions/SystemsManagerAgent'
                      - description: >-
                          Contains settings for the SSM agent on your build
                          instance.
                  userDataOverride:
                    allOf:
                      - $ref: '#/definitions/UserDataOverride'
                      - description: >-
                          <p>Use this property to provide commands or a command
                          script to run when you launch your build instance.</p>
                          <note> <p>The userDataOverride property replaces any
                          commands that Image Builder might have added to ensure
                          that SSM is installed on your Linux build instance. If
                          you override the user data, make sure that you add
                          commands to install SSM, if it is not pre-installed on
                          your source image.</p> </note>
                type: object
              blockDeviceMappings:
                description: The block device mappings of the image recipe.
                items:
                  $ref: '#/definitions/InstanceBlockDeviceMapping'
                type: array
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              components:
                description: The components of the image recipe.
                items:
                  $ref: '#/definitions/ComponentConfiguration'
                minItems: 1
                type: array
              description:
                description: ' The description of the image recipe.'
                maxLength: 1024
                minLength: 1
                type: string
              name:
                description: ' The name of the image recipe.'
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              parentImage:
                description: >-
                  The parent image of the image recipe. The value of the string
                  can be the ARN of the parent image or an AMI ID. The format
                  for the ARN follows this example:
                  <code>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</code>.
                  You can provide the specific version that you want to use, or
                  you can use a wildcard in all of the fields. If you enter an
                  AMI ID for the string value, you must have access to the AMI,
                  and the AMI must be in the same Region in which you are using
                  Image Builder.
                maxLength: 1024
                minLength: 1
                type: string
              semanticVersion:
                description: >-
                  <p>The semantic version of the image recipe. This version
                  follows the semantic version syntax.</p> <note> <p>The
                  semantic version has four nodes:
                  &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You
                  can assign values for the first three, and can filter on all
                  of them.</p> <p> <b>Assignment:</b> For the first three nodes
                  you can assign any positive integer value, including zero,
                  with an upper limit of 2^30-1, or 1073741823 for each node.
                  Image Builder automatically assigns the build number, and that
                  is not open for updates.</p> <p> <b>Patterns:</b> You can use
                  any numeric pattern that adheres to the assignment
                  requirements for the nodes that you can assign. For example,
                  you might choose a software version pattern, such as 1.0.0, or
                  a date, such as 2021.01.01.</p> </note>
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: ' The tags of the image recipe.'
                maxProperties: 50
                minProperties: 1
                type: object
              workingDirectory:
                description: The working directory used during build and test workflows.
                maxLength: 1024
                minLength: 1
                type: string
            required:
              - name
              - semanticVersion
              - components
              - parentImage
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '490':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /CreateInfrastructureConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Creates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.'
      operationId: CreateInfrastructureConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              description:
                description: The description of the infrastructure configuration.
                maxLength: 1024
                minLength: 1
                type: string
              instanceProfileName:
                description: >-
                  The instance profile to associate with the instance used to
                  customize your Amazon EC2 AMI.
                maxLength: 256
                minLength: 1
                pattern: '^[\w+=,.@-]+$'
                type: string
              instanceTypes:
                description: >-
                  The instance types of the infrastructure configuration. You
                  can specify one or more instance types to use for this build.
                  The service will pick one of these instance types based on
                  availability.
                items:
                  $ref: '#/definitions/InstanceType'
                type: array
              keyPair:
                description: >-
                  The key pair of the infrastructure configuration. This can be
                  used to log on to and debug the instance used to create your
                  image.
                maxLength: 1024
                minLength: 1
                type: string
              logging:
                description: >-
                  Logging configuration defines where Image Builder uploads your
                  logs.
                properties:
                  s3Logs:
                    allOf:
                      - $ref: '#/definitions/S3Logs'
                      - description: The Amazon S3 logging configuration.
                type: object
              name:
                description: The name of the infrastructure configuration.
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              resourceTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags attached to the resource created by Image Builder.
                maxProperties: 30
                minProperties: 1
                type: object
              securityGroupIds:
                description: >-
                  The security group IDs to associate with the instance used to
                  customize your Amazon EC2 AMI.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
              snsTopicArn:
                description: The SNS topic on which to send image build events.
                pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'
                type: string
              subnetId:
                description: >-
                  The subnet ID in which to place the instance used to customize
                  your Amazon EC2 AMI.
                maxLength: 1024
                minLength: 1
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags of the infrastructure configuration.
                maxProperties: 50
                minProperties: 1
                type: object
              terminateInstanceOnFailure:
                description: >-
                  The terminate instance on failure setting of the
                  infrastructure configuration. Set to false if you want Image
                  Builder to retain the instance used to configure your AMI if
                  the build or test phase of your workflow fails.
                type: boolean
            required:
              - name
              - instanceProfileName
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '489':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /DeleteComponent#componentBuildVersionArn:
    delete:
      description: ' Deletes a component build version.'
      operationId: DeleteComponent
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the component build version to
            delete.
          in: query
          name: componentBuildVersionArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteContainerRecipe#containerRecipeArn:
    delete:
      description: Deletes a container recipe.
      operationId: DeleteContainerRecipe
      parameters:
        - description: The Amazon Resource Name (ARN) of the container recipe to delete.
          in: query
          name: containerRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteContainerRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteDistributionConfiguration#distributionConfigurationArn:
    delete:
      description: ' Deletes a distribution configuration.'
      operationId: DeleteDistributionConfiguration
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the distribution configuration to
            delete.
          in: query
          name: distributionConfigurationArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteImage#imageBuildVersionArn:
    delete:
      description: ' Deletes an image.'
      operationId: DeleteImage
      parameters:
        - description: The Amazon Resource Name (ARN) of the image to delete.
          in: query
          name: imageBuildVersionArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteImagePipeline#imagePipelineArn:
    delete:
      description: ' Deletes an image pipeline.'
      operationId: DeleteImagePipeline
      parameters:
        - description: The Amazon Resource Name (ARN) of the image pipeline to delete.
          in: query
          name: imagePipelineArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteImageRecipe#imageRecipeArn:
    delete:
      description: ' Deletes an image recipe.'
      operationId: DeleteImageRecipe
      parameters:
        - description: The Amazon Resource Name (ARN) of the image recipe to delete.
          in: query
          name: imageRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /DeleteInfrastructureConfiguration#infrastructureConfigurationArn:
    delete:
      description: ' Deletes an infrastructure configuration.'
      operationId: DeleteInfrastructureConfiguration
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the infrastructure configuration
            to delete.
          in: query
          name: infrastructureConfigurationArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetComponent#componentBuildVersionArn:
    get:
      description: ' Gets a component object.'
      operationId: GetComponent
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the component that you want to
            retrieve. Regex requires "/\d+$" suffix.
          in: query
          name: componentBuildVersionArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/(?:(?:([0-9]+|x)\.([0-9]+|x)\.([0-9]+|x))|(?:[0-9]+\.[0-9]+\.[0-9]+/[0-9]+))$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetComponentPolicy#componentArn:
    get:
      description: ' Gets a component policy.'
      operationId: GetComponentPolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the component whose policy you
            want to retrieve.
          in: query
          name: componentArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComponentPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetContainerRecipe#containerRecipeArn:
    get:
      description: Retrieves a container recipe.
      operationId: GetContainerRecipe
      parameters:
        - description: The Amazon Resource Name (ARN) of the container recipe to retrieve.
          in: query
          name: containerRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetContainerRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetContainerRecipePolicy#containerRecipeArn:
    get:
      description: Retrieves the policy for a container recipe.
      operationId: GetContainerRecipePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the container recipe for the
            policy being requested.
          in: query
          name: containerRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetContainerRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetDistributionConfiguration#distributionConfigurationArn:
    get:
      description: ' Gets a distribution configuration.'
      operationId: GetDistributionConfiguration
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the distribution configuration
            that you want to retrieve.
          in: query
          name: distributionConfigurationArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetImage#imageBuildVersionArn:
    get:
      description: ' Gets an image.'
      operationId: GetImage
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the image that you want to
            retrieve.
          in: query
          name: imageBuildVersionArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/(?:(?:([0-9]+|x)\.([0-9]+|x)\.([0-9]+|x))|(?:[0-9]+\.[0-9]+\.[0-9]+/[0-9]+))$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetImagePipeline#imagePipelineArn:
    get:
      description: ' Gets an image pipeline.'
      operationId: GetImagePipeline
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the image pipeline that you want
            to retrieve.
          in: query
          name: imagePipelineArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetImagePolicy#imageArn:
    get:
      description: ' Gets an image policy.'
      operationId: GetImagePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the image whose policy you want to
            retrieve.
          in: query
          name: imageArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImagePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetImageRecipe#imageRecipeArn:
    get:
      description: ' Gets an image recipe.'
      operationId: GetImageRecipe
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the image recipe that you want to
            retrieve.
          in: query
          name: imageRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetImageRecipePolicy#imageRecipeArn:
    get:
      description: ' Gets an image recipe policy.'
      operationId: GetImageRecipePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the image recipe whose policy you
            want to retrieve.
          in: query
          name: imageRecipeArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /GetInfrastructureConfiguration#infrastructureConfigurationArn:
    get:
      description: ' Gets an infrastructure configuration.'
      operationId: GetInfrastructureConfiguration
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the infrastructure configuration
            that you want to retrieve.
          in: query
          name: infrastructureConfigurationArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /ImportComponent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Imports a component and transforms its data into a component document.
      operationId: ImportComponent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              changeDescription:
                description: >-
                  The change description of the component. Describes what change
                  has been made in this version, or what makes this version
                  different from other versions of this component.
                maxLength: 1024
                minLength: 1
                type: string
              clientToken:
                description: The idempotency token of the component.
                maxLength: 36
                minLength: 1
                type: string
              data:
                description: >-
                  The data of the component. Used to specify the data inline.
                  Either <code>data</code> or <code>uri</code> can be used to
                  specify the data within the component.
                maxLength: 1024
                minLength: 1
                type: string
              description:
                description: >-
                  The description of the component. Describes the contents of
                  the component.
                maxLength: 1024
                minLength: 1
                type: string
              format:
                description: >-
                  The format of the resource that you want to import as a
                  component.
                enum:
                  - SHELL
                type: string
              kmsKeyId:
                description: >-
                  The ID of the KMS key that should be used to encrypt this
                  component.
                maxLength: 1024
                minLength: 1
                type: string
              name:
                description: ' The name of the component.'
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
                type: string
              platform:
                description: The platform of the component.
                enum:
                  - Windows
                  - Linux
                type: string
              semanticVersion:
                description: >-
                  <p>The semantic version of the component. This version follows
                  the semantic version syntax.</p> <note> <p>The semantic
                  version has four nodes:
                  &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You
                  can assign values for the first three, and can filter on all
                  of them.</p> <p> <b>Filtering:</b> When you retrieve or
                  reference a resource with a semantic version, you can use
                  wildcards (x) to filter your results. When you use a wildcard
                  in any node, all nodes to the right of the first wildcard must
                  also be wildcards. For example, specifying "1.2.x", or "1.x.x"
                  works to filter list results, but neither "1.x.2", nor "x.2.x"
                  will work. You do not have to specify the build - Image
                  Builder automatically uses a wildcard for that, if
                  applicable.</p> </note>
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags of the component.
                maxProperties: 50
                minProperties: 1
                type: object
              type:
                description: >-
                  The type of the component denotes whether the component is
                  used to build the image, or only to test it.
                enum:
                  - BUILD
                  - TEST
                type: string
              uri:
                description: >-
                  The uri of the component. Must be an Amazon S3 URL and the
                  requester must have permission to access the Amazon S3 bucket.
                  If you use Amazon S3, you can specify component content up to
                  your service quota. Either <code>data</code> or
                  <code>uri</code> can be used to specify the data within the
                  component.
                type: string
            required:
              - name
              - semanticVersion
              - type
              - format
              - platform
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /ListComponentBuildVersions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p> Returns the list of component build versions for the specified
        semantic version.</p> <note> <p>The semantic version has four nodes:
        &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign
        values for the first three, and can filter on all of them.</p> <p>
        <b>Filtering:</b> When you retrieve or reference a resource with a
        semantic version, you can use wildcards (x) to filter your results. When
        you use a wildcard in any node, all nodes to the right of the first
        wildcard must also be wildcards. For example, specifying "1.2.x", or
        "1.x.x" works to filter list results, but neither "1.x.2", nor "x.2.x"
        will work. You do not have to specify the build - Image Builder
        automatically uses a wildcard for that, if applicable.</p> </note>
      operationId: ListComponentBuildVersions
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              componentVersionArn:
                description: >-
                  The component version Amazon Resource Name (ARN) whose
                  versions you want to list.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            required:
              - componentVersionArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComponentBuildVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListComponents:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the list of component build versions for the specified
        semantic version.</p> <note> <p>The semantic version has four nodes:
        &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign
        values for the first three, and can filter on all of them.</p> <p>
        <b>Filtering:</b> When you retrieve or reference a resource with a
        semantic version, you can use wildcards (x) to filter your results. When
        you use a wildcard in any node, all nodes to the right of the first
        wildcard must also be wildcards. For example, specifying "1.2.x", or
        "1.x.x" works to filter list results, but neither "1.x.2", nor "x.2.x"
        will work. You do not have to specify the build - Image Builder
        automatically uses a wildcard for that, if applicable.</p> </note>
      operationId: ListComponents
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              byName:
                description: >-
                  Returns the list of component build versions for the specified
                  name.
                type: boolean
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>description</code> </p> </li> <li> <p>
                  <code>name</code> </p> </li> <li> <p> <code>platform</code>
                  </p> </li> <li> <p> <code>supportedOsVersion</code> </p> </li>
                  <li> <p> <code>type</code> </p> </li> <li> <p>
                  <code>version</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
              owner:
                description: >-
                  The owner defines which components you want to list. By
                  default, this request will only show components owned by your
                  account. You can use this field to specify if you want to view
                  components owned by yourself, by Amazon, or those components
                  that have been shared with you by other customers.
                enum:
                  - Self
                  - Shared
                  - Amazon
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComponentsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListContainerRecipes:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of container recipes.
      operationId: ListContainerRecipes
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>containerType</code> </p> </li> <li> <p>
                  <code>name</code> </p> </li> <li> <p> <code>parentImage</code>
                  </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum number of results to return in the list.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  Provides a token for pagination, which determines where to
                  begin the next set of results when the current set reaches the
                  maximum for one request.
                maxLength: 1024
                minLength: 1
                type: string
              owner:
                description: >-
                  Returns container recipes belonging to the specified owner,
                  that have been shared with you. You can omit this field to
                  return container recipes belonging to your account.
                enum:
                  - Self
                  - Shared
                  - Amazon
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListContainerRecipesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListDistributionConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of distribution configurations.
      operationId: ListDistributionConfigurations
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: You can filter on <code>name</code> to streamline results.
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDistributionConfigurationsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImageBuildVersions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns a list of image build versions.'
      operationId: ListImageBuildVersions
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>name</code> </p> </li> <li> <p>
                  <code>osVersion</code> </p> </li> <li> <p>
                  <code>platform</code> </p> </li> <li> <p> <code>type</code>
                  </p> </li> <li> <p> <code>version</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              imageVersionArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image whose build
                  versions you want to retrieve.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            required:
              - imageVersionArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImageBuildVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImagePackages:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        List the Packages that are associated with an Image Build Version, as
        determined by Amazon EC2 Systems Manager Inventory at build time.
      operationId: ListImagePackages
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              imageBuildVersionArn:
                description: >-
                  Filter results for the ListImagePackages request by the Image
                  Build Version ARN
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
                type: string
              maxResults:
                description: >-
                  The maxiumum number of results to return from the
                  ListImagePackages request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            required:
              - imageBuildVersionArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagePackagesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImagePipelineImages:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns a list of images created by the specified pipeline.'
      operationId: ListImagePipelineImages
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>name</code> </p> </li> <li> <p>
                  <code>version</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              imagePipelineArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image pipeline whose
                  images you want to view.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
                type: string
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            required:
              - imagePipelineArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagePipelineImagesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImagePipelines:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of image pipelines.
      operationId: ListImagePipelines
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>description</code> </p> </li> <li> <p>
                  <code>distributionConfigurationArn</code> </p> </li> <li> <p>
                  <code>imageRecipeArn</code> </p> </li> <li> <p>
                  <code>infrastructureConfigurationArn</code> </p> </li> <li>
                  <p> <code>name</code> </p> </li> <li> <p> <code>status</code>
                  </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagePipelinesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImageRecipes:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns a list of image recipes.'
      operationId: ListImageRecipes
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>name</code> </p> </li> <li> <p>
                  <code>parentImage</code> </p> </li> <li> <p>
                  <code>platform</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
              owner:
                description: >-
                  The owner defines which image recipes you want to list. By
                  default, this request will only show image recipes owned by
                  your account. You can use this field to specify if you want to
                  view image recipes owned by yourself, by Amazon, or those
                  image recipes that have been shared with you by other
                  customers.
                enum:
                  - Self
                  - Shared
                  - Amazon
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImageRecipesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListImages:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns the list of images that you have access to.'
      operationId: ListImages
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              byName:
                description: Requests a list of images with a specific recipe name.
                type: boolean
              filters:
                description: >-
                  <p>Use the following filters to streamline results:</p> <ul>
                  <li> <p> <code>name</code> </p> </li> <li> <p>
                  <code>osVersion</code> </p> </li> <li> <p>
                  <code>platform</code> </p> </li> <li> <p> <code>type</code>
                  </p> </li> <li> <p> <code>version</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              includeDeprecated:
                description: Includes deprecated images in the response list.
                type: boolean
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
              owner:
                description: >-
                  The owner defines which images you want to list. By default,
                  this request will only show images owned by your account. You
                  can use this field to specify if you want to view images owned
                  by yourself, by Amazon, or those images that have been shared
                  with you by other customers.
                enum:
                  - Self
                  - Shared
                  - Amazon
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /ListInfrastructureConfigurations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns a list of infrastructure configurations.'
      operationId: ListInfrastructureConfigurations
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: You can filter on <code>name</code> to streamline results.
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 10
                minItems: 1
                type: array
              maxResults:
                description: The maximum items to return in a request.
                maximum: 25
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  A token to specify where to start paginating. This is the
                  NextToken from a previously truncated response.
                maxLength: 65535
                minLength: 1
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInfrastructureConfigurationsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /PutComponentPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Applies a policy to a component. We recommend that you call the RAM API <a href="https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutComponentPolicy</code>, you must also call the RAM API <a href="https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.'
      operationId: PutComponentPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              componentArn:
                description: >-
                  The Amazon Resource Name (ARN) of the component that this
                  policy should be applied to.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
                type: string
              policy:
                description: The policy to apply.
                maxLength: 30000
                minLength: 1
                type: string
            required:
              - componentArn
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutComponentPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /PutContainerRecipePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Applies a policy to a container image. We recommend that you call the
        RAM API CreateResourceShare
        (https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html)
        to share resources. If you call the Image Builder API
        <code>PutContainerImagePolicy</code>, you must also call the RAM API
        PromoteResourceShareCreatedFromPolicy
        (https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html)
        in order for the resource to be visible to all principals with whom the
        resource is shared.
      operationId: PutContainerRecipePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              containerRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the container recipe that
                  this policy should be applied to.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              policy:
                description: The policy to apply to the container recipe.
                maxLength: 30000
                minLength: 1
                type: string
            required:
              - containerRecipeArn
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutContainerRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /PutImagePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Applies a policy to an image. We recommend that you call the RAM API <a
        href="https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html">CreateResourceShare</a>
        to share resources. If you call the Image Builder API
        <code>PutImagePolicy</code>, you must also call the RAM API <a
        href="https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html">PromoteResourceShareCreatedFromPolicy</a>
        in order for the resource to be visible to all principals with whom the
        resource is shared.
      operationId: PutImagePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              imageArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image that this policy
                  should be applied to.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$
                type: string
              policy:
                description: The policy to apply.
                maxLength: 30000
                minLength: 1
                type: string
            required:
              - imageArn
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutImagePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /PutImageRecipePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Applies a policy to an image recipe. We recommend that you call the RAM API <a href="https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutImageRecipePolicy</code>, you must also call the RAM API <a href="https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.'
      operationId: PutImageRecipePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              imageRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image recipe that this
                  policy should be applied to.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              policy:
                description: The policy to apply.
                maxLength: 30000
                minLength: 1
                type: string
            required:
              - imageRecipeArn
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutImageRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
  /StartImagePipelineExecution:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Manually triggers a pipeline to create an image.'
      operationId: StartImagePipelineExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              imagePipelineArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image pipeline that you
                  want to manually invoke.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
                type: string
            required:
              - imagePipelineArn
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartImagePipelineExecutionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /UpdateDistributionConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Updates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.'
      operationId: UpdateDistributionConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token of the distribution configuration.
                maxLength: 36
                minLength: 1
                type: string
              description:
                description: The description of the distribution configuration.
                maxLength: 1024
                minLength: 1
                type: string
              distributionConfigurationArn:
                description: >-
                  The Amazon Resource Name (ARN) of the distribution
                  configuration that you want to update.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
                type: string
              distributions:
                description: The distributions of the distribution configuration.
                items:
                  $ref: '#/definitions/Distribution'
                type: array
            required:
              - distributionConfigurationArn
              - distributions
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /UpdateImagePipeline:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p> Updates an image pipeline. Image pipelines enable you to automate
        the creation and distribution of images.</p> <note>
        <p>UpdateImagePipeline does not support selective updates for the
        pipeline. You must specify all of the required properties in the update
        request, not just the properties that have changed.</p> </note>
      operationId: UpdateImagePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              containerRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the container pipeline to
                  update.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              description:
                description: The description of the image pipeline.
                maxLength: 1024
                minLength: 1
                type: string
              distributionConfigurationArn:
                description: >-
                  The Amazon Resource Name (ARN) of the distribution
                  configuration that will be used to configure and distribute
                  images updated by this image pipeline.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$
                type: string
              enhancedImageMetadataEnabled:
                description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'
                type: boolean
              imagePipelineArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image pipeline that you
                  want to update.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$
                type: string
              imageRecipeArn:
                description: >-
                  The Amazon Resource Name (ARN) of the image recipe that will
                  be used to configure images updated by this image pipeline.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\.[0-9]+\.[0-9]+$
                type: string
              imageTestsConfiguration:
                description: Image tests configuration.
                properties:
                  imageTestsEnabled:
                    allOf:
                      - $ref: '#/definitions/NullableBoolean'
                      - description: >-
                          Defines if tests should be executed when building this
                          image.
                  timeoutMinutes:
                    allOf:
                      - $ref: '#/definitions/ImageTestsTimeoutMinutes'
                      - description: >-
                          The maximum time in minutes that tests are permitted
                          to run.
                type: object
              infrastructureConfigurationArn:
                description: >-
                  The Amazon Resource Name (ARN) of the infrastructure
                  configuration that will be used to build images updated by
                  this image pipeline.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
                type: string
              schedule:
                description: >-
                  A schedule configures how often and when a pipeline will
                  automatically create a new image.
                properties:
                  pipelineExecutionStartCondition:
                    allOf:
                      - $ref: '#/definitions/PipelineExecutionStartCondition'
                      - description: >-
                          The condition configures when the pipeline should
                          trigger a new image build. When the
                          <code>pipelineExecutionStartCondition</code> is set to
                          <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>,
                          and you use semantic version filters on the source
                          image or components in your image recipe, EC2 Image
                          Builder will build a new image only when there are new
                          versions of the image or components in your recipe
                          that match the semantic version filter. When it is set
                          to <code>EXPRESSION_MATCH_ONLY</code>, it will build a
                          new image every time the CRON expression matches the
                          current time. For semantic version syntax, see <a
                          href="https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html">CreateComponent</a>
                          in the <i> EC2 Image Builder API Reference</i>.
                  scheduleExpression:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: >-
                          <p>The cron expression determines how often EC2 Image
                          Builder evaluates your
                          <code>pipelineExecutionStartCondition</code>.</p>
                          <p>For information on how to format a cron expression
                          in Image Builder, see <a
                          href="https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html">Use
                          cron expressions in EC2 Image Builder</a>.</p>
                  timezone:
                    allOf:
                      - $ref: '#/definitions/Timezone'
                      - description: >-
                          The timezone that applies to the scheduling
                          expression. For example, "Etc/UTC",
                          "America/Los_Angeles" in the <a
                          href="https://www.joda.org/joda-time/timezones.html">IANA
                          timezone format</a>. If not specified this defaults to
                          UTC.
                type: object
              status:
                description: The status of the image pipeline.
                enum:
                  - DISABLED
                  - ENABLED
                type: string
            required:
              - imagePipelineArn
              - infrastructureConfigurationArn
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /UpdateInfrastructureConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Updates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.'
      operationId: UpdateInfrastructureConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token used to make this request idempotent.
                maxLength: 36
                minLength: 1
                type: string
              description:
                description: The description of the infrastructure configuration.
                maxLength: 1024
                minLength: 1
                type: string
              infrastructureConfigurationArn:
                description: >-
                  The Amazon Resource Name (ARN) of the infrastructure
                  configuration that you want to update.
                pattern: >-
                  ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$
                type: string
              instanceProfileName:
                description: >-
                  The instance profile to associate with the instance used to
                  customize your Amazon EC2 AMI.
                maxLength: 256
                minLength: 1
                pattern: '^[\w+=,.@-]+$'
                type: string
              instanceTypes:
                description: >-
                  The instance types of the infrastructure configuration. You
                  can specify one or more instance types to use for this build.
                  The service will pick one of these instance types based on
                  availability.
                items:
                  $ref: '#/definitions/InstanceType'
                type: array
              keyPair:
                description: >-
                  The key pair of the infrastructure configuration. This can be
                  used to log on to and debug the instance used to create your
                  image.
                maxLength: 1024
                minLength: 1
                type: string
              logging:
                description: >-
                  Logging configuration defines where Image Builder uploads your
                  logs.
                properties:
                  s3Logs:
                    allOf:
                      - $ref: '#/definitions/S3Logs'
                      - description: The Amazon S3 logging configuration.
                type: object
              resourceTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags attached to the resource created by Image Builder.
                maxProperties: 30
                minProperties: 1
                type: object
              securityGroupIds:
                description: >-
                  The security group IDs to associate with the instance used to
                  customize your Amazon EC2 AMI.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
              snsTopicArn:
                description: The SNS topic on which to send image build events.
                pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'
                type: string
              subnetId:
                description: >-
                  The subnet ID to place the instance used to customize your
                  Amazon EC2 AMI in.
                maxLength: 1024
                minLength: 1
                type: string
              terminateInstanceOnFailure:
                description: >-
                  The terminate instance on failure setting of the
                  infrastructure configuration. Set to false if you want Image
                  Builder to retain the instance used to configure your AMI if
                  the build or test phase of your workflow fails.
                type: boolean
            required:
              - infrastructureConfigurationArn
              - instanceProfileName
              - clientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/tags/{resourceArn}':
    get:
      description: ' Returns the list of tags for the specified resource.'
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource whose tags you want
            to retrieve.
          in: path
          name: resourceArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\.(?:x|[0-9]+)\.(?:x|[0-9]+))(?:/[0-9]+)?)?$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Adds a tag to a resource.'
      operationId: TagResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource that you want to tag.
          in: path
          name: resourceArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\.(?:x|[0-9]+)\.(?:x|[0-9]+))(?:/[0-9]+)?)?$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to apply to the resource.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: ' Removes a tag from a resource.'
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource that you want to
            untag.
          in: path
          name: resourceArn
          pattern: >-
            ^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\.(?:x|[0-9]+)\.(?:x|[0-9]+))(?:/[0-9]+)?)?$
          required: true
          type: string
        - collectionFormat: multi
          description: The tag keys to remove from the resource.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

