basePath: /
definitions:
  AccessDeniedException: {}
  AnalysisType:
    enum:
      - Security
      - CodeQuality
    type: string
  AnalysisTypes:
    items:
      $ref: '#/definitions/AnalysisType'
    type: array
  Arn:
    maxLength: 1600
    minLength: 1
    pattern: '^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$'
    type: string
  AssociateRepositoryRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              Amazon CodeGuru Reviewer uses this value to prevent the accidental
              creation of duplicate repository associations if there are
              failures and retries. 
      KMSKeyDetails:
        allOf:
          - $ref: '#/definitions/KMSKeyDetails'
          - description: >-
              <p>A <code>KMSKeyDetails</code> object that contains:</p> <ul>
              <li> <p>The encryption option for this repository association. It
              is either owned by Amazon Web Services Key Management Service
              (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
              (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of
              the Amazon Web Services KMS key that is associated with this
              respository association.</p> </li> </ul>
      Repository:
        allOf:
          - $ref: '#/definitions/Repository'
          - description: The repository to associate.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    required:
      - Repository
    title: AssociateRepositoryRequest
    type: object
  AssociateRepositoryResponse:
    properties:
      RepositoryAssociation:
        allOf:
          - $ref: '#/definitions/RepositoryAssociation'
          - description: Information about the repository association.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    type: object
  AssociationArn:
    maxLength: 1600
    minLength: 1
    pattern: >-
      ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    type: string
  AssociationId:
    maxLength: 64
    minLength: 1
    type: string
  BranchDiffSourceCodeType:
    description: ' A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies a code diff between a source and destination branch in an associated repository. '
    properties:
      DestinationBranchName:
        allOf:
          - $ref: '#/definitions/BranchName'
          - description: The destination branch for a diff in an associated repository.
      SourceBranchName:
        allOf:
          - $ref: '#/definitions/BranchName'
          - description: The source branch for a diff in an associated repository.
    required:
      - SourceBranchName
      - DestinationBranchName
    type: object
  BranchName:
    maxLength: 256
    minLength: 1
    type: string
  BuildArtifactsObjectKey:
    maxLength: 1024
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  ClientRequestToken:
    maxLength: 64
    minLength: 1
    pattern: '^[\w-]+$'
    type: string
  CodeArtifacts:
    description: >-
      <p>Code artifacts are source code artifacts and build artifacts used in a
      repository analysis or a pull request review.</p> <ul> <li> <p>Source code
      artifacts are source code files in a Git repository that are compressed
      into a .zip file.</p> </li> <li> <p>Build artifacts are .jar or .class
      files that are compressed in a .zip file.</p> </li> </ul>
    properties:
      BuildArtifactsObjectKey:
        allOf:
          - $ref: '#/definitions/BuildArtifactsObjectKey'
          - description: >-
              The S3 object key for a build artifacts .zip file that contains
              .jar or .class files. This is required for a code review with
              security analysis. For more information, see <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/code-review-security.html">Create
              code reviews with security analysis</a> in the <i>Amazon CodeGuru
              Reviewer User Guide</i>.
      SourceCodeArtifactsObjectKey:
        allOf:
          - $ref: '#/definitions/SourceCodeArtifactsObjectKey'
          - description: >-
              The S3 object key for a source code .zip file. This is required
              for all code reviews.
    required:
      - SourceCodeArtifactsObjectKey
    type: object
  CodeCommitRepository:
    description: >-
      Information about an Amazon Web Services CodeCommit repository. The
      CodeCommit repository must be in the same Amazon Web Services Region and
      Amazon Web Services account where its CodeGuru Reviewer code reviews are
      configured.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the Amazon Web Services CodeCommit repository. For
              more information, see <a
              href="https://docs.aws.amazon.com/codecommit/latest/APIReference/API_GetRepository.html#CodeCommit-GetRepository-request-repositoryName">repositoryName</a>
              in the <i>Amazon Web Services CodeCommit API Reference</i>.
    required:
      - Name
    type: object
  CodeReview:
    description: ' Information about a code review. A code review belongs to the associated repository that contains the reviewed code. '
    properties:
      AnalysisTypes:
        allOf:
          - $ref: '#/definitions/AnalysisTypes'
          - description: >-
              They types of analysis performed during a repository analysis or a
              pull request review. You can specify either <code>Security</code>,
              <code>CodeQuality</code>, or both.
      AssociationArn:
        allOf:
          - $ref: '#/definitions/AssociationArn'
          - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> that contains the reviewed source code. You can retrieve associated repository ARNs by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
      CodeReviewArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
              <code>CodeReview</code> </a> object. 
      CreatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time, in milliseconds since the epoch, when the code review was created. '
      LastUpdatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time, in milliseconds since the epoch, when the code review was last updated. '
      Metrics:
        allOf:
          - $ref: '#/definitions/Metrics'
          - description: ' The statistics from the code review. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the code review. '
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: >-
              The owner of the repository. For an Amazon Web Services CodeCommit
              repository, this is the Amazon Web Services account ID of the
              account that owns the repository. For a GitHub, GitHub Enterprise
              Server, or Bitbucket repository, this is the username for the
              account that owns the repository. For an S3 repository, it can be
              the username or Amazon Web Services account ID.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: ' The type of repository that contains the reviewed code (for example, GitHub or Bitbucket). '
      PullRequestId:
        allOf:
          - $ref: '#/definitions/PullRequestId'
          - description: ' The pull request ID for the code review. '
      RepositoryName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the repository. '
      SourceCodeType:
        allOf:
          - $ref: '#/definitions/SourceCodeType'
          - description: ' The type of the source code for the code review. '
      State:
        allOf:
          - $ref: '#/definitions/JobState'
          - description: >-
              <p>The valid code review states are:</p> <ul> <li> <p>
              <code>Completed</code>: The code review is complete. </p> </li>
              <li> <p> <code>Pending</code>: The code review started and has not
              completed or failed. </p> </li> <li> <p> <code>Failed</code>: The
              code review failed. </p> </li> <li> <p> <code>Deleting</code>: The
              code review is being deleted. </p> </li> </ul>
      StateReason:
        allOf:
          - $ref: '#/definitions/StateReason'
          - description: ' The reason for the state of the code review. '
      Type:
        allOf:
          - $ref: '#/definitions/Type'
          - description: ' The type of code review. '
    type: object
  CodeReviewName:
    maxLength: 100
    minLength: 1
    pattern: '[a-zA-Z0-9-_]*'
    type: string
  CodeReviewSummaries:
    items:
      $ref: '#/definitions/CodeReviewSummary'
    type: array
  CodeReviewSummary:
    description: ' Information about the summary of the code review. '
    properties:
      CodeReviewArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
              <code>CodeReview</code> </a> object. 
      CreatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time, in milliseconds since the epoch, when the code review was created. '
      LastUpdatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time, in milliseconds since the epoch, when the code review was last updated. '
      MetricsSummary:
        allOf:
          - $ref: '#/definitions/MetricsSummary'
          - description: ' The statistics from the code review. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the code review. '
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: >-
              The owner of the repository. For an Amazon Web Services CodeCommit
              repository, this is the Amazon Web Services account ID of the
              account that owns the repository. For a GitHub, GitHub Enterprise
              Server, or Bitbucket repository, this is the username for the
              account that owns the repository. For an S3 repository, it can be
              the username or Amazon Web Services account ID.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: ' The provider type of the repository association. '
      PullRequestId:
        allOf:
          - $ref: '#/definitions/PullRequestId'
          - description: ' The pull request ID for the code review. '
      RepositoryName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the repository. '
      SourceCodeType:
        $ref: '#/definitions/SourceCodeType'
      State:
        allOf:
          - $ref: '#/definitions/JobState'
          - description: >-
              <p> The state of the code review. </p> <p>The valid code review
              states are:</p> <ul> <li> <p> <code>Completed</code>: The code
              review is complete. </p> </li> <li> <p> <code>Pending</code>: The
              code review started and has not completed or failed. </p> </li>
              <li> <p> <code>Failed</code>: The code review failed. </p> </li>
              <li> <p> <code>Deleting</code>: The code review is being deleted.
              </p> </li> </ul>
      Type:
        allOf:
          - $ref: '#/definitions/Type'
          - description: ' The type of the code review. '
    type: object
  CodeReviewType:
    description: >-
      <p> The type of a code review. There are two code review types: </p> <ul>
      <li> <p> <code>PullRequest</code> - A code review that is automatically
      triggered by a pull request on an associated repository. </p> </li> <li>
      <p> <code>RepositoryAnalysis</code> - A code review that analyzes all code
      under a specified branch in an associated repository. The associated
      repository is specified using its ARN in <a
      href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">
      <code>CreateCodeReview</code> </a>. </p> </li> </ul>
    properties:
      AnalysisTypes:
        allOf:
          - $ref: '#/definitions/AnalysisTypes'
          - description: >-
              They types of analysis performed during a repository analysis or a
              pull request review. You can specify either <code>Security</code>,
              <code>CodeQuality</code>, or both.
      RepositoryAnalysis:
        allOf:
          - $ref: '#/definitions/RepositoryAnalysis'
          - description: ' A code review that analyzes all code under a specified branch in an associated repository. The associated repository is specified using its ARN in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview"> <code>CreateCodeReview</code> </a>. '
    required:
      - RepositoryAnalysis
    type: object
  CommitDiffSourceCodeType:
    description: ' A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies the commit diff for a pull request on an associated repository. The <code>SourceCommit</code> and <code>DestinationCommit</code> fields are required to do a pull request code review. '
    properties:
      DestinationCommit:
        allOf:
          - $ref: '#/definitions/CommitId'
          - description: ' The SHA of the destination commit used to generate a commit diff. This field is required for a pull request code review. '
      MergeBaseCommit:
        allOf:
          - $ref: '#/definitions/CommitId'
          - description: The SHA of the merge base of a commit.
      SourceCommit:
        allOf:
          - $ref: '#/definitions/CommitId'
          - description: ' The SHA of the source commit used to generate a commit diff. This field is required for a pull request code review. '
    type: object
  CommitId:
    maxLength: 64
    minLength: 6
    type: string
  ConflictException: {}
  ConnectionArn:
    maxLength: 256
    minLength: 0
    pattern: 'arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+'
    type: string
  CreateCodeReviewRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: ' Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate code reviews if there are failures and retries. '
      Name:
        allOf:
          - $ref: '#/definitions/CodeReviewName'
          - description: ' The name of the code review. The name of each code review in your Amazon Web Services account must be unique. '
      RepositoryAssociationArn:
        allOf:
          - $ref: '#/definitions/AssociationArn'
          - description: >-
              <p> The Amazon Resource Name (ARN) of the <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">
              <code>RepositoryAssociation</code> </a> object. You can retrieve
              this ARN by calling <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">
              <code>ListRepositoryAssociations</code> </a>. </p> <p> A code
              review can only be created on an associated repository. This is
              the ARN of the associated repository. </p>
      Type:
        allOf:
          - $ref: '#/definitions/CodeReviewType'
          - description: ' The type of code review to create. This is specified using a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html"> <code>CodeReviewType</code> </a> object. You can create a code review only of type <code>RepositoryAnalysis</code>. '
    required:
      - Name
      - RepositoryAssociationArn
      - Type
    title: CreateCodeReviewRequest
    type: object
  CreateCodeReviewResponse:
    properties:
      CodeReview:
        $ref: '#/definitions/CodeReview'
    type: object
  DescribeCodeReviewRequest:
    properties: {}
    title: DescribeCodeReviewRequest
    type: object
  DescribeCodeReviewResponse:
    properties:
      CodeReview:
        allOf:
          - $ref: '#/definitions/CodeReview'
          - description: ' Information about the code review. '
    type: object
  DescribeRecommendationFeedbackRequest:
    properties: {}
    title: DescribeRecommendationFeedbackRequest
    type: object
  DescribeRecommendationFeedbackResponse:
    properties:
      RecommendationFeedback:
        allOf:
          - $ref: '#/definitions/RecommendationFeedback'
          - description: ' The recommendation feedback given by the user. '
    type: object
  DescribeRepositoryAssociationRequest:
    properties: {}
    title: DescribeRepositoryAssociationRequest
    type: object
  DescribeRepositoryAssociationResponse:
    properties:
      RepositoryAssociation:
        allOf:
          - $ref: '#/definitions/RepositoryAssociation'
          - description: Information about the repository association.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    type: object
  DisassociateRepositoryRequest:
    properties: {}
    title: DisassociateRepositoryRequest
    type: object
  DisassociateRepositoryResponse:
    properties:
      RepositoryAssociation:
        allOf:
          - $ref: '#/definitions/RepositoryAssociation'
          - description: Information about the disassociated repository.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    type: object
  EncryptionOption:
    enum:
      - AWS_OWNED_CMK
      - CUSTOMER_MANAGED_CMK
    type: string
  EventInfo:
    description: >-
      Information about an event. The event might be a push, pull request,
      scheduled request, or another type of event.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/EventName'
          - description: >-
              The name of the event. The possible names are
              <code>pull_request</code>, <code>workflow_dispatch</code>,
              <code>schedule</code>, and <code>push</code> 
      State:
        allOf:
          - $ref: '#/definitions/EventState'
          - description: >-
              The state of an event. The state might be open, closed, or another
              state.
    type: object
  EventName:
    maxLength: 32
    minLength: 1
    pattern: '^[ \-A-Z_a-z]+$'
    type: string
  EventState:
    maxLength: 32
    minLength: 1
    pattern: '^[ \-A-Z_a-z]+$'
    type: string
  FilePath:
    maxLength: 1024
    minLength: 1
    type: string
  FindingsCount:
    type: integer
  InternalServerException: {}
  JobState:
    enum:
      - Completed
      - Pending
      - Failed
      - Deleting
    type: string
  JobStates:
    items:
      $ref: '#/definitions/JobState'
    maxItems: 3
    minItems: 1
    type: array
  KMSKeyDetails:
    description: >-
      <p>An object that contains:</p> <ul> <li> <p>The encryption option for a
      repository association. It is either owned by Amazon Web Services Key
      Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
      (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of the
      Amazon Web Services KMS key that is associated with a respository
      association.</p> </li> </ul>
    properties:
      EncryptionOption:
        allOf:
          - $ref: '#/definitions/EncryptionOption'
          - description: >-
              The encryption option for a repository association. It is either
              owned by Amazon Web Services Key Management Service (KMS)
              (<code>AWS_OWNED_CMK</code>) or customer managed
              (<code>CUSTOMER_MANAGED_CMK</code>).
      KMSKeyId:
        allOf:
          - $ref: '#/definitions/KMSKeyId'
          - description: >-
              The ID of the Amazon Web Services KMS key that is associated with
              a respository association.
    type: object
  KMSKeyId:
    maxLength: 2048
    minLength: 1
    pattern: '[a-zA-Z0-9-]+'
    type: string
  LineNumber:
    type: integer
  ListCodeReviewsMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ListCodeReviewsRequest:
    properties: {}
    title: ListCodeReviewsRequest
    type: object
  ListCodeReviewsResponse:
    properties:
      CodeReviewSummaries:
        allOf:
          - $ref: '#/definitions/CodeReviewSummaries'
          - description: ' A list of code reviews that meet the criteria of the request. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' Pagination token. '
    type: object
  ListRecommendationFeedbackRequest:
    properties: {}
    title: ListRecommendationFeedbackRequest
    type: object
  ListRecommendationFeedbackResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '
      RecommendationFeedbackSummaries:
        allOf:
          - $ref: '#/definitions/RecommendationFeedbackSummaries'
          - description: ' Recommendation feedback summaries corresponding to the code review ARN. '
    type: object
  ListRecommendationsRequest:
    properties: {}
    title: ListRecommendationsRequest
    type: object
  ListRecommendationsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' Pagination token. '
      RecommendationSummaries:
        allOf:
          - $ref: '#/definitions/RecommendationSummaries'
          - description: ' List of recommendations for the requested code review. '
    type: object
  ListRepositoryAssociationsRequest:
    properties: {}
    title: ListRepositoryAssociationsRequest
    type: object
  ListRepositoryAssociationsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The <code>nextToken</code> value to include in a future
              <code>ListRecommendations</code> request. When the results of a
              <code>ListRecommendations</code> request exceed
              <code>maxResults</code>, this value can be used to retrieve the
              next page of results. This value is <code>null</code> when there
              are no more results to return. 
      RepositoryAssociationSummaries:
        allOf:
          - $ref: '#/definitions/RepositoryAssociationSummaries'
          - description: >-
              A list of repository associations that meet the criteria of the
              request.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    type: object
  LongDescription:
    maxLength: 1000
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MeteredLinesOfCodeCount:
    type: integer
  Metrics:
    description: ' Information about the statistics from the code review. '
    properties:
      FindingsCount:
        allOf:
          - $ref: '#/definitions/FindingsCount'
          - description: ' Total number of recommendations found in the code review. '
      MeteredLinesOfCodeCount:
        allOf:
          - $ref: '#/definitions/MeteredLinesOfCodeCount'
          - description: ' <code>MeteredLinesOfCode</code> is the number of lines of code in the repository where the code review happened. This does not include non-code lines such as comments and blank lines. '
    type: object
  MetricsSummary:
    description: ' Information about metrics summaries. '
    properties:
      FindingsCount:
        allOf:
          - $ref: '#/definitions/FindingsCount'
          - description: ' Total number of recommendations found in the code review. '
      MeteredLinesOfCodeCount:
        allOf:
          - $ref: '#/definitions/MeteredLinesOfCodeCount'
          - description: ' Lines of code metered in the code review. For the initial code review pull request and all subsequent revisions, this includes all lines of code in the files added to the pull request. In subsequent revisions, for files that already existed in the pull request, this includes only the changed lines of code. In both cases, this does not include non-code lines such as comments and import statements. For example, if you submit a pull request containing 5 files, each with 500 lines of code, and in a subsequent revision you added a new file with 200 lines of code, and also modified a total of 25 lines across the initial 5 files, <code>MeteredLinesOfCodeCount</code> includes the first 5 files (5 * 500 = 2,500 lines), the new file (200 lines) and the 25 changed lines of code for a total of 2,725 lines of code. '
    type: object
  Name:
    maxLength: 100
    minLength: 1
    pattern: '^\S[\w.-]*$'
    type: string
  Names:
    items:
      $ref: '#/definitions/Name'
    maxItems: 3
    minItems: 1
    type: array
  NextToken:
    maxLength: 2048
    minLength: 1
    type: string
  NotFoundException: {}
  Owner:
    maxLength: 100
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  Owners:
    items:
      $ref: '#/definitions/Owner'
    maxItems: 3
    minItems: 1
    type: array
  ProviderType:
    enum:
      - CodeCommit
      - GitHub
      - Bitbucket
      - GitHubEnterpriseServer
      - S3Bucket
    type: string
  ProviderTypes:
    items:
      $ref: '#/definitions/ProviderType'
    maxItems: 3
    minItems: 1
    type: array
  PullRequestId:
    maxLength: 64
    minLength: 1
    type: string
  PutRecommendationFeedbackRequest:
    properties:
      CodeReviewArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
              <code>CodeReview</code> </a> object. 
      Reactions:
        allOf:
          - $ref: '#/definitions/Reactions'
          - description: ' List for storing reactions. Reactions are utf-8 text code for emojis. If you send an empty list it clears all your feedback. '
      RecommendationId:
        allOf:
          - $ref: '#/definitions/RecommendationId'
          - description: ' The recommendation ID that can be used to track the provided recommendations and then to collect the feedback. '
    required:
      - CodeReviewArn
      - RecommendationId
      - Reactions
    title: PutRecommendationFeedbackRequest
    type: object
  PutRecommendationFeedbackResponse:
    properties: {}
    type: object
  Reaction:
    enum:
      - ThumbsUp
      - ThumbsDown
    type: string
  Reactions:
    items:
      $ref: '#/definitions/Reaction'
    maxItems: 1
    minItems: 0
    type: array
  RecommendationCategory:
    enum:
      - AWSBestPractices
      - AWSCloudFormationIssues
      - DuplicateCode
      - CodeMaintenanceIssues
      - ConcurrencyIssues
      - InputValidations
      - PythonBestPractices
      - JavaBestPractices
      - ResourceLeaks
      - SecurityIssues
      - CodeInconsistencies
    type: string
  RecommendationFeedback:
    description: ' Information about the recommendation feedback. '
    properties:
      CodeReviewArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
              <code>CodeReview</code> </a> object. 
      CreatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time at which the feedback was created. '
      LastUpdatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: ' The time at which the feedback was last updated. '
      Reactions:
        allOf:
          - $ref: '#/definitions/Reactions'
          - description: ' List for storing reactions. Reactions are utf-8 text code for emojis. You can send an empty list to clear off all your feedback. '
      RecommendationId:
        allOf:
          - $ref: '#/definitions/RecommendationId'
          - description: ' The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback. '
      UserId:
        allOf:
          - $ref: '#/definitions/UserId'
          - description: >-
              <p> The ID of the user that made the API call. </p> <p> The
              <code>UserId</code> is an IAM principal that can be specified as
              an Amazon Web Services account ID or an Amazon Resource Name
              (ARN). For more information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
              Specifying a Principal</a> in the <i>Amazon Web Services Identity
              and Access Management User Guide</i>. </p>
    type: object
  RecommendationFeedbackSummaries:
    items:
      $ref: '#/definitions/RecommendationFeedbackSummary'
    type: array
  RecommendationFeedbackSummary:
    description: ' Information about recommendation feedback summaries. '
    properties:
      Reactions:
        allOf:
          - $ref: '#/definitions/Reactions'
          - description: ' List for storing reactions. Reactions are utf-8 text code for emojis. '
      RecommendationId:
        allOf:
          - $ref: '#/definitions/RecommendationId'
          - description: ' The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback. '
      UserId:
        allOf:
          - $ref: '#/definitions/UserId'
          - description: >-
              <p> The ID of the user that gave the feedback. </p> <p> The
              <code>UserId</code> is an IAM principal that can be specified as
              an Amazon Web Services account ID or an Amazon Resource Name
              (ARN). For more information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
              Specifying a Principal</a> in the <i>Amazon Web Services Identity
              and Access Management User Guide</i>. </p>
    type: object
  RecommendationId:
    maxLength: 64
    minLength: 1
    type: string
  RecommendationIds:
    items:
      $ref: '#/definitions/RecommendationId'
    maxItems: 100
    minItems: 1
    type: array
  RecommendationSummaries:
    items:
      $ref: '#/definitions/RecommendationSummary'
    type: array
  RecommendationSummary:
    description: ' Information about recommendations. '
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/Text'
          - description: ' A description of the recommendation generated by CodeGuru Reviewer for the lines of code between the start line and the end line. '
      EndLine:
        allOf:
          - $ref: '#/definitions/LineNumber'
          - description: ' Last line where the recommendation is applicable in the source commit or source branch. For a single line comment the start line and end line values are the same. '
      FilePath:
        allOf:
          - $ref: '#/definitions/FilePath'
          - description: Name of the file on which a recommendation is provided.
      RecommendationCategory:
        allOf:
          - $ref: '#/definitions/RecommendationCategory'
          - description: The type of a recommendation.
      RecommendationId:
        allOf:
          - $ref: '#/definitions/RecommendationId'
          - description: ' The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback. '
      RuleMetadata:
        allOf:
          - $ref: '#/definitions/RuleMetadata'
          - description: >-
              Metadata about a rule. Rule metadata includes an ID, a name, a
              list of tags, and a short and long description. CodeGuru Reviewer
              uses rules to analyze code. A rule's recommendation is included in
              analysis results if code is detected that violates the rule.
      Severity:
        allOf:
          - $ref: '#/definitions/Severity'
          - description: >-
              The severity of the issue in the code that generated this
              recommendation.
      StartLine:
        allOf:
          - $ref: '#/definitions/LineNumber'
          - description: ' Start line from where the recommendation is applicable in the source commit or source branch. '
    type: object
  Repository:
    description: ' Information about an associated Amazon Web Services CodeCommit repository or an associated repository that is managed by Amazon Web Services CodeStar Connections (for example, Bitbucket). This <code>Repository</code> object is not used if your source code is in an associated GitHub repository. '
    properties:
      Bitbucket:
        allOf:
          - $ref: '#/definitions/ThirdPartySourceRepository'
          - description: ' Information about a Bitbucket repository. '
      CodeCommit:
        allOf:
          - $ref: '#/definitions/CodeCommitRepository'
          - description: Information about an Amazon Web Services CodeCommit repository.
      GitHubEnterpriseServer:
        allOf:
          - $ref: '#/definitions/ThirdPartySourceRepository'
          - description: ' Information about a GitHub Enterprise Server repository. '
      S3Bucket:
        $ref: '#/definitions/S3Repository'
    type: object
  RepositoryAnalysis:
    description: ' A code review type that analyzes all code under a specified branch in an associated repository. The associated repository is specified using its ARN when you call <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview"> <code>CreateCodeReview</code> </a>. '
    properties:
      RepositoryHead:
        allOf:
          - $ref: '#/definitions/RepositoryHeadSourceCodeType'
          - description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies the tip of a branch in an associated repository. '
      SourceCodeType:
        $ref: '#/definitions/SourceCodeType'
    type: object
  RepositoryAssociation:
    description: >-
      Information about a repository association. The <a
      href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_DescribeRepositoryAssociation.html">
      <code>DescribeRepositoryAssociation</code> </a> operation returns a
      <code>RepositoryAssociation</code> object.
    properties:
      AssociationArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) identifying the repository
              association.
      AssociationId:
        allOf:
          - $ref: '#/definitions/AssociationId'
          - description: The ID of the repository association.
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/ConnectionArn'
          - description: ' The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html"> <code>Connection</code> </a> in the <i>Amazon Web Services CodeStar Connections API Reference</i>. '
      CreatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The time, in milliseconds since the epoch, when the repository
              association was created.
      KMSKeyDetails:
        allOf:
          - $ref: '#/definitions/KMSKeyDetails'
          - description: >-
              <p>A <code>KMSKeyDetails</code> object that contains:</p> <ul>
              <li> <p>The encryption option for this repository association. It
              is either owned by Amazon Web Services Key Management Service
              (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
              (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of
              the Amazon Web Services KMS key that is associated with this
              respository association.</p> </li> </ul>
      LastUpdatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The time, in milliseconds since the epoch, when the repository
              association was last updated.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the repository.
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: >-
              The owner of the repository. For an Amazon Web Services CodeCommit
              repository, this is the Amazon Web Services account ID of the
              account that owns the repository. For a GitHub, GitHub Enterprise
              Server, or Bitbucket repository, this is the username for the
              account that owns the repository. For an S3 repository, it can be
              the username or Amazon Web Services account ID.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: The provider type of the repository association.
      S3RepositoryDetails:
        $ref: '#/definitions/S3RepositoryDetails'
      State:
        allOf:
          - $ref: '#/definitions/RepositoryAssociationState'
          - description: >-
              <p>The state of the repository association.</p> <p>The valid
              repository association states are:</p> <ul> <li> <p>
              <b>Associated</b>: The repository association is complete. </p>
              </li> <li> <p> <b>Associating</b>: CodeGuru Reviewer is: </p> <ul>
              <li> <p> Setting up pull request notifications. This is required
              for pull requests to trigger a CodeGuru Reviewer review. </p>
              <note> <p> If your repository <code>ProviderType</code> is
              <code>GitHub</code>, <code>GitHub Enterprise Server</code>, or
              <code>Bitbucket</code>, CodeGuru Reviewer creates webhooks in your
              repository to trigger CodeGuru Reviewer reviews. If you delete
              these webhooks, reviews of code in your repository cannot be
              triggered. </p> </note> </li> <li> <p> Setting up source code
              access. This is required for CodeGuru Reviewer to securely clone
              code in your repository. </p> </li> </ul> </li> <li> <p>
              <b>Failed</b>: The repository failed to associate or disassociate.
              </p> </li> <li> <p> <b>Disassociating</b>: CodeGuru Reviewer is
              removing the repository's pull request notifications and source
              code access. </p> </li> <li> <p> <b>Disassociated</b>: CodeGuru
              Reviewer successfully disassociated the repository. You can create
              a new association with this repository if you want to review
              source code in it later. You can control access to code reviews
              created in an associated repository with tags after it has been
              disassociated. For more information, see <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html">Using
              tags to control access to associated repositories</a> in the
              <i>Amazon CodeGuru Reviewer User Guide</i>. </p> </li> </ul>
      StateReason:
        allOf:
          - $ref: '#/definitions/StateReason'
          - description: >-
              A description of why the repository association is in the current
              state.
    type: object
  RepositoryAssociationState:
    enum:
      - Associated
      - Associating
      - Failed
      - Disassociating
      - Disassociated
    type: string
  RepositoryAssociationStates:
    items:
      $ref: '#/definitions/RepositoryAssociationState'
    maxItems: 5
    minItems: 1
    type: array
  RepositoryAssociationSummaries:
    items:
      $ref: '#/definitions/RepositoryAssociationSummary'
    type: array
  RepositoryAssociationSummary:
    description: >-
      Summary information about a repository association. The <a
      href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">
      <code>ListRepositoryAssociations</code> </a> operation returns a list of
      <code>RepositoryAssociationSummary</code> objects.
    properties:
      AssociationArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
      AssociationId:
        allOf:
          - $ref: '#/definitions/AssociationId'
          - description: ' The repository association ID. '
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/ConnectionArn'
          - description: ' The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html"> <code>Connection</code> </a> in the <i>Amazon Web Services CodeStar Connections API Reference</i>. '
      LastUpdatedTimeStamp:
        allOf:
          - $ref: '#/definitions/TimeStamp'
          - description: >-
              The time, in milliseconds since the epoch, since the repository
              association was last updated. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the repository association.
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: >-
              The owner of the repository. For an Amazon Web Services CodeCommit
              repository, this is the Amazon Web Services account ID of the
              account that owns the repository. For a GitHub, GitHub Enterprise
              Server, or Bitbucket repository, this is the username for the
              account that owns the repository. For an S3 repository, it can be
              the username or Amazon Web Services account ID.
      ProviderType:
        allOf:
          - $ref: '#/definitions/ProviderType'
          - description: The provider type of the repository association.
      State:
        allOf:
          - $ref: '#/definitions/RepositoryAssociationState'
          - description: >-
              <p>The state of the repository association.</p> <p>The valid
              repository association states are:</p> <ul> <li> <p>
              <b>Associated</b>: The repository association is complete. </p>
              </li> <li> <p> <b>Associating</b>: CodeGuru Reviewer is: </p> <ul>
              <li> <p> Setting up pull request notifications. This is required
              for pull requests to trigger a CodeGuru Reviewer review. </p>
              <note> <p> If your repository <code>ProviderType</code> is
              <code>GitHub</code>, <code>GitHub Enterprise Server</code>, or
              <code>Bitbucket</code>, CodeGuru Reviewer creates webhooks in your
              repository to trigger CodeGuru Reviewer reviews. If you delete
              these webhooks, reviews of code in your repository cannot be
              triggered. </p> </note> </li> <li> <p> Setting up source code
              access. This is required for CodeGuru Reviewer to securely clone
              code in your repository. </p> </li> </ul> </li> <li> <p>
              <b>Failed</b>: The repository failed to associate or disassociate.
              </p> </li> <li> <p> <b>Disassociating</b>: CodeGuru Reviewer is
              removing the repository's pull request notifications and source
              code access. </p> </li> <li> <p> <b>Disassociated</b>: CodeGuru
              Reviewer successfully disassociated the repository. You can create
              a new association with this repository if you want to review
              source code in it later. You can control access to code reviews
              created in an associated repository with tags after it has been
              disassociated. For more information, see <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html">Using
              tags to control access to associated repositories</a> in the
              <i>Amazon CodeGuru Reviewer User Guide</i>. </p> </li> </ul>
    type: object
  RepositoryHeadSourceCodeType:
    description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies the tip of a branch in an associated repository. '
    properties:
      BranchName:
        allOf:
          - $ref: '#/definitions/BranchName'
          - description: ' The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch. '
    required:
      - BranchName
    type: object
  RepositoryNames:
    items:
      $ref: '#/definitions/Name'
    maxItems: 100
    minItems: 1
    type: array
  RequestId:
    maxLength: 64
    minLength: 1
    type: string
  RequestMetadata:
    description: >-
      Metadata that is associated with a code review. This applies to both pull
      request and repository analysis code reviews.
    properties:
      EventInfo:
        allOf:
          - $ref: '#/definitions/EventInfo'
          - description: Information about the event associated with a code review.
      RequestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: >-
              The ID of the request. This is required for a pull request code
              review.
      Requester:
        allOf:
          - $ref: '#/definitions/Requester'
          - description: >-
              An identifier, such as a name or account ID, that is associated
              with the requester. The <code>Requester</code> is used to capture
              the <code>author/actor</code> name of the event request.
      VendorName:
        allOf:
          - $ref: '#/definitions/VendorName'
          - description: >-
              The name of the repository vendor used to upload code to an S3
              bucket for a CI/CD code review. For example, if code and artifacts
              are uploaded to an S3 bucket for a CI/CD code review by GitHub
              scripts from a GitHub repository, then the repository
              association's <code>ProviderType</code> is <code>S3Bucket</code>
              and the CI/CD repository vendor name is GitHub. For more
              information, see the definition for <code>ProviderType</code> in
              <a
              href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>. 
    type: object
  Requester:
    maxLength: 100
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  ResourceNotFoundException: {}
  RuleId:
    maxLength: 64
    minLength: 1
    pattern: '^\S+\/[a-zA-Z0-9-]+@v\d+\.\d+$'
    type: string
  RuleMetadata:
    description: >-
      Metadata about a rule. Rule metadata includes an ID, a name, a list of
      tags, and a short and long description. CodeGuru Reviewer uses rules to
      analyze code. A rule's recommendation is included in analysis results if
      code is detected that violates the rule.
    properties:
      LongDescription:
        allOf:
          - $ref: '#/definitions/LongDescription'
          - description: A long description of the rule.
      RuleId:
        allOf:
          - $ref: '#/definitions/RuleId'
          - description: The ID of the rule.
      RuleName:
        allOf:
          - $ref: '#/definitions/RuleName'
          - description: The name of the rule.
      RuleTags:
        allOf:
          - $ref: '#/definitions/RuleTags'
          - description: Tags that are associated with the rule.
      ShortDescription:
        allOf:
          - $ref: '#/definitions/ShortDescription'
          - description: A short description of the rule.
    type: object
  RuleName:
    maxLength: 100
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  RuleTag:
    maxLength: 50
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  RuleTags:
    items:
      $ref: '#/definitions/RuleTag'
    maxItems: 20
    minItems: 1
    type: array
  S3BucketName:
    maxLength: 63
    minLength: 3
    pattern: ^\S(.*\S)?$
    type: string
  S3BucketRepository:
    description: ' Information about an associated repository in an S3 bucket. The associated repository contains a source code .zip file and a build artifacts .zip file that contains .jar or .class files. '
    properties:
      Details:
        allOf:
          - $ref: '#/definitions/S3RepositoryDetails'
          - description: ' An <code>S3RepositoryDetails</code> object that specifies the name of an S3 bucket and a <code>CodeArtifacts</code> object. The <code>CodeArtifacts</code> object includes the S3 object keys for a source code .zip file and for a build artifacts .zip file. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the repository when the <code>ProviderType</code> is <code>S3Bucket</code>. '
    required:
      - Name
    type: object
  S3Repository:
    description: ' Information about a repository in an S3 bucket. '
    properties:
      BucketName:
        allOf:
          - $ref: '#/definitions/S3BucketName'
          - description: >-
              The name of the S3 bucket used for associating a new S3
              repository. It must begin with <code>codeguru-reviewer-</code>. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the repository in the S3 bucket. '
    required:
      - Name
      - BucketName
    type: object
  S3RepositoryDetails:
    description: ' Specifies the name of an S3 bucket and a <code>CodeArtifacts</code> object that contains the S3 object keys for a source code .zip file and for a build artifacts .zip file that contains .jar or .class files. '
    properties:
      BucketName:
        allOf:
          - $ref: '#/definitions/S3BucketName'
          - description: >-
              The name of the S3 bucket used for associating a new S3
              repository. It must begin with <code>codeguru-reviewer-</code>. 
      CodeArtifacts:
        allOf:
          - $ref: '#/definitions/CodeArtifacts'
          - description: ' A <code>CodeArtifacts</code> object. The <code>CodeArtifacts</code> object includes the S3 object key for a source code .zip file and for a build artifacts .zip file that contains .jar or .class files. '
    type: object
  Severity:
    enum:
      - Info
      - Low
      - Medium
      - High
      - Critical
    type: string
  ShortDescription:
    maxLength: 200
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  SourceCodeArtifactsObjectKey:
    maxLength: 1024
    minLength: 1
    pattern: ^\S(.*\S)?$
    type: string
  SourceCodeType:
    description: ' Specifies the source code that is analyzed in a code review. '
    properties:
      BranchDiff:
        allOf:
          - $ref: '#/definitions/BranchDiffSourceCodeType'
          - description: ' A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies a source branch name and a destination branch name in an associated repository. '
      CommitDiff:
        allOf:
          - $ref: '#/definitions/CommitDiffSourceCodeType'
          - description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> that specifies a commit diff created by a pull request on an associated repository. '
      RepositoryHead:
        $ref: '#/definitions/RepositoryHeadSourceCodeType'
      RequestMetadata:
        allOf:
          - $ref: '#/definitions/RequestMetadata'
          - description: >-
              Metadata that is associated with a code review. This applies to
              any type of code review supported by CodeGuru Reviewer. The
              <code>RequestMetadaa</code> field captures any event metadata. For
              example, it might capture metadata associated with an event
              trigger, such as a push or a pull request. 
      S3BucketRepository:
        allOf:
          - $ref: '#/definitions/S3BucketRepository'
          - description: ' Information about an associated repository in an S3 bucket that includes its name and an <code>S3RepositoryDetails</code> object. The <code>S3RepositoryDetails</code> object includes the name of an S3 bucket, an S3 key for a source code .zip file, and an S3 key for a build artifacts .zip file. <code>S3BucketRepository</code> is required in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType"> <code>SourceCodeType</code> </a> for <code>S3BucketRepository</code> based code reviews. '
    type: object
  StateReason:
    maxLength: 256
    minLength: 0
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              <p> An array of key-value pairs used to tag an associated
              repository. A tag is a custom attribute label with two parts: </p>
              <ul> <li> <p>A <i>tag key</i> (for example,
              <code>CostCenter</code>, <code>Environment</code>,
              <code>Project</code>, or <code>Secret</code>). Tag keys are case
              sensitive.</p> </li> <li> <p>An optional field known as a <i>tag
              value</i> (for example, <code>111122223333</code>,
              <code>Production</code>, or a team name). Omitting the tag value
              is the same as using an empty string. Like tag keys, tag values
              are case sensitive.</p> </li> </ul>
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  Text:
    maxLength: 2048
    minLength: 1
    type: string
  ThirdPartySourceRepository:
    description: ' Information about a third-party source repository connected to CodeGuru Reviewer. '
    properties:
      ConnectionArn:
        allOf:
          - $ref: '#/definitions/ConnectionArn'
          - description: ' The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html"> <code>Connection</code> </a> in the <i>Amazon Web Services CodeStar Connections API Reference</i>. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: ' The name of the third party source repository. '
      Owner:
        allOf:
          - $ref: '#/definitions/Owner'
          - description: ' The owner of the repository. For a GitHub, GitHub Enterprise, or Bitbucket repository, this is the username for the account that owns the repository. For an S3 repository, this can be the username or Amazon Web Services account ID. '
    required:
      - Name
      - ConnectionArn
      - Owner
    type: object
  ThrottlingException: {}
  TimeStamp:
    format: date-time
    type: string
  Type:
    enum:
      - PullRequest
      - RepositoryAnalysis
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UserId:
    maxLength: 256
    minLength: 1
    type: string
  UserIds:
    items:
      $ref: '#/definitions/UserId'
    maxItems: 100
    minItems: 1
    type: array
  ValidationException: {}
  VendorName:
    enum:
      - GitHub
      - GitLab
      - NativeS3
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codeguru-reviewer/'
host: codeguru-reviewer.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>This section provides documentation for the Amazon CodeGuru Reviewer API
    operations. CodeGuru Reviewer is a service that uses program analysis and
    machine learning to detect potential defects that are difficult for
    developers to find and recommends fixes in your Java and Python code.</p>
    <p>By proactively detecting and providing recommendations for addressing
    code defects and implementing best practices, CodeGuru Reviewer improves the
    overall quality and maintainability of your code base during the code review
    stage. For more information about CodeGuru Reviewer, see the <i> <a
    href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html">Amazon
    CodeGuru Reviewer User Guide</a>.</i> </p> <p> To improve the security of
    your CodeGuru Reviewer API calls, you can establish a private connection
    between your VPC and CodeGuru Reviewer by creating an <i>interface VPC
    endpoint</i>. For more information, see <a
    href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html">CodeGuru
    Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a>
    in the <i>Amazon CodeGuru Reviewer User Guide</i>. </p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon CodeGuru Reviewer
  version: '2019-09-19'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: codeguru-reviewer
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeguru-reviewer-2019-09-19.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: codeguru-reviewer
paths:
  /associations:
    get:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html"> <code>RepositoryAssociationSummary</code> </a> objects that contain summary information about a repository association. You can filter the returned list by <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType"> <code>ProviderType</code> </a>, <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name"> <code>Name</code> </a>, <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State"> <code>State</code> </a>, and <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner"> <code>Owner</code> </a>. '
      operationId: ListRepositoryAssociations
      parameters:
        - collectionFormat: multi
          description: List of provider types to use as a filter.
          in: query
          items:
            $ref: '#/definitions/ProviderType'
          maxItems: 3
          minItems: 1
          name: ProviderType
          required: false
          type: array
        - collectionFormat: multi
          description: >-
            <p>List of repository association states to use as a filter.</p>
            <p>The valid repository association states are:</p> <ul> <li> <p>
            <b>Associated</b>: The repository association is complete. </p>
            </li> <li> <p> <b>Associating</b>: CodeGuru Reviewer is: </p> <ul>
            <li> <p> Setting up pull request notifications. This is required for
            pull requests to trigger a CodeGuru Reviewer review. </p> <note> <p>
            If your repository <code>ProviderType</code> is <code>GitHub</code>,
            <code>GitHub Enterprise Server</code>, or <code>Bitbucket</code>,
            CodeGuru Reviewer creates webhooks in your repository to trigger
            CodeGuru Reviewer reviews. If you delete these webhooks, reviews of
            code in your repository cannot be triggered. </p> </note> </li> <li>
            <p> Setting up source code access. This is required for CodeGuru
            Reviewer to securely clone code in your repository. </p> </li> </ul>
            </li> <li> <p> <b>Failed</b>: The repository failed to associate or
            disassociate. </p> </li> <li> <p> <b>Disassociating</b>: CodeGuru
            Reviewer is removing the repository's pull request notifications and
            source code access. </p> </li> <li> <p> <b>Disassociated</b>:
            CodeGuru Reviewer successfully disassociated the repository. You can
            create a new association with this repository if you want to review
            source code in it later. You can control access to code reviews
            created in an associated repository with tags after it has been
            disassociated. For more information, see <a
            href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html">Using
            tags to control access to associated repositories</a> in the
            <i>Amazon CodeGuru Reviewer User Guide</i>. </p> </li> </ul>
          in: query
          items:
            $ref: '#/definitions/RepositoryAssociationState'
          maxItems: 5
          minItems: 1
          name: State
          required: false
          type: array
        - collectionFormat: multi
          description: List of repository names to use as a filter.
          in: query
          items:
            $ref: '#/definitions/Name'
          maxItems: 3
          minItems: 1
          name: Name
          required: false
          type: array
        - collectionFormat: multi
          description: >-
            List of owners to use as a filter. For Amazon Web Services
            CodeCommit, it is the name of the CodeCommit account that was used
            to associate the repository. For other repository source providers,
            such as Bitbucket and GitHub Enterprise Server, this is name of the
            account that was used to associate the repository. 
          in: query
          items:
            $ref: '#/definitions/Owner'
          maxItems: 3
          minItems: 1
          name: Owner
          required: false
          type: array
        - description: >-
            The maximum number of repository association results returned by
            <code>ListRepositoryAssociations</code> in paginated output. When
            this parameter is used, <code>ListRepositoryAssociations</code> only
            returns <code>maxResults</code> results in a single page with a
            <code>nextToken</code> response element. The remaining results of
            the initial request can be seen by sending another
            <code>ListRepositoryAssociations</code> request with the returned
            <code>nextToken</code> value. This value can be between 1 and 100.
            If this parameter is not used,
            <code>ListRepositoryAssociations</code> returns up to 100 results
            and a <code>nextToken</code> value if applicable. 
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            <p>The <code>nextToken</code> value returned from a previous
            paginated <code>ListRepositoryAssociations</code> request where
            <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous
            results that returned the <code>nextToken</code> value. </p> <note>
            <p>Treat this token as an opaque identifier that is only used to
            retrieve the next items in a list and not for other programmatic
            purposes.</p> </note>
          in: query
          maxLength: 2048
          minLength: 1
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRepositoryAssociationsResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p> Use to associate an Amazon Web Services CodeCommit repository or a
        repostory managed by Amazon Web Services CodeStar Connections with
        Amazon CodeGuru Reviewer. When you associate a repository, CodeGuru
        Reviewer reviews source code changes in the repository's pull requests
        and provides automatic recommendations. You can view recommendations
        using the CodeGuru Reviewer console. For more information, see <a
        href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html">Recommendations
        in Amazon CodeGuru Reviewer</a> in the <i>Amazon CodeGuru Reviewer User
        Guide.</i> </p> <p>If you associate a CodeCommit or S3 repository, it
        must be in the same Amazon Web Services Region and Amazon Web Services
        account where its CodeGuru Reviewer code reviews are configured.</p>
        <p>Bitbucket and GitHub Enterprise Server repositories are managed by
        Amazon Web Services CodeStar Connections to connect to CodeGuru
        Reviewer. For more information, see <a
        href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-associate-repository.html">Associate
        a repository</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i> </p>
        <note> <p> You cannot use the CodeGuru Reviewer SDK or the Amazon Web
        Services CLI to associate a GitHub repository with Amazon CodeGuru
        Reviewer. To associate a GitHub repository, use the console. For more
        information, see <a
        href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html">Getting
        started with CodeGuru Reviewer</a> in the <i>CodeGuru Reviewer User
        Guide.</i> </p> </note>
      operationId: AssociateRepository
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  Amazon CodeGuru Reviewer uses this value to prevent the
                  accidental creation of duplicate repository associations if
                  there are failures and retries. 
                maxLength: 64
                minLength: 1
                pattern: '^[\w-]+$'
                type: string
              KMSKeyDetails:
                description: >-
                  <p>An object that contains:</p> <ul> <li> <p>The encryption
                  option for a repository association. It is either owned by
                  Amazon Web Services Key Management Service (KMS)
                  (<code>AWS_OWNED_CMK</code>) or customer managed
                  (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID
                  of the Amazon Web Services KMS key that is associated with a
                  respository association.</p> </li> </ul>
                properties:
                  EncryptionOption:
                    allOf:
                      - $ref: '#/definitions/EncryptionOption'
                      - description: >-
                          The encryption option for a repository association. It
                          is either owned by Amazon Web Services Key Management
                          Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer
                          managed (<code>CUSTOMER_MANAGED_CMK</code>).
                  KMSKeyId:
                    allOf:
                      - $ref: '#/definitions/KMSKeyId'
                      - description: >-
                          The ID of the Amazon Web Services KMS key that is
                          associated with a respository association.
                type: object
              Repository:
                description: ' Information about an associated Amazon Web Services CodeCommit repository or an associated repository that is managed by Amazon Web Services CodeStar Connections (for example, Bitbucket). This <code>Repository</code> object is not used if your source code is in an associated GitHub repository. '
                properties:
                  Bitbucket:
                    allOf:
                      - $ref: '#/definitions/ThirdPartySourceRepository'
                      - description: ' Information about a Bitbucket repository. '
                  CodeCommit:
                    allOf:
                      - $ref: '#/definitions/CodeCommitRepository'
                      - description: >-
                          Information about an Amazon Web Services CodeCommit
                          repository.
                  GitHubEnterpriseServer:
                    allOf:
                      - $ref: '#/definitions/ThirdPartySourceRepository'
                      - description: ' Information about a GitHub Enterprise Server repository. '
                  S3Bucket:
                    $ref: '#/definitions/S3Repository'
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  <p> An array of key-value pairs used to tag an associated
                  repository. A tag is a custom attribute label with two parts:
                  </p> <ul> <li> <p>A <i>tag key</i> (for example,
                  <code>CostCenter</code>, <code>Environment</code>,
                  <code>Project</code>, or <code>Secret</code>). Tag keys are
                  case sensitive.</p> </li> <li> <p>An optional field known as a
                  <i>tag value</i> (for example, <code>111122223333</code>,
                  <code>Production</code>, or a team name). Omitting the tag
                  value is the same as using an empty string. Like tag keys, tag
                  values are case sensitive.</p> </li> </ul>
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - Repository
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateRepositoryResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/associations/{AssociationArn}':
    delete:
      description: >-
        Removes the association between Amazon CodeGuru Reviewer and a
        repository.
      operationId: DisassociateRepository
      parameters:
        - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
          in: path
          maxLength: 1600
          minLength: 1
          name: AssociationArn
          pattern: >-
            ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateRepositoryResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object that contains information about the requested repository association. '
      operationId: DescribeRepositoryAssociation
      parameters:
        - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
          in: path
          maxLength: 1600
          minLength: 1
          name: AssociationArn
          pattern: >-
            ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRepositoryAssociationResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /codereviews:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Use to create a code review with a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html"> <code>CodeReviewType</code> </a> of <code>RepositoryAnalysis</code>. This type of code review analyzes all code under a specified branch in an associated repository. <code>PullRequest</code> code reviews are automatically triggered by a pull request. '
      operationId: CreateCodeReview
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: ' Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate code reviews if there are failures and retries. '
                maxLength: 64
                minLength: 1
                pattern: '^[\w-]+$'
                type: string
              Name:
                description: ' The name of the code review. The name of each code review in your Amazon Web Services account must be unique. '
                maxLength: 100
                minLength: 1
                pattern: '[a-zA-Z0-9-_]*'
                type: string
              RepositoryAssociationArn:
                description: >-
                  <p> The Amazon Resource Name (ARN) of the <a
                  href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">
                  <code>RepositoryAssociation</code> </a> object. You can
                  retrieve this ARN by calling <a
                  href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">
                  <code>ListRepositoryAssociations</code> </a>. </p> <p> A code
                  review can only be created on an associated repository. This
                  is the ARN of the associated repository. </p>
                maxLength: 1600
                minLength: 1
                pattern: >-
                  ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
                type: string
              Type:
                description: >-
                  <p> The type of a code review. There are two code review
                  types: </p> <ul> <li> <p> <code>PullRequest</code> - A code
                  review that is automatically triggered by a pull request on an
                  associated repository. </p> </li> <li> <p>
                  <code>RepositoryAnalysis</code> - A code review that analyzes
                  all code under a specified branch in an associated repository.
                  The associated repository is specified using its ARN in <a
                  href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">
                  <code>CreateCodeReview</code> </a>. </p> </li> </ul>
                properties:
                  AnalysisTypes:
                    allOf:
                      - $ref: '#/definitions/AnalysisTypes'
                      - description: >-
                          They types of analysis performed during a repository
                          analysis or a pull request review. You can specify
                          either <code>Security</code>,
                          <code>CodeQuality</code>, or both.
                  RepositoryAnalysis:
                    allOf:
                      - $ref: '#/definitions/RepositoryAnalysis'
                      - description: ' A code review that analyzes all code under a specified branch in an associated repository. The associated repository is specified using its ARN in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview"> <code>CreateCodeReview</code> </a>. '
                type: object
            required:
              - Name
              - RepositoryAssociationArn
              - Type
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCodeReviewResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /codereviews#Type:
    get:
      description: ' Lists all the code reviews that the customer has created in the past 90 days. '
      operationId: ListCodeReviews
      parameters:
        - collectionFormat: multi
          description: ' List of provider types for filtering that needs to be applied before displaying the result. For example, <code>providerTypes=[GitHub]</code> lists code reviews from GitHub. '
          in: query
          items:
            $ref: '#/definitions/ProviderType'
          maxItems: 3
          minItems: 1
          name: ProviderTypes
          required: false
          type: array
        - collectionFormat: multi
          description: >-
            <p> List of states for filtering that needs to be applied before
            displaying the result. For example, <code>states=[Pending]</code>
            lists code reviews in the Pending state. </p> <p>The valid code
            review states are:</p> <ul> <li> <p> <code>Completed</code>: The
            code review is complete. </p> </li> <li> <p> <code>Pending</code>:
            The code review started and has not completed or failed. </p> </li>
            <li> <p> <code>Failed</code>: The code review failed. </p> </li>
            <li> <p> <code>Deleting</code>: The code review is being deleted.
            </p> </li> </ul>
          in: query
          items:
            $ref: '#/definitions/JobState'
          maxItems: 3
          minItems: 1
          name: States
          required: false
          type: array
        - collectionFormat: multi
          description: ' List of repository names for filtering that needs to be applied before displaying the result. '
          in: query
          items:
            $ref: '#/definitions/Name'
          maxItems: 100
          minItems: 1
          name: RepositoryNames
          required: false
          type: array
        - description: ' The type of code reviews to list in the response. '
          enum:
            - PullRequest
            - RepositoryAnalysis
          in: query
          name: Type
          required: true
          type: string
        - description: ' The maximum number of results that are returned per call. The default is 100. '
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: ' If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '
          in: query
          maxLength: 2048
          minLength: 1
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCodeReviewsResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/codereviews/{CodeReviewArn}':
    get:
      description: ' Returns the metadata associated with the code review along with its status.'
      operationId: DescribeCodeReview
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the <a
            href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
            <code>CodeReview</code> </a> object. 
          in: path
          maxLength: 1600
          minLength: 1
          name: CodeReviewArn
          pattern: '^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCodeReviewResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/codereviews/{CodeReviewArn}/Recommendations':
    get:
      description: ' Returns the list of all recommendations for a completed code review. '
      operationId: ListRecommendations
      parameters:
        - description: ' Pagination token. '
          in: query
          maxLength: 2048
          minLength: 1
          name: NextToken
          required: false
          type: string
        - description: ' The maximum number of results that are returned per call. The default is 100. '
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            The Amazon Resource Name (ARN) of the <a
            href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
            <code>CodeReview</code> </a> object. 
          in: path
          maxLength: 1600
          minLength: 1
          name: CodeReviewArn
          pattern: '^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecommendationsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /feedback:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: ' Stores customer feedback for a CodeGuru Reviewer recommendation. When this API is called again with different reactions the previous feedback is overwritten. '
      operationId: PutRecommendationFeedback
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              CodeReviewArn:
                description: >-
                  The Amazon Resource Name (ARN) of the <a
                  href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
                  <code>CodeReview</code> </a> object. 
                maxLength: 1600
                minLength: 1
                pattern: >-
                  ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$
                type: string
              Reactions:
                description: ' List for storing reactions. Reactions are utf-8 text code for emojis. If you send an empty list it clears all your feedback. '
                items:
                  $ref: '#/definitions/Reaction'
                maxItems: 1
                minItems: 0
                type: array
              RecommendationId:
                description: ' The recommendation ID that can be used to track the provided recommendations and then to collect the feedback. '
                maxLength: 64
                minLength: 1
                type: string
            required:
              - CodeReviewArn
              - RecommendationId
              - Reactions
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRecommendationFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/feedback/{CodeReviewArn}#RecommendationId':
    get:
      description: ' Describes the customer feedback for a CodeGuru Reviewer recommendation. '
      operationId: DescribeRecommendationFeedback
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the <a
            href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
            <code>CodeReview</code> </a> object. 
          in: path
          maxLength: 1600
          minLength: 1
          name: CodeReviewArn
          pattern: '^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$'
          required: true
          type: string
        - description: ' The recommendation ID that can be used to track the provided recommendations and then to collect the feedback. '
          in: query
          maxLength: 64
          minLength: 1
          name: RecommendationId
          required: true
          type: string
        - description: >-
            <p> Optional parameter to describe the feedback for a given user. If
            this is not supplied, it defaults to the user making the request.
            </p> <p> The <code>UserId</code> is an IAM principal that can be
            specified as an Amazon Web Services account ID or an Amazon Resource
            Name (ARN). For more information, see <a
            href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
            Specifying a Principal</a> in the <i>Amazon Web Services Identity
            and Access Management User Guide</i>. </p>
          in: query
          maxLength: 256
          minLength: 1
          name: UserId
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecommendationFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/feedback/{CodeReviewArn}/RecommendationFeedback':
    get:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html"> <code>RecommendationFeedbackSummary</code> </a> objects that contain customer recommendation feedback for all CodeGuru Reviewer users. '
      operationId: ListRecommendationFeedback
      parameters:
        - description: ' If <code>nextToken</code> is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '
          in: query
          maxLength: 2048
          minLength: 1
          name: NextToken
          required: false
          type: string
        - description: ' The maximum number of results that are returned per call. The default is 100. '
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            The Amazon Resource Name (ARN) of the <a
            href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
            <code>CodeReview</code> </a> object. 
          in: path
          maxLength: 1600
          minLength: 1
          name: CodeReviewArn
          pattern: '^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:[a-z-]+:[\w-]+$'
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            <p> An Amazon Web Services user's account ID or Amazon Resource Name
            (ARN). Use this ID to query the recommendation feedback for a code
            review from that user. </p> <p> The <code>UserId</code> is an IAM
            principal that can be specified as an Amazon Web Services account ID
            or an Amazon Resource Name (ARN). For more information, see <a
            href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
            Specifying a Principal</a> in the <i>Amazon Web Services Identity
            and Access Management User Guide</i>. </p>
          in: query
          items:
            $ref: '#/definitions/UserId'
          maxItems: 100
          minItems: 1
          name: UserIds
          required: false
          type: array
        - collectionFormat: multi
          description: ' Used to query the recommendation feedback for a given recommendation. '
          in: query
          items:
            $ref: '#/definitions/RecommendationId'
          maxItems: 100
          minItems: 1
          name: RecommendationIds
          required: false
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecommendationFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{resourceArn}':
    get:
      description: >-
        Returns the list of tags associated with an associated repository
        resource.
      operationId: ListTagsForResource
      parameters:
        - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
          in: path
          maxLength: 1600
          minLength: 1
          name: resourceArn
          pattern: >-
            ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds one or more tags to an associated repository.
      operationId: TagResource
      parameters:
        - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
          in: path
          maxLength: 1600
          minLength: 1
          name: resourceArn
          pattern: >-
            ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  <p> An array of key-value pairs used to tag an associated
                  repository. A tag is a custom attribute label with two parts:
                  </p> <ul> <li> <p>A <i>tag key</i> (for example,
                  <code>CostCenter</code>, <code>Environment</code>,
                  <code>Project</code>, or <code>Secret</code>). Tag keys are
                  case sensitive.</p> </li> <li> <p>An optional field known as a
                  <i>tag value</i> (for example, <code>111122223333</code>,
                  <code>Production</code>, or a team name). Omitting the tag
                  value is the same as using an empty string. Like tag keys, tag
                  values are case sensitive.</p> </li> </ul>
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: Removes a tag from an associated repository.
      operationId: UntagResource
      parameters:
        - description: ' The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html"> <code>RepositoryAssociation</code> </a> object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html"> <code>ListRepositoryAssociations</code> </a>. '
          in: path
          maxLength: 1600
          minLength: 1
          name: resourceArn
          pattern: >-
            ^arn:aws[^:\s]*:codeguru-reviewer:[^:\s]+:[\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            A list of the keys for each tag you want to remove from an
            associated repository.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

