basePath: /
definitions:
  AcceptAdministratorInvitationRequest:
    properties:
      AdministratorId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The account ID of the Security Hub administrator account that sent
              the invitation.
      InvitationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the invitation sent from the Security Hub
              administrator account.
    required:
      - AdministratorId
      - InvitationId
    title: AcceptAdministratorInvitationRequest
    type: object
  AcceptAdministratorInvitationResponse:
    properties: {}
    type: object
  AcceptInvitationRequest:
    properties:
      InvitationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the invitation sent from the Security Hub
              administrator account.
      MasterId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The account ID of the Security Hub administrator account that sent
              the invitation.
    required:
      - MasterId
      - InvitationId
    title: AcceptInvitationRequest
    type: object
  AcceptInvitationResponse:
    properties: {}
    type: object
  AccessDeniedException: {}
  AccountDetails:
    description: The details of an Amazon Web Services account.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The ID of an Amazon Web Services account.
      Email:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The email of an Amazon Web Services account.
    required:
      - AccountId
    type: object
  AccountDetailsList:
    items:
      $ref: '#/definitions/AccountDetails'
    type: array
  AccountId:
    type: string
  AccountIdList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  Action:
    description: >-
      <p>Provides details about one of the following actions that affects or
      that was taken on a resource:</p> <ul> <li> <p>A remote IP address issued
      an Amazon Web Services API call</p> </li> <li> <p>A DNS request was
      received</p> </li> <li> <p>A remote IP address attempted to connect to an
      EC2 instance</p> </li> <li> <p>A remote IP address attempted a port probe
      on an EC2 instance</p> </li> </ul>
    properties:
      ActionType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of action that was detected. The possible action types
              are:</p> <ul> <li> <p> <code>NETWORK_CONNECTION</code> </p> </li>
              <li> <p> <code>AWS_API_CALL</code> </p> </li> <li> <p>
              <code>DNS_REQUEST</code> </p> </li> <li> <p>
              <code>PORT_PROBE</code> </p> </li> </ul>
      AwsApiCallAction:
        allOf:
          - $ref: '#/definitions/AwsApiCallAction'
          - description: >-
              Included if <code>ActionType</code> is <code>AWS_API_CALL</code>.
              Provides details about the API call that was detected. 
      DnsRequestAction:
        allOf:
          - $ref: '#/definitions/DnsRequestAction'
          - description: >-
              Included if <code>ActionType</code> is <code>DNS_REQUEST</code>.
              Provides details about the DNS request that was detected. 
      NetworkConnectionAction:
        allOf:
          - $ref: '#/definitions/NetworkConnectionAction'
          - description: >-
              Included if <code>ActionType</code> is
              <code>NETWORK_CONNECTION</code>. Provides details about the
              network connection that was detected.
      PortProbeAction:
        allOf:
          - $ref: '#/definitions/PortProbeAction'
          - description: >-
              Included if <code>ActionType</code> is <code>PORT_PROBE</code>.
              Provides details about the port probe that was detected. 
    type: object
  ActionLocalIpDetails:
    description: >-
      Provides information about the IP address where the scanned port is
      located.
    properties:
      IpAddressV4:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IP address.
    type: object
  ActionLocalPortDetails:
    description: >-
      For <code>NetworkConnectionAction</code> and
      <code>PortProbeDetails</code>, <code>LocalPortDetails</code> provides
      information about the local port that was involved in the action.
    properties:
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of the port.
      PortName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The port name of the local connection.
    type: object
  ActionRemoteIpDetails:
    description: >-
      For <code>AwsApiAction</code>, <code>NetworkConnectionAction</code>, and
      <code>PortProbeAction</code>, <code>RemoteIpDetails</code> provides
      information about the remote IP address that was involved in the action.
    properties:
      City:
        allOf:
          - $ref: '#/definitions/City'
          - description: The city where the remote IP address is located.
      Country:
        allOf:
          - $ref: '#/definitions/Country'
          - description: The country where the remote IP address is located.
      GeoLocation:
        allOf:
          - $ref: '#/definitions/GeoLocation'
          - description: The coordinates of the location of the remote IP address.
      IpAddressV4:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IP address.
      Organization:
        allOf:
          - $ref: '#/definitions/IpOrganizationDetails'
          - description: >-
              The internet service provider (ISP) organization associated with
              the remote IP address.
    type: object
  ActionRemotePortDetails:
    description: >-
      Provides information about the remote port that was involved in an
      attempted network connection.
    properties:
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of the port.
      PortName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The port name of the remote connection.
    type: object
  ActionTarget:
    description: An <code>ActionTarget</code> object.
    properties:
      ActionTargetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN for the target action.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the target action.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the action target.
    required:
      - ActionTargetArn
      - Name
      - Description
    type: object
  ActionTargetList:
    items:
      $ref: '#/definitions/ActionTarget'
    type: array
  Adjustment:
    description: An adjustment to the CVSS metric.
    properties:
      Metric:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The metric to adjust.
      Reason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The reason for the adjustment.
    type: object
  AdjustmentList:
    items:
      $ref: '#/definitions/Adjustment'
    type: array
  AdminAccount:
    description: >-
      Represents a Security Hub administrator account designated by an
      organization management account.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account identifier of the Security Hub
              administrator account.
      Status:
        allOf:
          - $ref: '#/definitions/AdminStatus'
          - description: >-
              The current status of the Security Hub administrator account.
              Indicates whether the account is currently enabled as a Security
              Hub administrator.
    type: object
  AdminAccounts:
    items:
      $ref: '#/definitions/AdminAccount'
    type: array
  AdminStatus:
    enum:
      - ENABLED
      - DISABLE_IN_PROGRESS
    type: string
  AdminsMaxResults:
    maximum: 10
    minimum: 1
    type: integer
  ArnList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  AvailabilityZone:
    description: Information about an Availability Zone.
    properties:
      SubnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of the subnet. You can specify one subnet per Availability
              Zone.
      ZoneName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the Availability Zone.
    type: object
  AvailabilityZones:
    items:
      $ref: '#/definitions/AvailabilityZone'
    type: array
  AwsApiCallAction:
    description: >-
      Provided if <code>ActionType</code> is <code>AWS_API_CALL</code>. It
      provides details about the API call that was detected.
    properties:
      AffectedResources:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: Identifies the resources that were affected by the API call.
      Api:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the API method that was issued.
      CallerType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Indicates whether the API call originated from a remote IP address
              (<code>remoteip</code>) or from a DNS domain
              (<code>domain</code>).
      DomainDetails:
        allOf:
          - $ref: '#/definitions/AwsApiCallActionDomainDetails'
          - description: >-
              Provided if <code>CallerType</code> is <code>domain</code>.
              Provides information about the DNS domain that the API call
              originated from.
      FirstSeen:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the API call
              was first observed.
      LastSeen:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the API call
              was most recently observed.
      RemoteIpDetails:
        allOf:
          - $ref: '#/definitions/ActionRemoteIpDetails'
          - description: >-
              Provided if <code>CallerType</code> is <code>remoteIp</code>.
              Provides information about the remote IP address that the API call
              originated from.
      ServiceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the Amazon Web Services service that the API method
              belongs to.
    type: object
  AwsApiCallActionDomainDetails:
    description: >-
      Provided if <code>CallerType</code> is <code>domain</code>. It provides
      information about the DNS domain that issued the API call.
    properties:
      Domain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the DNS domain that issued the API call.
    type: object
  AwsApiGatewayAccessLogSettings:
    description: Contains information about settings for logging access for the stage.
    properties:
      DestinationArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the CloudWatch Logs log group that receives the access
              logs.
      Format:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A single-line format of the access logs of data, as specified by
              selected <code>$context</code> variables. The format must include
              at least <code>$context.requestId</code>.
    type: object
  AwsApiGatewayCanarySettings:
    description: Contains information about settings for canary deployment in the stage.
    properties:
      DeploymentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The deployment identifier for the canary deployment.
      PercentTraffic:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The percentage of traffic that is diverted to a canary deployment.
      StageVariableOverrides:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>Stage variables that are overridden in the canary release
              deployment. The variables include new stage variables that are
              introduced in the canary.</p> <p>Each variable is represented as a
              string-to-string map between the stage variable name and the
              variable value.</p>
      UseStageCache:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the canary deployment uses the stage cache.
    type: object
  AwsApiGatewayEndpointConfiguration:
    description: Contains information about the endpoints for the API.
    properties:
      Types:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              <p>A list of endpoint types for the REST API.</p> <p>For an
              edge-optimized API, the endpoint type is <code>EDGE</code>. For a
              Regional API, the endpoint type is <code>REGIONAL</code>. For a
              private API, the endpoint type is <code>PRIVATE</code>.</p>
    type: object
  AwsApiGatewayMethodSettings:
    description: Defines settings for a method for the stage.
    properties:
      CacheDataEncrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: 'Indicates whether the cached responses are encrypted. '
      CacheTtlInSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the time to live (TTL), in seconds, for cached
              responses. The higher the TTL, the longer the response is cached.
      CachingEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether responses are cached and returned for requests.
              For responses to be cached, a cache cluster must be enabled on the
              stage.
      DataTraceEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether data trace logging is enabled for the method.
              Data trace logging affects the log entries that are pushed to
              CloudWatch Logs.
      HttpMethod:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The HTTP method. You can use an asterisk (*) as a wildcard to
              apply method settings to multiple methods.
      LoggingLevel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The logging level for this method. The logging level affects
              the log entries that are pushed to CloudWatch Logs.</p> <p>If the
              logging level is <code>ERROR</code>, then the logs only include
              error-level entries.</p> <p>If the logging level is
              <code>INFO</code>, then the logs include both <code>ERROR</code>
              events and extra informational events.</p> <p>Valid values:
              <code>OFF</code> | <code>ERROR</code> | <code>INFO</code> </p>
      MetricsEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: 'Indicates whether CloudWatch metrics are enabled for the method. '
      RequireAuthorizationForCacheControl:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether authorization is required for a cache
              invalidation request.
      ResourcePath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The resource path for this method. Forward slashes (/) are
              encoded as ~1 . The initial slash must include a forward
              slash.</p> <p>For example, the path value
              <code>/resource/subresource</code> must be encoded as
              <code>/~1resource~1subresource</code>.</p> <p>To specify the root
              path, use only a slash (/). You can use an asterisk (*) as a
              wildcard to apply method settings to multiple methods.</p>
      ThrottlingBurstLimit:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The throttling burst limit for the method.
      ThrottlingRateLimit:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The throttling rate limit for the method.
      UnauthorizedCacheControlHeaderStrategy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates how to handle unauthorized requests for cache
              invalidation.</p> <p>Valid values: <code>FAIL_WITH_403</code> |
              <code>SUCCEED_WITH_RESPONSE_HEADER</code> |
              <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code> </p>
    type: object
  AwsApiGatewayMethodSettingsList:
    items:
      $ref: '#/definitions/AwsApiGatewayMethodSettings'
    type: array
  AwsApiGatewayRestApiDetails:
    description: Contains information about a REST API in version 1 of Amazon API Gateway.
    properties:
      ApiKeySource:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The source of the API key for metering requests according to a
              usage plan.</p> <p> <code>HEADER</code> indicates whether to read
              the API key from the X-API-Key header of a request.</p> <p>
              <code>AUTHORIZER</code> indicates whether to read the API key from
              the <code>UsageIdentifierKey</code> from a custom authorizer.</p>
      BinaryMediaTypes:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The list of binary media types supported by the REST API.
      CreatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the API was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the REST API.
      EndpointConfiguration:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayEndpointConfiguration'
          - description: The endpoint configuration of the REST API.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the REST API.
      MinimumCompressionSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The minimum size in bytes of a payload before compression is
              enabled.</p> <p>If <code>null</code>, then compression is
              disabled.</p> <p>If 0, then all payloads are compressed.</p>
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the REST API.
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version identifier for the REST API.
    type: object
  AwsApiGatewayStageDetails:
    description: Provides information about a version 1 Amazon API Gateway stage.
    properties:
      AccessLogSettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayAccessLogSettings'
          - description: Settings for logging access for the stage.
      CacheClusterEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether a cache cluster is enabled for the stage.
      CacheClusterSize:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'If a cache cluster is enabled, the size of the cache cluster.'
      CacheClusterStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'If a cache cluster is enabled, the status of the cache cluster.'
      CanarySettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayCanarySettings'
          - description: Information about settings for canary deployment in the stage.
      ClientCertificateId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the client certificate for the stage.
      CreatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the stage was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DeploymentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the deployment that the stage points to.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the stage.
      DocumentationVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The version of the API documentation that is associated with the
              stage.
      LastUpdatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the stage was most recently updated.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      MethodSettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayMethodSettingsList'
          - description: Defines the method settings for the stage.
      StageName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the stage.
      TracingEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether active tracing with X-Ray is enabled for the
              stage.
      Variables:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>A map that defines the stage variables for the stage.</p>
              <p>Variable names can have alphanumeric and underscore
              characters.</p> <p>Variable values can contain the following
              characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p>
              </li> <li> <p>Numbers</p> </li> <li> <p>Special characters
              -._~:/?#&amp;=,</p> </li> </ul>
      WebAclArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the web ACL associated with the stage.
    type: object
  AwsApiGatewayV2ApiDetails:
    description: Contains information about a version 2 API in Amazon API Gateway.
    properties:
      ApiEndpoint:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The URI of the API. </p> <p>Uses the format <code>
              <i>&lt;api-id&gt;</i>.execute-api.<i>&lt;region&gt;</i>.amazonaws.com</code>
              </p> <p>The stage name is typically appended to the URI to form a
              complete path to a deployed API stage.</p>
      ApiId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the API.
      ApiKeySelectionExpression:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An API key selection expression. Supported only for WebSocket
              APIs. 
      CorsConfiguration:
        allOf:
          - $ref: '#/definitions/AwsCorsConfiguration'
          - description: >-
              A cross-origin resource sharing (CORS) configuration. Supported
              only for HTTP APIs.
      CreatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the API was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the API.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the API.
      ProtocolType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The API protocol for the API.</p> <p>Valid values:
              <code>WEBSOCKET</code> | <code>HTTP</code> </p>
      RouteSelectionExpression:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The route selection expression for the API.</p> <p>For HTTP
              APIs, must be <code>${request.method} ${request.path}</code>. This
              is the default value for HTTP APIs.</p> <p>For WebSocket APIs,
              there is no default value.</p>
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version identifier for the API.
    type: object
  AwsApiGatewayV2RouteSettings:
    description: Contains route settings for a stage.
    properties:
      DataTraceEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether data trace logging is enabled. Data trace
              logging affects the log entries that are pushed to CloudWatch
              Logs. Supported only for WebSocket APIs.
      DetailedMetricsEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether detailed metrics are enabled.
      LoggingLevel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The logging level. The logging level affects the log entries
              that are pushed to CloudWatch Logs. Supported only for WebSocket
              APIs.</p> <p>If the logging level is <code>ERROR</code>, then the
              logs only include error-level entries.</p> <p>If the logging level
              is <code>INFO</code>, then the logs include both
              <code>ERROR</code> events and extra informational events.</p>
              <p>Valid values: <code>OFF</code> | <code>ERROR</code> |
              <code>INFO</code> </p>
      ThrottlingBurstLimit:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The throttling burst limit.
      ThrottlingRateLimit:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The throttling rate limit.
    type: object
  AwsApiGatewayV2StageDetails:
    description: Contains information about a version 2 stage for Amazon API Gateway.
    properties:
      AccessLogSettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayAccessLogSettings'
          - description: Information about settings for logging access for the stage.
      ApiGatewayManaged:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the stage is managed by API Gateway.
      AutoDeploy:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether updates to an API automatically trigger a new
              deployment.
      ClientCertificateId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of a client certificate for a stage. Supported only
              for WebSocket API calls.
      CreatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the stage was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DefaultRouteSettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayV2RouteSettings'
          - description: Default route settings for the stage.
      DeploymentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the deployment that the stage is associated
              with. 
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the stage.
      LastDeploymentStatusMessage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The status of the last deployment of a stage. Supported only if
              the stage has automatic deployment enabled.
      LastUpdatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the stage was most recently updated.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      RouteSettings:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayV2RouteSettings'
          - description: The route settings for the stage.
      StageName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the stage.
      StageVariables:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>A map that defines the stage variables for the stage.</p>
              <p>Variable names can have alphanumeric and underscore
              characters.</p> <p>Variable values can contain the following
              characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p>
              </li> <li> <p>Numbers</p> </li> <li> <p>Special characters
              -._~:/?#&amp;=,</p> </li> </ul>
    type: object
  AwsAutoScalingAutoScalingGroupDetails:
    description: Provides details about an auto scaling group.
    properties:
      CreatedTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the auto scaling group was created.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      HealthCheckGracePeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
              before it checks the health status of an EC2 instance that has
              come into service.
      HealthCheckType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The service to use for the health checks.
      LaunchConfigurationName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the launch configuration.
      LoadBalancerNames:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The list of load balancers associated with the group.
    type: object
  AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails:
    description: A block device for the instance.
    properties:
      DeviceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The device name that is exposed to the EC2 instance. For example,
              <code>/dev/sdh</code> or <code>xvdh</code>.
      Ebs:
        allOf:
          - $ref: >-
              #/definitions/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails
          - description: >-
              Parameters that are used to automatically set up Amazon EBS
              volumes when an instance is launched.
      NoDevice:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether to suppress the device that is included in the block
              device mapping of the Amazon Machine Image (AMI).</p> <p>If
              <code>NoDevice</code> is <code>true</code>, then you cannot
              specify <code>Ebs</code>.&gt;</p>
      VirtualName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the virtual device (for example,
              <code>ephemeral0</code>).</p> <p>You can provide either
              <code>VirtualName</code> or <code>Ebs</code>, but not both.</p>
    type: object
  AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails:
    description: >-
      Parameters that are used to automatically set up EBS volumes when an
      instance is launched.
    properties:
      DeleteOnTermination:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to delete the volume when the instance is terminated.
      Encrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to encrypt the volume.
      Iops:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The number of input/output (I/O) operations per second (IOPS)
              to provision for the volume.</p> <p>Only supported for
              <code>gp3</code> or <code>io1</code> volumes. Required for
              <code>io1</code> volumes. Not used with <code>standard</code>,
              <code>gp2</code>, <code>st1</code>, or <code>sc1</code>
              volumes.</p>
      SnapshotId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The snapshot ID of the volume to use.</p> <p>You must specify
              either <code>VolumeSize</code> or <code>SnapshotId</code>.</p>
      VolumeSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The volume size, in GiBs. The following are the supported
              volumes sizes for each volume type:</p> <ul> <li> <p>gp2 and gp3:
              1-16,384</p> </li> <li> <p>io1: 4-16,384</p> </li> <li> <p>st1 and
              sc1: 125-16,384</p> </li> <li> <p>standard: 1-1,024</p> </li>
              </ul> <p>You must specify either <code>SnapshotId</code> or
              <code>VolumeSize</code>. If you specify both
              <code>SnapshotId</code> and <code>VolumeSize</code>, the volume
              size must be equal or greater than the size of the snapshot.</p>
      VolumeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The volume type.
    type: object
  AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList:
    items:
      $ref: >-
        #/definitions/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails
    type: array
  AwsAutoScalingLaunchConfigurationDetails:
    description: Details about a launch configuration.
    properties:
      AssociatePublicIpAddress:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              For Auto Scaling groups that run in a VPC, specifies whether to
              assign a public IP address to the group's instances.
      BlockDeviceMappings:
        allOf:
          - $ref: >-
              #/definitions/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList
          - description: Specifies the block devices for the instance.
      ClassicLinkVpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of a ClassicLink-enabled VPC that EC2-Classic
              instances are linked to.
      ClassicLinkVpcSecurityGroups:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The identifiers of one or more security groups for the VPC that is
              specified in <code>ClassicLinkVPCId</code>.
      CreatedTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The creation date and time for the launch configuration.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      EbsOptimized:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the launch configuration is optimized for Amazon EBS I/O.
      IamInstanceProfile:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name or the ARN of the instance profile associated with the
              IAM role for the instance. The instance profile contains the IAM
              role.
      ImageId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the Amazon Machine Image (AMI) that is used to
              launch EC2 instances.
      InstanceMonitoring:
        allOf:
          - $ref: >-
              #/definitions/AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails
          - description: Indicates the type of monitoring for instances in the group.
      InstanceType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The instance type for the instances.
      KernelId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the kernel associated with the AMI.
      KeyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the key pair.
      LaunchConfigurationName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the launch configuration.
      PlacementTenancy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The tenancy of the instance. An instance with
              <code>dedicated</code> tenancy runs on isolated, single-tenant
              hardware and can only be launched into a VPC.
      RamdiskId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the RAM disk associated with the AMI.
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The security groups to assign to the instances in the Auto Scaling
              group.
      SpotPrice:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The maximum hourly price to be paid for any Spot Instance that is
              launched to fulfill the request.
      UserData:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The user data to make available to the launched EC2 instances.
              Must be base64-encoded text.
    type: object
  AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails:
    description: Information about the type of monitoring for instances in the group.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>If set to <code>true</code>, then instances in the group launch
              with detailed monitoring.</p> <p>If set to <code>false</code>,
              then instances in the group launch with basic monitoring.</p>
    type: object
  AwsCertificateManagerCertificateDetails:
    description: Provides details about an Certificate Manager certificate.
    properties:
      CertificateAuthorityArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the private certificate authority (CA) that will be
              used to issue the certificate.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the certificate was requested.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DomainName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The fully qualified domain name (FQDN), such as www.example.com,
              that is secured by the certificate.
      DomainValidationOptions:
        allOf:
          - $ref: >-
              #/definitions/AwsCertificateManagerCertificateDomainValidationOptions
          - description: >-
              <p>Contains information about the initial validation of each
              domain name that occurs as a result of the
              <code>RequestCertificate</code> request.</p> <p>Only provided if
              the certificate type is <code>AMAZON_ISSUED</code>.</p>
      ExtendedKeyUsages:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateExtendedKeyUsages'
          - description: >-
              Contains a list of Extended Key Usage X.509 v3 extension objects.
              Each object specifies a purpose for which the certificate public
              key can be used and consists of a name and an object identifier
              (OID).
      FailureReason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>For a failed certificate request, the reason for the
              failure.</p> <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> |
              <code>ADDITIONAL_VERIFICATION_REQUIRED</code> |
              <code>DOMAIN_NOT_ALLOWED</code> |
              <code>INVALID_PUBLIC_DOMAIN</code> |
              <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> |
              <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> |
              <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> |
              <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> |
              <code>PCA_RESOURCE_NOT_FOUND</code> |
              <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code>
              | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> |
              <code>OTHER</code> </p>
      ImportedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the certificate was imported. Provided if the
              certificate type is <code>IMPORTED</code>.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      InUseBy:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              The list of ARNs for the Amazon Web Services resources that use
              the certificate.
      IssuedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the certificate was issued. Provided if the
              certificate type is <code>AMAZON_ISSUED</code>.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Issuer:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the certificate authority that issued and signed the
              certificate.
      KeyAlgorithm:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The algorithm that was used to generate the public-private key
              pair.</p> <p>Valid values: <code>RSA_2048</code> |
              <code>RSA_1024</code> |<code> RSA_4096</code> |
              <code>EC_prime256v1</code> | <code>EC_secp384r1</code> |
              <code>EC_secp521r1</code> </p>
      KeyUsages:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateKeyUsages'
          - description: A list of key usage X.509 v3 extension objects.
      NotAfter:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The time after which the certificate becomes invalid.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      NotBefore:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The time before which the certificate is not valid.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Options:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateOptions'
          - description: >-
              Provides a value that specifies whether to add the certificate to
              a transparency log.
      RenewalEligibility:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Whether the certificate is eligible for renewal.</p> <p>Valid
              values: <code>ELIGIBLE</code> | <code>INELIGIBLE</code> </p>
      RenewalSummary:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateRenewalSummary'
          - description: >-
              Information about the status of the Certificate Manager managed
              renewal for the certificate. Provided only when the certificate
              type is <code>AMAZON_ISSUED</code>.
      Serial:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The serial number of the certificate.
      SignatureAlgorithm:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The algorithm that was used to sign the certificate.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the certificate.</p> <p>Valid values:
              <code>PENDING_VALIDATION</code> | <code>ISSUED</code> |
              <code>INACTIVE</code> | <code>EXPIRED</code> |
              <code>VALIDATION_TIMED_OUT</code> | <code>REVOKED</code> |
              <code>FAILED</code> </p>
      Subject:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the entity that is associated with the public key
              contained in the certificate.
      SubjectAlternativeNames:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              <p>One or more domain names (subject alternative names) included
              in the certificate. This list contains the domain names that are
              bound to the public key that is contained in the certificate.</p>
              <p>The subject alternative names include the canonical domain name
              (CN) of the certificate and additional domain names that can be
              used to connect to the website.</p>
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The source of the certificate. For certificates that
              Certificate Manager provides, <code>Type</code> is
              <code>AMAZON_ISSUED</code>. For certificates that are imported
              with <code>ImportCertificate</code>, <code>Type</code> is
              <code>IMPORTED</code>.</p> <p>Valid values: <code>IMPORTED</code>
              | <code>AMAZON_ISSUED</code> | <code>PRIVATE</code> </p>
    type: object
  AwsCertificateManagerCertificateDomainValidationOption:
    description: >-
      <p>Contains information about one of the following:</p> <ul> <li> <p>The
      initial validation of each domain name that occurs as a result of the
      <code>RequestCertificate</code> request</p> </li> <li> <p>The validation
      of each domain name in the certificate, as it pertains to Certificate
      Manager managed renewal</p> </li> </ul>
    properties:
      DomainName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A fully qualified domain name (FQDN) in the certificate.
      ResourceRecord:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateResourceRecord'
          - description: >-
              The CNAME record that is added to the DNS database for domain
              validation.
      ValidationDomain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The domain name that Certificate Manager uses to send domain
              validation emails.
      ValidationEmails:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of email addresses that Certificate Manager uses to send
              domain validation emails.
      ValidationMethod:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The method used to validate the domain name.
      ValidationStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The validation status of the domain name.
    type: object
  AwsCertificateManagerCertificateDomainValidationOptions:
    items:
      $ref: '#/definitions/AwsCertificateManagerCertificateDomainValidationOption'
    type: array
  AwsCertificateManagerCertificateExtendedKeyUsage:
    description: >-
      Contains information about an extended key usage X.509 v3 extension
      object.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of an extension value. Indicates the purpose for which
              the certificate public key can be used.
      OId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>An object identifier (OID) for the extension value.</p> <p>The
              format is numbers separated by periods.</p>
    type: object
  AwsCertificateManagerCertificateExtendedKeyUsages:
    items:
      $ref: '#/definitions/AwsCertificateManagerCertificateExtendedKeyUsage'
    type: array
  AwsCertificateManagerCertificateKeyUsage:
    description: Contains information about a key usage X.509 v3 extension object.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The key usage extension name.
    type: object
  AwsCertificateManagerCertificateKeyUsages:
    items:
      $ref: '#/definitions/AwsCertificateManagerCertificateKeyUsage'
    type: array
  AwsCertificateManagerCertificateOptions:
    description: Contains other options for the certificate.
    properties:
      CertificateTransparencyLoggingPreference:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Whether to add the certificate to a transparency log.</p>
              <p>Valid values: <code>DISABLED</code> | <code>ENABLED</code> </p>
    type: object
  AwsCertificateManagerCertificateRenewalSummary:
    description: >-
      Contains information about the Certificate Manager managed renewal for an
      <code>AMAZON_ISSUED</code> certificate.
    properties:
      DomainValidationOptions:
        allOf:
          - $ref: >-
              #/definitions/AwsCertificateManagerCertificateDomainValidationOptions
          - description: >-
              Information about the validation of each domain name in the
              certificate, as it pertains to Certificate Manager managed
              renewal. Provided only when the certificate type is
              <code>AMAZON_ISSUED</code>.
      RenewalStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the Certificate Manager managed renewal of the
              certificate.</p> <p>Valid values:
              <code>PENDING_AUTO_RENEWAL</code> |
              <code>PENDING_VALIDATION</code> | <code>SUCCESS</code> |
              <code>FAILED</code> </p>
      RenewalStatusReason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The reason that a renewal request was unsuccessful.</p>
              <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> |
              <code>ADDITIONAL_VERIFICATION_REQUIRED</code> |
              <code>DOMAIN_NOT_ALLOWED</code> |
              <code>INVALID_PUBLIC_DOMAIN</code> |
              <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> |
              <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> |
              <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> |
              <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> |
              <code>PCA_RESOURCE_NOT_FOUND</code> |
              <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code>
              | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> |
              <code>OTHER</code> </p>
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the renewal summary was last updated.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  AwsCertificateManagerCertificateResourceRecord:
    description: >-
      Provides details about the CNAME record that is added to the DNS database
      for domain validation.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the resource.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of resource.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the resource.
    type: object
  AwsCloudFrontDistributionCacheBehavior:
    description: Information about a cache behavior for the distribution.
    properties:
      ViewerProtocolPolicy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The protocol that viewers can use to access the files in an
              origin. You can specify the following options:</p> <ul> <li> <p>
              <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li>
              <li> <p> <code>redirect-to-https</code> - CloudFront responds to
              HTTP requests with an HTTP status code of 301 (Moved Permanently)
              and the HTTPS URL. The viewer then uses the new URL to
              resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront
              responds to HTTP request with an HTTP status code of 403
              (Forbidden).</p> </li> </ul>
    type: object
  AwsCloudFrontDistributionCacheBehaviors:
    description: Provides information about caching for the distribution.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionCacheBehaviorsItemList'
          - description: The cache behaviors for the distribution.
    type: object
  AwsCloudFrontDistributionCacheBehaviorsItemList:
    items:
      $ref: '#/definitions/AwsCloudFrontDistributionCacheBehavior'
    type: array
  AwsCloudFrontDistributionDefaultCacheBehavior:
    description: >-
      Contains information about the default cache configuration for the
      distribution.
    properties:
      ViewerProtocolPolicy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The protocol that viewers can use to access the files in an
              origin. You can specify the following options:</p> <ul> <li> <p>
              <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li>
              <li> <p> <code>redirect-to-https</code> - CloudFront responds to
              HTTP requests with an HTTP status code of 301 (Moved Permanently)
              and the HTTPS URL. The viewer then uses the new URL to
              resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront
              responds to HTTP request with an HTTP status code of 403
              (Forbidden).</p> </li> </ul>
    type: object
  AwsCloudFrontDistributionDetails:
    description: A distribution configuration.
    properties:
      CacheBehaviors:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionCacheBehaviors'
          - description: >-
              Provides information about the cache configuration for the
              distribution.
      DefaultCacheBehavior:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionDefaultCacheBehavior'
          - description: The default cache behavior for the configuration.
      DefaultRootObject:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The object that CloudFront sends in response to requests from the
              origin (for example, index.html) when a viewer requests the root
              URL for the distribution (http://www.example.com) instead of an
              object in your distribution
              (http://www.example.com/product-description.html). 
      DomainName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The domain name corresponding to the distribution.
      ETag:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The entity tag is a hash of the object.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when that the distribution was last modified.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Logging:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionLogging'
          - description: >-
              A complex type that controls whether access logs are written for
              the distribution.
      OriginGroups:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOriginGroups'
          - description: Provides information about the origin groups in the distribution.
      Origins:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOrigins'
          - description: >-
              A complex type that contains information about origins for this
              distribution.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Indicates the current status of the distribution.
      WebAclId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A unique identifier that specifies the WAF web ACL, if any, to
              associate with this distribution.
    type: object
  AwsCloudFrontDistributionLogging:
    description: >-
      A complex type that controls whether access logs are written for the
      distribution.
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The S3 bucket to store the access logs in.
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              With this field, you can enable or disable the selected
              distribution.
      IncludeCookies:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether you want CloudFront to include cookies in access
              logs.
      Prefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An optional string that you want CloudFront to use as a prefix to
              the access log filenames for this distribution.
    type: object
  AwsCloudFrontDistributionOriginGroup:
    description: Information about an origin group for the distribution.
    properties:
      FailoverCriteria:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOriginGroupFailover'
          - description: Provides the criteria for an origin group to fail over.
    type: object
  AwsCloudFrontDistributionOriginGroupFailover:
    description: Provides information about when an origin group fails over.
    properties:
      StatusCodes:
        allOf:
          - $ref: >-
              #/definitions/AwsCloudFrontDistributionOriginGroupFailoverStatusCodes
          - description: >-
              Information about the status codes that cause an origin group to
              fail over.
    type: object
  AwsCloudFrontDistributionOriginGroupFailoverStatusCodes:
    description: The status codes that cause an origin group to fail over.
    properties:
      Items:
        allOf:
          - $ref: >-
              #/definitions/AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList
          - description: >-
              The list of status code values that can cause a failover to the
              next origin.
      Quantity:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of status codes that can cause a failover.
    type: object
  AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList:
    items:
      $ref: '#/definitions/Integer'
    type: array
  AwsCloudFrontDistributionOriginGroups:
    description: >-
      Provides information about origin groups that are associated with the
      distribution.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOriginGroupsItemList'
          - description: The list of origin groups.
    type: object
  AwsCloudFrontDistributionOriginGroupsItemList:
    items:
      $ref: '#/definitions/AwsCloudFrontDistributionOriginGroup'
    type: array
  AwsCloudFrontDistributionOriginItem:
    description: >-
      A complex type that describes the S3 bucket, HTTP server (for example, a
      web server), AWS Elemental MediaStore, or other server from which
      CloudFront gets your files.
    properties:
      DomainName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Amazon S3 origins: The DNS name of the S3 bucket from which you
              want CloudFront to get objects for this origin.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A unique identifier for the origin or origin group.
      OriginPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An optional element that causes CloudFront to request your content
              from a directory in your Amazon S3 bucket or your custom origin.
      S3OriginConfig:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOriginS3OriginConfig'
          - description: >-
              An origin that is an S3 bucket that is not configured with static
              website hosting.
    type: object
  AwsCloudFrontDistributionOriginItemList:
    items:
      $ref: '#/definitions/AwsCloudFrontDistributionOriginItem'
    type: array
  AwsCloudFrontDistributionOriginS3OriginConfig:
    description: >-
      Information about an origin that is an S3 bucket that is not configured
      with static website hosting.
    properties:
      OriginAccessIdentity:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The CloudFront origin access identity to associate with the
              origin.
    type: object
  AwsCloudFrontDistributionOrigins:
    description: >-
      A complex type that contains information about origins and origin groups
      for this distribution.
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionOriginItemList'
          - description: >-
              A complex type that contains origins or origin groups for this
              distribution.
    type: object
  AwsCloudTrailTrailDetails:
    description: Provides details about a CloudTrail trail.
    properties:
      CloudWatchLogsLogGroupArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the log group that CloudTrail logs are delivered to.
      CloudWatchLogsRoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the role that the CloudWatch Events endpoint assumes
              when it writes to the log group.
      HasCustomEventSelectors:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the trail has custom event selectors.
      HomeRegion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Region where the trail was created.
      IncludeGlobalServiceEvents:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether the trail publishes events from global services
              such as IAM to the log files.
      IsMultiRegionTrail:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether the trail applies only to the current Region or
              to all Regions.
      IsOrganizationTrail:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the trail is created for all accounts in an organization
              in Organizations, or only for the current Amazon Web Services
              account.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The KMS key ID to use to encrypt the logs.
      LogFileValidationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether CloudTrail log file validation is enabled.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the trail.
      S3BucketName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the S3 bucket where the log files are published.
      S3KeyPrefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The S3 key prefix. The key prefix is added after the name of the
              S3 bucket where the log files are published.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the SNS topic that is used for notifications of log
              file delivery.
      SnsTopicName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the SNS topic that is used for notifications of log
              file delivery.
      TrailArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the trail.
    type: object
  AwsCodeBuildProjectDetails:
    description: Information about an CodeBuild project.
    properties:
      EncryptionKey:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The KMS key used to encrypt the build output artifacts.</p>
              <p>You can specify either the ARN of the KMS key or, if available,
              the KMS key alias (using the format alias/alias-name). </p>
      Environment:
        allOf:
          - $ref: '#/definitions/AwsCodeBuildProjectEnvironment'
          - description: Information about the build environment for this build project.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the build project.
      ServiceRole:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the IAM role that enables CodeBuild to interact with
              dependent Amazon Web Services services on behalf of the Amazon Web
              Services account.
      Source:
        allOf:
          - $ref: '#/definitions/AwsCodeBuildProjectSource'
          - description: >-
              Information about the build input source code for this build
              project.
      VpcConfig:
        allOf:
          - $ref: '#/definitions/AwsCodeBuildProjectVpcConfig'
          - description: Information about the VPC configuration that CodeBuild accesses.
    type: object
  AwsCodeBuildProjectEnvironment:
    description: Information about the build environment for this build project.
    properties:
      Certificate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The certificate to use with this build project.
      ImagePullCredentialsType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of credentials CodeBuild uses to pull images in your
              build.</p> <p>Valid values:</p> <ul> <li> <p>
              <code>CODEBUILD</code> specifies that CodeBuild uses its own
              credentials. This requires that you modify your ECR repository
              policy to trust the CodeBuild service principal.</p> </li> <li>
              <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your
              build project's service role.</p> </li> </ul> <p>When you use a
              cross-account or private registry image, you must use
              <code>SERVICE_ROLE</code> credentials. When you use an CodeBuild
              curated image, you must use <code>CODEBUILD</code>
              credentials.</p>
      RegistryCredential:
        allOf:
          - $ref: '#/definitions/AwsCodeBuildProjectEnvironmentRegistryCredential'
          - description: The credentials for access to a private registry.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of build environment to use for related builds.</p>
              <p>The environment type <code>ARM_CONTAINER</code> is available
              only in Regions US East (N. Virginia), US East (Ohio), US West
              (Oregon), Europe (Ireland), Asia Pacific (Mumbai), Asia Pacific
              (Tokyo), Asia Pacific (Sydney), and Europe (Frankfurt).</p> <p>The
              environment type <code>LINUX_CONTAINER</code> with compute type
              build.general1.2xlarge is available only in Regions US East (N.
              Virginia), US East (N. Virginia), US West (Oregon), Canada
              (Central), Europe (Ireland), Europe (London), Europe (Frankfurt),
              Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific
              (Singapore), Asia Pacific (Sydney), China (Beijing), and China
              (Ningxia).</p> <p>The environment type
              <code>LINUX_GPU_CONTAINER</code> is available only in Regions US
              East (N. Virginia), US East (N. Virginia), US West (Oregon),
              Canada (Central), Europe (Ireland), Europe (London), Europe
              (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia
              Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and
              China (Ningxia).</p> <p>Valid values:
              <code>WINDOWS_CONTAINER</code> | <code>LINUX_CONTAINER</code> |
              <code>LINUX_GPU_CONTAINER</code> | <code>ARM_CONTAINER</code> </p>
    type: object
  AwsCodeBuildProjectEnvironmentRegistryCredential:
    description: The credentials for access to a private registry.
    properties:
      Credential:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The ARN or name of credentials created using Secrets
              Manager.</p> <note> <p>The credential can use the name of the
              credentials only if they exist in your current Amazon Web Services
              Region. </p> </note>
      CredentialProvider:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The service that created the credentials to access a private
              Docker registry.</p> <p>The valid value,<code>
              SECRETS_MANAGER</code>, is for Secrets Manager.</p>
    type: object
  AwsCodeBuildProjectSource:
    description: Information about the build input source code for this build project.
    properties:
      GitCloneDepth:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Information about the Git clone depth for the build project.
      InsecureSsl:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to ignore SSL warnings while connecting to the project
              source code.
      Location:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Information about the location of the source code to be
              built.</p> <p>Valid values include:</p> <ul> <li> <p>For source
              code settings that are specified in the source action of a
              pipeline in CodePipeline, location should not be specified. If it
              is specified, CodePipeline ignores it. This is because
              CodePipeline uses the settings in a pipeline's source action
              instead of this value.</p> </li> <li> <p>For source code in an
              CodeCommit repository, the HTTPS clone URL to the repository that
              contains the source code and the build spec file (for example,
              <code>https://git-codecommit.region-ID.amazonaws.com/v1/repos/repo-name</code>
              ).</p> </li> <li> <p>For source code in an S3 input bucket, one of
              the following.</p> <ul> <li> <p>The path to the ZIP file that
              contains the source code (for example,
              <code>bucket-name/path/to/object-name.zip</code>).</p> </li> <li>
              <p> The path to the folder that contains the source code (for
              example,
              <code>bucket-name/path/to/source-code/folder/</code>).</p> </li>
              </ul> </li> <li> <p>For source code in a GitHub repository, the
              HTTPS clone URL to the repository that contains the source and the
              build spec file.</p> </li> <li> <p>For source code in a Bitbucket
              repository, the HTTPS clone URL to the repository that contains
              the source and the build spec file. </p> </li> </ul>
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of repository that contains the source code to be
              built. Valid values are:</p> <ul> <li> <p> <code>BITBUCKET</code>
              - The source code is in a Bitbucket repository.</p> </li> <li> <p>
              <code>CODECOMMIT</code> - The source code is in an CodeCommit
              repository.</p> </li> <li> <p> <code>CODEPIPELINE</code> - The
              source code settings are specified in the source action of a
              pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code> -
              The source code is in a GitHub repository.</p> </li> <li> <p>
              <code>GITHUB_ENTERPRISE</code> - The source code is in a GitHub
              Enterprise repository.</p> </li> <li> <p> <code>NO_SOURCE</code> -
              The project does not have input source code.</p> </li> <li> <p>
              <code>S3</code> - The source code is in an S3 input bucket. </p>
              </li> </ul>
    type: object
  AwsCodeBuildProjectVpcConfig:
    description: Information about the VPC configuration that CodeBuild accesses.
    properties:
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of one or more security group IDs in your VPC.
      Subnets:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of one or more subnet IDs in your VPC.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the VPC.
    type: object
  AwsCorsConfiguration:
    description: >-
      Contains the cross-origin resource sharing (CORS) configuration for the
      API. CORS is only supported for HTTP APIs.
    properties:
      AllowCredentials:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the CORS request includes credentials.
      AllowHeaders:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The allowed headers for CORS requests.
      AllowMethods:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The allowed methods for CORS requests.
      AllowOrigins:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The allowed origins for CORS requests.
      ExposeHeaders:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The exposed headers for CORS requests.
      MaxAge:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of seconds for which the browser caches preflight
              request results.
    type: object
  AwsDynamoDbTableAttributeDefinition:
    description: Contains a definition of an attribute for the table.
    properties:
      AttributeName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the attribute.
      AttributeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of the attribute.
    type: object
  AwsDynamoDbTableAttributeDefinitionList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableAttributeDefinition'
    type: array
  AwsDynamoDbTableBillingModeSummary:
    description: >-
      Provides information about the billing for read/write capacity on the
      table.
    properties:
      BillingMode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The method used to charge for read and write throughput and to
              manage capacity.
      LastUpdateToPayPerRequestDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates
              when the billing mode was set to that value.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  AwsDynamoDbTableDetails:
    description: Provides details about a DynamoDB table.
    properties:
      AttributeDefinitions:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableAttributeDefinitionList'
          - description: A list of attribute definitions for the table.
      BillingModeSummary:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableBillingModeSummary'
          - description: >-
              Information about the billing for read/write capacity on the
              table.
      CreationDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the table was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      GlobalSecondaryIndexes:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableGlobalSecondaryIndexList'
          - description: List of global secondary indexes for the table.
      GlobalTableVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of global tables being used.
      ItemCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of items in the table.
      KeySchema:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableKeySchemaList'
          - description: The primary key structure for the table.
      LatestStreamArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the latest stream for the table.
      LatestStreamLabel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The label of the latest stream. The label is not a unique
              identifier.
      LocalSecondaryIndexes:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableLocalSecondaryIndexList'
          - description: The list of local secondary indexes for the table.
      ProvisionedThroughput:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProvisionedThroughput'
          - description: Information about the provisioned throughput for the table.
      Replicas:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableReplicaList'
          - description: The list of replicas of this table.
      RestoreSummary:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableRestoreSummary'
          - description: Information about the restore for the table.
      SseDescription:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableSseDescription'
          - description: Information about the server-side encryption for the table.
      StreamSpecification:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableStreamSpecification'
          - description: The current DynamoDB Streams configuration for the table.
      TableId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the table.
      TableName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the table.
      TableSizeBytes:
        allOf:
          - $ref: '#/definitions/SizeBytes'
          - description: The total size of the table in bytes.
      TableStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current status of the table.
    type: object
  AwsDynamoDbTableGlobalSecondaryIndex:
    description: Information abut a global secondary index for the table.
    properties:
      Backfilling:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the index is currently backfilling.
      IndexArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the index.
      IndexName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the index.
      IndexSizeBytes:
        allOf:
          - $ref: '#/definitions/SizeBytes'
          - description: The total size in bytes of the index.
      IndexStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current status of the index.
      ItemCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of items in the index.
      KeySchema:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableKeySchemaList'
          - description: The key schema for the index.
      Projection:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProjection'
          - description: Attributes that are copied from the table into an index.
      ProvisionedThroughput:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProvisionedThroughput'
          - description: >-
              Information about the provisioned throughput settings for the
              indexes.
    type: object
  AwsDynamoDbTableGlobalSecondaryIndexList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableGlobalSecondaryIndex'
    type: array
  AwsDynamoDbTableKeySchema:
    description: >-
      A component of the key schema for the DynamoDB table, a global secondary
      index, or a local secondary index.
    properties:
      AttributeName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the key schema attribute.
      KeyType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of key used for the key schema attribute.
    type: object
  AwsDynamoDbTableKeySchemaList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableKeySchema'
    type: array
  AwsDynamoDbTableLocalSecondaryIndex:
    description: Information about a local secondary index for a DynamoDB table.
    properties:
      IndexArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the index.
      IndexName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the index.
      KeySchema:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableKeySchemaList'
          - description: The complete key schema for the index.
      Projection:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProjection'
          - description: >-
              Attributes that are copied from the table into the index. These
              are in addition to the primary key attributes and index key
              attributes, which are automatically projected.
    type: object
  AwsDynamoDbTableLocalSecondaryIndexList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableLocalSecondaryIndex'
    type: array
  AwsDynamoDbTableProjection:
    description: >-
      For global and local secondary indexes, identifies the attributes that are
      copied from the table into the index.
    properties:
      NonKeyAttributes:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              The nonkey attributes that are projected into the index. For each
              attribute, provide the attribute name.
      ProjectionType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The types of attributes that are projected into the index.
    type: object
  AwsDynamoDbTableProvisionedThroughput:
    description: >-
      Information about the provisioned throughput for the table or for a global
      secondary index.
    properties:
      LastDecreaseDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the provisioned throughput was last
              decreased.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      LastIncreaseDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the provisioned throughput was last
              increased.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      NumberOfDecreasesToday:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of times during the current UTC calendar day that the
              provisioned throughput was decreased.
      ReadCapacityUnits:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum number of strongly consistent reads consumed per
              second before DynamoDB returns a <code>ThrottlingException</code>.
      WriteCapacityUnits:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum number of writes consumed per second before DynamoDB
              returns a <code>ThrottlingException</code>.
    type: object
  AwsDynamoDbTableProvisionedThroughputOverride:
    description: Replica-specific configuration for the provisioned throughput.
    properties:
      ReadCapacityUnits:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The read capacity units for the replica.
    type: object
  AwsDynamoDbTableReplica:
    description: Information about a replica of a DynamoDB table.
    properties:
      GlobalSecondaryIndexes:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableReplicaGlobalSecondaryIndexList'
          - description: List of global secondary indexes for the replica.
      KmsMasterKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the KMS key that will be used for KMS encryption
              for the replica.
      ProvisionedThroughputOverride:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProvisionedThroughputOverride'
          - description: Replica-specific configuration for the provisioned throughput.
      RegionName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the Region where the replica is located.
      ReplicaStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current status of the replica.
      ReplicaStatusDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Detailed information about the replica status.
    type: object
  AwsDynamoDbTableReplicaGlobalSecondaryIndex:
    description: Information about a global secondary index for a DynamoDB table replica.
    properties:
      IndexName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the index.
      ProvisionedThroughputOverride:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableProvisionedThroughputOverride'
          - description: >-
              Replica-specific configuration for the provisioned throughput for
              the index.
    type: object
  AwsDynamoDbTableReplicaGlobalSecondaryIndexList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableReplicaGlobalSecondaryIndex'
    type: array
  AwsDynamoDbTableReplicaList:
    items:
      $ref: '#/definitions/AwsDynamoDbTableReplica'
    type: array
  AwsDynamoDbTableRestoreSummary:
    description: Information about the restore for the table.
    properties:
      RestoreDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates the point in time that the table was restored to.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      RestoreInProgress:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether a restore is currently in progress.
      SourceBackupArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the source backup from which the table was restored.
      SourceTableArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the source table for the backup.
    type: object
  AwsDynamoDbTableSseDescription:
    description: Information about the server-side encryption for the table.
    properties:
      InaccessibleEncryptionDateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>If the key is inaccessible, the date and time when DynamoDB
              detected that the key was inaccessible.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      KmsMasterKeyArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the KMS key that is used for the KMS encryption.
      SseType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of server-side encryption.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the server-side encryption.
    type: object
  AwsDynamoDbTableStreamSpecification:
    description: The current DynamoDB Streams configuration for the table.
    properties:
      StreamEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether DynamoDB Streams is enabled on the table.
      StreamViewType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Determines the information that is written to the table.
    type: object
  AwsEc2EipDetails:
    description: Information about an Elastic IP address.
    properties:
      AllocationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier that Amazon Web Services assigns to represent the
              allocation of the Elastic IP address for use with Amazon VPC.
      AssociationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier that represents the association of the Elastic IP
              address with an EC2 instance.
      Domain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The domain in which to allocate the address.</p> <p>If the
              address is for use with EC2 instances in a VPC, then
              <code>Domain</code> is <code>vpc</code>. Otherwise,
              <code>Domain</code> is <code>standard</code>. </p>
      InstanceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the EC2 instance.
      NetworkBorderGroup:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the location from which the Elastic IP address is
              advertised.
      NetworkInterfaceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the network interface.
      NetworkInterfaceOwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account ID of the owner of the network
              interface.
      PrivateIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The private IP address that is associated with the Elastic IP
              address.
      PublicIp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A public IP address that is associated with the EC2 instance.
      PublicIpv4Pool:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of an IP address pool. This parameter allows Amazon
              EC2 to select an IP address from the address pool.
    type: object
  AwsEc2InstanceDetails:
    description: The details of an EC2 instance.
    properties:
      IamInstanceProfileArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IAM profile ARN of the instance.
      ImageId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon Machine Image (AMI) ID of the instance.
      IpV4Addresses:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The IPv4 addresses associated with the instance.
      IpV6Addresses:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The IPv6 addresses associated with the instance.
      KeyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The key name associated with the instance.
      LaunchedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the instance was launched.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      NetworkInterfaces:
        allOf:
          - $ref: '#/definitions/AwsEc2InstanceNetworkInterfacesList'
          - description: >-
              The identifiers of the network interfaces for the EC2 instance.
              The details for each network interface are in a corresponding
              <code>AwsEc2NetworkInterfacesDetails</code> object.
      SubnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the subnet that the instance was launched in.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'The instance type of the instance. '
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPC that the instance was launched in.
    type: object
  AwsEc2InstanceNetworkInterfacesDetails:
    description: Identifies a network interface for the EC2 instance.
    properties:
      NetworkInterfaceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the network interface. The details are in a
              corresponding <code>AwsEc2NetworkInterfacesDetails</code> object.
    type: object
  AwsEc2InstanceNetworkInterfacesList:
    items:
      $ref: '#/definitions/AwsEc2InstanceNetworkInterfacesDetails'
    type: array
  AwsEc2NetworkAclAssociation:
    description: An association between the network ACL and a subnet.
    properties:
      NetworkAclAssociationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the association between the network ACL and the
              subnet.
      NetworkAclId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the network ACL.
      SubnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the subnet that is associated with the network
              ACL.
    type: object
  AwsEc2NetworkAclAssociationList:
    items:
      $ref: '#/definitions/AwsEc2NetworkAclAssociation'
    type: array
  AwsEc2NetworkAclDetails:
    description: Contains details about an EC2 network access control list (ACL).
    properties:
      Associations:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkAclAssociationList'
          - description: Associations between the network ACL and subnets.
      Entries:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkAclEntryList'
          - description: The set of rules in the network ACL.
      IsDefault:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether this is the default network ACL for the VPC.
      NetworkAclId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the network ACL.
      OwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the Amazon Web Services account that owns the
              network ACL.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPC for the network ACL.
    type: object
  AwsEc2NetworkAclEntry:
    description: >-
      A rule for the network ACL. Each rule allows or denies access based on the
      IP address, traffic direction, port, and protocol.
    properties:
      CidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPV4 network range for which to deny or allow access.
      Egress:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the rule is an egress rule. An egress rule is a rule that
              applies to traffic that leaves the subnet.
      IcmpTypeCode:
        allOf:
          - $ref: '#/definitions/IcmpTypeCode'
          - description: >-
              The Internet Control Message Protocol (ICMP) type and code for
              which to deny or allow access.
      Ipv6CidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPV6 network range for which to deny or allow access.
      PortRange:
        allOf:
          - $ref: '#/definitions/PortRangeFromTo'
          - description: >-
              For TCP or UDP protocols, the range of ports that the rule applies
              to.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The protocol that the rule applies to. To deny or allow access to
              all protocols, use the value -1.
      RuleAction:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Whether the rule is used to allow access or deny access.
      RuleNumber:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The rule number. The rules are processed in order by their number.
    type: object
  AwsEc2NetworkAclEntryList:
    items:
      $ref: '#/definitions/AwsEc2NetworkAclEntry'
    type: array
  AwsEc2NetworkInterfaceAttachment:
    description: Information about the network interface attachment.
    properties:
      AttachTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the attachment initiated.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      AttachmentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the network interface attachment
      DeleteOnTermination:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether the network interface is deleted when the
              instance is terminated.
      DeviceIndex:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The device index of the network interface attachment on the
              instance.
      InstanceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the instance.
      InstanceOwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon Web Services account ID of the owner of the instance.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The attachment state.</p> <p>Valid values:
              <code>attaching</code> | <code>attached</code> |
              <code>detaching</code> | <code>detached</code> </p>
    type: object
  AwsEc2NetworkInterfaceDetails:
    description: Details about the network interface
    properties:
      Attachment:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceAttachment'
          - description: The network interface attachment.
      IpV6Addresses:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceIpV6AddressList'
          - description: The IPv6 addresses associated with the network interface.
      NetworkInterfaceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the network interface.
      PrivateIpAddresses:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfacePrivateIpAddressList'
          - description: The private IPv4 addresses associated with the network interface.
      PublicDnsName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The public DNS name of the network interface.
      PublicIp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The address of the Elastic IP address bound to the network
              interface.
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceSecurityGroupList'
          - description: Security groups for the network interface.
      SourceDestCheck:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether traffic to or from the instance is validated.
    type: object
  AwsEc2NetworkInterfaceIpV6AddressDetail:
    description: >-
      Provides information about an IPV6 address that is associated with the
      network interface.
    properties:
      IpV6Address:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPV6 address.
    type: object
  AwsEc2NetworkInterfaceIpV6AddressList:
    items:
      $ref: '#/definitions/AwsEc2NetworkInterfaceIpV6AddressDetail'
    type: array
  AwsEc2NetworkInterfacePrivateIpAddressDetail:
    description: >-
      Provides information about a private IPv4 address that is with the network
      interface.
    properties:
      PrivateDnsName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The private DNS name for the IP address.
      PrivateIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IP address.
    type: object
  AwsEc2NetworkInterfacePrivateIpAddressList:
    items:
      $ref: '#/definitions/AwsEc2NetworkInterfacePrivateIpAddressDetail'
    type: array
  AwsEc2NetworkInterfaceSecurityGroup:
    description: A security group associated with the network interface.
    properties:
      GroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the security group.
      GroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the security group.
    type: object
  AwsEc2NetworkInterfaceSecurityGroupList:
    items:
      $ref: '#/definitions/AwsEc2NetworkInterfaceSecurityGroup'
    type: array
  AwsEc2SecurityGroupDetails:
    description: Details about an EC2 security group.
    properties:
      GroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the security group.
      GroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the security group.
      IpPermissions:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupIpPermissionList'
          - description: The inbound rules associated with the security group.
      IpPermissionsEgress:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupIpPermissionList'
          - description: '[VPC only] The outbound rules associated with the security group.'
      OwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account ID of the owner of the security
              group.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: '[VPC only] The ID of the VPC for the security group.'
    type: object
  AwsEc2SecurityGroupIpPermission:
    description: An IP permission for an EC2 security group.
    properties:
      FromPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The start of the port range for the TCP and UDP protocols, or
              an ICMP/ICMPv6 type number.</p> <p>A value of -1 indicates all
              ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must
              specify all codes. </p>
      IpProtocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The IP protocol name (<code>tcp</code>, <code>udp</code>,
              <code>icmp</code>, <code>icmpv6</code>) or number.</p> <p>[VPC
              only] Use <code>-1</code> to specify all protocols.</p> <p>When
              authorizing security group rules, specifying -1 or a protocol
              number other than <code>tcp</code>, <code>udp</code>,
              <code>icmp</code>, or <code>icmpv6</code> allows traffic on all
              ports, regardless of any port range you specify.</p> <p>For
              <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you
              must specify a port range.</p> <p>For <code>icmpv6</code>, the
              port range is optional. If you omit the port range, traffic for
              all types and codes is allowed. </p>
      IpRanges:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupIpRangeList'
          - description: The IPv4 ranges.
      Ipv6Ranges:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupIpv6RangeList'
          - description: The IPv6 ranges.
      PrefixListIds:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupPrefixListIdList'
          - description: >-
              [VPC only] The prefix list IDs for an Amazon Web Services service.
              With outbound rules, this is the Amazon Web Services service to
              access through a VPC endpoint from instances associated with the
              security group.
      ToPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The end of the port range for the TCP and UDP protocols, or an
              ICMP/ICMPv6 code.</p> <p>A value of -1 indicates all ICMP/ICMPv6
              codes. If you specify all ICMP/ICMPv6 types, you must specify all
              codes.</p>
      UserIdGroupPairs:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupUserIdGroupPairList'
          - description: The security group and Amazon Web Services account ID pairs.
    type: object
  AwsEc2SecurityGroupIpPermissionList:
    items:
      $ref: '#/definitions/AwsEc2SecurityGroupIpPermission'
    type: array
  AwsEc2SecurityGroupIpRange:
    description: A range of IPv4 addresses.
    properties:
      CidrIp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The IPv4 CIDR range. You can specify either a CIDR range or a
              source security group, but not both. To specify a single IPv4
              address, use the /32 prefix length.
    type: object
  AwsEc2SecurityGroupIpRangeList:
    items:
      $ref: '#/definitions/AwsEc2SecurityGroupIpRange'
    type: array
  AwsEc2SecurityGroupIpv6Range:
    description: A range of IPv6 addresses.
    properties:
      CidrIpv6:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The IPv6 CIDR range. You can specify either a CIDR range or a
              source security group, but not both. To specify a single IPv6
              address, use the /128 prefix length.
    type: object
  AwsEc2SecurityGroupIpv6RangeList:
    items:
      $ref: '#/definitions/AwsEc2SecurityGroupIpv6Range'
    type: array
  AwsEc2SecurityGroupPrefixListId:
    description: A prefix list ID.
    properties:
      PrefixListId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the prefix.
    type: object
  AwsEc2SecurityGroupPrefixListIdList:
    items:
      $ref: '#/definitions/AwsEc2SecurityGroupPrefixListId'
    type: array
  AwsEc2SecurityGroupUserIdGroupPair:
    description: A relationship between a security group and a user.
    properties:
      GroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the security group.
      GroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the security group.
      PeeringStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'The status of a VPC peering connection, if applicable.'
      UserId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The ID of an Amazon Web Services account.</p> <p>For a
              referenced security group in another VPC, the account ID of the
              referenced security group is returned in the response. If the
              referenced security group is deleted, this value is not
              returned.</p> <p>[EC2-Classic] Required when adding or removing
              rules that reference a security group in another VPC. </p>
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of the VPC for the referenced security group, if
              applicable.
      VpcPeeringConnectionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'The ID of the VPC peering connection, if applicable.'
    type: object
  AwsEc2SecurityGroupUserIdGroupPairList:
    items:
      $ref: '#/definitions/AwsEc2SecurityGroupUserIdGroupPair'
    type: array
  AwsEc2SubnetDetails:
    description: Contains information about a subnet in Amazon EC2.
    properties:
      AssignIpv6AddressOnCreation:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to assign an IPV6 address to a network interface that is
              created in this subnet.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Availability Zone for the subnet.
      AvailabilityZoneId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the Availability Zone for the subnet.
      AvailableIpAddressCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of available IPV4 addresses in the subnet. Does not
              include addresses for stopped instances.
      CidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPV4 CIDR block that is assigned to the subnet.
      DefaultForAz:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether this subnet is the default subnet for the Availability
              Zone.
      Ipv6CidrBlockAssociationSet:
        allOf:
          - $ref: '#/definitions/Ipv6CidrBlockAssociationList'
          - description: The IPV6 CIDR blocks that are associated with the subnet.
      MapPublicIpOnLaunch:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether instances in this subnet receive a public IP address.
      OwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the Amazon Web Services account that owns the
              subnet.
      State:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current state of the subnet.
      SubnetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the subnet.
      SubnetId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the subnet.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPC that contains the subnet.
    type: object
  AwsEc2VolumeAttachment:
    description: An attachment to an Amazon EC2 volume.
    properties:
      AttachTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The datetime when the attachment initiated.
      DeleteOnTermination:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the EBS volume is deleted when the EC2 instance is
              terminated.
      InstanceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the EC2 instance.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The attachment state of the volume.
    type: object
  AwsEc2VolumeAttachmentList:
    items:
      $ref: '#/definitions/AwsEc2VolumeAttachment'
    type: array
  AwsEc2VolumeDetails:
    description: Details about an EC2 volume.
    properties:
      Attachments:
        allOf:
          - $ref: '#/definitions/AwsEc2VolumeAttachmentList'
          - description: The volume attachments.
      CreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the volume was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Encrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the volume is encrypted.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the KMS key that was used to protect the volume
              encryption key for the volume.
      Size:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'The size of the volume, in GiBs.'
      SnapshotId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The snapshot from which the volume was created.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The volume state.
    type: object
  AwsEc2VpcDetails:
    description: Details about an EC2 VPC.
    properties:
      CidrBlockAssociationSet:
        allOf:
          - $ref: '#/definitions/CidrBlockAssociationList'
          - description: Information about the IPv4 CIDR blocks associated with the VPC.
      DhcpOptionsId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the set of Dynamic Host Configuration Protocol
              (DHCP) options that are associated with the VPC. If the default
              options are associated with the VPC, then this is default.
      Ipv6CidrBlockAssociationSet:
        allOf:
          - $ref: '#/definitions/Ipv6CidrBlockAssociationList'
          - description: Information about the IPv6 CIDR blocks associated with the VPC.
      State:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current state of the VPC.
    type: object
  AwsEc2VpnConnectionDetails:
    description: Details about an Amazon EC2 VPN connection.
    properties:
      Category:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The category of the VPN connection. <code>VPN</code> indicates an
              Amazon Web Services VPN connection. <code>VPN-Classic</code>
              indicates an Amazon Web Services Classic VPN connection.
      CustomerGatewayConfiguration:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The configuration information for the VPN connection's customer
              gateway, in the native XML format.
      CustomerGatewayId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the customer gateway that is at your end of the
              VPN connection.
      Options:
        allOf:
          - $ref: '#/definitions/AwsEc2VpnConnectionOptionsDetails'
          - description: The VPN connection options.
      Routes:
        allOf:
          - $ref: '#/definitions/AwsEc2VpnConnectionRoutesList'
          - description: The static routes that are associated with the VPN connection.
      State:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current state of the VPN connection.
      TransitGatewayId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the transit gateway that is associated with the
              VPN connection.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of VPN connection.
      VgwTelemetry:
        allOf:
          - $ref: '#/definitions/AwsEc2VpnConnectionVgwTelemetryList'
          - description: Information about the VPN tunnel.
      VpnConnectionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPN connection.
      VpnGatewayId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the virtual private gateway that is at the
              Amazon Web Services side of the VPN connection.
    type: object
  AwsEc2VpnConnectionOptionsDetails:
    description: VPN connection options.
    properties:
      StaticRoutesOnly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the VPN connection uses static routes only.
      TunnelOptions:
        allOf:
          - $ref: '#/definitions/AwsEc2VpnConnectionOptionsTunnelOptionsList'
          - description: The VPN tunnel options.
    type: object
  AwsEc2VpnConnectionOptionsTunnelOptionsDetails:
    description: The VPN tunnel options.
    properties:
      DpdTimeoutSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of seconds after which a Dead Peer Detection (DPD)
              timeout occurs.
      IkeVersions:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The Internet Key Exchange (IKE) versions that are permitted for
              the VPN tunnel.
      OutsideIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The external IP address of the VPN tunnel.
      Phase1DhGroupNumbers:
        allOf:
          - $ref: '#/definitions/IntegerList'
          - description: >-
              The permitted Diffie-Hellman group numbers for the VPN tunnel for
              phase 1 IKE negotiations.
      Phase1EncryptionAlgorithms:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The permitted encryption algorithms for the VPN tunnel for phase 1
              IKE negotiations.
      Phase1IntegrityAlgorithms:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The permitted integrity algorithms for the VPN tunnel for phase 1
              IKE negotiations.
      Phase1LifetimeSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'The lifetime for phase 1 of the IKE negotiation, in seconds.'
      Phase2DhGroupNumbers:
        allOf:
          - $ref: '#/definitions/IntegerList'
          - description: >-
              The permitted Diffie-Hellman group numbers for the VPN tunnel for
              phase 2 IKE negotiations.
      Phase2EncryptionAlgorithms:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The permitted encryption algorithms for the VPN tunnel for phase 2
              IKE negotiations.
      Phase2IntegrityAlgorithms:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The permitted integrity algorithms for the VPN tunnel for phase 2
              IKE negotiations.
      Phase2LifetimeSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: 'The lifetime for phase 2 of the IKE negotiation, in seconds.'
      PreSharedKey:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The preshared key to establish initial authentication between the
              virtual private gateway and the customer gateway.
      RekeyFuzzPercentage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The percentage of the rekey window, which is determined by
              <code>RekeyMarginTimeSeconds</code> during which the rekey time is
              randomly selected.
      RekeyMarginTimeSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The margin time, in seconds, before the phase 2 lifetime expires,
              during which the Amazon Web Services side of the VPN connection
              performs an IKE rekey.
      ReplayWindowSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of packets in an IKE replay window.
      TunnelInsideCidr:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The range of inside IPv4 addresses for the tunnel.
    type: object
  AwsEc2VpnConnectionOptionsTunnelOptionsList:
    items:
      $ref: '#/definitions/AwsEc2VpnConnectionOptionsTunnelOptionsDetails'
    type: array
  AwsEc2VpnConnectionRoutesDetails:
    description: A static routes associated with the VPN connection.
    properties:
      DestinationCidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The CIDR block associated with the local subnet of the customer
              data center.
      State:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current state of the static route.
    type: object
  AwsEc2VpnConnectionRoutesList:
    items:
      $ref: '#/definitions/AwsEc2VpnConnectionRoutesDetails'
    type: array
  AwsEc2VpnConnectionVgwTelemetryDetails:
    description: Information about the VPN tunnel.
    properties:
      AcceptedRouteCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of accepted routes.
      CertificateArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the VPN tunnel endpoint certificate.
      LastStatusChange:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The date and time of the last change in status.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      OutsideIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Internet-routable IP address of the virtual private gateway's
              outside interface.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the VPN tunnel.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'If an error occurs, a description of the error.'
    type: object
  AwsEc2VpnConnectionVgwTelemetryList:
    items:
      $ref: '#/definitions/AwsEc2VpnConnectionVgwTelemetryDetails'
    type: array
  AwsEcrContainerImageDetails:
    description: Information about an Amazon ECR image.
    properties:
      Architecture:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The architecture of the image.
      ImageDigest:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The sha256 digest of the image manifest.
      ImagePublishedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The date and time when the image was pushed to the
              repository.</p> <p>Uses the <code>date-time</code> format
              specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      ImageTags:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The list of tags that are associated with the image.
      RegistryId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account identifier that is associated with
              the registry that the image belongs to.
      RepositoryName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the repository that the image belongs to.
    type: object
  AwsEcsClusterClusterSettingsDetails:
    description: >-
      Indicates whether to enable CloudWatch Container Insights for the ECS
      cluster.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the setting.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the setting.
    type: object
  AwsEcsClusterClusterSettingsList:
    items:
      $ref: '#/definitions/AwsEcsClusterClusterSettingsDetails'
    type: array
  AwsEcsClusterConfigurationDetails:
    description: The run command configuration for the cluster.
    properties:
      ExecuteCommandConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsClusterConfigurationExecuteCommandConfigurationDetails
          - description: Contains the run command configuration for the cluster.
    type: object
  AwsEcsClusterConfigurationExecuteCommandConfigurationDetails:
    description: Contains the run command configuration for the cluster.
    properties:
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the KMS key that is used to encrypt the data
              between the local client and the container.
      LogConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails
          - description: >-
              The log configuration for the results of the run command actions.
              Required if <code>Logging</code> is <code>NONE</code>.
      Logging:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The log setting to use for redirecting logs for run command
              results.
    type: object
  AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails:
    description: The log configuration for the results of the run command actions.
    properties:
      CloudWatchEncryptionEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to enable encryption on the CloudWatch logs.
      CloudWatchLogGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the CloudWatch log group to send the logs to.
      S3BucketName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the S3 bucket to send logs to.
      S3EncryptionEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to encrypt the logs that are sent to the S3 bucket.
      S3KeyPrefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Identifies the folder in the S3 bucket to send the logs to.
    type: object
  AwsEcsClusterDefaultCapacityProviderStrategyDetails:
    description: >-
      The default capacity provider strategy for the cluster. The default
      capacity provider strategy is used when services or tasks are run without
      a specified launch type or capacity provider strategy.
    properties:
      Base:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The minimum number of tasks to run on the specified capacity
              provider.
      CapacityProvider:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the capacity provider.
      Weight:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The relative percentage of the total number of tasks launched that
              should use the capacity provider.
    type: object
  AwsEcsClusterDefaultCapacityProviderStrategyList:
    items:
      $ref: '#/definitions/AwsEcsClusterDefaultCapacityProviderStrategyDetails'
    type: array
  AwsEcsClusterDetails:
    description: provides details about an ECS cluster.
    properties:
      CapacityProviders:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The short name of one or more capacity providers to associate with
              the cluster.
      ClusterSettings:
        allOf:
          - $ref: '#/definitions/AwsEcsClusterClusterSettingsList'
          - description: >-
              The setting to use to create the cluster. Specifically used to
              configure whether to enable CloudWatch Container Insights for the
              cluster.
      Configuration:
        allOf:
          - $ref: '#/definitions/AwsEcsClusterConfigurationDetails'
          - description: The run command configuration for the cluster.
      DefaultCapacityProviderStrategy:
        allOf:
          - $ref: '#/definitions/AwsEcsClusterDefaultCapacityProviderStrategyList'
          - description: >-
              The default capacity provider strategy for the cluster. The
              default capacity provider strategy is used when services or tasks
              are run without a specified launch type or capacity provider
              strategy.
    type: object
  AwsEcsServiceCapacityProviderStrategyDetails:
    description: Strategy item for the capacity provider strategy that the service uses.
    properties:
      Base:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The minimum number of tasks to run on the capacity provider.
              Only one strategy item can specify a value for
              <code>Base</code>.</p> <p>The value must be between 0 and
              100000.</p>
      CapacityProvider:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The short name of the capacity provider.
      Weight:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The relative percentage of the total number of tasks that
              should use the capacity provider.</p> <p>If no weight is
              specified, the default value is 0. At least one capacity provider
              must have a weight greater than 0.</p> <p>The value can be between
              0 and 1000.</p>
    type: object
  AwsEcsServiceCapacityProviderStrategyList:
    items:
      $ref: '#/definitions/AwsEcsServiceCapacityProviderStrategyDetails'
    type: array
  AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails:
    description: >-
      Determines whether a service deployment fails if a service cannot reach a
      steady state.
    properties:
      Enable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to enable the deployment circuit breaker logic for the
              service.
      Rollback:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to roll back the service if a service deployment fails. If
              rollback is enabled, when a service deployment fails, the service
              is rolled back to the last deployment that completed successfully.
    type: object
  AwsEcsServiceDeploymentConfigurationDetails:
    description: Optional deployment parameters for the service.
    properties:
      DeploymentCircuitBreaker:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails
          - description: >-
              Determines whether a service deployment fails if a service cannot
              reach a steady state.
      MaximumPercent:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>For a service that uses the rolling update (<code>ECS</code>)
              deployment type, the maximum number of tasks in a service that are
              allowed in the <code>RUNNING</code> or <code>PENDING</code> state
              during a deployment, and for tasks that use the EC2 launch type,
              when any container instances are in the <code>DRAINING</code>
              state. Provided as a percentage of the desired number of tasks.
              The default value is 200%.</p> <p>For a service that uses the
              blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code>
              deployment types, and tasks that use the EC2 launch type, the
              maximum number of tasks in the service that remain in the
              <code>RUNNING</code> state while the container instances are in
              the <code>DRAINING</code> state.</p> <p>For the Fargate launch
              type, the maximum percent value is not used.</p>
      MinimumHealthyPercent:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>For a service that uses the rolling update (<code>ECS</code>)
              deployment type, the minimum number of tasks in a service that
              must remain in the <code>RUNNING</code> state during a deployment,
              and while any container instances are in the <code>DRAINING</code>
              state if the service contains tasks using the EC2 launch type.
              Expressed as a percentage of the desired number of tasks. The
              default value is 100%.</p> <p>For a service that uses the
              blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code>
              deployment types and tasks that use the EC2 launch type, the
              minimum number of the tasks in the service that remain in the
              <code>RUNNING</code> state while the container instances are in
              the <code>DRAINING</code> state.</p> <p>For the Fargate launch
              type, the minimum healthy percent value is not used.</p>
    type: object
  AwsEcsServiceDeploymentControllerDetails:
    description: Information about the deployment controller type that the service uses.
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The rolling update (<code>ECS</code>) deployment type replaces
              the current running version of the container with the latest
              version.</p> <p>The blue/green (<code>CODE_DEPLOY</code>)
              deployment type uses the blue/green deployment model that is
              powered by CodeDeploy. This deployment model a new deployment of a
              service can be verified before production traffic is sent to
              it.</p> <p>The external (<code>EXTERNAL</code>) deployment type
              allows the use of any third-party deployment controller for full
              control over the deployment process for an Amazon ECS service.</p>
              <p>Valid values: <code>ECS</code> | <code>CODE_DEPLOY</code> |
              <code>EXTERNAL</code> </p>
    type: object
  AwsEcsServiceDetails:
    description: Provides details about a service within an ECS cluster.
    properties:
      CapacityProviderStrategy:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceCapacityProviderStrategyList'
          - description: The capacity provider strategy that the service uses.
      Cluster:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the cluster that hosts the service.
      DeploymentConfiguration:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceDeploymentConfigurationDetails'
          - description: >-
              Deployment parameters for the service. Includes the number of
              tasks that run and the order in which to start and stop tasks.
      DeploymentController:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceDeploymentControllerDetails'
          - description: Contains the deployment controller type that the service uses.
      DesiredCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of instantiations of the task definition to run on the
              service.
      EnableEcsManagedTags:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to enable Amazon ECS managed tags for the tasks in the
              service.
      EnableExecuteCommand:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the execute command functionality is enabled for the
              service.
      HealthCheckGracePeriodSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              After a task starts, the amount of time in seconds that the Amazon
              ECS service scheduler ignores unhealthy Elastic Load Balancing
              target health checks.
      LaunchType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The launch type that the service uses.</p> <p>Valid values:
              <code>EC2</code> | <code>FARGATE</code> | <code>EXTERNAL</code>
              </p>
      LoadBalancers:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceLoadBalancersList'
          - description: Information about the load balancers that the service uses.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the service.
      NetworkConfiguration:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceNetworkConfigurationDetails'
          - description: >-
              For tasks that use the <code>awsvpc</code> networking mode, the
              VPC subnet and security group configuration.
      PlacementConstraints:
        allOf:
          - $ref: '#/definitions/AwsEcsServicePlacementConstraintsList'
          - description: The placement constraints for the tasks in the service.
      PlacementStrategies:
        allOf:
          - $ref: '#/definitions/AwsEcsServicePlacementStrategiesList'
          - description: Information about how tasks for the service are placed.
      PlatformVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The platform version on which to run the service. Only specified
              for tasks that are hosted on Fargate. If a platform version is not
              specified, the <code>LATEST</code> platform version is used by
              default.
      PropagateTags:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates whether to propagate the tags from the task
              definition to the task or from the service to the task. If no
              value is provided, then tags are not propagated.</p> <p>Valid
              values: <code>TASK_DEFINITION</code> | <code>SERVICE</code> </p>
      Role:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the IAM role that is associated with the service. The
              role allows the Amazon ECS container agent to register container
              instances with an Elastic Load Balancing load balancer.
      SchedulingStrategy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The scheduling strategy to use for the service.</p> <p>The
              <code>REPLICA</code> scheduling strategy places and maintains the
              desired number of tasks across the cluster. By default, the
              service scheduler spreads tasks across Availability Zones. Task
              placement strategies and constraints are used to customize task
              placement decisions.</p> <p>The <code>DAEMON</code> scheduling
              strategy deploys exactly one task on each active container
              instance that meets all of the task placement constraints that are
              specified in the cluster. The service scheduler also evaluates the
              task placement constraints for running tasks and stops tasks that
              do not meet the placement constraints.</p> <p>Valid values:
              <code>REPLICA</code> | <code>DAEMON</code> </p>
      ServiceArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the service.
      ServiceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the service.</p> <p>The name can contain up to 255
              characters. It can use letters, numbers, underscores, and
              hyphens.</p>
      ServiceRegistries:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceServiceRegistriesList'
          - description: >-
              Information about the service discovery registries to assign to
              the service.
      TaskDefinition:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The task definition to use for tasks in the service.
    type: object
  AwsEcsServiceLoadBalancersDetails:
    description: Information about a load balancer that the service uses.
    properties:
      ContainerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the container to associate with the load balancer.
      ContainerPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port on the container to associate with the load balancer.
              This port must correspond to a <code>containerPort</code> in the
              task definition the tasks in the service are using. For tasks that
              use the EC2 launch type, the container instance they are launched
              on must allow ingress traffic on the <code>hostPort</code> of the
              port mapping.
      LoadBalancerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the load balancer to associate with the Amazon ECS
              service or task set.</p> <p>Only specified when using a Classic
              Load Balancer. For an Application Load Balancer or a Network Load
              Balancer, the load balancer name is omitted.</p>
      TargetGroupArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The ARN of the Elastic Load Balancing target group or groups
              associated with a service or task set.</p> <p>Only specified when
              using an Application Load Balancer or a Network Load Balancer. For
              a Classic Load Balancer, the target group ARN is omitted.</p>
    type: object
  AwsEcsServiceLoadBalancersList:
    items:
      $ref: '#/definitions/AwsEcsServiceLoadBalancersDetails'
    type: array
  AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails:
    description: >-
      For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet
      and security group configuration.
    properties:
      AssignPublicIp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Whether the task's elastic network interface receives a public
              IP address. The default value is <code>DISABLED</code>.</p>
              <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              <p>The IDs of the security groups associated with the task or
              service.</p> <p>You can provide up to five security groups.</p>
      Subnets:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              <p>The IDs of the subnets associated with the task or service.</p>
              <p>You can provide up to 16 subnets.</p>
    type: object
  AwsEcsServiceNetworkConfigurationDetails:
    description: >-
      For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet
      and security group configuration.
    properties:
      AwsVpcConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails
          - description: The VPC subnet and security group configuration.
    type: object
  AwsEcsServicePlacementConstraintsDetails:
    description: A placement constraint for the tasks in the service.
    properties:
      Expression:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A cluster query language expression to apply to the constraint.
              You cannot specify an expression if the constraint type is
              <code>distinctInstance</code>.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of constraint. Use <code>distinctInstance</code> to
              run each task in a particular group on a different container
              instance. Use <code>memberOf</code> to restrict the selection to a
              group of valid candidates.</p> <p>Valid values:
              <code>distinctInstance</code> | <code>memberOf</code> </p>
    type: object
  AwsEcsServicePlacementConstraintsList:
    items:
      $ref: '#/definitions/AwsEcsServicePlacementConstraintsDetails'
    type: array
  AwsEcsServicePlacementStrategiesDetails:
    description: >-
      A placement strategy that determines how to place the tasks for the
      service.
    properties:
      Field:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The field to apply the placement strategy against.</p> <p>For
              the <code>spread</code> placement strategy, valid values are
              <code>instanceId</code> (or <code>host</code>, which has the same
              effect), or any platform or custom attribute that is applied to a
              container instance, such as
              <code>attribute:ecs.availability-zone</code>.</p> <p>For the
              <code>binpack</code> placement strategy, valid values are
              <code>cpu</code> and <code>memory</code>.</p> <p>For the
              <code>random</code> placement strategy, this attribute is not
              used.</p>
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of placement strategy.</p> <p>The <code>random</code>
              placement strategy randomly places tasks on available
              candidates.</p> <p>The <code>spread</code> placement strategy
              spreads placement across available candidates evenly based on the
              value of <code>Field</code>.</p> <p>The <code>binpack</code>
              strategy places tasks on available candidates that have the least
              available amount of the resource that is specified in
              <code>Field</code>.</p> <p>Valid values: <code>random</code> |
              <code>spread</code> | <code>binpack</code> </p>
    type: object
  AwsEcsServicePlacementStrategiesList:
    items:
      $ref: '#/definitions/AwsEcsServicePlacementStrategiesDetails'
    type: array
  AwsEcsServiceServiceRegistriesDetails:
    description: Information about a service discovery registry to assign to the service.
    properties:
      ContainerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The container name value to use for the service discovery
              service.</p> <p>If the task definition uses the
              <code>bridge</code> or <code>host</code> network mode, you must
              specify <code>ContainerName</code> and
              <code>ContainerPort</code>.</p> <p>If the task definition uses the
              <code>awsvpc</code> network mode and a type SRV DNS record, you
              must specify either <code>ContainerName</code> and
              <code>ContainerPort</code>, or <code>Port</code> , but not
              both.</p>
      ContainerPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The port value to use for the service discovery service.</p>
              <p>If the task definition uses the <code>bridge</code> or
              <code>host</code> network mode, you must specify
              <code>ContainerName</code> and <code>ContainerPort</code>.</p>
              <p>If the task definition uses the <code>awsvpc</code> network
              mode and a type SRV DNS record, you must specify either
              <code>ContainerName</code> and <code>ContainerPort</code>, or
              <code>Port</code> , but not both.</p>
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port value to use for a service discovery service that
              specifies an SRV record. This field can be used if both the
              <code>awsvpc</code>awsvpc network mode and SRV records are used.
      RegistryArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the service registry.
    type: object
  AwsEcsServiceServiceRegistriesList:
    items:
      $ref: '#/definitions/AwsEcsServiceServiceRegistriesDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails:
    description: A dependency that is defined for container startup and shutdown.
    properties:
      Condition:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The dependency condition of the dependent container. Indicates the
              required status of the dependent container before the current
              container can start.
      ContainerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the dependent container.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsDependsOnList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsDetails:
    description: A container definition that describes a container in the task.
    properties:
      Command:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The command that is passed to the container.
      Cpu:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of CPU units reserved for the container.
      DependsOn:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsDependsOnList
          - description: >-
              The dependencies that are defined for container startup and
              shutdown.
      DisableNetworking:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to disable networking within the container.
      DnsSearchDomains:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of DNS search domains that are presented to the container.
      DnsServers:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of DNS servers that are presented to the container.
      DockerLabels:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A key-value map of labels to add to the container.
      DockerSecurityOptions:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              A list of strings to provide custom labels for SELinux and
              AppArmor multi-level security systems.
      EntryPoint:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The entry point that is passed to the container.
      Environment:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList
          - description: The environment variables to pass to a container.
      EnvironmentFiles:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList
          - description: >-
              A list of files containing the environment variables to pass to a
              container.
      Essential:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the container is essential. All tasks must have at least
              one essential container.
      ExtraHosts:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList
          - description: >-
              A list of hostnames and IP address mappings to append to the
              <b>/etc/hosts</b> file on the container.
      FirelensConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails
          - description: >-
              The FireLens configuration for the container. Specifies and
              configures a log router for container logs.
      HealthCheck:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
          - description: >-
              The container health check command and associated configuration
              parameters for the container.
      Hostname:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The hostname to use for the container.
      Image:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The image used to start the container.
      Interactive:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              If set to true, then containerized applications can be deployed
              that require <code>stdin</code> or a <code>tty</code> to be
              allocated.
      Links:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              A list of links for the container in the form <code>
              <i>container_name</i>:<i>alias</i> </code>. Allows containers to
              communicate with each other without the need for port mappings.
      LinuxParameters:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails
          - description: >-
              Linux-specific modifications that are applied to the container,
              such as Linux kernel capabilities.
      LogConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails
          - description: The log configuration specification for the container.
      Memory:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount (in MiB) of memory to present to the container. If the
              container attempts to exceed the memory specified here, the
              container is shut down. The total amount of memory reserved for
              all containers within a task must be lower than the task memory
              value, if one is specified.
      MemoryReservation:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The soft limit (in MiB) of memory to reserve for the container.
      MountPoints:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsMountPointsList
          - description: The mount points for the data volumes in the container.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the container.
      PortMappings:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList
          - description: The list of port mappings for the container.
      Privileged:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the container is given elevated privileges on the host
              container instance. The elevated privileges are similar to the
              root user.
      PseudoTerminal:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to allocate a TTY to the container.
      ReadonlyRootFilesystem:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the container is given read-only access to its root file
              system.
      RepositoryCredentials:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails
          - description: The private repository authentication credentials to use.
      ResourceRequirements:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList
          - description: >-
              The type and amount of a resource to assign to a container. The
              only supported resource is a GPU.
      Secrets:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsSecretsList'
          - description: The secrets to pass to the container.
      StartTimeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of seconds to wait before giving up on resolving
              dependencies for a container. 
      StopTimeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of seconds to wait before the container is stopped if
              it doesn't shut down normally on its own.
      SystemControls:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList
          - description: A list of namespaced kernel parameters to set in the container.
      Ulimits:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsUlimitsList'
          - description: 'A list of ulimits to set in the container. '
      User:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The user to use inside the container.</p> <p>The value can use
              one of the following formats.</p> <ul> <li> <p> <code> <i>user</i>
              </code> </p> </li> <li> <p> <code> <i>user</i> </code>:<code>
              <i>group</i> </code> </p> </li> <li> <p> <code> <i>uid</i> </code>
              </p> </li> <li> <p> <code> <i>uid</i> </code>:<code> <i>gid</i>
              </code> </p> </li> <li> <p> <code> <i>user</i> </code>:<code>
              <i>gid</i> </code> </p> </li> <li> <p> <code> <i>uid</i>
              </code>:<code> <i>group</i> </code> </p> </li> </ul>
      VolumesFrom:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList
          - description: Data volumes to mount from another container.
      WorkingDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The working directory in which to run commands inside the
              container.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails:
    description: An environment variable to pass to the container.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the environment variable.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the environment variable.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails:
    description: A file that contain environment variables to pass to a container.
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of environment file.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the S3 object that contains the environment variable
              file.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails:
    description: >-
      A hostname and IP address mapping to append to the <b>/etc/hosts</b> file
      on the container.
    properties:
      Hostname:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The hostname to use in the <b>/etc/hosts</b> entry.
      IpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IP address to use in the <b>/etc/hosts</b> entry.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails:
    description: >-
      The FireLens configuration for the container. The configuration specifies
      and configures a log router for container logs.
    properties:
      Options:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>The options to use to configure the log router.</p> <p>The
              valid option keys are as follows:</p> <ul> <li> <p>
              <code>enable-ecs-log-metadata</code>. The value can be
              <code>true</code> or <code>false</code>.</p> </li> <li> <p>
              <code>config-file-type</code>. The value can be <code>s3</code> or
              <code>file</code>.</p> </li> <li> <p>
              <code>config-file-value</code>. The value is either an S3 ARN or a
              file path.</p> </li> </ul>
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'The log router to use. '
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails:
    description: >-
      The container health check command and associated configuration parameters
      for the container.
    properties:
      Command:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The command that the container runs to determine whether it is
              healthy.
      Interval:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The time period in seconds between each health check execution.
              The default value is 30 seconds.
      Retries:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of times to retry a failed health check before the
              container is considered unhealthy. The default value is 3.
      StartPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The optional grace period in seconds that allows containers time
              to bootstrap before failed health checks count towards the maximum
              number of retries.
      Timeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The time period in seconds to wait for a health check to succeed
              before it is considered a failure. The default value is 5.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails:
    description: >-
      The Linux capabilities for the container that are added to or dropped from
      the default configuration provided by Docker.
    properties:
      Add:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The Linux capabilities for the container that are added to the
              default configuration provided by Docker.
      Drop:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The Linux capabilities for the container that are dropped from the
              default configuration provided by Docker.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails:
    description: >-
      &gt;Linux-specific modifications that are applied to the container, such
      as Linux kernel capabilities.
    properties:
      Capabilities:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails
          - description: >-
              The Linux capabilities for the container that are added to or
              dropped from the default configuration provided by Docker.
      Devices:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList
          - description: The host devices to expose to the container.
      InitProcessEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to run an <code>init</code> process inside the container
              that forwards signals and reaps processes. 
      MaxSwap:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The total amount of swap memory (in MiB) that a container can use.
      SharedMemorySize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The value for the size (in MiB) of the <b>/dev/shm</b> volume.
      Swappiness:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Configures the container's memory swappiness behavior. Determines
              how aggressively pages are swapped. The higher the value, the more
              aggressive the swappiness. The default is 60.
      Tmpfs:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList
          - description: >-
              The container path, mount options, and size (in MiB) of the tmpfs
              mount.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails:
    description: A host device to expose to the container.
    properties:
      ContainerPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path inside the container at which to expose the host device.
      HostPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path for the device on the host container instance.
      Permissions:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The explicit permissions to provide to the container for the
              device. By default, the container has permissions for read, write,
              and <code>mknod</code> for the device.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails:
    description: 'The container path, mount options, and size (in MiB) of a tmpfs mount.'
    properties:
      ContainerPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The absolute file path where the tmpfs volume is to be mounted.
      MountOptions:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The list of tmpfs volume mount options.
      Size:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The maximum size (in MiB) of the tmpfs volume.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails:
    description: The log configuration specification for the container.
    properties:
      LogDriver:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The log driver to use for the container.
      Options:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              The configuration options to send to the log driver. Requires
              version 1.19 of the Docker Remote API or greater on your container
              instance.
      SecretOptions:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList
          - description: The secrets to pass to the log configuration.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails:
    description: A secret to pass to the log configuration.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the secret.
      ValueFrom:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The secret to expose to the container.</p> <p>The value is
              either the full ARN of the Secrets Manager secret or the full ARN
              of the parameter in the Systems Manager Parameter Store.</p>
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails:
    description: A mount point for the data volumes in the container.
    properties:
      ContainerPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path on the container to mount the host volume at.
      ReadOnly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the container has read-only access to the volume.
      SourceVolume:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the volume to mount. Must match the name of a volume
              listed in <code>VolumeDetails</code> for the task definition.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsMountPointsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails:
    description: A port mapping for the container.
    properties:
      ContainerPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port number on the container that is bound to the
              user-specified or automatically assigned host port.
      HostPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port number on the container instance to reserve for the
              container.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The protocol used for the port mapping. The default is
              <code>tcp</code>.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails:
    description: The private repository authentication credentials to use.
    properties:
      CredentialsParameter:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the secret that contains the private repository
              credentials.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails:
    description: A resource to assign to a container.
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of resource to assign to a container.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The value for the specified resource type.</p> <p>For
              <code>GPU</code>, the value is the number of physical GPUs the
              Amazon ECS container agent reserves for the container.</p> <p>For
              <code>InferenceAccelerator</code>, the value should match the
              <code>DeviceName</code> attribute of an entry in
              <code>InferenceAccelerators</code>.</p>
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails:
    description: A secret to pass to the container.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the secret.
      ValueFrom:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The secret to expose to the container. The value is either the
              full ARN of the Secrets Manager secret or the full ARN of the
              parameter in the Systems Manager Parameter Store.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsSecretsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails:
    description: A namespaced kernel parameter to set in the container.
    properties:
      Namespace:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The namespaced kernel parameter for which to set a value.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the parameter.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails:
    description: A ulimit to set in the container.
    properties:
      HardLimit:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The hard limit for the ulimit type.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of the ulimit.
      SoftLimit:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The soft limit for the ulimit type.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsUlimitsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails'
    type: array
  AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails:
    description: A data volume to mount from another container.
    properties:
      ReadOnly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the container has read-only access to the volume.
      SourceContainer:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of another container within the same task definition from
              which to mount volumes.
    type: object
  AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails'
    type: array
  AwsEcsTaskDefinitionDetails:
    description: >-
      details about a task definition. A task definition describes the container
      and volume definitions of an Amazon Elastic Container Service task.
    properties:
      ContainerDefinitions:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionContainerDefinitionsList'
          - description: >-
              The container definitions that describe the containers that make
              up the task.
      Cpu:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The number of CPU units used by the task.
      ExecutionRoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the task execution role that grants the container agent
              permission to make API calls on behalf of the container user.
      Family:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of a family that this task definition is registered to.
      InferenceAccelerators:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionInferenceAcceleratorsList'
          - description: >-
              The Elastic Inference accelerators to use for the containers in
              the task.
      IpcMode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPC resource namespace to use for the containers in the task.
      Memory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The amount (in MiB) of memory used by the task.
      NetworkMode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Docker networking mode to use for the containers in the task.
      PidMode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The process namespace to use for the containers in the task.
      PlacementConstraints:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionPlacementConstraintsList'
          - description: The placement constraint objects to use for tasks.
      ProxyConfiguration:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionProxyConfigurationDetails'
          - description: The configuration details for the App Mesh proxy.
      RequiresCompatibilities:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The task launch types that the task definition was validated
              against.
      TaskRoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The short name or ARN of the IAM role that grants containers in
              the task permission to call Amazon Web Services API operations on
              your behalf.
      Volumes:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionVolumesList'
          - description: The data volume definitions for the task.
    type: object
  AwsEcsTaskDefinitionInferenceAcceleratorsDetails:
    description: An Elastic Inference accelerator to use for the containers in the task.
    properties:
      DeviceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Elastic Inference accelerator device name.
      DeviceType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Elastic Inference accelerator type to use.
    type: object
  AwsEcsTaskDefinitionInferenceAcceleratorsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionInferenceAcceleratorsDetails'
    type: array
  AwsEcsTaskDefinitionPlacementConstraintsDetails:
    description: A placement constraint object to use for tasks.
    properties:
      Expression:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A cluster query language expression to apply to the constraint.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of constraint.
    type: object
  AwsEcsTaskDefinitionPlacementConstraintsList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionPlacementConstraintsDetails'
    type: array
  AwsEcsTaskDefinitionProxyConfigurationDetails:
    description: The configuration details for the App Mesh proxy.
    properties:
      ContainerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the container that will serve as the App Mesh proxy.
      ProxyConfigurationProperties:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList
          - description: >-
              The set of network configuration parameters to provide to the
              Container Network Interface (CNI) plugin, specified as key-value
              pairs.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The proxy type.
    type: object
  AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails:
    description: >-
      A network configuration parameter to provide to the Container Network
      Interface (CNI) plugin.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the property.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the property.
    type: object
  AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList:
    items:
      $ref: >-
        #/definitions/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails
    type: array
  AwsEcsTaskDefinitionVolumesDetails:
    description: A data volume to mount from another container.
    properties:
      DockerVolumeConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails
          - description: Information about a Docker volume.
      EfsVolumeConfiguration:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails
          - description: >-
              Information about the Amazon Elastic File System file system that
              is used for task storage.
      Host:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionVolumesHostDetails'
          - description: Information about a bind mount host volume.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the data volume.
    type: object
  AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails:
    description: Information about a Docker volume.
    properties:
      Autoprovision:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to create the Docker volume automatically if it does not
              already exist.
      Driver:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Docker volume driver to use.
      DriverOpts:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A map of Docker driver-specific options that are passed through.
      Labels:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: Custom metadata to add to the Docker volume.
      Scope:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The scope for the Docker volume that determines its lifecycle.
              Docker volumes that are scoped to a task are provisioned
              automatically when the task starts and destroyed when the task
              stops. Docker volumes that are shared persist after the task
              stops.
    type: object
  AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails:
    description: <p/>
    properties:
      AccessPointId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon EFS access point identifier to use.
      Iam:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Whether to use the Amazon ECS task IAM role defined in a task
              definition when mounting the Amazon EFS file system.
    type: object
  AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails:
    description: >-
      Information about the Amazon Elastic File System file system that is used
      for task storage.
    properties:
      AuthorizationConfig:
        allOf:
          - $ref: >-
              #/definitions/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails
          - description: >-
              The authorization configuration details for the Amazon EFS file
              system.
      FilesystemId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon EFS file system identifier to use.
      RootDirectory:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The directory within the Amazon EFS file system to mount as the
              root directory inside the host.
      TransitEncryption:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Whether to enable encryption for Amazon EFS data in transit
              between the Amazon ECS host and the Amazon EFS server. 
      TransitEncryptionPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port to use when sending encrypted data between the Amazon ECS
              host and the Amazon EFS server.
    type: object
  AwsEcsTaskDefinitionVolumesHostDetails:
    description: Information about a bind mount host volume.
    properties:
      SourcePath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The path on the host container instance that is presented to the
              container.
    type: object
  AwsEcsTaskDefinitionVolumesList:
    items:
      $ref: '#/definitions/AwsEcsTaskDefinitionVolumesDetails'
    type: array
  AwsElasticBeanstalkEnvironmentDetails:
    description: Contains details about an Elastic Beanstalk environment.
    properties:
      ApplicationName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the application that is associated with the
              environment.
      Cname:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The URL to the CNAME for this environment.
      DateCreated:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The creation date for this environment.
      DateUpdated:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The date when this environment was last modified.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the environment.
      EndpointUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              For load-balanced, autoscaling environments, the URL to the load
              balancer. For single-instance environments, the IP address of the
              instance.
      EnvironmentArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the environment.
      EnvironmentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the environment.
      EnvironmentLinks:
        allOf:
          - $ref: '#/definitions/AwsElasticBeanstalkEnvironmentEnvironmentLinks'
          - description: Links to other environments in the same group.
      EnvironmentName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the environment.
      OptionSettings:
        allOf:
          - $ref: '#/definitions/AwsElasticBeanstalkEnvironmentOptionSettings'
          - description: The configuration setting for the environment.
      PlatformArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the platform version for the environment.
      SolutionStackName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the solution stack that is deployed with the
              environment.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current operational status of the environment.
      Tier:
        allOf:
          - $ref: '#/definitions/AwsElasticBeanstalkEnvironmentTier'
          - description: The tier of the environment.
      VersionLabel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The application version of the environment.
    type: object
  AwsElasticBeanstalkEnvironmentEnvironmentLink:
    description: >-
      Contains information about a link to another environment that is in the
      same group.
    properties:
      EnvironmentName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the linked environment.
      LinkName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the environment link.
    type: object
  AwsElasticBeanstalkEnvironmentEnvironmentLinks:
    items:
      $ref: '#/definitions/AwsElasticBeanstalkEnvironmentEnvironmentLink'
    type: array
  AwsElasticBeanstalkEnvironmentOptionSetting:
    description: A configuration option setting for the environment.
    properties:
      Namespace:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of resource that the configuration option is associated
              with.
      OptionName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the option.
      ResourceName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the resource.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the configuration setting.
    type: object
  AwsElasticBeanstalkEnvironmentOptionSettings:
    items:
      $ref: '#/definitions/AwsElasticBeanstalkEnvironmentOptionSetting'
    type: array
  AwsElasticBeanstalkEnvironmentTier:
    description: Contains information about the tier of the environment.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the environment tier.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of environment tier.
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the environment tier.
    type: object
  AwsElasticsearchDomainDetails:
    description: Information about an Amazon Elasticsearch Service domain.
    properties:
      AccessPolicies:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              IAM policy document specifying the access policies for the new
              Elasticsearch domain.
      DomainEndpointOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainDomainEndpointOptions'
          - description: Additional options for the domain endpoint.
      DomainId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Unique identifier for an Elasticsearch domain.
      DomainName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Name of an Elasticsearch domain.</p> <p>Domain names are unique
              across all domains owned by the same account within an Amazon Web
              Services Region.</p> <p>Domain names must start with a lowercase
              letter and must be between 3 and 28 characters.</p> <p>Valid
              characters are a-z (lowercase only), 0-9, and – (hyphen). </p>
      ElasticsearchClusterConfig:
        allOf:
          - $ref: >-
              #/definitions/AwsElasticsearchDomainElasticsearchClusterConfigDetails
          - description: Information about an Elasticsearch cluster configuration.
      ElasticsearchVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Elasticsearch version.
      EncryptionAtRestOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainEncryptionAtRestOptions'
          - description: Details about the configuration for encryption at rest.
      Endpoint:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Domain-specific endpoint used to submit index, search, and data
              upload requests to an Elasticsearch domain.</p> <p>The endpoint is
              a service URL. </p>
      Endpoints:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              The key-value pair that exists if the Elasticsearch domain uses
              VPC endpoints.
      LogPublishingOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainLogPublishingOptions'
          - description: >-
              Configures the CloudWatch Logs to publish for the Elasticsearch
              domain.
      NodeToNodeEncryptionOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainNodeToNodeEncryptionOptions'
          - description: Details about the configuration for node-to-node encryption.
      ServiceSoftwareOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainServiceSoftwareOptions'
          - description: >-
              Information about the status of a domain relative to the latest
              service software.
      VPCOptions:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainVPCOptions'
          - description: >-
              Information that Elasticsearch derives based on
              <code>VPCOptions</code> for the domain.
    type: object
  AwsElasticsearchDomainDomainEndpointOptions:
    description: >-
      Additional options for the domain endpoint, such as whether to require
      HTTPS for all traffic.
    properties:
      EnforceHTTPS:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to require that all traffic to the domain arrive over
              HTTPS.
      TLSSecurityPolicy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The TLS security policy to apply to the HTTPS endpoint of the
              Elasticsearch domain.</p> <p>Valid values:</p> <ul> <li> <p>
              <code>Policy-Min-TLS-1-0-2019-07</code>, which supports TLSv1.0
              and higher</p> </li> <li> <p>
              <code>Policy-Min-TLS-1-2-2019-07</code>, which only supports
              TLSv1.2</p> </li> </ul>
    type: object
  AwsElasticsearchDomainElasticsearchClusterConfigDetails:
    description: details about the configuration of an Elasticsearch cluster.
    properties:
      DedicatedMasterCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of instances to use for the master node. If this
              attribute is specified, then <code>DedicatedMasterEnabled</code>
              must be <code>true</code>.
      DedicatedMasterEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to use a dedicated master node for the Elasticsearch
              domain. A dedicated master node performs cluster management tasks,
              but doesn't hold data or respond to data upload requests.
      DedicatedMasterType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The hardware configuration of the computer that hosts the
              dedicated master node. For example,
              <code>m3.medium.elasticsearch</code>. If this attribute is
              specified, then <code>DedicatedMasterEnabled</code> must be
              <code>true</code>.
      InstanceCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of data nodes to use in the Elasticsearch domain.
      InstanceType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The instance type for your data nodes. For example,
              <code>m3.medium.elasticsearch</code>.
      ZoneAwarenessConfig:
        allOf:
          - $ref: >-
              #/definitions/AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails
          - description: >-
              Configuration options for zone awareness. Provided if
              <code>ZoneAwarenessEnabled</code> is <code>true</code>.
      ZoneAwarenessEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to enable zone awareness for the Elasticsearch domain.
              When zone awareness is enabled, Elasticsearch allocates the
              cluster's nodes and replica index shards across Availability Zones
              in the same Region. This prevents data loss and minimizes downtime
              if a node or data center fails.
    type: object
  AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails:
    description: Configuration options for zone awareness.
    properties:
      AvailabilityZoneCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              he number of Availability Zones that the domain uses. Valid values
              are 2 and 3. The default is 2.
    type: object
  AwsElasticsearchDomainEncryptionAtRestOptions:
    description: Details about the configuration for encryption at rest.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether encryption at rest is enabled.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The KMS key ID. Takes the form
              1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a.
    type: object
  AwsElasticsearchDomainLogPublishingOptions:
    description: configures the CloudWatch Logs to publish for the Elasticsearch domain.
    properties:
      AuditLogs:
        $ref: '#/definitions/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
      IndexSlowLogs:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
          - description: Configures the Elasticsearch index logs publishing.
      SearchSlowLogs:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
          - description: Configures the Elasticsearch search slow log publishing.
    type: object
  AwsElasticsearchDomainLogPublishingOptionsLogConfig:
    description: The log configuration.
    properties:
      CloudWatchLogsLogGroupArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the CloudWatch Logs group to publish the logs to.
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the log publishing is enabled.
    type: object
  AwsElasticsearchDomainNodeToNodeEncryptionOptions:
    description: Details about the configuration for node-to-node encryption.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether node-to-node encryption is enabled.
    type: object
  AwsElasticsearchDomainServiceSoftwareOptions:
    description: >-
      Information about the state of the domain relative to the latest service
      software.
    properties:
      AutomatedUpdateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The epoch time when the deployment window closes for required
              updates. After this time, Amazon Elasticsearch Service schedules
              the software upgrade automatically.
      Cancellable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether a request to update the domain can be canceled.
      CurrentVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The version of the service software that is currently installed on
              the domain.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A more detailed description of the service software status.
      NewVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The most recent version of the service software.
      UpdateAvailable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether a service software update is available for the domain.
      UpdateStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the service software update.
    type: object
  AwsElasticsearchDomainVPCOptions:
    description: >-
      Information that Elasticsearch derives based on <code>VPCOptions</code>
      for the domain.
    properties:
      AvailabilityZones:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: The list of Availability Zones associated with the VPC subnets.
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The list of security group IDs associated with the VPC endpoints
              for the domain.
      SubnetIds:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              A list of subnet IDs associated with the VPC endpoints for the
              domain.
      VPCId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: ID for the VPC.
    type: object
  AwsElbAppCookieStickinessPolicies:
    items:
      $ref: '#/definitions/AwsElbAppCookieStickinessPolicy'
    type: array
  AwsElbAppCookieStickinessPolicy:
    description: >-
      Contains information about a stickiness policy that was created using
      <code>CreateAppCookieStickinessPolicy</code>.
    properties:
      CookieName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the application cookie used for stickiness.
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The mnemonic name for the policy being created. The name must be
              unique within the set of policies for the load balancer.
    type: object
  AwsElbLbCookieStickinessPolicies:
    items:
      $ref: '#/definitions/AwsElbLbCookieStickinessPolicy'
    type: array
  AwsElbLbCookieStickinessPolicy:
    description: >-
      Contains information about a stickiness policy that was created using
      <code>CreateLBCookieStickinessPolicy</code>.
    properties:
      CookieExpirationPeriod:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The amount of time, in seconds, after which the cookie is
              considered stale. If an expiration period is not specified, the
              stickiness session lasts for the duration of the browser session.
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the policy. The name must be unique within the set of
              policies for the load balancer.
    type: object
  AwsElbLoadBalancerAccessLog:
    description: >-
      Contains information about the access log configuration for the load
      balancer.
    properties:
      EmitInterval:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The interval in minutes for publishing the access logs.</p>
              <p>You can publish access logs either every 5 minutes or every 60
              minutes.</p>
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether access logs are enabled for the load balancer.
      S3BucketName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the S3 bucket where the access logs are stored.
      S3BucketPrefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The logical hierarchy that was created for the S3 bucket.</p>
              <p>If a prefix is not provided, the log is placed at the root
              level of the bucket.</p>
    type: object
  AwsElbLoadBalancerAttributes:
    description: Contains attributes for the load balancer.
    properties:
      AccessLog:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerAccessLog'
          - description: >-
              <p>Information about the access log configuration for the load
              balancer.</p> <p>If the access log is enabled, the load balancer
              captures detailed information about all requests. It delivers the
              information to a specified S3 bucket.</p>
      ConnectionDraining:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerConnectionDraining'
          - description: >-
              <p>Information about the connection draining configuration for the
              load balancer.</p> <p>If connection draining is enabled, the load
              balancer allows existing requests to complete before it shifts
              traffic away from a deregistered or unhealthy instance.</p>
      ConnectionSettings:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerConnectionSettings'
          - description: >-
              <p>Connection settings for the load balancer.</p> <p>If an idle
              timeout is configured, the load balancer allows connections to
              remain idle for the specified duration. When a connection is idle,
              no data is sent over the connection.</p>
      CrossZoneLoadBalancing:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerCrossZoneLoadBalancing'
          - description: >-
              <p>Cross-zone load balancing settings for the load balancer.</p>
              <p>If cross-zone load balancing is enabled, the load balancer
              routes the request traffic evenly across all instances regardless
              of the Availability Zones.</p>
    type: object
  AwsElbLoadBalancerBackendServerDescription:
    description: >-
      Provides information about the configuration of an EC2 instance for the
      load balancer.
    properties:
      InstancePort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The port on which the EC2 instance is listening.
      PolicyNames:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The names of the policies that are enabled for the EC2 instance.
    type: object
  AwsElbLoadBalancerBackendServerDescriptions:
    items:
      $ref: '#/definitions/AwsElbLoadBalancerBackendServerDescription'
    type: array
  AwsElbLoadBalancerConnectionDraining:
    description: >-
      Contains information about the connection draining configuration for the
      load balancer.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether connection draining is enabled for the load
              balancer.
      Timeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum time, in seconds, to keep the existing connections
              open before deregistering the instances.
    type: object
  AwsElbLoadBalancerConnectionSettings:
    description: Contains connection settings for the load balancer.
    properties:
      IdleTimeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The time, in seconds, that the connection can be idle (no data is
              sent over the connection) before it is closed by the load
              balancer.
    type: object
  AwsElbLoadBalancerCrossZoneLoadBalancing:
    description: Contains cross-zone load balancing settings for the load balancer.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether cross-zone load balancing is enabled for the
              load balancer.
    type: object
  AwsElbLoadBalancerDetails:
    description: Contains details about a Classic Load Balancer.
    properties:
      AvailabilityZones:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The list of Availability Zones for the load balancer.
      BackendServerDescriptions:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerBackendServerDescriptions'
          - description: Information about the configuration of the EC2 instances.
      CanonicalHostedZoneName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: "The name of the Amazon Route\_53 hosted zone for the load balancer."
      CanonicalHostedZoneNameID:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: "The ID of the Amazon Route\_53 hosted zone for the load balancer."
      CreatedTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the load balancer was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DnsName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The DNS name of the load balancer.
      HealthCheck:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerHealthCheck'
          - description: >-
              Information about the health checks that are conducted on the load
              balancer.
      Instances:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerInstances'
          - description: List of EC2 instances for the load balancer.
      ListenerDescriptions:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerListenerDescriptions'
          - description: The policies that are enabled for the load balancer listeners.
      LoadBalancerAttributes:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerAttributes'
          - description: The attributes for a load balancer.
      LoadBalancerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the load balancer.
      Policies:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerPolicies'
          - description: The policies for a load balancer.
      Scheme:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of load balancer. Only provided if the load balancer
              is in a VPC.</p> <p>If <code>Scheme</code> is
              <code>internet-facing</code>, the load balancer has a public DNS
              name that resolves to a public IP address.</p> <p>If
              <code>Scheme</code> is <code>internal</code>, the load balancer
              has a public DNS name that resolves to a private IP address.</p>
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              The security groups for the load balancer. Only provided if the
              load balancer is in a VPC.
      SourceSecurityGroup:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerSourceSecurityGroup'
          - description: >-
              Information about the security group for the load balancer. This
              is the security group that is used for inbound rules.
      Subnets:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The list of subnet identifiers for the load balancer.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPC for the load balancer.
    type: object
  AwsElbLoadBalancerHealthCheck:
    description: >-
      Contains information about the health checks that are conducted on the
      load balancer.
    properties:
      HealthyThreshold:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of consecutive health check successes required before
              the instance is moved to the Healthy state.
      Interval:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The approximate interval, in seconds, between health checks of an
              individual instance.
      Target:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The instance that is being checked. The target specifies the
              protocol and port. The available protocols are TCP, SSL, HTTP, and
              HTTPS. The range of valid ports is 1 through 65535.</p> <p>For the
              HTTP and HTTPS protocols, the target also specifies the ping
              path.</p> <p>For the TCP protocol, the target is specified as
              <code>TCP: <i>&lt;port&gt;</i> </code>.</p> <p>For the SSL
              protocol, the target is specified as <code>SSL.<i>&lt;port&gt;</i>
              </code>.</p> <p>For the HTTP and HTTPS protocols, the target is
              specified as <code>
              <i>&lt;protocol&gt;</i>:<i>&lt;port&gt;</i>/<i>&lt;path to
              ping&gt;</i> </code>.</p>
      Timeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount of time, in seconds, during which no response means a
              failed health check.
      UnhealthyThreshold:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of consecutive health check failures that must occur
              before the instance is moved to the Unhealthy state.
    type: object
  AwsElbLoadBalancerInstance:
    description: Provides information about an EC2 instance for a load balancer.
    properties:
      InstanceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The instance identifier.
    type: object
  AwsElbLoadBalancerInstances:
    items:
      $ref: '#/definitions/AwsElbLoadBalancerInstance'
    type: array
  AwsElbLoadBalancerListener:
    description: Information about a load balancer listener.
    properties:
      InstancePort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The port on which the instance is listening.
      InstanceProtocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The protocol to use to route traffic to instances.</p> <p>Valid
              values: <code>HTTP</code> | <code>HTTPS</code> | <code>TCP</code>
              | <code>SSL</code> </p>
      LoadBalancerPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The port on which the load balancer is listening.</p> <p>On
              EC2-VPC, you can specify any port from the range 1-65535.</p>
              <p>On EC2-Classic, you can specify any port from the following
              list: 25, 80, 443, 465, 587, 1024-65535.</p>
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The load balancer transport protocol to use for routing.</p>
              <p>Valid values: <code>HTTP</code> | <code>HTTPS</code> |
              <code>TCP</code> | <code>SSL</code> </p>
      SslCertificateId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the server certificate.
    type: object
  AwsElbLoadBalancerListenerDescription:
    description: Lists the policies that are enabled for a load balancer listener.
    properties:
      Listener:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerListener'
          - description: Information about the listener.
      PolicyNames:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The policies enabled for the listener.
    type: object
  AwsElbLoadBalancerListenerDescriptions:
    items:
      $ref: '#/definitions/AwsElbLoadBalancerListenerDescription'
    type: array
  AwsElbLoadBalancerPolicies:
    description: Contains information about the policies for a load balancer.
    properties:
      AppCookieStickinessPolicies:
        allOf:
          - $ref: '#/definitions/AwsElbAppCookieStickinessPolicies'
          - description: >-
              The stickiness policies that are created using
              <code>CreateAppCookieStickinessPolicy</code>.
      LbCookieStickinessPolicies:
        allOf:
          - $ref: '#/definitions/AwsElbLbCookieStickinessPolicies'
          - description: >-
              The stickiness policies that are created using
              <code>CreateLBCookieStickinessPolicy</code>.
      OtherPolicies:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The policies other than the stickiness policies.
    type: object
  AwsElbLoadBalancerSourceSecurityGroup:
    description: Contains information about the security group for the load balancer.
    properties:
      GroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the security group.
      OwnerAlias:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The owner of the security group.
    type: object
  AwsElbv2LoadBalancerDetails:
    description: Information about a load balancer.
    properties:
      AvailabilityZones:
        allOf:
          - $ref: '#/definitions/AvailabilityZones'
          - description: The Availability Zones for the load balancer.
      CanonicalHostedZoneId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of the Amazon Route 53 hosted zone associated with the load
              balancer.
      CreatedTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the load balancer was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DNSName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The public DNS name of the load balancer.
      IpAddressType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of IP addresses used by the subnets for your load
              balancer. The possible values are <code>ipv4</code> (for IPv4
              addresses) and <code>dualstack</code> (for IPv4 and IPv6
              addresses).
      Scheme:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The nodes of an Internet-facing load balancer have public IP
              addresses.
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroups'
          - description: The IDs of the security groups for the load balancer.
      State:
        allOf:
          - $ref: '#/definitions/LoadBalancerState'
          - description: The state of the load balancer.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of load balancer.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the VPC for the load balancer.
    type: object
  AwsIamAccessKeyDetails:
    description: IAM access key details related to a finding.
    properties:
      AccessKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the access key.
      AccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon Web Services account ID of the account for the key.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the IAM access key was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      PrincipalId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the principal associated with an access key.
      PrincipalName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the principal.
      PrincipalType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of principal associated with an access key.
      SessionContext:
        allOf:
          - $ref: '#/definitions/AwsIamAccessKeySessionContext'
          - description: Information about the session that the key was used for.
      Status:
        allOf:
          - $ref: '#/definitions/AwsIamAccessKeyStatus'
          - description: The status of the IAM access key related to a finding.
      UserName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The user associated with the IAM access key related to a
              finding.</p> <p>The <code>UserName</code> parameter has been
              replaced with the <code>PrincipalName</code> parameter because
              access keys can also be assigned to principals that are not IAM
              users.</p>This filter is deprecated. Instead, use PrincipalName.
            x-deprecated: true
    type: object
  AwsIamAccessKeySessionContext:
    description: Provides information about the session that the key was used for.
    properties:
      Attributes:
        allOf:
          - $ref: '#/definitions/AwsIamAccessKeySessionContextAttributes'
          - description: Attributes of the session that the key was used for.
      SessionIssuer:
        allOf:
          - $ref: '#/definitions/AwsIamAccessKeySessionContextSessionIssuer'
          - description: Information about the entity that created the session.
    type: object
  AwsIamAccessKeySessionContextAttributes:
    description: Attributes of the session that the key was used for.
    properties:
      CreationDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the session was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      MfaAuthenticated:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether the session used multi-factor authentication
              (MFA).
    type: object
  AwsIamAccessKeySessionContextSessionIssuer:
    description: Information about the entity that created the session.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the Amazon Web Services account that created the
              session.
      Arn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the session.
      PrincipalId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The principal ID of the principal (user, role, or group) that
              created the session.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of principal (user, role, or group) that created the
              session.
      UserName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the principal that created the session.
    type: object
  AwsIamAccessKeyStatus:
    enum:
      - Active
      - Inactive
    type: string
  AwsIamAttachedManagedPolicy:
    description: A managed policy that is attached to an IAM principal.
    properties:
      PolicyArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the policy.
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the policy.
    type: object
  AwsIamAttachedManagedPolicyList:
    items:
      $ref: '#/definitions/AwsIamAttachedManagedPolicy'
    type: array
  AwsIamGroupDetails:
    description: Contains details about an IAM group.
    properties:
      AttachedManagedPolicies:
        allOf:
          - $ref: '#/definitions/AwsIamAttachedManagedPolicyList'
          - description: A list of the managed policies that are attached to the IAM group.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the IAM group was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      GroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the IAM group.
      GroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the IAM group.
      GroupPolicyList:
        allOf:
          - $ref: '#/definitions/AwsIamGroupPolicyList'
          - description: The list of inline policies that are embedded in the group.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the group.
    type: object
  AwsIamGroupPolicy:
    description: A managed policy that is attached to the IAM group.
    properties:
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the policy.
    type: object
  AwsIamGroupPolicyList:
    items:
      $ref: '#/definitions/AwsIamGroupPolicy'
    type: array
  AwsIamInstanceProfile:
    description: Information about an instance profile.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the instance profile.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the instance profile was created.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      InstanceProfileId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the instance profile.
      InstanceProfileName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the instance profile.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the instance profile.
      Roles:
        allOf:
          - $ref: '#/definitions/AwsIamInstanceProfileRoles'
          - description: The roles associated with the instance profile.
    type: object
  AwsIamInstanceProfileList:
    items:
      $ref: '#/definitions/AwsIamInstanceProfile'
    type: array
  AwsIamInstanceProfileRole:
    description: Information about a role associated with an instance profile.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the role.
      AssumeRolePolicyDocument:
        allOf:
          - $ref: '#/definitions/AwsIamRoleAssumeRolePolicyDocument'
          - description: The policy that grants an entity permission to assume the role.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the role was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the role.
      RoleId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the role.
      RoleName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the role.
    type: object
  AwsIamInstanceProfileRoles:
    items:
      $ref: '#/definitions/AwsIamInstanceProfileRole'
    type: array
  AwsIamPermissionsBoundary:
    description: >-
      Information about the policy used to set the permissions boundary for an
      IAM principal.
    properties:
      PermissionsBoundaryArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the policy used to set the permissions boundary.
      PermissionsBoundaryType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The usage type for the permissions boundary.
    type: object
  AwsIamPolicyDetails:
    description: Represents an IAM permissions policy.
    properties:
      AttachmentCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of users, groups, and roles that the policy is attached
              to.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>When the policy was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DefaultVersionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the default version of the policy.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the policy.
      IsAttachable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: 'Whether the policy can be attached to a user, group, or role.'
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the policy.
      PermissionsBoundaryUsageCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of users and roles that use the policy to set the
              permissions boundary.
      PolicyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The unique identifier of the policy.
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the policy.
      PolicyVersionList:
        allOf:
          - $ref: '#/definitions/AwsIamPolicyVersionList'
          - description: List of versions of the policy.
      UpdateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>When the policy was most recently updated.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  AwsIamPolicyVersion:
    description: A version of an IAM policy.
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the version was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      IsDefaultVersion:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the version is the default version.
      VersionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the policy version.
    type: object
  AwsIamPolicyVersionList:
    items:
      $ref: '#/definitions/AwsIamPolicyVersion'
    type: array
  AwsIamRoleAssumeRolePolicyDocument:
    maxLength: 131072
    minLength: 1
    pattern: '[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]+'
    type: string
  AwsIamRoleDetails:
    description: >-
      Contains information about an IAM role, including all of the role's
      policies.
    properties:
      AssumeRolePolicyDocument:
        allOf:
          - $ref: '#/definitions/AwsIamRoleAssumeRolePolicyDocument'
          - description: The trust policy that grants permission to assume the role.
      AttachedManagedPolicies:
        allOf:
          - $ref: '#/definitions/AwsIamAttachedManagedPolicyList'
          - description: The list of the managed policies that are attached to the role.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the role was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      InstanceProfileList:
        allOf:
          - $ref: '#/definitions/AwsIamInstanceProfileList'
          - description: The list of instance profiles that contain this role.
      MaxSessionDuration:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The maximum session duration (in seconds) that you want to set for
              the specified role.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the role.
      PermissionsBoundary:
        $ref: '#/definitions/AwsIamPermissionsBoundary'
      RoleId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The stable and unique string identifying the role.
      RoleName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The friendly name that identifies the role.
      RolePolicyList:
        allOf:
          - $ref: '#/definitions/AwsIamRolePolicyList'
          - description: The list of inline policies that are embedded in the role.
    type: object
  AwsIamRolePolicy:
    description: An inline policy that is embedded in the role.
    properties:
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the policy.
    type: object
  AwsIamRolePolicyList:
    items:
      $ref: '#/definitions/AwsIamRolePolicy'
    type: array
  AwsIamUserDetails:
    description: Information about an IAM user.
    properties:
      AttachedManagedPolicies:
        allOf:
          - $ref: '#/definitions/AwsIamAttachedManagedPolicyList'
          - description: A list of the managed policies that are attached to the user.
      CreateDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the user was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      GroupList:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of IAM groups that the user belongs to.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the user.
      PermissionsBoundary:
        allOf:
          - $ref: '#/definitions/AwsIamPermissionsBoundary'
          - description: The permissions boundary for the user.
      UserId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The unique identifier for the user.
      UserName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the user.
      UserPolicyList:
        allOf:
          - $ref: '#/definitions/AwsIamUserPolicyList'
          - description: The list of inline policies that are embedded in the user.
    type: object
  AwsIamUserPolicy:
    description: Information about an inline policy that is embedded in the user.
    properties:
      PolicyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the policy.
    type: object
  AwsIamUserPolicyList:
    items:
      $ref: '#/definitions/AwsIamUserPolicy'
    type: array
  AwsKmsKeyDetails:
    description: Contains metadata about an KMS key.
    properties:
      AWSAccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The twelve-digit account ID of the Amazon Web Services account
              that owns the KMS key.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              <p>Indicates when the KMS key was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the key.
      KeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The globally unique identifier for the KMS key.
      KeyManager:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The manager of the KMS key. KMS keys in your Amazon Web Services
              account are either customer managed or Amazon Web Services
              managed.
      KeyRotationStatus:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the key has key rotation enabled.
      KeyState:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The state of the KMS key.
      Origin:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The source of the KMS key material.</p> <p>When this value is
              <code>AWS_KMS</code>, KMS created the key material.</p> <p>When
              this value is <code>EXTERNAL</code>, the key material was imported
              from your existing key management infrastructure or the KMS key
              lacks key material.</p> <p>When this value is
              <code>AWS_CLOUDHSM</code>, the key material was created in the
              CloudHSM cluster associated with a custom key store.</p>
    type: object
  AwsLambdaFunctionCode:
    description: >-
      The code for the Lambda function. You can specify either an object in
      Amazon S3, or upload a deployment package directly.
    properties:
      S3Bucket:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              An Amazon S3 bucket in the same Amazon Web Services Region as your
              function. The bucket can be in a different Amazon Web Services
              account.
      S3Key:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon S3 key of the deployment package.
      S3ObjectVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              For versioned objects, the version of the deployment package
              object to use.
      ZipFile:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The base64-encoded contents of the deployment package. Amazon Web
              Services SDK and Amazon Web Services CLI clients handle the
              encoding for you.
    type: object
  AwsLambdaFunctionDeadLetterConfig:
    description: The dead-letter queue for failed asynchronous invocations.
    properties:
      TargetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of an SQS queue or SNS topic.
    type: object
  AwsLambdaFunctionDetails:
    description: Details about a function's configuration.
    properties:
      Code:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionCode'
          - description: An <code>AwsLambdaFunctionCode</code> object.
      CodeSha256:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The SHA256 hash of the function's deployment package.
      DeadLetterConfig:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionDeadLetterConfig'
          - description: The function's dead letter queue.
      Environment:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionEnvironment'
          - description: The function's environment variables.
      FunctionName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the function.
      Handler:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The function that Lambda calls to begin executing your function.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The KMS key that is used to encrypt the function's environment
              variables. This key is only returned if you've configured a
              customer managed customer managed key.
      LastModified:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the function was last updated.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Layers:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionLayerList'
          - description: The function's layers.
      MasterArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: 'For Lambda@Edge functions, the ARN of the master function.'
      MemorySize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The memory that is allocated to the function.
      RevisionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The latest updated revision of the function or alias.
      Role:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The function's execution role.
      Runtime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The runtime environment for the Lambda function.
      Timeout:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount of time that Lambda allows a function to run before
              stopping it.
      TracingConfig:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionTracingConfig'
          - description: The function's X-Ray tracing configuration.
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the Lambda function.
      VpcConfig:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionVpcConfig'
          - description: The function's networking configuration.
    type: object
  AwsLambdaFunctionEnvironment:
    description: A function's environment variable settings.
    properties:
      Error:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionEnvironmentError'
          - description: An <code>AwsLambdaFunctionEnvironmentError</code> object.
      Variables:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: Environment variable key-value pairs.
    type: object
  AwsLambdaFunctionEnvironmentError:
    description: Error messages for environment variables that could not be applied.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The error code.
      Message:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The error message.
    type: object
  AwsLambdaFunctionLayer:
    description: An Lambda layer.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the function layer.
      CodeSize:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The size of the layer archive in bytes.
    type: object
  AwsLambdaFunctionLayerList:
    items:
      $ref: '#/definitions/AwsLambdaFunctionLayer'
    type: array
  AwsLambdaFunctionTracingConfig:
    description: The function's X-Ray tracing configuration.
    properties:
      Mode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The tracing mode.
    type: object
  AwsLambdaFunctionVpcConfig:
    description: >-
      The VPC security groups and subnets that are attached to a Lambda
      function.
    properties:
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of VPC security groups IDs.
      SubnetIds:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: A list of VPC subnet IDs.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the VPC.
    type: object
  AwsLambdaLayerVersionDetails:
    description: Details about a Lambda layer version.
    properties:
      CompatibleRuntimes:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              <p>The layer's compatible runtimes. Maximum number of five
              items.</p> <p>Valid values: <code>nodejs10.x</code> |
              <code>nodejs12.x</code> | <code>java8</code> | <code>java11</code>
              | <code>python2.7</code> | <code>python3.6</code> |
              <code>python3.7</code> | <code>python3.8</code> |
              <code>dotnetcore1.0</code> | <code>dotnetcore2.1</code> |
              <code>go1.x</code> | <code>ruby2.5</code> | <code>provided</code>
              </p>
      CreatedDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the version was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Version:
        allOf:
          - $ref: '#/definitions/AwsLambdaLayerVersionNumber'
          - description: The version number.
    type: object
  AwsLambdaLayerVersionNumber:
    type: integer
  AwsRdsDbClusterAssociatedRole:
    description: An IAM role that is associated with the Amazon RDS DB cluster.
    properties:
      RoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the IAM role.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The status of the association between the IAM role and the DB
              cluster.
    type: object
  AwsRdsDbClusterAssociatedRoles:
    items:
      $ref: '#/definitions/AwsRdsDbClusterAssociatedRole'
    type: array
  AwsRdsDbClusterDetails:
    description: Information about an Amazon RDS DB cluster.
    properties:
      ActivityStreamStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the database activity stream.
      AllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For all database engines except Aurora, specifies the allocated
              storage size in gibibytes (GiB).
      AssociatedRoles:
        allOf:
          - $ref: '#/definitions/AwsRdsDbClusterAssociatedRoles'
          - description: A list of the IAM roles that are associated with the DB cluster.
      AvailabilityZones:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of Availability Zones (AZs) where instances in the DB
              cluster can be created.
      BackupRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of days for which automated backups are retained.
      ClusterCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the DB cluster was created, in Universal
              Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code>
              format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      CopyTagsToSnapshot:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether tags are copied from the DB cluster to snapshots of the DB
              cluster.
      CrossAccountClone:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the DB cluster is a clone of a DB cluster owned by a
              different Amazon Web Services account.
      CustomEndpoints:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of custom endpoints for the DB cluster.
      DatabaseName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the database.
      DbClusterIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The DB cluster identifier that the user assigned to the cluster.
              This identifier is the unique key that identifies a DB cluster.
      DbClusterMembers:
        allOf:
          - $ref: '#/definitions/AwsRdsDbClusterMembers'
          - description: The list of instances that make up the DB cluster.
      DbClusterOptionGroupMemberships:
        allOf:
          - $ref: '#/definitions/AwsRdsDbClusterOptionGroupMemberships'
          - description: The list of option group memberships for this DB cluster.
      DbClusterParameterGroup:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the DB cluster parameter group for the DB cluster.
      DbClusterResourceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the DB cluster. The identifier must be unique
              within each Amazon Web Services Region and is immutable.
      DbSubnetGroup:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The subnet group that is associated with the DB cluster, including
              the name, description, and subnets in the subnet group.
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the DB cluster has deletion protection enabled.
      DomainMemberships:
        allOf:
          - $ref: '#/definitions/AwsRdsDbDomainMemberships'
          - description: >-
              The Active Directory domain membership records that are associated
              with the DB cluster.
      EnabledCloudWatchLogsExports:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of log types that this DB cluster is configured to export
              to CloudWatch Logs.
      Endpoint:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The connection endpoint for the primary instance of the DB
              cluster.
      Engine:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the database engine to use for this DB cluster.
      EngineMode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The database engine mode of the DB cluster.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version number of the database engine to use.
      HostedZoneId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Specifies the identifier that Amazon Route 53 assigns when you
              create a hosted zone.
      HttpEndpointEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the HTTP endpoint for an Aurora Serverless DB cluster is
              enabled.
      IamDatabaseAuthenticationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the mapping of IAM accounts to database accounts is
              enabled.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the KMS master key that is used to encrypt the database
              instances in the DB cluster.
      MasterUsername:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the master user for the DB cluster.
      MultiAz:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the DB cluster has instances in multiple Availability
              Zones.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port number on which the DB instances in the DB cluster accept
              connections.
      PreferredBackupWindow:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The range of time each day when automated backups are created,
              if automated backups are enabled.</p> <p>Uses the format
              <code>HH:MM-HH:MM</code>. For example,
              <code>04:52-05:22</code>.</p>
      PreferredMaintenanceWindow:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The weekly time range during which system maintenance can
              occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format
              <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the
              day values, use
              <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p>
              <p>For example, <code>sun:09:32-sun:10:02</code>.</p>
      ReadReplicaIdentifiers:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              The identifiers of the read replicas that are associated with this
              DB cluster.
      ReaderEndpoint:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The reader endpoint for the DB cluster.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current status of this DB cluster.
      StorageEncrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the DB cluster is encrypted.
      VpcSecurityGroups:
        allOf:
          - $ref: '#/definitions/AwsRdsDbInstanceVpcSecurityGroups'
          - description: A list of VPC security groups that the DB cluster belongs to.
    type: object
  AwsRdsDbClusterMember:
    description: Information about an instance in the DB cluster.
    properties:
      DbClusterParameterGroupStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The status of the DB cluster parameter group for this member of
              the DB cluster.
      DbInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The instance identifier for this member of the DB cluster.
      IsClusterWriter:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the cluster member is the primary instance for the DB
              cluster.
      PromotionTier:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the order in which an Aurora replica is promoted to the
              primary instance when the existing primary instance fails.
    type: object
  AwsRdsDbClusterMembers:
    items:
      $ref: '#/definitions/AwsRdsDbClusterMember'
    type: array
  AwsRdsDbClusterOptionGroupMembership:
    description: Information about an option group membership for a DB cluster.
    properties:
      DbClusterOptionGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the DB cluster option group.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the DB cluster option group.
    type: object
  AwsRdsDbClusterOptionGroupMemberships:
    items:
      $ref: '#/definitions/AwsRdsDbClusterOptionGroupMembership'
    type: array
  AwsRdsDbClusterSnapshotDetails:
    description: Information about an Amazon RDS DB cluster snapshot.
    properties:
      AllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Specifies the allocated storage size in gibibytes (GiB).
      AvailabilityZones:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of Availability Zones where instances in the DB cluster can
              be created.
      ClusterCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the DB cluster was created, in Universal
              Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code>
              format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DbClusterIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The DB cluster identifier.
      DbClusterSnapshotIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the DB cluster snapshot.
      Engine:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the database engine that you want to use for this DB
              instance.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the database engine to use.
      IamDatabaseAuthenticationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether mapping of IAM accounts to database accounts is enabled.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the KMS master key that is used to encrypt the database
              instances in the DB cluster.
      LicenseModel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The license model information for this DB cluster snapshot.
      MasterUsername:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the master user for the DB cluster.
      PercentProgress:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the percentage of the estimated data that has been
              transferred.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port number on which the DB instances in the DB cluster accept
              connections.
      SnapshotCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the snapshot was taken.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      SnapshotType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of DB cluster snapshot.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of this DB cluster snapshot.
      StorageEncrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the DB cluster is encrypted.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The VPC ID that is associated with the DB cluster snapshot.
    type: object
  AwsRdsDbDomainMembership:
    description: >-
      Information about an Active Directory domain membership record associated
      with the DB instance.
    properties:
      Domain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the Active Directory domain.
      Fqdn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The fully qualified domain name of the Active Directory domain.
      IamRoleName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the IAM role to use when making API calls to the
              Directory Service.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The status of the Active Directory Domain membership for the DB
              instance.
    type: object
  AwsRdsDbDomainMemberships:
    items:
      $ref: '#/definitions/AwsRdsDbDomainMembership'
    type: array
  AwsRdsDbInstanceAssociatedRole:
    description: An IAM role associated with the DB instance.
    properties:
      FeatureName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the feature associated with the IAM role.
      RoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the IAM role that is associated with the DB instance.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Describes the state of the association between the IAM role and
              the DB instance. The <code>Status</code> property returns one of
              the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The
              IAM role ARN is associated with the DB instance and can be used to
              access other Amazon Web Services services on your behalf.</p>
              </li> <li> <p> <code>PENDING</code> - The IAM role ARN is being
              associated with the DB instance.</p> </li> <li> <p>
              <code>INVALID</code> - The IAM role ARN is associated with the DB
              instance. But the DB instance is unable to assume the IAM role in
              order to access other Amazon Web Services services on your behalf.
              </p> </li> </ul>
    type: object
  AwsRdsDbInstanceAssociatedRoles:
    items:
      $ref: '#/definitions/AwsRdsDbInstanceAssociatedRole'
    type: array
  AwsRdsDbInstanceDetails:
    description: Contains the details of an Amazon RDS DB instance.
    properties:
      AllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount of storage (in gigabytes) to initially allocate for the
              DB instance.
      AssociatedRoles:
        allOf:
          - $ref: '#/definitions/AwsRdsDbInstanceAssociatedRoles'
          - description: The IAM roles associated with the DB instance.
      AutoMinorVersionUpgrade:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether minor version patches are applied automatically.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Availability Zone where the DB instance will be created.
      BackupRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of days for which to retain automated backups.
      CACertificateIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the CA certificate for this DB instance.
      CharacterSetName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the character set that this DB instance is associated
              with.
      CopyTagsToSnapshot:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether to copy resource tags to snapshots of the DB instance.
      DBClusterIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If the DB instance is a member of a DB cluster, contains the name
              of the DB cluster that the DB instance is a member of.
      DBInstanceClass:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Contains the name of the compute and memory capacity class of the
              DB instance.
      DBInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Contains a user-supplied database identifier. This identifier is
              the unique key that identifies a DB instance.
      DBName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The meaning of this parameter differs according to the database
              engine you use.</p> <p> <b>MySQL, MariaDB, SQL Server,
              PostgreSQL</b> </p> <p>Contains the name of the initial database
              of this instance that was provided at create time, if one was
              specified when the DB instance was created. This same name is
              returned for the life of the DB instance.</p> <p> <b>Oracle</b>
              </p> <p>Contains the Oracle System ID (SID) of the created DB
              instance. Not shown when the returned parameters do not apply to
              an Oracle DB instance. </p>
      DbInstancePort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the port that the DB instance listens on. If the DB
              instance is part of a DB cluster, this can be a different port
              than the DB cluster port.
      DbInstanceStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The current status of the DB instance.
      DbParameterGroups:
        allOf:
          - $ref: '#/definitions/AwsRdsDbParameterGroups'
          - description: A list of the DB parameter groups to assign to the DB instance.
      DbSecurityGroups:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of the DB security groups to assign to the DB instance.
      DbSubnetGroup:
        allOf:
          - $ref: '#/definitions/AwsRdsDbSubnetGroup'
          - description: >-
              Information about the subnet group that is associated with the DB
              instance.
      DbiResourceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services Region-unique, immutable identifier for
              the DB instance. This identifier is found in CloudTrail log
              entries whenever the KMS key for the DB instance is accessed. 
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Indicates whether the DB instance has deletion protection
              enabled.</p> <p>When deletion protection is enabled, the database
              cannot be deleted.</p>
      DomainMemberships:
        allOf:
          - $ref: '#/definitions/AwsRdsDbDomainMemberships'
          - description: >-
              The Active Directory domain membership records associated with the
              DB instance.
      EnabledCloudWatchLogsExports:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of log types that this DB instance is configured to export
              to CloudWatch Logs.
      Endpoint:
        allOf:
          - $ref: '#/definitions/AwsRdsDbInstanceEndpoint'
          - description: Specifies the connection endpoint.
      Engine:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Provides the name of the database engine to use for this DB
              instance.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Indicates the database engine version.
      EnhancedMonitoringResourceArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the CloudWatch Logs log stream that receives the
              enhanced monitoring metrics data for the DB instance.
      IAMDatabaseAuthenticationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>True if mapping of IAM accounts to database accounts is
              enabled, and otherwise false.</p> <p>IAM database authentication
              can be enabled for the following database engines.</p> <ul> <li>
              <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li>
              <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li>
              <p>Aurora 5.6 or higher</p> </li> </ul>
      InstanceCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the DB instance was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Iops:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the provisioned IOPS (I/O operations per second) for
              this DB instance.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If <code>StorageEncrypted</code> is true, the KMS key identifier
              for the encrypted DB instance.
      LatestRestorableTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Specifies the latest time to which a database can be restored
              with point-in-time restore.</p> <p>Uses the <code>date-time</code>
              format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      LicenseModel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: License model information for this DB instance.
      ListenerEndpoint:
        $ref: '#/definitions/AwsRdsDbInstanceEndpoint'
      MasterUsername:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The master user name of the DB instance.
      MaxAllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The upper limit to which Amazon RDS can automatically scale the
              storage of the DB instance.
      MonitoringInterval:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The interval, in seconds, between points when enhanced monitoring
              metrics are collected for the DB instance.
      MonitoringRoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN for the IAM role that permits Amazon RDS to send enhanced
              monitoring metrics to CloudWatch Logs.
      MultiAz:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the DB instance is a multiple Availability Zone
              deployment.
      OptionGroupMemberships:
        allOf:
          - $ref: '#/definitions/AwsRdsDbOptionGroupMemberships'
          - description: The list of option group memberships for this DB instance.
      PendingModifiedValues:
        allOf:
          - $ref: '#/definitions/AwsRdsDbPendingModifiedValues'
          - description: Changes to the DB instance that are currently pending.
      PerformanceInsightsEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether Performance Insights is enabled for the DB
              instance.
      PerformanceInsightsKmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the KMS key used to encrypt the Performance
              Insights data.
      PerformanceInsightsRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of days to retain Performance Insights data.
      PreferredBackupWindow:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The range of time each day when automated backups are created,
              if automated backups are enabled.</p> <p>Uses the format
              <code>HH:MM-HH:MM</code>. For example,
              <code>04:52-05:22</code>.</p>
      PreferredMaintenanceWindow:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The weekly time range during which system maintenance can
              occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format
              <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the
              day values, use
              <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p>
              <p>For example, <code>sun:09:32-sun:10:02</code>.</p>
      ProcessorFeatures:
        allOf:
          - $ref: '#/definitions/AwsRdsDbProcessorFeatures'
          - description: >-
              The number of CPU cores and the number of threads per core for the
              DB instance class of the DB instance.
      PromotionTier:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The order in which to promote an Aurora replica to the primary
              instance after a failure of the existing primary instance.
      PubliclyAccessible:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Specifies the accessibility options for the DB instance.</p>
              <p>A value of true specifies an Internet-facing instance with a
              publicly resolvable DNS name, which resolves to a public IP
              address.</p> <p>A value of false specifies an internal instance
              with a DNS name that resolves to a private IP address. </p>
      ReadReplicaDBClusterIdentifiers:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              List of identifiers of Aurora DB clusters to which the RDS DB
              instance is replicated as a read replica.
      ReadReplicaDBInstanceIdentifiers:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              List of identifiers of the read replicas associated with this DB
              instance.
      ReadReplicaSourceDBInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If this DB instance is a read replica, contains the identifier of
              the source DB instance.
      SecondaryAvailabilityZone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              For a DB instance with multi-Availability Zone support, the name
              of the secondary Availability Zone.
      StatusInfos:
        allOf:
          - $ref: '#/definitions/AwsRdsDbStatusInfos'
          - description: >-
              The status of a read replica. If the instance isn't a read
              replica, this is empty.
      StorageEncrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Specifies whether the DB instance is encrypted.
      StorageType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The storage type for the DB instance.
      TdeCredentialArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN from the key store with which the instance is associated
              for TDE encryption.
      Timezone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The time zone of the DB instance.
      VpcSecurityGroups:
        allOf:
          - $ref: '#/definitions/AwsRdsDbInstanceVpcSecurityGroups'
          - description: A list of VPC security groups that the DB instance belongs to.
    type: object
  AwsRdsDbInstanceEndpoint:
    description: Specifies the connection endpoint.
    properties:
      Address:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Specifies the DNS address of the DB instance.
      HostedZoneId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Specifies the ID that Amazon Route 53 assigns when you create a
              hosted zone.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Specifies the port that the database engine is listening on.
    type: object
  AwsRdsDbInstanceVpcSecurityGroup:
    description: A VPC security groups that the DB instance belongs to.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the VPC security group.
      VpcSecurityGroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the VPC security group.
    type: object
  AwsRdsDbInstanceVpcSecurityGroups:
    items:
      $ref: '#/definitions/AwsRdsDbInstanceVpcSecurityGroup'
    type: array
  AwsRdsDbOptionGroupMembership:
    description: An option group membership.
    properties:
      OptionGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the option group.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the option group membership.
    type: object
  AwsRdsDbOptionGroupMemberships:
    items:
      $ref: '#/definitions/AwsRdsDbOptionGroupMembership'
    type: array
  AwsRdsDbParameterGroup:
    description: Provides information about a parameter group for a DB instance.
    properties:
      DbParameterGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the parameter group.
      ParameterApplyStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of parameter updates.
    type: object
  AwsRdsDbParameterGroups:
    items:
      $ref: '#/definitions/AwsRdsDbParameterGroup'
    type: array
  AwsRdsDbPendingModifiedValues:
    description: Changes to a DB instance that are currently pending.
    properties:
      AllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The new value of the allocated storage for the DB instance.
      BackupRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The new backup retention period for the DB instance.
      CaCertificateIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new CA certificate identifier for the DB instance.
      DbInstanceClass:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new DB instance class for the DB instance.
      DbInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new DB instance identifier for the DB instance.
      DbSubnetGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the new subnet group for the DB instance.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new engine version for the DB instance.
      Iops:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The new provisioned IOPS value for the DB instance.
      LicenseModel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new license model value for the DB instance.
      MasterUserPassword:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new master user password for the DB instance.
      MultiAZ:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates that a single Availability Zone DB instance is changing
              to a multiple Availability Zone deployment.
      PendingCloudWatchLogsExports:
        allOf:
          - $ref: '#/definitions/AwsRdsPendingCloudWatchLogsExports'
          - description: A list of log types that are being enabled or disabled.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The new port for the DB instance.
      ProcessorFeatures:
        allOf:
          - $ref: '#/definitions/AwsRdsDbProcessorFeatures'
          - description: Processor features that are being updated.
      StorageType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The new storage type for the DB instance.
    type: object
  AwsRdsDbProcessorFeature:
    description: A processor feature.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the processor feature.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of the processor feature.
    type: object
  AwsRdsDbProcessorFeatures:
    items:
      $ref: '#/definitions/AwsRdsDbProcessorFeature'
    type: array
  AwsRdsDbSnapshotDetails:
    description: Provides details about an Amazon RDS DB cluster snapshot.
    properties:
      AllocatedStorage:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The amount of storage (in gigabytes) to be initially allocated for
              the database instance.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Specifies the name of the Availability Zone in which the DB
              instance was located at the time of the DB snapshot.
      DbInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A name for the DB instance.
      DbSnapshotIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name or ARN of the DB snapshot that is used to restore the DB
              instance.
      DbiResourceId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier for the source DB instance.
      Encrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the DB snapshot is encrypted.
      Engine:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the database engine to use for this DB instance.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the database engine.
      IamDatabaseAuthenticationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether mapping of IAM accounts to database accounts is enabled.
      InstanceCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Specifies the time in Coordinated Universal Time (UTC) when the DB
              instance, from which the snapshot was taken, was created.
      Iops:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The provisioned IOPS (I/O operations per second) value of the DB
              instance at the time of the snapshot.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If <code>Encrypted</code> is <code>true</code>, the KMS key
              identifier for the encrypted DB snapshot.
      LicenseModel:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: License model information for the restored DB instance.
      MasterUsername:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The master user name for the DB snapshot.
      OptionGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The option group name for the DB snapshot.
      PercentProgress:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The percentage of the estimated data that has been transferred.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The port that the database engine was listening on at the time of
              the snapshot.
      ProcessorFeatures:
        allOf:
          - $ref: '#/definitions/AwsRdsDbProcessorFeatures'
          - description: >-
              The number of CPU cores and the number of threads per core for the
              DB instance class of the DB instance.
      SnapshotCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: When the snapshot was taken in Coordinated Universal Time (UTC).
      SnapshotType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of the DB snapshot.
      SourceDbSnapshotIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The DB snapshot ARN that the DB snapshot was copied from.
      SourceRegion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services Region that the DB snapshot was created in
              or copied from.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of this DB snapshot.
      StorageType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The storage type associated with the DB snapshot.
      TdeCredentialArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN from the key store with which to associate the instance
              for TDE encryption.
      Timezone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The time zone of the DB snapshot.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The VPC ID associated with the DB snapshot.
    type: object
  AwsRdsDbStatusInfo:
    description: Information about the status of a read replica.
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If the read replica is currently in an error state, provides the
              error details.
      Normal:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the read replica instance is operating normally.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the read replica instance.
      StatusType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of status. For a read replica, the status type is read
              replication.
    type: object
  AwsRdsDbStatusInfos:
    items:
      $ref: '#/definitions/AwsRdsDbStatusInfo'
    type: array
  AwsRdsDbSubnetGroup:
    description: Information about the subnet group for the database instance.
    properties:
      DbSubnetGroupArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the subnet group.
      DbSubnetGroupDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description of the subnet group.
      DbSubnetGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the subnet group.
      SubnetGroupStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the subnet group.
      Subnets:
        allOf:
          - $ref: '#/definitions/AwsRdsDbSubnetGroupSubnets'
          - description: A list of subnets in the subnet group.
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The VPC ID of the subnet group.
    type: object
  AwsRdsDbSubnetGroupSubnet:
    description: Information about a subnet in a subnet group.
    properties:
      SubnetAvailabilityZone:
        allOf:
          - $ref: '#/definitions/AwsRdsDbSubnetGroupSubnetAvailabilityZone'
          - description: >-
              Information about the Availability Zone for a subnet in the subnet
              group.
      SubnetIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of a subnet in the subnet group.
      SubnetStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of a subnet in the subnet group.
    type: object
  AwsRdsDbSubnetGroupSubnetAvailabilityZone:
    description: An Availability Zone for a subnet in a subnet group.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the Availability Zone for a subnet in the subnet
              group.
    type: object
  AwsRdsDbSubnetGroupSubnets:
    items:
      $ref: '#/definitions/AwsRdsDbSubnetGroupSubnet'
    type: array
  AwsRdsEventSubscriptionDetails:
    description: >-
      Details about an Amazon RDS event notification subscription. The
      subscription allows Amazon RDS to post events to an SNS topic.
    properties:
      CustSubscriptionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the account that is associated with the event
              notification subscription.
      CustomerAwsId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the event notification subscription.
      Enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the event notification subscription is enabled.
      EventCategoriesList:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              The list of event categories for the event notification
              subscription.
      EventSubscriptionArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the event notification subscription.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the SNS topic to post the event notifications to.
      SourceIdsList:
        allOf:
          - $ref: '#/definitions/NonEmptyStringList'
          - description: >-
              A list of source identifiers for the event notification
              subscription.
      SourceType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source type for the event notification subscription.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the event notification subscription.</p> <p>Valid
              values: <code>creating</code> | <code>modifying</code> |
              <code>deleting</code> | <code>active</code> |
              <code>no-permission</code> | <code>topic-not-exist</code> </p>
      SubscriptionCreationTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The datetime when the event notification subscription was
              created.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  AwsRdsPendingCloudWatchLogsExports:
    description: Identifies the log types to enable and disable.
    properties:
      LogTypesToDisable:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of log types that are being disabled.
      LogTypesToEnable:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of log types that are being enabled.
    type: object
  AwsRedshiftClusterClusterNode:
    description: A node in an Amazon Redshift cluster.
    properties:
      NodeRole:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The role of the node. A node might be a leader node or a compute
              node.
      PrivateIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The private IP address of the node.
      PublicIpAddress:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The public IP address of the node.
    type: object
  AwsRedshiftClusterClusterNodes:
    items:
      $ref: '#/definitions/AwsRedshiftClusterClusterNode'
    type: array
  AwsRedshiftClusterClusterParameterGroup:
    description: >-
      A cluster parameter group that is associated with an Amazon Redshift
      cluster.
    properties:
      ClusterParameterStatusList:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterClusterParameterStatusList'
          - description: The list of parameter statuses.
      ParameterApplyStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of updates to the parameters.
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the parameter group.
    type: object
  AwsRedshiftClusterClusterParameterGroups:
    items:
      $ref: '#/definitions/AwsRedshiftClusterClusterParameterGroup'
    type: array
  AwsRedshiftClusterClusterParameterStatus:
    description: >-
      The status of a parameter in a cluster parameter group for an Amazon
      Redshift cluster.
    properties:
      ParameterApplyErrorDescription:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The error that prevented the parameter from being applied to the
              database.
      ParameterApplyStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the parameter. Indicates whether the parameter is
              in sync with the database, waiting for a cluster reboot, or
              encountered an error when it was applied.</p> <p>Valid values:
              <code>in-sync</code> | <code>pending-reboot</code> |
              <code>applying</code> | <code>invalid-parameter</code> |
              <code>apply-deferred</code> | <code>apply-error</code> |
              <code>unknown-error</code> </p>
      ParameterName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the parameter.
    type: object
  AwsRedshiftClusterClusterParameterStatusList:
    items:
      $ref: '#/definitions/AwsRedshiftClusterClusterParameterStatus'
    type: array
  AwsRedshiftClusterClusterSecurityGroup:
    description: A security group that is associated with the cluster.
    properties:
      ClusterSecurityGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the cluster security group.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the cluster security group.
    type: object
  AwsRedshiftClusterClusterSecurityGroups:
    items:
      $ref: '#/definitions/AwsRedshiftClusterClusterSecurityGroup'
    type: array
  AwsRedshiftClusterClusterSnapshotCopyStatus:
    description: Information about a cross-Region snapshot copy.
    properties:
      DestinationRegion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The destination Region that snapshots are automatically copied to
              when cross-Region snapshot copy is enabled.
      ManualSnapshotRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The number of days that manual snapshots are retained in the
              destination region after they are copied from a source region.</p>
              <p>If the value is -1, then the manual snapshot is retained
              indefinitely.</p> <p>Valid values: Either -1 or an integer between
              1 and 3,653</p>
      RetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days to retain automated snapshots in the
              destination Region after they are copied from a source Region.
      SnapshotCopyGrantName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the snapshot copy grant.
    type: object
  AwsRedshiftClusterDeferredMaintenanceWindow:
    description: >-
      A time windows during which maintenance was deferred for an Amazon
      Redshift cluster.
    properties:
      DeferMaintenanceEndTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The end of the time window for which maintenance was
              deferred.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      DeferMaintenanceIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the maintenance window.
      DeferMaintenanceStartTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The start of the time window for which maintenance was
              deferred.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  AwsRedshiftClusterDeferredMaintenanceWindows:
    items:
      $ref: '#/definitions/AwsRedshiftClusterDeferredMaintenanceWindow'
    type: array
  AwsRedshiftClusterDetails:
    description: Details about an Amazon Redshift cluster.
    properties:
      AllowVersionUpgrade:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether major version upgrades are applied automatically
              to the cluster during the maintenance window.
      AutomatedSnapshotRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of days that automatic cluster snapshots are retained.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the Availability Zone in which the cluster is located.
      ClusterAvailabilityStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The availability status of the cluster for queries. Possible
              values are the following:</p> <ul> <li> <p> <code>Available</code>
              - The cluster is available for queries.</p> </li> <li> <p>
              <code>Unavailable</code> - The cluster is not available for
              queries.</p> </li> <li> <p> <code>Maintenance</code> - The cluster
              is intermittently available for queries due to maintenance
              activities.</p> </li> <li> <p> <code>Modifying</code> -The cluster
              is intermittently available for queries due to changes that modify
              the cluster.</p> </li> <li> <p> <code>Failed</code> - The cluster
              failed and is not available for queries.</p> </li> </ul>
      ClusterCreateTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the cluster was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The unique identifier of the cluster.
      ClusterNodes:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterClusterNodes'
          - description: The nodes in the cluster.
      ClusterParameterGroups:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterClusterParameterGroups'
          - description: >-
              The list of cluster parameter groups that are associated with this
              cluster.
      ClusterPublicKey:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The public key for the cluster.
      ClusterRevisionNumber:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The specific revision number of the database in the cluster.
      ClusterSecurityGroups:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterClusterSecurityGroups'
          - description: >-
              A list of cluster security groups that are associated with the
              cluster.
      ClusterSnapshotCopyStatus:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterClusterSnapshotCopyStatus'
          - description: >-
              Information about the destination Region and retention period for
              the cross-Region snapshot copy.
      ClusterStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The current status of the cluster.</p> <p>Valid values:
              <code>available</code> | <code>available, prep-for-resize</code> |
              <code>available, resize-cleanup</code> |<code>
              cancelling-resize</code> | <code>creating</code> |
              <code>deleting</code> | <code>final-snapshot</code> |
              <code>hardware-failure</code> | <code>incompatible-hsm</code>
              |<code> incompatible-network</code> |
              <code>incompatible-parameters</code> |
              <code>incompatible-restore</code> | <code>modifying</code> |
              <code>paused</code> | <code>rebooting</code> |
              <code>renaming</code> | <code>resizing</code> |
              <code>rotating-keys</code> | <code>storage-full</code> |
              <code>updating-hsm</code> </p>
      ClusterSubnetGroupName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the subnet group that is associated with the cluster.
              This parameter is valid only when the cluster is in a VPC.
      ClusterVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The version ID of the Amazon Redshift engine that runs on the
              cluster.
      DBName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the initial database that was created when the
              cluster was created.</p> <p>The same name is returned for the life
              of the cluster.</p> <p>If an initial database is not specified, a
              database named <code>devdev</code> is created by default.</p>
      DeferredMaintenanceWindows:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterDeferredMaintenanceWindows'
          - description: List of time windows during which maintenance was deferred.
      ElasticIpStatus:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterElasticIpStatus'
          - description: Information about the status of the Elastic IP (EIP) address.
      ElasticResizeNumberOfNodeOptions:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The number of nodes that you can use the elastic resize method to
              resize the cluster to.
      Encrypted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the data in the cluster is encrypted at rest.
      Endpoint:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterEndpoint'
          - description: The connection endpoint.
      EnhancedVpcRouting:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether to create the cluster with enhanced VPC routing
              enabled.
      ExpectedNextSnapshotScheduleTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the next snapshot is expected to be taken. The
              cluster must have a valid snapshot schedule and have backups
              enabled.</p> <p>Uses the <code>date-time</code> format specified
              in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC
              3339 section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      ExpectedNextSnapshotScheduleTimeStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the next expected snapshot.</p> <p>Valid values:
              <code>OnTrack</code> | <code>Pending</code> </p>
      HsmStatus:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterHsmStatus'
          - description: >-
              Information about whether the Amazon Redshift cluster finished
              applying any changes to hardware security module (HSM) settings
              that were specified in a modify cluster command.
      IamRoles:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterIamRoles'
          - description: >-
              A list of IAM roles that the cluster can use to access other
              Amazon Web Services services.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the KMS encryption key that is used to encrypt
              data in the cluster.
      MaintenanceTrackName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the maintenance track for the cluster.
      ManualSnapshotRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The default number of days to retain a manual snapshot.</p>
              <p>If the value is -1, the snapshot is retained indefinitely.</p>
              <p>This setting doesn't change the retention period of existing
              snapshots.</p> <p>Valid values: Either -1 or an integer between 1
              and 3,653</p>
      MasterUsername:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The master user name for the cluster. This name is used to connect
              to the database that is specified in as the value of
              <code>DBName</code>.
      NextMaintenanceWindowStartTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates the start of the next maintenance window.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      NodeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The node type for the nodes in the cluster.
      NumberOfNodes:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of compute nodes in the cluster.
      PendingActions:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: A list of cluster operations that are waiting to start.
      PendingModifiedValues:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterPendingModifiedValues'
          - description: A list of changes to the cluster that are currently pending.
      PreferredMaintenanceWindow:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The weekly time range, in Universal Coordinated Time (UTC),
              during which system maintenance can occur.</p> <p>Format: <code>
              <i>&lt;day&gt;</i>:HH:MM-<i>&lt;day&gt;</i>:HH:MM</code> </p>
              <p>For the day values, use <code>mon</code> | <code>tue</code> |
              <code>wed</code> | <code>thu</code> | <code>fri</code> |
              <code>sat</code> | <code>sun</code> </p> <p>For example,
              <code>sun:09:32-sun:10:02</code> </p>
      PubliclyAccessible:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the cluster can be accessed from a public network.
      ResizeInfo:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterResizeInfo'
          - description: Information about the resize operation for the cluster.
      RestoreStatus:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterRestoreStatus'
          - description: >-
              Information about the status of a cluster restore action. Only
              applies to a cluster that was created by restoring a snapshot.
      SnapshotScheduleIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A unique identifier for the cluster snapshot schedule.
      SnapshotScheduleState:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The current state of the cluster snapshot schedule.</p>
              <p>Valid values: <code>MODIFYING</code> | <code>ACTIVE</code> |
              <code>FAILED</code> </p>
      VpcId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the VPC that the cluster is in, if the cluster
              is in a VPC.
      VpcSecurityGroups:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterVpcSecurityGroups'
          - description: >-
              The list of VPC security groups that the cluster belongs to, if
              the cluster is in a VPC.
    type: object
  AwsRedshiftClusterElasticIpStatus:
    description: The status of the elastic IP (EIP) address for an Amazon Redshift cluster.
    properties:
      ElasticIp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The elastic IP address for the cluster.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the elastic IP address.
    type: object
  AwsRedshiftClusterEndpoint:
    description: The connection endpoint for an Amazon Redshift cluster.
    properties:
      Address:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The DNS address of the cluster.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The port that the database engine listens on.
    type: object
  AwsRedshiftClusterHsmStatus:
    description: >-
      Information about whether an Amazon Redshift cluster finished applying any
      hardware changes to security module (HSM) settings that were specified in
      a modify cluster command.
    properties:
      HsmClientCertificateIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the HSM client certificate that the Amazon Redshift
              cluster uses to retrieve the data encryption keys that are stored
              in an HSM.
      HsmConfigurationIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the HSM configuration that contains the information
              that the Amazon Redshift cluster can use to retrieve and store
              keys in an HSM.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates whether the Amazon Redshift cluster has finished
              applying any HSM settings changes specified in a modify cluster
              command.</p> <p>Type: String</p> <p>Valid values:
              <code>active</code> | <code>applying</code> </p>
    type: object
  AwsRedshiftClusterIamRole:
    description: >-
      An IAM role that the cluster can use to access other Amazon Web Services
      services.
    properties:
      ApplyStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the IAM role's association with the cluster.</p>
              <p>Valid values: <code>in-sync</code> | <code>adding</code> |
              <code>removing</code> </p>
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the IAM role.
    type: object
  AwsRedshiftClusterIamRoles:
    items:
      $ref: '#/definitions/AwsRedshiftClusterIamRole'
    type: array
  AwsRedshiftClusterPendingModifiedValues:
    description: Changes to the Amazon Redshift cluster that are currently pending.
    properties:
      AutomatedSnapshotRetentionPeriod:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The pending or in-progress change to the automated snapshot
              retention period.
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The pending or in-progress change to the identifier for the
              cluster.
      ClusterType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The pending or in-progress change to the cluster type.
      ClusterVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The pending or in-progress change to the service version.
      EncryptionType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The encryption type for a cluster.
      EnhancedVpcRouting:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether to create the cluster with enhanced VPC routing
              enabled.
      MaintenanceTrackName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the maintenance track that the cluster changes to
              during the next maintenance window.
      MasterUserPassword:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The pending or in-progress change to the master user password for
              the cluster.
      NodeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The pending or in-progress change to the cluster's node type.
      NumberOfNodes:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The pending or in-progress change to the number of nodes in the
              cluster.
      PubliclyAccessible:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              The pending or in-progress change to whether the cluster can be
              connected to from the public network.
    type: object
  AwsRedshiftClusterResizeInfo:
    description: Information about the resize operation for the cluster.
    properties:
      AllowCancelResize:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the resize operation can be canceled.
      ResizeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of resize operation.</p> <p>Valid values:
              <code>ClassicResize</code> </p>
    type: object
  AwsRedshiftClusterRestoreStatus:
    description: >-
      Information about the status of a cluster restore action. It only applies
      if the cluster was created by restoring a snapshot.
    properties:
      CurrentRestoreRateInMegaBytesPerSecond:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              <p>The number of megabytes per second being transferred from the
              backup storage. Returns the average rate for a completed
              backup.</p> <p>This field is only updated when you restore to DC2
              and DS2 node types.</p>
      ElapsedTimeInSeconds:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              <p>The amount of time an in-progress restore has been running, or
              the amount of time it took a completed restore to finish.</p>
              <p>This field is only updated when you restore to DC2 and DS2 node
              types.</p>
      EstimatedTimeToCompletionInSeconds:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              <p>The estimate of the time remaining before the restore is
              complete. Returns 0 for a completed restore.</p> <p>This field is
              only updated when you restore to DC2 and DS2 node types.</p>
      ProgressInMegaBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              <p>The number of megabytes that were transferred from snapshot
              storage.</p> <p>This field is only updated when you restore to DC2
              and DS2 node types.</p>
      SnapshotSizeInMegaBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              <p>The size of the set of snapshot data that was used to restore
              the cluster.</p> <p>This field is only updated when you restore to
              DC2 and DS2 node types.</p>
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the restore action.</p> <p>Valid values:
              <code>starting</code> | <code>restoring</code> |
              <code>completed</code> | <code>failed</code> </p>
    type: object
  AwsRedshiftClusterVpcSecurityGroup:
    description: >-
      A VPC security group that the cluster belongs to, if the cluster is in a
      VPC.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The status of the VPC security group.
      VpcSecurityGroupId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the VPC security group.
    type: object
  AwsRedshiftClusterVpcSecurityGroups:
    items:
      $ref: '#/definitions/AwsRedshiftClusterVpcSecurityGroup'
    type: array
  AwsS3AccountPublicAccessBlockDetails:
    description: >-
      provides information about the Amazon S3 Public Access Block configuration
      for accounts.
    properties:
      BlockPublicAcls:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether to reject calls to update an S3 bucket if the
              calls include a public access control list (ACL).
      BlockPublicPolicy:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether to reject calls to update the access policy for
              an S3 bucket or access point if the policy allows public access.
      IgnorePublicAcls:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether Amazon S3 ignores public ACLs that are
              associated with an S3 bucket.
      RestrictPublicBuckets:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether to restrict access to an access point or S3
              bucket that has a public policy to only Amazon Web Services
              service principals and authorized users within the S3 bucket
              owner's account.
    type: object
  AwsS3BucketBucketLifecycleConfigurationDetails:
    description: The lifecycle configuration for the objects in the S3 bucket.
    properties:
      Rules:
        allOf:
          - $ref: '#/definitions/AwsS3BucketBucketLifecycleConfigurationRulesList'
          - description: The lifecycle rules.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails:
    description: >-
      Information about what Amazon S3 does when a multipart upload is
      incomplete.
    properties:
      DaysAfterInitiation:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days after which Amazon S3 cancels an incomplete
              multipart upload.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesDetails:
    description: Configuration for a lifecycle rule.
    properties:
      AbortIncompleteMultipartUpload:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails
          - description: >-
              How Amazon S3 responds when a multipart upload is incomplete.
              Specifically, provides a number of days before Amazon S3 cancels
              the entire upload.
      ExpirationDate:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The date when objects are moved or deleted.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      ExpirationInDays:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The length in days of the lifetime for objects that are subject to
              the rule.
      ExpiredObjectDeleteMarker:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether Amazon S3 removes a delete marker that has no
              noncurrent versions. If set to <code>true</code>, the delete
              marker is expired. If set to <code>false</code>, the policy takes
              no action.</p> <p>If you provide
              <code>ExpiredObjectDeleteMarker</code>, you cannot provide
              <code>ExpirationInDays</code> or <code>ExpirationDate</code>.</p>
      Filter:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails
          - description: Identifies the objects that a rule applies to.
      ID:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The unique identifier of the rule.
      NoncurrentVersionExpirationInDays:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days that an object is noncurrent before Amazon S3
              can perform the associated action.
      NoncurrentVersionTransitions:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList
          - description: >-
              Transition rules that describe when noncurrent objects transition
              to a specified storage class.
      Prefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A prefix that identifies one or more objects that the rule applies
              to.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The current status of the rule. Indicates whether the rule is
              currently being applied.
      Transitions:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList
          - description: >-
              Transition rules that indicate when objects transition to a
              specified storage class.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails:
    description: Identifies the objects that a rule applies to.
    properties:
      Predicate:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails
          - description: The configuration for the filter.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails:
    description: The configuration for the filter.
    properties:
      Operands:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList
          - description: The values to use for the filter.
      Prefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A prefix filter.
      Tag:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails
          - description: A tag filter.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Whether to use <code>AND</code> or <code>OR</code> to join the
              operands.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails:
    description: A value to use for the filter.
    properties:
      Prefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Prefix text for matching objects.
      Tag:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails
          - description: A tag that is assigned to matching objects.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of filter value.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList:
    items:
      $ref: >-
        #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails
    type: array
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails:
    description: A tag that is assigned to matching objects.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The tag key.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The tag value.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails:
    description: A tag filter.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The tag key.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The tag value
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesList:
    items:
      $ref: '#/definitions/AwsS3BucketBucketLifecycleConfigurationRulesDetails'
    type: array
  AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails:
    description: >-
      A transition rule that describes when noncurrent objects transition to a
      specified storage class.
    properties:
      Days:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days that an object is noncurrent before Amazon S3
              can perform the associated action.
      StorageClass:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The class of storage to change the object to after the object is
              noncurrent for the specified number of days.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList:
    items:
      $ref: >-
        #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails
    type: array
  AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails:
    description: A rule for when objects transition to specific storage classes.
    properties:
      Date:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>A date on which to transition objects to the specified storage
              class. If you provide <code>Date</code>, you cannot provide
              <code>Days</code>.</p> <p>Uses the <code>date-time</code> format
              specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Days:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days after which to transition the object to the
              specified storage class. If you provide <code>Days</code>, you
              cannot provide <code>Date</code>.
      StorageClass:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The storage class to transition the object to.
    type: object
  AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList:
    items:
      $ref: >-
        #/definitions/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails
    type: array
  AwsS3BucketDetails:
    description: The details of an Amazon S3 bucket.
    properties:
      AccessControlList:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The access control list for the S3 bucket.
      BucketLifecycleConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3BucketBucketLifecycleConfigurationDetails'
          - description: The lifecycle configuration for objects in the S3 bucket.
      BucketLoggingConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3BucketLoggingConfiguration'
          - description: The logging configuration for the S3 bucket.
      BucketNotificationConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfiguration'
          - description: The notification configuration for the S3 bucket.
      BucketWebsiteConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3BucketWebsiteConfiguration'
          - description: The website configuration parameters for the S3 bucket.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the S3 bucket was created.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      OwnerId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The canonical user ID of the owner of the S3 bucket.
      OwnerName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The display name of the owner of the S3 bucket.
      PublicAccessBlockConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3AccountPublicAccessBlockDetails'
          - description: >-
              Provides information about the Amazon S3 Public Access Block
              configuration for the S3 bucket.
      ServerSideEncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/AwsS3BucketServerSideEncryptionConfiguration'
          - description: The encryption rules that are applied to the S3 bucket.
    type: object
  AwsS3BucketLoggingConfiguration:
    description: Information about logging for the S3 bucket
    properties:
      DestinationBucketName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the S3 bucket where log files for the S3 bucket are
              stored.
      LogFilePrefix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The prefix added to log files for the S3 bucket.
    type: object
  AwsS3BucketNotificationConfiguration:
    description: The notification configuration for the S3 bucket.
    properties:
      Configurations:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfigurationDetails'
          - description: Configurations for S3 bucket notifications.
    type: object
  AwsS3BucketNotificationConfigurationDetail:
    description: Details for an S3 bucket notification configuration.
    properties:
      Destination:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the Lambda function, Amazon SQS queue, or Amazon SNS
              topic that generates the notification.
      Events:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfigurationEvents'
          - description: The list of events that trigger a notification.
      Filter:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfigurationFilter'
          - description: >-
              The filters that determine which S3 buckets generate
              notifications.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Indicates the type of notification. Notifications can be generated
              using Lambda functions, Amazon SQS queues or Amazon SNS topics.
    type: object
  AwsS3BucketNotificationConfigurationDetails:
    items:
      $ref: '#/definitions/AwsS3BucketNotificationConfigurationDetail'
    type: array
  AwsS3BucketNotificationConfigurationEvents:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  AwsS3BucketNotificationConfigurationFilter:
    description: >-
      Filtering information for the notifications. The filtering is based on
      Amazon S3 key names.
    properties:
      S3KeyFilter:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfigurationS3KeyFilter'
          - description: Details for an Amazon S3 filter.
    type: object
  AwsS3BucketNotificationConfigurationS3KeyFilter:
    description: Details for an Amazon S3 filter.
    properties:
      FilterRules:
        allOf:
          - $ref: '#/definitions/AwsS3BucketNotificationConfigurationS3KeyFilterRules'
          - description: The filter rules for the filter.
    type: object
  AwsS3BucketNotificationConfigurationS3KeyFilterRule:
    description: Details for a filter rule.
    properties:
      Name:
        allOf:
          - $ref: >-
              #/definitions/AwsS3BucketNotificationConfigurationS3KeyFilterRuleName
          - description: >-
              Indicates whether the filter is based on the prefix or suffix of
              the Amazon S3 key.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The filter value.
    type: object
  AwsS3BucketNotificationConfigurationS3KeyFilterRuleName:
    enum:
      - Prefix
      - Suffix
    type: string
  AwsS3BucketNotificationConfigurationS3KeyFilterRules:
    items:
      $ref: '#/definitions/AwsS3BucketNotificationConfigurationS3KeyFilterRule'
    type: array
  AwsS3BucketServerSideEncryptionByDefault:
    description: >-
      Specifies the default server-side encryption to apply to new objects in
      the bucket.
    properties:
      KMSMasterKeyID:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: KMS key ID to use for the default encryption.
      SSEAlgorithm:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Server-side encryption algorithm to use for the default
              encryption.
    type: object
  AwsS3BucketServerSideEncryptionConfiguration:
    description: The encryption configuration for the S3 bucket.
    properties:
      Rules:
        allOf:
          - $ref: '#/definitions/AwsS3BucketServerSideEncryptionRules'
          - description: The encryption rules that are applied to the S3 bucket.
    type: object
  AwsS3BucketServerSideEncryptionRule:
    description: An encryption rule to apply to the S3 bucket.
    properties:
      ApplyServerSideEncryptionByDefault:
        allOf:
          - $ref: '#/definitions/AwsS3BucketServerSideEncryptionByDefault'
          - description: >-
              Specifies the default server-side encryption to apply to new
              objects in the bucket. If a <code>PUT</code> object request
              doesn't specify any server-side encryption, this default
              encryption is applied.
    type: object
  AwsS3BucketServerSideEncryptionRules:
    items:
      $ref: '#/definitions/AwsS3BucketServerSideEncryptionRule'
    type: array
  AwsS3BucketWebsiteConfiguration:
    description: Website parameters for the S3 bucket.
    properties:
      ErrorDocument:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the error document for the website.
      IndexDocumentSuffix:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the index document for the website.
      RedirectAllRequestsTo:
        allOf:
          - $ref: '#/definitions/AwsS3BucketWebsiteConfigurationRedirectTo'
          - description: The redirect behavior for requests to the website.
      RoutingRules:
        allOf:
          - $ref: '#/definitions/AwsS3BucketWebsiteConfigurationRoutingRules'
          - description: The rules for applying redirects for requests to the website.
    type: object
  AwsS3BucketWebsiteConfigurationRedirectTo:
    description: The redirect behavior for requests to the website.
    properties:
      Hostname:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the host to redirect requests to.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The protocol to use when redirecting requests. By default, uses
              the same protocol as the original request.
    type: object
  AwsS3BucketWebsiteConfigurationRoutingRule:
    description: A rule for redirecting requests to the website.
    properties:
      Condition:
        allOf:
          - $ref: '#/definitions/AwsS3BucketWebsiteConfigurationRoutingRuleCondition'
          - description: >-
              Provides the condition that must be met in order to apply the
              routing rule.
      Redirect:
        allOf:
          - $ref: '#/definitions/AwsS3BucketWebsiteConfigurationRoutingRuleRedirect'
          - description: >-
              Provides the rules to redirect the request if the condition in
              <code>Condition</code> is met.
    type: object
  AwsS3BucketWebsiteConfigurationRoutingRuleCondition:
    description: The condition that must be met in order to apply the routing rule.
    properties:
      HttpErrorCodeReturnedEquals:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Indicates to redirect the request if the HTTP error code matches
              this value.
      KeyPrefixEquals:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Indicates to redirect the request if the key prefix matches this
              value.
    type: object
  AwsS3BucketWebsiteConfigurationRoutingRuleRedirect:
    description: >-
      The rules to redirect the request if the condition in
      <code>Condition</code> is met.
    properties:
      Hostname:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The host name to use in the redirect request.
      HttpRedirectCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The HTTP redirect code to use in the response.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The protocol to use to redirect the request. By default, uses the
              protocol from the original request.
      ReplaceKeyPrefixWith:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The object key prefix to use in the redirect request.</p>
              <p>Cannot be provided if <code>ReplaceKeyWith</code> is
              present.</p>
      ReplaceKeyWith:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The specific object key to use in the redirect request.</p>
              <p>Cannot be provided if <code>ReplaceKeyPrefixWith</code> is
              present.</p>
    type: object
  AwsS3BucketWebsiteConfigurationRoutingRules:
    items:
      $ref: '#/definitions/AwsS3BucketWebsiteConfigurationRoutingRule'
    type: array
  AwsS3ObjectDetails:
    description: Details about an Amazon S3 object.
    properties:
      ContentType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A standard MIME type describing the format of the object data.
      ETag:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The opaque identifier assigned by a web server to a specific
              version of a resource found at a URL.
      LastModified:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the object was last modified.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      SSEKMSKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the KMS symmetric customer managed key that was
              used for the object.
      ServerSideEncryption:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              If the object is stored using server-side encryption, the value of
              the server-side encryption algorithm used when storing this object
              in Amazon S3.
      VersionId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the object.
    type: object
  AwsSecretsManagerSecretDetails:
    description: Details about an Secrets Manager secret.
    properties:
      Deleted:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether the secret is deleted.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The user-provided description of the secret.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN, Key ID, or alias of the KMS key used to encrypt the
              <code>SecretString</code> or <code>SecretBinary</code> values for
              versions of this secret.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the secret.
      RotationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether rotation is enabled.
      RotationLambdaArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the Lambda function that rotates the secret.
      RotationOccurredWithinFrequency:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the rotation occurred within the specified rotation
              frequency.
      RotationRules:
        allOf:
          - $ref: '#/definitions/AwsSecretsManagerSecretRotationRules'
          - description: Defines the rotation schedule for the secret.
    type: object
  AwsSecretsManagerSecretRotationRules:
    description: Defines the rotation schedule for the secret.
    properties:
      AutomaticallyAfterDays:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of days after the previous rotation to rotate the
              secret.
    type: object
  AwsSecurityFinding:
    description: >-
      <p>Provides consistent format for the contents of the Security
      Hub-aggregated findings. <code>AwsSecurityFinding</code> format enables
      you to share findings between Amazon Web Services security services and
      third-party solutions, and security standards checks.</p> <note> <p>A
      finding is a potential security issue generated either by Amazon Web
      Services services or by the integrated third-party solutions and standards
      checks.</p> </note>
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: >-
              Provides details about an action that affects or that was taken on
              a resource.
      AwsAccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The Amazon Web Services account ID that a finding is generated in.
      CompanyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the company for the product that generated the
              finding.</p> <p>Security Hub populates this attribute
              automatically for each finding. You cannot be updated using
              <code>BatchImportFindings</code> or
              <code>BatchUpdateFindings</code>. The exception to this is when
              you use a custom integration.</p> <p>When you use the Security Hub
              console to filter findings by company name, you use this
              attribute.</p> <p>When you use the Security Hub API to filter
              findings by company name, you use the
              <code>aws/securityhub/CompanyName</code> attribute under
              <code>ProductFields</code>.</p> <p>Security Hub does not
              synchronize those two attributes.</p>
      Compliance:
        allOf:
          - $ref: '#/definitions/Compliance'
          - description: >-
              This data type is exclusive to findings that are generated as the
              result of a check run against a specific rule in a supported
              security standard, such as CIS Amazon Web Services Foundations.
              Contains security standard-related finding details.
      Confidence:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>A finding's confidence. Confidence is defined as the likelihood
              that a finding accurately identifies the behavior or issue that it
              was intended to identify.</p> <p>Confidence is scored on a 0-100
              basis using a ratio scale, where 0 means zero percent confidence
              and 100 means 100 percent confidence.</p>
      CreatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the security-findings provider created the
              potential security issue that a finding captured.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Criticality:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The level of importance assigned to the resources associated
              with the finding.</p> <p>A score of 0 means that the underlying
              resources have no criticality, and a score of 100 is reserved for
              the most critical resources.</p>
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>A finding's description.</p> <note> <p>In this release,
              <code>Description</code> is a required property.</p> </note>
      FindingProviderFields:
        allOf:
          - $ref: '#/definitions/FindingProviderFields'
          - description: >-
              In a <code>BatchImportFindings</code> request, finding providers
              use <code>FindingProviderFields</code> to provide and update their
              own values for confidence, criticality, related findings,
              severity, and types.
      FirstObservedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the security-findings provider first observed
              the potential security issue that a finding captured.</p> <p>Uses
              the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      GeneratorId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier for the solution-specific component (a discrete
              unit of logic) that generated a finding. In various
              security-findings providers' solutions, this generator can be
              called a rule, a check, a detector, a plugin, etc. 
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The security findings provider-specific identifier for a finding.
      LastObservedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the security-findings provider most recently
              observed the potential security issue that a finding captured.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Malware:
        allOf:
          - $ref: '#/definitions/MalwareList'
          - description: A list of malware related to a finding.
      Network:
        allOf:
          - $ref: '#/definitions/Network'
          - description: The details of network-related information about a finding.
      NetworkPath:
        allOf:
          - $ref: '#/definitions/NetworkPathList'
          - description: >-
              Provides information about a network path that is relevant to a
              finding. Each entry under <code>NetworkPath</code> represents a
              component of that path.
      Note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: A user-defined note added to a finding.
      PatchSummary:
        allOf:
          - $ref: '#/definitions/PatchSummary'
          - description: >-
              Provides an overview of the patch compliance status for an
              instance against a selected compliance standard.
      Process:
        allOf:
          - $ref: '#/definitions/ProcessDetails'
          - description: The details of process-related information about a finding.
      ProductArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN generated by Security Hub that uniquely identifies a
              product that generates findings. This can be the ARN for a
              third-party product that is integrated with Security Hub, or the
              ARN for a custom integration.
      ProductFields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>A data type where security-findings providers can include
              additional solution-specific details that aren't part of the
              defined <code>AwsSecurityFinding</code> format.</p> <p>Can contain
              up to 50 key-value pairs. For each key-value pair, the key can
              contain up to 128 characters, and the value can contain up to 2048
              characters.</p>
      ProductName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The name of the product that generated the finding.</p>
              <p>Security Hub populates this attribute automatically for each
              finding. You cannot update it using
              <code>BatchImportFindings</code> or
              <code>BatchUpdateFindings</code>. The exception to this is when
              you use a custom integration.</p> <p>When you use the Security Hub
              console to filter findings by product name, you use this
              attribute.</p> <p>When you use the Security Hub API to filter
              findings by product name, you use the
              <code>aws/securityhub/ProductName</code> attribute under
              <code>ProductFields</code>.</p> <p>Security Hub does not
              synchronize those two attributes.</p>
      RecordState:
        allOf:
          - $ref: '#/definitions/RecordState'
          - description: The record state of a finding.
      Region:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The Region from which the finding was generated.</p>
              <p>Security Hub populates this attribute automatically for each
              finding. You cannot update it using
              <code>BatchImportFindings</code> or
              <code>BatchUpdateFindings</code>.</p>
      RelatedFindings:
        allOf:
          - $ref: '#/definitions/RelatedFindingList'
          - description: A list of related findings.
      Remediation:
        allOf:
          - $ref: '#/definitions/Remediation'
          - description: A data type that describes the remediation options for a finding.
      Resources:
        allOf:
          - $ref: '#/definitions/ResourceList'
          - description: >-
              A set of resource data types that describe the resources that the
              finding refers to.
      SchemaVersion:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The schema version that a finding is formatted for.
      Severity:
        allOf:
          - $ref: '#/definitions/Severity'
          - description: A finding's severity.
      SourceUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A URL that links to a page about the current finding in the
              security-findings provider's solution.
      ThreatIntelIndicators:
        allOf:
          - $ref: '#/definitions/ThreatIntelIndicatorList'
          - description: Threat intelligence details related to a finding.
      Title:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>A finding's title.</p> <note> <p>In this release,
              <code>Title</code> is a required property.</p> </note>
      Types:
        allOf:
          - $ref: '#/definitions/TypeList'
          - description: >-
              <p>One or more finding types in the format of
              <code>namespace/category/classifier</code> that classify a
              finding.</p> <p>Valid namespace values are: Software and
              Configuration Checks | TTPs | Effects | Unusual Behaviors |
              Sensitive Data Identifications</p>
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the security-findings provider last updated the
              finding record.</p> <p>Uses the <code>date-time</code> format
              specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      UserDefinedFields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              A list of name/value string pairs associated with the finding.
              These are custom, user-defined fields added to a finding. 
      VerificationState:
        allOf:
          - $ref: '#/definitions/VerificationState'
          - description: 'Indicates the veracity of a finding. '
      Vulnerabilities:
        allOf:
          - $ref: '#/definitions/VulnerabilityList'
          - description: Provides a list of vulnerabilities associated with the findings.
      Workflow:
        allOf:
          - $ref: '#/definitions/Workflow'
          - description: >-
              Provides information about the status of the investigation into a
              finding.
      WorkflowState:
        allOf:
          - $ref: '#/definitions/WorkflowState'
          - description: 'The workflow state of a finding. '
    required:
      - SchemaVersion
      - Id
      - ProductArn
      - GeneratorId
      - AwsAccountId
      - CreatedAt
      - UpdatedAt
      - Title
      - Description
      - Resources
    type: object
  AwsSecurityFindingFilters:
    description: >-
      <p>A collection of attributes that are applied to all active Security
      Hub-aggregated findings and that result in a subset of findings that are
      included in this insight.</p> <p>You can filter by up to 10 finding
      attributes. For each attribute, you can provide up to 20 filter
      values.</p>
    properties:
      AwsAccountId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The Amazon Web Services account ID that a finding is generated in.
      CompanyName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              <p>The name of the findings provider (company) that owns the
              solution (product) that generates findings.</p> <p>Note that this
              is a filter against the <code>aws/securityhub/CompanyName</code>
              field in <code>ProductFields</code>. It is not a filter for the
              top-level <code>CompanyName</code> field.</p>
      ComplianceStatus:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              Exclusive to findings that are generated as the result of a check
              run against a specific rule in a supported standard, such as CIS
              Amazon Web Services Foundations. Contains security
              standard-related finding details.
      Confidence:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              <p>A finding's confidence. Confidence is defined as the likelihood
              that a finding accurately identifies the behavior or issue that it
              was intended to identify.</p> <p>Confidence is scored on a 0-100
              basis using a ratio scale, where 0 means zero percent confidence
              and 100 means 100 percent confidence.</p>
      CreatedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the
              security-findings provider captured the potential security issue
              that a finding captured.
      Criticality:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              <p>The level of importance assigned to the resources associated
              with the finding.</p> <p>A score of 0 means that the underlying
              resources have no criticality, and a score of 100 is reserved for
              the most critical resources.</p>
      Description:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: A finding's description.
      FindingProviderFieldsConfidence:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              <p>The finding provider value for the finding confidence.
              Confidence is defined as the likelihood that a finding accurately
              identifies the behavior or issue that it was intended to
              identify.</p> <p>Confidence is scored on a 0-100 basis using a
              ratio scale, where 0 means zero percent confidence and 100 means
              100 percent confidence.</p>
      FindingProviderFieldsCriticality:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              <p>The finding provider value for the level of importance assigned
              to the resources associated with the findings.</p> <p>A score of 0
              means that the underlying resources have no criticality, and a
              score of 100 is reserved for the most critical resources. </p>
      FindingProviderFieldsRelatedFindingsId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The finding identifier of a related finding that is identified by
              the finding provider.
      FindingProviderFieldsRelatedFindingsProductArn:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The ARN of the solution that generated a related finding that is
              identified by the finding provider.
      FindingProviderFieldsSeverityLabel:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The finding provider value for the severity label.
      FindingProviderFieldsSeverityOriginal:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The finding provider's original value for the severity.
      FindingProviderFieldsTypes:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              <p>One or more finding types that the finding provider assigned to
              the finding. Uses the format of
              <code>namespace/category/classifier</code> that classify a
              finding.</p> <p>Valid namespace values are: Software and
              Configuration Checks | TTPs | Effects | Unusual Behaviors |
              Sensitive Data Identifications</p>
      FirstObservedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the
              security-findings provider first observed the potential security
              issue that a finding captured.
      GeneratorId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The identifier for the solution-specific component (a discrete
              unit of logic) that generated a finding. In various
              security-findings providers' solutions, this generator can be
              called a rule, a check, a detector, a plugin, etc.
      Id:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The security findings provider-specific identifier for a finding.
      Keyword:
        allOf:
          - $ref: '#/definitions/KeywordFilterList'
          - description: A keyword for a finding.The Keyword property is deprecated.
            x-deprecated: true
      LastObservedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the
              security-findings provider most recently observed the potential
              security issue that a finding captured.
      MalwareName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The name of the malware that was observed.
      MalwarePath:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The filesystem path of the malware that was observed.
      MalwareState:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The state of the malware that was observed.
      MalwareType:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The type of the malware that was observed.
      NetworkDestinationDomain:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The destination domain of network-related information about a
              finding.
      NetworkDestinationIpV4:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: >-
              The destination IPv4 address of network-related information about
              a finding.
      NetworkDestinationIpV6:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: >-
              The destination IPv6 address of network-related information about
              a finding.
      NetworkDestinationPort:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              The destination port of network-related information about a
              finding.
      NetworkDirection:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              Indicates the direction of network traffic associated with a
              finding.
      NetworkProtocol:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The protocol of network-related information about a finding.
      NetworkSourceDomain:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The source domain of network-related information about a finding.
      NetworkSourceIpV4:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: >-
              The source IPv4 address of network-related information about a
              finding.
      NetworkSourceIpV6:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: >-
              The source IPv6 address of network-related information about a
              finding.
      NetworkSourceMac:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The source media access control (MAC) address of network-related
              information about a finding.
      NetworkSourcePort:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: The source port of network-related information about a finding.
      NoteText:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The text of a note.
      NoteUpdatedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The timestamp of when the note was updated.
      NoteUpdatedBy:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The principal that created a note.
      ProcessLaunchedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The date/time that the process was launched.
      ProcessName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The name of the process.
      ProcessParentPid:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: The parent process ID.
      ProcessPath:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The path to the process executable.
      ProcessPid:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: The process ID.
      ProcessTerminatedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The date/time that the process was terminated.
      ProductArn:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The ARN generated by Security Hub that uniquely identifies a
              third-party company (security findings provider) after this
              provider's product (solution that generates findings) is
              registered with Security Hub.
      ProductFields:
        allOf:
          - $ref: '#/definitions/MapFilterList'
          - description: >-
              A data type where security-findings providers can include
              additional solution-specific details that aren't part of the
              defined <code>AwsSecurityFinding</code> format.
      ProductName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              <p>The name of the solution (product) that generates findings.</p>
              <p>Note that this is a filter against the
              <code>aws/securityhub/ProductName</code> field in
              <code>ProductFields</code>. It is not a filter for the top-level
              <code>ProductName</code> field.</p>
      RecommendationText:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The recommendation of what to do about the issue described in a
              finding.
      RecordState:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The updated record state for the finding.
      Region:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The Region from which the finding was generated.
      RelatedFindingsId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The solution-generated identifier for a related finding.
      RelatedFindingsProductArn:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The ARN of the solution that generated a related finding.
      ResourceAwsEc2InstanceIamInstanceProfileArn:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The IAM profile ARN of the instance.
      ResourceAwsEc2InstanceImageId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The Amazon Machine Image (AMI) ID of the instance.
      ResourceAwsEc2InstanceIpV4Addresses:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: The IPv4 addresses associated with the instance.
      ResourceAwsEc2InstanceIpV6Addresses:
        allOf:
          - $ref: '#/definitions/IpFilterList'
          - description: The IPv6 addresses associated with the instance.
      ResourceAwsEc2InstanceKeyName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The key name associated with the instance.
      ResourceAwsEc2InstanceLaunchedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The date and time the instance was launched.
      ResourceAwsEc2InstanceSubnetId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The identifier of the subnet that the instance was launched in.
      ResourceAwsEc2InstanceType:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The instance type of the instance.
      ResourceAwsEc2InstanceVpcId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The identifier of the VPC that the instance was launched in.
      ResourceAwsIamAccessKeyCreatedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The creation date/time of the IAM access key related to a finding.
      ResourceAwsIamAccessKeyPrincipalName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The name of the principal that is associated with an IAM access
              key.
      ResourceAwsIamAccessKeyStatus:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The status of the IAM access key related to a finding.
      ResourceAwsIamAccessKeyUserName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The user associated with the IAM access key related to a
              finding.This filter is deprecated. Instead, use
              ResourceAwsIamAccessKeyPrincipalName.
            x-deprecated: true
      ResourceAwsIamUserUserName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The name of an IAM user.
      ResourceAwsS3BucketOwnerId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The canonical user ID of the owner of the S3 bucket.
      ResourceAwsS3BucketOwnerName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The display name of the owner of the S3 bucket.
      ResourceContainerImageId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The identifier of the image related to a finding.
      ResourceContainerImageName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The name of the image related to a finding.
      ResourceContainerLaunchedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: The date/time that the container was started.
      ResourceContainerName:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The name of the container related to a finding.
      ResourceDetailsOther:
        allOf:
          - $ref: '#/definitions/MapFilterList'
          - description: >-
              The details of a resource that doesn't have a specific subfield
              for the resource type defined.
      ResourceId:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The canonical identifier for the given resource type.
      ResourcePartition:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The canonical Amazon Web Services partition name that the Region
              is assigned to.
      ResourceRegion:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The canonical Amazon Web Services external Region name where this
              resource is located.
      ResourceTags:
        allOf:
          - $ref: '#/definitions/MapFilterList'
          - description: >-
              A list of Amazon Web Services tags associated with a resource at
              the time the finding was processed.
      ResourceType:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: Specifies the type of the resource that details are provided for.
      SeverityLabel:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The label of a finding's severity.
      SeverityNormalized:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              The normalized severity of a finding.This filter is deprecated.
              Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
            x-deprecated: true
      SeverityProduct:
        allOf:
          - $ref: '#/definitions/NumberFilterList'
          - description: >-
              The native severity as defined by the security-findings provider's
              solution that generated the finding.This filter is deprecated.
              Instead, use FindingProviderSeverityOriginal.
            x-deprecated: true
      SourceUrl:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              A URL that links to a page about the current finding in the
              security-findings provider's solution.
      ThreatIntelIndicatorCategory:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The category of a threat intelligence indicator.
      ThreatIntelIndicatorLastObservedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: >-
              The date/time of the last observation of a threat intelligence
              indicator.
      ThreatIntelIndicatorSource:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The source of the threat intelligence.
      ThreatIntelIndicatorSourceUrl:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              The URL for more details from the source of the threat
              intelligence.
      ThreatIntelIndicatorType:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The type of a threat intelligence indicator.
      ThreatIntelIndicatorValue:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The value of a threat intelligence indicator.
      Title:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: A finding's title.
      Type:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              A finding type in the format of
              <code>namespace/category/classifier</code> that classifies a
              finding.
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/DateFilterList'
          - description: >-
              An ISO8601-formatted timestamp that indicates when the
              security-findings provider last updated the finding record. 
      UserDefinedFields:
        allOf:
          - $ref: '#/definitions/MapFilterList'
          - description: >-
              A list of name/value string pairs associated with the finding.
              These are custom, user-defined fields added to a finding. 
      VerificationState:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: The veracity of a finding.
      WorkflowState:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              <p>The workflow state of a finding.</p> <p>Note that this field is
              deprecated. To search for a finding based on its workflow status,
              use <code>WorkflowStatus</code>.</p>
      WorkflowStatus:
        allOf:
          - $ref: '#/definitions/StringFilterList'
          - description: >-
              <p>The status of the investigation into a finding. Allowed values
              are the following.</p> <ul> <li> <p> <code>NEW</code> - The
              initial state of a finding, before it is reviewed.</p> <p>Security
              Hub also resets the workflow status from <code>NOTIFIED</code> or
              <code>RESOLVED</code> to <code>NEW</code> in the following
              cases:</p> <ul> <li> <p>The record state changes from
              <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li>
              <p>The compliance status changes from <code>PASSED</code> to
              either <code>WARNING</code>, <code>FAILED</code>, or
              <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p>
              <code>NOTIFIED</code> - Indicates that the resource owner has been
              notified about the security issue. Used when the initial reviewer
              is not the resource owner, and needs intervention from the
              resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The
              finding will not be reviewed again and will not be acted upon.</p>
              </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed
              and remediated and is now considered resolved. </p> </li> </ul>
    type: object
  AwsSecurityFindingIdentifier:
    description: Identifies a finding to update using <code>BatchUpdateFindings</code>.
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the finding that was specified by the finding
              provider.
      ProductArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN generated by Security Hub that uniquely identifies a
              product that generates findings. This can be the ARN for a
              third-party product that is integrated with Security Hub, or the
              ARN for a custom integration.
    required:
      - Id
      - ProductArn
    type: object
  AwsSecurityFindingIdentifierList:
    items:
      $ref: '#/definitions/AwsSecurityFindingIdentifier'
    type: array
  AwsSecurityFindingList:
    items:
      $ref: '#/definitions/AwsSecurityFinding'
    type: array
  AwsSnsTopicDetails:
    description: A wrapper type for the topic's ARN.
    properties:
      KmsMasterKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of an Amazon Web Services managed key for Amazon SNS or a
              customer managed key.
      Owner:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The subscription's owner.
      Subscription:
        allOf:
          - $ref: '#/definitions/AwsSnsTopicSubscriptionList'
          - description: >-
              Subscription is an embedded property that describes the
              subscription endpoints of an SNS topic.
      TopicName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the topic.
    type: object
  AwsSnsTopicSubscription:
    description: A wrapper type for the attributes of an Amazon SNS subscription.
    properties:
      Endpoint:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The subscription's endpoint (format depends on the protocol).
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The subscription's protocol.
    type: object
  AwsSnsTopicSubscriptionList:
    items:
      $ref: '#/definitions/AwsSnsTopicSubscription'
    type: array
  AwsSqsQueueDetails:
    description: Data about a queue.
    properties:
      DeadLetterTargetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the dead-letter queue to which Amazon SQS moves
              messages after the value of <code>maxReceiveCount</code> is
              exceeded. 
      KmsDataKeyReusePeriodSeconds:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The length of time, in seconds, for which Amazon SQS can reuse a
              data key to encrypt or decrypt messages before calling KMS again.
      KmsMasterKeyId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID of an Amazon Web Services managed key for Amazon SQS or a
              custom KMS key.
      QueueName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the new queue.
    type: object
  AwsSsmComplianceSummary:
    description: Provides the details about the compliance status for a patch.
    properties:
      ComplianceType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of resource for which the compliance was determined. For
              <code>AwsSsmPatchCompliance</code>, <code>ComplianceType</code> is
              <code>Patch</code>. 
      CompliantCriticalCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>CRITICAL</code>.
      CompliantHighCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>HIGH</code>.
      CompliantInformationalCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>INFORMATIONAL</code>.
      CompliantLowCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>LOW</code>.
      CompliantMediumCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>MEDIUM</code>.
      CompliantUnspecifiedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are compliant, the number that have a
              severity of <code>UNSPECIFIED</code>.
      ExecutionType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of execution that was used determine compliance.
      NonCompliantCriticalCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patch items that are noncompliant, the number of items
              that have a severity of <code>CRITICAL</code>.
      NonCompliantHighCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are noncompliant, the number that have a
              severity of <code>HIGH</code>.
      NonCompliantInformationalCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are noncompliant, the number that have a
              severity of <code>INFORMATIONAL</code>.
      NonCompliantLowCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are noncompliant, the number that have a
              severity of <code>LOW</code>.
      NonCompliantMediumCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are noncompliant, the number that have a
              severity of <code>MEDIUM</code>.
      NonCompliantUnspecifiedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              For the patches that are noncompliant, the number that have a
              severity of <code>UNSPECIFIED</code>.
      OverallSeverity:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The highest severity for the patches.
      PatchBaselineId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the patch baseline. The patch baseline lists the
              patches that are approved for installation.
      PatchGroup:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the patch group for which compliance was
              determined. A patch group uses tags to group EC2 instances that
              should have the same patch compliance.
      Status:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The current patch compliance status.</p> <p>The possible status
              values are:</p> <ul> <li> <p> <code>COMPLIANT</code> </p> </li>
              <li> <p> <code>NON_COMPLIANT</code> </p> </li> <li> <p>
              <code>UNSPECIFIED_DATA</code> </p> </li> </ul>
    type: object
  AwsSsmPatch:
    description: Provides details about the compliance for a patch.
    properties:
      ComplianceSummary:
        allOf:
          - $ref: '#/definitions/AwsSsmComplianceSummary'
          - description: The compliance status details for the patch.
    type: object
  AwsSsmPatchComplianceDetails:
    description: >-
      Provides information about the state of a patch on an instance based on
      the patch baseline that was used to patch the instance.
    properties:
      Patch:
        allOf:
          - $ref: '#/definitions/AwsSsmPatch'
          - description: Information about the status of a patch.
    type: object
  AwsWafWebAclDetails:
    description: Details about an WAF WebACL.
    properties:
      DefaultAction:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The action to perform if none of the rules contained in the WebACL
              match.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A friendly name or description of the WebACL. You can't change the
              name of a WebACL after you create it.
      Rules:
        allOf:
          - $ref: '#/definitions/AwsWafWebAclRuleList'
          - description: >-
              An array that contains the action for each rule in a WebACL, the
              priority of the rule, and the ID of the rule.
      WebAclId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A unique identifier for a WebACL.
    type: object
  AwsWafWebAclRule:
    description: Details for a rule in an WAF WebACL.
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/WafAction'
          - description: >-
              Specifies the action that CloudFront or WAF takes when a web
              request matches the conditions in the rule. 
      ExcludedRules:
        allOf:
          - $ref: '#/definitions/WafExcludedRuleList'
          - description: Rules to exclude from a rule group.
      OverrideAction:
        allOf:
          - $ref: '#/definitions/WafOverrideAction'
          - description: >-
              <p>Use the <code>OverrideAction</code> to test your RuleGroup.</p>
              <p>Any rule in a RuleGroup can potentially block a request. If you
              set the <code>OverrideAction</code> to <code>None</code>, the
              RuleGroup blocks a request if any individual rule in the RuleGroup
              matches the request and is configured to block that request.</p>
              <p>However, if you first want to test the RuleGroup, set the
              <code>OverrideAction</code> to <code>Count</code>. The RuleGroup
              then overrides any block action specified by individual rules
              contained within the group. Instead of blocking matching requests,
              those requests are counted.</p> <p>
              <code>ActivatedRule</code>|<code>OverrideAction</code> applies
              only when updating or adding a RuleGroup to a WebACL. In this case
              you do not use <code>ActivatedRule</code>|<code>Action</code>. For
              all other update requests,
              <code>ActivatedRule</code>|<code>Action</code> is used instead of
              <code>ActivatedRule</code>|<code>OverrideAction</code>. </p>
      Priority:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              Specifies the order in which the rules in a WebACL are evaluated.
              Rules with a lower value for <code>Priority</code> are evaluated
              before rules with a higher value. The value must be a unique
              integer. If you add multiple rules to a WebACL, the values do not
              need to be consecutive.
      RuleId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier for a rule.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The rule type.</p> <p>Valid values: <code>REGULAR</code> |
              <code>RATE_BASED</code> | <code>GROUP</code> </p> <p>The default
              is <code>REGULAR</code>.</p>
    type: object
  AwsWafWebAclRuleList:
    items:
      $ref: '#/definitions/AwsWafWebAclRule'
    type: array
  BatchDisableStandardsRequest:
    properties:
      StandardsSubscriptionArns:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptionArns'
          - description: The ARNs of the standards subscriptions to disable.
    required:
      - StandardsSubscriptionArns
    title: BatchDisableStandardsRequest
    type: object
  BatchDisableStandardsResponse:
    properties:
      StandardsSubscriptions:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptions'
          - description: The details of the standards subscriptions that were disabled.
    type: object
  BatchEnableStandardsRequest:
    properties:
      StandardsSubscriptionRequests:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptionRequests'
          - description: The list of standards checks to enable.
    required:
      - StandardsSubscriptionRequests
    title: BatchEnableStandardsRequest
    type: object
  BatchEnableStandardsResponse:
    properties:
      StandardsSubscriptions:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptions'
          - description: The details of the standards subscriptions that were enabled.
    type: object
  BatchImportFindingsRequest:
    properties:
      Findings:
        allOf:
          - $ref: '#/definitions/BatchImportFindingsRequestFindingList'
          - description: >-
              A list of findings to import. To successfully import a finding, it
              must follow the <a
              href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">Amazon
              Web Services Security Finding Format</a>. Maximum of 100 findings
              per request.
    required:
      - Findings
    title: BatchImportFindingsRequest
    type: object
  BatchImportFindingsRequestFindingList:
    items:
      $ref: '#/definitions/AwsSecurityFinding'
    maxItems: 100
    minItems: 1
    type: array
  BatchImportFindingsResponse:
    properties:
      FailedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of findings that failed to import.
      FailedFindings:
        allOf:
          - $ref: '#/definitions/ImportFindingsErrorList'
          - description: The list of findings that failed to import.
      SuccessCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of findings that were successfully imported.
    required:
      - FailedCount
      - SuccessCount
    type: object
  BatchUpdateFindingsRequest:
    properties:
      Confidence:
        allOf:
          - $ref: '#/definitions/RatioScale'
          - description: >-
              <p>The updated value for the finding confidence. Confidence is
              defined as the likelihood that a finding accurately identifies the
              behavior or issue that it was intended to identify.</p>
              <p>Confidence is scored on a 0-100 basis using a ratio scale,
              where 0 means zero percent confidence and 100 means 100 percent
              confidence.</p>
      Criticality:
        allOf:
          - $ref: '#/definitions/RatioScale'
          - description: >-
              <p>The updated value for the level of importance assigned to the
              resources associated with the findings.</p> <p>A score of 0 means
              that the underlying resources have no criticality, and a score of
              100 is reserved for the most critical resources. </p>
      FindingIdentifiers:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingIdentifierList'
          - description: >-
              <p>The list of findings to update.
              <code>BatchUpdateFindings</code> can be used to update up to 100
              findings at a time.</p> <p>For each finding, the list provides the
              finding identifier and the ARN of the finding provider.</p>
      Note:
        $ref: '#/definitions/NoteUpdate'
      RelatedFindings:
        allOf:
          - $ref: '#/definitions/RelatedFindingList'
          - description: A list of findings that are related to the updated findings.
      Severity:
        allOf:
          - $ref: '#/definitions/SeverityUpdate'
          - description: Used to update the finding severity.
      Types:
        allOf:
          - $ref: '#/definitions/TypeList'
          - description: >-
              <p>One or more finding types in the format of
              namespace/category/classifier that classify a finding.</p>
              <p>Valid namespace values are as follows.</p> <ul> <li>
              <p>Software and Configuration Checks</p> </li> <li> <p>TTPs</p>
              </li> <li> <p>Effects</p> </li> <li> <p>Unusual Behaviors</p>
              </li> <li> <p>Sensitive Data Identifications </p> </li> </ul>
      UserDefinedFields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              A list of name/value string pairs associated with the finding.
              These are custom, user-defined fields added to a finding.
      VerificationState:
        allOf:
          - $ref: '#/definitions/VerificationState'
          - description: >-
              <p>Indicates the veracity of a finding.</p> <p>The available
              values for <code>VerificationState</code> are as follows.</p> <ul>
              <li> <p> <code>UNKNOWN</code> – The default disposition of a
              security finding</p> </li> <li> <p> <code>TRUE_POSITIVE</code> –
              The security finding is confirmed</p> </li> <li> <p>
              <code>FALSE_POSITIVE</code> – The security finding was determined
              to be a false alarm</p> </li> <li> <p>
              <code>BENIGN_POSITIVE</code> – A special case of
              <code>TRUE_POSITIVE</code> where the finding doesn't pose any
              threat, is expected, or both</p> </li> </ul>
      Workflow:
        allOf:
          - $ref: '#/definitions/WorkflowUpdate'
          - description: >-
              <p>Used to update the workflow status of a finding.</p> <p>The
              workflow status indicates the progress of the investigation into
              the finding. </p>
    required:
      - FindingIdentifiers
    title: BatchUpdateFindingsRequest
    type: object
  BatchUpdateFindingsResponse:
    properties:
      ProcessedFindings:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingIdentifierList'
          - description: The list of findings that were updated successfully.
      UnprocessedFindings:
        allOf:
          - $ref: '#/definitions/BatchUpdateFindingsUnprocessedFindingsList'
          - description: The list of findings that were not updated.
    required:
      - ProcessedFindings
      - UnprocessedFindings
    type: object
  BatchUpdateFindingsUnprocessedFinding:
    description: >-
      A finding from a <code>BatchUpdateFindings</code> request that Security
      Hub was unable to update.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The code associated with the error.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The message associated with the error.
      FindingIdentifier:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingIdentifier'
          - description: The identifier of the finding that was not updated.
    required:
      - FindingIdentifier
      - ErrorCode
      - ErrorMessage
    type: object
  BatchUpdateFindingsUnprocessedFindingsList:
    items:
      $ref: '#/definitions/BatchUpdateFindingsUnprocessedFinding'
    type: array
  Boolean:
    type: boolean
  CategoryList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  Cell:
    description: >-
      An occurrence of sensitive data detected in a Microsoft Excel workbook,
      comma-separated value (CSV) file, or tab-separated value (TSV) file.
    properties:
      CellReference:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              For a Microsoft Excel workbook, provides the location of the cell,
              as an absolute cell reference, that contains the data. For
              example, Sheet2!C5 for cell C5 on Sheet2.
      Column:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The column number of the column that contains the data. For a
              Microsoft Excel workbook, the column number corresponds to the
              alphabetical column identifiers. For example, a value of 1 for
              Column corresponds to the A column in the workbook.
      ColumnName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the column that contains the data.
      Row:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The row number of the row that contains the data.
    type: object
  Cells:
    items:
      $ref: '#/definitions/Cell'
    type: array
  CidrBlockAssociation:
    description: An IPv4 CIDR block association.
    properties:
      AssociationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The association ID for the IPv4 CIDR block.
      CidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPv4 CIDR block.
      CidrBlockState:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Information about the state of the IPv4 CIDR block.
    type: object
  CidrBlockAssociationList:
    items:
      $ref: '#/definitions/CidrBlockAssociation'
    type: array
  City:
    description: Information about a city.
    properties:
      CityName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the city.
    type: object
  ClassificationResult:
    description: Details about the sensitive data that was detected on the resource.
    properties:
      AdditionalOccurrences:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether there are additional occurrences of sensitive
              data that are not included in the finding. This occurs when the
              number of occurrences exceeds the maximum that can be included.
      CustomDataIdentifiers:
        allOf:
          - $ref: '#/definitions/CustomDataIdentifiersResult'
          - description: >-
              Provides details about sensitive data that was identified based on
              customer-defined configuration.
      MimeType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of content that the finding applies to.
      SensitiveData:
        allOf:
          - $ref: '#/definitions/SensitiveDataResultList'
          - description: >-
              Provides details about sensitive data that was identified based on
              built-in configuration.
      SizeClassified:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The total size in bytes of the affected data.
      Status:
        allOf:
          - $ref: '#/definitions/ClassificationStatus'
          - description: The current status of the sensitive data detection.
    type: object
  ClassificationStatus:
    description: Provides details about the current status of the sensitive data detection.
    properties:
      Code:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The code that represents the status of the sensitive data
              detection.
      Reason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A longer description of the current status of the sensitive data
              detection.
    type: object
  Compliance:
    description: >-
      Contains finding details that are specific to control-based findings. Only
      returned for findings generated from controls.
    properties:
      RelatedRequirements:
        allOf:
          - $ref: '#/definitions/RelatedRequirementsList'
          - description: >-
              For a control, the industry or regulatory framework requirements
              that are related to the control. The check for that control is
              aligned with these requirements.
      Status:
        allOf:
          - $ref: '#/definitions/ComplianceStatus'
          - description: >-
              <p>The result of a standards check.</p> <p>The valid values for
              <code>Status</code> are as follows.</p> <ul> <li> <ul> <li> <p>
              <code>PASSED</code> - Standards check passed for all evaluated
              resources.</p> </li> <li> <p> <code>WARNING</code> - Some
              information is missing or this check is not supported for your
              configuration.</p> </li> <li> <p> <code>FAILED</code> - Standards
              check failed for at least one evaluated resource.</p> </li> <li>
              <p> <code>NOT_AVAILABLE</code> - Check could not be performed due
              to a service outage, API error, or because the result of the
              Config evaluation was <code>NOT_APPLICABLE</code>. If the Config
              evaluation result was <code>NOT_APPLICABLE</code>, then after 3
              days, Security Hub automatically archives the finding.</p> </li>
              </ul> </li> </ul>
      StatusReasons:
        allOf:
          - $ref: '#/definitions/StatusReasonsList'
          - description: >-
              For findings generated from controls, a list of reasons behind the
              value of <code>Status</code>. For the list of status reason codes
              and their meanings, see <a
              href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff">Standards-related
              information in the ASFF</a> in the <i>Security Hub User
              Guide</i>. 
    type: object
  ComplianceStatus:
    enum:
      - PASSED
      - WARNING
      - FAILED
      - NOT_AVAILABLE
    type: string
  ContainerDetails:
    description: Container details related to a finding.
    properties:
      ImageId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the image related to a finding.
      ImageName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the image related to a finding.
      LaunchedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the container started.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the container related to a finding.
    type: object
  ControlStatus:
    enum:
      - ENABLED
      - DISABLED
    type: string
  Country:
    description: Information about a country.
    properties:
      CountryCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The 2-letter ISO 3166 country code for the country.
      CountryName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the country.
    type: object
  CreateActionTargetRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The description for the custom action target.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ID for the custom action target. Can contain up to 20
              alphanumeric characters.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The name of the custom action target. Can contain up to 20
              characters.
    required:
      - Name
      - Description
      - Id
    title: CreateActionTargetRequest
    type: object
  CreateActionTargetResponse:
    properties:
      ActionTargetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN for the custom action target.
    required:
      - ActionTargetArn
    type: object
  CreateInsightRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingFilters'
          - description: >-
              One or more attributes used to filter the findings included in the
              insight. The insight only includes findings that match the
              criteria defined in the filters.
      GroupByAttribute:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The attribute used to group the findings for the insight. The
              grouping attribute identifies the type of item that the insight
              applies to. For example, if an insight is grouped by resource
              identifier, then the insight produces a list of resource
              identifiers.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the custom insight to create.
    required:
      - Name
      - Filters
      - GroupByAttribute
    title: CreateInsightRequest
    type: object
  CreateInsightResponse:
    properties:
      InsightArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the insight created.
    required:
      - InsightArn
    type: object
  CreateMembersRequest:
    properties:
      AccountDetails:
        allOf:
          - $ref: '#/definitions/AccountDetailsList'
          - description: >-
              The list of accounts to associate with the Security Hub
              administrator account. For each account, the list includes the
              account ID and optionally the email address.
    required:
      - AccountDetails
    title: CreateMembersRequest
    type: object
  CreateMembersResponse:
    properties:
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts that were not processed.
              For each account, the list includes the account ID and the email
              address.
    type: object
  CrossAccountMaxResults:
    maximum: 50
    minimum: 1
    type: integer
  CustomDataIdentifiersDetections:
    description: The list of detected instances of sensitive data.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the custom identifier that was used to detect the
              sensitive data.
      Count:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The total number of occurrences of sensitive data that were
              detected.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: he name of the custom identifier that detected the sensitive data.
      Occurrences:
        allOf:
          - $ref: '#/definitions/Occurrences'
          - description: Details about the sensitive data that was detected.
    type: object
  CustomDataIdentifiersDetectionsList:
    items:
      $ref: '#/definitions/CustomDataIdentifiersDetections'
    type: array
  CustomDataIdentifiersResult:
    description: >-
      Contains an instance of sensitive data that was detected by a
      customer-defined identifier.
    properties:
      Detections:
        allOf:
          - $ref: '#/definitions/CustomDataIdentifiersDetectionsList'
          - description: The list of detected instances of sensitive data.
      TotalCount:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The total number of occurrences of sensitive data.
    type: object
  Cvss:
    description: CVSS scores from the advisory related to the vulnerability.
    properties:
      Adjustments:
        allOf:
          - $ref: '#/definitions/AdjustmentList'
          - description: Adjustments to the CVSS metrics.
      BaseScore:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The base CVSS score.
      BaseVector:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The base scoring vector for the CVSS score.
      Source:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The origin of the original CVSS score and vector.
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of CVSS for the CVSS score.
    type: object
  CvssList:
    items:
      $ref: '#/definitions/Cvss'
    type: array
  DataClassificationDetails:
    description: Provides details about sensitive data that was detected on a resource.
    properties:
      DetailedResultsLocation:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the folder or file that contains the sensitive data.
      Result:
        allOf:
          - $ref: '#/definitions/ClassificationResult'
          - description: >-
              The details about the sensitive data that was detected on the
              resource.
    type: object
  DateFilter:
    description: A date filter for querying findings.
    properties:
      DateRange:
        allOf:
          - $ref: '#/definitions/DateRange'
          - description: A date range for the date filter.
      End:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: An end date for the date filter.
      Start:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A start date for the date filter.
    type: object
  DateFilterList:
    items:
      $ref: '#/definitions/DateFilter'
    type: array
  DateRange:
    description: A date range for the date filter.
    properties:
      Unit:
        allOf:
          - $ref: '#/definitions/DateRangeUnit'
          - description: A date range unit for the date filter.
      Value:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: A date range value for the date filter.
    type: object
  DateRangeUnit:
    enum:
      - DAYS
    type: string
  DeclineInvitationsRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: >-
              The list of account IDs for the accounts from which to decline the
              invitations to Security Hub.
    required:
      - AccountIds
    title: DeclineInvitationsRequest
    type: object
  DeclineInvitationsResponse:
    properties:
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts that were not processed.
              For each account, the list includes the account ID and the email
              address.
    type: object
  DeleteActionTargetRequest:
    properties: {}
    title: DeleteActionTargetRequest
    type: object
  DeleteActionTargetResponse:
    properties:
      ActionTargetArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the custom action target that was deleted.
    required:
      - ActionTargetArn
    type: object
  DeleteInsightRequest:
    properties: {}
    title: DeleteInsightRequest
    type: object
  DeleteInsightResponse:
    properties:
      InsightArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the insight that was deleted.
    required:
      - InsightArn
    type: object
  DeleteInvitationsRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: The list of the account IDs that sent the invitations to delete.
    required:
      - AccountIds
    title: DeleteInvitationsRequest
    type: object
  DeleteInvitationsResponse:
    properties:
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts for which the invitations
              were not deleted. For each account, the list includes the account
              ID and the email address.
    type: object
  DeleteMembersRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: The list of account IDs for the member accounts to delete.
    required:
      - AccountIds
    title: DeleteMembersRequest
    type: object
  DeleteMembersResponse:
    properties:
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts that were not deleted.
              For each account, the list includes the account ID and the email
              address.
    type: object
  DescribeActionTargetsRequest:
    properties:
      ActionTargetArns:
        allOf:
          - $ref: '#/definitions/ArnList'
          - description: >-
              A list of custom action target ARNs for the custom action targets
              to retrieve.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>The token that is required for pagination. On your first call
              to the <code>DescribeActionTargets</code> operation, set the value
              of this parameter to <code>NULL</code>.</p> <p>For subsequent
              calls to the operation, to continue listing data, set the value of
              this parameter to the value returned from the previous
              response.</p>
    title: DescribeActionTargetsRequest
    type: object
  DescribeActionTargetsResponse:
    properties:
      ActionTargets:
        allOf:
          - $ref: '#/definitions/ActionTargetList'
          - description: >-
              A list of <code>ActionTarget</code> objects. Each object includes
              the <code>ActionTargetArn</code>, <code>Description</code>, and
              <code>Name</code> of a custom action target available in Security
              Hub.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
    required:
      - ActionTargets
    type: object
  DescribeHubRequest:
    properties: {}
    title: DescribeHubRequest
    type: object
  DescribeHubResponse:
    properties:
      AutoEnableControls:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether to automatically enable new controls when they are
              added to standards that are enabled.</p> <p>If set to
              <code>true</code>, then new controls for enabled standards are
              enabled automatically. If set to <code>false</code>, then new
              controls are not enabled.</p>
      HubArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the Hub resource that was retrieved.
      SubscribedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The date and time when Security Hub was enabled in the account.
    type: object
  DescribeOrganizationConfigurationRequest:
    properties: {}
    title: DescribeOrganizationConfigurationRequest
    type: object
  DescribeOrganizationConfigurationResponse:
    properties:
      AutoEnable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether to automatically enable Security Hub for new accounts
              in the organization.</p> <p>If set to <code>true</code>, then
              Security Hub is enabled for new accounts. If set to false, then
              new accounts are not added automatically.</p>
      MemberAccountLimitReached:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the maximum number of allowed member accounts are already
              associated with the Security Hub administrator account.
    type: object
  DescribeProductsRequest:
    properties: {}
    title: DescribeProductsRequest
    type: object
  DescribeProductsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
      Products:
        allOf:
          - $ref: '#/definitions/ProductsList'
          - description: 'A list of products, including details for each product.'
    required:
      - Products
    type: object
  DescribeStandardsControlsRequest:
    properties: {}
    title: DescribeStandardsControlsRequest
    type: object
  DescribeStandardsControlsResponse:
    properties:
      Controls:
        allOf:
          - $ref: '#/definitions/StandardsControls'
          - description: A list of security standards controls.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
    type: object
  DescribeStandardsRequest:
    properties: {}
    title: DescribeStandardsRequest
    type: object
  DescribeStandardsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
      Standards:
        allOf:
          - $ref: '#/definitions/Standards'
          - description: A list of available standards.
    type: object
  DisableImportFindingsForProductRequest:
    properties: {}
    title: DisableImportFindingsForProductRequest
    type: object
  DisableImportFindingsForProductResponse:
    properties: {}
    type: object
  DisableOrganizationAdminAccountRequest:
    properties:
      AdminAccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account identifier of the Security Hub
              administrator account.
    required:
      - AdminAccountId
    title: DisableOrganizationAdminAccountRequest
    type: object
  DisableOrganizationAdminAccountResponse:
    properties: {}
    type: object
  DisableSecurityHubRequest:
    properties: {}
    title: DisableSecurityHubRequest
    type: object
  DisableSecurityHubResponse:
    properties: {}
    type: object
  DisassociateFromAdministratorAccountRequest:
    properties: {}
    title: DisassociateFromAdministratorAccountRequest
    type: object
  DisassociateFromAdministratorAccountResponse:
    properties: {}
    type: object
  DisassociateFromMasterAccountRequest:
    properties: {}
    title: DisassociateFromMasterAccountRequest
    type: object
  DisassociateFromMasterAccountResponse:
    properties: {}
    type: object
  DisassociateMembersRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: >-
              The account IDs of the member accounts to disassociate from the
              administrator account.
    required:
      - AccountIds
    title: DisassociateMembersRequest
    type: object
  DisassociateMembersResponse:
    properties: {}
    type: object
  DnsRequestAction:
    description: >-
      Provided if <code>ActionType</code> is <code>DNS_REQUEST</code>. It
      provides details about the DNS request that was detected.
    properties:
      Blocked:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the DNS request was blocked.
      Domain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The DNS domain that is associated with the DNS request.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The protocol that was used for the DNS request.
    type: object
  Double:
    format: double
    type: number
  EnableImportFindingsForProductRequest:
    properties:
      ProductArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the product to enable the integration for.
    required:
      - ProductArn
    title: EnableImportFindingsForProductRequest
    type: object
  EnableImportFindingsForProductResponse:
    properties:
      ProductSubscriptionArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of your subscription to the product to enable integrations
              for.
    type: object
  EnableOrganizationAdminAccountRequest:
    properties:
      AdminAccountId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account identifier of the account to
              designate as the Security Hub administrator account.
    required:
      - AdminAccountId
    title: EnableOrganizationAdminAccountRequest
    type: object
  EnableOrganizationAdminAccountResponse:
    properties: {}
    type: object
  EnableSecurityHubRequest:
    properties:
      EnableDefaultStandards:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether to enable the security standards that Security Hub has
              designated as automatically enabled. If you do not provide a value
              for <code>EnableDefaultStandards</code>, it is set to
              <code>true</code>. To not enable the automatically enabled
              standards, set <code>EnableDefaultStandards</code> to
              <code>false</code>.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags to add to the hub resource when you enable Security Hub.
    title: EnableSecurityHubRequest
    type: object
  EnableSecurityHubResponse:
    properties: {}
    type: object
  FieldMap:
    additionalProperties:
      $ref: '#/definitions/NonEmptyString'
    type: object
  FindingProviderFields:
    description: >-
      In a <code>BatchImportFindings</code> request, finding providers use
      <code>FindingProviderFields</code> to provide and update values for
      confidence, criticality, related findings, severity, and types.
    properties:
      Confidence:
        allOf:
          - $ref: '#/definitions/RatioScale'
          - description: >-
              <p>A finding's confidence. Confidence is defined as the likelihood
              that a finding accurately identifies the behavior or issue that it
              was intended to identify.</p> <p>Confidence is scored on a 0-100
              basis using a ratio scale, where 0 means zero percent confidence
              and 100 means 100 percent confidence.</p>
      Criticality:
        allOf:
          - $ref: '#/definitions/RatioScale'
          - description: >-
              <p>The level of importance assigned to the resources associated
              with the finding.</p> <p>A score of 0 means that the underlying
              resources have no criticality, and a score of 100 is reserved for
              the most critical resources.</p>
      RelatedFindings:
        allOf:
          - $ref: '#/definitions/RelatedFindingList'
          - description: A list of findings that are related to the current finding.
      Severity:
        allOf:
          - $ref: '#/definitions/FindingProviderSeverity'
          - description: The severity of a finding.
      Types:
        allOf:
          - $ref: '#/definitions/TypeList'
          - description: >-
              <p>One or more finding types in the format of
              <code>namespace/category/classifier</code> that classify a
              finding.</p> <p>Valid namespace values are: Software and
              Configuration Checks | TTPs | Effects | Unusual Behaviors |
              Sensitive Data Identifications</p>
    type: object
  FindingProviderSeverity:
    description: The severity assigned to the finding by the finding provider.
    properties:
      Label:
        allOf:
          - $ref: '#/definitions/SeverityLabel'
          - description: >-
              The severity label assigned to the finding by the finding
              provider.
      Original:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The finding provider's original value for the severity.
    type: object
  GeoLocation:
    description: Provides the latitude and longitude coordinates of a location.
    properties:
      Lat:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The latitude of the location.
      Lon:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The longitude of the location.
    type: object
  GetAdministratorAccountRequest:
    properties: {}
    title: GetAdministratorAccountRequest
    type: object
  GetAdministratorAccountResponse:
    properties:
      Administrator:
        $ref: '#/definitions/Invitation'
    type: object
  GetEnabledStandardsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return in the response.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>The token that is required for pagination. On your first call
              to the <code>GetEnabledStandards</code> operation, set the value
              of this parameter to <code>NULL</code>.</p> <p>For subsequent
              calls to the operation, to continue listing data, set the value of
              this parameter to the value returned from the previous
              response.</p>
      StandardsSubscriptionArns:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptionArns'
          - description: >-
              The list of the standards subscription ARNs for the standards to
              retrieve.
    title: GetEnabledStandardsRequest
    type: object
  GetEnabledStandardsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
      StandardsSubscriptions:
        allOf:
          - $ref: '#/definitions/StandardsSubscriptions'
          - description: >-
              The list of <code>StandardsSubscriptions</code> objects that
              include information about the enabled standards.
    type: object
  GetFindingsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingFilters'
          - description: >-
              <p>The finding attributes used to define a condition to filter the
              returned findings.</p> <p>You can filter by up to 10 finding
              attributes. For each attribute, you can provide up to 20 filter
              values.</p> <p>Note that in the available filter fields,
              <code>WorkflowState</code> is deprecated. To search for a finding
              based on its workflow status, use <code>WorkflowStatus</code>.</p>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of findings to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>The token that is required for pagination. On your first call
              to the <code>GetFindings</code> operation, set the value of this
              parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
              operation, to continue listing data, set the value of this
              parameter to the value returned from the previous response.</p>
      SortCriteria:
        allOf:
          - $ref: '#/definitions/SortCriteria'
          - description: The finding attributes used to sort the list of returned findings.
    title: GetFindingsRequest
    type: object
  GetFindingsResponse:
    properties:
      Findings:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingList'
          - description: The findings that matched the filters specified in the request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
    required:
      - Findings
    type: object
  GetInsightResultsRequest:
    properties: {}
    title: GetInsightResultsRequest
    type: object
  GetInsightResultsResponse:
    properties:
      InsightResults:
        allOf:
          - $ref: '#/definitions/InsightResults'
          - description: The insight results returned by the operation.
    required:
      - InsightResults
    type: object
  GetInsightsRequest:
    properties:
      InsightArns:
        allOf:
          - $ref: '#/definitions/ArnList'
          - description: >-
              The ARNs of the insights to describe. If you do not provide any
              insight ARNs, then <code>GetInsights</code> returns all of your
              custom insights. It does not return any managed insights.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of items to return in the response.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>The token that is required for pagination. On your first call
              to the <code>GetInsights</code> operation, set the value of this
              parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
              operation, to continue listing data, set the value of this
              parameter to the value returned from the previous response.</p>
    title: GetInsightsRequest
    type: object
  GetInsightsResponse:
    properties:
      Insights:
        allOf:
          - $ref: '#/definitions/InsightList'
          - description: The insights returned by the operation.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
    required:
      - Insights
    type: object
  GetInvitationsCountRequest:
    properties: {}
    title: GetInvitationsCountRequest
    type: object
  GetInvitationsCountResponse:
    properties:
      InvitationsCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of all membership invitations sent to this Security Hub
              member account, not including the currently accepted invitation.
    type: object
  GetMasterAccountRequest:
    properties: {}
    title: GetMasterAccountRequest
    type: object
  GetMasterAccountResponse:
    properties:
      Master:
        allOf:
          - $ref: '#/definitions/Invitation'
          - description: >-
              A list of details about the Security Hub administrator account for
              the current member account. 
    type: object
  GetMembersRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: >-
              The list of account IDs for the Security Hub member accounts to
              return the details for. 
    required:
      - AccountIds
    title: GetMembersRequest
    type: object
  GetMembersResponse:
    properties:
      Members:
        allOf:
          - $ref: '#/definitions/MemberList'
          - description: The list of details about the Security Hub member accounts.
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts that could not be
              processed. For each account, the list includes the account ID and
              the email address.
    type: object
  IcmpTypeCode:
    description: An Internet Control Message Protocol (ICMP) type and code.
    properties:
      Code:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The ICMP code for which to deny or allow access. To deny or allow
              all codes, use the value -1.
      Type:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The ICMP type for which to deny or allow access. To deny or allow
              all types, use the value -1.
    type: object
  ImportFindingsError:
    description: >-
      The list of the findings that cannot be imported. For each finding, the
      list provides the error.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The code of the error returned by the
              <code>BatchImportFindings</code> operation.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The message of the error returned by the
              <code>BatchImportFindings</code> operation.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the finding that could not be updated.
    required:
      - Id
      - ErrorCode
      - ErrorMessage
    type: object
  ImportFindingsErrorList:
    items:
      $ref: '#/definitions/ImportFindingsError'
    type: array
  Insight:
    description: Contains information about a Security Hub insight.
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingFilters'
          - description: >-
              One or more attributes used to filter the findings included in the
              insight. The insight only includes findings that match the
              criteria defined in the filters.
      GroupByAttribute:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The grouping attribute for the insight's findings. Indicates how
              to group the matching findings, and identifies the type of item
              that the insight applies to. For example, if an insight is grouped
              by resource identifier, then the insight produces a list of
              resource identifiers.
      InsightArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of a Security Hub insight.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of a Security Hub insight.
    required:
      - InsightArn
      - Name
      - Filters
      - GroupByAttribute
    type: object
  InsightList:
    items:
      $ref: '#/definitions/Insight'
    type: array
  InsightResultValue:
    description: >-
      The insight result values returned by the <code>GetInsightResults</code>
      operation.
    properties:
      Count:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of findings returned for each
              <code>GroupByAttributeValue</code>.
      GroupByAttributeValue:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The value of the attribute that the findings are grouped by for
              the insight whose results are returned by the
              <code>GetInsightResults</code> operation.
    required:
      - GroupByAttributeValue
      - Count
    type: object
  InsightResultValueList:
    items:
      $ref: '#/definitions/InsightResultValue'
    type: array
  InsightResults:
    description: >-
      The insight results returned by the <code>GetInsightResults</code>
      operation.
    properties:
      GroupByAttribute:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The attribute that the findings are grouped by for the insight
              whose results are returned by the <code>GetInsightResults</code>
              operation.
      InsightArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the insight whose results are returned by the
              <code>GetInsightResults</code> operation.
      ResultValues:
        allOf:
          - $ref: '#/definitions/InsightResultValueList'
          - description: >-
              The list of insight result values returned by the
              <code>GetInsightResults</code> operation.
    required:
      - InsightArn
      - GroupByAttribute
      - ResultValues
    type: object
  Integer:
    type: integer
  IntegerList:
    items:
      $ref: '#/definitions/Integer'
    type: array
  IntegrationType:
    enum:
      - SEND_FINDINGS_TO_SECURITY_HUB
      - RECEIVE_FINDINGS_FROM_SECURITY_HUB
      - UPDATE_FINDINGS_IN_SECURITY_HUB
    type: string
  IntegrationTypeList:
    items:
      $ref: '#/definitions/IntegrationType'
    type: array
  InternalException: {}
  InvalidAccessException: {}
  InvalidInputException: {}
  Invitation:
    description: Details about an invitation.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The account ID of the Security Hub administrator account that the
              invitation was sent from.
      InvitationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ID of the invitation sent to the member account.
      InvitedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of when the invitation was sent.
      MemberStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The current status of the association between the member and
              administrator accounts.
    type: object
  InvitationList:
    items:
      $ref: '#/definitions/Invitation'
    type: array
  InviteMembersRequest:
    properties:
      AccountIds:
        allOf:
          - $ref: '#/definitions/AccountIdList'
          - description: >-
              The list of account IDs of the Amazon Web Services accounts to
              invite to Security Hub as members. 
    required:
      - AccountIds
    title: InviteMembersRequest
    type: object
  InviteMembersResponse:
    properties:
      UnprocessedAccounts:
        allOf:
          - $ref: '#/definitions/ResultList'
          - description: >-
              The list of Amazon Web Services accounts that could not be
              processed. For each account, the list includes the account ID and
              the email address.
    type: object
  IpFilter:
    description: The IP filter for querying findings.
    properties:
      Cidr:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A finding's CIDR value.
    type: object
  IpFilterList:
    items:
      $ref: '#/definitions/IpFilter'
    type: array
  IpOrganizationDetails:
    description: Provides information about an internet provider.
    properties:
      Asn:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The Autonomous System Number (ASN) of the internet provider
      AsnOrg:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the organization that registered the ASN.
      Isp:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ISP information for the internet provider.
      Org:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the internet provider.
    type: object
  Ipv6CidrBlockAssociation:
    description: An IPV6 CIDR block association.
    properties:
      AssociationId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The association ID for the IPv6 CIDR block.
      CidrBlockState:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: Information about the state of the CIDR block.
      Ipv6CidrBlock:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The IPv6 CIDR block.
    type: object
  Ipv6CidrBlockAssociationList:
    items:
      $ref: '#/definitions/Ipv6CidrBlockAssociation'
    type: array
  KeywordFilter:
    description: A keyword filter for querying findings.
    properties:
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A value for the keyword.
    type: object
  KeywordFilterList:
    items:
      $ref: '#/definitions/KeywordFilter'
    type: array
  LimitExceededException: {}
  ListEnabledProductsForImportRequest:
    properties: {}
    title: ListEnabledProductsForImportRequest
    type: object
  ListEnabledProductsForImportResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
      ProductSubscriptions:
        allOf:
          - $ref: '#/definitions/ProductSubscriptionArnList'
          - description: >-
              The list of ARNs for the resources that represent your
              subscriptions to products. 
    type: object
  ListInvitationsRequest:
    properties: {}
    title: ListInvitationsRequest
    type: object
  ListInvitationsResponse:
    properties:
      Invitations:
        allOf:
          - $ref: '#/definitions/InvitationList'
          - description: The details of the invitations returned by the operation.
      NextToken:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The pagination token to use to request the next page of results.
    type: object
  ListMembersRequest:
    properties: {}
    title: ListMembersRequest
    type: object
  ListMembersResponse:
    properties:
      Members:
        allOf:
          - $ref: '#/definitions/MemberList'
          - description: Member details returned by the operation.
      NextToken:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The pagination token to use to request the next page of results.
    type: object
  ListOrganizationAdminAccountsRequest:
    properties: {}
    title: ListOrganizationAdminAccountsRequest
    type: object
  ListOrganizationAdminAccountsResponse:
    properties:
      AdminAccounts:
        allOf:
          - $ref: '#/definitions/AdminAccounts'
          - description: The list of Security Hub administrator accounts.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to use to request the next page of results.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags associated with a resource.
    type: object
  LoadBalancerState:
    description: Information about the state of the load balancer.
    properties:
      Code:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The state code. The initial state of the load balancer is
              provisioning.</p> <p>After the load balancer is fully set up and
              ready to route traffic, its state is active.</p> <p>If the load
              balancer could not be set up, its state is failed. </p>
      Reason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the state.
    type: object
  Long:
    type: integer
  Malware:
    description: A list of malware related to a finding.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the malware that was observed.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The file system path of the malware that was observed.
      State:
        allOf:
          - $ref: '#/definitions/MalwareState'
          - description: The state of the malware that was observed.
      Type:
        allOf:
          - $ref: '#/definitions/MalwareType'
          - description: The type of the malware that was observed.
    required:
      - Name
    type: object
  MalwareList:
    items:
      $ref: '#/definitions/Malware'
    type: array
  MalwareState:
    enum:
      - OBSERVED
      - REMOVAL_FAILED
      - REMOVED
    type: string
  MalwareType:
    enum:
      - ADWARE
      - BLENDED_THREAT
      - BOTNET_AGENT
      - COIN_MINER
      - EXPLOIT_KIT
      - KEYLOGGER
      - MACRO
      - POTENTIALLY_UNWANTED
      - SPYWARE
      - RANSOMWARE
      - REMOTE_ACCESS
      - ROOTKIT
      - TROJAN
      - VIRUS
      - WORM
    type: string
  MapFilter:
    description: >-
      A map filter for querying findings. Each map filter provides the field to
      check, the value to look for, and the comparison operator.
    properties:
      Comparison:
        allOf:
          - $ref: '#/definitions/MapFilterComparison'
          - description: >-
              <p>The condition to apply to the key value when querying for
              findings with a map filter.</p> <p>To search for values that
              exactly match the filter value, use <code>EQUALS</code>. For
              example, for the <code>ResourceTags</code> field, the filter
              <code>Department EQUALS Security</code> matches findings that have
              the value <code>Security</code> for the tag
              <code>Department</code>.</p> <p>To search for values other than
              the filter value, use <code>NOT_EQUALS</code>. For example, for
              the <code>ResourceTags</code> field, the filter <code>Department
              NOT_EQUALS Finance</code> matches findings that do not have the
              value <code>Finance</code> for the tag
              <code>Department</code>.</p> <p> <code>EQUALS</code> filters on
              the same field are joined by <code>OR</code>. A finding matches if
              it matches any one of those filters.</p> <p>
              <code>NOT_EQUALS</code> filters on the same field are joined by
              <code>AND</code>. A finding matches only if it matches all of
              those filters.</p> <p>You cannot have both an <code>EQUALS</code>
              filter and a <code>NOT_EQUALS</code> filter on the same field.</p>
      Key:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The key of the map filter. For example, for
              <code>ResourceTags</code>, <code>Key</code> identifies the name of
              the tag. For <code>UserDefinedFields</code>, <code>Key</code> is
              the name of the field.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The value for the key in the map filter. Filter values are case
              sensitive. For example, one of the values for a tag called
              <code>Department</code> might be <code>Security</code>. If you
              provide <code>security</code> as the filter value, then there is
              no match.
    type: object
  MapFilterComparison:
    enum:
      - EQUALS
      - NOT_EQUALS
    type: string
  MapFilterList:
    items:
      $ref: '#/definitions/MapFilter'
    type: array
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  Member:
    description: The details about a member account.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The Amazon Web Services account ID of the member account.
      AdministratorId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The Amazon Web Services account ID of the Security Hub
              administrator account associated with this member account.
      Email:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The email address of the member account.
      InvitedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp for the date and time when the invitation was sent to
              the member account.
      MasterId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>This is replaced by <code>AdministratorID</code>.</p> <p>The
              Amazon Web Services account ID of the Security Hub administrator
              account associated with this member account.</p>This field is
              deprecated, use AdministratorId instead.
            x-deprecated: true
      MemberStatus:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The status of the relationship between the member account and
              its administrator account. </p> <p>The status can have one of the
              following values:</p> <ul> <li> <p> <code>CREATED</code> -
              Indicates that the administrator account added the member account,
              but has not yet invited the member account.</p> </li> <li> <p>
              <code>INVITED</code> - Indicates that the administrator account
              invited the member account. The member account has not yet
              responded to the invitation.</p> </li> <li> <p>
              <code>ENABLED</code> - Indicates that the member account is
              currently active. For manually invited member accounts, indicates
              that the member account accepted the invitation.</p> </li> <li>
              <p> <code>REMOVED</code> - Indicates that the administrator
              account disassociated the member account.</p> </li> <li> <p>
              <code>RESIGNED</code> - Indicates that the member account
              disassociated themselves from the administrator account.</p> </li>
              <li> <p> <code>DELETED</code> - Indicates that the administrator
              account deleted the member account.</p> </li> <li> <p>
              <code>ACCOUNT_SUSPENDED</code> - Indicates that an organization
              account was suspended from Amazon Web Services at the same time
              that the administrator account tried to enable the organization
              account as a member account.</p> </li> </ul>
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The timestamp for the date and time when the member account was
              updated.
    type: object
  MemberList:
    items:
      $ref: '#/definitions/Member'
    type: array
  Network:
    description: The details of network-related information about a finding.
    properties:
      DestinationDomain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The destination domain of network-related information about a
              finding.
      DestinationIpV4:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The destination IPv4 address of network-related information about
              a finding.
      DestinationIpV6:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The destination IPv6 address of network-related information about
              a finding.
      DestinationPort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The destination port of network-related information about a
              finding.
      Direction:
        allOf:
          - $ref: '#/definitions/NetworkDirection'
          - description: The direction of network traffic associated with a finding.
      OpenPortRange:
        allOf:
          - $ref: '#/definitions/PortRange'
          - description: The range of open ports that is present on the network.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The protocol of network-related information about a finding.
      SourceDomain:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source domain of network-related information about a finding.
      SourceIpV4:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The source IPv4 address of network-related information about a
              finding.
      SourceIpV6:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The source IPv6 address of network-related information about a
              finding.
      SourceMac:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The source media access control (MAC) address of network-related
              information about a finding.
      SourcePort:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The source port of network-related information about a finding.
    type: object
  NetworkConnectionAction:
    description: >-
      Provided if <code>ActionType</code> is <code>NETWORK_CONNECTION</code>. It
      provides details about the attempted network connection that was detected.
    properties:
      Blocked:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the network connection attempt was blocked.
      ConnectionDirection:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The direction of the network connection request (<code>IN</code>
              or <code>OUT</code>).
      LocalPortDetails:
        allOf:
          - $ref: '#/definitions/ActionLocalPortDetails'
          - description: Information about the port on the EC2 instance.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The protocol used to make the network connection request.
      RemoteIpDetails:
        allOf:
          - $ref: '#/definitions/ActionRemoteIpDetails'
          - description: >-
              Information about the remote IP address that issued the network
              connection request.
      RemotePortDetails:
        allOf:
          - $ref: '#/definitions/ActionRemotePortDetails'
          - description: Information about the port on the remote IP address.
    type: object
  NetworkDirection:
    enum:
      - IN
      - OUT
    type: string
  NetworkHeader:
    description: >-
      Details about a network path component that occurs before or after the
      current component.
    properties:
      Destination:
        allOf:
          - $ref: '#/definitions/NetworkPathComponentDetails'
          - description: Information about the destination of the component.
      Protocol:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The protocol used for the component.
      Source:
        allOf:
          - $ref: '#/definitions/NetworkPathComponentDetails'
          - description: Information about the origin of the component.
    type: object
  NetworkPathComponent:
    description: Information about a network path component.
    properties:
      ComponentId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of a component in the network path.
      ComponentType:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The type of component.
      Egress:
        allOf:
          - $ref: '#/definitions/NetworkHeader'
          - description: >-
              Information about the component that comes after the current
              component in the network path.
      Ingress:
        allOf:
          - $ref: '#/definitions/NetworkHeader'
          - description: >-
              Information about the component that comes before the current node
              in the network path.
    type: object
  NetworkPathComponentDetails:
    description: >-
      Information about the destination of the next component in the network
      path.
    properties:
      Address:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The IP addresses of the destination.
      PortRanges:
        allOf:
          - $ref: '#/definitions/PortRangeList'
          - description: A list of port ranges for the destination.
    type: object
  NetworkPathList:
    items:
      $ref: '#/definitions/NetworkPathComponent'
    type: array
  NextToken:
    type: string
  NonEmptyString:
    pattern: .*\S.*
    type: string
  NonEmptyStringList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  Note:
    description: A user-defined note added to a finding.
    properties:
      Text:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The text of a note.
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The timestamp of when the note was updated.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      UpdatedBy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The principal that created a note.
    required:
      - Text
      - UpdatedBy
      - UpdatedAt
    type: object
  NoteUpdate:
    description: The updated note.
    properties:
      Text:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The updated note text.
      UpdatedBy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The principal that updated the note.
    required:
      - Text
      - UpdatedBy
    type: object
  NumberFilter:
    description: A number filter for querying findings.
    properties:
      Eq:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              The equal-to condition to be applied to a single field when
              querying for findings.
      Gte:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              The greater-than-equal condition to be applied to a single field
              when querying for findings. 
      Lte:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              The less-than-equal condition to be applied to a single field when
              querying for findings. 
    type: object
  NumberFilterList:
    items:
      $ref: '#/definitions/NumberFilter'
    type: array
  Occurrences:
    description: The detected occurrences of sensitive data.
    properties:
      Cells:
        allOf:
          - $ref: '#/definitions/Cells'
          - description: >-
              Occurrences of sensitive data detected in Microsoft Excel
              workbooks, comma-separated value (CSV) files, or tab-separated
              value (TSV) files.
      LineRanges:
        allOf:
          - $ref: '#/definitions/Ranges'
          - description: >-
              Occurrences of sensitive data detected in a non-binary text file
              or a Microsoft Word file. Non-binary text files include files such
              as HTML, XML, JSON, and TXT files.
      OffsetRanges:
        allOf:
          - $ref: '#/definitions/Ranges'
          - description: Occurrences of sensitive data detected in a binary text file.
      Pages:
        allOf:
          - $ref: '#/definitions/Pages'
          - description: >-
              Occurrences of sensitive data in an Adobe Portable Document Format
              (PDF) file.
      Records:
        allOf:
          - $ref: '#/definitions/Records'
          - description: >-
              Occurrences of sensitive data in an Apache Avro object container
              or an Apache Parquet file.
    type: object
  Page:
    description: >-
      An occurrence of sensitive data in an Adobe Portable Document Format (PDF)
      file.
    properties:
      LineRange:
        allOf:
          - $ref: '#/definitions/Range'
          - description: >-
              An occurrence of sensitive data detected in a non-binary text file
              or a Microsoft Word file. Non-binary text files include files such
              as HTML, XML, JSON, and TXT files.
      OffsetRange:
        allOf:
          - $ref: '#/definitions/Range'
          - description: An occurrence of sensitive data detected in a binary text file.
      PageNumber:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The page number of the page that contains the sensitive data.
    type: object
  Pages:
    items:
      $ref: '#/definitions/Page'
    type: array
  Partition:
    enum:
      - aws
      - aws-cn
      - aws-us-gov
    type: string
  PatchSummary:
    description: >-
      Provides an overview of the patch compliance status for an instance
      against a selected compliance standard.
    properties:
      FailedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of patches from the compliance standard that failed to
              install.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The identifier of the compliance standard that was used to
              determine the patch compliance status.
      InstalledCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of patches from the compliance standard that were
              installed successfully.
      InstalledOtherCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of installed patches that are not part of the
              compliance standard.
      InstalledPendingReboot:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of patches that were applied, but that require the
              instance to be rebooted in order to be marked as installed.
      InstalledRejectedCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of patches that are installed but are also on a list of
              patches that the customer rejected.
      MissingCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The number of patches that are part of the compliance standard but
              are not installed. The count includes patches that failed to
              install.
      Operation:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of patch operation performed. For Patch Manager, the
              values are <code>SCAN</code> and <code>INSTALL</code>. 
      OperationEndTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the operation completed.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      OperationStartTime:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the operation started.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      RebootOption:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The reboot option specified for the instance.
    required:
      - Id
    type: object
  PortProbeAction:
    description: >-
      Provided if <code>ActionType</code> is <code>PORT_PROBE</code>. It
      provides details about the attempted port probe that was detected.
    properties:
      Blocked:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Indicates whether the port probe was blocked.
      PortProbeDetails:
        allOf:
          - $ref: '#/definitions/PortProbeDetailList'
          - description: Information about the ports affected by the port probe.
    type: object
  PortProbeDetail:
    description: >-
      A port scan that was part of the port probe. For each scan,
      PortProbeDetails provides information about the local IP address and port
      that were scanned, and the remote IP address that the scan originated
      from.
    properties:
      LocalIpDetails:
        allOf:
          - $ref: '#/definitions/ActionLocalIpDetails'
          - description: >-
              Provides information about the IP address where the scanned port
              is located.
      LocalPortDetails:
        allOf:
          - $ref: '#/definitions/ActionLocalPortDetails'
          - description: Provides information about the port that was scanned.
      RemoteIpDetails:
        allOf:
          - $ref: '#/definitions/ActionRemoteIpDetails'
          - description: >-
              Provides information about the remote IP address that performed
              the scan.
    type: object
  PortProbeDetailList:
    items:
      $ref: '#/definitions/PortProbeDetail'
    type: array
  PortRange:
    description: A range of ports.
    properties:
      Begin:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The first port in the port range.
      End:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The last port in the port range.
    type: object
  PortRangeFromTo:
    description: A range of ports.
    properties:
      From:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The first port in the port range.
      To:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The last port in the port range.
    type: object
  PortRangeList:
    items:
      $ref: '#/definitions/PortRange'
    type: array
  ProcessDetails:
    description: The details of process-related information about a finding.
    properties:
      LaunchedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the process was launched.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the process.
      ParentPid:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The parent process ID.
      Path:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The path to the process executable.
      Pid:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The process ID.
      TerminatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the process was terminated.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    type: object
  Product:
    description: Contains details about a product.
    properties:
      ActivationUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The URL to the service or product documentation about the
              integration with Security Hub, including how to activate the
              integration.
      Categories:
        allOf:
          - $ref: '#/definitions/CategoryList'
          - description: The categories assigned to the product.
      CompanyName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the company that provides the product.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the product.
      IntegrationTypes:
        allOf:
          - $ref: '#/definitions/IntegrationTypeList'
          - description: >-
              <p>The types of integration that the product supports. Available
              values are the following.</p> <ul> <li> <p>
              <code>SEND_FINDINGS_TO_SECURITY_HUB</code> - The integration sends
              findings to Security Hub.</p> </li> <li> <p>
              <code>RECEIVE_FINDINGS_FROM_SECURITY_HUB</code> - The integration
              receives findings from Security Hub.</p> </li> <li> <p>
              <code>UPDATE_FINDINGS_IN_SECURITY_HUB</code> - The integration
              does not send new findings to Security Hub, but does make updates
              to the findings that it receives from Security Hub.</p> </li>
              </ul>
      MarketplaceUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>For integrations with Amazon Web Services services, the Amazon
              Web Services Console URL from which to activate the service.</p>
              <p>For integrations with third-party products, the Amazon Web
              Services Marketplace URL from which to subscribe to or purchase
              the product.</p>
      ProductArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN assigned to the product.
      ProductName:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the product.
      ProductSubscriptionResourcePolicy:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The resource policy associated with the product.
    required:
      - ProductArn
    type: object
  ProductSubscriptionArnList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  ProductsList:
    items:
      $ref: '#/definitions/Product'
    type: array
  Range:
    description: Identifies where the sensitive data begins and ends.
    properties:
      End:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The number of lines (for a line range) or characters (for an
              offset range) from the beginning of the file to the end of the
              sensitive data.
      Start:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The number of lines (for a line range) or characters (for an
              offset range) from the beginning of the file to the end of the
              sensitive data.
      StartColumn:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              In the line where the sensitive data starts, the column within the
              line where the sensitive data starts.
    type: object
  Ranges:
    items:
      $ref: '#/definitions/Range'
    type: array
  RatioScale:
    maximum: 100
    minimum: 0
    type: integer
  Recommendation:
    description: A recommendation on how to remediate the issue identified in a finding.
    properties:
      Text:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Describes the recommended steps to take to remediate an issue
              identified in a finding.
      Url:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A URL to a page or site that contains information about how to
              remediate a finding.
    type: object
  Record:
    description: >-
      An occurrence of sensitive data in an Apache Avro object container or an
      Apache Parquet file.
    properties:
      JsonPath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The path, as a JSONPath expression, to the field in the record
              that contains the data. If the field name is longer than 20
              characters, it is truncated. If the path is longer than 250
              characters, it is truncated.
      RecordIndex:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The record index, starting from 0, for the record that contains
              the data.
    type: object
  RecordState:
    enum:
      - ACTIVE
      - ARCHIVED
    type: string
  Records:
    items:
      $ref: '#/definitions/Record'
    type: array
  RelatedFinding:
    description: Details about a related finding.
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The product-generated identifier for a related finding.
      ProductArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the product that generated a related finding.
    required:
      - ProductArn
      - Id
    type: object
  RelatedFindingList:
    items:
      $ref: '#/definitions/RelatedFinding'
    type: array
  RelatedRequirementsList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  Remediation:
    description: Details about the remediation steps for a finding.
    properties:
      Recommendation:
        allOf:
          - $ref: '#/definitions/Recommendation'
          - description: >-
              A recommendation on the steps to take to remediate the issue
              identified by a finding.
    type: object
  Resource:
    description: A resource related to a finding.
    properties:
      DataClassification:
        allOf:
          - $ref: '#/definitions/DataClassificationDetails'
          - description: >-
              Contains information about sensitive data that was detected on the
              resource.
      Details:
        allOf:
          - $ref: '#/definitions/ResourceDetails'
          - description: Additional details about the resource related to a finding.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The canonical identifier for the given resource type.
      Partition:
        allOf:
          - $ref: '#/definitions/Partition'
          - description: >-
              The canonical Amazon Web Services partition name that the Region
              is assigned to.
      Region:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The canonical Amazon Web Services external Region name where this
              resource is located.
      ResourceRole:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              Identifies the role of the resource in the finding. A resource is
              either the actor or target of the finding activity,
      Tags:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              A list of Amazon Web Services tags associated with a resource at
              the time the finding was processed.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>The type of the resource that details are provided for. If
              possible, set <code>Type</code> to one of the supported resource
              types. For example, if the resource is an EC2 instance, then set
              <code>Type</code> to <code>AwsEc2Instance</code>.</p> <p>If the
              resource does not match any of the provided types, then set
              <code>Type</code> to <code>Other</code>. </p>
    required:
      - Type
      - Id
    type: object
  ResourceArn:
    pattern: '^arn:aws:securityhub:.*'
    type: string
  ResourceConflictException: {}
  ResourceDetails:
    description: >-
      <p>Additional details about a resource related to a finding.</p> <p>To
      provide the details, use the object that corresponds to the resource type.
      For example, if the resource type is <code>AwsEc2Instance</code>, then you
      use the <code>AwsEc2Instance</code> object to provide the details.</p>
      <p>If the type-specific object does not contain all of the fields you want
      to populate, then you use the <code>Other</code> object to populate those
      additional fields.</p> <p>You also use the <code>Other</code> object to
      populate the details when the selected type does not have a corresponding
      object.</p>
    properties:
      AwsApiGatewayRestApi:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayRestApiDetails'
          - description: >-
              Provides information about a REST API in version 1 of Amazon API
              Gateway.
      AwsApiGatewayStage:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayStageDetails'
          - description: Provides information about a version 1 Amazon API Gateway stage.
      AwsApiGatewayV2Api:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayV2ApiDetails'
          - description: Provides information about a version 2 API in Amazon API Gateway.
      AwsApiGatewayV2Stage:
        allOf:
          - $ref: '#/definitions/AwsApiGatewayV2StageDetails'
          - description: >-
              Provides information about a version 2 stage for Amazon API
              Gateway.
      AwsAutoScalingAutoScalingGroup:
        allOf:
          - $ref: '#/definitions/AwsAutoScalingAutoScalingGroupDetails'
          - description: Details for an autoscaling group.
      AwsAutoScalingLaunchConfiguration:
        allOf:
          - $ref: '#/definitions/AwsAutoScalingLaunchConfigurationDetails'
          - description: Provides details about a launch configuration.
      AwsCertificateManagerCertificate:
        allOf:
          - $ref: '#/definitions/AwsCertificateManagerCertificateDetails'
          - description: Provides details about an Certificate Manager certificate.
      AwsCloudFrontDistribution:
        allOf:
          - $ref: '#/definitions/AwsCloudFrontDistributionDetails'
          - description: Details about a CloudFront distribution.
      AwsCloudTrailTrail:
        allOf:
          - $ref: '#/definitions/AwsCloudTrailTrailDetails'
          - description: Provides details about a CloudTrail trail.
      AwsCodeBuildProject:
        allOf:
          - $ref: '#/definitions/AwsCodeBuildProjectDetails'
          - description: Details for an CodeBuild project.
      AwsDynamoDbTable:
        allOf:
          - $ref: '#/definitions/AwsDynamoDbTableDetails'
          - description: Details about a DynamoDB table.
      AwsEc2Eip:
        allOf:
          - $ref: '#/definitions/AwsEc2EipDetails'
          - description: Details about an Elastic IP address.
      AwsEc2Instance:
        allOf:
          - $ref: '#/definitions/AwsEc2InstanceDetails'
          - description: Details about an EC2 instance related to a finding.
      AwsEc2NetworkAcl:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkAclDetails'
          - description: Details about an EC2 network access control list (ACL).
      AwsEc2NetworkInterface:
        allOf:
          - $ref: '#/definitions/AwsEc2NetworkInterfaceDetails'
          - description: Details for an EC2 network interface.
      AwsEc2SecurityGroup:
        allOf:
          - $ref: '#/definitions/AwsEc2SecurityGroupDetails'
          - description: Details for an EC2 security group.
      AwsEc2Subnet:
        allOf:
          - $ref: '#/definitions/AwsEc2SubnetDetails'
          - description: Details about a subnet in Amazon EC2.
      AwsEc2Volume:
        allOf:
          - $ref: '#/definitions/AwsEc2VolumeDetails'
          - description: Details for an EC2 volume.
      AwsEc2Vpc:
        allOf:
          - $ref: '#/definitions/AwsEc2VpcDetails'
          - description: Details for an EC2 VPC.
      AwsEc2VpnConnection:
        allOf:
          - $ref: '#/definitions/AwsEc2VpnConnectionDetails'
          - description: Details about an EC2 VPN connection.
      AwsEcrContainerImage:
        allOf:
          - $ref: '#/definitions/AwsEcrContainerImageDetails'
          - description: information about an Amazon ECR image.
      AwsEcsCluster:
        allOf:
          - $ref: '#/definitions/AwsEcsClusterDetails'
          - description: Details about an ECS cluster.
      AwsEcsService:
        allOf:
          - $ref: '#/definitions/AwsEcsServiceDetails'
          - description: Details about a service within an ECS cluster.
      AwsEcsTaskDefinition:
        allOf:
          - $ref: '#/definitions/AwsEcsTaskDefinitionDetails'
          - description: >-
              Details about a task definition. A task definition describes the
              container and volume definitions of an Amazon Elastic Container
              Service task.
      AwsElasticBeanstalkEnvironment:
        allOf:
          - $ref: '#/definitions/AwsElasticBeanstalkEnvironmentDetails'
          - description: Details about an Elastic Beanstalk environment.
      AwsElasticsearchDomain:
        allOf:
          - $ref: '#/definitions/AwsElasticsearchDomainDetails'
          - description: Details for an Elasticsearch domain.
      AwsElbLoadBalancer:
        allOf:
          - $ref: '#/definitions/AwsElbLoadBalancerDetails'
          - description: Contains details about a Classic Load Balancer.
      AwsElbv2LoadBalancer:
        allOf:
          - $ref: '#/definitions/AwsElbv2LoadBalancerDetails'
          - description: Details about a load balancer.
      AwsIamAccessKey:
        allOf:
          - $ref: '#/definitions/AwsIamAccessKeyDetails'
          - description: Details about an IAM access key related to a finding.
      AwsIamGroup:
        allOf:
          - $ref: '#/definitions/AwsIamGroupDetails'
          - description: Contains details about an IAM group.
      AwsIamPolicy:
        allOf:
          - $ref: '#/definitions/AwsIamPolicyDetails'
          - description: Details about an IAM permissions policy.
      AwsIamRole:
        allOf:
          - $ref: '#/definitions/AwsIamRoleDetails'
          - description: Details about an IAM role.
      AwsIamUser:
        allOf:
          - $ref: '#/definitions/AwsIamUserDetails'
          - description: Details about an IAM user.
      AwsKmsKey:
        allOf:
          - $ref: '#/definitions/AwsKmsKeyDetails'
          - description: Details about an KMS key.
      AwsLambdaFunction:
        allOf:
          - $ref: '#/definitions/AwsLambdaFunctionDetails'
          - description: Details about a Lambda function.
      AwsLambdaLayerVersion:
        allOf:
          - $ref: '#/definitions/AwsLambdaLayerVersionDetails'
          - description: Details for a Lambda layer version.
      AwsRdsDbCluster:
        allOf:
          - $ref: '#/definitions/AwsRdsDbClusterDetails'
          - description: Details about an Amazon RDS database cluster.
      AwsRdsDbClusterSnapshot:
        allOf:
          - $ref: '#/definitions/AwsRdsDbClusterSnapshotDetails'
          - description: Details about an Amazon RDS database cluster snapshot.
      AwsRdsDbInstance:
        allOf:
          - $ref: '#/definitions/AwsRdsDbInstanceDetails'
          - description: Details about an Amazon RDS database instance.
      AwsRdsDbSnapshot:
        allOf:
          - $ref: '#/definitions/AwsRdsDbSnapshotDetails'
          - description: Details about an Amazon RDS database snapshot.
      AwsRdsEventSubscription:
        allOf:
          - $ref: '#/definitions/AwsRdsEventSubscriptionDetails'
          - description: Details about an RDS event notification subscription.
      AwsRedshiftCluster:
        allOf:
          - $ref: '#/definitions/AwsRedshiftClusterDetails'
          - description: Contains details about an Amazon Redshift cluster.
      AwsS3AccountPublicAccessBlock:
        allOf:
          - $ref: '#/definitions/AwsS3AccountPublicAccessBlockDetails'
          - description: >-
              Details about the Amazon S3 Public Access Block configuration for
              an account.
      AwsS3Bucket:
        allOf:
          - $ref: '#/definitions/AwsS3BucketDetails'
          - description: Details about an S3 bucket related to a finding.
      AwsS3Object:
        allOf:
          - $ref: '#/definitions/AwsS3ObjectDetails'
          - description: Details about an S3 object related to a finding.
      AwsSecretsManagerSecret:
        allOf:
          - $ref: '#/definitions/AwsSecretsManagerSecretDetails'
          - description: Details about a Secrets Manager secret.
      AwsSnsTopic:
        allOf:
          - $ref: '#/definitions/AwsSnsTopicDetails'
          - description: Details about an SNS topic.
      AwsSqsQueue:
        allOf:
          - $ref: '#/definitions/AwsSqsQueueDetails'
          - description: Details about an SQS queue.
      AwsSsmPatchCompliance:
        allOf:
          - $ref: '#/definitions/AwsSsmPatchComplianceDetails'
          - description: >-
              Provides information about the state of a patch on an instance
              based on the patch baseline that was used to patch the instance.
      AwsWafWebAcl:
        allOf:
          - $ref: '#/definitions/AwsWafWebAclDetails'
          - description: Details for an WAF WebACL.
      Container:
        allOf:
          - $ref: '#/definitions/ContainerDetails'
          - description: Details about a container resource related to a finding.
      Other:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: >-
              <p>Details about a resource that are not available in a
              type-specific details object. Use the <code>Other</code> object in
              the following cases.</p> <ul> <li> <p>The type-specific object
              does not contain all of the fields that you want to populate. In
              this case, first use the type-specific object to populate those
              fields. Use the <code>Other</code> object to populate the fields
              that are missing from the type-specific object.</p> </li> <li>
              <p>The resource type does not have a corresponding object. This
              includes resources for which the type is <code>Other</code>. </p>
              </li> </ul>
    type: object
  ResourceList:
    items:
      $ref: '#/definitions/Resource'
    type: array
  ResourceNotFoundException: {}
  Result:
    description: Details about the account that was not processed.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              An Amazon Web Services account ID of the account that was not
              processed.
      ProcessingResult:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The reason that the account was not processed.
    type: object
  ResultList:
    items:
      $ref: '#/definitions/Result'
    type: array
  SecurityGroups:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  SensitiveDataDetections:
    description: The list of detected instances of sensitive data.
    properties:
      Count:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The total number of occurrences of sensitive data that were
              detected.
      Occurrences:
        allOf:
          - $ref: '#/definitions/Occurrences'
          - description: Details about the sensitive data that was detected.
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The type of sensitive data that was detected. For example, the
              type might indicate that the data is an email address.
    type: object
  SensitiveDataDetectionsList:
    items:
      $ref: '#/definitions/SensitiveDataDetections'
    type: array
  SensitiveDataResult:
    description: >-
      Contains a detected instance of sensitive data that are based on built-in
      identifiers.
    properties:
      Category:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The category of sensitive data that was detected. For example, the
              category can indicate that the sensitive data involved
              credentials, financial information, or personal information.
      Detections:
        allOf:
          - $ref: '#/definitions/SensitiveDataDetectionsList'
          - description: The list of detected instances of sensitive data.
      TotalCount:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The total number of occurrences of sensitive data.
    type: object
  SensitiveDataResultList:
    items:
      $ref: '#/definitions/SensitiveDataResult'
    type: array
  Severity:
    description: >-
      <p>The severity of the finding.</p> <p>The finding provider can provide
      the initial severity. The finding provider can only update the severity if
      it has not been updated using <code>BatchUpdateFindings</code>.</p> <p>The
      finding must have either <code>Label</code> or <code>Normalized</code>
      populated. If only one of these attributes is populated, then Security Hub
      automatically populates the other one. If neither attribute is populated,
      then the finding is invalid. <code>Label</code> is the preferred
      attribute.</p>
    properties:
      Label:
        allOf:
          - $ref: '#/definitions/SeverityLabel'
          - description: >-
              <p>The severity value of the finding. The allowed values are the
              following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue
              was found.</p> </li> <li> <p> <code>LOW</code> - The issue does
              not require action on its own.</p> </li> <li> <p>
              <code>MEDIUM</code> - The issue must be addressed but not
              urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be
              addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code>
              - The issue must be remediated immediately to avoid it
              escalating.</p> </li> </ul> <p>If you provide
              <code>Normalized</code> and do not provide <code>Label</code>,
              then <code>Label</code> is set automatically as follows. </p> <ul>
              <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 -
              <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code>
              </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li>
              <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>
      Normalized:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>Deprecated. The normalized severity of a finding. This
              attribute is being deprecated. Instead of providing
              <code>Normalized</code>, provide <code>Label</code>.</p> <p>If you
              provide <code>Label</code> and do not provide
              <code>Normalized</code>, then <code>Normalized</code> is set
              automatically as follows.</p> <ul> <li> <p>
              <code>INFORMATIONAL</code> - 0</p> </li> <li> <p> <code>LOW</code>
              - 1</p> </li> <li> <p> <code>MEDIUM</code> - 40</p> </li> <li> <p>
              <code>HIGH</code> - 70</p> </li> <li> <p> <code>CRITICAL</code> -
              90</p> </li> </ul>
      Original:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The native severity from the finding product that generated the
              finding.
      Product:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              <p>Deprecated. This attribute is being deprecated. Instead of
              providing <code>Product</code>, provide <code>Original</code>.</p>
              <p>The native severity as defined by the Amazon Web Services
              service or integrated partner product that generated the
              finding.</p>
    type: object
  SeverityLabel:
    enum:
      - INFORMATIONAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    type: string
  SeverityRating:
    enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    type: string
  SeverityUpdate:
    description: Updates to the severity information for a finding.
    properties:
      Label:
        allOf:
          - $ref: '#/definitions/SeverityLabel'
          - description: >-
              <p>The severity value of the finding. The allowed values are the
              following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue
              was found.</p> </li> <li> <p> <code>LOW</code> - The issue does
              not require action on its own.</p> </li> <li> <p>
              <code>MEDIUM</code> - The issue must be addressed but not
              urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be
              addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code>
              - The issue must be remediated immediately to avoid it
              escalating.</p> </li> </ul>
      Normalized:
        allOf:
          - $ref: '#/definitions/RatioScale'
          - description: >-
              <p>The normalized severity for the finding. This attribute is to
              be deprecated in favor of <code>Label</code>.</p> <p>If you
              provide <code>Normalized</code> and do not provide
              <code>Label</code>, <code>Label</code> is set automatically as
              follows.</p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p>
              </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 -
              <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code>
              </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>
      Product:
        allOf:
          - $ref: '#/definitions/Double'
          - description: >-
              The native severity as defined by the Amazon Web Services service
              or integrated partner product that generated the finding.
    type: object
  SizeBytes:
    type: integer
  SoftwarePackage:
    description: Information about a software package.
    properties:
      Architecture:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The architecture used for the software package.
      Epoch:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The epoch of the software package.
      FilePath:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The file system path to the package manager inventory file.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the software package.
      PackageManager:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source of the package.
      Release:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The release of the software package.
      Version:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The version of the software package.
    type: object
  SoftwarePackageList:
    items:
      $ref: '#/definitions/SoftwarePackage'
    type: array
  SortCriteria:
    items:
      $ref: '#/definitions/SortCriterion'
    type: array
  SortCriterion:
    description: A collection of finding attributes used to sort findings.
    properties:
      Field:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The finding attribute used to sort findings.
      SortOrder:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: The order used to sort findings.
    type: object
  SortOrder:
    enum:
      - asc
      - desc
    type: string
  Standard:
    description: Provides information about a specific standard.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: A description of the standard.
      EnabledByDefault:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether the standard is enabled by default. When Security Hub
              is enabled from the console, if a standard is enabled by default,
              the check box for that standard is selected by default.</p>
              <p>When Security Hub is enabled using the
              <code>EnableSecurityHub</code> API operation, the standard is
              enabled by default unless <code>EnableDefaultStandards</code> is
              set to <code>false</code>.</p>
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the standard.
      StandardsArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of a standard.
    type: object
  Standards:
    items:
      $ref: '#/definitions/Standard'
    type: array
  StandardsControl:
    description: Details for an individual security standard control.
    properties:
      ControlId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the security standard control.
      ControlStatus:
        allOf:
          - $ref: '#/definitions/ControlStatus'
          - description: >-
              The current status of the security standard control. Indicates
              whether the control is enabled or disabled. Security Hub does not
              check against disabled controls.
      ControlStatusUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time that the status of the security standard control
              was most recently updated.
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The longer description of the security standard control. Provides
              information about what the control is checking for.
      DisabledReason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The reason provided for the most recent change in status for the
              control.
      RelatedRequirements:
        allOf:
          - $ref: '#/definitions/RelatedRequirementsList'
          - description: The list of requirements that are related to this control.
      RemediationUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A link to remediation information for the control in the Security
              Hub user documentation.
      SeverityRating:
        allOf:
          - $ref: '#/definitions/SeverityRating'
          - description: >-
              <p>The severity of findings generated from this security standard
              control.</p> <p>The finding severity is based on an assessment of
              how easy it would be to compromise Amazon Web Services resources
              if the issue is detected.</p>
      StandardsControlArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of the security standard control.
      Title:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The title of the security standard control.
    type: object
  StandardsControls:
    items:
      $ref: '#/definitions/StandardsControl'
    type: array
  StandardsInputParameterMap:
    additionalProperties:
      $ref: '#/definitions/NonEmptyString'
    type: object
  StandardsStatus:
    enum:
      - PENDING
      - READY
      - FAILED
      - DELETING
      - INCOMPLETE
    type: string
  StandardsSubscription:
    description: A resource that represents your subscription to a supported standard.
    properties:
      StandardsArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The ARN of a standard.
      StandardsInput:
        allOf:
          - $ref: '#/definitions/StandardsInputParameterMap'
          - description: A key-value pair of input for the standard.
      StandardsStatus:
        allOf:
          - $ref: '#/definitions/StandardsStatus'
          - description: >-
              <p>The status of the standard subscription.</p> <p>The status
              values are as follows:</p> <ul> <li> <p> <code>PENDING</code> -
              Standard is in the process of being enabled.</p> </li> <li> <p>
              <code>READY</code> - Standard is enabled.</p> </li> <li> <p>
              <code>INCOMPLETE</code> - Standard could not be enabled
              completely. Some controls may not be available.</p> </li> <li> <p>
              <code>DELETING</code> - Standard is in the process of being
              disabled.</p> </li> <li> <p> <code>FAILED</code> - Standard could
              not be disabled.</p> </li> </ul>
      StandardsSubscriptionArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of a resource that represents your subscription to a
              supported standard.
    required:
      - StandardsSubscriptionArn
      - StandardsArn
      - StandardsInput
      - StandardsStatus
    type: object
  StandardsSubscriptionArns:
    items:
      $ref: '#/definitions/NonEmptyString'
    maxItems: 25
    minItems: 1
    type: array
  StandardsSubscriptionRequest:
    description: The standard that you want to enable.
    properties:
      StandardsArn:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The ARN of the standard that you want to enable. To view the list
              of available standards and their ARNs, use the
              <code>DescribeStandards</code> operation.
      StandardsInput:
        allOf:
          - $ref: '#/definitions/StandardsInputParameterMap'
          - description: A key-value pair of input for the standard.
    required:
      - StandardsArn
    type: object
  StandardsSubscriptionRequests:
    items:
      $ref: '#/definitions/StandardsSubscriptionRequest'
    maxItems: 25
    minItems: 1
    type: array
  StandardsSubscriptions:
    items:
      $ref: '#/definitions/StandardsSubscription'
    type: array
  StatusReason:
    description: >-
      Provides additional context for the value of
      <code>Compliance.Status</code>.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The corresponding description for the status reason code.
      ReasonCode:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A code that represents a reason for the control status. For the
              list of status reason codes and their meanings, see <a
              href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff">Standards-related
              information in the ASFF</a> in the <i>Security Hub User
              Guide</i>. 
    required:
      - ReasonCode
    type: object
  StatusReasonsList:
    items:
      $ref: '#/definitions/StatusReason'
    type: array
  StringFilter:
    description: A string filter for querying findings.
    properties:
      Comparison:
        allOf:
          - $ref: '#/definitions/StringFilterComparison'
          - description: >-
              <p>The condition to apply to a string value when querying for
              findings. To search for values that contain the filter criteria
              value, use one of the following comparison operators:</p> <ul>
              <li> <p>To search for values that exactly match the filter value,
              use <code>EQUALS</code>.</p> <p>For example, the filter
              <code>ResourceType EQUALS AwsEc2SecurityGroup</code> only matches
              findings that have a resource type of
              <code>AwsEc2SecurityGroup</code>.</p> </li> <li> <p>To search for
              values that start with the filter value, use
              <code>PREFIX</code>.</p> <p>For example, the filter
              <code>ResourceType PREFIX AwsIam</code> matches findings that have
              a resource type that starts with <code>AwsIam</code>. Findings
              with a resource type of <code>AwsIamPolicy</code>,
              <code>AwsIamRole</code>, or <code>AwsIamUser</code> would all
              match.</p> </li> </ul> <p> <code>EQUALS</code> and
              <code>PREFIX</code> filters on the same field are joined by
              <code>OR</code>. A finding matches if it matches any one of those
              filters.</p> <p>To search for values that do not contain the
              filter criteria value, use one of the following comparison
              operators:</p> <ul> <li> <p>To search for values that do not
              exactly match the filter value, use <code>NOT_EQUALS</code>.</p>
              <p>For example, the filter <code>ResourceType NOT_EQUALS
              AwsIamPolicy</code> matches findings that have a resource type
              other than <code>AwsIamPolicy</code>.</p> </li> <li> <p>To search
              for values that do not start with the filter value, use
              <code>PREFIX_NOT_EQUALS</code>.</p> <p>For example, the filter
              <code>ResourceType PREFIX_NOT_EQUALS AwsIam</code> matches
              findings that have a resource type that does not start with
              <code>AwsIam</code>. Findings with a resource type of
              <code>AwsIamPolicy</code>, <code>AwsIamRole</code>, or
              <code>AwsIamUser</code> would all be excluded from the
              results.</p> </li> </ul> <p> <code>NOT_EQUALS</code> and
              <code>PREFIX_NOT_EQUALS</code> filters on the same field are
              joined by <code>AND</code>. A finding matches only if it matches
              all of those filters.</p> <p>For filters on the same field, you
              cannot provide both an <code>EQUALS</code> filter and a
              <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filter.
              Combining filters in this way always returns an error, even if the
              provided filter values would return valid results.</p> <p>You can
              combine <code>PREFIX</code> filters with <code>NOT_EQUALS</code>
              or <code>PREFIX_NOT_EQUALS</code> filters for the same field.
              Security Hub first processes the <code>PREFIX</code> filters, then
              the <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code>
              filters.</p> <p> For example, for the following filter, Security
              Hub first identifies findings that have resource types that start
              with either <code>AwsIAM</code> or <code>AwsEc2</code>. It then
              excludes findings that have a resource type of
              <code>AwsIamPolicy</code> and findings that have a resource type
              of <code>AwsEc2NetworkInterface</code>.</p> <ul> <li> <p>
              <code>ResourceType PREFIX AwsIam</code> </p> </li> <li> <p>
              <code>ResourceType PREFIX AwsEc2</code> </p> </li> <li> <p>
              <code>ResourceType NOT_EQUALS AwsIamPolicy</code> </p> </li> <li>
              <p> <code>ResourceType NOT_EQUALS AwsEc2NetworkInterface</code>
              </p> </li> </ul>
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The string filter value. Filter values are case sensitive. For
              example, the product name for control-based findings is
              <code>Security Hub</code>. If you provide <code>security
              hub</code> as the filter text, then there is no match.
    type: object
  StringFilterComparison:
    enum:
      - EQUALS
      - PREFIX
      - NOT_EQUALS
      - PREFIX_NOT_EQUALS
    type: string
  StringFilterList:
    items:
      $ref: '#/definitions/StringFilter'
    type: array
  StringList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags to add to the resource. You can add up to 50 tags at a
              time. The tag keys can be no longer than 128 characters. The tag
              values can be no longer than 256 characters.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  ThreatIntelIndicator:
    description: Details about the threat intelligence related to a finding.
    properties:
      Category:
        allOf:
          - $ref: '#/definitions/ThreatIntelIndicatorCategory'
          - description: The category of a threat intelligence indicator.
      LastObservedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the most recent instance of a threat
              intelligence indicator was observed.</p> <p>Uses the
              <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      Source:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The source of the threat intelligence indicator.
      SourceUrl:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The URL to the page or site where you can get more information
              about the threat intelligence indicator.
      Type:
        allOf:
          - $ref: '#/definitions/ThreatIntelIndicatorType'
          - description: The type of threat intelligence indicator.
      Value:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The value of a threat intelligence indicator.
    type: object
  ThreatIntelIndicatorCategory:
    enum:
      - BACKDOOR
      - CARD_STEALER
      - COMMAND_AND_CONTROL
      - DROP_SITE
      - EXPLOIT_SITE
      - KEYLOGGER
    type: string
  ThreatIntelIndicatorList:
    items:
      $ref: '#/definitions/ThreatIntelIndicator'
    type: array
  ThreatIntelIndicatorType:
    enum:
      - DOMAIN
      - EMAIL_ADDRESS
      - HASH_MD5
      - HASH_SHA1
      - HASH_SHA256
      - HASH_SHA512
      - IPV4_ADDRESS
      - IPV6_ADDRESS
      - MUTEX
      - PROCESS
      - URL
    type: string
  Timestamp:
    format: date-time
    type: string
  TypeList:
    items:
      $ref: '#/definitions/NonEmptyString'
    type: array
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateActionTargetRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The updated description for the custom action target.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The updated name of the custom action target.
    title: UpdateActionTargetRequest
    type: object
  UpdateActionTargetResponse:
    properties: {}
    type: object
  UpdateFindingsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingFilters'
          - description: >-
              A collection of attributes that specify which findings you want to
              update.
      Note:
        allOf:
          - $ref: '#/definitions/NoteUpdate'
          - description: The updated note for the finding.
      RecordState:
        allOf:
          - $ref: '#/definitions/RecordState'
          - description: The updated record state for the finding.
    required:
      - Filters
    title: UpdateFindingsRequest
    type: object
  UpdateFindingsResponse:
    properties: {}
    type: object
  UpdateInsightRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/AwsSecurityFindingFilters'
          - description: The updated filters that define this insight.
      GroupByAttribute:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              The updated <code>GroupBy</code> attribute that defines this
              insight.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The updated name for the insight.
    title: UpdateInsightRequest
    type: object
  UpdateInsightResponse:
    properties: {}
    type: object
  UpdateOrganizationConfigurationRequest:
    properties:
      AutoEnable:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether to automatically enable Security Hub for new accounts
              in the organization.</p> <p>By default, this is
              <code>false</code>, and new accounts are not added
              automatically.</p> <p>To automatically enable Security Hub for new
              accounts, set this to <code>true</code>.</p>
    required:
      - AutoEnable
    title: UpdateOrganizationConfigurationRequest
    type: object
  UpdateOrganizationConfigurationResponse:
    properties: {}
    type: object
  UpdateSecurityHubConfigurationRequest:
    properties:
      AutoEnableControls:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Whether to automatically enable new controls when they are
              added to standards that are enabled.</p> <p>By default, this is
              set to <code>true</code>, and new controls are enabled
              automatically. To not automatically enable new controls, set this
              to <code>false</code>. </p>
    title: UpdateSecurityHubConfigurationRequest
    type: object
  UpdateSecurityHubConfigurationResponse:
    properties: {}
    type: object
  UpdateStandardsControlRequest:
    properties:
      ControlStatus:
        allOf:
          - $ref: '#/definitions/ControlStatus'
          - description: The updated status of the security standard control.
      DisabledReason:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              A description of the reason why you are disabling a security
              standard control. If you are disabling a control, then this is
              required.
    title: UpdateStandardsControlRequest
    type: object
  UpdateStandardsControlResponse:
    properties: {}
    type: object
  VerificationState:
    enum:
      - UNKNOWN
      - TRUE_POSITIVE
      - FALSE_POSITIVE
      - BENIGN_POSITIVE
    type: string
  Vulnerability:
    description: A vulnerability associated with a finding.
    properties:
      Cvss:
        allOf:
          - $ref: '#/definitions/CvssList'
          - description: CVSS scores from the advisory related to the vulnerability.
      Id:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The identifier of the vulnerability.
      ReferenceUrls:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: >-
              A list of URLs that provide additional information about the
              vulnerability.
      RelatedVulnerabilities:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: List of vulnerabilities that are related to this vulnerability.
      Vendor:
        allOf:
          - $ref: '#/definitions/VulnerabilityVendor'
          - description: >-
              Information about the vendor that generates the vulnerability
              report.
      VulnerablePackages:
        allOf:
          - $ref: '#/definitions/SoftwarePackageList'
          - description: List of software packages that have the vulnerability.
    required:
      - Id
    type: object
  VulnerabilityList:
    items:
      $ref: '#/definitions/Vulnerability'
    type: array
  VulnerabilityVendor:
    description: A vendor that generates a vulnerability report.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The name of the vendor.
      Url:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The URL of the vulnerability advisory.
      VendorCreatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the vulnerability advisory was created.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
      VendorSeverity:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The severity that the vendor assigned to the vulnerability.
      VendorUpdatedAt:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Indicates when the vulnerability advisory was last updated.</p>
              <p>Uses the <code>date-time</code> format specified in <a
              href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339
              section 5.6, Internet Date/Time Format</a>. The value cannot
              contain spaces. For example,
              <code>2020-03-22T13:22:13.933Z</code>.</p>
    required:
      - Name
    type: object
  WafAction:
    description: >-
      Details about the action that CloudFront or WAF takes when a web request
      matches the conditions in the rule. 
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p>Specifies how you want WAF to respond to requests that match
              the settings in a rule.</p> <p>Valid settings include the
              following:</p> <ul> <li> <p> <code>ALLOW</code> - WAF allows
              requests</p> </li> <li> <p> <code>BLOCK</code> - WAF blocks
              requests</p> </li> <li> <p> <code>COUNT</code> - WAF increments a
              counter of the requests that match all of the conditions in the
              rule. WAF then continues to inspect the web request based on the
              remaining rules in the web ACL. You can't specify
              <code>COUNT</code> for the default action for a WebACL.</p> </li>
              </ul>
    type: object
  WafExcludedRule:
    description: Details about a rule to exclude from a rule group.
    properties:
      RuleId:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: The unique identifier for the rule to exclude from the rule group.
    type: object
  WafExcludedRuleList:
    items:
      $ref: '#/definitions/WafExcludedRule'
    type: array
  WafOverrideAction:
    description: Details about an override action for a rule.
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/NonEmptyString'
          - description: >-
              <p> <code>COUNT</code> overrides the action specified by the
              individual rule within a <code>RuleGroup</code> .</p> <p>If set to
              <code>NONE</code>, the rule's action takes place.</p>
    type: object
  Workflow:
    description: Provides information about the status of the investigation into a finding.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/WorkflowStatus'
          - description: >-
              <p>The status of the investigation into the finding. The workflow
              status is specific to an individual finding. It does not affect
              the generation of new findings. For example, setting the workflow
              status to <code>SUPPRESSED</code> or <code>RESOLVED</code> does
              not prevent a new finding for the same issue.</p> <p>The allowed
              values are the following.</p> <ul> <li> <p> <code>NEW</code> - The
              initial state of a finding, before it is reviewed.</p> <p>Security
              Hub also resets the workflow status from <code>NOTIFIED</code> or
              <code>RESOLVED</code> to <code>NEW</code> in the following
              cases:</p> <ul> <li> <p> <code>RecordState</code> changes from
              <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p>
              <code>ComplianceStatus</code> changes from <code>PASSED</code> to
              either <code>WARNING</code>, <code>FAILED</code>, or
              <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p>
              <code>NOTIFIED</code> - Indicates that you notified the resource
              owner about the security issue. Used when the initial reviewer is
              not the resource owner, and needs intervention from the resource
              owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that
              you reviewed the finding and do not believe that any action is
              needed. The finding is no longer updated.</p> </li> <li> <p>
              <code>RESOLVED</code> - The finding was reviewed and remediated
              and is now considered resolved. </p> </li> </ul>
    type: object
  WorkflowState:
    description: >-
      This filter is deprecated. Instead, use SeverityLabel or
      FindingProviderFieldsSeverityLabel.
    enum:
      - NEW
      - ASSIGNED
      - IN_PROGRESS
      - DEFERRED
      - RESOLVED
    type: string
    x-deprecated: true
  WorkflowStatus:
    enum:
      - NEW
      - NOTIFIED
      - RESOLVED
      - SUPPRESSED
    type: string
  WorkflowUpdate:
    description: Used to update information about the investigation into the finding.
    properties:
      Status:
        allOf:
          - $ref: '#/definitions/WorkflowStatus'
          - description: >-
              <p>The status of the investigation into the finding. The workflow
              status is specific to an individual finding. It does not affect
              the generation of new findings. For example, setting the workflow
              status to <code>SUPPRESSED</code> or <code>RESOLVED</code> does
              not prevent a new finding for the same issue.</p> <p>The allowed
              values are the following.</p> <ul> <li> <p> <code>NEW</code> - The
              initial state of a finding, before it is reviewed.</p> <p>Security
              Hub also resets <code>WorkFlowStatus</code> from
              <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code>
              in the following cases:</p> <ul> <li> <p>The record state changes
              from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li>
              <p>The compliance status changes from <code>PASSED</code> to
              either <code>WARNING</code>, <code>FAILED</code>, or
              <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p>
              <code>NOTIFIED</code> - Indicates that you notified the resource
              owner about the security issue. Used when the initial reviewer is
              not the resource owner, and needs intervention from the resource
              owner.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was
              reviewed and remediated and is now considered resolved.</p> </li>
              <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the
              finding and do not believe that any action is needed. The finding
              is no longer updated.</p> </li> </ul>
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/securityhub/'
host: securityhub.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>Security Hub provides you with a comprehensive view of the security state
    of your Amazon Web Services environment and resources. It also provides you
    with the readiness status of your environment based on controls from
    supported security standards. Security Hub collects security data from
    Amazon Web Services accounts, services, and integrated third-party products
    and helps you analyze security trends in your environment to identify the
    highest priority security issues. For more information about Security Hub,
    see the <i>Security Hub<a
    href="https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html">User
    Guide</a> </i>.</p> <p>When you use operations in the Security Hub API, the
    requests are executed only in the Amazon Web Services Region that is
    currently active or in the specific Amazon Web Services Region that you
    specify in your request. Any configuration or settings change that results
    from the operation is applied only to that Region. To make the same change
    in other Regions, execute the same command for each Region to apply the
    change to.</p> <p>For example, if your Region is set to
    <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a
    member account to Security Hub, the association of the member account with
    the administrator account is created only in the <code>us-west-2</code>
    Region. Security Hub must be enabled for the member account in the same
    Region that the invitation was sent from.</p> <p>The following throttling
    limits apply to using Security Hub API operations.</p> <ul> <li> <p>
    <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per
    second, <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p>
    <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second.
    <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p>
    <code>UpdateFindings</code> - <code>RateLimit</code> of 1 request per
    second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>
    <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request
    per second, <code>BurstLimit</code> of 5 requests per second.</p> </li> <li>
    <p>All other operations - <code>RateLimit</code> of 10 requests per second.
    <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS SecurityHub
  version: '2018-10-26'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: securityhub
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/securityhub-2018-10-26.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: securityhub
paths:
  /accounts:
    delete:
      description: >-
        <p>Disables Security Hub in your account only in the current Region. To
        disable Security Hub in all Regions, you must submit one request per
        Region where you have enabled Security Hub.</p> <p>When you disable
        Security Hub for an administrator account, it doesn't disable Security
        Hub for any associated member accounts.</p> <p>When you disable Security
        Hub, your existing findings and insights and any Security Hub
        configuration settings are deleted after 90 days and cannot be
        recovered. Any standards that were enabled are disabled, and your
        administrator and member account associations are removed.</p> <p>If you
        want to save your existing findings, you must export them before you
        disable Security Hub.</p>
      operationId: DisableSecurityHub
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableSecurityHubResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    get:
      description: >-
        Returns details about the Hub resource in your account, including the
        <code>HubArn</code> and the time when you enabled Security Hub.
      operationId: DescribeHub
      parameters:
        - description: The ARN of the Hub resource to retrieve.
          in: query
          name: HubArn
          pattern: .*\S.*
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeHubResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates configuration options for Security Hub.
      operationId: UpdateSecurityHubConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AutoEnableControls:
                description: >-
                  <p>Whether to automatically enable new controls when they are
                  added to standards that are enabled.</p> <p>By default, this
                  is set to <code>true</code>, and new controls are enabled
                  automatically. To not automatically enable new controls, set
                  this to <code>false</code>. </p>
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSecurityHubConfigurationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    post:
      consumes:
        - application/json
      description: >-
        <p>Enables Security Hub for your account in the current Region or the
        Region you specify in the request.</p> <p>When you enable Security Hub,
        you grant to Security Hub the permissions necessary to gather findings
        from other services that are integrated with Security Hub.</p> <p>When
        you use the <code>EnableSecurityHub</code> operation to enable Security
        Hub, you also automatically enable the following standards.</p> <ul>
        <li> <p>CIS Amazon Web Services Foundations</p> </li> <li> <p>Amazon Web
        Services Foundational Security Best Practices</p> </li> </ul> <p>You do
        not enable the Payment Card Industry Data Security Standard (PCI DSS)
        standard. </p> <p>To not enable the automatically enabled standards, set
        <code>EnableDefaultStandards</code> to <code>false</code>.</p> <p>After
        you enable Security Hub, to enable a standard, use the
        <code>BatchEnableStandards</code> operation. To disable a standard, use
        the <code>BatchDisableStandards</code> operation.</p> <p>To learn more,
        see the <a
        href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html">setup
        information</a> in the <i>Security Hub User Guide</i>.</p>
      operationId: EnableSecurityHub
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              EnableDefaultStandards:
                description: >-
                  Whether to enable the security standards that Security Hub has
                  designated as automatically enabled. If you do not provide a
                  value for <code>EnableDefaultStandards</code>, it is set to
                  <code>true</code>. To not enable the automatically enabled
                  standards, set <code>EnableDefaultStandards</code> to
                  <code>false</code>.
                type: boolean
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags to add to the hub resource when you enable Security
                  Hub.
                maxProperties: 50
                minProperties: 1
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableSecurityHubResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /actionTargets:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a custom action target in Security Hub.</p> <p>You can use
        custom actions on findings and insights in Security Hub to trigger
        target actions in Amazon CloudWatch Events.</p>
      operationId: CreateActionTarget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: The description for the custom action target.
                pattern: .*\S.*
                type: string
              Id:
                description: >-
                  The ID for the custom action target. Can contain up to 20
                  alphanumeric characters.
                pattern: .*\S.*
                type: string
              Name:
                description: >-
                  The name of the custom action target. Can contain up to 20
                  characters.
                pattern: .*\S.*
                type: string
            required:
              - Name
              - Description
              - Id
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateActionTargetResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
  /actionTargets/get:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of the custom action targets in Security Hub in your
        account.
      operationId: DescribeActionTargets
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ActionTargetArns:
                description: >-
                  A list of custom action target ARNs for the custom action
                  targets to retrieve.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  <p>The token that is required for pagination. On your first
                  call to the <code>DescribeActionTargets</code> operation, set
                  the value of this parameter to <code>NULL</code>.</p> <p>For
                  subsequent calls to the operation, to continue listing data,
                  set the value of this parameter to the value returned from the
                  previous response.</p>
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeActionTargetsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/actionTargets/{ActionTargetArn}':
    delete:
      description: >-
        <p>Deletes a custom action target from Security Hub.</p> <p>Deleting a
        custom action target does not affect any findings or insights that were
        already sent to Amazon CloudWatch Events using the custom action.</p>
      operationId: DeleteActionTarget
      parameters:
        - description: The ARN of the custom action target to delete.
          in: path
          name: ActionTargetArn
          pattern: .*\S.*
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteActionTargetResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        Updates the name and description of a custom action target in Security
        Hub.
      operationId: UpdateActionTarget
      parameters:
        - description: The ARN of the custom action target to update.
          in: path
          name: ActionTargetArn
          pattern: .*\S.*
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: The updated description for the custom action target.
                pattern: .*\S.*
                type: string
              Name:
                description: The updated name of the custom action target.
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateActionTargetResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /administrator:
    get:
      description: >-
        <p>Provides the details for the Security Hub administrator account for
        the current member account.</p> <p>Can be used by both member accounts
        that are managed using Organizations and accounts that were invited
        manually.</p>
      operationId: GetAdministratorAccount
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAdministratorAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Accepts the invitation to be a member account and be monitored by the
        Security Hub administrator account that the invitation was sent
        from.</p> <p>This operation is only used by member accounts that are not
        added through Organizations.</p> <p>When the member account accepts the
        invitation, permission is granted to the administrator account to view
        findings generated in the member account.</p>
      operationId: AcceptAdministratorInvitation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AdministratorId:
                description: >-
                  The account ID of the Security Hub administrator account that
                  sent the invitation.
                pattern: .*\S.*
                type: string
              InvitationId:
                description: >-
                  The identifier of the invitation sent from the Security Hub
                  administrator account.
                pattern: .*\S.*
                type: string
            required:
              - AdministratorId
              - InvitationId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptAdministratorInvitationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
  /administrator/disassociate:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        <p>Disassociates the current Security Hub member account from the
        associated administrator account.</p> <p>This operation is only used by
        accounts that are not part of an organization. For organization
        accounts, only the administrator account can disassociate a member
        account.</p>
      operationId: DisassociateFromAdministratorAccount
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFromAdministratorAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /findings:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p> <code>UpdateFindings</code> is deprecated. Instead of
        <code>UpdateFindings</code>, use <code>BatchUpdateFindings</code>.</p>
        <p>Updates the <code>Note</code> and <code>RecordState</code> of the
        Security Hub-aggregated findings that the filter attributes specify. Any
        member account that can view the finding also sees the update to the
        finding.</p>
      operationId: UpdateFindings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>A collection of attributes that are applied to all active
                  Security Hub-aggregated findings and that result in a subset
                  of findings that are included in this insight.</p> <p>You can
                  filter by up to 10 finding attributes. For each attribute, you
                  can provide up to 20 filter values.</p>
                properties:
                  AwsAccountId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The Amazon Web Services account ID that a finding is
                          generated in.
                  CompanyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the findings provider (company) that
                          owns the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/CompanyName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>CompanyName</code> field.</p>
                  ComplianceStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Exclusive to findings that are generated as the result
                          of a check run against a specific rule in a supported
                          standard, such as CIS Amazon Web Services Foundations.
                          Contains security standard-related finding details.
                  Confidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>A finding's confidence. Confidence is defined as
                          the likelihood that a finding accurately identifies
                          the behavior or issue that it was intended to
                          identify.</p> <p>Confidence is scored on a 0-100 basis
                          using a ratio scale, where 0 means zero percent
                          confidence and 100 means 100 percent confidence.</p>
                  CreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider captured the potential
                          security issue that a finding captured.
                  Criticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The level of importance assigned to the resources
                          associated with the finding.</p> <p>A score of 0 means
                          that the underlying resources have no criticality, and
                          a score of 100 is reserved for the most critical
                          resources.</p>
                  Description:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's description.
                  FindingProviderFieldsConfidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the finding
                          confidence. Confidence is defined as the likelihood
                          that a finding accurately identifies the behavior or
                          issue that it was intended to identify.</p>
                          <p>Confidence is scored on a 0-100 basis using a ratio
                          scale, where 0 means zero percent confidence and 100
                          means 100 percent confidence.</p>
                  FindingProviderFieldsCriticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the level of
                          importance assigned to the resources associated with
                          the findings.</p> <p>A score of 0 means that the
                          underlying resources have no criticality, and a score
                          of 100 is reserved for the most critical resources.
                          </p>
                  FindingProviderFieldsRelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding identifier of a related finding that is
                          identified by the finding provider.
                  FindingProviderFieldsRelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding that is identified by the finding provider.
                  FindingProviderFieldsSeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The finding provider value for the severity label.
                  FindingProviderFieldsSeverityOriginal:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding provider's original value for the
                          severity.
                  FindingProviderFieldsTypes:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>One or more finding types that the finding provider
                          assigned to the finding. Uses the format of
                          <code>namespace/category/classifier</code> that
                          classify a finding.</p> <p>Valid namespace values are:
                          Software and Configuration Checks | TTPs | Effects |
                          Unusual Behaviors | Sensitive Data Identifications</p>
                  FirstObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider first observed the
                          potential security issue that a finding captured.
                  GeneratorId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier for the solution-specific component (a
                          discrete unit of logic) that generated a finding. In
                          various security-findings providers' solutions, this
                          generator can be called a rule, a check, a detector, a
                          plugin, etc.
                  Id:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The security findings provider-specific identifier for
                          a finding.
                  Keyword:
                    allOf:
                      - $ref: '#/definitions/KeywordFilterList'
                      - description: >-
                          A keyword for a finding.The Keyword property is
                          deprecated.
                        x-deprecated: true
                  LastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider most recently observed the
                          potential security issue that a finding captured.
                  MalwareName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the malware that was observed.
                  MalwarePath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The filesystem path of the malware that was observed.
                  MalwareState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The state of the malware that was observed.
                  MalwareType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of the malware that was observed.
                  NetworkDestinationDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The destination domain of network-related information
                          about a finding.
                  NetworkDestinationIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv4 address of network-related
                          information about a finding.
                  NetworkDestinationIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv6 address of network-related
                          information about a finding.
                  NetworkDestinationPort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The destination port of network-related information
                          about a finding.
                  NetworkDirection:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Indicates the direction of network traffic associated
                          with a finding.
                  NetworkProtocol:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The protocol of network-related information about a
                          finding.
                  NetworkSourceDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source domain of network-related information about
                          a finding.
                  NetworkSourceIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv4 address of network-related information
                          about a finding.
                  NetworkSourceIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv6 address of network-related information
                          about a finding.
                  NetworkSourceMac:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source media access control (MAC) address of
                          network-related information about a finding.
                  NetworkSourcePort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The source port of network-related information about a
                          finding.
                  NoteText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The text of a note.
                  NoteUpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The timestamp of when the note was updated.
                  NoteUpdatedBy:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The principal that created a note.
                  ProcessLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was launched.
                  ProcessName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the process.
                  ProcessParentPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The parent process ID.
                  ProcessPath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The path to the process executable.
                  ProcessPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The process ID.
                  ProcessTerminatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was terminated.
                  ProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN generated by Security Hub that uniquely
                          identifies a third-party company (security findings
                          provider) after this provider's product (solution that
                          generates findings) is registered with Security Hub.
                  ProductFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A data type where security-findings providers can
                          include additional solution-specific details that
                          aren't part of the defined
                          <code>AwsSecurityFinding</code> format.
                  ProductName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/ProductName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>ProductName</code> field.</p>
                  RecommendationText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The recommendation of what to do about the issue
                          described in a finding.
                  RecordState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The updated record state for the finding.
                  Region:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Region from which the finding was generated.
                  RelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The solution-generated identifier for a related
                          finding.
                  RelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding.
                  ResourceAwsEc2InstanceIamInstanceProfileArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The IAM profile ARN of the instance.
                  ResourceAwsEc2InstanceImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Amazon Machine Image (AMI) ID of the instance.
                  ResourceAwsEc2InstanceIpV4Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv4 addresses associated with the instance.
                  ResourceAwsEc2InstanceIpV6Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv6 addresses associated with the instance.
                  ResourceAwsEc2InstanceKeyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The key name associated with the instance.
                  ResourceAwsEc2InstanceLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date and time the instance was launched.
                  ResourceAwsEc2InstanceSubnetId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the subnet that the instance was
                          launched in.
                  ResourceAwsEc2InstanceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The instance type of the instance.
                  ResourceAwsEc2InstanceVpcId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the VPC that the instance was
                          launched in.
                  ResourceAwsIamAccessKeyCreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The creation date/time of the IAM access key related
                          to a finding.
                  ResourceAwsIamAccessKeyPrincipalName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The name of the principal that is associated with an
                          IAM access key.
                  ResourceAwsIamAccessKeyStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The status of the IAM access key related to a finding.
                  ResourceAwsIamAccessKeyUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The user associated with the IAM access key related to
                          a finding.This filter is deprecated. Instead, use
                          ResourceAwsIamAccessKeyPrincipalName.
                        x-deprecated: true
                  ResourceAwsIamUserUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of an IAM user.
                  ResourceAwsS3BucketOwnerId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical user ID of the owner of the S3 bucket.
                  ResourceAwsS3BucketOwnerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The display name of the owner of the S3 bucket.
                  ResourceContainerImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The identifier of the image related to a finding.
                  ResourceContainerImageName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the image related to a finding.
                  ResourceContainerLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the container was started.
                  ResourceContainerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the container related to a finding.
                  ResourceDetailsOther:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          The details of a resource that doesn't have a specific
                          subfield for the resource type defined.
                  ResourceId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical identifier for the given resource type.
                  ResourcePartition:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services partition name that
                          the Region is assigned to.
                  ResourceRegion:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services external Region name
                          where this resource is located.
                  ResourceTags:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of Amazon Web Services tags associated with a
                          resource at the time the finding was processed.
                  ResourceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Specifies the type of the resource that details are
                          provided for.
                  SeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The label of a finding's severity.
                  SeverityNormalized:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The normalized severity of a finding.This filter is
                          deprecated. Instead, use SeverityLabel or
                          FindingProviderFieldsSeverityLabel.
                        x-deprecated: true
                  SeverityProduct:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The native severity as defined by the
                          security-findings provider's solution that generated
                          the finding.This filter is deprecated. Instead, use
                          FindingProviderSeverityOriginal.
                        x-deprecated: true
                  SourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A URL that links to a page about the current finding
                          in the security-findings provider's solution.
                  ThreatIntelIndicatorCategory:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The category of a threat intelligence indicator.
                  ThreatIntelIndicatorLastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The date/time of the last observation of a threat
                          intelligence indicator.
                  ThreatIntelIndicatorSource:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The source of the threat intelligence.
                  ThreatIntelIndicatorSourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The URL for more details from the source of the threat
                          intelligence.
                  ThreatIntelIndicatorType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of a threat intelligence indicator.
                  ThreatIntelIndicatorValue:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The value of a threat intelligence indicator.
                  Title:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's title.
                  Type:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A finding type in the format of
                          <code>namespace/category/classifier</code> that
                          classifies a finding.
                  UpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider last updated the finding
                          record. 
                  UserDefinedFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of name/value string pairs associated with the
                          finding. These are custom, user-defined fields added
                          to a finding. 
                  VerificationState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The veracity of a finding.
                  WorkflowState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The workflow state of a finding.</p> <p>Note that
                          this field is deprecated. To search for a finding
                          based on its workflow status, use
                          <code>WorkflowStatus</code>.</p>
                  WorkflowStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The status of the investigation into a finding.
                          Allowed values are the following.</p> <ul> <li> <p>
                          <code>NEW</code> - The initial state of a finding,
                          before it is reviewed.</p> <p>Security Hub also resets
                          the workflow status from <code>NOTIFIED</code> or
                          <code>RESOLVED</code> to <code>NEW</code> in the
                          following cases:</p> <ul> <li> <p>The record state
                          changes from <code>ARCHIVED</code> to
                          <code>ACTIVE</code>.</p> </li> <li> <p>The compliance
                          status changes from <code>PASSED</code> to either
                          <code>WARNING</code>, <code>FAILED</code>, or
                          <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li>
                          <p> <code>NOTIFIED</code> - Indicates that the
                          resource owner has been notified about the security
                          issue. Used when the initial reviewer is not the
                          resource owner, and needs intervention from the
                          resource owner.</p> </li> <li> <p>
                          <code>SUPPRESSED</code> - The finding will not be
                          reviewed again and will not be acted upon.</p> </li>
                          <li> <p> <code>RESOLVED</code> - The finding was
                          reviewed and remediated and is now considered
                          resolved. </p> </li> </ul>
                type: object
              Note:
                description: The updated note.
                properties:
                  Text:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: The updated note text.
                  UpdatedBy:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: The principal that updated the note.
                type: object
              RecordState:
                description: The updated record state for the finding.
                enum:
                  - ACTIVE
                  - ARCHIVED
                type: string
            required:
              - Filters
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFindingsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    post:
      consumes:
        - application/json
      description: Returns a list of findings that match the specified criteria.
      operationId: GetFindings
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>A collection of attributes that are applied to all active
                  Security Hub-aggregated findings and that result in a subset
                  of findings that are included in this insight.</p> <p>You can
                  filter by up to 10 finding attributes. For each attribute, you
                  can provide up to 20 filter values.</p>
                properties:
                  AwsAccountId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The Amazon Web Services account ID that a finding is
                          generated in.
                  CompanyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the findings provider (company) that
                          owns the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/CompanyName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>CompanyName</code> field.</p>
                  ComplianceStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Exclusive to findings that are generated as the result
                          of a check run against a specific rule in a supported
                          standard, such as CIS Amazon Web Services Foundations.
                          Contains security standard-related finding details.
                  Confidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>A finding's confidence. Confidence is defined as
                          the likelihood that a finding accurately identifies
                          the behavior or issue that it was intended to
                          identify.</p> <p>Confidence is scored on a 0-100 basis
                          using a ratio scale, where 0 means zero percent
                          confidence and 100 means 100 percent confidence.</p>
                  CreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider captured the potential
                          security issue that a finding captured.
                  Criticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The level of importance assigned to the resources
                          associated with the finding.</p> <p>A score of 0 means
                          that the underlying resources have no criticality, and
                          a score of 100 is reserved for the most critical
                          resources.</p>
                  Description:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's description.
                  FindingProviderFieldsConfidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the finding
                          confidence. Confidence is defined as the likelihood
                          that a finding accurately identifies the behavior or
                          issue that it was intended to identify.</p>
                          <p>Confidence is scored on a 0-100 basis using a ratio
                          scale, where 0 means zero percent confidence and 100
                          means 100 percent confidence.</p>
                  FindingProviderFieldsCriticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the level of
                          importance assigned to the resources associated with
                          the findings.</p> <p>A score of 0 means that the
                          underlying resources have no criticality, and a score
                          of 100 is reserved for the most critical resources.
                          </p>
                  FindingProviderFieldsRelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding identifier of a related finding that is
                          identified by the finding provider.
                  FindingProviderFieldsRelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding that is identified by the finding provider.
                  FindingProviderFieldsSeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The finding provider value for the severity label.
                  FindingProviderFieldsSeverityOriginal:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding provider's original value for the
                          severity.
                  FindingProviderFieldsTypes:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>One or more finding types that the finding provider
                          assigned to the finding. Uses the format of
                          <code>namespace/category/classifier</code> that
                          classify a finding.</p> <p>Valid namespace values are:
                          Software and Configuration Checks | TTPs | Effects |
                          Unusual Behaviors | Sensitive Data Identifications</p>
                  FirstObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider first observed the
                          potential security issue that a finding captured.
                  GeneratorId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier for the solution-specific component (a
                          discrete unit of logic) that generated a finding. In
                          various security-findings providers' solutions, this
                          generator can be called a rule, a check, a detector, a
                          plugin, etc.
                  Id:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The security findings provider-specific identifier for
                          a finding.
                  Keyword:
                    allOf:
                      - $ref: '#/definitions/KeywordFilterList'
                      - description: >-
                          A keyword for a finding.The Keyword property is
                          deprecated.
                        x-deprecated: true
                  LastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider most recently observed the
                          potential security issue that a finding captured.
                  MalwareName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the malware that was observed.
                  MalwarePath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The filesystem path of the malware that was observed.
                  MalwareState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The state of the malware that was observed.
                  MalwareType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of the malware that was observed.
                  NetworkDestinationDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The destination domain of network-related information
                          about a finding.
                  NetworkDestinationIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv4 address of network-related
                          information about a finding.
                  NetworkDestinationIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv6 address of network-related
                          information about a finding.
                  NetworkDestinationPort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The destination port of network-related information
                          about a finding.
                  NetworkDirection:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Indicates the direction of network traffic associated
                          with a finding.
                  NetworkProtocol:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The protocol of network-related information about a
                          finding.
                  NetworkSourceDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source domain of network-related information about
                          a finding.
                  NetworkSourceIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv4 address of network-related information
                          about a finding.
                  NetworkSourceIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv6 address of network-related information
                          about a finding.
                  NetworkSourceMac:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source media access control (MAC) address of
                          network-related information about a finding.
                  NetworkSourcePort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The source port of network-related information about a
                          finding.
                  NoteText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The text of a note.
                  NoteUpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The timestamp of when the note was updated.
                  NoteUpdatedBy:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The principal that created a note.
                  ProcessLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was launched.
                  ProcessName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the process.
                  ProcessParentPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The parent process ID.
                  ProcessPath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The path to the process executable.
                  ProcessPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The process ID.
                  ProcessTerminatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was terminated.
                  ProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN generated by Security Hub that uniquely
                          identifies a third-party company (security findings
                          provider) after this provider's product (solution that
                          generates findings) is registered with Security Hub.
                  ProductFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A data type where security-findings providers can
                          include additional solution-specific details that
                          aren't part of the defined
                          <code>AwsSecurityFinding</code> format.
                  ProductName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/ProductName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>ProductName</code> field.</p>
                  RecommendationText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The recommendation of what to do about the issue
                          described in a finding.
                  RecordState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The updated record state for the finding.
                  Region:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Region from which the finding was generated.
                  RelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The solution-generated identifier for a related
                          finding.
                  RelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding.
                  ResourceAwsEc2InstanceIamInstanceProfileArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The IAM profile ARN of the instance.
                  ResourceAwsEc2InstanceImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Amazon Machine Image (AMI) ID of the instance.
                  ResourceAwsEc2InstanceIpV4Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv4 addresses associated with the instance.
                  ResourceAwsEc2InstanceIpV6Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv6 addresses associated with the instance.
                  ResourceAwsEc2InstanceKeyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The key name associated with the instance.
                  ResourceAwsEc2InstanceLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date and time the instance was launched.
                  ResourceAwsEc2InstanceSubnetId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the subnet that the instance was
                          launched in.
                  ResourceAwsEc2InstanceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The instance type of the instance.
                  ResourceAwsEc2InstanceVpcId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the VPC that the instance was
                          launched in.
                  ResourceAwsIamAccessKeyCreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The creation date/time of the IAM access key related
                          to a finding.
                  ResourceAwsIamAccessKeyPrincipalName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The name of the principal that is associated with an
                          IAM access key.
                  ResourceAwsIamAccessKeyStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The status of the IAM access key related to a finding.
                  ResourceAwsIamAccessKeyUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The user associated with the IAM access key related to
                          a finding.This filter is deprecated. Instead, use
                          ResourceAwsIamAccessKeyPrincipalName.
                        x-deprecated: true
                  ResourceAwsIamUserUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of an IAM user.
                  ResourceAwsS3BucketOwnerId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical user ID of the owner of the S3 bucket.
                  ResourceAwsS3BucketOwnerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The display name of the owner of the S3 bucket.
                  ResourceContainerImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The identifier of the image related to a finding.
                  ResourceContainerImageName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the image related to a finding.
                  ResourceContainerLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the container was started.
                  ResourceContainerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the container related to a finding.
                  ResourceDetailsOther:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          The details of a resource that doesn't have a specific
                          subfield for the resource type defined.
                  ResourceId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical identifier for the given resource type.
                  ResourcePartition:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services partition name that
                          the Region is assigned to.
                  ResourceRegion:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services external Region name
                          where this resource is located.
                  ResourceTags:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of Amazon Web Services tags associated with a
                          resource at the time the finding was processed.
                  ResourceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Specifies the type of the resource that details are
                          provided for.
                  SeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The label of a finding's severity.
                  SeverityNormalized:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The normalized severity of a finding.This filter is
                          deprecated. Instead, use SeverityLabel or
                          FindingProviderFieldsSeverityLabel.
                        x-deprecated: true
                  SeverityProduct:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The native severity as defined by the
                          security-findings provider's solution that generated
                          the finding.This filter is deprecated. Instead, use
                          FindingProviderSeverityOriginal.
                        x-deprecated: true
                  SourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A URL that links to a page about the current finding
                          in the security-findings provider's solution.
                  ThreatIntelIndicatorCategory:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The category of a threat intelligence indicator.
                  ThreatIntelIndicatorLastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The date/time of the last observation of a threat
                          intelligence indicator.
                  ThreatIntelIndicatorSource:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The source of the threat intelligence.
                  ThreatIntelIndicatorSourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The URL for more details from the source of the threat
                          intelligence.
                  ThreatIntelIndicatorType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of a threat intelligence indicator.
                  ThreatIntelIndicatorValue:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The value of a threat intelligence indicator.
                  Title:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's title.
                  Type:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A finding type in the format of
                          <code>namespace/category/classifier</code> that
                          classifies a finding.
                  UpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider last updated the finding
                          record. 
                  UserDefinedFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of name/value string pairs associated with the
                          finding. These are custom, user-defined fields added
                          to a finding. 
                  VerificationState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The veracity of a finding.
                  WorkflowState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The workflow state of a finding.</p> <p>Note that
                          this field is deprecated. To search for a finding
                          based on its workflow status, use
                          <code>WorkflowStatus</code>.</p>
                  WorkflowStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The status of the investigation into a finding.
                          Allowed values are the following.</p> <ul> <li> <p>
                          <code>NEW</code> - The initial state of a finding,
                          before it is reviewed.</p> <p>Security Hub also resets
                          the workflow status from <code>NOTIFIED</code> or
                          <code>RESOLVED</code> to <code>NEW</code> in the
                          following cases:</p> <ul> <li> <p>The record state
                          changes from <code>ARCHIVED</code> to
                          <code>ACTIVE</code>.</p> </li> <li> <p>The compliance
                          status changes from <code>PASSED</code> to either
                          <code>WARNING</code>, <code>FAILED</code>, or
                          <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li>
                          <p> <code>NOTIFIED</code> - Indicates that the
                          resource owner has been notified about the security
                          issue. Used when the initial reviewer is not the
                          resource owner, and needs intervention from the
                          resource owner.</p> </li> <li> <p>
                          <code>SUPPRESSED</code> - The finding will not be
                          reviewed again and will not be acted upon.</p> </li>
                          <li> <p> <code>RESOLVED</code> - The finding was
                          reviewed and remediated and is now considered
                          resolved. </p> </li> </ul>
                type: object
              MaxResults:
                description: The maximum number of findings to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  <p>The token that is required for pagination. On your first
                  call to the <code>GetFindings</code> operation, set the value
                  of this parameter to <code>NULL</code>.</p> <p>For subsequent
                  calls to the operation, to continue listing data, set the
                  value of this parameter to the value returned from the
                  previous response.</p>
                type: string
              SortCriteria:
                description: >-
                  The finding attributes used to sort the list of returned
                  findings.
                items:
                  $ref: '#/definitions/SortCriterion'
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFindingsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /findings/batchupdate:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Used by Security Hub customers to update information about their
        investigation into a finding. Requested by administrator accounts or
        member accounts. Administrator accounts can update findings for their
        account and their member accounts. Member accounts can update findings
        for their account.</p> <p>Updates from <code>BatchUpdateFindings</code>
        do not affect the value of <code>UpdatedAt</code> for a finding.</p>
        <p>Administrator and member accounts can use
        <code>BatchUpdateFindings</code> to update the following finding fields
        and objects.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li>
        <p> <code>Criticality</code> </p> </li> <li> <p> <code>Note</code> </p>
        </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p>
        <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li>
        <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p>
        <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code>
        </p> </li> </ul> <p>You can configure IAM policies to restrict access to
        fields and field values. For example, you might not want member accounts
        to be able to suppress findings or change the finding severity. See <a
        href="https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchupdatefindings.html#batchupdatefindings-configure-access">Configuring
        access to BatchUpdateFindings</a> in the <i>Security Hub User
        Guide</i>.</p>
      operationId: BatchUpdateFindings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Confidence:
                description: >-
                  <p>The updated value for the finding confidence. Confidence is
                  defined as the likelihood that a finding accurately identifies
                  the behavior or issue that it was intended to identify.</p>
                  <p>Confidence is scored on a 0-100 basis using a ratio scale,
                  where 0 means zero percent confidence and 100 means 100
                  percent confidence.</p>
                maximum: 100
                minimum: 0
                type: integer
              Criticality:
                description: >-
                  <p>The updated value for the level of importance assigned to
                  the resources associated with the findings.</p> <p>A score of
                  0 means that the underlying resources have no criticality, and
                  a score of 100 is reserved for the most critical resources.
                  </p>
                maximum: 100
                minimum: 0
                type: integer
              FindingIdentifiers:
                description: >-
                  <p>The list of findings to update.
                  <code>BatchUpdateFindings</code> can be used to update up to
                  100 findings at a time.</p> <p>For each finding, the list
                  provides the finding identifier and the ARN of the finding
                  provider.</p>
                items:
                  $ref: '#/definitions/AwsSecurityFindingIdentifier'
                type: array
              Note:
                description: The updated note.
                properties:
                  Text:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: The updated note text.
                  UpdatedBy:
                    allOf:
                      - $ref: '#/definitions/NonEmptyString'
                      - description: The principal that updated the note.
                type: object
              RelatedFindings:
                description: A list of findings that are related to the updated findings.
                items:
                  $ref: '#/definitions/RelatedFinding'
                type: array
              Severity:
                description: Updates to the severity information for a finding.
                properties:
                  Label:
                    allOf:
                      - $ref: '#/definitions/SeverityLabel'
                      - description: >-
                          <p>The severity value of the finding. The allowed
                          values are the following.</p> <ul> <li> <p>
                          <code>INFORMATIONAL</code> - No issue was found.</p>
                          </li> <li> <p> <code>LOW</code> - The issue does not
                          require action on its own.</p> </li> <li> <p>
                          <code>MEDIUM</code> - The issue must be addressed but
                          not urgently.</p> </li> <li> <p> <code>HIGH</code> -
                          The issue must be addressed as a priority.</p> </li>
                          <li> <p> <code>CRITICAL</code> - The issue must be
                          remediated immediately to avoid it escalating.</p>
                          </li> </ul>
                  Normalized:
                    allOf:
                      - $ref: '#/definitions/RatioScale'
                      - description: >-
                          <p>The normalized severity for the finding. This
                          attribute is to be deprecated in favor of
                          <code>Label</code>.</p> <p>If you provide
                          <code>Normalized</code> and do not provide
                          <code>Label</code>, <code>Label</code> is set
                          automatically as follows.</p> <ul> <li> <p>0 -
                          <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 -
                          <code>LOW</code> </p> </li> <li> <p>40–69 -
                          <code>MEDIUM</code> </p> </li> <li> <p>70–89 -
                          <code>HIGH</code> </p> </li> <li> <p>90–100 -
                          <code>CRITICAL</code> </p> </li> </ul>
                  Product:
                    allOf:
                      - $ref: '#/definitions/Double'
                      - description: >-
                          The native severity as defined by the Amazon Web
                          Services service or integrated partner product that
                          generated the finding.
                type: object
              Types:
                description: >-
                  <p>One or more finding types in the format of
                  namespace/category/classifier that classify a finding.</p>
                  <p>Valid namespace values are as follows.</p> <ul> <li>
                  <p>Software and Configuration Checks</p> </li> <li>
                  <p>TTPs</p> </li> <li> <p>Effects</p> </li> <li> <p>Unusual
                  Behaviors</p> </li> <li> <p>Sensitive Data Identifications
                  </p> </li> </ul>
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
              UserDefinedFields:
                additionalProperties:
                  $ref: '#/definitions/NonEmptyString'
                description: >-
                  A list of name/value string pairs associated with the finding.
                  These are custom, user-defined fields added to a finding.
                type: object
              VerificationState:
                description: >-
                  <p>Indicates the veracity of a finding.</p> <p>The available
                  values for <code>VerificationState</code> are as follows.</p>
                  <ul> <li> <p> <code>UNKNOWN</code> – The default disposition
                  of a security finding</p> </li> <li> <p>
                  <code>TRUE_POSITIVE</code> – The security finding is
                  confirmed</p> </li> <li> <p> <code>FALSE_POSITIVE</code> – The
                  security finding was determined to be a false alarm</p> </li>
                  <li> <p> <code>BENIGN_POSITIVE</code> – A special case of
                  <code>TRUE_POSITIVE</code> where the finding doesn't pose any
                  threat, is expected, or both</p> </li> </ul>
                enum:
                  - UNKNOWN
                  - TRUE_POSITIVE
                  - FALSE_POSITIVE
                  - BENIGN_POSITIVE
                type: string
              Workflow:
                description: >-
                  Used to update information about the investigation into the
                  finding.
                properties:
                  Status:
                    allOf:
                      - $ref: '#/definitions/WorkflowStatus'
                      - description: >-
                          <p>The status of the investigation into the finding.
                          The workflow status is specific to an individual
                          finding. It does not affect the generation of new
                          findings. For example, setting the workflow status to
                          <code>SUPPRESSED</code> or <code>RESOLVED</code> does
                          not prevent a new finding for the same issue.</p>
                          <p>The allowed values are the following.</p> <ul> <li>
                          <p> <code>NEW</code> - The initial state of a finding,
                          before it is reviewed.</p> <p>Security Hub also resets
                          <code>WorkFlowStatus</code> from <code>NOTIFIED</code>
                          or <code>RESOLVED</code> to <code>NEW</code> in the
                          following cases:</p> <ul> <li> <p>The record state
                          changes from <code>ARCHIVED</code> to
                          <code>ACTIVE</code>.</p> </li> <li> <p>The compliance
                          status changes from <code>PASSED</code> to either
                          <code>WARNING</code>, <code>FAILED</code>, or
                          <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li>
                          <p> <code>NOTIFIED</code> - Indicates that you
                          notified the resource owner about the security issue.
                          Used when the initial reviewer is not the resource
                          owner, and needs intervention from the resource
                          owner.</p> </li> <li> <p> <code>RESOLVED</code> - The
                          finding was reviewed and remediated and is now
                          considered resolved.</p> </li> <li> <p>
                          <code>SUPPRESSED</code> - Indicates that you reviewed
                          the finding and do not believe that any action is
                          needed. The finding is no longer updated.</p> </li>
                          </ul>
                type: object
            required:
              - FindingIdentifiers
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchUpdateFindingsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
  /findings/import:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Imports security findings generated from an integrated product into
        Security Hub. This action is requested by the integrated product to
        import its findings into Security Hub.</p> <p>The maximum allowed size
        for a finding is 240 Kb. An error is returned for any finding larger
        than 240 Kb.</p> <p>After a finding is created,
        <code>BatchImportFindings</code> cannot be used to update the following
        finding fields and objects, which Security Hub customers use to manage
        their investigation workflow.</p> <ul> <li> <p> <code>Note</code> </p>
        </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p>
        <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code>
        </p> </li> </ul> <p>Finding providers also should not use
        <code>BatchImportFindings</code> to update the following attributes.</p>
        <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p>
        <code>Criticality</code> </p> </li> <li> <p>
        <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code>
        </p> </li> <li> <p> <code>Types</code> </p> </li> </ul> <p>Instead,
        finding providers use <code>FindingProviderFields</code> to provide
        values for these attributes.</p>
      operationId: BatchImportFindings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Findings:
                description: >-
                  A list of findings to import. To successfully import a
                  finding, it must follow the <a
                  href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">Amazon
                  Web Services Security Finding Format</a>. Maximum of 100
                  findings per request.
                items:
                  $ref: '#/definitions/AwsSecurityFinding'
                maxItems: 100
                minItems: 1
                type: array
            required:
              - Findings
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchImportFindingsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
  /insights:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a custom insight in Security Hub. An insight is a
        consolidation of findings that relate to a security issue that requires
        attention or remediation.</p> <p>To group the related findings in the
        insight, use the <code>GroupByAttribute</code>.</p>
      operationId: CreateInsight
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>A collection of attributes that are applied to all active
                  Security Hub-aggregated findings and that result in a subset
                  of findings that are included in this insight.</p> <p>You can
                  filter by up to 10 finding attributes. For each attribute, you
                  can provide up to 20 filter values.</p>
                properties:
                  AwsAccountId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The Amazon Web Services account ID that a finding is
                          generated in.
                  CompanyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the findings provider (company) that
                          owns the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/CompanyName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>CompanyName</code> field.</p>
                  ComplianceStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Exclusive to findings that are generated as the result
                          of a check run against a specific rule in a supported
                          standard, such as CIS Amazon Web Services Foundations.
                          Contains security standard-related finding details.
                  Confidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>A finding's confidence. Confidence is defined as
                          the likelihood that a finding accurately identifies
                          the behavior or issue that it was intended to
                          identify.</p> <p>Confidence is scored on a 0-100 basis
                          using a ratio scale, where 0 means zero percent
                          confidence and 100 means 100 percent confidence.</p>
                  CreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider captured the potential
                          security issue that a finding captured.
                  Criticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The level of importance assigned to the resources
                          associated with the finding.</p> <p>A score of 0 means
                          that the underlying resources have no criticality, and
                          a score of 100 is reserved for the most critical
                          resources.</p>
                  Description:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's description.
                  FindingProviderFieldsConfidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the finding
                          confidence. Confidence is defined as the likelihood
                          that a finding accurately identifies the behavior or
                          issue that it was intended to identify.</p>
                          <p>Confidence is scored on a 0-100 basis using a ratio
                          scale, where 0 means zero percent confidence and 100
                          means 100 percent confidence.</p>
                  FindingProviderFieldsCriticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the level of
                          importance assigned to the resources associated with
                          the findings.</p> <p>A score of 0 means that the
                          underlying resources have no criticality, and a score
                          of 100 is reserved for the most critical resources.
                          </p>
                  FindingProviderFieldsRelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding identifier of a related finding that is
                          identified by the finding provider.
                  FindingProviderFieldsRelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding that is identified by the finding provider.
                  FindingProviderFieldsSeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The finding provider value for the severity label.
                  FindingProviderFieldsSeverityOriginal:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding provider's original value for the
                          severity.
                  FindingProviderFieldsTypes:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>One or more finding types that the finding provider
                          assigned to the finding. Uses the format of
                          <code>namespace/category/classifier</code> that
                          classify a finding.</p> <p>Valid namespace values are:
                          Software and Configuration Checks | TTPs | Effects |
                          Unusual Behaviors | Sensitive Data Identifications</p>
                  FirstObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider first observed the
                          potential security issue that a finding captured.
                  GeneratorId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier for the solution-specific component (a
                          discrete unit of logic) that generated a finding. In
                          various security-findings providers' solutions, this
                          generator can be called a rule, a check, a detector, a
                          plugin, etc.
                  Id:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The security findings provider-specific identifier for
                          a finding.
                  Keyword:
                    allOf:
                      - $ref: '#/definitions/KeywordFilterList'
                      - description: >-
                          A keyword for a finding.The Keyword property is
                          deprecated.
                        x-deprecated: true
                  LastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider most recently observed the
                          potential security issue that a finding captured.
                  MalwareName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the malware that was observed.
                  MalwarePath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The filesystem path of the malware that was observed.
                  MalwareState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The state of the malware that was observed.
                  MalwareType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of the malware that was observed.
                  NetworkDestinationDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The destination domain of network-related information
                          about a finding.
                  NetworkDestinationIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv4 address of network-related
                          information about a finding.
                  NetworkDestinationIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv6 address of network-related
                          information about a finding.
                  NetworkDestinationPort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The destination port of network-related information
                          about a finding.
                  NetworkDirection:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Indicates the direction of network traffic associated
                          with a finding.
                  NetworkProtocol:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The protocol of network-related information about a
                          finding.
                  NetworkSourceDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source domain of network-related information about
                          a finding.
                  NetworkSourceIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv4 address of network-related information
                          about a finding.
                  NetworkSourceIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv6 address of network-related information
                          about a finding.
                  NetworkSourceMac:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source media access control (MAC) address of
                          network-related information about a finding.
                  NetworkSourcePort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The source port of network-related information about a
                          finding.
                  NoteText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The text of a note.
                  NoteUpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The timestamp of when the note was updated.
                  NoteUpdatedBy:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The principal that created a note.
                  ProcessLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was launched.
                  ProcessName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the process.
                  ProcessParentPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The parent process ID.
                  ProcessPath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The path to the process executable.
                  ProcessPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The process ID.
                  ProcessTerminatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was terminated.
                  ProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN generated by Security Hub that uniquely
                          identifies a third-party company (security findings
                          provider) after this provider's product (solution that
                          generates findings) is registered with Security Hub.
                  ProductFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A data type where security-findings providers can
                          include additional solution-specific details that
                          aren't part of the defined
                          <code>AwsSecurityFinding</code> format.
                  ProductName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/ProductName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>ProductName</code> field.</p>
                  RecommendationText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The recommendation of what to do about the issue
                          described in a finding.
                  RecordState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The updated record state for the finding.
                  Region:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Region from which the finding was generated.
                  RelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The solution-generated identifier for a related
                          finding.
                  RelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding.
                  ResourceAwsEc2InstanceIamInstanceProfileArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The IAM profile ARN of the instance.
                  ResourceAwsEc2InstanceImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Amazon Machine Image (AMI) ID of the instance.
                  ResourceAwsEc2InstanceIpV4Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv4 addresses associated with the instance.
                  ResourceAwsEc2InstanceIpV6Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv6 addresses associated with the instance.
                  ResourceAwsEc2InstanceKeyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The key name associated with the instance.
                  ResourceAwsEc2InstanceLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date and time the instance was launched.
                  ResourceAwsEc2InstanceSubnetId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the subnet that the instance was
                          launched in.
                  ResourceAwsEc2InstanceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The instance type of the instance.
                  ResourceAwsEc2InstanceVpcId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the VPC that the instance was
                          launched in.
                  ResourceAwsIamAccessKeyCreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The creation date/time of the IAM access key related
                          to a finding.
                  ResourceAwsIamAccessKeyPrincipalName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The name of the principal that is associated with an
                          IAM access key.
                  ResourceAwsIamAccessKeyStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The status of the IAM access key related to a finding.
                  ResourceAwsIamAccessKeyUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The user associated with the IAM access key related to
                          a finding.This filter is deprecated. Instead, use
                          ResourceAwsIamAccessKeyPrincipalName.
                        x-deprecated: true
                  ResourceAwsIamUserUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of an IAM user.
                  ResourceAwsS3BucketOwnerId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical user ID of the owner of the S3 bucket.
                  ResourceAwsS3BucketOwnerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The display name of the owner of the S3 bucket.
                  ResourceContainerImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The identifier of the image related to a finding.
                  ResourceContainerImageName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the image related to a finding.
                  ResourceContainerLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the container was started.
                  ResourceContainerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the container related to a finding.
                  ResourceDetailsOther:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          The details of a resource that doesn't have a specific
                          subfield for the resource type defined.
                  ResourceId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical identifier for the given resource type.
                  ResourcePartition:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services partition name that
                          the Region is assigned to.
                  ResourceRegion:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services external Region name
                          where this resource is located.
                  ResourceTags:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of Amazon Web Services tags associated with a
                          resource at the time the finding was processed.
                  ResourceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Specifies the type of the resource that details are
                          provided for.
                  SeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The label of a finding's severity.
                  SeverityNormalized:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The normalized severity of a finding.This filter is
                          deprecated. Instead, use SeverityLabel or
                          FindingProviderFieldsSeverityLabel.
                        x-deprecated: true
                  SeverityProduct:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The native severity as defined by the
                          security-findings provider's solution that generated
                          the finding.This filter is deprecated. Instead, use
                          FindingProviderSeverityOriginal.
                        x-deprecated: true
                  SourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A URL that links to a page about the current finding
                          in the security-findings provider's solution.
                  ThreatIntelIndicatorCategory:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The category of a threat intelligence indicator.
                  ThreatIntelIndicatorLastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The date/time of the last observation of a threat
                          intelligence indicator.
                  ThreatIntelIndicatorSource:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The source of the threat intelligence.
                  ThreatIntelIndicatorSourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The URL for more details from the source of the threat
                          intelligence.
                  ThreatIntelIndicatorType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of a threat intelligence indicator.
                  ThreatIntelIndicatorValue:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The value of a threat intelligence indicator.
                  Title:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's title.
                  Type:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A finding type in the format of
                          <code>namespace/category/classifier</code> that
                          classifies a finding.
                  UpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider last updated the finding
                          record. 
                  UserDefinedFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of name/value string pairs associated with the
                          finding. These are custom, user-defined fields added
                          to a finding. 
                  VerificationState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The veracity of a finding.
                  WorkflowState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The workflow state of a finding.</p> <p>Note that
                          this field is deprecated. To search for a finding
                          based on its workflow status, use
                          <code>WorkflowStatus</code>.</p>
                  WorkflowStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The status of the investigation into a finding.
                          Allowed values are the following.</p> <ul> <li> <p>
                          <code>NEW</code> - The initial state of a finding,
                          before it is reviewed.</p> <p>Security Hub also resets
                          the workflow status from <code>NOTIFIED</code> or
                          <code>RESOLVED</code> to <code>NEW</code> in the
                          following cases:</p> <ul> <li> <p>The record state
                          changes from <code>ARCHIVED</code> to
                          <code>ACTIVE</code>.</p> </li> <li> <p>The compliance
                          status changes from <code>PASSED</code> to either
                          <code>WARNING</code>, <code>FAILED</code>, or
                          <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li>
                          <p> <code>NOTIFIED</code> - Indicates that the
                          resource owner has been notified about the security
                          issue. Used when the initial reviewer is not the
                          resource owner, and needs intervention from the
                          resource owner.</p> </li> <li> <p>
                          <code>SUPPRESSED</code> - The finding will not be
                          reviewed again and will not be acted upon.</p> </li>
                          <li> <p> <code>RESOLVED</code> - The finding was
                          reviewed and remediated and is now considered
                          resolved. </p> </li> </ul>
                type: object
              GroupByAttribute:
                description: >-
                  The attribute used to group the findings for the insight. The
                  grouping attribute identifies the type of item that the
                  insight applies to. For example, if an insight is grouped by
                  resource identifier, then the insight produces a list of
                  resource identifiers.
                pattern: .*\S.*
                type: string
              Name:
                description: The name of the custom insight to create.
                pattern: .*\S.*
                type: string
            required:
              - Name
              - Filters
              - GroupByAttribute
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInsightResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
  /insights/get:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Lists and describes insights for the specified insight ARNs.
      operationId: GetInsights
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              InsightArns:
                description: >-
                  The ARNs of the insights to describe. If you do not provide
                  any insight ARNs, then <code>GetInsights</code> returns all of
                  your custom insights. It does not return any managed insights.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
              MaxResults:
                description: The maximum number of items to return in the response.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  <p>The token that is required for pagination. On your first
                  call to the <code>GetInsights</code> operation, set the value
                  of this parameter to <code>NULL</code>.</p> <p>For subsequent
                  calls to the operation, to continue listing data, set the
                  value of this parameter to the value returned from the
                  previous response.</p>
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInsightsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/insights/results/{InsightArn}':
    get:
      description: >-
        Lists the results of the Security Hub insight specified by the insight
        ARN.
      operationId: GetInsightResults
      parameters:
        - description: The ARN of the insight for which to return results.
          in: path
          name: InsightArn
          pattern: .*\S.*
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInsightResultsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/insights/{InsightArn}':
    delete:
      description: Deletes the insight specified by the <code>InsightArn</code>.
      operationId: DeleteInsight
      parameters:
        - description: The ARN of the insight to delete.
          in: path
          name: InsightArn
          pattern: .*\S.*
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInsightResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        Updates the Security Hub insight identified by the specified insight
        ARN.
      operationId: UpdateInsight
      parameters:
        - description: The ARN of the insight that you want to update.
          in: path
          name: InsightArn
          pattern: .*\S.*
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Filters:
                description: >-
                  <p>A collection of attributes that are applied to all active
                  Security Hub-aggregated findings and that result in a subset
                  of findings that are included in this insight.</p> <p>You can
                  filter by up to 10 finding attributes. For each attribute, you
                  can provide up to 20 filter values.</p>
                properties:
                  AwsAccountId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The Amazon Web Services account ID that a finding is
                          generated in.
                  CompanyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the findings provider (company) that
                          owns the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/CompanyName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>CompanyName</code> field.</p>
                  ComplianceStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Exclusive to findings that are generated as the result
                          of a check run against a specific rule in a supported
                          standard, such as CIS Amazon Web Services Foundations.
                          Contains security standard-related finding details.
                  Confidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>A finding's confidence. Confidence is defined as
                          the likelihood that a finding accurately identifies
                          the behavior or issue that it was intended to
                          identify.</p> <p>Confidence is scored on a 0-100 basis
                          using a ratio scale, where 0 means zero percent
                          confidence and 100 means 100 percent confidence.</p>
                  CreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider captured the potential
                          security issue that a finding captured.
                  Criticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The level of importance assigned to the resources
                          associated with the finding.</p> <p>A score of 0 means
                          that the underlying resources have no criticality, and
                          a score of 100 is reserved for the most critical
                          resources.</p>
                  Description:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's description.
                  FindingProviderFieldsConfidence:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the finding
                          confidence. Confidence is defined as the likelihood
                          that a finding accurately identifies the behavior or
                          issue that it was intended to identify.</p>
                          <p>Confidence is scored on a 0-100 basis using a ratio
                          scale, where 0 means zero percent confidence and 100
                          means 100 percent confidence.</p>
                  FindingProviderFieldsCriticality:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          <p>The finding provider value for the level of
                          importance assigned to the resources associated with
                          the findings.</p> <p>A score of 0 means that the
                          underlying resources have no criticality, and a score
                          of 100 is reserved for the most critical resources.
                          </p>
                  FindingProviderFieldsRelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding identifier of a related finding that is
                          identified by the finding provider.
                  FindingProviderFieldsRelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding that is identified by the finding provider.
                  FindingProviderFieldsSeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The finding provider value for the severity label.
                  FindingProviderFieldsSeverityOriginal:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The finding provider's original value for the
                          severity.
                  FindingProviderFieldsTypes:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>One or more finding types that the finding provider
                          assigned to the finding. Uses the format of
                          <code>namespace/category/classifier</code> that
                          classify a finding.</p> <p>Valid namespace values are:
                          Software and Configuration Checks | TTPs | Effects |
                          Unusual Behaviors | Sensitive Data Identifications</p>
                  FirstObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider first observed the
                          potential security issue that a finding captured.
                  GeneratorId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier for the solution-specific component (a
                          discrete unit of logic) that generated a finding. In
                          various security-findings providers' solutions, this
                          generator can be called a rule, a check, a detector, a
                          plugin, etc.
                  Id:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The security findings provider-specific identifier for
                          a finding.
                  Keyword:
                    allOf:
                      - $ref: '#/definitions/KeywordFilterList'
                      - description: >-
                          A keyword for a finding.The Keyword property is
                          deprecated.
                        x-deprecated: true
                  LastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider most recently observed the
                          potential security issue that a finding captured.
                  MalwareName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the malware that was observed.
                  MalwarePath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The filesystem path of the malware that was observed.
                  MalwareState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The state of the malware that was observed.
                  MalwareType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of the malware that was observed.
                  NetworkDestinationDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The destination domain of network-related information
                          about a finding.
                  NetworkDestinationIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv4 address of network-related
                          information about a finding.
                  NetworkDestinationIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The destination IPv6 address of network-related
                          information about a finding.
                  NetworkDestinationPort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The destination port of network-related information
                          about a finding.
                  NetworkDirection:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Indicates the direction of network traffic associated
                          with a finding.
                  NetworkProtocol:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The protocol of network-related information about a
                          finding.
                  NetworkSourceDomain:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source domain of network-related information about
                          a finding.
                  NetworkSourceIpV4:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv4 address of network-related information
                          about a finding.
                  NetworkSourceIpV6:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: >-
                          The source IPv6 address of network-related information
                          about a finding.
                  NetworkSourceMac:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The source media access control (MAC) address of
                          network-related information about a finding.
                  NetworkSourcePort:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The source port of network-related information about a
                          finding.
                  NoteText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The text of a note.
                  NoteUpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The timestamp of when the note was updated.
                  NoteUpdatedBy:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The principal that created a note.
                  ProcessLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was launched.
                  ProcessName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the process.
                  ProcessParentPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The parent process ID.
                  ProcessPath:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The path to the process executable.
                  ProcessPid:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: The process ID.
                  ProcessTerminatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the process was terminated.
                  ProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN generated by Security Hub that uniquely
                          identifies a third-party company (security findings
                          provider) after this provider's product (solution that
                          generates findings) is registered with Security Hub.
                  ProductFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A data type where security-findings providers can
                          include additional solution-specific details that
                          aren't part of the defined
                          <code>AwsSecurityFinding</code> format.
                  ProductName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The name of the solution (product) that generates
                          findings.</p> <p>Note that this is a filter against
                          the <code>aws/securityhub/ProductName</code> field in
                          <code>ProductFields</code>. It is not a filter for the
                          top-level <code>ProductName</code> field.</p>
                  RecommendationText:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The recommendation of what to do about the issue
                          described in a finding.
                  RecordState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The updated record state for the finding.
                  Region:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Region from which the finding was generated.
                  RelatedFindingsId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The solution-generated identifier for a related
                          finding.
                  RelatedFindingsProductArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The ARN of the solution that generated a related
                          finding.
                  ResourceAwsEc2InstanceIamInstanceProfileArn:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The IAM profile ARN of the instance.
                  ResourceAwsEc2InstanceImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The Amazon Machine Image (AMI) ID of the instance.
                  ResourceAwsEc2InstanceIpV4Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv4 addresses associated with the instance.
                  ResourceAwsEc2InstanceIpV6Addresses:
                    allOf:
                      - $ref: '#/definitions/IpFilterList'
                      - description: The IPv6 addresses associated with the instance.
                  ResourceAwsEc2InstanceKeyName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The key name associated with the instance.
                  ResourceAwsEc2InstanceLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date and time the instance was launched.
                  ResourceAwsEc2InstanceSubnetId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the subnet that the instance was
                          launched in.
                  ResourceAwsEc2InstanceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The instance type of the instance.
                  ResourceAwsEc2InstanceVpcId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The identifier of the VPC that the instance was
                          launched in.
                  ResourceAwsIamAccessKeyCreatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The creation date/time of the IAM access key related
                          to a finding.
                  ResourceAwsIamAccessKeyPrincipalName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The name of the principal that is associated with an
                          IAM access key.
                  ResourceAwsIamAccessKeyStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The status of the IAM access key related to a finding.
                  ResourceAwsIamAccessKeyUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The user associated with the IAM access key related to
                          a finding.This filter is deprecated. Instead, use
                          ResourceAwsIamAccessKeyPrincipalName.
                        x-deprecated: true
                  ResourceAwsIamUserUserName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of an IAM user.
                  ResourceAwsS3BucketOwnerId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical user ID of the owner of the S3 bucket.
                  ResourceAwsS3BucketOwnerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The display name of the owner of the S3 bucket.
                  ResourceContainerImageId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The identifier of the image related to a finding.
                  ResourceContainerImageName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the image related to a finding.
                  ResourceContainerLaunchedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: The date/time that the container was started.
                  ResourceContainerName:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The name of the container related to a finding.
                  ResourceDetailsOther:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          The details of a resource that doesn't have a specific
                          subfield for the resource type defined.
                  ResourceId:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The canonical identifier for the given resource type.
                  ResourcePartition:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services partition name that
                          the Region is assigned to.
                  ResourceRegion:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The canonical Amazon Web Services external Region name
                          where this resource is located.
                  ResourceTags:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of Amazon Web Services tags associated with a
                          resource at the time the finding was processed.
                  ResourceType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          Specifies the type of the resource that details are
                          provided for.
                  SeverityLabel:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The label of a finding's severity.
                  SeverityNormalized:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The normalized severity of a finding.This filter is
                          deprecated. Instead, use SeverityLabel or
                          FindingProviderFieldsSeverityLabel.
                        x-deprecated: true
                  SeverityProduct:
                    allOf:
                      - $ref: '#/definitions/NumberFilterList'
                      - description: >-
                          The native severity as defined by the
                          security-findings provider's solution that generated
                          the finding.This filter is deprecated. Instead, use
                          FindingProviderSeverityOriginal.
                        x-deprecated: true
                  SourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A URL that links to a page about the current finding
                          in the security-findings provider's solution.
                  ThreatIntelIndicatorCategory:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The category of a threat intelligence indicator.
                  ThreatIntelIndicatorLastObservedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          The date/time of the last observation of a threat
                          intelligence indicator.
                  ThreatIntelIndicatorSource:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The source of the threat intelligence.
                  ThreatIntelIndicatorSourceUrl:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          The URL for more details from the source of the threat
                          intelligence.
                  ThreatIntelIndicatorType:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The type of a threat intelligence indicator.
                  ThreatIntelIndicatorValue:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The value of a threat intelligence indicator.
                  Title:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: A finding's title.
                  Type:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          A finding type in the format of
                          <code>namespace/category/classifier</code> that
                          classifies a finding.
                  UpdatedAt:
                    allOf:
                      - $ref: '#/definitions/DateFilterList'
                      - description: >-
                          An ISO8601-formatted timestamp that indicates when the
                          security-findings provider last updated the finding
                          record. 
                  UserDefinedFields:
                    allOf:
                      - $ref: '#/definitions/MapFilterList'
                      - description: >-
                          A list of name/value string pairs associated with the
                          finding. These are custom, user-defined fields added
                          to a finding. 
                  VerificationState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: The veracity of a finding.
                  WorkflowState:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The workflow state of a finding.</p> <p>Note that
                          this field is deprecated. To search for a finding
                          based on its workflow status, use
                          <code>WorkflowStatus</code>.</p>
                  WorkflowStatus:
                    allOf:
                      - $ref: '#/definitions/StringFilterList'
                      - description: >-
                          <p>The status of the investigation into a finding.
                          Allowed values are the following.</p> <ul> <li> <p>
                          <code>NEW</code> - The initial state of a finding,
                          before it is reviewed.</p> <p>Security Hub also resets
                          the workflow status from <code>NOTIFIED</code> or
                          <code>RESOLVED</code> to <code>NEW</code> in the
                          following cases:</p> <ul> <li> <p>The record state
                          changes from <code>ARCHIVED</code> to
                          <code>ACTIVE</code>.</p> </li> <li> <p>The compliance
                          status changes from <code>PASSED</code> to either
                          <code>WARNING</code>, <code>FAILED</code>, or
                          <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li>
                          <p> <code>NOTIFIED</code> - Indicates that the
                          resource owner has been notified about the security
                          issue. Used when the initial reviewer is not the
                          resource owner, and needs intervention from the
                          resource owner.</p> </li> <li> <p>
                          <code>SUPPRESSED</code> - The finding will not be
                          reviewed again and will not be acted upon.</p> </li>
                          <li> <p> <code>RESOLVED</code> - The finding was
                          reviewed and remediated and is now considered
                          resolved. </p> </li> </ul>
                type: object
              GroupByAttribute:
                description: >-
                  The updated <code>GroupBy</code> attribute that defines this
                  insight.
                pattern: .*\S.*
                type: string
              Name:
                description: The updated name for the insight.
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateInsightResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /invitations:
    get:
      description: >-
        <p>Lists all Security Hub membership invitations that were sent to the
        current Amazon Web Services account.</p> <p>This operation is only used
        by accounts that are managed by invitation. Accounts that are managed
        using the integration with Organizations do not receive invitations.</p>
      operationId: ListInvitations
      parameters:
        - description: 'The maximum number of items to return in the response. '
          in: query
          maximum: 50
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>ListInvitations</code> operation, set the value of this
            parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
            operation, to continue listing data, set the value of this parameter
            to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvitationsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /invitations/count:
    get:
      description: >-
        Returns the count of all Security Hub membership invitations that were
        sent to the current member account, not including the currently accepted
        invitation. 
      operationId: GetInvitationsCount
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInvitationsCountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /invitations/decline:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Declines invitations to become a member account.</p> <p>This
        operation is only used by accounts that are not part of an organization.
        Organization accounts do not receive invitations.</p>
      operationId: DeclineInvitations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: >-
                  The list of account IDs for the accounts from which to decline
                  the invitations to Security Hub.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeclineInvitationsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /invitations/delete:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes invitations received by the Amazon Web Services account to
        become a member account.</p> <p>This operation is only used by accounts
        that are not part of an organization. Organization accounts do not
        receive invitations.</p>
      operationId: DeleteInvitations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: >-
                  The list of the account IDs that sent the invitations to
                  delete.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInvitationsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
  /master:
    get:
      deprecated: true
      description: >-
        <p>This method is deprecated. Instead, use
        <code>GetAdministratorAccount</code>.</p> <p>The Security Hub console
        continues to use <code>GetMasterAccount</code>. It will eventually
        change to use <code>GetAdministratorAccount</code>. Any IAM policies
        that specifically control access to this function must continue to use
        <code>GetMasterAccount</code>. You should also add
        <code>GetAdministratorAccount</code> to your policies to ensure that the
        correct permissions are in place after the console begins to use
        <code>GetAdministratorAccount</code>.</p> <p>Provides the details for
        the Security Hub administrator account for the current member
        account.</p> <p>Can be used by both member accounts that are managed
        using Organizations and accounts that were invited manually.</p>
      operationId: GetMasterAccount
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMasterAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <p>This method is deprecated. Instead, use
        <code>AcceptAdministratorInvitation</code>.</p> <p>The Security Hub
        console continues to use <code>AcceptInvitation</code>. It will
        eventually change to use <code>AcceptAdministratorInvitation</code>. Any
        IAM policies that specifically control access to this function must
        continue to use <code>AcceptInvitation</code>. You should also add
        <code>AcceptAdministratorInvitation</code> to your policies to ensure
        that the correct permissions are in place after the console begins to
        use <code>AcceptAdministratorInvitation</code>.</p> <p>Accepts the
        invitation to be a member account and be monitored by the Security Hub
        administrator account that the invitation was sent from.</p> <p>This
        operation is only used by member accounts that are not added through
        Organizations.</p> <p>When the member account accepts the invitation,
        permission is granted to the administrator account to view findings
        generated in the member account.</p>
      operationId: AcceptInvitation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              InvitationId:
                description: >-
                  The identifier of the invitation sent from the Security Hub
                  administrator account.
                pattern: .*\S.*
                type: string
              MasterId:
                description: >-
                  The account ID of the Security Hub administrator account that
                  sent the invitation.
                pattern: .*\S.*
                type: string
            required:
              - MasterId
              - InvitationId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptInvitationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
  /master/disassociate:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      deprecated: true
      description: >-
        <p>This method is deprecated. Instead, use
        <code>DisassociateFromAdministratorAccount</code>.</p> <p>The Security
        Hub console continues to use <code>DisassociateFromMasterAccount</code>.
        It will eventually change to use
        <code>DisassociateFromAdministratorAccount</code>. Any IAM policies that
        specifically control access to this function must continue to use
        <code>DisassociateFromMasterAccount</code>. You should also add
        <code>DisassociateFromAdministratorAccount</code> to your policies to
        ensure that the correct permissions are in place after the console
        begins to use <code>DisassociateFromAdministratorAccount</code>.</p>
        <p>Disassociates the current Security Hub member account from the
        associated administrator account.</p> <p>This operation is only used by
        accounts that are not part of an organization. For organization
        accounts, only the administrator account can disassociate a member
        account.</p>
      operationId: DisassociateFromMasterAccount
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFromMasterAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /members:
    get:
      description: >-
        <p>Lists details about all member accounts for the current Security Hub
        administrator account.</p> <p>The results include both member accounts
        that belong to an organization and member accounts that were invited
        manually.</p>
      operationId: ListMembers
      parameters:
        - description: >-
            <p>Specifies which member accounts to include in the response based
            on their relationship status with the administrator account. The
            default value is <code>TRUE</code>.</p> <p>If
            <code>OnlyAssociated</code> is set to <code>TRUE</code>, the
            response includes member accounts whose relationship status with the
            administrator account is set to <code>ENABLED</code>.</p> <p>If
            <code>OnlyAssociated</code> is set to <code>FALSE</code>, the
            response includes all existing member accounts. </p>
          in: query
          name: OnlyAssociated
          required: false
          type: boolean
        - description: 'The maximum number of items to return in the response. '
          in: query
          maximum: 50
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>ListMembers</code> operation, set the value of this
            parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
            operation, to continue listing data, set the value of this parameter
            to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a member association in Security Hub between the specified
        accounts and the account used to make the request, which is the
        administrator account. If you are integrated with Organizations, then
        the administrator account is designated by the organization management
        account.</p> <p> <code>CreateMembers</code> is always used to add
        accounts that are not organization members.</p> <p>For accounts that are
        managed using Organizations, <code>CreateMembers</code> is only used in
        the following cases:</p> <ul> <li> <p>Security Hub is not configured to
        automatically add new organization accounts.</p> </li> <li> <p>The
        account was disassociated or deleted in Security Hub.</p> </li> </ul>
        <p>This action can only be used by an account that has Security Hub
        enabled. To enable Security Hub, you can use the
        <code>EnableSecurityHub</code> operation.</p> <p>For accounts that are
        not organization members, you create the account association and then
        send an invitation to the member account. To send the invitation, you
        use the <code>InviteMembers</code> operation. If the account owner
        accepts the invitation, the account becomes a member account in Security
        Hub.</p> <p>Accounts that are managed using Organizations do not receive
        an invitation. They automatically become a member account in Security
        Hub, and Security Hub is automatically enabled for those accounts. Note
        that Security Hub cannot be enabled automatically for the organization
        management account. The organization management account must enable
        Security Hub before the administrator account enables it as a member
        account.</p> <p>A permissions policy is added that permits the
        administrator account to view the findings generated in the member
        account. When Security Hub is enabled in a member account, the member
        account findings are also visible to the administrator account. </p>
        <p>To remove the association between the administrator and member
        accounts, use the <code>DisassociateFromMasterAccount</code> or
        <code>DisassociateMembers</code> operation.</p>
      operationId: CreateMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountDetails:
                description: >-
                  The list of accounts to associate with the Security Hub
                  administrator account. For each account, the list includes the
                  account ID and optionally the email address.
                items:
                  $ref: '#/definitions/AccountDetails'
                type: array
            required:
              - AccountDetails
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
  /members/delete:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes the specified member accounts from Security Hub.</p> <p>Can
        be used to delete member accounts that belong to an organization as well
        as member accounts that were invited manually.</p>
      operationId: DeleteMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: The list of account IDs for the member accounts to delete.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /members/disassociate:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Disassociates the specified member accounts from the associated
        administrator account.</p> <p>Can be used to disassociate both accounts
        that are managed using Organizations and accounts that were invited
        manually.</p>
      operationId: DisassociateMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: >-
                  The account IDs of the member accounts to disassociate from
                  the administrator account.
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /members/get:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns the details for the Security Hub member accounts for the
        specified account IDs.</p> <p>An administrator account can be either the
        delegated Security Hub administrator account for an organization or an
        administrator account that enabled Security Hub manually.</p> <p>The
        results include both member accounts that are managed using
        Organizations and accounts that were invited manually.</p>
      operationId: GetMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: >-
                  The list of account IDs for the Security Hub member accounts
                  to return the details for. 
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /members/invite:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Invites other Amazon Web Services accounts to become member accounts
        for the Security Hub administrator account that the invitation is sent
        from.</p> <p>This operation is only used to invite accounts that do not
        belong to an organization. Organization accounts do not receive
        invitations.</p> <p>Before you can use this action to invite a member,
        you must first use the <code>CreateMembers</code> action to create the
        member account in Security Hub.</p> <p>When the account owner enables
        Security Hub and accepts the invitation to become a member account, the
        administrator account can view the findings generated from the member
        account.</p>
      operationId: InviteMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountIds:
                description: >-
                  The list of account IDs of the Amazon Web Services accounts to
                  invite to Security Hub as members. 
                items:
                  $ref: '#/definitions/NonEmptyString'
                type: array
            required:
              - AccountIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InviteMembersResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /organization/admin:
    get:
      description: >-
        Lists the Security Hub administrator accounts. Can only be called by the
        organization management account.
      operationId: ListOrganizationAdminAccounts
      parameters:
        - description: The maximum number of items to return in the response.
          in: query
          maximum: 10
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            The token that is required for pagination. On your first call to the
            <code>ListOrganizationAdminAccounts</code> operation, set the value
            of this parameter to <code>NULL</code>. For subsequent calls to the
            operation, to continue listing data, set the value of this parameter
            to the value returned from the previous response. 
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOrganizationAdminAccountsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /organization/admin/disable:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Disables a Security Hub administrator account. Can only be called by the
        organization management account.
      operationId: DisableOrganizationAdminAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AdminAccountId:
                description: >-
                  The Amazon Web Services account identifier of the Security Hub
                  administrator account.
                pattern: .*\S.*
                type: string
            required:
              - AdminAccountId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableOrganizationAdminAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /organization/admin/enable:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Designates the Security Hub administrator account for an organization.
        Can only be called by the organization management account.
      operationId: EnableOrganizationAdminAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AdminAccountId:
                description: >-
                  The Amazon Web Services account identifier of the account to
                  designate as the Security Hub administrator account.
                pattern: .*\S.*
                type: string
            required:
              - AdminAccountId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableOrganizationAdminAccountResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /organization/configuration:
    get:
      description: >-
        Returns information about the Organizations configuration for Security
        Hub. Can only be called from a Security Hub administrator account.
      operationId: DescribeOrganizationConfiguration
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationConfigurationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Used to update the configuration related to Organizations. Can only be
        called from a Security Hub administrator account.
      operationId: UpdateOrganizationConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AutoEnable:
                description: >-
                  <p>Whether to automatically enable Security Hub for new
                  accounts in the organization.</p> <p>By default, this is
                  <code>false</code>, and new accounts are not added
                  automatically.</p> <p>To automatically enable Security Hub for
                  new accounts, set this to <code>true</code>.</p>
                type: boolean
            required:
              - AutoEnable
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateOrganizationConfigurationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /productSubscriptions:
    get:
      description: >-
        Lists all findings-generating solutions (products) that you are
        subscribed to receive findings from in Security Hub.
      operationId: ListEnabledProductsForImport
      parameters:
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>ListEnabledProductsForImport</code> operation, set the
            value of this parameter to <code>NULL</code>.</p> <p>For subsequent
            calls to the operation, to continue listing data, set the value of
            this parameter to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
        - description: The maximum number of items to return in the response.
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEnabledProductsForImportResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Enables the integration of a partner product with Security Hub.
        Integrated products send findings to Security Hub.</p> <p>When you
        enable a product integration, a permissions policy that grants
        permission for the product to send findings to Security Hub is
        applied.</p>
      operationId: EnableImportFindingsForProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ProductArn:
                description: The ARN of the product to enable the integration for.
                pattern: .*\S.*
                type: string
            required:
              - ProductArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableImportFindingsForProductResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/productSubscriptions/{ProductSubscriptionArn}':
    delete:
      description: >-
        Disables the integration of the specified product with Security Hub.
        After the integration is disabled, findings from that product are no
        longer sent to Security Hub.
      operationId: DisableImportFindingsForProduct
      parameters:
        - description: The ARN of the integrated product to disable the integration for.
          in: path
          name: ProductSubscriptionArn
          pattern: .*\S.*
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableImportFindingsForProductResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /products:
    get:
      description: >-
        <p>Returns information about product integrations in Security Hub.</p>
        <p>You can optionally provide an integration ARN. If you provide an
        integration ARN, then the results only include that integration.</p>
        <p>If you do not provide an integration ARN, then the results include
        all of the available product integrations. </p>
      operationId: DescribeProducts
      parameters:
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>DescribeProducts</code> operation, set the value of this
            parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
            operation, to continue listing data, set the value of this parameter
            to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
        - description: The maximum number of results to return.
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: The ARN of the integration to return.
          in: query
          name: ProductArn
          pattern: .*\S.*
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /standards:
    get:
      description: >-
        <p>Returns a list of the available standards in Security Hub.</p> <p>For
        each standard, the results include the standard ARN, the name, and a
        description. </p>
      operationId: DescribeStandards
      parameters:
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>DescribeStandards</code> operation, set the value of this
            parameter to <code>NULL</code>.</p> <p>For subsequent calls to the
            operation, to continue listing data, set the value of this parameter
            to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
        - description: The maximum number of standards to return.
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStandardsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/standards/control/{StandardsControlArn}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        Used to control whether an individual security standard control is
        enabled or disabled.
      operationId: UpdateStandardsControl
      parameters:
        - description: The ARN of the security standard control to enable or disable.
          in: path
          name: StandardsControlArn
          pattern: .*\S.*
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ControlStatus:
                description: The updated status of the security standard control.
                enum:
                  - ENABLED
                  - DISABLED
                type: string
              DisabledReason:
                description: >-
                  A description of the reason why you are disabling a security
                  standard control. If you are disabling a control, then this is
                  required.
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStandardsControlResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/standards/controls/{StandardsSubscriptionArn}':
    get:
      description: >-
        <p>Returns a list of security standards controls.</p> <p>For each
        control, the results include information about whether it is currently
        enabled, the severity, and a link to remediation information.</p>
      operationId: DescribeStandardsControls
      parameters:
        - description: >-
            The ARN of a resource that represents your subscription to a
            supported standard. To get the subscription ARNs of the standards
            you have enabled, use the <code>GetEnabledStandards</code>
            operation.
          in: path
          name: StandardsSubscriptionArn
          pattern: .*\S.*
          required: true
          type: string
        - description: >-
            <p>The token that is required for pagination. On your first call to
            the <code>DescribeStandardsControls</code> operation, set the value
            of this parameter to <code>NULL</code>.</p> <p>For subsequent calls
            to the operation, to continue listing data, set the value of this
            parameter to the value returned from the previous response.</p>
          in: query
          name: NextToken
          required: false
          type: string
        - description: The maximum number of security standard controls to return.
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStandardsControlsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /standards/deregister:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Disables the standards specified by the provided
        <code>StandardsSubscriptionArns</code>.</p> <p>For more information, see
        <a
        href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security
        Standards</a> section of the <i>Security Hub User Guide</i>.</p>
      operationId: BatchDisableStandards
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              StandardsSubscriptionArns:
                description: The ARNs of the standards subscriptions to disable.
                items:
                  $ref: '#/definitions/NonEmptyString'
                maxItems: 25
                minItems: 1
                type: array
            required:
              - StandardsSubscriptionArns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDisableStandardsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /standards/get:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of the standards that are currently enabled.
      operationId: GetEnabledStandards
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MaxResults:
                description: The maximum number of results to return in the response.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  <p>The token that is required for pagination. On your first
                  call to the <code>GetEnabledStandards</code> operation, set
                  the value of this parameter to <code>NULL</code>.</p> <p>For
                  subsequent calls to the operation, to continue listing data,
                  set the value of this parameter to the value returned from the
                  previous response.</p>
                type: string
              StandardsSubscriptionArns:
                description: >-
                  The list of the standards subscription ARNs for the standards
                  to retrieve.
                items:
                  $ref: '#/definitions/NonEmptyString'
                maxItems: 25
                minItems: 1
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEnabledStandardsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /standards/register:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Enables the standards specified by the provided
        <code>StandardsArn</code>. To obtain the ARN for a standard, use the
        <code>DescribeStandards</code> operation.</p> <p>For more information,
        see the <a
        href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security
        Standards</a> section of the <i>Security Hub User Guide</i>.</p>
      operationId: BatchEnableStandards
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              StandardsSubscriptionRequests:
                description: The list of standards checks to enable.
                items:
                  $ref: '#/definitions/StandardsSubscriptionRequest'
                maxItems: 25
                minItems: 1
                type: array
            required:
              - StandardsSubscriptionRequests
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchEnableStandardsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InvalidAccessException
          schema:
            $ref: '#/definitions/InvalidAccessException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/tags/{ResourceArn}':
    get:
      description: Returns a list of tags associated with a resource.
      operationId: ListTagsForResource
      parameters:
        - description: The ARN of the resource to retrieve tags for.
          in: path
          name: ResourceArn
          pattern: '^arn:aws:securityhub:.*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds one or more tags to a resource.
      operationId: TagResource
      parameters:
        - description: The ARN of the resource to apply the tags to.
          in: path
          name: ResourceArn
          pattern: '^arn:aws:securityhub:.*'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags to add to the resource. You can add up to 50 tags at
                  a time. The tag keys can be no longer than 128 characters. The
                  tag values can be no longer than 256 characters.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      description: Removes one or more tags from a resource.
      operationId: UntagResource
      parameters:
        - description: The ARN of the resource to remove the tags from.
          in: path
          name: ResourceArn
          pattern: '^arn:aws:securityhub:.*'
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The tag keys associated with the tags to remove from the resource.
            You can remove up to 50 tags at a time.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

