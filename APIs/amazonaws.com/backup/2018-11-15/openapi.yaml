basePath: /
definitions:
  ARN:
    type: string
  AccountId:
    pattern: '^[0-9]{12}$'
    type: string
  AdvancedBackupSetting:
    description: A list of backup options for each resource type.
    properties:
      BackupOptions:
        allOf:
          - $ref: '#/definitions/BackupOptions'
          - description: >-
              <p>Specifies the backup option for a selected resource. This
              option is only available for Windows VSS backup jobs.</p> <p>Valid
              values: </p> <p>Set to <code>"WindowsVSS":"enabled"</code> to
              enable the <code>WindowsVSS</code> backup option and create a
              Windows VSS backup. </p> <p>Set to
              <code>"WindowsVSS":"disabled"</code> to create a regular backup.
              The <code>WindowsVSS</code> option is not enabled by default.</p>
              <p>If you specify an invalid option, you get an
              <code>InvalidParameterValueException</code> exception.</p> <p>For
              more information about Windows VSS backups, see <a
              href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating
              a VSS-Enabled Windows Backup</a>.</p>
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              <p>Specifies an object containing resource type and backup
              options. The only supported resource type is Amazon EC2 instances
              with Windows Volume Shadow Copy Service (VSS). For a
              CloudFormation example, see the <a
              href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample
              CloudFormation template to enable Windows VSS</a> in the <i>Backup
              User Guide</i>.</p> <p>Valid values: <code>EC2</code>.</p>
    type: object
  AdvancedBackupSettings:
    items:
      $ref: '#/definitions/AdvancedBackupSetting'
    type: array
  AlreadyExistsException: {}
  BackupJob:
    description: Contains detailed information about a backup job.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The account ID that owns the backup job.
      BackupJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
      BackupOptions:
        allOf:
          - $ref: '#/definitions/BackupOptions'
          - description: >-
              <p>Specifies the backup option for a selected resource. This
              option is only available for Windows Volume Shadow Copy Service
              (VSS) backup jobs.</p> <p>Valid values: Set to
              <code>"WindowsVSS":"enabled"</code> to enable the
              <code>WindowsVSS</code> backup option and create a Windows VSS
              backup. Set to <code>"WindowsVSS":"disabled"</code> to create a
              regular backup. If you specify an invalid option, you get an
              <code>InvalidParameterValueException</code> exception.</p>
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a backup.'
      BackupType:
        allOf:
          - $ref: '#/definitions/string'
          - description: Represents the type of backup for a backup job.
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      BytesTransferred:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The size in bytes transferred to a backup vault at the time that
              the job status was queried.
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a job to create a backup job is completed, in
              Unix format and Coordinated Universal Time (UTC). The value of
              <code>CompletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/RecoveryPointCreator'
          - description: >-
              Contains identifying information about the creation of a backup
              job, including the <code>BackupPlanArn</code>,
              <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and
              <code>BackupRuleId</code> of the backup plan used to create it.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ExpectedCompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a job to back up resources is expected to be
              completed, in Unix format and Coordinated Universal Time (UTC).
              The value of <code>ExpectedCompletionDate</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point. IAM roles other than the default role must include either
              <code>AWSBackup</code> or <code>AwsBackup</code> in the role name.
              For example,
              <code>arn:aws:iam::123456789012:role/AWSBackupRDSAccess</code>.
              Role names without those strings lack permissions to perform
              backup jobs.
      PercentDone:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Contains an estimated percentage complete of a job at the time the
              job status was queried.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a resource. The format of the ARN
              depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource to be backed up; for
              example, an Amazon Elastic Block Store (Amazon EBS) volume or an
              Amazon Relational Database Service (Amazon RDS) database. For
              Windows Volume Shadow Copy Service (VSS) backups, the only
              supported resource type is Amazon EC2.
      StartBy:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              Specifies the time in Unix format and Coordinated Universal Time
              (UTC) when a backup job must be started before it is canceled. The
              value is calculated by adding the start window to the scheduled
              time. So if the scheduled time were 6:00 PM and the start window
              is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the
              date specified. The value of <code>StartBy</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      State:
        allOf:
          - $ref: '#/definitions/BackupJobState'
          - description: The current state of a resource recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A detailed message explaining the status of the job to back up a
              resource.
    type: object
  BackupJobState:
    enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
    type: string
  BackupJobsList:
    items:
      $ref: '#/definitions/BackupJob'
    type: array
  BackupOptionKey:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupOptionValue:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupOptions:
    additionalProperties:
      $ref: '#/definitions/BackupOptionValue'
    type: object
  BackupPlan:
    description: >-
      Contains an optional backup plan display name and an array of
      <code>BackupRule</code> objects, each of which specifies a backup rule.
      Each rule in a backup plan is a separate scheduled task and can back up a
      different selection of Amazon Web Services resources.
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: >-
              Contains a list of <code>BackupOptions</code> for each resource
              type.
      BackupPlanName:
        allOf:
          - $ref: '#/definitions/BackupPlanName'
          - description: The display name of a backup plan.
      Rules:
        allOf:
          - $ref: '#/definitions/BackupRules'
          - description: >-
              An array of <code>BackupRule</code> objects, each of which
              specifies a scheduled task that is used to back up a selection of
              resources. 
    required:
      - BackupPlanName
      - Rules
    type: object
  BackupPlanInput:
    description: >-
      Contains an optional backup plan display name and an array of
      <code>BackupRule</code> objects, each of which specifies a backup rule.
      Each rule in a backup plan is a separate scheduled task and can back up a
      different selection of Amazon Web Services resources. 
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: >-
              Specifies a list of <code>BackupOptions</code> for each resource
              type. These settings are only available for Windows Volume Shadow
              Copy Service (VSS) backup jobs.
      BackupPlanName:
        allOf:
          - $ref: '#/definitions/BackupPlanName'
          - description: The optional display name of a backup plan.
      Rules:
        allOf:
          - $ref: '#/definitions/BackupRulesInput'
          - description: >-
              An array of <code>BackupRule</code> objects, each of which
              specifies a scheduled task that is used to back up a selection of
              resources.
    required:
      - BackupPlanName
      - Rules
    type: object
  BackupPlanName:
    type: string
  BackupPlanTemplatesList:
    items:
      $ref: '#/definitions/BackupPlanTemplatesListMember'
    type: array
  BackupPlanTemplatesListMember:
    description: An object specifying metadata associated with a backup plan template.
    properties:
      BackupPlanTemplateId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a stored backup plan template.
      BackupPlanTemplateName:
        allOf:
          - $ref: '#/definitions/string'
          - description: The optional display name of a backup plan template.
    type: object
  BackupPlanVersionsList:
    items:
      $ref: '#/definitions/BackupPlansListMember'
    type: array
  BackupPlansList:
    items:
      $ref: '#/definitions/BackupPlansListMember'
    type: array
  BackupPlansListMember:
    description: Contains metadata about a backup plan.
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: Contains a list of <code>BackupOptions</code> for a resource type.
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      BackupPlanName:
        allOf:
          - $ref: '#/definitions/BackupPlanName'
          - description: The display name of a saved backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a resource backup plan is created, in Unix
              format and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      DeletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup plan is deleted, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>DeletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      LastExecutionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The last time a job to back up resources was run with this rule. A
              date and time, in Unix format and Coordinated Universal Time
              (UTC). The value of <code>LastExecutionDate</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      VersionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Unique, randomly generated, Unicode, UTF-8 encoded strings that
              are at most 1,024 bytes long. Version IDs cannot be edited.
    type: object
  BackupRule:
    description: Specifies a scheduled task used to back up a selection of resources.
    properties:
      CompletionWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes after a backup job is successfully started
              before it must be completed or it will be canceled by Backup. This
              value is optional.
      CopyActions:
        allOf:
          - $ref: '#/definitions/CopyActions'
          - description: >-
              An array of <code>CopyAction</code> objects, which contains the
              details of the copy operation.
      EnableContinuousBackup:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether Backup creates continuous backups. True causes
              Backup to create continuous backups capable of point-in-time
              restore (PITR). False (or not specified) causes Backup to create
              snapshot backups.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup transitions and
              expires backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointTags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              An array of key-value pair strings that are assigned to resources
              that are associated with this rule when restored from backup.
      RuleId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Uniquely identifies a rule that is used to schedule the backup of
              a selection of resources.
      RuleName:
        allOf:
          - $ref: '#/definitions/BackupRuleName'
          - description: An optional display name for a backup rule.
      ScheduleExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              A cron expression in UTC specifying when Backup initiates a backup
              job. For more information about cron expressions, see <a
              href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html">Schedule
              Expressions for Rules</a> in the <i>Amazon CloudWatch Events User
              Guide.</i>. Prior to specifying a value for this parameter, we
              recommend testing your cron expression using one of the many
              available cron generator and testing tools.
      StartWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes after a backup is scheduled before a job will
              be canceled if it doesn't start successfully. This value is
              optional.
      TargetBackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
    required:
      - RuleName
      - TargetBackupVaultName
    type: object
  BackupRuleInput:
    description: Specifies a scheduled task used to back up a selection of resources.
    properties:
      CompletionWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes after a backup job is successfully started
              before it must be completed or it will be canceled by Backup. This
              value is optional.
      CopyActions:
        allOf:
          - $ref: '#/definitions/CopyActions'
          - description: >-
              An array of <code>CopyAction</code> objects, which contains the
              details of the copy operation.
      EnableContinuousBackup:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Specifies whether Backup creates continuous backups. True causes
              Backup to create continuous backups capable of point-in-time
              restore (PITR). False (or not specified) causes Backup to create
              snapshot backups.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup will transition and
              expire backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointTags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              To help organize your resources, you can assign your own metadata
              to the resources that you create. Each tag is a key-value pair.
      RuleName:
        allOf:
          - $ref: '#/definitions/BackupRuleName'
          - description: An optional display name for a backup rule.
      ScheduleExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              A CRON expression in UTC specifying when Backup initiates a backup
              job.
      StartWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes after a backup is scheduled before a job will
              be canceled if it doesn't start successfully. This value is
              optional.
      TargetBackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
    required:
      - RuleName
      - TargetBackupVaultName
    type: object
  BackupRuleName:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupRules:
    items:
      $ref: '#/definitions/BackupRule'
    type: array
  BackupRulesInput:
    items:
      $ref: '#/definitions/BackupRuleInput'
    type: array
  BackupSelection:
    description: Used to specify a set of resources to a backup plan.
    properties:
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              The ARN of the IAM role that Backup uses to authenticate when
              backing up the target resource; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      ListOfTags:
        allOf:
          - $ref: '#/definitions/ListOfTags'
          - description: >-
              An array of conditions used to specify a set of resources to
              assign to a backup plan; for example, <code>"StringEquals":
              {"ec2:ResourceTag/Department": "accounting"</code>. Assigns the
              backup plan to every resource with at least one matching tag.
      Resources:
        allOf:
          - $ref: '#/definitions/ResourceArns'
          - description: >-
              An array of strings that contain Amazon Resource Names (ARNs) of
              resources to assign to a backup plan.
      SelectionName:
        allOf:
          - $ref: '#/definitions/BackupSelectionName'
          - description: The display name of a resource selection document.
    required:
      - SelectionName
      - IamRoleArn
    type: object
  BackupSelectionName:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupSelectionsList:
    items:
      $ref: '#/definitions/BackupSelectionsListMember'
    type: array
  BackupSelectionsListMember:
    description: Contains metadata about a <code>BackupSelection</code> object.
    properties:
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup plan is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role Amazon Resource Name (ARN) to create the
              target recovery point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      SelectionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Uniquely identifies a request to assign a set of resources to a
              backup plan.
      SelectionName:
        allOf:
          - $ref: '#/definitions/BackupSelectionName'
          - description: The display name of a resource selection document.
    type: object
  BackupVaultEvent:
    enum:
      - BACKUP_JOB_STARTED
      - BACKUP_JOB_COMPLETED
      - BACKUP_JOB_SUCCESSFUL
      - BACKUP_JOB_FAILED
      - BACKUP_JOB_EXPIRED
      - RESTORE_JOB_STARTED
      - RESTORE_JOB_COMPLETED
      - RESTORE_JOB_SUCCESSFUL
      - RESTORE_JOB_FAILED
      - COPY_JOB_STARTED
      - COPY_JOB_SUCCESSFUL
      - COPY_JOB_FAILED
      - RECOVERY_POINT_MODIFIED
      - BACKUP_PLAN_CREATED
      - BACKUP_PLAN_MODIFIED
    type: string
  BackupVaultEvents:
    items:
      $ref: '#/definitions/BackupVaultEvent'
    type: array
  BackupVaultList:
    items:
      $ref: '#/definitions/BackupVaultListMember'
    type: array
  BackupVaultListMember:
    description: Contains metadata about a backup vault.
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a resource backup is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key that is used to protect your
              backups; for example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
      NumberOfRecoveryPoints:
        allOf:
          - $ref: '#/definitions/long'
          - description: The number of recovery points that are stored in a backup vault.
    type: object
  BackupVaultName:
    pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    type: string
  Boolean:
    type: boolean
  CalculatedLifecycle:
    description: >-
      <p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code>
      timestamps, which are used to specify a lifecycle for a recovery
      point.</p> <p>The lifecycle defines when a protected resource is
      transitioned to cold storage and when it expires. Backup transitions and
      expires backups automatically according to the lifecycle that you
      define.</p> <p>Backups transitioned to cold storage must be stored in cold
      storage for a minimum of 90 days. Therefore, the “expire after days”
      setting must be 90 days greater than the “transition to cold after days”
      setting. The “transition to cold after days” setting cannot be changed
      after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file
      system backups can be transitioned to cold storage.</p>
    properties:
      DeleteAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: A timestamp that specifies when to delete a recovery point.
      MoveToColdStorageAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              A timestamp that specifies when to transition a recovery point to
              cold storage.
    type: object
  ComplianceResourceIdList:
    items:
      $ref: '#/definitions/string'
    maxItems: 100
    minItems: 1
    type: array
  Condition:
    description: >-
      Contains an array of triplets made up of a condition type (such as
      <code>StringEquals</code>), a key, and a value. Conditions are used to
      filter resources in a selection that is assigned to a backup plan.
    properties:
      ConditionKey:
        allOf:
          - $ref: '#/definitions/ConditionKey'
          - description: >-
              The key in a key-value pair. For example, in
              <code>"ec2:ResourceTag/Department": "accounting"</code>,
              <code>"ec2:ResourceTag/Department"</code> is the key.
      ConditionType:
        allOf:
          - $ref: '#/definitions/ConditionType'
          - description: >-
              An operation, such as <code>StringEquals</code>, that is applied
              to a key-value pair used to filter resources in a selection.
      ConditionValue:
        allOf:
          - $ref: '#/definitions/ConditionValue'
          - description: >-
              The value in a key-value pair. For example, in
              <code>"ec2:ResourceTag/Department": "accounting"</code>,
              <code>"accounting"</code> is the value.
    required:
      - ConditionType
      - ConditionKey
      - ConditionValue
    type: object
  ConditionKey:
    type: string
  ConditionType:
    enum:
      - STRINGEQUALS
    type: string
  ConditionValue:
    type: string
  ConflictException: {}
  ControlInputParameter:
    description: >-
      A list of parameters for a control. A control can have zero, one, or more
      than one parameter. An example of a control with two parameters is:
      "backup plan frequency is at least <code>daily</code> and the retention
      period is at least <code>1 year</code>". The first parameter is
      <code>daily</code>. The second parameter is <code>1 year</code>.
    properties:
      ParameterName:
        allOf:
          - $ref: '#/definitions/ParameterName'
          - description: >-
              The name of a parameter, for example,
              <code>BackupPlanFrequency</code>.
      ParameterValue:
        allOf:
          - $ref: '#/definitions/ParameterValue'
          - description: 'The value of parameter, for example, <code>hourly</code>.'
    type: object
  ControlInputParameters:
    items:
      $ref: '#/definitions/ControlInputParameter'
    type: array
  ControlName:
    type: string
  ControlScope:
    description: >-
      <p>A framework consists of one or more controls. Each control has its own
      control scope. The control scope defines what the control will evaluate.
      Three examples of control scopes are: a specific backup plan, all backup
      plans with a specific tag, or all backup plans.</p> <note> <p>To set a
      control scope that includes all of a particular resource, leave the
      <code>ControlScope</code> empty or do not pass it when calling
      <code>CreateFramework</code>.</p> </note>
    properties:
      ComplianceResourceIds:
        allOf:
          - $ref: '#/definitions/ComplianceResourceIdList'
          - description: >-
              Describes whether the control scope includes a specific resource
              identified by its unique Amazon Resource Name (ARN).
      ComplianceResourceTypes:
        allOf:
          - $ref: '#/definitions/ResourceTypeList'
          - description: >-
              Describes whether the control scope includes one or more types of
              resources, such as <code>EFS</code> or <code>RDS</code>.
      Tags:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: >-
              Describes whether the control scope includes resources with one or
              more tags. Each tag is a key-value pair.
    type: object
  CopyAction:
    description: The details of the copy operation.
    properties:
      DestinationBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies the
              destination backup vault for the copied backup. For example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
    required:
      - DestinationBackupVaultArn
    type: object
  CopyActions:
    items:
      $ref: '#/definitions/CopyAction'
    type: array
  CopyJob:
    description: Contains detailed information about a copy job.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The account ID that owns the copy job.
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a copy job.'
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a copy job is completed, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CompletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CopyJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a copy job.
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a copy job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      DestinationBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a
              destination copy vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      DestinationRecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a destination recovery point; for
              example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to copy the target recovery point;
              for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The Amazon Web Services resource to be copied; for example, an
              Amazon Elastic Block Store (Amazon EBS) volume or an Amazon
              Relational Database Service (Amazon RDS) database.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource to be copied; for
              example, an Amazon Elastic Block Store (Amazon EBS) volume or an
              Amazon Relational Database Service (Amazon RDS) database.
      SourceBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a source
              copy vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. 
      SourceRecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a source recovery point; for
              example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      State:
        allOf:
          - $ref: '#/definitions/CopyJobState'
          - description: The current state of a copy job.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A detailed message explaining the status of the job to copy a
              resource.
    type: object
  CopyJobState:
    enum:
      - CREATED
      - RUNNING
      - COMPLETED
      - FAILED
    type: string
  CopyJobsList:
    items:
      $ref: '#/definitions/CopyJob'
    type: array
  CreateBackupPlanInput:
    properties:
      BackupPlan:
        allOf:
          - $ref: '#/definitions/BackupPlanInput'
          - description: >-
              Specifies the body of a backup plan. Includes a
              <code>BackupPlanName</code> and one or more sets of
              <code>Rules</code>.
      BackupPlanTags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              To help organize your resources, you can assign your own metadata
              to the resources that you create. Each tag is a key-value pair.
              The specified tags are assigned to all backups created with this
              plan.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Identifies the request and allows failed requests to be retried
              without the risk of running the operation twice. If the request
              includes a <code>CreatorRequestId</code> that matches an existing
              backup plan, that plan is returned. This parameter is optional.
    required:
      - BackupPlan
    title: CreateBackupPlanInput
    type: object
  CreateBackupPlanOutput:
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: >-
              A list of <code>BackupOptions</code> settings for a resource type.
              This option is only available for Windows Volume Shadow Copy
              Service (VSS) backup jobs.
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup plan is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      VersionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Unique, randomly generated, Unicode, UTF-8 encoded strings that
              are at most 1,024 bytes long. They cannot be edited.
    type: object
  CreateBackupSelectionInput:
    properties:
      BackupSelection:
        allOf:
          - $ref: '#/definitions/BackupSelection'
          - description: >-
              Specifies the body of a request to assign a set of resources to a
              backup plan.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
    required:
      - BackupSelection
    title: CreateBackupSelectionInput
    type: object
  CreateBackupSelectionOutput:
    properties:
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup selection is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      SelectionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Uniquely identifies the body of a request to assign a set of
              resources to a backup plan.
    type: object
  CreateBackupVaultInput:
    properties:
      BackupVaultTags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              Metadata that you can assign to help organize the resources that
              you create. Each tag is a key-value pair.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key that is used to protect your
              backups; for example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
    title: CreateBackupVaultInput
    type: object
  CreateBackupVaultOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Region where they are created. They consist
              of lowercase letters, numbers, and hyphens.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup vault is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
    type: object
  CreateFrameworkInput:
    properties:
      FrameworkControls:
        allOf:
          - $ref: '#/definitions/FrameworkControls'
          - description: >-
              A list of the controls that make up the framework. Each control in
              the list has a name, input parameters, and scope.
      FrameworkDescription:
        allOf:
          - $ref: '#/definitions/FrameworkDescription'
          - description: >-
              An optional description of the framework with a maximum of 1,024
              characters.
      FrameworkName:
        allOf:
          - $ref: '#/definitions/FrameworkName'
          - description: >-
              The unique name of the framework. The name must be between 1 and
              256 characters, starting with a letter, and consisting of letters
              (a-z, A-Z), numbers (0-9), and underscores (_).
      FrameworkTags:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: >-
              Metadata that you can assign to help organize the frameworks that
              you create. Each tag is a key-value pair.
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>CreateFrameworkInput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
    required:
      - FrameworkName
      - FrameworkControls
    title: CreateFrameworkInput
    type: object
  CreateFrameworkOutput:
    properties:
      FrameworkArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      FrameworkName:
        allOf:
          - $ref: '#/definitions/FrameworkName'
          - description: >-
              The unique name of the framework. The name must be between 1 and
              256 characters, starting with a letter, and consisting of letters
              (a-z, A-Z), numbers (0-9), and underscores (_).
    type: object
  CreateReportPlanInput:
    properties:
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>CreateReportPlanInput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
      ReportDeliveryChannel:
        allOf:
          - $ref: '#/definitions/ReportDeliveryChannel'
          - description: >-
              A structure that contains information about where and how to
              deliver your reports, specifically your Amazon S3 bucket name, S3
              key prefix, and the formats of your reports.
      ReportPlanDescription:
        allOf:
          - $ref: '#/definitions/ReportPlanDescription'
          - description: >-
              An optional description of the report plan with a maximum of 1,024
              characters.
      ReportPlanName:
        allOf:
          - $ref: '#/definitions/ReportPlanName'
          - description: >-
              The unique name of the report plan. The name must be between 1 and
              256 characters, starting with a letter, and consisting of letters
              (a-z, A-Z), numbers (0-9), and underscores (_).
      ReportPlanTags:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: >-
              Metadata that you can assign to help organize the frameworks that
              you create. Each tag is a key-value pair.
      ReportSetting:
        allOf:
          - $ref: '#/definitions/ReportSetting'
          - description: >-
              <p>Identifies the report template for the report. Reports are
              built using a report template. The report templates are:</p> <p>
              <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT |
              RESTORE_JOB_REPORT</code> </p>
    required:
      - ReportPlanName
      - ReportDeliveryChannel
      - ReportSetting
    title: CreateReportPlanInput
    type: object
  CreateReportPlanOutput:
    properties:
      ReportPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      ReportPlanName:
        allOf:
          - $ref: '#/definitions/ReportPlanName'
          - description: The unique name of the report plan.
    type: object
  CronExpression:
    type: string
  DeleteBackupPlanInput:
    properties: {}
    title: DeleteBackupPlanInput
    type: object
  DeleteBackupPlanOutput:
    properties:
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      DeletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup plan is deleted, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>DeletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      VersionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Unique, randomly generated, Unicode, UTF-8 encoded strings that
              are at most 1,024 bytes long. Version IDs cannot be edited.
    type: object
  DeleteBackupSelectionInput:
    properties: {}
    title: DeleteBackupSelectionInput
    type: object
  DeleteBackupVaultAccessPolicyInput:
    properties: {}
    title: DeleteBackupVaultAccessPolicyInput
    type: object
  DeleteBackupVaultInput:
    properties: {}
    title: DeleteBackupVaultInput
    type: object
  DeleteBackupVaultNotificationsInput:
    properties: {}
    title: DeleteBackupVaultNotificationsInput
    type: object
  DeleteFrameworkInput:
    properties: {}
    title: DeleteFrameworkInput
    type: object
  DeleteRecoveryPointInput:
    properties: {}
    title: DeleteRecoveryPointInput
    type: object
  DeleteReportPlanInput:
    properties: {}
    title: DeleteReportPlanInput
    type: object
  DependencyFailureException: {}
  DescribeBackupJobInput:
    properties: {}
    title: DescribeBackupJobInput
    type: object
  DescribeBackupJobOutput:
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: Returns the account ID that owns the backup job.
      BackupJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
      BackupOptions:
        allOf:
          - $ref: '#/definitions/BackupOptions'
          - description: >-
              Represents the options specified as part of backup plan or
              on-demand backup job.
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a backup.'
      BackupType:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Represents the actual backup type selected for a backup job. For
              example, if a successful Windows Volume Shadow Copy Service (VSS)
              backup was taken, <code>BackupType</code> returns
              <code>"WindowsVSS"</code>. If <code>BackupType</code> is empty,
              then the backup type was a regular backup.
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      BytesTransferred:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The size in bytes transferred to a backup vault at the time that
              the job status was queried.
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a job to create a backup job is completed,
              in Unix format and Coordinated Universal Time (UTC). The value of
              <code>CompletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/RecoveryPointCreator'
          - description: >-
              Contains identifying information about the creation of a backup
              job, including the <code>BackupPlanArn</code>,
              <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and
              <code>BackupRuleId</code> of the backup plan that is used to
              create it.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ExpectedCompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a job to back up resources is expected to
              be completed, in Unix format and Coordinated Universal Time (UTC).
              The value of <code>ExpectedCompletionDate</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      PercentDone:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Contains an estimated percentage that is complete of a job at the
              time the job status was queried.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a saved resource. The format of
              the ARN depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource to be backed up; for
              example, an Amazon Elastic Block Store (Amazon EBS) volume or an
              Amazon Relational Database Service (Amazon RDS) database.
      StartBy:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              Specifies the time in Unix format and Coordinated Universal Time
              (UTC) when a backup job must be started before it is canceled. The
              value is calculated by adding the start window to the scheduled
              time. So if the scheduled time were 6:00 PM and the start window
              is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the
              date specified. The value of <code>StartBy</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      State:
        allOf:
          - $ref: '#/definitions/BackupJobState'
          - description: The current state of a resource recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A detailed message explaining the status of the job to back up a
              resource.
    type: object
  DescribeBackupVaultInput:
    properties: {}
    title: DescribeBackupVaultInput
    type: object
  DescribeBackupVaultOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Region where they are created. They consist
              of lowercase letters, numbers, and hyphens.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup vault is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key that is used to protect your
              backups; for example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
      NumberOfRecoveryPoints:
        allOf:
          - $ref: '#/definitions/long'
          - description: The number of recovery points that are stored in a backup vault.
    type: object
  DescribeCopyJobInput:
    properties: {}
    title: DescribeCopyJobInput
    type: object
  DescribeCopyJobOutput:
    properties:
      CopyJob:
        allOf:
          - $ref: '#/definitions/CopyJob'
          - description: Contains detailed information about a copy job.
    type: object
  DescribeFrameworkInput:
    properties: {}
    title: DescribeFrameworkInput
    type: object
  DescribeFrameworkOutput:
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a framework is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      DeploymentStatus:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The deployment status of a framework. The statuses are:</p> <p>
              <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS
              | COMPLETED | FAILED</code> </p>
      FrameworkArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      FrameworkControls:
        allOf:
          - $ref: '#/definitions/FrameworkControls'
          - description: >-
              A list of the controls that make up the framework. Each control in
              the list has a name, input parameters, and scope.
      FrameworkDescription:
        allOf:
          - $ref: '#/definitions/FrameworkDescription'
          - description: An optional description of the framework.
      FrameworkName:
        allOf:
          - $ref: '#/definitions/FrameworkName'
          - description: The unique name of a framework.
      FrameworkStatus:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>A framework consists of one or more controls. Each control
              governs a resource, such as backup plans, backup selections,
              backup vaults, or recovery points. You can also turn Config
              recording on or off for each resource. The statuses are:</p> <ul>
              <li> <p> <code>ACTIVE</code> when recording is turned on for all
              resources governed by the framework.</p> </li> <li> <p>
              <code>PARTIALLY_ACTIVE</code> when recording is turned off for at
              least one resource governed by the framework.</p> </li> <li> <p>
              <code>INACTIVE</code> when recording is turned off for all
              resources governed by the framework.</p> </li> <li> <p>
              <code>UNAVAILABLE</code> when Backup is unable to validate
              recording status at this time.</p> </li> </ul>
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>DescribeFrameworkOutput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
    type: object
  DescribeGlobalSettingsInput:
    properties: {}
    title: DescribeGlobalSettingsInput
    type: object
  DescribeGlobalSettingsOutput:
    properties:
      GlobalSettings:
        allOf:
          - $ref: '#/definitions/GlobalSettings'
          - description: The status of the flag <code>isCrossAccountBackupEnabled</code>.
      LastUpdateTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that the flag
              <code>isCrossAccountBackupEnabled</code> was last updated. This
              update is in Unix format and Coordinated Universal Time (UTC). The
              value of <code>LastUpdateTime</code> is accurate to milliseconds.
              For example, the value 1516925490.087 represents Friday, January
              26, 2018 12:11:30.087 AM.
    type: object
  DescribeProtectedResourceInput:
    properties: {}
    title: DescribeProtectedResourceInput
    type: object
  DescribeProtectedResourceOutput:
    properties:
      LastBackupTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a resource was last backed up, in Unix
              format and Coordinated Universal Time (UTC). The value of
              <code>LastBackupTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a resource. The format of the ARN
              depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource saved as a recovery
              point; for example, an Amazon EBS volume or an Amazon RDS
              database.
    type: object
  DescribeRecoveryPointInput:
    properties: {}
    title: DescribeRecoveryPointInput
    type: object
  DescribeRecoveryPointOutput:
    properties:
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a backup vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Region where they are created. They consist
              of lowercase letters, numbers, and hyphens.
      CalculatedLifecycle:
        allOf:
          - $ref: '#/definitions/CalculatedLifecycle'
          - description: >-
              A <code>CalculatedLifecycle</code> object containing
              <code>DeleteAt</code> and <code>MoveToColdStorageAt</code>
              timestamps.
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a job to create a recovery point is
              completed, in Unix format and Coordinated Universal Time (UTC).
              The value of <code>CompletionDate</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/RecoveryPointCreator'
          - description: >-
              Contains identifying information about the creation of a recovery
              point, including the <code>BackupPlanArn</code>,
              <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and
              <code>BackupRuleId</code> of the backup plan used to create it.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a recovery point is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key used to protect your backups; for
              example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      IsEncrypted:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A Boolean value that is returned as <code>TRUE</code> if the
              specified recovery point is encrypted, or <code>FALSE</code> if
              the recovery point is not encrypted.
      LastRestoreTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a recovery point was last restored, in Unix
              format and Coordinated Universal Time (UTC). The value of
              <code>LastRestoreTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup transitions and
              expires backups automatically according to the lifecycle that you
              define. </p> <p>Backups that are transitioned to cold storage must
              be stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a saved resource. The format of
              the ARN depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource to save as a recovery
              point; for example, an Amazon Elastic Block Store (Amazon EBS)
              volume or an Amazon Relational Database Service (Amazon RDS)
              database.
      SourceBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies the source
              vault where the resource was originally backed up in; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:BackupVault</code>.
              If the recovery is restored to the same Amazon Web Services
              account or Region, this value will be <code>null</code>.
      Status:
        allOf:
          - $ref: '#/definitions/RecoveryPointStatus'
          - description: >-
              <p>A status code specifying the state of the recovery point.</p>
              <p> <code>PARTIAL</code> status indicates Backup could not create
              the recovery point before the backup window closed. To increase
              your backup plan window using the API, see <a
              href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateBackupPlan.html">UpdateBackupPlan</a>.
              You can also increase your backup plan window using the Console by
              choosing and editing your backup plan.</p> <p>
              <code>EXPIRED</code> status indicates that the recovery point has
              exceeded its retention period, but Backup lacks permission or is
              otherwise unable to delete it. To manually delete these recovery
              points, see <a
              href="https://docs.aws.amazon.com/aws-backup/latest/devguide/gs-cleanup-resources.html#cleanup-backups">
              Step 3: Delete the recovery points</a> in the <i>Clean up
              resources</i> section of <i>Getting started</i>.</p>
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A status message explaining the reason for the recovery point
              deletion failure.
      StorageClass:
        allOf:
          - $ref: '#/definitions/StorageClass'
          - description: >-
              Specifies the storage class of the recovery point. Valid values
              are <code>WARM</code> or <code>COLD</code>.
    type: object
  DescribeRegionSettingsInput:
    properties: {}
    title: DescribeRegionSettingsInput
    type: object
  DescribeRegionSettingsOutput:
    properties:
      ResourceTypeOptInPreference:
        allOf:
          - $ref: '#/definitions/ResourceTypeOptInPreference'
          - description: >-
              Returns a list of all services along with the opt-in preferences
              in the Region.
    type: object
  DescribeReportJobInput:
    properties: {}
    title: DescribeReportJobInput
    type: object
  DescribeReportJobOutput:
    properties:
      ReportJob:
        allOf:
          - $ref: '#/definitions/ReportJob'
          - description: >-
              A list of information about a report job, including its completion
              and creation times, report destination, unique report job ID,
              Amazon Resource Name (ARN), report template, status, and status
              message.
    type: object
  DescribeReportPlanInput:
    properties: {}
    title: DescribeReportPlanInput
    type: object
  DescribeReportPlanOutput:
    properties:
      ReportPlan:
        allOf:
          - $ref: '#/definitions/ReportPlan'
          - description: >-
              Returns details about the report plan that is specified by its
              name. These details include the report plan's Amazon Resource Name
              (ARN), description, settings, delivery channel, deployment status,
              creation time, and last attempted and successful run times.
    type: object
  DescribeRestoreJobInput:
    properties: {}
    title: DescribeRestoreJobInput
    type: object
  DescribeRestoreJobOutput:
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: Returns the account ID that owns the restore job.
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of the restored resource.'
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a job to restore a recovery point is
              completed, in Unix format and Coordinated Universal Time (UTC).
              The value of <code>CompletionDate</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      CreatedResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource
              whose recovery point is being restored. The format of the ARN
              depends on the resource type of the backed-up resource.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a restore job is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ExpectedCompletionTimeMinutes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The amount of time in minutes that a job restoring a recovery
              point is expected to take.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      PercentDone:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Contains an estimated percentage that is complete of a job at the
              time the job status was queried.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              Returns metadata associated with a restore job listed by resource
              type.
      RestoreJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies the job that restores a recovery point.
      Status:
        allOf:
          - $ref: '#/definitions/RestoreJobStatus'
          - description: >-
              Status code specifying the state of the job that is initiated by
              Backup to restore a recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: A message showing the status of a job to restore a recovery point.
    type: object
  DisassociateRecoveryPointInput:
    properties: {}
    title: DisassociateRecoveryPointInput
    type: object
  ExportBackupPlanTemplateInput:
    properties: {}
    title: ExportBackupPlanTemplateInput
    type: object
  ExportBackupPlanTemplateOutput:
    properties:
      BackupPlanTemplateJson:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The body of a backup plan template in JSON format.</p> <note>
              <p>This is a signed JSON document that cannot be modified before
              being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>
    type: object
  FormatList:
    items:
      $ref: '#/definitions/string'
    type: array
  Framework:
    description: >-
      Contains detailed information about a framework. Frameworks contain
      controls, which evaluate and report on your backup events and resources.
      Frameworks generate daily compliance results.
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a framework is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      DeploymentStatus:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The deployment status of a framework. The statuses are:</p> <p>
              <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS
              | COMPLETED | FAILED</code> </p>
      FrameworkArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      FrameworkDescription:
        allOf:
          - $ref: '#/definitions/FrameworkDescription'
          - description: >-
              An optional description of the framework with a maximum 1,024
              characters.
      FrameworkName:
        allOf:
          - $ref: '#/definitions/FrameworkName'
          - description: >-
              The unique name of a framework. This name is between 1 and 256
              characters, starting with a letter, and consisting of letters
              (a-z, A-Z), numbers (0-9), and underscores (_).
      NumberOfControls:
        allOf:
          - $ref: '#/definitions/integer'
          - description: The number of controls contained by the framework.
    type: object
  FrameworkControl:
    description: >-
      Contains detailed information about all of the controls of a framework.
      Each framework must contain at least one control.
    properties:
      ControlInputParameters:
        allOf:
          - $ref: '#/definitions/ControlInputParameters'
          - description: >-
              A list of <code>ParameterName</code> and
              <code>ParameterValue</code> pairs.
      ControlName:
        allOf:
          - $ref: '#/definitions/ControlName'
          - description: The name of a control. This name is between 1 and 256 characters.
      ControlScope:
        allOf:
          - $ref: '#/definitions/ControlScope'
          - description: >-
              The scope of a control. The control scope defines what the control
              will evaluate. Three examples of control scopes are: a specific
              backup plan, all backup plans with a specific tag, or all backup
              plans. For more information, see <code>ControlScope</code>.
    required:
      - ControlName
    type: object
  FrameworkControls:
    items:
      $ref: '#/definitions/FrameworkControl'
    type: array
  FrameworkDescription:
    maxLength: 1024
    minLength: 0
    pattern: .*\S.*
    type: string
  FrameworkList:
    items:
      $ref: '#/definitions/Framework'
    type: array
  FrameworkName:
    maxLength: 256
    minLength: 1
    pattern: '[a-zA-Z][_a-zA-Z0-9]*'
    type: string
  GetBackupPlanFromJSONInput:
    properties:
      BackupPlanTemplateJson:
        allOf:
          - $ref: '#/definitions/string'
          - description: A customer-supplied backup plan document in JSON format.
    required:
      - BackupPlanTemplateJson
    title: GetBackupPlanFromJSONInput
    type: object
  GetBackupPlanFromJSONOutput:
    properties:
      BackupPlan:
        allOf:
          - $ref: '#/definitions/BackupPlan'
          - description: >-
              Specifies the body of a backup plan. Includes a
              <code>BackupPlanName</code> and one or more sets of
              <code>Rules</code>.
    type: object
  GetBackupPlanFromTemplateInput:
    properties: {}
    title: GetBackupPlanFromTemplateInput
    type: object
  GetBackupPlanFromTemplateOutput:
    properties:
      BackupPlanDocument:
        allOf:
          - $ref: '#/definitions/BackupPlan'
          - description: >-
              Returns the body of a backup plan based on the target template,
              including the name, rules, and backup vault of the plan.
    type: object
  GetBackupPlanInput:
    properties: {}
    title: GetBackupPlanInput
    type: object
  GetBackupPlanOutput:
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: >-
              Contains a list of <code>BackupOptions</code> for each resource
              type. The list is populated only if the advanced option is set for
              the backup plan.
      BackupPlan:
        allOf:
          - $ref: '#/definitions/BackupPlan'
          - description: >-
              Specifies the body of a backup plan. Includes a
              <code>BackupPlanName</code> and one or more sets of
              <code>Rules</code>.
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup plan is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      DeletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup plan is deleted, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>DeletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      LastExecutionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The last time a job to back up resources was run with this backup
              plan. A date and time, in Unix format and Coordinated Universal
              Time (UTC). The value of <code>LastExecutionDate</code> is
              accurate to milliseconds. For example, the value 1516925490.087
              represents Friday, January 26, 2018 12:11:30.087 AM.
      VersionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Unique, randomly generated, Unicode, UTF-8 encoded strings that
              are at most 1,024 bytes long. Version IDs cannot be edited.
    type: object
  GetBackupSelectionInput:
    properties: {}
    title: GetBackupSelectionInput
    type: object
  GetBackupSelectionOutput:
    properties:
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      BackupSelection:
        allOf:
          - $ref: '#/definitions/BackupSelection'
          - description: >-
              Specifies the body of a request to assign a set of resources to a
              backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup selection is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.
      SelectionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Uniquely identifies the body of a request to assign a set of
              resources to a backup plan.
    type: object
  GetBackupVaultAccessPolicyInput:
    properties: {}
    title: GetBackupVaultAccessPolicyInput
    type: object
  GetBackupVaultAccessPolicyOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Region where they are created. They consist
              of lowercase letters, numbers, and hyphens.
      Policy:
        allOf:
          - $ref: '#/definitions/IAMPolicy'
          - description: The backup vault access policy document in JSON format.
    type: object
  GetBackupVaultNotificationsInput:
    properties: {}
    title: GetBackupVaultNotificationsInput
    type: object
  GetBackupVaultNotificationsOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultEvents:
        allOf:
          - $ref: '#/definitions/BackupVaultEvents'
          - description: >-
              An array of events that indicate the status of jobs to back up
              resources to the backup vault.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Region where they are created. They consist
              of lowercase letters, numbers, and hyphens.
      SNSTopicArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies an Amazon Simple Notification
              Service (Amazon SNS) topic; for example,
              <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>.
    type: object
  GetRecoveryPointRestoreMetadataInput:
    properties: {}
    title: GetRecoveryPointRestoreMetadataInput
    type: object
  GetRecoveryPointRestoreMetadataOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a backup vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      RestoreMetadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: >-
              The set of metadata key-value pairs that describe the original
              configuration of the backed-up resource. These values vary
              depending on the service that is being restored.
    type: object
  GetSupportedResourceTypesOutput:
    properties:
      ResourceTypes:
        allOf:
          - $ref: '#/definitions/ResourceTypes'
          - description: >-
              <p>Contains a string with the supported Amazon Web Services
              resource types:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon
              DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic
              Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic
              Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon
              Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon
              Relational Database Service</p> </li> <li> <p> <code>Aurora</code>
              for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code>
              for Storage Gateway</p> </li> </ul>
    type: object
  GlobalSettings:
    additionalProperties:
      $ref: '#/definitions/GlobalSettingsValue'
    type: object
  GlobalSettingsName:
    type: string
  GlobalSettingsValue:
    type: string
  IAMPolicy:
    type: string
  IAMRoleArn:
    type: string
  InvalidParameterValueException: {}
  InvalidRequestException: {}
  InvalidResourceStateException: {}
  IsEnabled:
    type: boolean
  Lifecycle:
    description: >-
      <p>Contains an array of <code>Transition</code> objects specifying how
      long in days before a recovery point transitions to cold storage or is
      deleted.</p> <p>Backups transitioned to cold storage must be stored in
      cold storage for a minimum of 90 days. Therefore, on the console, the
      “expire after days” setting must be 90 days greater than the “transition
      to cold after days” setting. The “transition to cold after days” setting
      cannot be changed after a backup has been transitioned to cold.</p>
      <p>Only Amazon EFS file system backups can be transitioned to cold
      storage.</p>
    properties:
      DeleteAfterDays:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              Specifies the number of days after creation that a recovery point
              is deleted. Must be greater than 90 days plus
              <code>MoveToColdStorageAfterDays</code>.
      MoveToColdStorageAfterDays:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              Specifies the number of days after creation that a recovery point
              is moved to cold storage.
    type: object
  LimitExceededException: {}
  ListBackupJobsInput:
    properties: {}
    title: ListBackupJobsInput
    type: object
  ListBackupJobsOutput:
    properties:
      BackupJobs:
        allOf:
          - $ref: '#/definitions/BackupJobsList'
          - description: >-
              An array of structures containing metadata about your backup jobs
              returned in JSON format.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListBackupPlanTemplatesInput:
    properties: {}
    title: ListBackupPlanTemplatesInput
    type: object
  ListBackupPlanTemplatesOutput:
    properties:
      BackupPlanTemplatesList:
        allOf:
          - $ref: '#/definitions/BackupPlanTemplatesList'
          - description: >-
              An array of template list items containing metadata about your
              saved templates.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListBackupPlanVersionsInput:
    properties: {}
    title: ListBackupPlanVersionsInput
    type: object
  ListBackupPlanVersionsOutput:
    properties:
      BackupPlanVersionsList:
        allOf:
          - $ref: '#/definitions/BackupPlanVersionsList'
          - description: >-
              An array of version list items containing metadata about your
              backup plans.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListBackupPlansInput:
    properties: {}
    title: ListBackupPlansInput
    type: object
  ListBackupPlansOutput:
    properties:
      BackupPlansList:
        allOf:
          - $ref: '#/definitions/BackupPlansList'
          - description: >-
              An array of backup plan list items containing metadata about your
              saved backup plans.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListBackupSelectionsInput:
    properties: {}
    title: ListBackupSelectionsInput
    type: object
  ListBackupSelectionsOutput:
    properties:
      BackupSelectionsList:
        allOf:
          - $ref: '#/definitions/BackupSelectionsList'
          - description: >-
              An array of backup selection list items containing metadata about
              each resource in the list.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListBackupVaultsInput:
    properties: {}
    title: ListBackupVaultsInput
    type: object
  ListBackupVaultsOutput:
    properties:
      BackupVaultList:
        allOf:
          - $ref: '#/definitions/BackupVaultList'
          - description: >-
              An array of backup vault list members containing vault metadata,
              including Amazon Resource Name (ARN), display name, creation date,
              number of saved recovery points, and encryption information if the
              resources saved in the backup vault are encrypted.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
    type: object
  ListCopyJobsInput:
    properties: {}
    title: ListCopyJobsInput
    type: object
  ListCopyJobsOutput:
    properties:
      CopyJobs:
        allOf:
          - $ref: '#/definitions/CopyJobsList'
          - description: >-
              An array of structures containing metadata about your copy jobs
              returned in JSON format. 
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return maxResults number of
              items, NextToken allows you to return more items in your list
              starting at the location pointed to by the next token. 
    type: object
  ListFrameworksInput:
    properties: {}
    title: ListFrameworksInput
    type: object
  ListFrameworksOutput:
    properties:
      Frameworks:
        allOf:
          - $ref: '#/definitions/FrameworkList'
          - description: >-
              A list of frameworks with details for each framework, including
              the framework name, Amazon Resource Name (ARN), description,
              number of controls, creation time, and deployment status.
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An identifier that was returned from the previous call to this
              operation, which can be used to return the next set of items in
              the list.
    type: object
  ListOfTags:
    items:
      $ref: '#/definitions/Condition'
    type: array
  ListProtectedResourcesInput:
    properties: {}
    title: ListProtectedResourcesInput
    type: object
  ListProtectedResourcesOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
      Results:
        allOf:
          - $ref: '#/definitions/ProtectedResourcesList'
          - description: >-
              An array of resources successfully backed up by Backup including
              the time the resource was saved, an Amazon Resource Name (ARN) of
              the resource, and a resource type.
    type: object
  ListRecoveryPointsByBackupVaultInput:
    properties: {}
    title: ListRecoveryPointsByBackupVaultInput
    type: object
  ListRecoveryPointsByBackupVaultOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
      RecoveryPoints:
        allOf:
          - $ref: '#/definitions/RecoveryPointByBackupVaultList'
          - description: >-
              An array of objects that contain detailed information about
              recovery points saved in a backup vault.
    type: object
  ListRecoveryPointsByResourceInput:
    properties: {}
    title: ListRecoveryPointsByResourceInput
    type: object
  ListRecoveryPointsByResourceOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
      RecoveryPoints:
        allOf:
          - $ref: '#/definitions/RecoveryPointByResourceList'
          - description: >-
              <p>An array of objects that contain detailed information about
              recovery points of the specified resource type.</p> <note> <p>Only
              Amazon EFS and Amazon EC2 recovery points return
              BackupVaultName.</p> </note>
    type: object
  ListReportJobsInput:
    properties: {}
    title: ListReportJobsInput
    type: object
  ListReportJobsOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An identifier that was returned from the previous call to this
              operation, which can be used to return the next set of items in
              the list.
      ReportJobs:
        allOf:
          - $ref: '#/definitions/ReportJobList'
          - description: Details about your report jobs in JSON format.
    type: object
  ListReportPlansInput:
    properties: {}
    title: ListReportPlansInput
    type: object
  ListReportPlansOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              An identifier that was returned from the previous call to this
              operation, which can be used to return the next set of items in
              the list.
      ReportPlans:
        allOf:
          - $ref: '#/definitions/ReportPlanList'
          - description: >-
              A list of your report plans with detailed information for each
              plan. This information includes the Amazon Resource Name (ARN),
              report plan name, description, settings, delivery channel,
              deployment status, creation time, and last times the report plan
              attempted to and successfully ran.
    type: object
  ListRestoreJobsInput:
    properties: {}
    title: ListRestoreJobsInput
    type: object
  ListRestoreJobsOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
      RestoreJobs:
        allOf:
          - $ref: '#/definitions/RestoreJobsList'
          - description: >-
              An array of objects that contain detailed information about jobs
              to restore saved resources.
    type: object
  ListTagsInput:
    properties: {}
    title: ListTagsInput
    type: object
  ListTagsOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The next item following a partial list of returned items. For
              example, if a request is made to return <code>maxResults</code>
              number of items, <code>NextToken</code> allows you to return more
              items in your list starting at the location pointed to by the next
              token.
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              To help organize your resources, you can assign your own metadata
              to the resources you create. Each tag is a key-value pair.
    type: object
  Long:
    type: integer
  MaxFrameworkInputs:
    maximum: 1000
    minimum: 1
    type: integer
  MaxResults:
    maximum: 1000
    minimum: 1
    type: integer
  Metadata:
    additionalProperties:
      $ref: '#/definitions/MetadataValue'
    type: object
  MetadataKey:
    type: string
  MetadataValue:
    type: string
  MissingParameterValueException: {}
  ParameterName:
    type: string
  ParameterValue:
    type: string
  ProtectedResource:
    description: A structure that contains information about a backed-up resource.
    properties:
      LastBackupTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a resource was last backed up, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>LastBackupTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource; for example, an Amazon
              Elastic Block Store (Amazon EBS) volume or an Amazon Relational
              Database Service (Amazon RDS) database. For Windows Volume Shadow
              Copy Service (VSS) backups, the only supported resource type is
              Amazon EC2.
    type: object
  ProtectedResourcesList:
    items:
      $ref: '#/definitions/ProtectedResource'
    type: array
  PutBackupVaultAccessPolicyInput:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/IAMPolicy'
          - description: The backup vault access policy document in JSON format.
    title: PutBackupVaultAccessPolicyInput
    type: object
  PutBackupVaultNotificationsInput:
    properties:
      BackupVaultEvents:
        allOf:
          - $ref: '#/definitions/BackupVaultEvents'
          - description: >-
              <p>An array of events that indicate the status of jobs to back up
              resources to the backup vault.</p> <note> <p>The following events
              are supported:</p> <p> <code>BACKUP_JOB_STARTED</code>,
              <code>BACKUP_JOB_COMPLETED</code>,</p> <p>
              <code>COPY_JOB_STARTED</code>, <code>COPY_JOB_SUCCESSFUL</code>,
              <code>COPY_JOB_FAILED</code>,</p> <p>
              <code>RESTORE_JOB_STARTED</code>,
              <code>RESTORE_JOB_COMPLETED</code>, and
              <code>RECOVERY_POINT_MODIFIED</code>.</p> <p>To find failed backup
              jobs, use <code>BACKUP_JOB_COMPLETED</code> and filter using event
              metadata.</p> <p>Other events in the following list are
              deprecated.</p> </note>
      SNSTopicArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The Amazon Resource Name (ARN) that specifies the topic for a
              backup vault’s events; for example,
              <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.
    required:
      - SNSTopicArn
      - BackupVaultEvents
    title: PutBackupVaultNotificationsInput
    type: object
  RecoveryPointByBackupVault:
    description: >-
      Contains detailed information about the recovery points stored in a backup
      vault.
    properties:
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a backup vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      CalculatedLifecycle:
        allOf:
          - $ref: '#/definitions/CalculatedLifecycle'
          - description: >-
              A <code>CalculatedLifecycle</code> object containing
              <code>DeleteAt</code> and <code>MoveToColdStorageAt</code>
              timestamps.
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a job to restore a recovery point is completed,
              in Unix format and Coordinated Universal Time (UTC). The value of
              <code>CompletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/RecoveryPointCreator'
          - description: >-
              Contains identifying information about the creation of a recovery
              point, including the <code>BackupPlanArn</code>,
              <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and
              <code>BackupRuleId</code> of the backup plan that is used to
              create it.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a recovery point is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key that is used to protect your
              backups; for example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      IsEncrypted:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              A Boolean value that is returned as <code>TRUE</code> if the
              specified recovery point is encrypted, or <code>FALSE</code> if
              the recovery point is not encrypted.
      LastRestoreTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a recovery point was last restored, in Unix
              format and Coordinated Universal Time (UTC). The value of
              <code>LastRestoreTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup transitions and
              expires backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a recovery
              point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a resource. The format of the ARN
              depends on the resource type.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The type of Amazon Web Services resource saved as a recovery
              point; for example, an Amazon Elastic Block Store (Amazon EBS)
              volume or an Amazon Relational Database Service (Amazon RDS)
              database. For Windows Volume Shadow Copy Service (VSS) backups,
              the only supported resource type is Amazon EC2.
      SourceBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The backup vault where the recovery point was originally copied
              from. If the recovery point is restored to the same account this
              value will be <code>null</code>.
      Status:
        allOf:
          - $ref: '#/definitions/RecoveryPointStatus'
          - description: A status code specifying the state of the recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A message explaining the reason of the recovery point deletion
              failure.
    type: object
  RecoveryPointByBackupVaultList:
    items:
      $ref: '#/definitions/RecoveryPointByBackupVault'
    type: array
  RecoveryPointByResource:
    description: Contains detailed information about a saved recovery point.
    properties:
      BackupSizeBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of a backup.'
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a recovery point is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              The server-side encryption key that is used to protect your
              backups; for example,
              <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a recovery
              point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      Status:
        allOf:
          - $ref: '#/definitions/RecoveryPointStatus'
          - description: A status code specifying the state of the recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A message explaining the reason of the recovery point deletion
              failure.
    type: object
  RecoveryPointByResourceList:
    items:
      $ref: '#/definitions/RecoveryPointByResource'
    type: array
  RecoveryPointCreator:
    description: >-
      Contains information about the backup plan and rule that Backup used to
      initiate the recovery point backup.
    properties:
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      BackupPlanVersion:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Version IDs are unique, randomly generated, Unicode, UTF-8 encoded
              strings that are at most 1,024 bytes long. They cannot be edited.
      BackupRuleId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Uniquely identifies a rule used to schedule the backup of a
              selection of resources.
    type: object
  RecoveryPointStatus:
    enum:
      - COMPLETED
      - PARTIAL
      - DELETING
      - EXPIRED
    type: string
  ReportDeliveryChannel:
    description: >-
      Contains information from your report plan about where to deliver your
      reports, specifically your Amazon S3 bucket name, S3 key prefix, and the
      formats of your reports.
    properties:
      Formats:
        allOf:
          - $ref: '#/definitions/FormatList'
          - description: >-
              A list of the format of your reports: <code>CSV</code>,
              <code>JSON</code>, or both. If not specified, the default format
              is <code>CSV</code>.
      S3BucketName:
        allOf:
          - $ref: '#/definitions/string'
          - description: The unique name of the S3 bucket that receives your reports.
      S3KeyPrefix:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The prefix for where Backup Audit Manager delivers your reports to
              Amazon S3. The prefix is this part of the following path:
              s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name.
              If not specified, there is no prefix.
    required:
      - S3BucketName
    type: object
  ReportDestination:
    description: Contains information from your report job about your report destination.
    properties:
      S3BucketName:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              The unique name of the Amazon S3 bucket that receives your
              reports.
      S3Keys:
        allOf:
          - $ref: '#/definitions/stringList'
          - description: >-
              The object key that uniquely identifies your reports in your S3
              bucket.
    type: object
  ReportJob:
    description: >-
      Contains detailed information about a report job. A report job compiles a
      report based on a report plan and publishes it to Amazon S3.
    properties:
      CompletionTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report job is completed, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CompletionTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ReportDestination:
        allOf:
          - $ref: '#/definitions/ReportDestination'
          - description: >-
              The S3 bucket name and S3 keys for the destination where the
              report job publishes the report.
      ReportJobId:
        allOf:
          - $ref: '#/definitions/ReportJobId'
          - description: >-
              The identifier for a report job. A unique, randomly generated,
              Unicode, UTF-8 encoded string that is at most 1,024 bytes long.
              Report job IDs cannot be edited.
      ReportPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      ReportTemplate:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>Identifies the report template for the report. Reports are
              built using a report template. The report templates are: </p> <p>
              <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT |
              RESTORE_JOB_REPORT</code> </p>
      Status:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The status of a report job. The statuses are:</p> <p>
              <code>CREATED | RUNNING | COMPLETED | FAILED</code> </p> <p>
              <code>COMPLETED</code> means that the report is available for your
              review at your designated destination. If the status is
              <code>FAILED</code>, review the <code>StatusMessage</code> for the
              reason.</p>
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: A message explaining the status of the report job.
    type: object
  ReportJobId:
    type: string
  ReportJobList:
    items:
      $ref: '#/definitions/ReportJob'
    type: array
  ReportPlan:
    description: Contains detailed information about a report plan.
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report plan is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      DeploymentStatus:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>The deployment status of a report plan. The statuses are:</p>
              <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS |
              DELETE_IN_PROGRESS | COMPLETED</code> </p>
      LastAttemptedExecutionTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report job associated with this report
              plan last attempted to run, in Unix format and Coordinated
              Universal Time (UTC). The value of
              <code>LastAttemptedExecutionTime</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      LastSuccessfulExecutionTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report job associated with this report
              plan last successfully ran, in Unix format and Coordinated
              Universal Time (UTC). The value of
              <code>LastSuccessfulExecutionTime</code> is accurate to
              milliseconds. For example, the value 1516925490.087 represents
              Friday, January 26, 2018 12:11:30.087 AM.
      ReportDeliveryChannel:
        allOf:
          - $ref: '#/definitions/ReportDeliveryChannel'
          - description: >-
              Contains information about where and how to deliver your reports,
              specifically your Amazon S3 bucket name, S3 key prefix, and the
              formats of your reports.
      ReportPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      ReportPlanDescription:
        allOf:
          - $ref: '#/definitions/ReportPlanDescription'
          - description: >-
              An optional description of the report plan with a maximum 1,024
              characters.
      ReportPlanName:
        allOf:
          - $ref: '#/definitions/ReportPlanName'
          - description: >-
              The unique name of the report plan. This name is between 1 and 256
              characters starting with a letter, and consisting of letters (a-z,
              A-Z), numbers (0-9), and underscores (_).
      ReportSetting:
        allOf:
          - $ref: '#/definitions/ReportSetting'
          - description: >-
              <p>Identifies the report template for the report. Reports are
              built using a report template. The report templates are:</p> <p>
              <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT |
              RESTORE_JOB_REPORT</code> </p>
    type: object
  ReportPlanDescription:
    maxLength: 1024
    minLength: 0
    pattern: .*\S.*
    type: string
  ReportPlanList:
    items:
      $ref: '#/definitions/ReportPlan'
    type: array
  ReportPlanName:
    maxLength: 256
    minLength: 1
    pattern: '[a-zA-Z][_a-zA-Z0-9]*'
    type: string
  ReportSetting:
    description: Contains detailed information about a report setting.
    properties:
      ReportTemplate:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              <p>Identifies the report template for the report. Reports are
              built using a report template. The report templates are:</p> <p>
              <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT |
              RESTORE_JOB_REPORT</code> </p>
    required:
      - ReportTemplate
    type: object
  ResourceArns:
    items:
      $ref: '#/definitions/ARN'
    type: array
  ResourceNotFoundException: {}
  ResourceType:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  ResourceTypeList:
    items:
      $ref: '#/definitions/ARN'
    type: array
  ResourceTypeOptInPreference:
    additionalProperties:
      $ref: '#/definitions/IsEnabled'
    type: object
  ResourceTypes:
    items:
      $ref: '#/definitions/ResourceType'
    type: array
  RestoreJobId:
    type: string
  RestoreJobStatus:
    enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - ABORTED
      - FAILED
    type: string
  RestoreJobsList:
    items:
      $ref: '#/definitions/RestoreJobsListMember'
    type: array
  RestoreJobsListMember:
    description: Contains metadata about a restore job.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The account ID that owns the restore job.
      BackupSizeInBytes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: 'The size, in bytes, of the restored resource.'
      CompletionDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a job to restore a recovery point is completed,
              in Unix format and Coordinated Universal Time (UTC). The value of
              <code>CompletionDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      CreatedResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a restore job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ExpectedCompletionTimeMinutes:
        allOf:
          - $ref: '#/definitions/Long'
          - description: >-
              The amount of time in minutes that a job restoring a recovery
              point is expected to take.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      PercentDone:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Contains an estimated percentage complete of a job at the time the
              job status was queried.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              The resource type of the listed restore jobs; for example, an
              Amazon Elastic Block Store (Amazon EBS) volume or an Amazon
              Relational Database Service (Amazon RDS) database. For Windows
              Volume Shadow Copy Service (VSS) backups, the only supported
              resource type is Amazon EC2.
      RestoreJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies the job that restores a recovery point.
      Status:
        allOf:
          - $ref: '#/definitions/RestoreJobStatus'
          - description: >-
              A status code specifying the state of the job initiated by Backup
              to restore a recovery point.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A detailed message explaining the status of the job to restore a
              recovery point.
    type: object
  ServiceUnavailableException: {}
  StartBackupJobInput:
    properties:
      BackupOptions:
        allOf:
          - $ref: '#/definitions/BackupOptions'
          - description: >-
              <p>Specifies the backup option for a selected resource. This
              option is only available for Windows Volume Shadow Copy Service
              (VSS) backup jobs.</p> <p>Valid values: Set to
              <code>"WindowsVSS":"enabled"</code> to enable the
              <code>WindowsVSS</code> backup option and create a Windows VSS
              backup. Set to <code>"WindowsVSS""disabled"</code> to create a
              regular backup. The <code>WindowsVSS</code> option is not enabled
              by default.</p>
      BackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical container where backups are stored. Backup
              vaults are identified by names that are unique to the account used
              to create them and the Amazon Web Services Region where they are
              created. They consist of lowercase letters, numbers, and hyphens.
      CompleteWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes during which a successfully started backup must
              complete, or else AWS Backup will cancel the job. This value is
              optional. This value begins counting down from when the backup was
              scheduled. It does not add additional time for
              <code>StartWindowMinutes</code>, or if the backup started later
              than scheduled.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to create the target recovery
              point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>StartBackupJob</code>. Retrying
              a successful request with the same idempotency token results in a
              success message with no action taken.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup will transition and
              expire backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointTags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              To help organize your resources, you can assign your own metadata
              to the resources that you create. Each tag is a key-value pair.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      StartWindowMinutes:
        allOf:
          - $ref: '#/definitions/WindowMinutes'
          - description: >-
              A value in minutes after a backup is scheduled before a job will
              be canceled if it doesn't start successfully. This value is
              optional, and the default is 8 hours.
    required:
      - BackupVaultName
      - ResourceArn
      - IamRoleArn
    title: StartBackupJobInput
    type: object
  StartBackupJobOutput:
    properties:
      BackupJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a backup job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
    type: object
  StartCopyJobInput:
    properties:
      DestinationBackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a
              destination backup vault to copy to; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              Specifies the IAM role ARN used to copy the target recovery point;
              for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>StartCopyJob</code>. Retrying a
              successful request with the same idempotency token results in a
              success message with no action taken.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point to use for the
              copy job; for example,
              arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 
      SourceBackupVaultName:
        allOf:
          - $ref: '#/definitions/BackupVaultName'
          - description: >-
              The name of a logical source container where backups are stored.
              Backup vaults are identified by names that are unique to the
              account used to create them and the Amazon Web Services Region
              where they are created. They consist of lowercase letters,
              numbers, and hyphens.
    required:
      - RecoveryPointArn
      - SourceBackupVaultName
      - DestinationBackupVaultArn
      - IamRoleArn
    title: StartCopyJobInput
    type: object
  StartCopyJobOutput:
    properties:
      CopyJobId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a copy job.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a copy job is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
    type: object
  StartReportJobInput:
    properties:
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>StartReportJobInput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
    title: StartReportJobInput
    type: object
  StartReportJobOutput:
    properties:
      ReportJobId:
        allOf:
          - $ref: '#/definitions/ReportJobId'
          - description: >-
              The identifier of the report job. A unique, randomly generated,
              Unicode, UTF-8 encoded string that is at most 1,024 bytes long.
              The report job ID cannot be edited.
    type: object
  StartRestoreJobInput:
    properties:
      IamRoleArn:
        allOf:
          - $ref: '#/definitions/IAMRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role that Backup uses to
              create the target recovery point; for example,
              <code>arn:aws:iam::123456789012:role/S3Access</code>.
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>StartRestoreJob</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: >-
              <p>A set of metadata key-value pairs. Contains information, such
              as a resource name, required to restore a recovery point.</p> <p>
              You can get configuration metadata about a resource at the time it
              was backed up by calling
              <code>GetRecoveryPointRestoreMetadata</code>. However, values in
              addition to those provided by
              <code>GetRecoveryPointRestoreMetadata</code> might be required to
              restore a resource. For example, you might need to provide a new
              resource name if the original already exists.</p> <p>You need to
              specify specific metadata to restore an Amazon Elastic File System
              (Amazon EFS) instance:</p> <ul> <li> <p>
              <code>file-system-id</code>: The ID of the Amazon EFS file system
              that is backed up by Backup. Returned in
              <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p>
              <code>Encrypted</code>: A Boolean value that, if true, specifies
              that the file system is encrypted. If <code>KmsKeyId</code> is
              specified, <code>Encrypted</code> must be set to
              <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>:
              Specifies the Amazon Web Services KMS key that is used to encrypt
              the restored file system. You can specify a key from another
              Amazon Web Services account provided that key it is properly
              shared with your account via Amazon Web Services KMS.</p> </li>
              <li> <p> <code>PerformanceMode</code>: Specifies the throughput
              mode of the file system.</p> </li> <li> <p>
              <code>CreationToken</code>: A user-supplied value that ensures the
              uniqueness (idempotency) of the request.</p> </li> <li> <p>
              <code>newFileSystem</code>: A Boolean value that, if true,
              specifies that the recovery point is restored to a new Amazon EFS
              file system.</p> </li> <li> <p> <code>ItemsToRestore</code>: An
              array of one to five strings where each string is a file path. Use
              <code>ItemsToRestore</code> to restore specific files or
              directories rather than the entire file system. This parameter is
              optional. For example,
              <code>"itemsToRestore":"[\"/my.test\"]"</code>.</p> </li> </ul>
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a recovery point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
      ResourceType:
        allOf:
          - $ref: '#/definitions/ResourceType'
          - description: >-
              <p>Starts a job to restore a recovery point for one of the
              following resources:</p> <ul> <li> <p> <code>DynamoDB</code> for
              Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon
              Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon
              Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for
              Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for
              Amazon Relational Database Service</p> </li> <li> <p>
              <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p>
              <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>
    required:
      - RecoveryPointArn
      - Metadata
      - IamRoleArn
    title: StartRestoreJobInput
    type: object
  StartRestoreJobOutput:
    properties:
      RestoreJobId:
        allOf:
          - $ref: '#/definitions/RestoreJobId'
          - description: Uniquely identifies the job that restores a recovery point.
    type: object
  StopBackupJobInput:
    properties: {}
    title: StopBackupJobInput
    type: object
  StorageClass:
    enum:
      - WARM
      - COLD
      - DELETED
    type: string
  TagKey:
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/string'
    type: array
  TagResourceInput:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              Key-value pairs that are used to help organize your resources. You
              can assign your own metadata to the resources you create.
    required:
      - Tags
    title: TagResourceInput
    type: object
  TagValue:
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    type: object
  UntagResourceInput:
    properties:
      TagKeyList:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: >-
              A list of keys to identify which key-value tags to remove from a
              resource.
    required:
      - TagKeyList
    title: UntagResourceInput
    type: object
  UpdateBackupPlanInput:
    properties:
      BackupPlan:
        allOf:
          - $ref: '#/definitions/BackupPlanInput'
          - description: >-
              Specifies the body of a backup plan. Includes a
              <code>BackupPlanName</code> and one or more sets of
              <code>Rules</code>.
    required:
      - BackupPlan
    title: UpdateBackupPlanInput
    type: object
  UpdateBackupPlanOutput:
    properties:
      AdvancedBackupSettings:
        allOf:
          - $ref: '#/definitions/AdvancedBackupSettings'
          - description: >-
              Contains a list of <code>BackupOptions</code> for each resource
              type.
      BackupPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a backup
              plan; for example,
              <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.
      BackupPlanId:
        allOf:
          - $ref: '#/definitions/string'
          - description: Uniquely identifies a backup plan.
      CreationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time a backup plan is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationDate</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      VersionId:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              Unique, randomly generated, Unicode, UTF-8 encoded strings that
              are at most 1,024 bytes long. Version Ids cannot be edited.
    type: object
  UpdateFrameworkInput:
    properties:
      FrameworkControls:
        allOf:
          - $ref: '#/definitions/FrameworkControls'
          - description: >-
              A list of the controls that make up the framework. Each control in
              the list has a name, input parameters, and scope.
      FrameworkDescription:
        allOf:
          - $ref: '#/definitions/FrameworkDescription'
          - description: >-
              An optional description of the framework with a maximum 1,024
              characters.
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>UpdateFrameworkInput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
    title: UpdateFrameworkInput
    type: object
  UpdateFrameworkOutput:
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a framework is created, in Unix format and
              Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      FrameworkArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      FrameworkName:
        allOf:
          - $ref: '#/definitions/FrameworkName'
          - description: >-
              The unique name of a framework. This name is between 1 and 256
              characters, starting with a letter, and consisting of letters
              (a-z, A-Z), numbers (0-9), and underscores (_).
    type: object
  UpdateGlobalSettingsInput:
    properties:
      GlobalSettings:
        allOf:
          - $ref: '#/definitions/GlobalSettings'
          - description: >-
              A value for <code>isCrossAccountBackupEnabled</code> and a Region.
              Example: <code>update-global-settings --global-settings
              isCrossAccountBackupEnabled=false --region us-west-2</code>.
    title: UpdateGlobalSettingsInput
    type: object
  UpdateRecoveryPointLifecycleInput:
    properties:
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup transitions and
              expires backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p>
    title: UpdateRecoveryPointLifecycleInput
    type: object
  UpdateRecoveryPointLifecycleOutput:
    properties:
      BackupVaultArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An ARN that uniquely identifies a backup vault; for example,
              <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
      CalculatedLifecycle:
        allOf:
          - $ref: '#/definitions/CalculatedLifecycle'
          - description: >-
              A <code>CalculatedLifecycle</code> object containing
              <code>DeleteAt</code> and <code>MoveToColdStorageAt</code>
              timestamps.
      Lifecycle:
        allOf:
          - $ref: '#/definitions/Lifecycle'
          - description: >-
              <p>The lifecycle defines when a protected resource is transitioned
              to cold storage and when it expires. Backup transitions and
              expires backups automatically according to the lifecycle that you
              define. </p> <p>Backups transitioned to cold storage must be
              stored in cold storage for a minimum of 90 days. Therefore, the
              “expire after days” setting must be 90 days greater than the
              “transition to cold after days” setting. The “transition to cold
              after days” setting cannot be changed after a backup has been
              transitioned to cold. </p> <p>Only Amazon EFS file system backups
              can be transitioned to cold storage.</p>
      RecoveryPointArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a recovery
              point; for example,
              <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
    type: object
  UpdateRegionSettingsInput:
    properties:
      ResourceTypeOptInPreference:
        allOf:
          - $ref: '#/definitions/ResourceTypeOptInPreference'
          - description: >-
              Updates the list of services along with the opt-in preferences for
              the Region.
    title: UpdateRegionSettingsInput
    type: object
  UpdateReportPlanInput:
    properties:
      IdempotencyToken:
        allOf:
          - $ref: '#/definitions/string'
          - description: >-
              A customer-chosen string that you can use to distinguish between
              otherwise identical calls to <code>UpdateReportPlanInput</code>.
              Retrying a successful request with the same idempotency token
              results in a success message with no action taken.
      ReportDeliveryChannel:
        allOf:
          - $ref: '#/definitions/ReportDeliveryChannel'
          - description: >-
              A structure that contains information about where to deliver your
              reports, specifically your Amazon S3 bucket name, S3 key prefix,
              and the formats of your reports.
      ReportPlanDescription:
        allOf:
          - $ref: '#/definitions/ReportPlanDescription'
          - description: >-
              An optional description of the report plan with a maximum 1,024
              characters.
      ReportSetting:
        allOf:
          - $ref: '#/definitions/ReportSetting'
          - description: >-
              <p>Identifies the report template for the report. Reports are
              built using a report template. The report templates are:</p> <p>
              <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT |
              RESTORE_JOB_REPORT</code> </p>
    title: UpdateReportPlanInput
    type: object
  UpdateReportPlanOutput:
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: >-
              The date and time that a report plan is created, in Unix format
              and Coordinated Universal Time (UTC). The value of
              <code>CreationTime</code> is accurate to milliseconds. For
              example, the value 1516925490.087 represents Friday, January 26,
              2018 12:11:30.087 AM.
      ReportPlanArn:
        allOf:
          - $ref: '#/definitions/ARN'
          - description: >-
              An Amazon Resource Name (ARN) that uniquely identifies a resource.
              The format of the ARN depends on the resource type.
      ReportPlanName:
        allOf:
          - $ref: '#/definitions/ReportPlanName'
          - description: The unique name of the report plan.
    type: object
  WindowMinutes:
    type: integer
  boolean:
    type: boolean
  integer:
    type: integer
  long:
    type: integer
  string:
    type: string
  stringList:
    items:
      $ref: '#/definitions/string'
    type: array
  stringMap:
    additionalProperties:
      $ref: '#/definitions/string'
    type: object
  timestamp:
    format: date-time
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/backup/'
host: backup.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>Backup</fullname> <p>Backup is a unified backup service designed
    to protect Amazon Web Services services and their associated data. Backup
    simplifies the creation, migration, restoration, and deletion of backups,
    while also providing reporting and auditing.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Backup
  version: '2018-11-15'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: backup
paths:
  /account-settings:
    get:
      description: >-
        Returns the current service opt-in settings for the Region. If service
        opt-in is enabled for a service, Backup tries to protect that service's
        resources in this Region, when the resource is included in an on-demand
        backup or scheduled backup plan. Otherwise, Backup does not try to
        protect that service's resources in this Region.
      operationId: DescribeRegionSettings
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRegionSettingsOutput'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates the current service opt-in settings for the Region. If
        service-opt-in is enabled for a service, Backup tries to protect that
        service's resources in this Region, when the resource is included in an
        on-demand backup or scheduled backup plan. Otherwise, Backup does not
        try to protect that service's resources in this Region. Use the
        <code>DescribeRegionSettings</code> API to determine the resource types
        that are supported.
      operationId: UpdateRegionSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ResourceTypeOptInPreference:
                additionalProperties:
                  $ref: '#/definitions/IsEnabled'
                description: >-
                  Updates the list of services along with the opt-in preferences
                  for the Region.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /audit/frameworks:
    get:
      description: >-
        Returns a list of all frameworks for an Amazon Web Services account and
        Amazon Web Services Region.
      operationId: ListFrameworks
      parameters:
        - description: >-
            The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the
            list.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFrameworksOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a framework with one or more controls. A framework is a
        collection of controls that you can use to evaluate your backup
        practices. By using pre-built customizable controls to define your
        policies, you can evaluate whether your backup practices comply with
        your policies. To get insights into the compliance status of your
        frameworks, you can set up automatic daily reports.
      operationId: CreateFramework
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              FrameworkControls:
                description: >-
                  A list of the controls that make up the framework. Each
                  control in the list has a name, input parameters, and scope.
                items:
                  $ref: '#/definitions/FrameworkControl'
                type: array
              FrameworkDescription:
                description: >-
                  An optional description of the framework with a maximum of
                  1,024 characters.
                maxLength: 1024
                minLength: 0
                pattern: .*\S.*
                type: string
              FrameworkName:
                description: >-
                  The unique name of the framework. The name must be between 1
                  and 256 characters, starting with a letter, and consisting of
                  letters (a-z, A-Z), numbers (0-9), and underscores (_).
                maxLength: 256
                minLength: 1
                pattern: '[a-zA-Z][_a-zA-Z0-9]*'
                type: string
              FrameworkTags:
                additionalProperties:
                  $ref: '#/definitions/string'
                description: >-
                  Metadata that you can assign to help organize the frameworks
                  that you create. Each tag is a key-value pair.
                type: object
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>CreateFrameworkInput</code>. Retrying a successful
                  request with the same idempotency token results in a success
                  message with no action taken.
                type: string
            required:
              - FrameworkName
              - FrameworkControls
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFrameworkOutput'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/audit/frameworks/{frameworkName}':
    delete:
      description: Deletes the framework specified by a framework name.
      operationId: DeleteFramework
      parameters:
        - description: The unique name of a framework.
          in: path
          maxLength: 256
          minLength: 1
          name: frameworkName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    get:
      description: >-
        Returns the framework details for the specified
        <code>FrameworkName</code>.
      operationId: DescribeFramework
      parameters:
        - description: The unique name of a framework.
          in: path
          maxLength: 256
          minLength: 1
          name: frameworkName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFrameworkOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates an existing framework identified by its
        <code>FrameworkName</code> with the input document in JSON format.
      operationId: UpdateFramework
      parameters:
        - description: >-
            The unique name of a framework. This name is between 1 and 256
            characters, starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
          in: path
          maxLength: 256
          minLength: 1
          name: frameworkName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FrameworkControls:
                description: >-
                  A list of the controls that make up the framework. Each
                  control in the list has a name, input parameters, and scope.
                items:
                  $ref: '#/definitions/FrameworkControl'
                type: array
              FrameworkDescription:
                description: >-
                  An optional description of the framework with a maximum 1,024
                  characters.
                maxLength: 1024
                minLength: 0
                pattern: .*\S.*
                type: string
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>UpdateFrameworkInput</code>. Retrying a successful
                  request with the same idempotency token results in a success
                  message with no action taken.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFrameworkOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  /audit/report-jobs:
    get:
      description: Returns details about your report jobs.
      operationId: ListReportJobs
      parameters:
        - description: Returns only report jobs with the specified report plan name.
          in: query
          maxLength: 256
          minLength: 1
          name: ReportPlanName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: false
          type: string
        - description: >-
            Returns only report jobs that were created before the date and time
            specified in Unix format and Coordinated Universal Time (UTC). For
            example, the value 1516925490 represents Friday, January 26, 2018
            12:11:30 AM.
          format: date-time
          in: query
          name: CreationBefore
          required: false
          type: string
        - description: >-
            Returns only report jobs that were created after the date and time
            specified in Unix format and Coordinated Universal Time (UTC). For
            example, the value 1516925490 represents Friday, January 26, 2018
            12:11:30 AM.
          format: date-time
          in: query
          name: CreationAfter
          required: false
          type: string
        - description: >-
            <p>Returns only report jobs that are in the specified status. The
            statuses are:</p> <p> <code>CREATED | RUNNING | COMPLETED |
            FAILED</code> </p>
          in: query
          name: Status
          required: false
          type: string
        - description: >-
            The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the
            list.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListReportJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/audit/report-jobs/{reportJobId}':
    get:
      description: >-
        Returns the details associated with creating a report as specified by
        its <code>ReportJobId</code>.
      operationId: DescribeReportJob
      parameters:
        - description: >-
            The identifier of the report job. A unique, randomly generated,
            Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The
            report job ID cannot be edited.
          in: path
          name: reportJobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReportJobOutput'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/audit/report-jobs/{reportPlanName}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Starts an on-demand report job for the specified report plan.
      operationId: StartReportJob
      parameters:
        - description: The unique name of a report plan.
          in: path
          maxLength: 256
          minLength: 1
          name: reportPlanName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>StartReportJobInput</code>. Retrying a successful
                  request with the same idempotency token results in a success
                  message with no action taken.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartReportJobOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /audit/report-plans:
    get:
      description: >-
        Returns a list of your report plans. For detailed information about a
        single report plan, use <code>DescribeReportPlan</code>.
      operationId: ListReportPlans
      parameters:
        - description: >-
            The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
          in: query
          maximum: 1000
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the
            list.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListReportPlansOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a report plan. A report plan is a document that contains
        information about the contents of the report and where Backup will
        deliver it.</p> <p>If you call <code>CreateReportPlan</code> with a plan
        that already exists, you receive an <code>AlreadyExistsException</code>
        exception.</p>
      operationId: CreateReportPlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>CreateReportPlanInput</code>. Retrying a successful
                  request with the same idempotency token results in a success
                  message with no action taken.
                type: string
              ReportDeliveryChannel:
                description: >-
                  Contains information from your report plan about where to
                  deliver your reports, specifically your Amazon S3 bucket name,
                  S3 key prefix, and the formats of your reports.
                properties:
                  Formats:
                    allOf:
                      - $ref: '#/definitions/FormatList'
                      - description: >-
                          A list of the format of your reports:
                          <code>CSV</code>, <code>JSON</code>, or both. If not
                          specified, the default format is <code>CSV</code>.
                  S3BucketName:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The unique name of the S3 bucket that receives your
                          reports.
                  S3KeyPrefix:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The prefix for where Backup Audit Manager delivers
                          your reports to Amazon S3. The prefix is this part of
                          the following path:
                          s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name.
                          If not specified, there is no prefix.
                type: object
              ReportPlanDescription:
                description: >-
                  An optional description of the report plan with a maximum of
                  1,024 characters.
                maxLength: 1024
                minLength: 0
                pattern: .*\S.*
                type: string
              ReportPlanName:
                description: >-
                  The unique name of the report plan. The name must be between 1
                  and 256 characters, starting with a letter, and consisting of
                  letters (a-z, A-Z), numbers (0-9), and underscores (_).
                maxLength: 256
                minLength: 1
                pattern: '[a-zA-Z][_a-zA-Z0-9]*'
                type: string
              ReportPlanTags:
                additionalProperties:
                  $ref: '#/definitions/string'
                description: >-
                  Metadata that you can assign to help organize the frameworks
                  that you create. Each tag is a key-value pair.
                type: object
              ReportSetting:
                description: Contains detailed information about a report setting.
                properties:
                  ReportTemplate:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>Identifies the report template for the report.
                          Reports are built using a report template. The report
                          templates are:</p> <p> <code>BACKUP_JOB_REPORT |
                          COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>
                type: object
            required:
              - ReportPlanName
              - ReportDeliveryChannel
              - ReportSetting
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateReportPlanOutput'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
  '/audit/report-plans/{reportPlanName}':
    delete:
      description: Deletes the report plan specified by a report plan name.
      operationId: DeleteReportPlan
      parameters:
        - description: The unique name of a report plan.
          in: path
          maxLength: 256
          minLength: 1
          name: reportPlanName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    get:
      description: >-
        Returns a list of all report plans for an Amazon Web Services account
        and Amazon Web Services Region.
      operationId: DescribeReportPlan
      parameters:
        - description: The unique name of a report plan.
          in: path
          maxLength: 256
          minLength: 1
          name: reportPlanName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReportPlanOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates an existing report plan identified by its
        <code>ReportPlanName</code> with the input document in JSON format.
      operationId: UpdateReportPlan
      parameters:
        - description: >-
            The unique name of the report plan. This name is between 1 and 256
            characters, starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
          in: path
          maxLength: 256
          minLength: 1
          name: reportPlanName
          pattern: '[a-zA-Z][_a-zA-Z0-9]*'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>UpdateReportPlanInput</code>. Retrying a successful
                  request with the same idempotency token results in a success
                  message with no action taken.
                type: string
              ReportDeliveryChannel:
                description: >-
                  Contains information from your report plan about where to
                  deliver your reports, specifically your Amazon S3 bucket name,
                  S3 key prefix, and the formats of your reports.
                properties:
                  Formats:
                    allOf:
                      - $ref: '#/definitions/FormatList'
                      - description: >-
                          A list of the format of your reports:
                          <code>CSV</code>, <code>JSON</code>, or both. If not
                          specified, the default format is <code>CSV</code>.
                  S3BucketName:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The unique name of the S3 bucket that receives your
                          reports.
                  S3KeyPrefix:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          The prefix for where Backup Audit Manager delivers
                          your reports to Amazon S3. The prefix is this part of
                          the following path:
                          s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name.
                          If not specified, there is no prefix.
                type: object
              ReportPlanDescription:
                description: >-
                  An optional description of the report plan with a maximum
                  1,024 characters.
                maxLength: 1024
                minLength: 0
                pattern: .*\S.*
                type: string
              ReportSetting:
                description: Contains detailed information about a report setting.
                properties:
                  ReportTemplate:
                    allOf:
                      - $ref: '#/definitions/string'
                      - description: >-
                          <p>Identifies the report template for the report.
                          Reports are built using a report template. The report
                          templates are:</p> <p> <code>BACKUP_JOB_REPORT |
                          COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateReportPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /backup-jobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Starts an on-demand backup job for the specified resource.
      operationId: StartBackupJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupOptions:
                additionalProperties:
                  $ref: '#/definitions/BackupOptionValue'
                description: >-
                  <p>Specifies the backup option for a selected resource. This
                  option is only available for Windows Volume Shadow Copy
                  Service (VSS) backup jobs.</p> <p>Valid values: Set to
                  <code>"WindowsVSS":"enabled"</code> to enable the
                  <code>WindowsVSS</code> backup option and create a Windows VSS
                  backup. Set to <code>"WindowsVSS""disabled"</code> to create a
                  regular backup. The <code>WindowsVSS</code> option is not
                  enabled by default.</p>
                type: object
              BackupVaultName:
                description: >-
                  The name of a logical container where backups are stored.
                  Backup vaults are identified by names that are unique to the
                  account used to create them and the Amazon Web Services Region
                  where they are created. They consist of lowercase letters,
                  numbers, and hyphens.
                pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
                type: string
              CompleteWindowMinutes:
                description: >-
                  A value in minutes during which a successfully started backup
                  must complete, or else AWS Backup will cancel the job. This
                  value is optional. This value begins counting down from when
                  the backup was scheduled. It does not add additional time for
                  <code>StartWindowMinutes</code>, or if the backup started
                  later than scheduled.
                type: integer
              IamRoleArn:
                description: >-
                  Specifies the IAM role ARN used to create the target recovery
                  point; for example,
                  <code>arn:aws:iam::123456789012:role/S3Access</code>.
                type: string
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>StartBackupJob</code>. Retrying a successful request
                  with the same idempotency token results in a success message
                  with no action taken.
                type: string
              Lifecycle:
                description: >-
                  <p>Contains an array of <code>Transition</code> objects
                  specifying how long in days before a recovery point
                  transitions to cold storage or is deleted.</p> <p>Backups
                  transitioned to cold storage must be stored in cold storage
                  for a minimum of 90 days. Therefore, on the console, the
                  “expire after days” setting must be 90 days greater than the
                  “transition to cold after days” setting. The “transition to
                  cold after days” setting cannot be changed after a backup has
                  been transitioned to cold.</p> <p>Only Amazon EFS file system
                  backups can be transitioned to cold storage.</p>
                properties:
                  DeleteAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is deleted. Must be greater than 90
                          days plus <code>MoveToColdStorageAfterDays</code>.
                  MoveToColdStorageAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is moved to cold storage.
                type: object
              RecoveryPointTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  To help organize your resources, you can assign your own
                  metadata to the resources that you create. Each tag is a
                  key-value pair.
                type: object
              ResourceArn:
                description: >-
                  An Amazon Resource Name (ARN) that uniquely identifies a
                  resource. The format of the ARN depends on the resource type.
                type: string
              StartWindowMinutes:
                description: >-
                  A value in minutes after a backup is scheduled before a job
                  will be canceled if it doesn't start successfully. This value
                  is optional, and the default is 8 hours.
                type: integer
            required:
              - BackupVaultName
              - ResourceArn
              - IamRoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /backup-jobs/:
    get:
      description: >-
        Returns a list of existing backup jobs for an authenticated account for
        the last 30 days. For a longer period of time, consider using these <a
        href="https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html">monitoring
        tools</a>.
      operationId: ListBackupJobs
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Returns only backup jobs that match the specified resource Amazon
            Resource Name (ARN).
          in: query
          name: resourceArn
          required: false
          type: string
        - description: Returns only backup jobs that are in the specified state.
          enum:
            - CREATED
            - PENDING
            - RUNNING
            - ABORTING
            - ABORTED
            - COMPLETED
            - FAILED
            - EXPIRED
          in: query
          name: state
          required: false
          type: string
        - description: >-
            Returns only backup jobs that will be stored in the specified backup
            vault. Backup vaults are identified by names that are unique to the
            account used to create them and the Amazon Web Services Region where
            they are created. They consist of lowercase letters, numbers, and
            hyphens.
          in: query
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: false
          type: string
        - description: >-
            Returns only backup jobs that were created before the specified
            date.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: Returns only backup jobs that were created after the specified date.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: >-
            <p>Returns only backup jobs for the specified resources:</p> <ul>
            <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li>
            <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li>
            <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li>
            <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li>
            <p> <code>RDS</code> for Amazon Relational Database Service</p>
            </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li>
            <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>
          in: query
          name: resourceType
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: >-
            <p>The account ID to list the jobs from. Returns only backup jobs
            associated with the specified account ID.</p> <p>If used from an
            Organizations management account, passing <code>*</code> returns all
            jobs across the organization.</p>
          in: query
          name: accountId
          pattern: '^[0-9]{12}$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup-jobs/{backupJobId}':
    get:
      description: Returns backup job details for the specified <code>BackupJobId</code>.
      operationId: DescribeBackupJob
      parameters:
        - description: Uniquely identifies a request to Backup to back up a resource.
          in: path
          name: backupJobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: Attempts to cancel a job to create a one-time backup of a resource.
      operationId: StopBackupJob
      parameters:
        - description: Uniquely identifies a request to Backup to back up a resource.
          in: path
          name: backupJobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  /backup-vaults/:
    get:
      description: >-
        Returns a list of recovery point storage containers along with
        information about them.
      operationId: ListBackupVaults
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupVaultsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup-vaults/{backupVaultName}':
    delete:
      description: >-
        Deletes the backup vault identified by its name. A vault can be deleted
        only if it is empty.
      operationId: DeleteBackupVault
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    get:
      description: Returns metadata about a backup vault specified by its name.
      operationId: DescribeBackupVault
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a logical container where backups are stored. A
        <code>CreateBackupVault</code> request includes a name, optionally one
        or more resource tags, an encryption key, and a request ID.</p> <note>
        <p>Do not include sensitive data, such as passport numbers, in the name
        of a backup vault.</p> </note>
      operationId: CreateBackupVault
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupVaultTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  Metadata that you can assign to help organize the resources
                  that you create. Each tag is a key-value pair.
                type: object
              CreatorRequestId:
                description: >-
                  A unique string that identifies the request and allows failed
                  requests to be retried without the risk of running the
                  operation twice.
                type: string
              EncryptionKeyArn:
                description: >-
                  The server-side encryption key that is used to protect your
                  backups; for example,
                  <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupVaultOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
  '/backup-vaults/{backupVaultName}/access-policy':
    delete:
      description: Deletes the policy document that manages permissions on a backup vault.
      operationId: DeleteBackupVaultAccessPolicy
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: >-
        Returns the access policy document that is associated with the named
        backup vault.
      operationId: GetBackupVaultAccessPolicy
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultAccessPolicyOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Sets a resource-based policy that is used to manage access permissions
        on the target backup vault. Requires a backup vault name and an access
        policy document in JSON format.
      operationId: PutBackupVaultAccessPolicy
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Policy:
                description: The backup vault access policy document in JSON format.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/notification-configuration':
    delete:
      description: Deletes event notifications for the specified backup vault.
      operationId: DeleteBackupVaultNotifications
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Region where they are created. They consist
            of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: Returns event notifications for the specified backup vault.
      operationId: GetBackupVaultNotifications
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultNotificationsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Turns on notifications on a backup vault for the specified topic and
        events.
      operationId: PutBackupVaultNotifications
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupVaultEvents:
                description: >-
                  <p>An array of events that indicate the status of jobs to back
                  up resources to the backup vault.</p> <note> <p>The following
                  events are supported:</p> <p> <code>BACKUP_JOB_STARTED</code>,
                  <code>BACKUP_JOB_COMPLETED</code>,</p> <p>
                  <code>COPY_JOB_STARTED</code>,
                  <code>COPY_JOB_SUCCESSFUL</code>,
                  <code>COPY_JOB_FAILED</code>,</p> <p>
                  <code>RESTORE_JOB_STARTED</code>,
                  <code>RESTORE_JOB_COMPLETED</code>, and
                  <code>RECOVERY_POINT_MODIFIED</code>.</p> <p>To find failed
                  backup jobs, use <code>BACKUP_JOB_COMPLETED</code> and filter
                  using event metadata.</p> <p>Other events in the following
                  list are deprecated.</p> </note>
                items:
                  $ref: '#/definitions/BackupVaultEvent'
                type: array
              SNSTopicArn:
                description: >-
                  The Amazon Resource Name (ARN) that specifies the topic for a
                  backup vault’s events; for example,
                  <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.
                type: string
            required:
              - SNSTopicArn
              - BackupVaultEvents
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/recovery-points/':
    get:
      description: >-
        Returns detailed information about the recovery points stored in a
        backup vault.
      operationId: ListRecoveryPointsByBackupVault
      parameters:
        - description: >-
            <p>The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and
            hyphens.</p> <note> <p>Backup vault name might not be available when
            a supported service creates the backup.</p> </note>
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Returns only recovery points that match the specified resource
            Amazon Resource Name (ARN).
          in: query
          name: resourceArn
          required: false
          type: string
        - description: Returns only recovery points that match the specified resource type.
          in: query
          name: resourceType
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: >-
            Returns only recovery points that match the specified backup plan
            ID.
          in: query
          name: backupPlanId
          required: false
          type: string
        - description: >-
            Returns only recovery points that were created before the specified
            timestamp.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: >-
            Returns only recovery points that were created after the specified
            timestamp.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}':
    delete:
      description: >-
        <p>Deletes the recovery point specified by a recovery point ID.</p>
        <p>If the recovery point ID belongs to a continuous backup, calling this
        endpoint deletes the existing continuous backup and stops future
        continuous backup.</p>
      operationId: DeleteRecoveryPoint
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example,
            <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
          in: path
          name: recoveryPointArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: InvalidResourceStateException
          schema:
            $ref: '#/definitions/InvalidResourceStateException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    get:
      description: >-
        Returns metadata associated with a recovery point, including ID, status,
        encryption, and lifecycle.
      operationId: DescribeRecoveryPoint
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example,
            <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
          in: path
          name: recoveryPointArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecoveryPointOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sets the transition lifecycle of a recovery point.</p> <p>The
        lifecycle defines when a protected resource is transitioned to cold
        storage and when it expires. Backup transitions and expires backups
        automatically according to the lifecycle that you define.</p> <p>Backups
        transitioned to cold storage must be stored in cold storage for a
        minimum of 90 days. Therefore, the “expire after days” setting must be
        90 days greater than the “transition to cold after days” setting. The
        “transition to cold after days” setting cannot be changed after a backup
        has been transitioned to cold.</p> <p>Only Amazon EFS file system
        backups can be transitioned to cold storage.</p> <p>Does not support
        continuous backups.</p>
      operationId: UpdateRecoveryPointLifecycle
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example,
            <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
          in: path
          name: recoveryPointArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Lifecycle:
                description: >-
                  <p>Contains an array of <code>Transition</code> objects
                  specifying how long in days before a recovery point
                  transitions to cold storage or is deleted.</p> <p>Backups
                  transitioned to cold storage must be stored in cold storage
                  for a minimum of 90 days. Therefore, on the console, the
                  “expire after days” setting must be 90 days greater than the
                  “transition to cold after days” setting. The “transition to
                  cold after days” setting cannot be changed after a backup has
                  been transitioned to cold.</p> <p>Only Amazon EFS file system
                  backups can be transitioned to cold storage.</p>
                properties:
                  DeleteAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is deleted. Must be greater than 90
                          days plus <code>MoveToColdStorageAfterDays</code>.
                  MoveToColdStorageAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is moved to cold storage.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRecoveryPointLifecycleOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/disassociate':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        <p>Deletes the specified continuous backup recovery point from Backup
        and releases control of that continuous backup to the source service,
        such as Amazon RDS. The source service will continue to create and
        retain continuous backups using the lifecycle that you specified in your
        original backup plan.</p> <p>Does not support snapshot backup recovery
        points.</p>
      operationId: DisassociateRecoveryPoint
      parameters:
        - description: The unique name of an Backup vault.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies an Backup
            recovery point.
          in: path
          name: recoveryPointArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: InvalidResourceStateException
          schema:
            $ref: '#/definitions/InvalidResourceStateException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata':
    get:
      description: >-
        Returns a set of metadata key-value pairs that were used to create the
        backup.
      operationId: GetRecoveryPointRestoreMetadata
      parameters:
        - description: >-
            The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are
            created. They consist of lowercase letters, numbers, and hyphens.
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
          required: true
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example,
            <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
          in: path
          name: recoveryPointArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRecoveryPointRestoreMetadataOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /backup/plans/:
    get:
      description: >-
        Returns a list of all active backup plans for an authenticated account.
        The list contains information such as Amazon Resource Names (ARNs), plan
        IDs, creation and deletion dates, version IDs, plan names, and creator
        request IDs.
      operationId: ListBackupPlans
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            A Boolean value with a default value of <code>FALSE</code> that
            returns deleted backup plans when set to <code>TRUE</code>.
          in: query
          name: includeDeleted
          required: false
          type: boolean
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlansOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a backup plan using a backup plan name and backup rules. A
        backup plan is a document that contains information that Backup uses to
        schedule tasks that create recovery points for resources.</p> <p>If you
        call <code>CreateBackupPlan</code> with a plan that already exists, you
        receive an <code>AlreadyExistsException</code> exception.</p>
      operationId: CreateBackupPlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlan:
                description: >-
                  Contains an optional backup plan display name and an array of
                  <code>BackupRule</code> objects, each of which specifies a
                  backup rule. Each rule in a backup plan is a separate
                  scheduled task and can back up a different selection of Amazon
                  Web Services resources. 
                properties:
                  AdvancedBackupSettings:
                    allOf:
                      - $ref: '#/definitions/AdvancedBackupSettings'
                      - description: >-
                          Specifies a list of <code>BackupOptions</code> for
                          each resource type. These settings are only available
                          for Windows Volume Shadow Copy Service (VSS) backup
                          jobs.
                  BackupPlanName:
                    allOf:
                      - $ref: '#/definitions/BackupPlanName'
                      - description: The optional display name of a backup plan.
                  Rules:
                    allOf:
                      - $ref: '#/definitions/BackupRulesInput'
                      - description: >-
                          An array of <code>BackupRule</code> objects, each of
                          which specifies a scheduled task that is used to back
                          up a selection of resources.
                type: object
              BackupPlanTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  To help organize your resources, you can assign your own
                  metadata to the resources that you create. Each tag is a
                  key-value pair. The specified tags are assigned to all backups
                  created with this plan.
                type: object
              CreatorRequestId:
                description: >-
                  Identifies the request and allows failed requests to be
                  retried without the risk of running the operation twice. If
                  the request includes a <code>CreatorRequestId</code> that
                  matches an existing backup plan, that plan is returned. This
                  parameter is optional.
                type: string
            required:
              - BackupPlan
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupPlanOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}':
    delete:
      description: >-
        Deletes a backup plan. A backup plan can only be deleted after all
        associated selections of resources have been deleted. Deleting a backup
        plan deletes the current version of a backup plan. Previous versions, if
        any, will still exist.
      operationId: DeleteBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates an existing backup plan identified by its
        <code>backupPlanId</code> with the input document in JSON format. The
        new version is uniquely identified by a <code>VersionId</code>.
      operationId: UpdateBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlan:
                description: >-
                  Contains an optional backup plan display name and an array of
                  <code>BackupRule</code> objects, each of which specifies a
                  backup rule. Each rule in a backup plan is a separate
                  scheduled task and can back up a different selection of Amazon
                  Web Services resources. 
                properties:
                  AdvancedBackupSettings:
                    allOf:
                      - $ref: '#/definitions/AdvancedBackupSettings'
                      - description: >-
                          Specifies a list of <code>BackupOptions</code> for
                          each resource type. These settings are only available
                          for Windows Volume Shadow Copy Service (VSS) backup
                          jobs.
                  BackupPlanName:
                    allOf:
                      - $ref: '#/definitions/BackupPlanName'
                      - description: The optional display name of a backup plan.
                  Rules:
                    allOf:
                      - $ref: '#/definitions/BackupRulesInput'
                      - description: >-
                          An array of <code>BackupRule</code> objects, each of
                          which specifies a scheduled task that is used to back
                          up a selection of resources.
                type: object
            required:
              - BackupPlan
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}/':
    get:
      description: >-
        Returns <code>BackupPlan</code> details for the specified
        <code>BackupPlanId</code>. The details are the body of a backup plan in
        JSON format, in addition to plan metadata.
      operationId: GetBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: >-
            Unique, randomly generated, Unicode, UTF-8 encoded strings that are
            at most 1,024 bytes long. Version IDs cannot be edited.
          in: query
          name: versionId
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup/plans/{backupPlanId}/selections/':
    get:
      description: >-
        Returns an array containing metadata of the resources associated with
        the target backup plan.
      operationId: ListBackupSelections
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupSelectionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a JSON document that specifies a set of resources to assign
        to a backup plan. Resources can be included by specifying patterns for a
        <code>ListOfTags</code> and selected <code>Resources</code>. </p> <p>For
        example, consider the following patterns:</p> <ul> <li> <p>
        <code>Resources: "arn:aws:ec2:region:account-id:volume/volume-id"</code>
        </p> </li> <li> <p> <code>ConditionKey:"department"</code> </p> <p>
        <code>ConditionValue:"finance"</code> </p> <p>
        <code>ConditionType:"StringEquals"</code> </p> </li> <li> <p>
        <code>ConditionKey:"importance"</code> </p> <p>
        <code>ConditionValue:"critical"</code> </p> <p>
        <code>ConditionType:"StringEquals"</code> </p> </li> </ul> <p>Using
        these patterns would back up all Amazon Elastic Block Store (Amazon EBS)
        volumes that are tagged as <code>"department=finance"</code>,
        <code>"importance=critical"</code>, in addition to an EBS volume with
        the specified volume ID.</p> <p>Resources and conditions are additive in
        that all resources that match the pattern are selected. This shouldn't
        be confused with a logical AND, where all conditions must match. The
        matching patterns are logically put together using the OR operator. In
        other words, all patterns that match are selected for backup.</p>
      operationId: CreateBackupSelection
      parameters:
        - description: >-
            Uniquely identifies the backup plan to be associated with the
            selection of resources.
          in: path
          name: backupPlanId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupSelection:
                description: Used to specify a set of resources to a backup plan.
                properties:
                  IamRoleArn:
                    allOf:
                      - $ref: '#/definitions/IAMRoleArn'
                      - description: >-
                          The ARN of the IAM role that Backup uses to
                          authenticate when backing up the target resource; for
                          example,
                          <code>arn:aws:iam::123456789012:role/S3Access</code>.
                  ListOfTags:
                    allOf:
                      - $ref: '#/definitions/ListOfTags'
                      - description: >-
                          An array of conditions used to specify a set of
                          resources to assign to a backup plan; for example,
                          <code>"StringEquals": {"ec2:ResourceTag/Department":
                          "accounting"</code>. Assigns the backup plan to every
                          resource with at least one matching tag.
                  Resources:
                    allOf:
                      - $ref: '#/definitions/ResourceArns'
                      - description: >-
                          An array of strings that contain Amazon Resource Names
                          (ARNs) of resources to assign to a backup plan.
                  SelectionName:
                    allOf:
                      - $ref: '#/definitions/BackupSelectionName'
                      - description: The display name of a resource selection document.
                type: object
              CreatorRequestId:
                description: >-
                  A unique string that identifies the request and allows failed
                  requests to be retried without the risk of running the
                  operation twice.
                type: string
            required:
              - BackupSelection
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupSelectionOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}/selections/{selectionId}':
    delete:
      description: >-
        Deletes the resource selection associated with a backup plan that is
        specified by the <code>SelectionId</code>.
      operationId: DeleteBackupSelection
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: >-
            Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
          in: path
          name: selectionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: >-
        Returns selection metadata and a document in JSON format that specifies
        a list of resources that are associated with a backup plan.
      operationId: GetBackupSelection
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: >-
            Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
          in: path
          name: selectionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupSelectionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup/plans/{backupPlanId}/toTemplate/':
    get:
      description: >-
        Returns the backup plan that is specified by the plan ID as a backup
        template.
      operationId: ExportBackupPlanTemplate
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportBackupPlanTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup/plans/{backupPlanId}/versions/':
    get:
      description: >-
        Returns version metadata of your backup plans, including Amazon Resource
        Names (ARNs), backup plan IDs, creation and deletion dates, plan names,
        and version IDs.
      operationId: ListBackupPlanVersions
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanVersionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /backup/template/json/toPlan:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a valid JSON document specifying a backup plan or an error.
      operationId: GetBackupPlanFromJSON
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlanTemplateJson:
                description: A customer-supplied backup plan document in JSON format.
                type: string
            required:
              - BackupPlanTemplateJson
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromJSONOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  /backup/template/plans:
    get:
      description: >-
        Returns metadata of your saved backup plan templates, including the
        template ID, name, and the creation and deletion dates.
      operationId: ListBackupPlanTemplates
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanTemplatesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/backup/template/plans/{templateId}/toPlan':
    get:
      description: >-
        Returns the template specified by its <code>templateId</code> as a
        backup plan.
      operationId: GetBackupPlanFromTemplate
      parameters:
        - description: Uniquely identifies a stored backup plan template.
          in: path
          name: templateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /copy-jobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Starts a job to create a one-time copy of the specified resource.</p>
        <p>Does not support continuous backups.</p>
      operationId: StartCopyJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DestinationBackupVaultArn:
                description: >-
                  An Amazon Resource Name (ARN) that uniquely identifies a
                  destination backup vault to copy to; for example,
                  <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.
                type: string
              IamRoleArn:
                description: >-
                  Specifies the IAM role ARN used to copy the target recovery
                  point; for example,
                  <code>arn:aws:iam::123456789012:role/S3Access</code>.
                type: string
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>StartCopyJob</code>. Retrying a successful request with
                  the same idempotency token results in a success message with
                  no action taken.
                type: string
              Lifecycle:
                description: >-
                  <p>Contains an array of <code>Transition</code> objects
                  specifying how long in days before a recovery point
                  transitions to cold storage or is deleted.</p> <p>Backups
                  transitioned to cold storage must be stored in cold storage
                  for a minimum of 90 days. Therefore, on the console, the
                  “expire after days” setting must be 90 days greater than the
                  “transition to cold after days” setting. The “transition to
                  cold after days” setting cannot be changed after a backup has
                  been transitioned to cold.</p> <p>Only Amazon EFS file system
                  backups can be transitioned to cold storage.</p>
                properties:
                  DeleteAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is deleted. Must be greater than 90
                          days plus <code>MoveToColdStorageAfterDays</code>.
                  MoveToColdStorageAfterDays:
                    allOf:
                      - $ref: '#/definitions/Long'
                      - description: >-
                          Specifies the number of days after creation that a
                          recovery point is moved to cold storage.
                type: object
              RecoveryPointArn:
                description: >-
                  An ARN that uniquely identifies a recovery point to use for
                  the copy job; for example,
                  arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 
                type: string
              SourceBackupVaultName:
                description: >-
                  The name of a logical source container where backups are
                  stored. Backup vaults are identified by names that are unique
                  to the account used to create them and the Amazon Web Services
                  Region where they are created. They consist of lowercase
                  letters, numbers, and hyphens.
                pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
                type: string
            required:
              - RecoveryPointArn
              - SourceBackupVaultName
              - DestinationBackupVaultArn
              - IamRoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  /copy-jobs/:
    get:
      description: Returns metadata about your copy jobs.
      operationId: ListCopyJobs
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return maxResults number of items,
            NextToken allows you to return more items in your list starting at
            the location pointed to by the next token. 
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Returns only copy jobs that match the specified resource Amazon
            Resource Name (ARN). 
          in: query
          name: resourceArn
          required: false
          type: string
        - description: Returns only copy jobs that are in the specified state.
          enum:
            - CREATED
            - RUNNING
            - COMPLETED
            - FAILED
          in: query
          name: state
          required: false
          type: string
        - description: Returns only copy jobs that were created before the specified date.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: Returns only copy jobs that were created after the specified date.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: >-
            <p>Returns only backup jobs for the specified resources:</p> <ul>
            <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li>
            <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li>
            <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li>
            <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li>
            <p> <code>RDS</code> for Amazon Relational Database Service</p>
            </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li>
            <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>
          in: query
          name: resourceType
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a source
            backup vault to copy from; for example,
            <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. 
          in: query
          name: destinationVaultArn
          required: false
          type: string
        - description: >-
            The account ID to list the jobs from. Returns only copy jobs
            associated with the specified account ID.
          in: query
          name: accountId
          pattern: '^[0-9]{12}$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCopyJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/copy-jobs/{copyJobId}':
    get:
      description: Returns metadata associated with creating a copy of a resource.
      operationId: DescribeCopyJob
      parameters:
        - description: Uniquely identifies a copy job.
          in: path
          name: copyJobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /global-settings:
    get:
      description: >-
        Describes whether the Amazon Web Services account is opted in to
        cross-account backup. Returns an error if the account is not a member of
        an Organizations organization. Example: <code>describe-global-settings
        --region us-west-2</code> 
      operationId: DescribeGlobalSettings
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGlobalSettingsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Updates whether the Amazon Web Services account is opted in to
        cross-account backup. Returns an error if the account is not an
        Organizations management account. Use the
        <code>DescribeGlobalSettings</code> API to determine the current
        settings.
      operationId: UpdateGlobalSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              GlobalSettings:
                additionalProperties:
                  $ref: '#/definitions/GlobalSettingsValue'
                description: >-
                  A value for <code>isCrossAccountBackupEnabled</code> and a
                  Region. Example: <code>update-global-settings
                  --global-settings isCrossAccountBackupEnabled=false --region
                  us-west-2</code>.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  /resources/:
    get:
      description: >-
        Returns an array of resources successfully backed up by Backup,
        including the time the resource was saved, an Amazon Resource Name (ARN)
        of the resource, and a resource type.
      operationId: ListProtectedResources
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProtectedResourcesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/resources/{resourceArn}':
    get:
      description: >-
        Returns information about a saved resource, including the last time it
        was backed up, its Amazon Resource Name (ARN), and the Amazon Web
        Services service type of the saved resource.
      operationId: DescribeProtectedResource
      parameters:
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
          in: path
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProtectedResourceOutput'
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/resources/{resourceArn}/recovery-points/':
    get:
      description: >-
        <p>Returns detailed information about all the recovery points of the
        type specified by a resource Amazon Resource Name (ARN).</p> <note>
        <p>For Amazon EFS and Amazon EC2, this action only lists recovery points
        created by Backup.</p> </note>
      operationId: ListRecoveryPointsByResource
      parameters:
        - description: >-
            An ARN that uniquely identifies a resource. The format of the ARN
            depends on the resource type.
          in: path
          name: resourceArn
          required: true
          type: string
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: >-
            <p>The maximum number of items to be returned.</p> <note> <p>Amazon
            RDS requires a value of at least 20.</p> </note>
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /restore-jobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Recovers the saved resource identified by an Amazon Resource Name (ARN).
      operationId: StartRestoreJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              IamRoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the IAM role that Backup
                  uses to create the target recovery point; for example,
                  <code>arn:aws:iam::123456789012:role/S3Access</code>.
                type: string
              IdempotencyToken:
                description: >-
                  A customer-chosen string that you can use to distinguish
                  between otherwise identical calls to
                  <code>StartRestoreJob</code>. Retrying a successful request
                  with the same idempotency token results in a success message
                  with no action taken.
                type: string
              Metadata:
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
                description: >-
                  <p>A set of metadata key-value pairs. Contains information,
                  such as a resource name, required to restore a recovery
                  point.</p> <p> You can get configuration metadata about a
                  resource at the time it was backed up by calling
                  <code>GetRecoveryPointRestoreMetadata</code>. However, values
                  in addition to those provided by
                  <code>GetRecoveryPointRestoreMetadata</code> might be required
                  to restore a resource. For example, you might need to provide
                  a new resource name if the original already exists.</p> <p>You
                  need to specify specific metadata to restore an Amazon Elastic
                  File System (Amazon EFS) instance:</p> <ul> <li> <p>
                  <code>file-system-id</code>: The ID of the Amazon EFS file
                  system that is backed up by Backup. Returned in
                  <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li>
                  <p> <code>Encrypted</code>: A Boolean value that, if true,
                  specifies that the file system is encrypted. If
                  <code>KmsKeyId</code> is specified, <code>Encrypted</code>
                  must be set to <code>true</code>.</p> </li> <li> <p>
                  <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS
                  key that is used to encrypt the restored file system. You can
                  specify a key from another Amazon Web Services account
                  provided that key it is properly shared with your account via
                  Amazon Web Services KMS.</p> </li> <li> <p>
                  <code>PerformanceMode</code>: Specifies the throughput mode of
                  the file system.</p> </li> <li> <p>
                  <code>CreationToken</code>: A user-supplied value that ensures
                  the uniqueness (idempotency) of the request.</p> </li> <li>
                  <p> <code>newFileSystem</code>: A Boolean value that, if true,
                  specifies that the recovery point is restored to a new Amazon
                  EFS file system.</p> </li> <li> <p>
                  <code>ItemsToRestore</code>: An array of one to five strings
                  where each string is a file path. Use
                  <code>ItemsToRestore</code> to restore specific files or
                  directories rather than the entire file system. This parameter
                  is optional. For example,
                  <code>"itemsToRestore":"[\"/my.test\"]"</code>.</p> </li>
                  </ul>
                type: object
              RecoveryPointArn:
                description: >-
                  An ARN that uniquely identifies a recovery point; for example,
                  <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.
                type: string
              ResourceType:
                description: >-
                  <p>Starts a job to restore a recovery point for one of the
                  following resources:</p> <ul> <li> <p> <code>DynamoDB</code>
                  for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for
                  Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code>
                  for Amazon Elastic Compute Cloud</p> </li> <li> <p>
                  <code>EFS</code> for Amazon Elastic File System</p> </li> <li>
                  <p> <code>RDS</code> for Amazon Relational Database
                  Service</p> </li> <li> <p> <code>Aurora</code> for Amazon
                  Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for
                  Storage Gateway</p> </li> </ul>
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
                type: string
            required:
              - RecoveryPointArn
              - Metadata
              - IamRoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  /restore-jobs/:
    get:
      description: >-
        Returns a list of jobs that Backup initiated to restore a saved
        resource, including details about the recovery process.
      operationId: ListRestoreJobs
      parameters:
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The account ID to list the jobs from. Returns only restore jobs
            associated with the specified account ID.
          in: query
          name: accountId
          pattern: '^[0-9]{12}$'
          required: false
          type: string
        - description: >-
            Returns only restore jobs that were created before the specified
            date.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: >-
            Returns only restore jobs that were created after the specified
            date.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: Returns only restore jobs associated with the specified job status.
          enum:
            - PENDING
            - RUNNING
            - COMPLETED
            - ABORTED
            - FAILED
          in: query
          name: status
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRestoreJobsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/restore-jobs/{restoreJobId}':
    get:
      description: >-
        Returns metadata associated with a restore job that is specified by a
        job ID.
      operationId: DescribeRestoreJob
      parameters:
        - description: Uniquely identifies the job that restores a recovery point.
          in: path
          name: restoreJobId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /supported-resource-types:
    get:
      description: Returns the Amazon Web Services resource types supported by Backup.
      operationId: GetSupportedResourceTypes
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSupportedResourceTypesOutput'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{resourceArn}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Assigns a set of key-value pairs to a recovery point, backup plan, or
        backup vault identified by an Amazon Resource Name (ARN).
      operationId: TagResource
      parameters:
        - description: >-
            An ARN that uniquely identifies a resource. The format of the ARN
            depends on the type of the tagged resource.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  Key-value pairs that are used to help organize your resources.
                  You can assign your own metadata to the resources you create.
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/tags/{resourceArn}/':
    get:
      description: >-
        <p>Returns a list of key-value pairs assigned to a target recovery
        point, backup plan, or backup vault.</p> <note> <p>
        <code>ListTags</code> are currently only supported with Amazon EFS
        backups.</p> </note>
      operationId: ListTags
      parameters:
        - description: >-
            An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the type of resource. Valid targets
            for <code>ListTags</code> are recovery points, backup plans, and
            backup vaults.
          in: path
          name: resourceArn
          required: true
          type: string
        - description: >-
            The next item following a partial list of returned items. For
            example, if a request is made to return <code>maxResults</code>
            number of items, <code>NextToken</code> allows you to return more
            items in your list starting at the location pointed to by the next
            token.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/untag/{resourceArn}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Removes a set of key-value pairs from a recovery point, backup plan, or
        backup vault identified by an Amazon Resource Name (ARN)
      operationId: UntagResource
      parameters:
        - description: >-
            An ARN that uniquely identifies a resource. The format of the ARN
            depends on the type of the tagged resource.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              TagKeyList:
                description: >-
                  A list of keys to identify which key-value tags to remove from
                  a resource.
                items:
                  $ref: '#/definitions/string'
                type: array
            required:
              - TagKeyList
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

