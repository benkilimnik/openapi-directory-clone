basePath: /
definitions:
  AccessDeniedException: {}
  AttributeMap:
    additionalProperties:
      $ref: '#/definitions/url'
    type: object
  CreateEnvironmentRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the FinSpace environment to be created.
      federationMode:
        allOf:
          - $ref: '#/definitions/FederationMode'
          - description: >-
              <p>Authentication mode for the environment.</p> <ul> <li> <p>
              <code>FEDERATED</code> - Users access FinSpace through Single Sign
              On (SSO) via your Identity provider.</p> </li> <li> <p>
              <code>LOCAL</code> - Users access FinSpace via email and password
              managed within the FinSpace environment.</p> </li> </ul>
      federationParameters:
        allOf:
          - $ref: '#/definitions/FederationParameters'
          - description: Configuration information when authentication mode is FEDERATED.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyId'
          - description: The KMS key id to encrypt your data in the FinSpace environment.
      name:
        allOf:
          - $ref: '#/definitions/EnvironmentName'
          - description: The name of the FinSpace environment to be created.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Add tags to your FinSpace environment.
    required:
      - name
    title: CreateEnvironmentRequest
    type: object
  CreateEnvironmentResponse:
    properties:
      environmentArn:
        allOf:
          - $ref: '#/definitions/EnvironmentArn'
          - description: >-
              The Amazon Resource Name (ARN) of the FinSpace environment that
              you created.
      environmentId:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: The unique identifier for FinSpace environment that you created.
      environmentUrl:
        allOf:
          - $ref: '#/definitions/url'
          - description: >-
              The sign-in url for the web application of the FinSpace
              environment you created.
    type: object
  DeleteEnvironmentRequest:
    properties: {}
    title: DeleteEnvironmentRequest
    type: object
  DeleteEnvironmentResponse:
    properties: {}
    type: object
  Description:
    maxLength: 1000
    minLength: 1
    pattern: '^[a-zA-Z0-9. ]{1,1000}$'
    type: string
  Environment:
    description: Represents an FinSpace environment.
    properties:
      awsAccountId:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: >-
              The ID of the AWS account in which the FinSpace environment is
              created.
      dedicatedServiceAccountId:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: >-
              The AWS account ID of the dedicated service account associated
              with your FinSpace environment.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the FinSpace environment.
      environmentArn:
        allOf:
          - $ref: '#/definitions/EnvironmentArn'
          - description: The Amazon Resource Name (ARN) of your FinSpace environment.
      environmentId:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: The identifier of the FinSpace environment.
      environmentUrl:
        allOf:
          - $ref: '#/definitions/url'
          - description: >-
              The sign-in url for the web application of your FinSpace
              environment.
      federationMode:
        allOf:
          - $ref: '#/definitions/FederationMode'
          - description: The authentication mode for the environment.
      federationParameters:
        allOf:
          - $ref: '#/definitions/FederationParameters'
          - description: Configuration information when authentication mode is FEDERATED.
      kmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyId'
          - description: The KMS key id used to encrypt in the FinSpace environment.
      name:
        allOf:
          - $ref: '#/definitions/EnvironmentName'
          - description: The name of the FinSpace environment.
      sageMakerStudioDomainUrl:
        allOf:
          - $ref: '#/definitions/SmsDomainUrl'
          - description: >-
              The url of the integrated FinSpace notebook environment in your
              web application.
      status:
        allOf:
          - $ref: '#/definitions/EnvironmentStatus'
          - description: The current status of creation of the FinSpace environment.
    type: object
  EnvironmentArn:
    maxLength: 2048
    minLength: 20
    pattern: >-
      ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$
    type: string
  EnvironmentList:
    items:
      $ref: '#/definitions/Environment'
    type: array
  EnvironmentName:
    maxLength: 255
    minLength: 1
    pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]$'
    type: string
  EnvironmentStatus:
    enum:
      - CREATE_REQUESTED
      - CREATING
      - CREATED
      - DELETE_REQUESTED
      - DELETING
      - DELETED
      - FAILED_CREATION
      - RETRY_DELETION
      - FAILED_DELETION
      - SUSPENDED
    type: string
  FederationAttributeKey:
    maxLength: 32
    minLength: 1
    pattern: .*
    type: string
  FederationMode:
    enum:
      - FEDERATED
      - LOCAL
    type: string
  FederationParameters:
    description: Configuration information when authentication mode is FEDERATED.
    properties:
      applicationCallBackURL:
        allOf:
          - $ref: '#/definitions/url'
          - description: >-
              The redirect or sign-in URL that should be entered into the SAML
              2.0 compliant identity provider configuration (IdP).
      attributeMap:
        allOf:
          - $ref: '#/definitions/AttributeMap'
          - description: >-
              SAML attribute name and value. The name must always be
              <code>Email</code> and the value should be set to the attribute
              definition in which user email is set. For example, name would be
              <code>Email</code> and value
              <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>.
              Please check your SAML 2.0 compliant identity provider (IdP)
              documentation for details.
      federationProviderName:
        allOf:
          - $ref: '#/definitions/FederationProviderName'
          - description: Name of the identity provider (IdP).
      federationURN:
        allOf:
          - $ref: '#/definitions/urn'
          - description: >-
              The Uniform Resource Name (URN). Also referred as Service Provider
              URN or Audience URI or Service Provider Entity ID.
      samlMetadataDocument:
        allOf:
          - $ref: '#/definitions/SamlMetadataDocument'
          - description: SAML 2.0 Metadata document from identity provider (IdP).
      samlMetadataURL:
        allOf:
          - $ref: '#/definitions/url'
          - description: >-
              Provide the metadata URL from your SAML 2.0 compliant identity
              provider (IdP).
    type: object
  FederationProviderName:
    maxLength: 32
    minLength: 1
    pattern: '[^_\p{Z}][\p{L}\p{M}\p{S}\p{N}\p{P}][^_\p{Z}]+'
    type: string
  GetEnvironmentRequest:
    properties: {}
    title: GetEnvironmentRequest
    type: object
  GetEnvironmentResponse:
    properties:
      environment:
        allOf:
          - $ref: '#/definitions/Environment'
          - description: The name of the FinSpace environment.
    type: object
  IdType:
    maxLength: 26
    minLength: 1
    pattern: '^[a-zA-Z0-9]{1,26}$'
    type: string
  InternalServerException: {}
  InvalidRequestException: {}
  KmsKeyId:
    maxLength: 1000
    minLength: 1
    pattern: '^[a-zA-Z-0-9-:\/]*$'
    type: string
  LimitExceededException: {}
  ListEnvironmentsRequest:
    properties: {}
    title: ListEnvironmentsRequest
    type: object
  ListEnvironmentsResponse:
    properties:
      environments:
        allOf:
          - $ref: '#/definitions/EnvironmentList'
          - description: A list of all of your FinSpace environments.
      nextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of all tags for a resource.
    type: object
  PaginationToken:
    maxLength: 1000
    minLength: 1
    pattern: .*
    type: string
  ResourceNotFoundException: {}
  ResultLimit:
    maximum: 100
    minimum: 0
    type: integer
  SamlMetadataDocument:
    maxLength: 10000000
    minLength: 1000
    pattern: .*
    type: string
  ServiceQuotaExceededException: {}
  SmsDomainUrl:
    maxLength: 1000
    minLength: 1
    pattern: '^[a-zA-Z-0-9-:\/.]*$'
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: One or more tags to be assigned to the resource.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 1
    pattern: '^[a-zA-Z0-9+-=._:@ ]+$'
    type: string
  ThrottlingException: {}
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateEnvironmentRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the environment.
      federationMode:
        allOf:
          - $ref: '#/definitions/FederationMode'
          - description: >-
              <p>Authentication mode for the environment.</p> <ul> <li> <p>
              <code>FEDERATED</code> - Users access FinSpace through Single Sign
              On (SSO) via your Identity provider.</p> </li> <li> <p>
              <code>LOCAL</code> - Users access FinSpace via email and password
              managed within the FinSpace environment.</p> </li> </ul>
      federationParameters:
        $ref: '#/definitions/FederationParameters'
      name:
        allOf:
          - $ref: '#/definitions/EnvironmentName'
          - description: The name of the environment.
    title: UpdateEnvironmentRequest
    type: object
  UpdateEnvironmentResponse:
    properties:
      environment:
        allOf:
          - $ref: '#/definitions/Environment'
          - description: Returns the FinSpace environment object.
    type: object
  ValidationException: {}
  url:
    maxLength: 1000
    minLength: 1
    pattern: '^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]'
    type: string
  urn:
    maxLength: 255
    minLength: 1
    pattern: '^[A-Za-z0-9._\-:\/#\+]+$'
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/finspace/'
host: finspace.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    The FinSpace management service provides the APIs for managing the FinSpace
    environments. 
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: FinSpace User Environment Management service
  version: '2021-03-12'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: finspace
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/finspace-2021-03-12.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: finspace
paths:
  /environment:
    get:
      description: A list of all of your FinSpace environments.
      operationId: ListEnvironments
      parameters:
        - description: >-
            A token generated by FinSpace that specifies where to continue
            pagination if a previous request was truncated. To get the next set
            of pages, pass in the nextToken value from the response object of
            the previous page call.
          in: query
          maxLength: 1000
          minLength: 1
          name: nextToken
          pattern: .*
          required: false
          type: string
        - description: The maximum number of results to return in this request.
          in: query
          maximum: 100
          minimum: 0
          name: maxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEnvironmentsResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Create a new FinSpace environment.
      operationId: CreateEnvironment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description of the FinSpace environment to be created.
                maxLength: 1000
                minLength: 1
                pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                type: string
              federationMode:
                description: >-
                  <p>Authentication mode for the environment.</p> <ul> <li> <p>
                  <code>FEDERATED</code> - Users access FinSpace through Single
                  Sign On (SSO) via your Identity provider.</p> </li> <li> <p>
                  <code>LOCAL</code> - Users access FinSpace via email and
                  password managed within the FinSpace environment.</p> </li>
                  </ul>
                enum:
                  - FEDERATED
                  - LOCAL
                type: string
              federationParameters:
                description: >-
                  Configuration information when authentication mode is
                  FEDERATED.
                properties:
                  applicationCallBackURL:
                    allOf:
                      - $ref: '#/definitions/url'
                      - description: >-
                          The redirect or sign-in URL that should be entered
                          into the SAML 2.0 compliant identity provider
                          configuration (IdP).
                  attributeMap:
                    allOf:
                      - $ref: '#/definitions/AttributeMap'
                      - description: >-
                          SAML attribute name and value. The name must always be
                          <code>Email</code> and the value should be set to the
                          attribute definition in which user email is set. For
                          example, name would be <code>Email</code> and value
                          <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>.
                          Please check your SAML 2.0 compliant identity provider
                          (IdP) documentation for details.
                  federationProviderName:
                    allOf:
                      - $ref: '#/definitions/FederationProviderName'
                      - description: Name of the identity provider (IdP).
                  federationURN:
                    allOf:
                      - $ref: '#/definitions/urn'
                      - description: >-
                          The Uniform Resource Name (URN). Also referred as
                          Service Provider URN or Audience URI or Service
                          Provider Entity ID.
                  samlMetadataDocument:
                    allOf:
                      - $ref: '#/definitions/SamlMetadataDocument'
                      - description: >-
                          SAML 2.0 Metadata document from identity provider
                          (IdP).
                  samlMetadataURL:
                    allOf:
                      - $ref: '#/definitions/url'
                      - description: >-
                          Provide the metadata URL from your SAML 2.0 compliant
                          identity provider (IdP).
                type: object
              kmsKeyId:
                description: >-
                  The KMS key id to encrypt your data in the FinSpace
                  environment.
                maxLength: 1000
                minLength: 1
                pattern: '^[a-zA-Z-0-9-:\/]*$'
                type: string
              name:
                description: The name of the FinSpace environment to be created.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Add tags to your FinSpace environment.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEnvironmentResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/environment/{environmentId}':
    delete:
      description: Delete an FinSpace environment.
      operationId: DeleteEnvironment
      parameters:
        - description: The identifier for the FinSpace environment.
          in: path
          maxLength: 26
          minLength: 1
          name: environmentId
          pattern: '^[a-zA-Z0-9]{1,26}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: Returns the FinSpace environment object.
      operationId: GetEnvironment
      parameters:
        - description: The identifier of the FinSpace environment.
          in: path
          maxLength: 26
          minLength: 1
          name: environmentId
          pattern: '^[a-zA-Z0-9]{1,26}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Update your FinSpace environment.
      operationId: UpdateEnvironment
      parameters:
        - description: The identifier of the FinSpace environment.
          in: path
          maxLength: 26
          minLength: 1
          name: environmentId
          pattern: '^[a-zA-Z0-9]{1,26}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description of the environment.
                maxLength: 1000
                minLength: 1
                pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                type: string
              federationMode:
                description: >-
                  <p>Authentication mode for the environment.</p> <ul> <li> <p>
                  <code>FEDERATED</code> - Users access FinSpace through Single
                  Sign On (SSO) via your Identity provider.</p> </li> <li> <p>
                  <code>LOCAL</code> - Users access FinSpace via email and
                  password managed within the FinSpace environment.</p> </li>
                  </ul>
                enum:
                  - FEDERATED
                  - LOCAL
                type: string
              federationParameters:
                description: >-
                  Configuration information when authentication mode is
                  FEDERATED.
                properties:
                  applicationCallBackURL:
                    allOf:
                      - $ref: '#/definitions/url'
                      - description: >-
                          The redirect or sign-in URL that should be entered
                          into the SAML 2.0 compliant identity provider
                          configuration (IdP).
                  attributeMap:
                    allOf:
                      - $ref: '#/definitions/AttributeMap'
                      - description: >-
                          SAML attribute name and value. The name must always be
                          <code>Email</code> and the value should be set to the
                          attribute definition in which user email is set. For
                          example, name would be <code>Email</code> and value
                          <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>.
                          Please check your SAML 2.0 compliant identity provider
                          (IdP) documentation for details.
                  federationProviderName:
                    allOf:
                      - $ref: '#/definitions/FederationProviderName'
                      - description: Name of the identity provider (IdP).
                  federationURN:
                    allOf:
                      - $ref: '#/definitions/urn'
                      - description: >-
                          The Uniform Resource Name (URN). Also referred as
                          Service Provider URN or Audience URI or Service
                          Provider Entity ID.
                  samlMetadataDocument:
                    allOf:
                      - $ref: '#/definitions/SamlMetadataDocument'
                      - description: >-
                          SAML 2.0 Metadata document from identity provider
                          (IdP).
                  samlMetadataURL:
                    allOf:
                      - $ref: '#/definitions/url'
                      - description: >-
                          Provide the metadata URL from your SAML 2.0 compliant
                          identity provider (IdP).
                type: object
              name:
                description: The name of the environment.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]$'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/tags/{resourceArn}':
    get:
      description: A list of all tags for a resource.
      operationId: ListTagsForResource
      parameters:
        - description: The Amazon Resource Name of the resource.
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: >-
            ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds metadata tags to a FinSpace resource.
      operationId: TagResource
      parameters:
        - description: The Amazon Resource Name (ARN) for the resource.
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: >-
            ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: One or more tags to be assigned to the resource.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: Removes metadata tags from a FinSpace resource.
      operationId: UntagResource
      parameters:
        - description: >-
            A FinSpace resource from which you want to remove a tag or tags. The
            value for this parameter is an Amazon Resource Name (ARN).
          in: path
          maxLength: 2048
          minLength: 20
          name: resourceArn
          pattern: >-
            ^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$
          required: true
          type: string
        - collectionFormat: multi
          description: The tag keys (names) of one or more tags to be removed.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

