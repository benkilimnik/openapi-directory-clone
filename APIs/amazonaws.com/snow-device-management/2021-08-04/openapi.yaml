basePath: /
definitions:
  AccessDeniedException: {}
  AttachmentStatus:
    enum:
      - ATTACHING
      - ATTACHED
      - DETACHING
      - DETACHED
    type: string
  Boolean:
    type: boolean
  CancelTaskInput:
    properties: {}
    title: CancelTaskInput
    type: object
  CancelTaskOutput:
    properties:
      taskId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the task that you are attempting to cancel.
    type: object
  Capacity:
    description: 'The physical capacity of the Amazon Web Services Snow Family device. '
    properties:
      available:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The amount of capacity available for use on the device.
      name:
        allOf:
          - $ref: '#/definitions/CapacityNameString'
          - description: 'The name of the type of capacity, such as memory.'
      total:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The total capacity on the device.
      unit:
        allOf:
          - $ref: '#/definitions/CapacityUnitString'
          - description: The unit of measure for the type of capacity.
      used:
        allOf:
          - $ref: '#/definitions/Long'
          - description: The amount of capacity used on the device.
    type: object
  CapacityList:
    items:
      $ref: '#/definitions/Capacity'
    maxItems: 100
    minItems: 0
    type: array
  CapacityNameString:
    maxLength: 100
    minLength: 0
    type: string
  CapacityUnitString:
    maxLength: 20
    minLength: 0
    type: string
  Command:
    description: The command given to the device to execute.
    properties:
      reboot:
        allOf:
          - $ref: '#/definitions/Reboot'
          - description: Reboots the device.
      unlock:
        allOf:
          - $ref: '#/definitions/Unlock'
          - description: Unlocks the device.
    type: object
  CpuOptions:
    description: The options for how a device's CPU is configured.
    properties:
      coreCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of cores that the CPU can use.
      threadsPerCore:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of threads per core in the CPU.
    type: object
  CreateTaskInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/IdempotencyToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      command:
        allOf:
          - $ref: '#/definitions/Command'
          - description: >-
              The task to be performed. Only one task is executed on a device at
              a time.
      description:
        allOf:
          - $ref: '#/definitions/TaskDescriptionString'
          - description: A description of the task and its targets.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment. 
      targets:
        allOf:
          - $ref: '#/definitions/TargetList'
          - description: A list of managed device IDs.
    required:
      - command
      - targets
    title: CreateTaskInput
    type: object
  CreateTaskOutput:
    properties:
      taskArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the task that you created.
      taskId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the task that you created.
    type: object
  DescribeDeviceEc2Input:
    properties:
      instanceIds:
        allOf:
          - $ref: '#/definitions/InstanceIdsList'
          - description: A list of instance IDs associated with the managed device.
    required:
      - instanceIds
    title: DescribeDeviceEc2Input
    type: object
  DescribeDeviceEc2Output:
    properties:
      instances:
        allOf:
          - $ref: '#/definitions/InstanceSummaryList'
          - description: 'A list of structures containing information about each instance. '
    type: object
  DescribeDeviceInput:
    properties: {}
    title: DescribeDeviceInput
    type: object
  DescribeDeviceOutput:
    properties:
      associatedWithJob:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the job used when ordering the device.
      deviceCapacities:
        allOf:
          - $ref: '#/definitions/CapacityList'
          - description: 'The hardware specifications of the device. '
      deviceState:
        allOf:
          - $ref: '#/definitions/UnlockState'
          - description: The current state of the device.
      deviceType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The type of Amazon Web Services Snow Family device.
      lastReachedOutAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              When the device last contacted the Amazon Web Services Cloud.
              Indicates that the device is online.
      lastUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              When the device last pushed an update to the Amazon Web Services
              Cloud. Indicates when the device cache was refreshed.
      managedDeviceArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the device.
      managedDeviceId:
        allOf:
          - $ref: '#/definitions/ManagedDeviceId'
          - description: The ID of the device that you checked the information for.
      physicalNetworkInterfaces:
        allOf:
          - $ref: '#/definitions/PhysicalNetworkInterfaceList'
          - description: The network interfaces available on the device.
      software:
        allOf:
          - $ref: '#/definitions/SoftwareInformation'
          - description: The software installed on the device.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment. 
    type: object
  DescribeExecutionInput:
    properties: {}
    title: DescribeExecutionInput
    type: object
  DescribeExecutionOutput:
    properties:
      executionId:
        allOf:
          - $ref: '#/definitions/ExecutionId'
          - description: The ID of the execution.
      lastUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the status of the execution was last updated.
      managedDeviceId:
        allOf:
          - $ref: '#/definitions/ManagedDeviceId'
          - description: The ID of the managed device that the task is being executed on.
      startedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the execution began.
      state:
        allOf:
          - $ref: '#/definitions/ExecutionState'
          - description: The current state of the execution.
      taskId:
        allOf:
          - $ref: '#/definitions/TaskId'
          - description: The ID of the task being executed on the device.
    type: object
  DescribeTaskInput:
    properties: {}
    title: DescribeTaskInput
    type: object
  DescribeTaskOutput:
    properties:
      completedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the task was completed.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the <code>CreateTask</code> operation was called.
      description:
        allOf:
          - $ref: '#/definitions/TaskDescriptionString'
          - description: The description provided of the task and managed devices.
      lastUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the state of the task was last updated.
      state:
        allOf:
          - $ref: '#/definitions/TaskState'
          - description: The current state of the task.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment.
      targets:
        allOf:
          - $ref: '#/definitions/TargetList'
          - description: The managed devices that the task was sent to.
      taskArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the task.
      taskId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the task.
    type: object
  DeviceSummary:
    description: Identifying information about the device.
    properties:
      associatedWithJob:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the job used to order the device.
      managedDeviceArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the device.
      managedDeviceId:
        allOf:
          - $ref: '#/definitions/ManagedDeviceId'
          - description: The ID of the device.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment.
    type: object
  DeviceSummaryList:
    items:
      $ref: '#/definitions/DeviceSummary'
    type: array
  EbsInstanceBlockDevice:
    description: >-
      Describes a parameter used to set up an Amazon Elastic Block Store (Amazon
      EBS) volume in a block device mapping.
    properties:
      attachTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the attachment was initiated.
      deleteOnTermination:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              A value that indicates whether the volume is deleted on instance
              termination.
      status:
        allOf:
          - $ref: '#/definitions/AttachmentStatus'
          - description: The attachment state.
      volumeId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the Amazon EBS volume.
    type: object
  ExecutionId:
    maxLength: 64
    minLength: 1
    type: string
  ExecutionState:
    enum:
      - QUEUED
      - IN_PROGRESS
      - CANCELED
      - FAILED
      - SUCCEEDED
      - REJECTED
      - TIMED_OUT
    type: string
  ExecutionSummary:
    description: The summary of a task execution on a specified device.
    properties:
      executionId:
        allOf:
          - $ref: '#/definitions/ExecutionId'
          - description: The ID of the execution.
      managedDeviceId:
        allOf:
          - $ref: '#/definitions/ManagedDeviceId'
          - description: The ID of the managed device that the task is being executed on.
      state:
        allOf:
          - $ref: '#/definitions/ExecutionState'
          - description: The state of the execution.
      taskId:
        allOf:
          - $ref: '#/definitions/TaskId'
          - description: The ID of the task.
    type: object
  ExecutionSummaryList:
    items:
      $ref: '#/definitions/ExecutionSummary'
    type: array
  IdempotencyToken:
    maxLength: 64
    minLength: 1
    pattern: '[!-~]+'
    type: string
  Instance:
    description: >-
      The description of an instance. Currently, Amazon EC2 instances are the
      only supported instance type.
    properties:
      amiLaunchIndex:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              The Amazon Machine Image (AMI) launch index, which you can use to
              find this instance in the launch group. 
      blockDeviceMappings:
        allOf:
          - $ref: '#/definitions/InstanceBlockDeviceMappingList'
          - description: Any block device mapping entries for the instance.
      cpuOptions:
        allOf:
          - $ref: '#/definitions/CpuOptions'
          - description: The CPU options for the instance.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the instance was created.
      imageId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the AMI used to launch the instance.
      instanceId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the instance.
      instanceType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The instance type.
      privateIpAddress:
        allOf:
          - $ref: '#/definitions/String'
          - description: The private IPv4 address assigned to the instance.
      publicIpAddress:
        allOf:
          - $ref: '#/definitions/String'
          - description: The public IPv4 address assigned to the instance.
      rootDeviceName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The device name of the root device volume (for example,
              <code>/dev/sda1</code>). 
      securityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroupIdentifierList'
          - description: The security groups for the instance.
      state:
        $ref: '#/definitions/InstanceState'
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the instance was last updated.
    type: object
  InstanceBlockDeviceMapping:
    description: The description of a block device mapping.
    properties:
      deviceName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The block device name.
      ebs:
        allOf:
          - $ref: '#/definitions/EbsInstanceBlockDevice'
          - description: >-
              The parameters used to automatically set up Amazon Elastic Block
              Store (Amazon EBS) volumes when the instance is launched. 
    type: object
  InstanceBlockDeviceMappingList:
    items:
      $ref: '#/definitions/InstanceBlockDeviceMapping'
    type: array
  InstanceIdsList:
    items:
      $ref: '#/definitions/String'
    type: array
  InstanceState:
    description: The description of the current state of an instance.
    properties:
      code:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: >-
              <p>The state of the instance as a 16-bit unsigned integer. </p>
              <p>The high byte is all of the bits between 2^8 and (2^16)-1,
              which equals decimal values between 256 and 65,535. These
              numerical values are used for internal purposes and should be
              ignored. </p> <p>The low byte is all of the bits between 2^0 and
              (2^8)-1, which equals decimal values between 0 and 255. </p>
              <p>The valid values for the instance state code are all in the
              range of the low byte. These values are: </p> <ul> <li> <p>
              <code>0</code> : <code>pending</code> </p> </li> <li> <p>
              <code>16</code> : <code>running</code> </p> </li> <li> <p>
              <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p>
              <code>48</code> : <code>terminated</code> </p> </li> <li> <p>
              <code>64</code> : <code>stopping</code> </p> </li> <li> <p>
              <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You can
              ignore the high byte value by zeroing out all of the bits above
              2^8 or 256 in decimal. </p>
      name:
        allOf:
          - $ref: '#/definitions/InstanceStateName'
          - description: The current state of the instance.
    type: object
  InstanceStateName:
    enum:
      - PENDING
      - RUNNING
      - SHUTTING_DOWN
      - TERMINATED
      - STOPPING
      - STOPPED
    type: string
  InstanceSummary:
    description: The details about the instance.
    properties:
      instance:
        allOf:
          - $ref: '#/definitions/Instance'
          - description: A structure containing details about the instance.
      lastUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the instance summary was last updated.
    type: object
  InstanceSummaryList:
    items:
      $ref: '#/definitions/InstanceSummary'
    type: array
  Integer:
    type: integer
  InternalServerException: {}
  IpAddressAssignment:
    enum:
      - DHCP
      - STATIC
    type: string
  JobId:
    maxLength: 64
    minLength: 1
    type: string
  ListDeviceResourcesInput:
    properties: {}
    title: ListDeviceResourcesInput
    type: object
  ListDeviceResourcesInputTypeString:
    maxLength: 50
    minLength: 1
    type: string
  ListDeviceResourcesOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: A pagination token to continue to the next page of results.
      resources:
        allOf:
          - $ref: '#/definitions/ResourceSummaryList'
          - description: >-
              A structure defining the resource's type, Amazon Resource Name
              (ARN), and ID.
    type: object
  ListDevicesInput:
    properties: {}
    title: ListDevicesInput
    type: object
  ListDevicesOutput:
    properties:
      devices:
        allOf:
          - $ref: '#/definitions/DeviceSummaryList'
          - description: >-
              A list of device structures that contain information about the
              device.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: A pagination token to continue to the next page of devices.
    type: object
  ListExecutionsInput:
    properties: {}
    title: ListExecutionsInput
    type: object
  ListExecutionsOutput:
    properties:
      executions:
        allOf:
          - $ref: '#/definitions/ExecutionSummaryList'
          - description: >-
              A list of executions. Each execution contains the task ID, the
              device that the task is executing on, the execution ID, and the
              status of the execution.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: A pagination token to continue to the next page of executions.
    type: object
  ListTagsForResourceInput:
    properties: {}
    title: ListTagsForResourceInput
    type: object
  ListTagsForResourceOutput:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The list of tags for the device or task.
    type: object
  ListTasksInput:
    properties: {}
    title: ListTasksInput
    type: object
  ListTasksOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: A pagination token to continue to the next page of tasks.
      tasks:
        allOf:
          - $ref: '#/definitions/TaskSummaryList'
          - description: A list of task structures containing details about each task.
    type: object
  Long:
    type: integer
  ManagedDeviceId:
    maxLength: 64
    minLength: 1
    type: string
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  NextToken:
    maxLength: 1024
    minLength: 1
    pattern: '[a-zA-Z0-9+/=]*'
    type: string
  PhysicalConnectorType:
    enum:
      - RJ45
      - SFP_PLUS
      - QSFP
      - RJ45_2
      - WIFI
    type: string
  PhysicalNetworkInterface:
    description: The details about the physical network interface for the device.
    properties:
      defaultGateway:
        allOf:
          - $ref: '#/definitions/String'
          - description: The default gateway of the device.
      ipAddress:
        allOf:
          - $ref: '#/definitions/String'
          - description: The IP address of the device.
      ipAddressAssignment:
        allOf:
          - $ref: '#/definitions/IpAddressAssignment'
          - description: >-
              A value that describes whether the IP address is dynamic or
              persistent.
      macAddress:
        allOf:
          - $ref: '#/definitions/String'
          - description: The MAC address of the device.
      netmask:
        allOf:
          - $ref: '#/definitions/String'
          - description: The netmask used to divide the IP address into subnets.
      physicalConnectorType:
        allOf:
          - $ref: '#/definitions/PhysicalConnectorType'
          - description: The physical connector type.
      physicalNetworkInterfaceId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The physical network interface ID.
    type: object
  PhysicalNetworkInterfaceList:
    items:
      $ref: '#/definitions/PhysicalNetworkInterface'
    type: array
  Reboot:
    description: A structure used to reboot the device.
    properties: {}
    type: object
  ResourceNotFoundException: {}
  ResourceSummary:
    description: A summary of a resource available on the device.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the resource.
      id:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the resource.
      resourceType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The resource type.
    required:
      - resourceType
    type: object
  ResourceSummaryList:
    items:
      $ref: '#/definitions/ResourceSummary'
    type: array
  SecurityGroupIdentifier:
    description: Information about the device's security group.
    properties:
      groupId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The security group ID.
      groupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The security group name.
    type: object
  SecurityGroupIdentifierList:
    items:
      $ref: '#/definitions/SecurityGroupIdentifier'
    type: array
  ServiceQuotaExceededException: {}
  SoftwareInformation:
    description: Information about the software on the device.
    properties:
      installState:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The state of the software that is installed or that is being
              installed on the device.
      installedVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The version of the software currently installed on the device.
      installingVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The version of the software being installed on the device.
    type: object
  String:
    type: string
  TagKeys:
    items:
      $ref: '#/definitions/String'
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/String'
    type: object
  TagResourceInput:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment.
    required:
      - tags
    title: TagResourceInput
    type: object
  TargetList:
    items:
      $ref: '#/definitions/String'
    maxItems: 10
    minItems: 1
    type: array
  TaskDescriptionString:
    maxLength: 128
    minLength: 1
    pattern: '[A-Za-z0-9 _.,!#]*'
    type: string
  TaskId:
    maxLength: 64
    minLength: 1
    type: string
  TaskState:
    enum:
      - IN_PROGRESS
      - CANCELED
      - COMPLETED
    type: string
  TaskSummary:
    description: Information about the task assigned to one or many devices.
    properties:
      state:
        allOf:
          - $ref: '#/definitions/TaskState'
          - description: The state of the task assigned to one or many devices.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Optional metadata that you assign to a resource. You can use tags
              to categorize a resource in different ways, such as by purpose,
              owner, or environment.
      taskArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the task.
      taskId:
        allOf:
          - $ref: '#/definitions/TaskId'
          - description: The task ID.
    required:
      - taskId
    type: object
  TaskSummaryList:
    items:
      $ref: '#/definitions/TaskSummary'
    type: array
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  Unlock:
    description: A structure used to unlock a device.
    properties: {}
    type: object
  UnlockState:
    enum:
      - UNLOCKED
      - LOCKED
      - UNLOCKING
    type: string
  UntagResourceInput:
    properties: {}
    title: UntagResourceInput
    type: object
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/snow-device-management/'
host: snow-device-management.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: Amazon Web Services Snow Device Management documentation.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Snow Device Management
  version: '2021-08-04'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: snow-device-management
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/snow-device-management-2021-08-04.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: snow-device-management
paths:
  /executions#taskId:
    get:
      description: Returns the status of tasks for one or more target devices.
      operationId: ListExecutions
      parameters:
        - description: The maximum number of tasks to list per page.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A pagination token to continue to the next page of tasks.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[a-zA-Z0-9+/=]*'
          required: false
          type: string
        - description: A structure used to filter the tasks by their current state.
          enum:
            - QUEUED
            - IN_PROGRESS
            - CANCELED
            - FAILED
            - SUCCEEDED
            - REJECTED
            - TIMED_OUT
          in: query
          name: state
          required: false
          type: string
        - description: The ID of the task.
          in: query
          maxLength: 64
          minLength: 1
          name: taskId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListExecutionsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/managed-device/{managedDeviceId}/describe':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Checks device-specific information, such as the device type, software
        version, IP addresses, and lock status.
      operationId: DescribeDevice
      parameters:
        - description: The ID of the device that you are checking the information of.
          in: path
          maxLength: 64
          minLength: 1
          name: managedDeviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeviceOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/managed-device/{managedDeviceId}/resources':
    get:
      description: >-
        Returns a list of the Amazon Web Services resources available for a
        device. Currently, Amazon EC2 instances are the only supported resource
        type.
      operationId: ListDeviceResources
      parameters:
        - description: The ID of the managed device that you are listing the resources of.
          in: path
          maxLength: 64
          minLength: 1
          name: managedDeviceId
          required: true
          type: string
        - description: The maximum number of resources per page.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A pagination token to continue to the next page of results.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[a-zA-Z0-9+/=]*'
          required: false
          type: string
        - description: A structure used to filter the results by type of resource.
          in: query
          maxLength: 50
          minLength: 1
          name: type
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceResourcesOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/managed-device/{managedDeviceId}/resources/ec2/describe':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Checks the current state of the Amazon EC2 instances. The output is
        similar to <code>describeDevice</code>, but the results are sourced from
        the device cache in the Amazon Web Services Cloud and include a subset
        of the available fields. 
      operationId: DescribeDeviceEc2Instances
      parameters:
        - description: The ID of the managed device.
          in: path
          maxLength: 64
          minLength: 1
          name: managedDeviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              instanceIds:
                description: A list of instance IDs associated with the managed device.
                items:
                  $ref: '#/definitions/String'
                type: array
            required:
              - instanceIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeviceEc2Output'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /managed-devices:
    get:
      description: >-
        Returns a list of all devices on your Amazon Web Services account that
        have Amazon Web Services Snow Device Management enabled in the Amazon
        Web Services Region where the command is run.
      operationId: ListDevices
      parameters:
        - description: The ID of the job used to order the device.
          in: query
          maxLength: 64
          minLength: 1
          name: jobId
          required: false
          type: string
        - description: The maximum number of devices to list per page.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A pagination token to continue to the next page of results.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[a-zA-Z0-9+/=]*'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevicesOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{resourceArn}':
    get:
      description: Returns a list of tags for a managed device or task.
      operationId: ListTagsForResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the device or task.
          in: path
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds or replaces tags on a device or task.
      operationId: TagResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the device or task.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/String'
                description: >-
                  Optional metadata that you assign to a resource. You can use
                  tags to categorize a resource in different ways, such as by
                  purpose, owner, or environment.
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: Removes a tag from a device or task.
      operationId: UntagResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the device or task.
          in: path
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            Optional metadata that you assign to a resource. You can use tags to
            categorize a resource in different ways, such as by purpose, owner,
            or environment.
          in: query
          items:
            $ref: '#/definitions/String'
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /task:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Instructs one or more devices to start a task, such as unlocking or
        rebooting.
      operationId: CreateTask
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 64
                minLength: 1
                pattern: '[!-~]+'
                type: string
              command:
                description: The command given to the device to execute.
                properties:
                  reboot:
                    allOf:
                      - $ref: '#/definitions/Reboot'
                      - description: Reboots the device.
                  unlock:
                    allOf:
                      - $ref: '#/definitions/Unlock'
                      - description: Unlocks the device.
                type: object
              description:
                description: A description of the task and its targets.
                maxLength: 128
                minLength: 1
                pattern: '[A-Za-z0-9 _.,!#]*'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/String'
                description: >-
                  Optional metadata that you assign to a resource. You can use
                  tags to categorize a resource in different ways, such as by
                  purpose, owner, or environment. 
                type: object
              targets:
                description: A list of managed device IDs.
                items:
                  $ref: '#/definitions/String'
                maxItems: 10
                minItems: 1
                type: array
            required:
              - command
              - targets
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTaskOutput'
        '480':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/task/{taskId}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: 'Checks the metadata for a given task on a device. '
      operationId: DescribeTask
      parameters:
        - description: The ID of the task to be described.
          in: path
          maxLength: 64
          minLength: 1
          name: taskId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTaskOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/task/{taskId}/cancel':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        <p>Sends a cancel request for a specified task. You can cancel a task
        only if it's still in a <code>QUEUED</code> state. Tasks that are
        already running can't be cancelled.</p> <note> <p>A task might still run
        if it's processed from the queue before the <code>CancelTask</code>
        operation changes the task's state.</p> </note>
      operationId: CancelTask
      parameters:
        - description: >-
            The ID of the task that you are attempting to cancel. You can
            retrieve a task ID by using the <code>ListTasks</code> operation.
          in: path
          maxLength: 64
          minLength: 1
          name: taskId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelTaskOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/task/{taskId}/execution/{managedDeviceId}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Checks the status of a remote task running on one or more target
        devices.
      operationId: DescribeExecution
      parameters:
        - description: The ID of the managed device.
          in: path
          maxLength: 64
          minLength: 1
          name: managedDeviceId
          required: true
          type: string
        - description: The ID of the task that the action is describing.
          in: path
          maxLength: 64
          minLength: 1
          name: taskId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExecutionOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /tasks:
    get:
      description: Returns a list of tasks that can be filtered by state.
      operationId: ListTasks
      parameters:
        - description: The maximum number of tasks per page.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A pagination token to continue to the next page of tasks.
          in: query
          maxLength: 1024
          minLength: 1
          name: nextToken
          pattern: '[a-zA-Z0-9+/=]*'
          required: false
          type: string
        - description: A structure used to filter the list of tasks.
          enum:
            - IN_PROGRESS
            - CANCELED
            - COMPLETED
          in: query
          name: state
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTasksOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

