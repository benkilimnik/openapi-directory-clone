basePath: /
definitions:
  AccessDeniedException: {}
  Action:
    description: >-
      The action that starts at the beginning of an incident. The response plan
      defines the action.
    properties:
      ssmAutomation:
        allOf:
          - $ref: '#/definitions/SsmAutomation'
          - description: >-
              The Systems Manager automation document to start as the runbook at
              the beginning of the incident.
    type: object
  ActionsList:
    items:
      $ref: '#/definitions/Action'
    maxItems: 1
    minItems: 0
    type: array
  AddRegionAction:
    description: 'Defines the Region and KMS key to add to the replication set. '
    properties:
      regionName:
        allOf:
          - $ref: '#/definitions/RegionName'
          - description: The Region name to add to the replication set.
      sseKmsKeyId:
        allOf:
          - $ref: '#/definitions/SseKmsKey'
          - description: The KMS key ID to use to encrypt your replication set.
    required:
      - regionName
    type: object
  Arn:
    maxLength: 1000
    minLength: 0
    pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
    type: string
  AttributeValueList:
    description: Use the AttributeValueList to filter by string or integer values.
    properties:
      integerValues:
        allOf:
          - $ref: '#/definitions/IntegerList'
          - description: The list of integer values that the filter matches.
      stringValues:
        allOf:
          - $ref: '#/definitions/StringList'
          - description: The list of string values that the filter matches.
    type: object
  AutomationExecution:
    description: >-
      The Systems Manager automation document process to start as the runbook at
      the beginning of the incident.
    properties:
      ssmExecutionArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the automation process.
    type: object
  AutomationExecutionSet:
    items:
      $ref: '#/definitions/AutomationExecution'
    maxItems: 100
    minItems: 0
    type: array
  Boolean:
    type: boolean
  ChatChannel:
    description: The AWS Chatbot chat channel used for collaboration during an incident.
    properties:
      chatbotSns:
        allOf:
          - $ref: '#/definitions/ChatbotSnsConfigurationSet'
          - description: >-
              The SNS targets that AWS Chatbot uses to notify the chat channel
              of updates to an incident. You can also make updates to the
              incident through the chat channel by using the SNS topics. 
      empty:
        allOf:
          - $ref: '#/definitions/EmptyChatChannel'
          - description: >-
              Used to remove the chat channel from an incident record or
              response plan.
    type: object
  ChatbotSnsConfigurationSet:
    items:
      $ref: '#/definitions/SnsArn'
    maxItems: 5
    minItems: 1
    type: array
  ClientToken:
    maxLength: 128
    minLength: 0
    type: string
  Condition:
    description: >-
      A conditional statement with which to compare a value, after a timestamp,
      before a timestamp, or equal to a string or integer. If multiple
      conditions are specified, the conditionals become an <code>AND</code>ed
      statement. If multiple values are specified for a conditional, the values
      are <code>OR</code>d.
    properties:
      after:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: After the specified timestamp.
      before:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: Before the specified timestamp
      equals:
        allOf:
          - $ref: '#/definitions/AttributeValueList'
          - description: 'The value is equal to the provided string or integer. '
    type: object
  ConflictException: {}
  CreateReplicationSetInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      regions:
        allOf:
          - $ref: '#/definitions/RegionMapInput'
          - description: >-
              The Regions that Incident Manager replicates your data to. You can
              have up to three Regions in your replication set.
    required:
      - regions
    title: CreateReplicationSetInput
    type: object
  CreateReplicationSetOutput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: 'The Amazon Resource Name (ARN) of the replication set. '
    required:
      - arn
    type: object
  CreateResponsePlanInput:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ActionsList'
          - description: >-
              The actions that the response plan starts at the beginning of an
              incident.
      chatChannel:
        allOf:
          - $ref: '#/definitions/ChatChannel'
          - description: >-
              The AWS Chatbot chat channel used for collaboration during an
              incident.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      displayName:
        allOf:
          - $ref: '#/definitions/ResponsePlanDisplayName'
          - description: >-
              The long format of the response plan name. This field can contain
              spaces.
      engagements:
        allOf:
          - $ref: '#/definitions/EngagementSet'
          - description: >-
              The contacts and escalation plans that the response plan engages
              during an incident.
      incidentTemplate:
        allOf:
          - $ref: '#/definitions/IncidentTemplate'
          - description: Details used to create an incident when using this response plan.
      name:
        allOf:
          - $ref: '#/definitions/ResponsePlanName'
          - description: The short format name of the response plan. Can't include spaces.
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags that you are adding to the response plan.
    required:
      - incidentTemplate
      - name
    title: CreateResponsePlanInput
    type: object
  CreateResponsePlanOutput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the response plan.
    required:
      - arn
    type: object
  CreateTimelineEventInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      eventData:
        allOf:
          - $ref: '#/definitions/EventData'
          - description: >-
              A valid JSON string. There is no other schema imposed. A short
              description of the event.
      eventTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the event occurred.
      eventType:
        allOf:
          - $ref: '#/definitions/TimelineEventType'
          - description: >-
              The type of the event. You can create timeline events of type
              <code>Custom Event</code>.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident record you are
              adding the event to.
    required:
      - eventData
      - eventTime
      - eventType
      - incidentRecordArn
    title: CreateTimelineEventInput
    type: object
  CreateTimelineEventOutput:
    properties:
      eventId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: 'The ID of the event for easy reference later. '
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the incident record that you added the event to.
    required:
      - eventId
      - incidentRecordArn
    type: object
  DedupeString:
    maxLength: 1000
    minLength: 0
    type: string
  DeleteIncidentRecordInput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident record you are
              deleting.
    required:
      - arn
    title: DeleteIncidentRecordInput
    type: object
  DeleteIncidentRecordOutput:
    properties: {}
    type: object
  DeleteRegionAction:
    description: >-
      Defines the information about the Region you're deleting from your
      replication set.
    properties:
      regionName:
        allOf:
          - $ref: '#/definitions/RegionName'
          - description: The name of the Region you're deleting from the replication set.
    required:
      - regionName
    type: object
  DeleteReplicationSetInput:
    properties: {}
    title: DeleteReplicationSetInput
    type: object
  DeleteReplicationSetOutput:
    properties: {}
    type: object
  DeleteResourcePolicyInput:
    properties:
      policyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the resource policy you're deleting.
      resourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource you're deleting the
              policy from.
    required:
      - policyId
      - resourceArn
    title: DeleteResourcePolicyInput
    type: object
  DeleteResourcePolicyOutput:
    properties: {}
    type: object
  DeleteResponsePlanInput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the response plan.
    required:
      - arn
    title: DeleteResponsePlanInput
    type: object
  DeleteResponsePlanOutput:
    properties: {}
    type: object
  DeleteTimelineEventInput:
    properties:
      eventId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The ID of the event you are updating. You can find this by using
              <code>ListTimelineEvents</code>.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident that the event is
              part of.
    required:
      - eventId
      - incidentRecordArn
    title: DeleteTimelineEventInput
    type: object
  DeleteTimelineEventOutput:
    properties: {}
    type: object
  EmptyChatChannel:
    description: Used to remove the chat channel from an incident record or response plan.
    properties: {}
    type: object
  EngagementSet:
    items:
      $ref: '#/definitions/SsmContactsArn'
    maxItems: 5
    minItems: 0
    type: array
  EventData:
    maxLength: 6000
    minLength: 0
    type: string
  EventSummary:
    description: Details about a timeline event during an incident.
    properties:
      eventId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The timeline event ID.
      eventTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the event occurred.
      eventType:
        allOf:
          - $ref: '#/definitions/TimelineEventType'
          - description: >-
              The type of event. The timeline event must be <code>Custom
              Event</code>.
      eventUpdatedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the timeline event was last updated.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident that the event
              happened during.
    required:
      - eventId
      - eventTime
      - eventType
      - eventUpdatedTime
      - incidentRecordArn
    type: object
  EventSummaryList:
    items:
      $ref: '#/definitions/EventSummary'
    maxItems: 100
    minItems: 0
    type: array
  Filter:
    description: Filter the selection by using a condition.
    properties:
      condition:
        allOf:
          - $ref: '#/definitions/Condition'
          - description: >-
              The condition accepts before or after a specified time, equal to a
              string, or equal to an integer.
      key:
        allOf:
          - $ref: '#/definitions/FilterKeyString'
          - description: The key that you're filtering on.
    required:
      - condition
      - key
    type: object
  FilterKeyString:
    maxLength: 50
    minLength: 0
    type: string
  FilterList:
    items:
      $ref: '#/definitions/Filter'
    maxItems: 5
    minItems: 0
    type: array
  GetIncidentRecordInput:
    properties: {}
    title: GetIncidentRecordInput
    type: object
  GetIncidentRecordOutput:
    properties:
      incidentRecord:
        allOf:
          - $ref: '#/definitions/IncidentRecord'
          - description: Details structure of the incident record.
    required:
      - incidentRecord
    type: object
  GetReplicationSetInput:
    properties: {}
    title: GetReplicationSetInput
    type: object
  GetReplicationSetOutput:
    properties:
      replicationSet:
        allOf:
          - $ref: '#/definitions/ReplicationSet'
          - description: Details of the replication set.
    required:
      - replicationSet
    type: object
  GetResourcePoliciesInput:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of resource policies to display per page of
              results.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    title: GetResourcePoliciesInput
    type: object
  GetResourcePoliciesOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
      resourcePolicies:
        allOf:
          - $ref: '#/definitions/ResourcePolicyList'
          - description: Details about the resource policy attached to the response plan.
    required:
      - resourcePolicies
    type: object
  GetResponsePlanInput:
    properties: {}
    title: GetResponsePlanInput
    type: object
  GetResponsePlanOutput:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ActionsList'
          - description: >-
              The actions that this response plan takes at the beginning of the
              incident.
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the response plan.
      chatChannel:
        allOf:
          - $ref: '#/definitions/ChatChannel'
          - description: >-
              The AWS Chatbot chat channel used for collaboration during an
              incident.
      displayName:
        allOf:
          - $ref: '#/definitions/ResponsePlanDisplayName'
          - description: The long format name of the response plan. Can contain spaces.
      engagements:
        allOf:
          - $ref: '#/definitions/EngagementSet'
          - description: >-
              The contacts and escalation plans that the response plan engages
              during an incident.
      incidentTemplate:
        allOf:
          - $ref: '#/definitions/IncidentTemplate'
          - description: Details used to create the incident when using this response plan.
      name:
        allOf:
          - $ref: '#/definitions/ResponsePlanName'
          - description: The short format name of the response plan. Can't contain spaces.
    required:
      - arn
      - incidentTemplate
      - name
    type: object
  GetTimelineEventInput:
    properties: {}
    title: GetTimelineEventInput
    type: object
  GetTimelineEventOutput:
    properties:
      event:
        allOf:
          - $ref: '#/definitions/TimelineEvent'
          - description: Details about the timeline event.
    required:
      - event
    type: object
  Impact:
    maximum: 5
    minimum: 1
    type: integer
  IncidentRecord:
    description: The record of the incident that's created when an incident occurs.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the incident record.
      automationExecutions:
        allOf:
          - $ref: '#/definitions/AutomationExecutionSet'
          - description: >-
              The runbook, or automation document, that's run at the beginning
              of the incident.
      chatChannel:
        allOf:
          - $ref: '#/definitions/ChatChannel'
          - description: The chat channel used for collaboration during an incident.
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that Incident Manager created the incident record.
      dedupeString:
        allOf:
          - $ref: '#/definitions/DedupeString'
          - description: >-
              The string Incident Manager uses to prevent duplicate incidents
              from being created by the same incident.
      impact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: The impact of the incident on customers and applications.
      incidentRecordSource:
        allOf:
          - $ref: '#/definitions/IncidentRecordSource'
          - description: Details about the action that started the incident.
      lastModifiedBy:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: Who modified the incident most recently.
      lastModifiedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the incident was most recently modified.
      notificationTargets:
        allOf:
          - $ref: '#/definitions/NotificationTargetSet'
          - description: >-
              The SNS targets that are notified when updates are made to an
              incident.
      resolvedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time at which the incident was resolved. This appears as a
              timeline event.
      status:
        allOf:
          - $ref: '#/definitions/IncidentRecordStatus'
          - description: The current status of the incident.
      summary:
        allOf:
          - $ref: '#/definitions/IncidentSummary'
          - description: >-
              The summary of the incident. The summary is a brief synopsis of
              what occurred, what is currently happening, and context.
      title:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: The title of the incident.
    required:
      - arn
      - creationTime
      - dedupeString
      - impact
      - incidentRecordSource
      - lastModifiedBy
      - lastModifiedTime
      - status
      - title
    type: object
  IncidentRecordSource:
    description: Details about how the incident record was created and when.
    properties:
      createdBy:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The principal that started the incident.
      invokedBy:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The principal the assumed the role specified of the
              <code>createdBy</code>.
      resourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The resource that caused the incident to be created.
      source:
        allOf:
          - $ref: '#/definitions/IncidentSource'
          - description: >-
              The service that started the incident. This can be manually
              created from Incident Manager, automatically created using an AWS
              CloudWatch alarm, or Amazon EventBridge event.
    required:
      - createdBy
      - source
    type: object
  IncidentRecordStatus:
    enum:
      - OPEN
      - RESOLVED
    type: string
  IncidentRecordSummary:
    description: Details describing an incident record.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the incident.
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the incident was created.
      impact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: Defines the impact to customers and applications.
      incidentRecordSource:
        allOf:
          - $ref: '#/definitions/IncidentRecordSource'
          - description: What caused Incident Manager to create the incident.
      resolvedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the incident was resolved.
      status:
        allOf:
          - $ref: '#/definitions/IncidentRecordStatus'
          - description: The current status of the incident.
      title:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: >-
              The title of the incident. This value is either provided by the
              response plan or overwritten on creation.
    required:
      - arn
      - creationTime
      - impact
      - incidentRecordSource
      - status
      - title
    type: object
  IncidentRecordSummaryList:
    items:
      $ref: '#/definitions/IncidentRecordSummary'
    maxItems: 100
    minItems: 0
    type: array
  IncidentSource:
    maxLength: 50
    minLength: 0
    type: string
  IncidentSummary:
    maxLength: 4000
    minLength: 0
    type: string
  IncidentTemplate:
    description: >-
      Basic details used in creating a response plan. The response plan is then
      used to create an incident record.
    properties:
      dedupeString:
        allOf:
          - $ref: '#/definitions/DedupeString'
          - description: >-
              Used to stop Incident Manager from creating multiple incident
              records for the same incident. 
      impact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: 'The impact of the incident on your customers and applications. '
      notificationTargets:
        allOf:
          - $ref: '#/definitions/NotificationTargetSet'
          - description: >-
              The SNS targets that are notified when updates are made to an
              incident.
      summary:
        allOf:
          - $ref: '#/definitions/IncidentSummary'
          - description: >-
              The summary of the incident. The summary is a brief synopsis of
              what occurred, what's currently happening, and context.
      title:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: 'The title of the incident. '
    required:
      - impact
      - title
    type: object
  IncidentTitle:
    maxLength: 200
    minLength: 0
    type: string
  Integer:
    type: integer
  IntegerList:
    items:
      $ref: '#/definitions/Integer'
    maxItems: 100
    minItems: 0
    type: array
  InternalServerException: {}
  ItemIdentifier:
    description: Details and type of a related item.
    properties:
      type:
        allOf:
          - $ref: '#/definitions/ItemType'
          - description: >-
              <p>The type of related item. Incident Manager supports the
              following types:</p> <ul> <li> <p> <code>ANALYSIS</code> </p>
              </li> <li> <p> <code>INCIDENT</code> </p> </li> <li> <p>
              <code>METRIC</code> </p> </li> <li> <p> <code>PARENT</code> </p>
              </li> <li> <p> <code>ATTACHMENT</code> </p> </li> <li> <p>
              <code>OTHER</code> </p> </li> </ul>
      value:
        allOf:
          - $ref: '#/definitions/ItemValue'
          - description: Details about the related item.
    required:
      - type
      - value
    type: object
  ItemType:
    enum:
      - ANALYSIS
      - INCIDENT
      - METRIC
      - PARENT
      - ATTACHMENT
      - OTHER
    type: string
  ItemValue:
    description: Describes a related item.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the related item, if the related
              item is an Amazon resource.
      metricDefinition:
        allOf:
          - $ref: '#/definitions/MetricDefinition'
          - description: >-
              The metric definition, if the related item is a metric in
              CloudWatch.
      url:
        allOf:
          - $ref: '#/definitions/Url'
          - description: 'The URL, if the related item is a non-AWS resource.'
    type: object
  ListIncidentRecordsInput:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Filter the list of incident records you are searching through.
              You can filter on the following keys:</p> <ul> <li> <p>
              <code>creationTime</code> </p> </li> <li> <p> <code>impact</code>
              </p> </li> <li> <p> <code>status</code> </p> </li> <li> <p>
              <code>createdBy</code> </p> </li> </ul>
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results per page.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    title: ListIncidentRecordsInput
    type: object
  ListIncidentRecordsOutput:
    properties:
      incidentRecordSummaries:
        allOf:
          - $ref: '#/definitions/IncidentRecordSummaryList'
          - description: The details of each listed incident record.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    required:
      - incidentRecordSummaries
    type: object
  ListRelatedItemsInput:
    properties:
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident record that you are
              listing related items for.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of related items per page.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    required:
      - incidentRecordArn
    title: ListRelatedItemsInput
    type: object
  ListRelatedItemsOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
      relatedItems:
        allOf:
          - $ref: '#/definitions/RelatedItemList'
          - description: Details about each related item.
    required:
      - relatedItems
    type: object
  ListReplicationSetsInput:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: 'The maximum number of results per page. '
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    title: ListReplicationSetsInput
    type: object
  ListReplicationSetsOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
      replicationSetArns:
        allOf:
          - $ref: '#/definitions/ReplicationSetArnList'
          - description: The Amazon Resource Name (ARN) of the list replication set.
    required:
      - replicationSetArns
    type: object
  ListResponsePlansInput:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of response plans per page.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    title: ListResponsePlansInput
    type: object
  ListResponsePlansOutput:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
      responsePlanSummaries:
        allOf:
          - $ref: '#/definitions/ResponsePlanSummaryList'
          - description: Details of each response plan.
    required:
      - responsePlanSummaries
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags for the response plan.
    required:
      - tags
    type: object
  ListTimelineEventsInput:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: >-
              <p>Filters the timeline events based on the provided conditional
              values. You can filter timeline events using the following
              keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p>
              <code>eventType</code> </p> </li> </ul>
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident that the event is
              part of.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results per page.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/TimelineEventSort'
          - description: Sort by the specified key value pair.
      sortOrder:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              Sorts the order of timeline events by the value specified in the
              <code>sortBy</code> field.
    required:
      - incidentRecordArn
    title: ListTimelineEventsInput
    type: object
  ListTimelineEventsOutput:
    properties:
      eventSummaries:
        allOf:
          - $ref: '#/definitions/EventSummaryList'
          - description: Details about each event that occurred during the incident.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: The pagination token to continue to the next page of results.
    required:
      - eventSummaries
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MetricDefinition:
    maxLength: 4000
    minLength: 0
    type: string
  NextToken:
    maxLength: 1000
    minLength: 0
    type: string
  NotificationTargetItem:
    description: The SNS targets that are notified when updates are made to an incident.
    properties:
      snsTopicArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the SNS topic.
    type: object
  NotificationTargetSet:
    items:
      $ref: '#/definitions/NotificationTargetItem'
    maxItems: 10
    minItems: 0
    type: array
  Policy:
    maxLength: 4000
    minLength: 0
    type: string
  PolicyId:
    maxLength: 256
    minLength: 0
    type: string
  PutResourcePolicyInput:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: Details of the resource policy.
      resourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the response plan you're adding
              the resource policy to.
    required:
      - policy
      - resourceArn
    title: PutResourcePolicyInput
    type: object
  PutResourcePolicyOutput:
    properties:
      policyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the resource policy.
    required:
      - policyId
    type: object
  RawData:
    maxLength: 4000
    minLength: 0
    type: string
  RegionInfo:
    description: Information about a Region in your replication set.
    properties:
      sseKmsKeyId:
        allOf:
          - $ref: '#/definitions/SseKmsKey'
          - description: The ID of the KMS key used to encrypt the data in this Region.
      status:
        allOf:
          - $ref: '#/definitions/RegionStatus'
          - description: The status of the Region in the replication set.
      statusMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: Information displayed about the status of the Region.
      statusUpdateDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The most recent date and time that the Region's status was
              updated.
    required:
      - status
      - statusUpdateDateTime
    type: object
  RegionInfoMap:
    additionalProperties:
      $ref: '#/definitions/RegionInfo'
    type: object
  RegionMapInput:
    additionalProperties:
      $ref: '#/definitions/RegionMapInputValue'
    maxProperties: 3
    minProperties: 1
    type: object
  RegionMapInputValue:
    description: The mapping between a Region and the key that's used to encrypt the data.
    properties:
      sseKmsKeyId:
        allOf:
          - $ref: '#/definitions/SseKmsKey'
          - description: The KMS key used to encrypt the data in your replication set.
    type: object
  RegionName:
    maxLength: 20
    minLength: 0
    type: string
  RegionStatus:
    enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
    type: string
  RelatedItem:
    description: Resources that responders use to triage and mitigate the incident.
    properties:
      identifier:
        allOf:
          - $ref: '#/definitions/ItemIdentifier'
          - description: Details about the related item.
      title:
        allOf:
          - $ref: '#/definitions/RelatedItemTitleString'
          - description: The title of the related item.
    required:
      - identifier
    type: object
  RelatedItemList:
    items:
      $ref: '#/definitions/RelatedItem'
    maxItems: 100
    minItems: 0
    type: array
  RelatedItemTitleString:
    maxLength: 200
    minLength: 0
    type: string
  RelatedItemsUpdate:
    description: Details about the related item you're adding.
    properties:
      itemToAdd:
        allOf:
          - $ref: '#/definitions/RelatedItem'
          - description: Details about the related item you're adding.
      itemToRemove:
        allOf:
          - $ref: '#/definitions/ItemIdentifier'
          - description: Details about the related item you're deleting.
    type: object
  ReplicationSet:
    description: >-
      The set of Regions that your Incident Manager data will be replicated to
      and the KMS key used to encrypt the data. 
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the replication set.
      createdBy:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: Details about who created the replication set.
      createdTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the replication set was created.
      deletionProtected:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Determines if the replication set deletion protection is enabled
              or not. If deletion protection is enabled, you can't delete the
              last Region in the replication set. 
      lastModifiedBy:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: Who last modified the replication set.
      lastModifiedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: When the replication set was last updated.
      regionMap:
        allOf:
          - $ref: '#/definitions/RegionInfoMap'
          - description: >-
              The map between each Region in your replication set and the KMS
              key that is used to encrypt the data in that Region.
      status:
        allOf:
          - $ref: '#/definitions/ReplicationSetStatus'
          - description: >-
              The status of the replication set. If the replication set is still
              pending, you can't use Incident Manager functionality.
    required:
      - createdBy
      - createdTime
      - deletionProtected
      - lastModifiedBy
      - lastModifiedTime
      - regionMap
      - status
    type: object
  ReplicationSetArnList:
    items:
      $ref: '#/definitions/Arn'
    type: array
  ReplicationSetStatus:
    enum:
      - ACTIVE
      - CREATING
      - UPDATING
      - DELETING
      - FAILED
    type: string
  ResourceNotFoundException: {}
  ResourcePolicy:
    description: >-
      The resource policy that allows Incident Manager to perform actions on
      resources on your behalf.
    properties:
      policyDocument:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: The JSON blob that describes the policy.
      policyId:
        allOf:
          - $ref: '#/definitions/PolicyId'
          - description: The ID of the resource policy.
      ramResourceShareRegion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Region that policy allows resources to be used in.
    required:
      - policyDocument
      - policyId
      - ramResourceShareRegion
    type: object
  ResourcePolicyList:
    items:
      $ref: '#/definitions/ResourcePolicy'
    maxItems: 100
    minItems: 0
    type: array
  ResponsePlanDisplayName:
    maxLength: 200
    minLength: 0
    type: string
  ResponsePlanName:
    maxLength: 200
    minLength: 1
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  ResponsePlanSummary:
    description: Details of the response plan that are used when creating an incident.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the response plan.
      displayName:
        allOf:
          - $ref: '#/definitions/ResponsePlanDisplayName'
          - description: >-
              The human readable name of the response plan. This can include
              spaces.
      name:
        allOf:
          - $ref: '#/definitions/ResponsePlanName'
          - description: The name of the response plan. This can't include spaces.
    required:
      - arn
      - name
    type: object
  ResponsePlanSummaryList:
    items:
      $ref: '#/definitions/ResponsePlanSummary'
    maxItems: 100
    minItems: 0
    type: array
  RoleArn:
    maxLength: 1000
    minLength: 0
    pattern: '^arn:aws(-cn|-us-gov)?:iam::([0-9]{12})?:role/.+$'
    type: string
  ServiceQuotaExceededException: {}
  SnsArn:
    maxLength: 1000
    minLength: 0
    type: string
  SortOrder:
    enum:
      - ASCENDING
      - DESCENDING
    type: string
  SseKmsKey:
    maxLength: 2048
    minLength: 0
    type: string
  SsmAutomation:
    description: >-
      Details about the Systems Manager automation document that will be used as
      a runbook during an incident.
    properties:
      documentName:
        allOf:
          - $ref: '#/definitions/SsmAutomationDocumentNameString'
          - description: The automation document's name.
      documentVersion:
        allOf:
          - $ref: '#/definitions/SsmAutomationDocumentVersionString'
          - description: The automation document's version to use when running.
      parameters:
        allOf:
          - $ref: '#/definitions/SsmParameters'
          - description: >-
              The key-value pair parameters to use when running the automation
              document.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the role that the automation
              document will assume when running commands.
      targetAccount:
        allOf:
          - $ref: '#/definitions/SsmTargetAccount'
          - description: >-
              The account that the automation document will be run in. This can
              be in either the management account or an application account.
    required:
      - documentName
      - roleArn
    type: object
  SsmAutomationDocumentNameString:
    pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
    type: string
  SsmAutomationDocumentVersionString:
    maxLength: 128
    minLength: 0
    type: string
  SsmContactsArn:
    maxLength: 2048
    minLength: 0
    pattern: '^arn:[-\w+=/,.@]+:ssm-contacts:[-\w+=/,.@]*:[0-9]+:([\w+=/,.@:-]+)*$'
    type: string
  SsmParameterValues:
    items:
      $ref: '#/definitions/SsmParameterValuesMemberString'
    maxItems: 100
    minItems: 0
    type: array
  SsmParameterValuesMemberString:
    maxLength: 512
    minLength: 0
    type: string
  SsmParameters:
    additionalProperties:
      $ref: '#/definitions/SsmParameterValues'
    maxProperties: 200
    minProperties: 1
    type: object
  SsmParametersKeyString:
    maxLength: 50
    minLength: 1
    type: string
  SsmTargetAccount:
    enum:
      - RESPONSE_PLAN_OWNER_ACCOUNT
      - IMPACTED_ACCOUNT
    type: string
  StartIncidentInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      impact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: >-
              <p>Defines the impact to the customers. Providing an impact
              overwrites the impact provided by a response plan.</p> <p
              class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p>
              <code>1</code> - Critical impact, this typically relates to full
              application failure that impacts many to all customers. </p> </li>
              <li> <p> <code>2</code> - High impact, partial application failure
              with impact to many customers.</p> </li> <li> <p> <code>3</code> -
              Medium impact, the application is providing reduced service to
              customers.</p> </li> <li> <p> <code>4</code> - Low impact,
              customer might aren't impacted by the problem yet.</p> </li> <li>
              <p> <code>5</code> - No impact, customers aren't currently
              impacted but urgent action is needed to avoid impact.</p> </li>
              </ul>
      relatedItems:
        allOf:
          - $ref: '#/definitions/RelatedItemList'
          - description: >-
              Add related items to the incident for other responders to use.
              Related items are AWS resources, external links, or files uploaded
              to an S3 bucket. 
      responsePlanArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the response plan that
              pre-defines summary, chat channels, SNS topics, runbooks, title,
              and impact of the incident. 
      title:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: >-
              Provide a title for the incident. Providing a title overwrites the
              title provided by the response plan. 
      triggerDetails:
        allOf:
          - $ref: '#/definitions/TriggerDetails'
          - description: Details of what created the incident record in Incident Manager.
    required:
      - responsePlanArn
    title: StartIncidentInput
    type: object
  StartIncidentOutput:
    properties:
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the newly created incident record.
    required:
      - incidentRecordArn
    type: object
  String:
    type: string
  StringList:
    items:
      $ref: '#/definitions/StringListMemberString'
    maxItems: 100
    minItems: 0
    type: array
  StringListMemberString:
    maxLength: 1000
    minLength: 0
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[A-Za-z0-9 _=@:.+-/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags that you are adding to the response plan.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^[A-Za-z0-9 _=@:.+-/]*$'
    type: string
  ThrottlingException: {}
  TimelineEvent:
    description: 'A significant event that happened during the incident. '
    properties:
      eventData:
        allOf:
          - $ref: '#/definitions/EventData'
          - description: A short description of the event.
      eventId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the timeline event.
      eventTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the event occurred.
      eventType:
        allOf:
          - $ref: '#/definitions/TimelineEventType'
          - description: >-
              The type of event that occurred. Currently Incident Manager
              supports only the <code>Custom Event</code> type.
      eventUpdatedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the timeline event was last updated.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident that the event
              occurred during.
    required:
      - eventData
      - eventId
      - eventTime
      - eventType
      - eventUpdatedTime
      - incidentRecordArn
    type: object
  TimelineEventSort:
    enum:
      - EVENT_TIME
    type: string
  TimelineEventType:
    maxLength: 100
    minLength: 0
    type: string
  Timestamp:
    format: date-time
    type: string
  TriggerDetails:
    description: Details about what caused the incident to be created in Incident Manager.
    properties:
      rawData:
        allOf:
          - $ref: '#/definitions/RawData'
          - description: >-
              Raw data passed from either EventBridge, CloudWatch, or Incident
              Manager when an incident is created.
      source:
        allOf:
          - $ref: '#/definitions/IncidentSource'
          - description: >-
              Identifies the service that sourced the event. All events sourced
              from within AWS begin with "aws." Customer-generated events can
              have any value here, as long as it doesn't begin with "aws." We
              recommend the use of Java package-name style reverse domain-name
              strings. 
      timestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the incident was detected.
      triggerArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the source that detected the incident.
    required:
      - source
      - timestamp
    type: object
  UUID:
    maxLength: 50
    minLength: 0
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateDeletionProtectionInput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the replication set you're
              updating.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      deletionProtected:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Details if deletion protection is enabled or disabled in your
              account.
    required:
      - arn
      - deletionProtected
    title: UpdateDeletionProtectionInput
    type: object
  UpdateDeletionProtectionOutput:
    properties: {}
    type: object
  UpdateIncidentRecordInput:
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident record you are
              updating.
      chatChannel:
        allOf:
          - $ref: '#/definitions/ChatChannel'
          - description: The AWS Chatbot chat channel for responders to collaborate in.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      impact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: >-
              <p>Defines the impact to customers and applications. Providing an
              impact overwrites the impact provided by the response plan.</p> <p
              class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p>
              <code>1</code> - Critical impact, this typically relates to full
              application failure that impacts many to all customers. </p> </li>
              <li> <p> <code>2</code> - High impact, partial application failure
              with impact to many customers.</p> </li> <li> <p> <code>3</code> -
              Medium impact, the application is providing reduced service to
              customers.</p> </li> <li> <p> <code>4</code> - Low impact,
              customer might aren't impacted by the problem yet.</p> </li> <li>
              <p> <code>5</code> - No impact, customers aren't currently
              impacted but urgent action is needed to avoid impact.</p> </li>
              </ul>
      notificationTargets:
        allOf:
          - $ref: '#/definitions/NotificationTargetSet'
          - description: >-
              <p>The SNS targets that are notified when updates are made to an
              incident.</p> <p>Using multiple SNS topics creates redundancy in
              the case that a Region is down during the incident.</p>
      status:
        allOf:
          - $ref: '#/definitions/IncidentRecordStatus'
          - description: >-
              The status of the incident. An incident can be <code>Open</code>
              or <code>Resolved</code>.
      summary:
        allOf:
          - $ref: '#/definitions/IncidentSummary'
          - description: The summary describes what has happened during the incident.
      title:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: The title of the incident is a brief and easily recognizable.
    required:
      - arn
    title: UpdateIncidentRecordInput
    type: object
  UpdateIncidentRecordOutput:
    properties: {}
    type: object
  UpdateRelatedItemsInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident record you are
              updating related items in.
      relatedItemsUpdate:
        allOf:
          - $ref: '#/definitions/RelatedItemsUpdate'
          - description: Details about the item you are adding or deleting.
    required:
      - incidentRecordArn
      - relatedItemsUpdate
    title: UpdateRelatedItemsInput
    type: object
  UpdateRelatedItemsOutput:
    properties: {}
    type: object
  UpdateReplicationSetAction:
    description: Details used when updating the replication set.
    properties:
      addRegionAction:
        allOf:
          - $ref: '#/definitions/AddRegionAction'
          - description: >-
              Details about the Region that you're adding to the replication
              set.
      deleteRegionAction:
        allOf:
          - $ref: '#/definitions/DeleteRegionAction'
          - description: >-
              Details about the Region that you're deleting to the replication
              set.
    type: object
  UpdateReplicationSetInput:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/UpdateReplicationSetInputActionsList'
          - description: An action to add or delete a Region.
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the replication set you're
              updating.
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
    required:
      - actions
      - arn
    title: UpdateReplicationSetInput
    type: object
  UpdateReplicationSetInputActionsList:
    items:
      $ref: '#/definitions/UpdateReplicationSetAction'
    maxItems: 1
    minItems: 1
    type: array
  UpdateReplicationSetOutput:
    properties: {}
    type: object
  UpdateResponsePlanInput:
    properties:
      actions:
        allOf:
          - $ref: '#/definitions/ActionsList'
          - description: >-
              The actions that this response plan takes at the beginning of an
              incident.
      arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the response plan.
      chatChannel:
        allOf:
          - $ref: '#/definitions/ChatChannel'
          - description: >-
              <p>The AWS Chatbot chat channel used for collaboration during an
              incident.</p> <p>Use the empty structure to remove the chat
              channel from the response plan.</p>
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      displayName:
        allOf:
          - $ref: '#/definitions/ResponsePlanDisplayName'
          - description: The long format name of the response plan. Can't contain spaces.
      engagements:
        allOf:
          - $ref: '#/definitions/EngagementSet'
          - description: >-
              The contacts and escalation plans that Incident Manager engages at
              the start of the incident.
      incidentTemplateDedupeString:
        allOf:
          - $ref: '#/definitions/DedupeString'
          - description: Used to create only one incident record for an incident.
      incidentTemplateImpact:
        allOf:
          - $ref: '#/definitions/Impact'
          - description: >-
              <p>Defines the impact to the customers. Providing an impact
              overwrites the impact provided by a response plan.</p> <p
              class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p>
              <code>5</code> - Severe impact</p> </li> <li> <p> <code>4</code> -
              High impact</p> </li> <li> <p> <code>3</code> - Medium impact</p>
              </li> <li> <p> <code>2</code> - Low impact</p> </li> <li> <p>
              <code>1</code> - No impact</p> </li> </ul>
      incidentTemplateNotificationTargets:
        allOf:
          - $ref: '#/definitions/NotificationTargetSet'
          - description: >-
              The SNS targets that are notified when updates are made to an
              incident.
      incidentTemplateSummary:
        allOf:
          - $ref: '#/definitions/IncidentSummary'
          - description: >-
              A brief summary of the incident. This typically contains what has
              happened, what's currently happening, and next steps.
      incidentTemplateTitle:
        allOf:
          - $ref: '#/definitions/IncidentTitle'
          - description: The short format name of the incident. Can't contain spaces.
    required:
      - arn
    title: UpdateResponsePlanInput
    type: object
  UpdateResponsePlanOutput:
    properties: {}
    type: object
  UpdateTimelineEventInput:
    properties:
      clientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A token ensuring that the action is called only once with the
              specified details.
      eventData:
        allOf:
          - $ref: '#/definitions/EventData'
          - description: A short description of the event.
      eventId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: >-
              The ID of the event you are updating. You can find this by using
              <code>ListTimelineEvents</code>.
      eventTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the event occurred.
      eventType:
        allOf:
          - $ref: '#/definitions/TimelineEventType'
          - description: >-
              The type of the event. You can update events of type <code>Custom
              Event</code>.
      incidentRecordArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the incident that the timeline
              event is part of.
    required:
      - eventId
      - incidentRecordArn
    title: UpdateTimelineEventInput
    type: object
  UpdateTimelineEventOutput:
    properties: {}
    type: object
  Url:
    maxLength: 1000
    minLength: 0
    type: string
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ssm-incidents/'
host: ssm-incidents.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>AWS Systems Manager Incident Manager is an incident management console
    designed to help users mitigate and recover from incidents affecting their
    AWS-hosted applications. An incident is any unplanned interruption or
    reduction in quality of services. </p> <p>Incident Manager increases
    incident resolution by notifying responders of impact, highlighting relevant
    troubleshooting data, and providing collaboration tools to get services back
    up and running. To achieve the primary goal of reducing the
    time-to-resolution of critical incidents, Incident Manager automates
    response plans and enables responder team escalation. </p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Systems Manager Incident Manager
  version: '2018-05-10'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: ssm-incidents
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-incidents-2018-05-10.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: ssm-incidents
paths:
  /createReplicationSet:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        A replication set replicates and encrypts your data to the provided
        Regions with the provided KMS key. 
      operationId: CreateReplicationSet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              regions:
                additionalProperties:
                  $ref: '#/definitions/RegionMapInputValue'
                description: >-
                  The Regions that Incident Manager replicates your data to. You
                  can have up to three Regions in your replication set.
                maxProperties: 3
                minProperties: 1
                type: object
            required:
              - regions
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateReplicationSetOutput'
        '480':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /createResponsePlan:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a response plan that automates the initial response to
        incidents. A response plan engages contacts, starts chat channel
        collaboration, and initiates runbooks at the beginning of an incident.
      operationId: CreateResponsePlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                description: >-
                  The actions that the response plan starts at the beginning of
                  an incident.
                items:
                  $ref: '#/definitions/Action'
                maxItems: 1
                minItems: 0
                type: array
              chatChannel:
                description: >-
                  The AWS Chatbot chat channel used for collaboration during an
                  incident.
                properties:
                  chatbotSns:
                    allOf:
                      - $ref: '#/definitions/ChatbotSnsConfigurationSet'
                      - description: >-
                          The SNS targets that AWS Chatbot uses to notify the
                          chat channel of updates to an incident. You can also
                          make updates to the incident through the chat channel
                          by using the SNS topics. 
                  empty:
                    allOf:
                      - $ref: '#/definitions/EmptyChatChannel'
                      - description: >-
                          Used to remove the chat channel from an incident
                          record or response plan.
                type: object
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              displayName:
                description: >-
                  The long format of the response plan name. This field can
                  contain spaces.
                maxLength: 200
                minLength: 0
                type: string
              engagements:
                description: >-
                  The contacts and escalation plans that the response plan
                  engages during an incident.
                items:
                  $ref: '#/definitions/SsmContactsArn'
                maxItems: 5
                minItems: 0
                type: array
              incidentTemplate:
                description: >-
                  Basic details used in creating a response plan. The response
                  plan is then used to create an incident record.
                properties:
                  dedupeString:
                    allOf:
                      - $ref: '#/definitions/DedupeString'
                      - description: >-
                          Used to stop Incident Manager from creating multiple
                          incident records for the same incident. 
                  impact:
                    allOf:
                      - $ref: '#/definitions/Impact'
                      - description: >-
                          The impact of the incident on your customers and
                          applications. 
                  notificationTargets:
                    allOf:
                      - $ref: '#/definitions/NotificationTargetSet'
                      - description: >-
                          The SNS targets that are notified when updates are
                          made to an incident.
                  summary:
                    allOf:
                      - $ref: '#/definitions/IncidentSummary'
                      - description: >-
                          The summary of the incident. The summary is a brief
                          synopsis of what occurred, what's currently happening,
                          and context.
                  title:
                    allOf:
                      - $ref: '#/definitions/IncidentTitle'
                      - description: 'The title of the incident. '
                type: object
              name:
                description: >-
                  The short format name of the response plan. Can't include
                  spaces.
                maxLength: 200
                minLength: 1
                pattern: '^[a-zA-Z0-9-_]*$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: A list of tags that you are adding to the response plan.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - incidentTemplate
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateResponsePlanOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /createTimelineEvent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a custom timeline event on the incident details page of an
        incident record. Timeline events are automatically created by Incident
        Manager, marking key moment during an incident. You can create custom
        timeline events to mark important events that are automatically detected
        by Incident Manager.
      operationId: CreateTimelineEvent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              eventData:
                description: >-
                  A valid JSON string. There is no other schema imposed. A short
                  description of the event.
                maxLength: 6000
                minLength: 0
                type: string
              eventTime:
                description: The time that the event occurred.
                format: date-time
                type: string
              eventType:
                description: >-
                  The type of the event. You can create timeline events of type
                  <code>Custom Event</code>.
                maxLength: 100
                minLength: 0
                type: string
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident record you are
                  adding the event to.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - eventData
              - eventTime
              - eventType
              - incidentRecordArn
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateTimelineEventOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /deleteIncidentRecord:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Delete an incident record from Incident Manager. '
      operationId: DeleteIncidentRecord
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              arn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident record you are
                  deleting.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - arn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteIncidentRecordOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /deleteReplicationSet#arn:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Deletes all Regions in your replication set. Deleting the replication
        set deletes all Incident Manager data.
      operationId: DeleteReplicationSet
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the replication set you're
            deleting.
          in: query
          maxLength: 1000
          minLength: 0
          name: arn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReplicationSetOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /deleteResourcePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the resource policy that AWS Resource Access Manager uses to
        share your Incident Manager resource.
      operationId: DeleteResourcePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              policyId:
                description: The ID of the resource policy you're deleting.
                maxLength: 256
                minLength: 0
                type: string
              resourceArn:
                description: >-
                  The Amazon Resource Name (ARN) of the resource you're deleting
                  the policy from.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - policyId
              - resourceArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourcePolicyOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /deleteResponsePlan:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the specified response plan. Deleting a response plan stops all
        linked CloudWatch alarms and EventBridge events from creating an
        incident with this response plan.
      operationId: DeleteResponsePlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              arn:
                description: The Amazon Resource Name (ARN) of the response plan.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - arn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponsePlanOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /deleteTimelineEvent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes a timeline event from an incident.
      operationId: DeleteTimelineEvent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              eventId:
                description: >-
                  The ID of the event you are updating. You can find this by
                  using <code>ListTimelineEvents</code>.
                maxLength: 50
                minLength: 0
                type: string
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident that the event
                  is part of.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - eventId
              - incidentRecordArn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTimelineEventOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /getIncidentRecord#arn:
    get:
      description: Returns the details of the specified incident record.
      operationId: GetIncidentRecord
      parameters:
        - description: The Amazon Resource Name (ARN) of the incident record.
          in: query
          maxLength: 1000
          minLength: 0
          name: arn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIncidentRecordOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /getReplicationSet#arn:
    get:
      description: Retrieve your Incident Manager replication set.
      operationId: GetReplicationSet
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the replication set you want to
            retrieve.
          in: query
          maxLength: 1000
          minLength: 0
          name: arn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetReplicationSetOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /getResourcePolicies#resourceArn:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Retrieves the resource policies attached to the specified response plan.
      operationId: GetResourcePolicies
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the response plan with the
            attached resource policy. 
          in: query
          maxLength: 1000
          minLength: 0
          name: resourceArn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: >-
                  The maximum number of resource policies to display per page of
                  results.
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourcePoliciesOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /getResponsePlan#arn:
    get:
      description: Retrieves the details of the specified response plan.
      operationId: GetResponsePlan
      parameters:
        - description: The Amazon Resource Name (ARN) of the response plan.
          in: query
          maxLength: 1000
          minLength: 0
          name: arn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResponsePlanOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /getTimelineEvent#eventId&incidentRecordArn:
    get:
      description: Retrieves a timeline event based on its ID and incident record.
      operationId: GetTimelineEvent
      parameters:
        - description: >-
            The ID of the event. You can get an event's ID when you create it or
            by using <code>ListTimelineEvents</code>.
          in: query
          maxLength: 50
          minLength: 0
          name: eventId
          required: true
          type: string
        - description: >-
            The Amazon Resource Name (ARN) of the incident that the timeline
            event is part of.
          in: query
          maxLength: 1000
          minLength: 0
          name: incidentRecordArn
          pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTimelineEventOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /listIncidentRecords:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all incident records in your account. Use this command to retrieve
        the Amazon Resource Name (ARN) of the incident record you want to
        update. 
      operationId: ListIncidentRecords
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Filter the list of incident records you are searching
                  through. You can filter on the following keys:</p> <ul> <li>
                  <p> <code>creationTime</code> </p> </li> <li> <p>
                  <code>impact</code> </p> </li> <li> <p> <code>status</code>
                  </p> </li> <li> <p> <code>createdBy</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 5
                minItems: 0
                type: array
              maxResults:
                description: The maximum number of results per page.
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIncidentRecordsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /listRelatedItems:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: List all related items for an incident record.
      operationId: ListRelatedItems
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident record that you
                  are listing related items for.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              maxResults:
                description: The maximum number of related items per page.
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
            required:
              - incidentRecordArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRelatedItemsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /listReplicationSets:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Lists details about the replication set configured in your account. '
      operationId: ListReplicationSets
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: 'The maximum number of results per page. '
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListReplicationSetsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /listResponsePlans:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Lists all response plans in your account.
      operationId: ListResponsePlans
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: The maximum number of response plans per page.
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResponsePlansOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /listTimelineEvents:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Lists timeline events of the specified incident record.
      operationId: ListTimelineEvents
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  <p>Filters the timeline events based on the provided
                  conditional values. You can filter timeline events using the
                  following keys:</p> <ul> <li> <p> <code>eventTime</code> </p>
                  </li> <li> <p> <code>eventType</code> </p> </li> </ul>
                items:
                  $ref: '#/definitions/Filter'
                maxItems: 5
                minItems: 0
                type: array
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident that the event
                  is part of.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              maxResults:
                description: The maximum number of results per page.
                maximum: 100
                minimum: 1
                type: integer
              nextToken:
                description: The pagination token to continue to the next page of results.
                maxLength: 1000
                minLength: 0
                type: string
              sortBy:
                description: Sort by the specified key value pair.
                enum:
                  - EVENT_TIME
                type: string
              sortOrder:
                description: >-
                  Sorts the order of timeline events by the value specified in
                  the <code>sortBy</code> field.
                enum:
                  - ASCENDING
                  - DESCENDING
                type: string
            required:
              - incidentRecordArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTimelineEventsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /putResourcePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds a resource policy to the specified response plan.
      operationId: PutResourcePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              policy:
                description: Details of the resource policy.
                maxLength: 4000
                minLength: 0
                type: string
              resourceArn:
                description: >-
                  The Amazon Resource Name (ARN) of the response plan you're
                  adding the resource policy to.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - policy
              - resourceArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutResourcePolicyOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /startIncident:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Used to start an incident from CloudWatch alarms, EventBridge events, or
        manually. 
      operationId: StartIncident
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              impact:
                description: >-
                  <p>Defines the impact to the customers. Providing an impact
                  overwrites the impact provided by a response plan.</p> <p
                  class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p>
                  <code>1</code> - Critical impact, this typically relates to
                  full application failure that impacts many to all customers.
                  </p> </li> <li> <p> <code>2</code> - High impact, partial
                  application failure with impact to many customers.</p> </li>
                  <li> <p> <code>3</code> - Medium impact, the application is
                  providing reduced service to customers.</p> </li> <li> <p>
                  <code>4</code> - Low impact, customer might aren't impacted by
                  the problem yet.</p> </li> <li> <p> <code>5</code> - No
                  impact, customers aren't currently impacted but urgent action
                  is needed to avoid impact.</p> </li> </ul>
                maximum: 5
                minimum: 1
                type: integer
              relatedItems:
                description: >-
                  Add related items to the incident for other responders to use.
                  Related items are AWS resources, external links, or files
                  uploaded to an S3 bucket. 
                items:
                  $ref: '#/definitions/RelatedItem'
                maxItems: 100
                minItems: 0
                type: array
              responsePlanArn:
                description: >-
                  The Amazon Resource Name (ARN) of the response plan that
                  pre-defines summary, chat channels, SNS topics, runbooks,
                  title, and impact of the incident. 
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              title:
                description: >-
                  Provide a title for the incident. Providing a title overwrites
                  the title provided by the response plan. 
                maxLength: 200
                minLength: 0
                type: string
              triggerDetails:
                description: >-
                  Details about what caused the incident to be created in
                  Incident Manager.
                properties:
                  rawData:
                    allOf:
                      - $ref: '#/definitions/RawData'
                      - description: >-
                          Raw data passed from either EventBridge, CloudWatch,
                          or Incident Manager when an incident is created.
                  source:
                    allOf:
                      - $ref: '#/definitions/IncidentSource'
                      - description: >-
                          Identifies the service that sourced the event. All
                          events sourced from within AWS begin with "aws."
                          Customer-generated events can have any value here, as
                          long as it doesn't begin with "aws." We recommend the
                          use of Java package-name style reverse domain-name
                          strings. 
                  timestamp:
                    allOf:
                      - $ref: '#/definitions/Timestamp'
                      - description: The time that the incident was detected.
                  triggerArn:
                    allOf:
                      - $ref: '#/definitions/Arn'
                      - description: The ARN of the source that detected the incident.
                type: object
            required:
              - responsePlanArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartIncidentOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/tags/{resourceArn}':
    get:
      description: Lists the tags that are attached to the specified response plan.
      operationId: ListTagsForResource
      parameters:
        - description: The Amazon Resource Name (ARN) of the response plan.
          in: path
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds a tag to a response plan.
      operationId: TagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the response plan you're adding
            the tags to.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: A list of tags that you are adding to the response plan.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: Removes a tag from a resource.
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the response plan you're removing
            a tag from.
          in: path
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: The name of the tag you're removing from the response plan.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /updateDeletionProtection:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Update deletion protection to either allow or deny deletion of the final
        Region in a replication set.
      operationId: UpdateDeletionProtection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              arn:
                description: >-
                  The Amazon Resource Name (ARN) of the replication set you're
                  updating.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              deletionProtected:
                description: >-
                  Details if deletion protection is enabled or disabled in your
                  account.
                type: boolean
            required:
              - arn
              - deletionProtected
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDeletionProtectionOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /updateIncidentRecord:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Update the details of an incident record. You can use this action to
        update an incident record from the defined chat channel. For more
        information about using actions in chat channels, see <a
        href="https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact">Interacting
        through chat</a>.
      operationId: UpdateIncidentRecord
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              arn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident record you are
                  updating.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              chatChannel:
                description: >-
                  The AWS Chatbot chat channel used for collaboration during an
                  incident.
                properties:
                  chatbotSns:
                    allOf:
                      - $ref: '#/definitions/ChatbotSnsConfigurationSet'
                      - description: >-
                          The SNS targets that AWS Chatbot uses to notify the
                          chat channel of updates to an incident. You can also
                          make updates to the incident through the chat channel
                          by using the SNS topics. 
                  empty:
                    allOf:
                      - $ref: '#/definitions/EmptyChatChannel'
                      - description: >-
                          Used to remove the chat channel from an incident
                          record or response plan.
                type: object
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              impact:
                description: >-
                  <p>Defines the impact to customers and applications. Providing
                  an impact overwrites the impact provided by the response
                  plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul>
                  <li> <p> <code>1</code> - Critical impact, this typically
                  relates to full application failure that impacts many to all
                  customers. </p> </li> <li> <p> <code>2</code> - High impact,
                  partial application failure with impact to many customers.</p>
                  </li> <li> <p> <code>3</code> - Medium impact, the application
                  is providing reduced service to customers.</p> </li> <li> <p>
                  <code>4</code> - Low impact, customer might aren't impacted by
                  the problem yet.</p> </li> <li> <p> <code>5</code> - No
                  impact, customers aren't currently impacted but urgent action
                  is needed to avoid impact.</p> </li> </ul>
                maximum: 5
                minimum: 1
                type: integer
              notificationTargets:
                description: >-
                  <p>The SNS targets that are notified when updates are made to
                  an incident.</p> <p>Using multiple SNS topics creates
                  redundancy in the case that a Region is down during the
                  incident.</p>
                items:
                  $ref: '#/definitions/NotificationTargetItem'
                maxItems: 10
                minItems: 0
                type: array
              status:
                description: >-
                  The status of the incident. An incident can be
                  <code>Open</code> or <code>Resolved</code>.
                enum:
                  - OPEN
                  - RESOLVED
                type: string
              summary:
                description: The summary describes what has happened during the incident.
                maxLength: 4000
                minLength: 0
                type: string
              title:
                description: The title of the incident is a brief and easily recognizable.
                maxLength: 200
                minLength: 0
                type: string
            required:
              - arn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIncidentRecordOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /updateRelatedItems:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Add or remove related items from the related items tab of an incident
        record.
      operationId: UpdateRelatedItems
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident record you are
                  updating related items in.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              relatedItemsUpdate:
                description: Details about the related item you're adding.
                properties:
                  itemToAdd:
                    allOf:
                      - $ref: '#/definitions/RelatedItem'
                      - description: Details about the related item you're adding.
                  itemToRemove:
                    allOf:
                      - $ref: '#/definitions/ItemIdentifier'
                      - description: Details about the related item you're deleting.
                type: object
            required:
              - incidentRecordArn
              - relatedItemsUpdate
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRelatedItemsOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /updateReplicationSet:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Add or delete Regions from your replication set.
      operationId: UpdateReplicationSet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                description: An action to add or delete a Region.
                items:
                  $ref: '#/definitions/UpdateReplicationSetAction'
                maxItems: 1
                minItems: 1
                type: array
              arn:
                description: >-
                  The Amazon Resource Name (ARN) of the replication set you're
                  updating.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
            required:
              - actions
              - arn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateReplicationSetOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /updateResponsePlan:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Updates the specified response plan.
      operationId: UpdateResponsePlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                description: >-
                  The actions that this response plan takes at the beginning of
                  an incident.
                items:
                  $ref: '#/definitions/Action'
                maxItems: 1
                minItems: 0
                type: array
              arn:
                description: The Amazon Resource Name (ARN) of the response plan.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
              chatChannel:
                description: >-
                  The AWS Chatbot chat channel used for collaboration during an
                  incident.
                properties:
                  chatbotSns:
                    allOf:
                      - $ref: '#/definitions/ChatbotSnsConfigurationSet'
                      - description: >-
                          The SNS targets that AWS Chatbot uses to notify the
                          chat channel of updates to an incident. You can also
                          make updates to the incident through the chat channel
                          by using the SNS topics. 
                  empty:
                    allOf:
                      - $ref: '#/definitions/EmptyChatChannel'
                      - description: >-
                          Used to remove the chat channel from an incident
                          record or response plan.
                type: object
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              displayName:
                description: >-
                  The long format name of the response plan. Can't contain
                  spaces.
                maxLength: 200
                minLength: 0
                type: string
              engagements:
                description: >-
                  The contacts and escalation plans that Incident Manager
                  engages at the start of the incident.
                items:
                  $ref: '#/definitions/SsmContactsArn'
                maxItems: 5
                minItems: 0
                type: array
              incidentTemplateDedupeString:
                description: Used to create only one incident record for an incident.
                maxLength: 1000
                minLength: 0
                type: string
              incidentTemplateImpact:
                description: >-
                  <p>Defines the impact to the customers. Providing an impact
                  overwrites the impact provided by a response plan.</p> <p
                  class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p>
                  <code>5</code> - Severe impact</p> </li> <li> <p>
                  <code>4</code> - High impact</p> </li> <li> <p> <code>3</code>
                  - Medium impact</p> </li> <li> <p> <code>2</code> - Low
                  impact</p> </li> <li> <p> <code>1</code> - No impact</p> </li>
                  </ul>
                maximum: 5
                minimum: 1
                type: integer
              incidentTemplateNotificationTargets:
                description: >-
                  The SNS targets that are notified when updates are made to an
                  incident.
                items:
                  $ref: '#/definitions/NotificationTargetItem'
                maxItems: 10
                minItems: 0
                type: array
              incidentTemplateSummary:
                description: >-
                  A brief summary of the incident. This typically contains what
                  has happened, what's currently happening, and next steps.
                maxLength: 4000
                minLength: 0
                type: string
              incidentTemplateTitle:
                description: The short format name of the incident. Can't contain spaces.
                maxLength: 200
                minLength: 0
                type: string
            required:
              - arn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResponsePlanOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /updateTimelineEvent:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates a timeline event. You can update events of type <code>Custom
        Event</code>.
      operationId: UpdateTimelineEvent
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: >-
                  A token ensuring that the action is called only once with the
                  specified details.
                maxLength: 128
                minLength: 0
                type: string
              eventData:
                description: A short description of the event.
                maxLength: 6000
                minLength: 0
                type: string
              eventId:
                description: >-
                  The ID of the event you are updating. You can find this by
                  using <code>ListTimelineEvents</code>.
                maxLength: 50
                minLength: 0
                type: string
              eventTime:
                description: The time that the event occurred.
                format: date-time
                type: string
              eventType:
                description: >-
                  The type of the event. You can update events of type
                  <code>Custom Event</code>.
                maxLength: 100
                minLength: 0
                type: string
              incidentRecordArn:
                description: >-
                  The Amazon Resource Name (ARN) of the incident that the
                  timeline event is part of.
                maxLength: 1000
                minLength: 0
                pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                type: string
            required:
              - eventId
              - incidentRecordArn
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTimelineEventOutput'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

