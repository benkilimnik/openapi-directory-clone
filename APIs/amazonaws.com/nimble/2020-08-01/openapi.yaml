basePath: /
definitions:
  AcceptEulasRequest:
    description: A collection of EULA acceptances.
    properties:
      eulaIds:
        allOf:
          - $ref: '#/definitions/EulaIdList'
          - description: The EULA ID.
    title: AcceptEulasRequest
    type: object
  AcceptEulasResponse:
    properties:
      eulaAcceptances:
        allOf:
          - $ref: '#/definitions/EulaAcceptanceList'
          - description: A collection of EULA acceptances.
    type: object
  AccessDeniedException: {}
  ActiveDirectoryComputerAttribute:
    description: >-
      An LDAP attribute of an Active Directory computer account, in the form of
      a name:value pair.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryComputerAttributeName'
          - description: The name for the LDAP attribute.
      value:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryComputerAttributeValue'
          - description: The value for the LDAP attribute.
    type: object
  ActiveDirectoryComputerAttributeList:
    description: >-
      A collection of LDAP attributes to apply to Active Directory computer
      accounts that are created for streaming sessions.
    items:
      $ref: '#/definitions/ActiveDirectoryComputerAttribute'
    maxItems: 50
    type: array
  ActiveDirectoryComputerAttributeName:
    description: The name for the LDAP attribute.
    maxLength: 40
    minLength: 1
    type: string
  ActiveDirectoryComputerAttributeValue:
    description: The value for the LDAP attribute.
    maxLength: 64
    minLength: 1
    type: string
  ActiveDirectoryConfiguration:
    description: >-
      The configuration for a Microsoft Active Directory (Microsoft AD) studio
      resource.
    properties:
      computerAttributes:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryComputerAttributeList'
          - description: >-
              A collection of custom attributes for an Active Directory
              computer.
      directoryId:
        allOf:
          - $ref: '#/definitions/DirectoryId'
          - description: >-
              The directory ID of the Directory Service for Microsoft Active
              Directory to access using this studio component.
      organizationalUnitDistinguishedName:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryOrganizationalUnitDistinguishedName'
          - description: >-
              The distinguished name (DN) and organizational unit (OU) of an
              Active Directory computer.
    type: object
  ActiveDirectoryDnsIpAddress:
    type: string
  ActiveDirectoryDnsIpAddressList:
    description: ''
    items:
      $ref: '#/definitions/ActiveDirectoryDnsIpAddress'
    maxItems: 10
    type: array
  ActiveDirectoryOrganizationalUnitDistinguishedName:
    description: >-
      The fully-qualified distinguished name of the organizational unit to place
      the computer account in.
    maxLength: 2000
    minLength: 1
    type: string
  ClientToken:
    maxLength: 64
    minLength: 1
    type: string
  ComputeFarmConfiguration:
    description: >-
      The configuration for a render farm that is associated with a studio
      resource.
    properties:
      activeDirectoryUser:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of an Active Directory user that is used on ComputeFarm
              worker instances.
      endpoint:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The endpoint of the ComputeFarm that is accessed by the studio
              component resource.
    type: object
  ConflictException: {}
  CreateLaunchProfileRequest:
    description: A collection of launch profiles.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/LaunchProfileDescription'
          - description: The description.
      ec2SubnetIds:
        allOf:
          - $ref: '#/definitions/EC2SubnetIdList'
          - description: ''
      launchProfileProtocolVersions:
        allOf:
          - $ref: '#/definitions/LaunchProfileProtocolVersionList'
          - description: >-
              The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
      name:
        allOf:
          - $ref: '#/definitions/LaunchProfileName'
          - description: The name for the launch profile.
      streamConfiguration:
        allOf:
          - $ref: '#/definitions/StreamConfigurationCreate'
          - description: A configuration for a streaming session.
      studioComponentIds:
        allOf:
          - $ref: '#/definitions/LaunchProfileStudioComponentIdList'
          - description: >-
              Unique identifiers for a collection of studio components that can
              be used with this launch profile.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    required:
      - ec2SubnetIds
      - studioComponentIds
      - launchProfileProtocolVersions
      - name
      - streamConfiguration
    title: CreateLaunchProfileRequest
    type: object
  CreateLaunchProfileResponse:
    properties:
      launchProfile:
        allOf:
          - $ref: '#/definitions/LaunchProfile'
          - description: The launch profile.
    type: object
  CreateStreamingImageRequest:
    description: A collection of streaming images.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/StreamingImageDescription'
          - description: A human-readable description of the streaming image.
      ec2ImageId:
        allOf:
          - $ref: '#/definitions/EC2ImageId'
          - description: >-
              The ID of an EC2 machine image with which to create this streaming
              image.
      name:
        allOf:
          - $ref: '#/definitions/StreamingImageName'
          - description: A friendly name for a streaming image resource.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    required:
      - name
      - ec2ImageId
    title: CreateStreamingImageRequest
    type: object
  CreateStreamingImageResponse:
    properties:
      streamingImage:
        allOf:
          - $ref: '#/definitions/StreamingImage'
          - description: ''
    type: object
  CreateStreamingSessionRequest:
    description: A collection of streaming sessions.
    properties:
      ec2InstanceType:
        allOf:
          - $ref: '#/definitions/StreamingInstanceType'
          - description: The EC2 Instance type used for the streaming session.
      launchProfileId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The launch profile ID.
      ownedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that owns the streaming session.
      streamingImageId:
        allOf:
          - $ref: '#/definitions/StreamingImageId'
          - description: The ID of the streaming image.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    title: CreateStreamingSessionRequest
    type: object
  CreateStreamingSessionResponse:
    properties:
      session:
        allOf:
          - $ref: '#/definitions/StreamingSession'
          - description: The session.
    type: object
  CreateStreamingSessionStreamRequest:
    description: A list collection streams.
    properties:
      expirationInSeconds:
        allOf:
          - $ref: '#/definitions/StreamingSessionStreamExpirationInSeconds'
          - description: The expiration time in seconds.
    title: CreateStreamingSessionStreamRequest
    type: object
  CreateStreamingSessionStreamResponse:
    properties:
      stream:
        allOf:
          - $ref: '#/definitions/StreamingSessionStream'
          - description: The stream.
    type: object
  CreateStudioComponentRequest:
    description: The studio components.
    properties:
      configuration:
        allOf:
          - $ref: '#/definitions/StudioComponentConfiguration'
          - description: >-
              The configuration of the studio component, based on component
              type.
      description:
        allOf:
          - $ref: '#/definitions/StudioComponentDescription'
          - description: The description.
      ec2SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/StudioComponentSecurityGroupIdList'
          - description: >-
              The EC2 security groups that control access to the studio
              component.
      initializationScripts:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
      name:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: The name for the studio component.
      scriptParameters:
        allOf:
          - $ref: '#/definitions/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
      subtype:
        allOf:
          - $ref: '#/definitions/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      type:
        allOf:
          - $ref: '#/definitions/StudioComponentType'
          - description: The type of the studio component.
    required:
      - name
      - type
    title: CreateStudioComponentRequest
    type: object
  CreateStudioComponentResponse:
    properties:
      studioComponent:
        allOf:
          - $ref: '#/definitions/StudioComponent'
          - description: Information about the studio component.
    type: object
  CreateStudioRequest:
    description: A collection of studio resources.
    properties:
      adminRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that Studio Admins will assume when logging in to the
              Nimble Studio portal.
      displayName:
        allOf:
          - $ref: '#/definitions/StudioDisplayName'
          - description: A friendly name for the studio.
      studioEncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/StudioEncryptionConfiguration'
          - description: The studio encryption configuration.
      studioName:
        allOf:
          - $ref: '#/definitions/StudioName'
          - description: >-
              The studio name that is used in the URL of the Nimble Studio
              portal when accessed by Nimble Studio users.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      userRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that Studio Users will assume when logging in to the
              Nimble Studio portal.
    required:
      - displayName
      - studioName
      - userRoleArn
      - adminRoleArn
    title: CreateStudioRequest
    type: object
  CreateStudioResponse:
    properties:
      studio:
        allOf:
          - $ref: '#/definitions/Studio'
          - description: Information about a studio.
    type: object
  DeleteLaunchProfileMemberRequest:
    properties: {}
    title: DeleteLaunchProfileMemberRequest
    type: object
  DeleteLaunchProfileMemberResponse:
    properties: {}
    type: object
  DeleteLaunchProfileRequest:
    properties: {}
    title: DeleteLaunchProfileRequest
    type: object
  DeleteLaunchProfileResponse:
    properties:
      launchProfile:
        allOf:
          - $ref: '#/definitions/LaunchProfile'
          - description: The launch profile.
    type: object
  DeleteStreamingImageRequest:
    properties: {}
    title: DeleteStreamingImageRequest
    type: object
  DeleteStreamingImageResponse:
    properties:
      streamingImage:
        allOf:
          - $ref: '#/definitions/StreamingImage'
          - description: The streaming image.
    type: object
  DeleteStreamingSessionRequest:
    properties: {}
    title: DeleteStreamingSessionRequest
    type: object
  DeleteStreamingSessionResponse:
    properties:
      session:
        allOf:
          - $ref: '#/definitions/StreamingSession'
          - description: The session.
    type: object
  DeleteStudioComponentRequest:
    properties: {}
    title: DeleteStudioComponentRequest
    type: object
  DeleteStudioComponentResponse:
    properties:
      studioComponent:
        allOf:
          - $ref: '#/definitions/StudioComponent'
          - description: Information about the studio component.
    type: object
  DeleteStudioMemberRequest:
    properties: {}
    title: DeleteStudioMemberRequest
    type: object
  DeleteStudioMemberResponse:
    properties: {}
    type: object
  DeleteStudioRequest:
    properties: {}
    title: DeleteStudioRequest
    type: object
  DeleteStudioResponse:
    properties:
      studio:
        allOf:
          - $ref: '#/definitions/Studio'
          - description: Information about a studio.
    type: object
  DirectoryId:
    type: string
  EC2ImageId:
    description: ''
    pattern: '^ami-[0-9A-z]+$'
    type: string
  EC2SubnetId:
    type: string
  EC2SubnetIdList:
    description: ''
    items:
      $ref: '#/definitions/EC2SubnetId'
    maxItems: 6
    type: array
  Eula:
    description: Represents a EULA resource.
    properties:
      content:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The EULA content.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      eulaId:
        allOf:
          - $ref: '#/definitions/EulaId'
          - description: The EULA ID.
      name:
        allOf:
          - $ref: '#/definitions/EulaName'
          - description: The name for the EULA.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
    type: object
  EulaAcceptance:
    description: ''
    properties:
      acceptedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the EULA was
              accepted.
      acceptedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the person who accepted the EULA.
      accepteeId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the acceptee.
      eulaAcceptanceId:
        allOf:
          - $ref: '#/definitions/EulaAcceptanceId'
          - description: The EULA acceptance ID.
      eulaId:
        allOf:
          - $ref: '#/definitions/EulaId'
          - description: The EULA ID.
    type: object
  EulaAcceptanceId:
    description: The EULA acceptance ID.
    maxLength: 22
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  EulaAcceptanceList:
    description: ''
    items:
      $ref: '#/definitions/EulaAcceptance'
    type: array
  EulaId:
    description: Represents a EULA resource.
    maxLength: 22
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  EulaIdList:
    description: ''
    items:
      $ref: '#/definitions/__string'
    type: array
  EulaList:
    description: ''
    items:
      $ref: '#/definitions/Eula'
    type: array
  EulaName:
    maxLength: 64
    type: string
  GetEulaRequest:
    properties: {}
    title: GetEulaRequest
    type: object
  GetEulaResponse:
    properties:
      eula:
        allOf:
          - $ref: '#/definitions/Eula'
          - description: The EULA.
    type: object
  GetLaunchProfileDetailsRequest:
    properties: {}
    title: GetLaunchProfileDetailsRequest
    type: object
  GetLaunchProfileDetailsResponse:
    properties:
      launchProfile:
        allOf:
          - $ref: '#/definitions/LaunchProfile'
          - description: The launch profile.
      streamingImages:
        allOf:
          - $ref: '#/definitions/StreamingImageList'
          - description: A collection of streaming images.
      studioComponentSummaries:
        allOf:
          - $ref: '#/definitions/StudioComponentSummaryList'
          - description: A collection of studio component summaries.
    type: object
  GetLaunchProfileInitializationRequest:
    properties: {}
    title: GetLaunchProfileInitializationRequest
    type: object
  GetLaunchProfileInitializationResponse:
    properties:
      launchProfileInitialization:
        allOf:
          - $ref: '#/definitions/LaunchProfileInitialization'
          - description: The launch profile initialization.
    type: object
  GetLaunchProfileMemberRequest:
    properties: {}
    title: GetLaunchProfileMemberRequest
    type: object
  GetLaunchProfileMemberResponse:
    properties:
      member:
        allOf:
          - $ref: '#/definitions/LaunchProfileMembership'
          - description: The member.
    type: object
  GetLaunchProfileRequest:
    properties: {}
    title: GetLaunchProfileRequest
    type: object
  GetLaunchProfileResponse:
    properties:
      launchProfile:
        allOf:
          - $ref: '#/definitions/LaunchProfile'
          - description: The launch profile.
    type: object
  GetStreamingImageRequest:
    properties: {}
    title: GetStreamingImageRequest
    type: object
  GetStreamingImageResponse:
    properties:
      streamingImage:
        allOf:
          - $ref: '#/definitions/StreamingImage'
          - description: The streaming image.
    type: object
  GetStreamingSessionRequest:
    properties: {}
    title: GetStreamingSessionRequest
    type: object
  GetStreamingSessionResponse:
    properties:
      session:
        allOf:
          - $ref: '#/definitions/StreamingSession'
          - description: The session.
    type: object
  GetStreamingSessionStreamRequest:
    properties: {}
    title: GetStreamingSessionStreamRequest
    type: object
  GetStreamingSessionStreamResponse:
    properties:
      stream:
        allOf:
          - $ref: '#/definitions/StreamingSessionStream'
          - description: The stream.
    type: object
  GetStudioComponentRequest:
    properties: {}
    title: GetStudioComponentRequest
    type: object
  GetStudioComponentResponse:
    properties:
      studioComponent:
        allOf:
          - $ref: '#/definitions/StudioComponent'
          - description: Information about the studio component.
    type: object
  GetStudioMemberRequest:
    properties: {}
    title: GetStudioMemberRequest
    type: object
  GetStudioMemberResponse:
    properties:
      member:
        allOf:
          - $ref: '#/definitions/StudioMembership'
          - description: The member.
    type: object
  GetStudioRequest:
    properties: {}
    title: GetStudioRequest
    type: object
  GetStudioResponse:
    properties:
      studio:
        allOf:
          - $ref: '#/definitions/Studio'
          - description: Information about a studio.
    type: object
  InternalServerErrorException: {}
  LaunchProfile:
    description: ''
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the resource.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      createdBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that created the launch profile.
      description:
        allOf:
          - $ref: '#/definitions/LaunchProfileDescription'
          - description: A human-readable description of the launch profile.
      ec2SubnetIds:
        allOf:
          - $ref: '#/definitions/EC2SubnetIdList'
          - description: Unique identifiers for a collection of EC2 subnets.
      launchProfileId:
        allOf:
          - $ref: '#/definitions/LaunchProfileId'
          - description: The launch profile ID.
      launchProfileProtocolVersions:
        allOf:
          - $ref: '#/definitions/LaunchProfileProtocolVersionList'
          - description: >-
              The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
      name:
        allOf:
          - $ref: '#/definitions/LaunchProfileName'
          - description: A friendly name for the launch profile.
      state:
        allOf:
          - $ref: '#/definitions/LaunchProfileState'
          - description: The current state.
      statusCode:
        allOf:
          - $ref: '#/definitions/LaunchProfileStatusCode'
          - description: The status code.
      statusMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The status message for the launch profile.
      streamConfiguration:
        allOf:
          - $ref: '#/definitions/StreamConfiguration'
          - description: A configuration for a streaming session.
      studioComponentIds:
        allOf:
          - $ref: '#/definitions/LaunchProfileStudioComponentIdList'
          - description: >-
              Unique identifiers for a collection of studio components that can
              be used with this launch profile.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
      updatedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that most recently updated the resource.
    type: object
  LaunchProfileDescription:
    maxLength: 256
    type: string
  LaunchProfileId:
    maxLength: 22
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  LaunchProfileInitialization:
    description: ''
    properties:
      activeDirectory:
        allOf:
          - $ref: '#/definitions/LaunchProfileInitializationActiveDirectory'
          - description: A LaunchProfileInitializationActiveDirectory resource.
      ec2SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/LaunchProfileSecurityGroupIdList'
          - description: >-
              The EC2 security groups that control access to the studio
              component.
      launchProfileId:
        allOf:
          - $ref: '#/definitions/LaunchProfileId'
          - description: The launch profile ID.
      launchProfileProtocolVersion:
        allOf:
          - $ref: '#/definitions/LaunchProfileProtocolVersion'
          - description: >-
              The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
      launchPurpose:
        allOf:
          - $ref: '#/definitions/LaunchPurpose'
          - description: The launch purpose.
      name:
        allOf:
          - $ref: '#/definitions/LaunchProfileName'
          - description: The name for the launch profile.
      platform:
        allOf:
          - $ref: '#/definitions/LaunchProfilePlatform'
          - description: 'The platform of the launch platform, either WINDOWS or LINUX.'
      systemInitializationScripts:
        allOf:
          - $ref: '#/definitions/LaunchProfileInitializationScriptList'
          - description: The system initializtion scripts.
      userInitializationScripts:
        allOf:
          - $ref: '#/definitions/LaunchProfileInitializationScriptList'
          - description: The user initializtion scripts.
    type: object
  LaunchProfileInitializationActiveDirectory:
    description: ''
    properties:
      computerAttributes:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryComputerAttributeList'
          - description: >-
              A collection of custom attributes for an Active Directory
              computer.
      directoryId:
        allOf:
          - $ref: '#/definitions/DirectoryId'
          - description: >-
              The directory ID of the Directory Service for Microsoft Active
              Directory to access using this launch profile.
      directoryName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The directory name.
      dnsIpAddresses:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryDnsIpAddressList'
          - description: The DNS IP address.
      organizationalUnitDistinguishedName:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryOrganizationalUnitDistinguishedName'
          - description: The name for the organizational unit distinguished name.
      studioComponentId:
        allOf:
          - $ref: '#/definitions/StudioComponentId'
          - description: The unique identifier for a studio component resource.
      studioComponentName:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: The name for the studio component.
    type: object
  LaunchProfileInitializationScript:
    description: ''
    properties:
      script:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptContent'
          - description: The initialization script.
      studioComponentId:
        allOf:
          - $ref: '#/definitions/StudioComponentId'
          - description: The unique identifier for a studio component resource.
      studioComponentName:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: The name for the studio component.
    type: object
  LaunchProfileInitializationScriptList:
    description: ''
    items:
      $ref: '#/definitions/LaunchProfileInitializationScript'
    type: array
  LaunchProfileList:
    description: ''
    items:
      $ref: '#/definitions/LaunchProfile'
    type: array
  LaunchProfileMembership:
    description: ''
    properties:
      identityStoreId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the identity store.
      persona:
        allOf:
          - $ref: '#/definitions/LaunchProfilePersona'
          - description: The persona.
      principalId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The principal ID.
    type: object
  LaunchProfileMembershipList:
    description: ''
    items:
      $ref: '#/definitions/LaunchProfileMembership'
    maxItems: 20
    type: array
  LaunchProfileName:
    maxLength: 64
    type: string
  LaunchProfilePersona:
    description: ''
    enum:
      - USER
    type: string
  LaunchProfilePlatform:
    description: ''
    enum:
      - LINUX
      - WINDOWS
    type: string
  LaunchProfileProtocolVersion:
    description: >-
      The version number of the protocol that is used by the launch profile. The
      only valid version is "2021-03-31".
    maxLength: 10
    pattern: ^2021\-03\-31$
    type: string
  LaunchProfileProtocolVersionList:
    description: ''
    items:
      $ref: '#/definitions/LaunchProfileProtocolVersion'
    type: array
  LaunchProfileSecurityGroupIdList:
    description: ''
    items:
      $ref: '#/definitions/SecurityGroupId'
    minItems: 1
    type: array
  LaunchProfileState:
    description: ''
    enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
    type: string
  LaunchProfileStatusCode:
    description: ''
    enum:
      - LAUNCH_PROFILE_CREATED
      - LAUNCH_PROFILE_UPDATED
      - LAUNCH_PROFILE_DELETED
      - LAUNCH_PROFILE_CREATE_IN_PROGRESS
      - LAUNCH_PROFILE_UPDATE_IN_PROGRESS
      - LAUNCH_PROFILE_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
      - STREAMING_IMAGE_NOT_FOUND
      - STREAMING_IMAGE_NOT_READY
      - LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED
      - ENCRYPTION_KEY_ACCESS_DENIED
      - ENCRYPTION_KEY_NOT_FOUND
      - INVALID_SUBNETS_PROVIDED
    type: string
  LaunchProfileStudioComponentIdList:
    description: ''
    items:
      $ref: '#/definitions/__string'
    maxItems: 100
    minItems: 1
    type: array
  LaunchPurpose:
    description: The launch purpose.
    maxLength: 64
    pattern: '^[A-Z0-9_]+$'
    type: string
  LicenseServiceConfiguration:
    description: >-
      The configuration for a license service that is associated with a studio
      resource.
    properties:
      endpoint:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The endpoint of the license service that is accessed by the studio
              component resource.
    type: object
  LinuxMountPoint:
    description: ''
    maxLength: 128
    pattern: '^(/?|(\$HOME)?(/[^/\n\s\\]+)*)$'
    type: string
  ListEulaAcceptancesRequest:
    properties: {}
    title: ListEulaAcceptancesRequest
    type: object
  ListEulaAcceptancesResponse:
    properties:
      eulaAcceptances:
        allOf:
          - $ref: '#/definitions/EulaAcceptanceList'
          - description: A collection of EULA acceptances.
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
    type: object
  ListEulasRequest:
    properties: {}
    title: ListEulasRequest
    type: object
  ListEulasResponse:
    properties:
      eulas:
        allOf:
          - $ref: '#/definitions/EulaList'
          - description: A collection of EULA resources.
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
    type: object
  ListLaunchProfileMembersRequest:
    properties: {}
    title: ListLaunchProfileMembersRequest
    type: object
  ListLaunchProfileMembersResponse:
    properties:
      members:
        allOf:
          - $ref: '#/definitions/LaunchProfileMembershipList'
          - description: A list of members.
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
    type: object
  ListLaunchProfilesRequest:
    properties: {}
    title: ListLaunchProfilesRequest
    type: object
  ListLaunchProfilesResponse:
    properties:
      launchProfiles:
        allOf:
          - $ref: '#/definitions/LaunchProfileList'
          - description: A collection of launch profiles.
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
    type: object
  ListStreamingImagesRequest:
    properties: {}
    title: ListStreamingImagesRequest
    type: object
  ListStreamingImagesResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
      streamingImages:
        allOf:
          - $ref: '#/definitions/StreamingImageList'
          - description: A collection of streaming images.
    type: object
  ListStreamingSessionsRequest:
    properties: {}
    title: ListStreamingSessionsRequest
    type: object
  ListStreamingSessionsResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
      sessions:
        allOf:
          - $ref: '#/definitions/StreamingSessionList'
          - description: A collection of streaming sessions.
    type: object
  ListStudioComponentsRequest:
    properties: {}
    title: ListStudioComponentsRequest
    type: object
  ListStudioComponentsResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
      studioComponents:
        allOf:
          - $ref: '#/definitions/StudioComponentList'
          - description: A collection of studio components.
    type: object
  ListStudioMembersRequest:
    properties: {}
    title: ListStudioMembersRequest
    type: object
  ListStudioMembersResponse:
    properties:
      members:
        allOf:
          - $ref: '#/definitions/StudioMembershipList'
          - description: A list of members.
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
    type: object
  ListStudiosRequest:
    properties: {}
    title: ListStudiosRequest
    type: object
  ListStudiosResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The token for the next set of results, or null if there are no
              more results.
      studios:
        allOf:
          - $ref: '#/definitions/StudioList'
          - description: A collection of studios.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  NewLaunchProfileMember:
    description: ''
    properties:
      persona:
        allOf:
          - $ref: '#/definitions/LaunchProfilePersona'
          - description: The persona.
      principalId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The principal ID.
    required:
      - persona
      - principalId
    type: object
  NewLaunchProfileMemberList:
    description: ''
    items:
      $ref: '#/definitions/NewLaunchProfileMember'
    maxItems: 20
    minItems: 1
    type: array
  NewStudioMember:
    description: ''
    properties:
      persona:
        allOf:
          - $ref: '#/definitions/StudioPersona'
          - description: The persona.
      principalId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The principal ID.
    required:
      - persona
      - principalId
    type: object
  NewStudioMemberList:
    description: ''
    items:
      $ref: '#/definitions/NewStudioMember'
    maxItems: 20
    minItems: 1
    type: array
  PutLaunchProfileMembersRequest:
    description: Information about a launch profile membership.
    properties:
      identityStoreId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the identity store.
      members:
        allOf:
          - $ref: '#/definitions/NewLaunchProfileMemberList'
          - description: A list of members.
    required:
      - members
      - identityStoreId
    title: PutLaunchProfileMembersRequest
    type: object
  PutLaunchProfileMembersResponse:
    properties: {}
    type: object
  PutStudioMembersRequest:
    description: A launch profile membership collection.
    properties:
      identityStoreId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the identity store.
      members:
        allOf:
          - $ref: '#/definitions/NewStudioMemberList'
          - description: A list of members.
    required:
      - members
      - identityStoreId
    title: PutStudioMembersRequest
    type: object
  PutStudioMembersResponse:
    properties: {}
    type: object
  Region:
    description: ''
    maxLength: 50
    pattern: '[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]'
    type: string
  ResourceNotFoundException: {}
  ScriptParameterKey:
    description: A script parameter key.
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z_][a-zA-Z0-9_]+$'
    type: string
  ScriptParameterKeyValue:
    description: >-
      A parameter for a studio component script, in the form of a key:value
      pair.
    properties:
      key:
        allOf:
          - $ref: '#/definitions/ScriptParameterKey'
          - description: A script parameter key.
      value:
        allOf:
          - $ref: '#/definitions/ScriptParameterValue'
          - description: A script parameter value.
    type: object
  ScriptParameterValue:
    description: A script parameter value.
    maxLength: 256
    minLength: 1
    type: string
  SecurityGroupId:
    description: ''
    type: string
  ServiceQuotaExceededException: {}
  SharedFileSystemConfiguration:
    description: >-
      The configuration for a shared file storage system that is associated with
      a studio resource.
    properties:
      endpoint:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The endpoint of the shared file system that is accessed by the
              studio component resource.
      fileSystemId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The unique identifier for a file system.
      linuxMountPoint:
        allOf:
          - $ref: '#/definitions/LinuxMountPoint'
          - description: >-
              The mount location for a shared file system on a Linux virtual
              workstation.
      shareName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the file share.
      windowsMountDrive:
        allOf:
          - $ref: '#/definitions/WindowsMountDrive'
          - description: >-
              The mount location for a shared file system on a Windows virtual
              workstation.
    type: object
  StartStudioSSOConfigurationRepairRequest:
    properties: {}
    title: StartStudioSSOConfigurationRepairRequest
    type: object
  StartStudioSSOConfigurationRepairResponse:
    properties:
      studio:
        allOf:
          - $ref: '#/definitions/Studio'
          - description: Information about a studio.
    type: object
  StreamConfiguration:
    description: A configuration for a streaming session.
    properties:
      clipboardMode:
        allOf:
          - $ref: '#/definitions/StreamingClipboardMode'
          - description: >-
              Enable or disable the use of the system clipboard to copy and
              paste between the streaming session and streaming client.
      ec2InstanceTypes:
        allOf:
          - $ref: '#/definitions/StreamingInstanceTypeList'
          - description: >-
              The EC2 instance types that users can select from when launching a
              streaming session with this launch profile.
      maxSessionLengthInMinutes:
        allOf:
          - $ref: '#/definitions/StreamConfigurationMaxSessionLengthInMinutes'
          - description: >-
              The length of time, in minutes, that a streaming session can run.
              After this point, Nimble Studio automatically terminates the
              session.
      streamingImageIds:
        allOf:
          - $ref: '#/definitions/StreamingImageIdList'
          - description: >-
              The streaming images that users can select from when launching a
              streaming session with this launch profile.
    type: object
  StreamConfigurationCreate:
    description: ''
    properties:
      clipboardMode:
        allOf:
          - $ref: '#/definitions/StreamingClipboardMode'
          - description: >-
              Enable or disable the use of the system clipboard to copy and
              paste between the streaming session and streaming client.
      ec2InstanceTypes:
        allOf:
          - $ref: '#/definitions/StreamingInstanceTypeList'
          - description: >-
              The EC2 instance types that users can select from when launching a
              streaming session with this launch profile.
      maxSessionLengthInMinutes:
        allOf:
          - $ref: '#/definitions/StreamConfigurationMaxSessionLengthInMinutes'
          - description: >-
              The length of time, in minutes, that a streaming session can run.
              After this point, Nimble Studio automatically terminates the
              session.
      streamingImageIds:
        allOf:
          - $ref: '#/definitions/StreamingImageIdList'
          - description: >-
              The streaming images that users can select from when launching a
              streaming session with this launch profile.
    required:
      - clipboardMode
      - streamingImageIds
      - ec2InstanceTypes
    type: object
  StreamConfigurationMaxSessionLengthInMinutes:
    description: ''
    maximum: 690
    minimum: 1
    type: integer
  StreamingClipboardMode:
    description: ''
    enum:
      - ENABLED
      - DISABLED
    type: string
  StreamingImage:
    description: ''
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the resource.
      description:
        allOf:
          - $ref: '#/definitions/StreamingImageDescription'
          - description: A human-readable description of the streaming image.
      ec2ImageId:
        allOf:
          - $ref: '#/definitions/EC2ImageId'
          - description: >-
              The ID of an EC2 machine image with which to create the streaming
              image.
      encryptionConfiguration:
        allOf:
          - $ref: '#/definitions/StreamingImageEncryptionConfiguration'
          - description: The encryption configuration.
      eulaIds:
        allOf:
          - $ref: '#/definitions/EulaIdList'
          - description: >-
              The list of EULAs that must be accepted before a Streaming Session
              can be started using this streaming image.
      name:
        allOf:
          - $ref: '#/definitions/StreamingImageName'
          - description: A friendly name for a streaming image resource.
      owner:
        allOf:
          - $ref: '#/definitions/StreamingImageOwner'
          - description: >-
              The owner of the streaming image, either the studioId that
              contains the streaming image, or 'amazon' for images that are
              provided by Amazon Nimble Studio.
      platform:
        allOf:
          - $ref: '#/definitions/StreamingImagePlatform'
          - description: 'The platform of the streaming image, either WINDOWS or LINUX.'
      state:
        allOf:
          - $ref: '#/definitions/StreamingImageState'
          - description: The current state.
      statusCode:
        allOf:
          - $ref: '#/definitions/StreamingImageStatusCode'
          - description: The status code.
      statusMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The status message for the streaming image.
      streamingImageId:
        allOf:
          - $ref: '#/definitions/StreamingImageId'
          - description: The ID of the streaming image.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    type: object
  StreamingImageDescription:
    description: The description.
    maxLength: 256
    type: string
  StreamingImageEncryptionConfiguration:
    description: ''
    properties:
      keyArn:
        allOf:
          - $ref: '#/definitions/StreamingImageEncryptionConfigurationKeyArn'
          - description: The ARN for a KMS key that is used to encrypt studio data.
      keyType:
        allOf:
          - $ref: '#/definitions/StreamingImageEncryptionConfigurationKeyType'
          - description: The type of KMS key that is used to encrypt studio data.
    required:
      - keyType
    type: object
  StreamingImageEncryptionConfigurationKeyArn:
    description: ''
    minLength: 4
    pattern: '^arn:.*'
    type: string
  StreamingImageEncryptionConfigurationKeyType:
    description: ''
    enum:
      - CUSTOMER_MANAGED_KEY
    type: string
  StreamingImageId:
    description: ''
    maxLength: 22
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  StreamingImageIdList:
    description: >-
      A list of streaming image IDs that users can select from when launching a
      streaming session with this launch profile.
    items:
      $ref: '#/definitions/StreamingImageId'
    maxItems: 20
    type: array
  StreamingImageList:
    description: ''
    items:
      $ref: '#/definitions/StreamingImage'
    type: array
  StreamingImageName:
    description: A friendly name for a streaming image resource.
    maxLength: 64
    type: string
  StreamingImageOwner:
    description: >-
      <p>StreamingImageOwner is the owner of a particular streaming image.</p>
      <p>This string is either the studioId that contains the streaming image,
      or the word 'AMAZON' for images provided by Nimble Studio.</p>
    type: string
  StreamingImagePlatform:
    description: 'The platform of this Streaming Image, either WINDOWS or LINUX.'
    pattern: '^[a-zA-Z]*$'
    type: string
  StreamingImageState:
    description: ''
    enum:
      - CREATE_IN_PROGRESS
      - READY
      - DELETE_IN_PROGRESS
      - DELETED
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
      - CREATE_FAILED
      - DELETE_FAILED
    type: string
  StreamingImageStatusCode:
    description: The status code.
    enum:
      - STREAMING_IMAGE_CREATE_IN_PROGRESS
      - STREAMING_IMAGE_READY
      - STREAMING_IMAGE_DELETE_IN_PROGRESS
      - STREAMING_IMAGE_DELETED
      - STREAMING_IMAGE_UPDATE_IN_PROGRESS
      - INTERNAL_ERROR
    type: string
  StreamingInstanceType:
    description: ''
    enum:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
    type: string
  StreamingInstanceTypeList:
    description: >-
      The EC2 instance types that users can select from when launching a
      streaming session with this launch profile.
    items:
      $ref: '#/definitions/StreamingInstanceType'
    maxItems: 30
    minItems: 1
    type: array
  StreamingSession:
    description: ''
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the resource.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      createdBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that created the streaming session.
      ec2InstanceType:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The EC2 Instance type used for the streaming session.
      launchProfileId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The ID of the launch profile used to control access from the
              streaming session.
      ownedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that owns the streaming session.
      sessionId:
        allOf:
          - $ref: '#/definitions/StreamingSessionId'
          - description: The session ID.
      state:
        allOf:
          - $ref: '#/definitions/StreamingSessionState'
          - description: The current state.
      statusCode:
        allOf:
          - $ref: '#/definitions/StreamingSessionStatusCode'
          - description: The status code.
      statusMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The status message for the streaming session.
      streamingImageId:
        allOf:
          - $ref: '#/definitions/StreamingImageId'
          - description: The ID of the streaming image.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      terminateAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time the streaming session will automatically terminate if not
              terminated by the user.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
      updatedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that most recently updated the resource.
    type: object
  StreamingSessionId:
    type: string
  StreamingSessionList:
    description: ''
    items:
      $ref: '#/definitions/StreamingSession'
    type: array
  StreamingSessionState:
    description: The streaming session state.
    enum:
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - READY
      - DELETED
      - CREATE_FAILED
      - DELETE_FAILED
    type: string
  StreamingSessionStatusCode:
    description: ''
    enum:
      - STREAMING_SESSION_READY
      - STREAMING_SESSION_DELETED
      - STREAMING_SESSION_CREATE_IN_PROGRESS
      - STREAMING_SESSION_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
      - INSUFFICIENT_CAPACITY
      - ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR
      - NETWORK_CONNECTION_ERROR
      - INITIALIZATION_SCRIPT_ERROR
      - DECRYPT_STREAMING_IMAGE_ERROR
      - NETWORK_INTERFACE_ERROR
    type: string
  StreamingSessionStream:
    description: ''
    properties:
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      createdBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that created the streaming session stream.
      expiresAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The Unix epoch timestamp in seconds for when the resource expires.
      ownedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that owns the streaming session.
      state:
        allOf:
          - $ref: '#/definitions/StreamingSessionStreamState'
          - description: The current state.
      statusCode:
        allOf:
          - $ref: '#/definitions/StreamingSessionStreamStatusCode'
          - description: The streaming session stream status code.
      streamId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The stream ID.
      url:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The URL to connect to this stream using the DCV client.
    type: object
  StreamingSessionStreamExpirationInSeconds:
    description: ''
    maximum: 3600
    minimum: 60
    type: integer
  StreamingSessionStreamState:
    description: ''
    enum:
      - READY
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - CREATE_FAILED
      - DELETE_FAILED
    type: string
  StreamingSessionStreamStatusCode:
    enum:
      - STREAM_CREATE_IN_PROGRESS
      - STREAM_READY
      - STREAM_DELETE_IN_PROGRESS
      - STREAM_DELETED
      - INTERNAL_ERROR
      - NETWORK_CONNECTION_ERROR
    type: string
  Studio:
    description: ''
    properties:
      adminRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that studio admins assume when logging in to the
              Nimble Studio portal.
      arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all
              Regions.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      displayName:
        allOf:
          - $ref: '#/definitions/StudioDisplayName'
          - description: A friendly name for the studio.
      homeRegion:
        allOf:
          - $ref: '#/definitions/Region'
          - description: >-
              The Amazon Web Services Region where the studio resource is
              located.
      ssoClientId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Web Services SSO application client ID used to
              integrate with Amazon Web Services SSO to enable Amazon Web
              Services SSO users to log in to Nimble portal.
      state:
        allOf:
          - $ref: '#/definitions/StudioState'
          - description: The current state of the studio resource.
      statusCode:
        allOf:
          - $ref: '#/definitions/StudioStatusCode'
          - description: Status codes that provide additional detail on the studio state.
      statusMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: Additional detail on the studio state.
      studioEncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/StudioEncryptionConfiguration'
          - description: >-
              Configuration of the encryption method that is used for the
              studio.
      studioId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The unique identifier for a studio resource. In Nimble Studio, all
              other resources are contained in a studio resource.
      studioName:
        allOf:
          - $ref: '#/definitions/StudioName'
          - description: >-
              The name of the studio, as included in the URL when accessing it
              in the Nimble Studio portal.
      studioUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The address of the web page for the studio.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
      userRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that studio users assume when logging in to the
              Nimble Studio portal.
    type: object
  StudioComponent:
    description: >-
      A network that is used by a studio’s users and workflows, including render
      farm, Active Directory, licensing, and file system.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the resource.
      configuration:
        allOf:
          - $ref: '#/definitions/StudioComponentConfiguration'
          - description: >-
              The configuration of the studio component, based on component
              type.
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      createdBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that created the studio component.
      description:
        allOf:
          - $ref: '#/definitions/StudioComponentDescription'
          - description: A human-readable description for the studio component resource.
      ec2SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/StudioComponentSecurityGroupIdList'
          - description: >-
              The EC2 security groups that control access to the studio
              component.
      initializationScripts:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
      name:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: A friendly name for the studio component resource.
      scriptParameters:
        allOf:
          - $ref: '#/definitions/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
      state:
        allOf:
          - $ref: '#/definitions/StudioComponentState'
          - description: The current state.
      statusCode:
        allOf:
          - $ref: '#/definitions/StudioComponentStatusCode'
          - description: The status code.
      statusMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The status message for the studio component.
      studioComponentId:
        allOf:
          - $ref: '#/definitions/StudioComponentId'
          - description: The unique identifier for a studio component resource.
      subtype:
        allOf:
          - $ref: '#/definitions/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
      type:
        allOf:
          - $ref: '#/definitions/StudioComponentType'
          - description: The type of the studio component.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
      updatedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that most recently updated the resource.
    type: object
  StudioComponentConfiguration:
    description: 'The configuration of the studio component, based on component type.'
    properties:
      activeDirectoryConfiguration:
        allOf:
          - $ref: '#/definitions/ActiveDirectoryConfiguration'
          - description: >-
              The configuration for a Microsoft Active Directory (Microsoft AD)
              studio resource.
      computeFarmConfiguration:
        allOf:
          - $ref: '#/definitions/ComputeFarmConfiguration'
          - description: >-
              The configuration for a render farm that is associated with a
              studio resource.
      licenseServiceConfiguration:
        allOf:
          - $ref: '#/definitions/LicenseServiceConfiguration'
          - description: >-
              The configuration for a license service that is associated with a
              studio resource.
      sharedFileSystemConfiguration:
        allOf:
          - $ref: '#/definitions/SharedFileSystemConfiguration'
          - description: >-
              The configuration for a shared file storage system that is
              associated with a studio resource.
    type: object
  StudioComponentDescription:
    description: ''
    maxLength: 256
    type: string
  StudioComponentId:
    maxLength: 22
    pattern: '^[a-zA-Z0-9-_]*$'
    type: string
  StudioComponentInitializationScript:
    description: Initialization scripts for studio components.
    properties:
      launchProfileProtocolVersion:
        allOf:
          - $ref: '#/definitions/LaunchProfileProtocolVersion'
          - description: >-
              The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
      platform:
        allOf:
          - $ref: '#/definitions/LaunchProfilePlatform'
          - description: >-
              The platform of the initialization script, either WINDOWS or
              LINUX.
      runContext:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptRunContext'
          - description: The method to use when running the initialization script.
      script:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptContent'
          - description: The initialization script.
    type: object
  StudioComponentInitializationScriptContent:
    description: ''
    maxLength: 5120
    minLength: 1
    type: string
  StudioComponentInitializationScriptList:
    description: ''
    items:
      $ref: '#/definitions/StudioComponentInitializationScript'
    type: array
  StudioComponentInitializationScriptRunContext:
    description: ''
    enum:
      - SYSTEM_INITIALIZATION
      - USER_INITIALIZATION
    type: string
  StudioComponentList:
    description: ''
    items:
      $ref: '#/definitions/StudioComponent'
    maxItems: 50
    type: array
  StudioComponentName:
    description: ''
    maxLength: 64
    type: string
  StudioComponentScriptParameterKeyValueList:
    description: ''
    items:
      $ref: '#/definitions/ScriptParameterKeyValue'
    maxItems: 30
    type: array
  StudioComponentSecurityGroupIdList:
    description: ''
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 30
    minItems: 1
    type: array
  StudioComponentState:
    description: >-
      <p>The current state of the studio component resource.</p> <p>While a
      studio component is being created, modified, or deleted, its state will
      equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or
      "DELETE_IN_PROGRESS"</p> <p>These are called 'transition states'.</p>
      <p>No modifications may be made to the studio component while it is in a
      transition state.</p> <p>If creation of the resource fails, the state will
      change to `CREATE_FAILED`. The resource StatusCode and StatusMessage will
      provide more information of why creation failed. The resource in this
      state will automatically be deleted from your account after a period of
      time.</p> <p>If updating the resource fails, the state will change to
      `UPDATE_FAILED`. The resource StatusCode and StatusMessage will provide
      more information of why the update failed. The resource will be returned
      to the state it was in when the update request was invoked.</p> <p>If
      deleting the resource fails, the state will change to `DELETE_FAILED`. The
      resource StatusCode and StatusMessage will provide more information of why
      the update failed. The resource will be returned to the state it was in
      when the update request was invoked. After the resource is deleted
      successfully, it will change to the "DELETED" state. The resource will no
      longer count against service quotas and cannot be used or acted upon any
      futher. It will be removed from your account after a period of time.</p>
    enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
    type: string
  StudioComponentStatusCode:
    description: >-
      <p>The current status of the studio component resource.</p> <p>When the
      resource is in the 'READY' state, the status code signals what the last
      mutation made to the resource was.</p> <p>When the resource is in a
      CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED state, the status code signals
      what went wrong and why the mutation failed.</p>
    enum:
      - ACTIVE_DIRECTORY_ALREADY_EXISTS
      - STUDIO_COMPONENT_CREATED
      - STUDIO_COMPONENT_UPDATED
      - STUDIO_COMPONENT_DELETED
      - ENCRYPTION_KEY_ACCESS_DENIED
      - ENCRYPTION_KEY_NOT_FOUND
      - STUDIO_COMPONENT_CREATE_IN_PROGRESS
      - STUDIO_COMPONENT_UPDATE_IN_PROGRESS
      - STUDIO_COMPONENT_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
    type: string
  StudioComponentSubtype:
    description: ''
    enum:
      - AWS_MANAGED_MICROSOFT_AD
      - AMAZON_FSX_FOR_WINDOWS
      - AMAZON_FSX_FOR_LUSTRE
      - CUSTOM
    type: string
  StudioComponentSummary:
    description: ''
    properties:
      createdAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              created.
      createdBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that created the studio component.
      description:
        allOf:
          - $ref: '#/definitions/StudioComponentDescription'
          - description: The description.
      name:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: The name for the studio component.
      studioComponentId:
        allOf:
          - $ref: '#/definitions/StudioComponentId'
          - description: The unique identifier for a studio component resource.
      subtype:
        allOf:
          - $ref: '#/definitions/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
      type:
        allOf:
          - $ref: '#/definitions/StudioComponentType'
          - description: The type of the studio component.
      updatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Unix epoch timestamp in seconds for when the resource was
              updated.
      updatedBy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The user ID of the user that most recently updated the resource.
    type: object
  StudioComponentSummaryList:
    description: ''
    items:
      $ref: '#/definitions/StudioComponentSummary'
    type: array
  StudioComponentType:
    description: ''
    enum:
      - ACTIVE_DIRECTORY
      - SHARED_FILE_SYSTEM
      - COMPUTE_FARM
      - LICENSE_SERVICE
      - CUSTOM
    type: string
  StudioDisplayName:
    maxLength: 64
    type: string
  StudioEncryptionConfiguration:
    description: Configuration of the encryption method that is used for the studio.
    properties:
      keyArn:
        allOf:
          - $ref: '#/definitions/StudioEncryptionConfigurationKeyArn'
          - description: The ARN for a KMS key that is used to encrypt studio data.
      keyType:
        allOf:
          - $ref: '#/definitions/StudioEncryptionConfigurationKeyType'
          - description: The type of KMS key that is used to encrypt studio data.
    required:
      - keyType
    type: object
  StudioEncryptionConfigurationKeyArn:
    description: >-
      The Amazon Resource Name (ARN) for a KMS key that is used to encrypt
      studio data.
    minLength: 4
    pattern: '^arn:.*'
    type: string
  StudioEncryptionConfigurationKeyType:
    description: The type of KMS key that is used to encrypt studio data.
    enum:
      - AWS_OWNED_KEY
      - CUSTOMER_MANAGED_KEY
    type: string
  StudioList:
    description: ''
    items:
      $ref: '#/definitions/Studio'
    type: array
  StudioMembership:
    description: ''
    properties:
      identityStoreId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ID of the identity store.
      persona:
        allOf:
          - $ref: '#/definitions/StudioPersona'
          - description: The persona.
      principalId:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The principal ID.
    type: object
  StudioMembershipList:
    description: ''
    items:
      $ref: '#/definitions/StudioMembership'
    maxItems: 20
    type: array
  StudioName:
    description: ''
    maxLength: 64
    minLength: 3
    pattern: '^[a-z0-9]*$'
    type: string
  StudioPersona:
    description: ''
    enum:
      - ADMINISTRATOR
    type: string
  StudioState:
    description: ''
    enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
    type: string
  StudioStatusCode:
    description: The status code.
    enum:
      - STUDIO_CREATED
      - STUDIO_DELETED
      - STUDIO_UPDATED
      - STUDIO_CREATE_IN_PROGRESS
      - STUDIO_UPDATE_IN_PROGRESS
      - STUDIO_DELETE_IN_PROGRESS
      - STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED
      - STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED
      - STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED
      - AWS_SSO_NOT_ENABLED
      - AWS_SSO_ACCESS_DENIED
      - ROLE_NOT_OWNED_BY_STUDIO_OWNER
      - ROLE_COULD_NOT_BE_ASSUMED
      - INTERNAL_ERROR
      - ENCRYPTION_KEY_NOT_FOUND
      - ENCRYPTION_KEY_ACCESS_DENIED
      - AWS_SSO_CONFIGURATION_REPAIRED
      - AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS
    type: string
  TagResourceRequest:
    description: The ARN for the role that manages access.
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              A collection of labels, in the form of key:value pairs, that apply
              to this resource.
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  Tags:
    additionalProperties:
      $ref: '#/definitions/__string'
    description: ''
    type: object
  ThrottlingException: {}
  Timestamp:
    description: ''
    format: date-time
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateLaunchProfileMemberRequest:
    description: The principal ID.
    properties:
      persona:
        allOf:
          - $ref: '#/definitions/LaunchProfilePersona'
          - description: The persona.
    required:
      - persona
    title: UpdateLaunchProfileMemberRequest
    type: object
  UpdateLaunchProfileMemberResponse:
    properties:
      member:
        allOf:
          - $ref: '#/definitions/LaunchProfileMembership'
          - description: The member.
    type: object
  UpdateLaunchProfileRequest:
    description: The launch profile ID.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/LaunchProfileDescription'
          - description: The description.
      launchProfileProtocolVersions:
        allOf:
          - $ref: '#/definitions/LaunchProfileProtocolVersionList'
          - description: >-
              The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
      name:
        allOf:
          - $ref: '#/definitions/LaunchProfileName'
          - description: The name for the launch profile.
      streamConfiguration:
        allOf:
          - $ref: '#/definitions/StreamConfigurationCreate'
          - description: A configuration for a streaming session.
      studioComponentIds:
        allOf:
          - $ref: '#/definitions/LaunchProfileStudioComponentIdList'
          - description: >-
              Unique identifiers for a collection of studio components that can
              be used with this launch profile.
    title: UpdateLaunchProfileRequest
    type: object
  UpdateLaunchProfileResponse:
    properties:
      launchProfile:
        allOf:
          - $ref: '#/definitions/LaunchProfile'
          - description: The launch profile.
    type: object
  UpdateStreamingImageRequest:
    description: The streaming image ID.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/StreamingImageDescription'
          - description: The description.
      name:
        allOf:
          - $ref: '#/definitions/StreamingImageName'
          - description: The name for the streaming image.
    title: UpdateStreamingImageRequest
    type: object
  UpdateStreamingImageResponse:
    properties:
      streamingImage:
        allOf:
          - $ref: '#/definitions/StreamingImage'
          - description: ''
    type: object
  UpdateStudioComponentRequest:
    description: The studio component ID.
    properties:
      configuration:
        allOf:
          - $ref: '#/definitions/StudioComponentConfiguration'
          - description: >-
              The configuration of the studio component, based on component
              type.
      description:
        allOf:
          - $ref: '#/definitions/StudioComponentDescription'
          - description: The description.
      ec2SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/StudioComponentSecurityGroupIdList'
          - description: >-
              The EC2 security groups that control access to the studio
              component.
      initializationScripts:
        allOf:
          - $ref: '#/definitions/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
      name:
        allOf:
          - $ref: '#/definitions/StudioComponentName'
          - description: The name for the studio component.
      scriptParameters:
        allOf:
          - $ref: '#/definitions/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
      subtype:
        allOf:
          - $ref: '#/definitions/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
      type:
        allOf:
          - $ref: '#/definitions/StudioComponentType'
          - description: The type of the studio component.
    title: UpdateStudioComponentRequest
    type: object
  UpdateStudioComponentResponse:
    properties:
      studioComponent:
        allOf:
          - $ref: '#/definitions/StudioComponent'
          - description: Information about the studio component.
    type: object
  UpdateStudioRequest:
    description: The studio ID.
    properties:
      adminRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that Studio Admins will assume when logging in to the
              Nimble Studio portal.
      displayName:
        allOf:
          - $ref: '#/definitions/StudioDisplayName'
          - description: A friendly name for the studio.
      userRoleArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The IAM role that Studio Users will assume when logging in to the
              Nimble Studio portal.
    title: UpdateStudioRequest
    type: object
  UpdateStudioResponse:
    properties:
      studio:
        allOf:
          - $ref: '#/definitions/Studio'
          - description: Information about a studio.
    type: object
  ValidationException: {}
  WindowsMountDrive:
    description: ''
    pattern: '^[A-Z]$'
    type: string
  __string:
    type: string
  multiValueQueryStringList:
    items:
      $ref: '#/definitions/__string'
    type: array
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/nimble/'
host: nimble.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AmazonNimbleStudio
  version: '2020-08-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: nimble
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/nimble-2020-08-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: nimble
paths:
  /2020-08-01/eulas:
    get:
      description: List Eulas.
      operationId: ListEulas
      parameters:
        - collectionFormat: multi
          description: A collection of EULA IDs.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: eulaIds
          required: false
          type: array
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEulasResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/eulas/{eulaId}':
    get:
      description: Get Eula.
      operationId: GetEula
      parameters:
        - description: The EULA ID.
          in: path
          name: eulaId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEulaResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /2020-08-01/studios:
    get:
      description: >-
        List studios in your Amazon Web Services account in the requested Amazon
        Web Services Region.
      operationId: ListStudios
      parameters:
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStudiosResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Create a new Studio.</p> <p>When creating a Studio, two IAM roles
        must be provided: the admin role and the user Role. These roles are
        assumed by your users when they log in to the Nimble Studio portal.</p>
        <p>The user role must have the AmazonNimbleStudio-StudioUser managed
        policy attached for the portal to function properly.</p> <p>The Admin
        Role must have the AmazonNimbleStudio-StudioAdmin managed policy
        attached for the portal to function properly.</p> <p>You may optionally
        specify a KMS key in the StudioEncryptionConfiguration.</p> <p>In Nimble
        Studio, resource names, descriptions, initialization scripts, and other
        data you provide are always encrypted at rest using an KMS key. By
        default, this key is owned by Amazon Web Services and managed on your
        behalf. You may provide your own KMS key when calling CreateStudio to
        encrypt this data using a key you own and manage.</p> <p>When providing
        an KMS key during studio creation, Nimble Studio creates KMS grants in
        your account to provide your studio user and admin roles access to these
        KMS keys.</p> <p>If you delete this grant, the studio will no longer be
        accessible to your portal users.</p> <p>If you delete the studio KMS
        key, your studio will no longer be accessible.</p>
      operationId: CreateStudio
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              adminRoleArn:
                description: >-
                  The IAM role that Studio Admins will assume when logging in to
                  the Nimble Studio portal.
                type: string
              displayName:
                description: A friendly name for the studio.
                maxLength: 64
                type: string
              studioEncryptionConfiguration:
                description: >-
                  Configuration of the encryption method that is used for the
                  studio.
                properties:
                  keyArn:
                    allOf:
                      - $ref: '#/definitions/StudioEncryptionConfigurationKeyArn'
                      - description: >-
                          The ARN for a KMS key that is used to encrypt studio
                          data.
                  keyType:
                    allOf:
                      - $ref: '#/definitions/StudioEncryptionConfigurationKeyType'
                      - description: >-
                          The type of KMS key that is used to encrypt studio
                          data.
                type: object
              studioName:
                description: ''
                maxLength: 64
                minLength: 3
                pattern: '^[a-z0-9]*$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
              userRoleArn:
                description: >-
                  The IAM role that Studio Users will assume when logging in to
                  the Nimble Studio portal.
                type: string
            required:
              - adminRoleArn
              - displayName
              - studioName
              - userRoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStudioResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}':
    delete:
      description: Delete a studio resource.
      operationId: DeleteStudio
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStudioResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Get a Studio resource.
      operationId: GetStudio
      parameters:
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStudioResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Update a Studio resource.</p> <p>Currently, this operation only
        supports updating the displayName of your studio.</p>
      operationId: UpdateStudio
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              adminRoleArn:
                description: >-
                  The IAM role that Studio Admins will assume when logging in to
                  the Nimble Studio portal.
                type: string
              displayName:
                description: A friendly name for the studio.
                maxLength: 64
                type: string
              userRoleArn:
                description: >-
                  The IAM role that Studio Users will assume when logging in to
                  the Nimble Studio portal.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStudioResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/eula-acceptances':
    get:
      description: List Eula Acceptances.
      operationId: ListEulaAcceptances
      parameters:
        - collectionFormat: multi
          description: A collection of EULA IDs.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: eulaIds
          required: false
          type: array
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEulaAcceptancesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Accept EULAs.
      operationId: AcceptEulas
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              eulaIds:
                description: ''
                items:
                  $ref: '#/definitions/__string'
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptEulasResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/launch-profiles':
    get:
      description: List all the launch profiles a studio.
      operationId: ListLaunchProfiles
      parameters:
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The principal ID.
          in: query
          name: principalId
          required: false
          type: string
        - collectionFormat: multi
          description: A list of states.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: states
          required: false
          type: array
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchProfilesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Create a launch profile.
      operationId: CreateLaunchProfile
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description.
                maxLength: 256
                type: string
              ec2SubnetIds:
                description: ''
                items:
                  $ref: '#/definitions/EC2SubnetId'
                maxItems: 6
                type: array
              launchProfileProtocolVersions:
                description: ''
                items:
                  $ref: '#/definitions/LaunchProfileProtocolVersion'
                type: array
              name:
                description: The name for the launch profile.
                maxLength: 64
                type: string
              streamConfiguration:
                description: ''
                properties:
                  clipboardMode:
                    allOf:
                      - $ref: '#/definitions/StreamingClipboardMode'
                      - description: >-
                          Enable or disable the use of the system clipboard to
                          copy and paste between the streaming session and
                          streaming client.
                  ec2InstanceTypes:
                    allOf:
                      - $ref: '#/definitions/StreamingInstanceTypeList'
                      - description: >-
                          The EC2 instance types that users can select from when
                          launching a streaming session with this launch
                          profile.
                  maxSessionLengthInMinutes:
                    allOf:
                      - $ref: >-
                          #/definitions/StreamConfigurationMaxSessionLengthInMinutes
                      - description: >-
                          The length of time, in minutes, that a streaming
                          session can run. After this point, Nimble Studio
                          automatically terminates the session.
                  streamingImageIds:
                    allOf:
                      - $ref: '#/definitions/StreamingImageIdList'
                      - description: >-
                          The streaming images that users can select from when
                          launching a streaming session with this launch
                          profile.
                type: object
              studioComponentIds:
                description: ''
                items:
                  $ref: '#/definitions/__string'
                maxItems: 100
                minItems: 1
                type: array
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
            required:
              - ec2SubnetIds
              - launchProfileProtocolVersions
              - name
              - streamConfiguration
              - studioComponentIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLaunchProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}':
    delete:
      description: Permanently delete a launch profile.
      operationId: DeleteLaunchProfile
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLaunchProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Get a launch profile.
      operationId: GetLaunchProfile
      parameters:
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLaunchProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Update a launch profile.
      operationId: UpdateLaunchProfile
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description.
                maxLength: 256
                type: string
              launchProfileProtocolVersions:
                description: ''
                items:
                  $ref: '#/definitions/LaunchProfileProtocolVersion'
                type: array
              name:
                description: The name for the launch profile.
                maxLength: 64
                type: string
              streamConfiguration:
                description: ''
                properties:
                  clipboardMode:
                    allOf:
                      - $ref: '#/definitions/StreamingClipboardMode'
                      - description: >-
                          Enable or disable the use of the system clipboard to
                          copy and paste between the streaming session and
                          streaming client.
                  ec2InstanceTypes:
                    allOf:
                      - $ref: '#/definitions/StreamingInstanceTypeList'
                      - description: >-
                          The EC2 instance types that users can select from when
                          launching a streaming session with this launch
                          profile.
                  maxSessionLengthInMinutes:
                    allOf:
                      - $ref: >-
                          #/definitions/StreamConfigurationMaxSessionLengthInMinutes
                      - description: >-
                          The length of time, in minutes, that a streaming
                          session can run. After this point, Nimble Studio
                          automatically terminates the session.
                  streamingImageIds:
                    allOf:
                      - $ref: '#/definitions/StreamingImageIdList'
                      - description: >-
                          The streaming images that users can select from when
                          launching a streaming session with this launch
                          profile.
                type: object
              studioComponentIds:
                description: ''
                items:
                  $ref: '#/definitions/__string'
                maxItems: 100
                minItems: 1
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLaunchProfileResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details':
    get:
      description: >-
        Launch profile details include the launch profile resource and summary
        information of resources that are used by, or available to, the launch
        profile. This includes the name and description of all studio components
        used by the launch profiles, and the name and description of streaming
        images that can be used with this launch profile.
      operationId: GetLaunchProfileDetails
      parameters:
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLaunchProfileDetailsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init#launchProfileProtocolVersions&launchPurpose&platform':
    get:
      description: Get a launch profile initialization.
      operationId: GetLaunchProfileInitialization
      parameters:
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - collectionFormat: multi
          description: A collection of launch profile protocol versions.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: launchProfileProtocolVersions
          required: true
          type: array
        - description: The launch purpose.
          in: query
          name: launchPurpose
          required: true
          type: string
        - description: The platform.
          in: query
          name: platform
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLaunchProfileInitializationResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership':
    get:
      description: Get all users in a given launch profile membership.
      operationId: ListLaunchProfileMembers
      parameters:
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchProfileMembersResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Add/update users with given persona to launch profile membership.
      operationId: PutLaunchProfileMembers
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              identityStoreId:
                description: The ID of the identity store.
                type: string
              members:
                description: ''
                items:
                  $ref: '#/definitions/NewLaunchProfileMember'
                maxItems: 20
                minItems: 1
                type: array
            required:
              - identityStoreId
              - members
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutLaunchProfileMembersResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}':
    delete:
      description: Delete a user from launch profile membership.
      operationId: DeleteLaunchProfileMember
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The principal ID.
          in: path
          name: principalId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Get a user persona in launch profile membership.
      operationId: GetLaunchProfileMember
      parameters:
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The principal ID.
          in: path
          name: principalId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Update a user persona in launch profile membership.
      operationId: UpdateLaunchProfileMember
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The launch profile ID.
          in: path
          name: launchProfileId
          required: true
          type: string
        - description: The principal ID.
          in: path
          name: principalId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              persona:
                description: ''
                enum:
                  - USER
                type: string
            required:
              - persona
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/membership':
    get:
      description: Get all users in a given studio membership.
      operationId: ListStudioMembers
      parameters:
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStudioMembersResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Add/update users with given persona to studio membership.
      operationId: PutStudioMembers
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              identityStoreId:
                description: The ID of the identity store.
                type: string
              members:
                description: ''
                items:
                  $ref: '#/definitions/NewStudioMember'
                maxItems: 20
                minItems: 1
                type: array
            required:
              - identityStoreId
              - members
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutStudioMembersResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/membership/{principalId}':
    delete:
      description: Delete a user from studio membership.
      operationId: DeleteStudioMember
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The principal ID.
          in: path
          name: principalId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStudioMemberResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Get a user's membership in a studio.
      operationId: GetStudioMember
      parameters:
        - description: The principal ID.
          in: path
          name: principalId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStudioMemberResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/studios/{studioId}/sso-configuration':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      description: >-
        <p>Repairs the SSO configuration for a given studio.</p> <p>If the
        studio has a valid Amazon Web Services SSO configuration currently
        associated with it, this operation will fail with a validation
        error.</p> <p>If the studio does not have a valid Amazon Web Services
        SSO configuration currently associated with it, then a new Amazon Web
        Services SSO application is created for the studio and the studio is
        changed to the READY state.</p> <p>After the Amazon Web Services SSO
        application is repaired, you must use the Amazon Nimble Studio console
        to add administrators and users to your studio.</p>
      operationId: StartStudioSSOConfigurationRepair
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartStudioSSOConfigurationRepairResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/streaming-images':
    get:
      description: >-
        <p>List the streaming image resources available to this studio.</p>
        <p>This list will contain both images provided by Amazon Web Services,
        as well as streaming images that you have created in your studio.</p>
      operationId: ListStreamingImages
      parameters:
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The owner.
          in: query
          name: owner
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamingImagesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a streaming image resource in a studio.
      operationId: CreateStreamingImage
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description.
                maxLength: 256
                type: string
              ec2ImageId:
                description: ''
                pattern: '^ami-[0-9A-z]+$'
                type: string
              name:
                description: A friendly name for a streaming image resource.
                maxLength: 64
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
            required:
              - ec2ImageId
              - name
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingImageResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}':
    delete:
      description: Delete streaming image.
      operationId: DeleteStreamingImage
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The streaming image ID.
          in: path
          name: streamingImageId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamingImageResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Get streaming image.
      operationId: GetStreamingImage
      parameters:
        - description: The streaming image ID.
          in: path
          name: streamingImageId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStreamingImageResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Update streaming image.
      operationId: UpdateStreamingImage
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The streaming image ID.
          in: path
          name: streamingImageId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The description.
                maxLength: 256
                type: string
              name:
                description: A friendly name for a streaming image resource.
                maxLength: 64
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamingImageResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/streaming-sessions':
    get:
      description: Lists the streaming image resources in a studio.
      operationId: ListStreamingSessions
      parameters:
        - description: The user ID of the user that created the streaming session.
          in: query
          name: createdBy
          required: false
          type: string
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The user ID of the user that owns the streaming session.
          in: query
          name: ownedBy
          required: false
          type: string
        - description: A collection of session IDs.
          in: query
          name: sessionIds
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamingSessionsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a streaming session in a studio.</p> <p>After invoking this
        operation, you must poll GetStreamingSession until the streaming session
        is in state READY.</p>
      operationId: CreateStreamingSession
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ec2InstanceType:
                description: ''
                enum:
                  - g4dn.xlarge
                  - g4dn.2xlarge
                  - g4dn.4xlarge
                  - g4dn.8xlarge
                  - g4dn.12xlarge
                  - g4dn.16xlarge
                type: string
              launchProfileId:
                description: The launch profile ID.
                type: string
              ownedBy:
                description: The user ID of the user that owns the streaming session.
                type: string
              streamingImageId:
                description: ''
                maxLength: 22
                pattern: '^[a-zA-Z0-9-_]*$'
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingSessionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}':
    delete:
      description: >-
        <p>Deletes streaming session resource.</p> <p>After invoking this
        operation, use GetStreamingSession to poll the resource until it
        transitions to a DELETED state.</p> <p>A streaming session will count
        against your streaming session quota until it is marked DELETED.</p>
      operationId: DeleteStreamingSession
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The session ID.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamingSessionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: >-
        <p>Gets StreamingSession resource.</p> <p>Invoke this operation to poll
        for a streaming session state while creating or deleting a session.</p>
      operationId: GetStreamingSession
      parameters:
        - description: The session ID.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStreamingSessionResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a streaming session stream for a streaming session.</p>
        <p>After invoking this API, invoke GetStreamingSessionStream with the
        returned streamId to poll the resource until it is in state READY.</p>
      operationId: CreateStreamingSessionStream
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The session ID.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              expirationInSeconds:
                description: ''
                maximum: 3600
                minimum: 60
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingSessionStreamResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}':
    get:
      description: >-
        <p>Gets a StreamingSessionStream for a streaming session.</p> <p>Invoke
        this operation to poll the resource after invoking
        CreateStreamingSessionStream.</p> <p>After the StreamingSessionStream
        changes to the state READY, the url property will contain a stream to be
        used with the DCV streaming client.</p>
      operationId: GetStreamingSessionStream
      parameters:
        - description: The session ID.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The stream ID.
          in: path
          name: streamId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStreamingSessionStreamResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/2020-08-01/studios/{studioId}/studio-components':
    get:
      description: Lists the StudioComponents in a studio.
      operationId: ListStudioComponents
      parameters:
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token for the next set of results, or null if there are no more
            results.
          in: query
          name: nextToken
          required: false
          type: string
        - collectionFormat: multi
          description: A list of states.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: states
          required: false
          type: array
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - collectionFormat: multi
          description: The types.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: types
          required: false
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStudioComponentsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a studio component resource.
      operationId: CreateStudioComponent
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              configuration:
                description: >-
                  The configuration of the studio component, based on component
                  type.
                properties:
                  activeDirectoryConfiguration:
                    allOf:
                      - $ref: '#/definitions/ActiveDirectoryConfiguration'
                      - description: >-
                          The configuration for a Microsoft Active Directory
                          (Microsoft AD) studio resource.
                  computeFarmConfiguration:
                    allOf:
                      - $ref: '#/definitions/ComputeFarmConfiguration'
                      - description: >-
                          The configuration for a render farm that is associated
                          with a studio resource.
                  licenseServiceConfiguration:
                    allOf:
                      - $ref: '#/definitions/LicenseServiceConfiguration'
                      - description: >-
                          The configuration for a license service that is
                          associated with a studio resource.
                  sharedFileSystemConfiguration:
                    allOf:
                      - $ref: '#/definitions/SharedFileSystemConfiguration'
                      - description: >-
                          The configuration for a shared file storage system
                          that is associated with a studio resource.
                type: object
              description:
                description: ''
                maxLength: 256
                type: string
              ec2SecurityGroupIds:
                description: ''
                items:
                  $ref: '#/definitions/SecurityGroupId'
                maxItems: 30
                minItems: 1
                type: array
              initializationScripts:
                description: ''
                items:
                  $ref: '#/definitions/StudioComponentInitializationScript'
                type: array
              name:
                description: ''
                maxLength: 64
                type: string
              scriptParameters:
                description: ''
                items:
                  $ref: '#/definitions/ScriptParameterKeyValue'
                maxItems: 30
                type: array
              subtype:
                description: ''
                enum:
                  - AWS_MANAGED_MICROSOFT_AD
                  - AMAZON_FSX_FOR_WINDOWS
                  - AMAZON_FSX_FOR_LUSTRE
                  - CUSTOM
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
              type:
                description: ''
                enum:
                  - ACTIVE_DIRECTORY
                  - SHARED_FILE_SYSTEM
                  - COMPUTE_FARM
                  - LICENSE_SERVICE
                  - CUSTOM
                type: string
            required:
              - name
              - type
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStudioComponentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}':
    delete:
      description: Deletes a studio component resource.
      operationId: DeleteStudioComponent
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio component ID.
          in: path
          name: studioComponentId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStudioComponentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    get:
      description: Gets a studio component resource.
      operationId: GetStudioComponent
      parameters:
        - description: The studio component ID.
          in: path
          name: studioComponentId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStudioComponentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates a studio component resource.
      operationId: UpdateStudioComponent
      parameters:
        - description: >-
            To make an idempotent API request using one of these actions,
            specify a client token in the request. You should not reuse the same
            client token for other API requests. If you retry a request that
            completed successfully using the same client token and the same
            parameters, the retry succeeds without performing any further
            actions. If you retry a successful request using the same client
            token, but one or more of the parameters are different, the retry
            fails with a ValidationException error.
          in: header
          maxLength: 64
          minLength: 1
          name: X-Amz-Client-Token
          required: false
          type: string
        - description: The studio component ID.
          in: path
          name: studioComponentId
          required: true
          type: string
        - description: The studio ID.
          in: path
          name: studioId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              configuration:
                description: >-
                  The configuration of the studio component, based on component
                  type.
                properties:
                  activeDirectoryConfiguration:
                    allOf:
                      - $ref: '#/definitions/ActiveDirectoryConfiguration'
                      - description: >-
                          The configuration for a Microsoft Active Directory
                          (Microsoft AD) studio resource.
                  computeFarmConfiguration:
                    allOf:
                      - $ref: '#/definitions/ComputeFarmConfiguration'
                      - description: >-
                          The configuration for a render farm that is associated
                          with a studio resource.
                  licenseServiceConfiguration:
                    allOf:
                      - $ref: '#/definitions/LicenseServiceConfiguration'
                      - description: >-
                          The configuration for a license service that is
                          associated with a studio resource.
                  sharedFileSystemConfiguration:
                    allOf:
                      - $ref: '#/definitions/SharedFileSystemConfiguration'
                      - description: >-
                          The configuration for a shared file storage system
                          that is associated with a studio resource.
                type: object
              description:
                description: ''
                maxLength: 256
                type: string
              ec2SecurityGroupIds:
                description: ''
                items:
                  $ref: '#/definitions/SecurityGroupId'
                maxItems: 30
                minItems: 1
                type: array
              initializationScripts:
                description: ''
                items:
                  $ref: '#/definitions/StudioComponentInitializationScript'
                type: array
              name:
                description: ''
                maxLength: 64
                type: string
              scriptParameters:
                description: ''
                items:
                  $ref: '#/definitions/ScriptParameterKeyValue'
                maxItems: 30
                type: array
              subtype:
                description: ''
                enum:
                  - AWS_MANAGED_MICROSOFT_AD
                  - AMAZON_FSX_FOR_WINDOWS
                  - AMAZON_FSX_FOR_LUSTRE
                  - CUSTOM
                type: string
              type:
                description: ''
                enum:
                  - ACTIVE_DIRECTORY
                  - SHARED_FILE_SYSTEM
                  - COMPUTE_FARM
                  - LICENSE_SERVICE
                  - CUSTOM
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStudioComponentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/tags/{resourceArn}':
    get:
      description: >-
        <p>Gets the tags for a resource, given its Amazon Resource Names
        (ARN).</p> <p>This operation supports ARNs for all resource types in
        Nimble Studio that support tags, including studio, studio component,
        launch profile, streaming image, and streaming session. All resources
        that can be tagged will contain an ARN property, so you do not have to
        create this ARN yourself.</p>
      operationId: ListTagsForResource
      parameters:
        - description: The ARN of the target resource for tagging operations.
          in: path
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Creates tags for a resource, given its ARN.'
      operationId: TagResource
      parameters:
        - description: The ARN of the target resource for tagging operations.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: ''
                type: object
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/2020-08-01/tags/{resourceArn}#tagKeys':
    delete:
      description: Deletes the tags for a resource.
      operationId: UntagResource
      parameters:
        - description: The ARN of the target resource for tagging operations.
          in: path
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: An array of tag keys to delete.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

