basePath: /
definitions:
  AccessDeniedException: {}
  AmazonResourceArn:
    maxLength: 1011
    minLength: 1
    type: string
  BoundedLengthString:
    maxLength: 5000
    minLength: 1
    pattern: '[\P{M}\p{M}]{1,5000}'
    type: string
  ComponentTimestampDelimiter:
    maxLength: 1
    minLength: 0
    pattern: ^(\-|\_|\s)?$
    type: string
  ConflictException: {}
  CreateDatasetRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/IdempotenceToken'
          - description: ' A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being created. '
      DatasetSchema:
        allOf:
          - $ref: '#/definitions/DatasetSchema'
          - description: >-
              A JSON description of the data that is in each time series
              dataset, including names, column names, and data types. 
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/NameOrArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt dataset
              data by Amazon Lookout for Equipment. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              Any tags associated with the ingested data described in the
              dataset. 
    required:
      - DatasetName
      - DatasetSchema
      - ClientToken
    title: CreateDatasetRequest
    type: object
  CreateDatasetResponse:
    properties:
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: ' The Amazon Resource Name (ARN) of the dataset being created. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being created. '
      Status:
        allOf:
          - $ref: '#/definitions/DatasetStatus'
          - description: 'Indicates the status of the <code>CreateDataset</code> operation. '
    type: object
  CreateInferenceSchedulerRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/IdempotenceToken'
          - description: ' A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. '
      DataDelayOffsetInMinutes:
        allOf:
          - $ref: '#/definitions/DataDelayOffsetInMinutes'
          - description: >-
              A period of time (in minutes) by which inference on the data is
              delayed after the data starts. For instance, if you select an
              offset delay time of five minutes, inference will not begin on the
              data until the first data measurement after the five minute mark.
              For example, if five minutes is selected, the inference scheduler
              will wake up at the configured frequency with the additional five
              minute delay time to check the customer S3 bucket. The customer
              can upload data at the same frequency and they don't need to stop
              and restart the scheduler when uploading new data. 
      DataInputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceInputConfiguration'
          - description: >-
              Specifies configuration information for the input data for the
              inference scheduler, including delimiter, format, and dataset
              location. 
      DataOutputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceOutputConfiguration'
          - description: >-
              Specifies configuration information for the output results for the
              inference scheduler, including the S3 location for the output. 
      DataUploadFrequency:
        allOf:
          - $ref: '#/definitions/DataUploadFrequency'
          - description: ' How often data is uploaded to the source S3 bucket for the input data. The value chosen is the length of time between data uploads. For instance, if you select 5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source bucket once every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment starts a scheduled inference on your data. In this example, it starts once every 5 minutes. '
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being created. '
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: >-
              The name of the previously trained ML model being used to create
              the inference scheduler. 
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of a role with permission to access
              the data source being used for the inference. 
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/NameOrArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt inference
              scheduler data by Amazon Lookout for Equipment. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: 'Any tags associated with the inference scheduler. '
    required:
      - ModelName
      - InferenceSchedulerName
      - DataUploadFrequency
      - DataInputConfiguration
      - DataOutputConfiguration
      - RoleArn
      - ClientToken
    title: CreateInferenceSchedulerRequest
    type: object
  CreateInferenceSchedulerResponse:
    properties:
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: >-
              The Amazon Resource Name (ARN) of the inference scheduler being
              created. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of inference scheduler being created. '
      Status:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerStatus'
          - description: >-
              Indicates the status of the <code>CreateInferenceScheduler</code>
              operation. 
    type: object
  CreateModelRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/IdempotenceToken'
          - description: >-
              A unique identifier for the request. If you do not set the client
              request token, Amazon Lookout for Equipment generates one. 
      DataPreProcessingConfiguration:
        allOf:
          - $ref: '#/definitions/DataPreProcessingConfiguration'
          - description: >-
              <p>The configuration is the <code>TargetSamplingRate</code>, which
              is the sampling rate of the data after post processing by Amazon
              Lookout for Equipment. For example, if you provide data that has
              been collected at a 1 second level and you want the system to
              resample the data at a 1 minute rate before training, the
              <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing
              a value for the <code>TargetSamplingRate</code>, you must attach
              the prefix "PT" to the rate you want. The value for a 1 second
              rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
              <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetIdentifier'
          - description: 'The name of the dataset for the ML model being created. '
      DatasetSchema:
        allOf:
          - $ref: '#/definitions/DatasetSchema'
          - description: 'The data schema for the ML model being created. '
      EvaluationDataEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' Indicates the time reference in the dataset that should be used to end the subset of evaluation data for the ML model. '
      EvaluationDataStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time reference in the dataset that should be used to
              begin the subset of evaluation data for the ML model. 
      LabelsInputConfiguration:
        allOf:
          - $ref: '#/definitions/LabelsInputConfiguration'
          - description: >-
              The input configuration for the labels being used for the ML model
              that's being created. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: The name for the ML model to be created.
      OffCondition:
        allOf:
          - $ref: '#/definitions/OffCondition'
          - description: >-
              Indicates that the asset associated with this sensor has been shut
              off. As long as this condition is met, Lookout for Equipment will
              not use data from this asset for training, evaluation, or
              inference.
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission to access the data source being used to create the ML model. '
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/NameOrArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt model data
              by Amazon Lookout for Equipment. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' Any tags associated with the ML model being created. '
      TrainingDataEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time reference in the dataset that should be used to
              end the subset of training data for the ML model. 
      TrainingDataStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time reference in the dataset that should be used to
              begin the subset of training data for the ML model. 
    required:
      - ModelName
      - DatasetName
      - ClientToken
    title: CreateModelRequest
    type: object
  CreateModelResponse:
    properties:
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the model being created. '
      Status:
        allOf:
          - $ref: '#/definitions/ModelStatus'
          - description: 'Indicates the status of the <code>CreateModel</code> operation. '
    type: object
  DataDelayOffsetInMinutes:
    maximum: 60
    minimum: 0
    type: integer
  DataIngestionJobSummaries:
    items:
      $ref: '#/definitions/DataIngestionJobSummary'
    type: array
  DataIngestionJobSummary:
    description: >-
      Provides information about a specified data ingestion job, including
      dataset information, data ingestion configuration, and status. 
    properties:
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: >-
              The Amazon Resource Name (ARN) of the dataset used in the data
              ingestion job. 
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset used for the data ingestion job. '
      IngestionInputConfiguration:
        allOf:
          - $ref: '#/definitions/IngestionInputConfiguration'
          - description: ' Specifies information for the input data for the data inference job, including data S3 location parameters. '
      JobId:
        allOf:
          - $ref: '#/definitions/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
      Status:
        allOf:
          - $ref: '#/definitions/IngestionJobStatus'
          - description: 'Indicates the status of the data ingestion job. '
    type: object
  DataPreProcessingConfiguration:
    description: >-
      <p>The configuration is the <code>TargetSamplingRate</code>, which is the
      sampling rate of the data after post processing by Amazon Lookout for
      Equipment. For example, if you provide data that has been collected at a 1
      second level and you want the system to resample the data at a 1 minute
      rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p>
      <p>When providing a value for the <code>TargetSamplingRate</code>, you
      must attach the prefix "PT" to the rate you want. The value for a 1 second
      rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
      <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>
    properties:
      TargetSamplingRate:
        allOf:
          - $ref: '#/definitions/TargetSamplingRate'
          - description: >-
              <p>The sampling rate of the data after post processing by Amazon
              Lookout for Equipment. For example, if you provide data that has
              been collected at a 1 second level and you want the system to
              resample the data at a 1 minute rate before training, the
              <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing
              a value for the <code>TargetSamplingRate</code>, you must attach
              the prefix "PT" to the rate you want. The value for a 1 second
              rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
              <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>
    type: object
  DataUploadFrequency:
    enum:
      - PT5M
      - PT10M
      - PT15M
      - PT30M
      - PT1H
    type: string
  DatasetArn:
    maxLength: 2048
    minLength: 20
    pattern: 'arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\-]*:[0-9]{12}:dataset\/.+'
    type: string
  DatasetIdentifier:
    maxLength: 200
    minLength: 1
    pattern: '^[0-9a-zA-Z_-]{1,200}$'
    type: string
  DatasetName:
    maxLength: 200
    minLength: 1
    pattern: '^[0-9a-zA-Z_-]{1,200}$'
    type: string
  DatasetSchema:
    description: 'Provides information about the data schema used with the given dataset. '
    properties:
      InlineDataSchema:
        allOf:
          - $ref: '#/definitions/InlineDataSchema'
          - description: ' '
    type: object
  DatasetStatus:
    enum:
      - CREATED
      - INGESTION_IN_PROGRESS
      - ACTIVE
    type: string
  DatasetSummaries:
    items:
      $ref: '#/definitions/DatasetSummary'
    type: array
  DatasetSummary:
    description: >-
      Contains information about the specific data set, including name, ARN, and
      status. 
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time at which the dataset was created in Amazon Lookout for
              Equipment. 
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the specified dataset. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset. '
      Status:
        allOf:
          - $ref: '#/definitions/DatasetStatus'
          - description: 'Indicates the status of the dataset. '
    type: object
  DeleteDatasetRequest:
    properties:
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetIdentifier'
          - description: 'The name of the dataset to be deleted. '
    required:
      - DatasetName
    title: DeleteDatasetRequest
    type: object
  DeleteInferenceSchedulerRequest:
    properties:
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be deleted. '
    required:
      - InferenceSchedulerName
    title: DeleteInferenceSchedulerRequest
    type: object
  DeleteModelRequest:
    properties:
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model to be deleted. '
    required:
      - ModelName
    title: DeleteModelRequest
    type: object
  DescribeDataIngestionJobRequest:
    properties:
      JobId:
        allOf:
          - $ref: '#/definitions/IngestionJobId'
          - description: 'The job ID of the data ingestion job. '
    required:
      - JobId
    title: DescribeDataIngestionJobRequest
    type: object
  DescribeDataIngestionJobResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time at which the data ingestion job was created. '
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: >-
              The Amazon Resource Name (ARN) of the dataset being used in the
              data ingestion job. 
      FailedReason:
        allOf:
          - $ref: '#/definitions/BoundedLengthString'
          - description: >-
              Specifies the reason for failure when a data ingestion job has
              failed. 
      IngestionInputConfiguration:
        allOf:
          - $ref: '#/definitions/IngestionInputConfiguration'
          - description: >-
              Specifies the S3 location configuration for the data input for the
              data ingestion job. 
      JobId:
        allOf:
          - $ref: '#/definitions/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role with permission to
              access the data source being ingested. 
      Status:
        allOf:
          - $ref: '#/definitions/IngestionJobStatus'
          - description: >-
              Indicates the status of the <code>DataIngestionJob</code>
              operation. 
    type: object
  DescribeDatasetRequest:
    properties:
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetIdentifier'
          - description: 'The name of the dataset to be described. '
    required:
      - DatasetName
    title: DescribeDatasetRequest
    type: object
  DescribeDatasetResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Specifies the time the dataset was created in Amazon Lookout for
              Equipment. 
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the dataset being described. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being described. '
      IngestionInputConfiguration:
        allOf:
          - $ref: '#/definitions/IngestionInputConfiguration'
          - description: >-
              Specifies the S3 location configuration for the data input for the
              data ingestion job. 
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'Specifies the time the dataset was last updated, if it was. '
      Schema:
        allOf:
          - $ref: '#/definitions/InlineDataSchema'
          - description: >-
              A JSON description of the data that is in each time series
              dataset, including names, column names, and data types. 
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt dataset
              data by Amazon Lookout for Equipment. 
      Status:
        allOf:
          - $ref: '#/definitions/DatasetStatus'
          - description: 'Indicates the status of the dataset. '
    type: object
  DescribeInferenceSchedulerRequest:
    properties:
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler being described. '
    required:
      - InferenceSchedulerName
    title: DescribeInferenceSchedulerRequest
    type: object
  DescribeInferenceSchedulerResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'Specifies the time at which the inference scheduler was created. '
      DataDelayOffsetInMinutes:
        allOf:
          - $ref: '#/definitions/DataDelayOffsetInMinutes'
          - description: ' A period of time (in minutes) by which inference on the data is delayed after the data starts. For instance, if you select an offset delay time of five minutes, inference will not begin on the data until the first data measurement after the five minute mark. For example, if five minutes is selected, the inference scheduler will wake up at the configured frequency with the additional five minute delay time to check the customer S3 bucket. The customer can upload data at the same frequency and they don''t need to stop and restart the scheduler when uploading new data.'
      DataInputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceInputConfiguration'
          - description: ' Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location. '
      DataOutputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceOutputConfiguration'
          - description: ' Specifies information for the output results for the inference scheduler, including the output S3 location. '
      DataUploadFrequency:
        allOf:
          - $ref: '#/definitions/DataUploadFrequency'
          - description: >-
              Specifies how often data is uploaded to the source S3 bucket for
              the input data. This value is the length of time between data
              uploads. For instance, if you select 5 minutes, Amazon Lookout for
              Equipment will upload the real-time data to the source bucket once
              every 5 minutes. This frequency also determines how often Amazon
              Lookout for Equipment starts a scheduled inference on your data.
              In this example, it starts once every 5 minutes. 
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: >-
              The Amazon Resource Name (ARN) of the inference scheduler being
              described. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being described. '
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: >-
              The Amazon Resource Name (ARN) of the ML model of the inference
              scheduler being described. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: >-
              The name of the ML model of the inference scheduler being
              described. 
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission to access the data source for the inference scheduler being described. '
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt inference
              scheduler data by Amazon Lookout for Equipment. 
      Status:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
      UpdatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Specifies the time at which the inference scheduler was last
              updated, if it was. 
    type: object
  DescribeModelRequest:
    properties:
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model to be described. '
    required:
      - ModelName
    title: DescribeModelRequest
    type: object
  DescribeModelResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'Indicates the time and date at which the ML model was created. '
      DataPreProcessingConfiguration:
        allOf:
          - $ref: '#/definitions/DataPreProcessingConfiguration'
          - description: >-
              <p>The configuration is the <code>TargetSamplingRate</code>, which
              is the sampling rate of the data after post processing by Amazon
              Lookout for Equipment. For example, if you provide data that has
              been collected at a 1 second level and you want the system to
              resample the data at a 1 minute rate before training, the
              <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing
              a value for the <code>TargetSamplingRate</code>, you must attach
              the prefix "PT" to the rate you want. The value for a 1 second
              rate is therefore <i>PT1S</i>, the value for a 15 minute rate is
              <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: >-
              The Amazon Resouce Name (ARN) of the dataset used to create the ML
              model being described. 
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being used by the ML being described. '
      EvaluationDataEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used to end the subset of evaluation data for the ML model. '
      EvaluationDataStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used to begin the subset of evaluation data for the ML model. '
      FailedReason:
        allOf:
          - $ref: '#/definitions/BoundedLengthString'
          - description: >-
              If the training of the ML model failed, this indicates the reason
              for that failure. 
      LabelsInputConfiguration:
        allOf:
          - $ref: '#/definitions/LabelsInputConfiguration'
          - description: >-
              Specifies configuration information about the labels input,
              including its S3 location. 
      LastUpdatedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the last time the ML model was updated. The type of
              update is not specified. 
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model being described. '
      ModelMetrics:
        allOf:
          - $ref: '#/definitions/ModelMetrics'
          - description: >-
              The Model Metrics show an aggregated summary of the model's
              performance within the evaluation time range. This is the JSON
              content of the metrics created when evaluating the model. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model being described. '
      OffCondition:
        allOf:
          - $ref: '#/definitions/OffCondition'
          - description: >-
              Indicates that the asset associated with this sensor has been shut
              off. As long as this condition is met, Lookout for Equipment will
              not use data from this asset for training, evaluation, or
              inference.
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission to access the data source for the ML model being described. '
      Schema:
        allOf:
          - $ref: '#/definitions/InlineDataSchema'
          - description: >-
              A JSON description of the data that is in each time series
              dataset, including names, column names, and data types. 
      ServerSideKmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: >-
              Provides the identifier of the KMS key used to encrypt model data
              by Amazon Lookout for Equipment. 
      Status:
        allOf:
          - $ref: '#/definitions/ModelStatus'
          - description: >-
              Specifies the current status of the model being described. Status
              describes the status of the most recent action of the model. 
      TrainingDataEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used to end the subset of training data for the ML model. '
      TrainingDataStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used to begin the subset of training data for the ML model. '
      TrainingExecutionEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time at which the training of the ML model was
              completed. 
      TrainingExecutionStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'Indicates the time at which the training of the ML model began. '
    type: object
  FileNameTimestampFormat:
    pattern: ^EPOCH|yyyy-MM-dd-HH-mm-ss|yyyyMMddHHmmss$
    type: string
  IamRoleArn:
    maxLength: 2048
    minLength: 20
    pattern: 'arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+'
    type: string
  IdempotenceToken:
    maxLength: 256
    minLength: 1
    pattern: '\p{ASCII}{1,256}'
    type: string
  InferenceExecutionStatus:
    enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
    type: string
  InferenceExecutionSummaries:
    items:
      $ref: '#/definitions/InferenceExecutionSummary'
    type: array
  InferenceExecutionSummary:
    description: >-
      Contains information about the specific inference execution, including
      input and output data configuration, inference scheduling information,
      status, and so on. 
    properties:
      CustomerResultObject:
        allOf:
          - $ref: '#/definitions/S3Object'
          - description: ' '
      DataEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time reference in the dataset at which the inference
              execution stopped. 
      DataInputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceInputConfiguration'
          - description: ' Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location. '
      DataOutputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceOutputConfiguration'
          - description: ' Specifies configuration information for the output results from for the inference execution, including the output S3 location. '
      DataStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the time reference in the dataset at which the inference
              execution began. 
      FailedReason:
        allOf:
          - $ref: '#/definitions/BoundedLengthString'
          - description: ' Specifies the reason for failure when an inference execution has failed. '
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: ' The Amazon Resource Name (ARN) of the inference scheduler being used for the inference execution. '
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: >-
              The name of the inference scheduler being used for the inference
              execution. 
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: >-
              The Amazon Resource Name (ARN) of the ML model used for the
              inference execution. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model being used for the inference execution. '
      ScheduledStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              Indicates the start time at which the inference scheduler began
              the specific inference execution. 
      Status:
        allOf:
          - $ref: '#/definitions/InferenceExecutionStatus'
          - description: 'Indicates the status of the inference execution. '
    type: object
  InferenceInputConfiguration:
    description: >-
      Specifies configuration information for the input data for the inference,
      including S3 location of input data.. 
    properties:
      InferenceInputNameConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceInputNameConfiguration'
          - description: >-
              Specifies configuration information for the input data for the
              inference, including timestamp format and delimiter. 
      InputTimeZoneOffset:
        allOf:
          - $ref: '#/definitions/TimeZoneOffset'
          - description: >-
              Indicates the difference between your time zone and Greenwich Mean
              Time (GMT). 
      S3InputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceS3InputConfiguration'
          - description: ' Specifies configuration information for the input data for the inference, including S3 location of input data.. '
    type: object
  InferenceInputNameConfiguration:
    description: >-
      Specifies configuration information for the input data for the inference,
      including timestamp format and delimiter. 
    properties:
      ComponentTimestampDelimiter:
        allOf:
          - $ref: '#/definitions/ComponentTimestampDelimiter'
          - description: 'Indicates the delimiter character used between items in the data. '
      TimestampFormat:
        allOf:
          - $ref: '#/definitions/FileNameTimestampFormat'
          - description: >-
              The format of the timestamp, whether Epoch time, or standard, with
              or without hyphens (-). 
    type: object
  InferenceOutputConfiguration:
    description: ' Specifies configuration information for the output results from for the inference, including KMS key ID and output S3 location. '
    properties:
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/NameOrArn'
          - description: >-
              The ID number for the AWS KMS key used to encrypt the inference
              output. 
      S3OutputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceS3OutputConfiguration'
          - description: ' Specifies configuration information for the output results from for the inference, output S3 location. '
    required:
      - S3OutputConfiguration
    type: object
  InferenceS3InputConfiguration:
    description: ' Specifies configuration information for the input data for the inference, including input data S3 location. '
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: 'The bucket containing the input dataset for the inference. '
      Prefix:
        allOf:
          - $ref: '#/definitions/S3Prefix'
          - description: >-
              The prefix for the S3 bucket used for the input data for the
              inference. 
    required:
      - Bucket
    type: object
  InferenceS3OutputConfiguration:
    description: ' Specifies configuration information for the output results from the inference, including output S3 location. '
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: ' The bucket containing the output results from the inference '
      Prefix:
        allOf:
          - $ref: '#/definitions/S3Prefix'
          - description: ' The prefix for the S3 bucket used for the output results from the inference. '
    required:
      - Bucket
    type: object
  InferenceSchedulerArn:
    maxLength: 2048
    minLength: 20
    pattern: >-
      arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\-]*:[0-9]{12}:inference-scheduler\/.+
    type: string
  InferenceSchedulerIdentifier:
    maxLength: 200
    minLength: 1
    pattern: '^[0-9a-zA-Z_-]{1,200}$'
    type: string
  InferenceSchedulerName:
    maxLength: 200
    minLength: 1
    pattern: '^[0-9a-zA-Z_-]{1,200}$'
    type: string
  InferenceSchedulerStatus:
    enum:
      - PENDING
      - RUNNING
      - STOPPING
      - STOPPED
    type: string
  InferenceSchedulerSummaries:
    items:
      $ref: '#/definitions/InferenceSchedulerSummary'
    type: array
  InferenceSchedulerSummary:
    description: >-
      Contains information about the specific inference scheduler, including
      data delay offset, model name and ARN, status, and so on. 
    properties:
      DataDelayOffsetInMinutes:
        allOf:
          - $ref: '#/definitions/DataDelayOffsetInMinutes'
          - description: >-
              A period of time (in minutes) by which inference on the data is
              delayed after the data starts. For instance, if an offset delay
              time of five minutes was selected, inference will not begin on the
              data until the first data measurement after the five minute mark.
              For example, if five minutes is selected, the inference scheduler
              will wake up at the configured frequency with the additional five
              minute delay time to check the customer S3 bucket. The customer
              can upload data at the same frequency and they don't need to stop
              and restart the scheduler when uploading new data. 
      DataUploadFrequency:
        allOf:
          - $ref: '#/definitions/DataUploadFrequency'
          - description: >-
              How often data is uploaded to the source S3 bucket for the input
              data. This value is the length of time between data uploads. For
              instance, if you select 5 minutes, Amazon Lookout for Equipment
              will upload the real-time data to the source bucket once every 5
              minutes. This frequency also determines how often Amazon Lookout
              for Equipment starts a scheduled inference on your data. In this
              example, it starts once every 5 minutes. 
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: ' The Amazon Resource Name (ARN) of the inference scheduler. '
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of the inference scheduler. '
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: ' The Amazon Resource Name (ARN) of the ML model used by the inference scheduler. '
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model used for the inference scheduler. '
      Status:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
    type: object
  IngestionInputConfiguration:
    description: ' Specifies configuration information for the input data for the data ingestion job, including input data S3 location. '
    properties:
      S3InputConfiguration:
        allOf:
          - $ref: '#/definitions/IngestionS3InputConfiguration'
          - description: >-
              The location information for the S3 bucket used for input data for
              the data ingestion. 
    required:
      - S3InputConfiguration
    type: object
  IngestionJobId:
    maxLength: 32
    pattern: '[A-Fa-f0-9]{0,32}'
    type: string
  IngestionJobStatus:
    enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
    type: string
  IngestionS3InputConfiguration:
    description: ' Specifies S3 configuration information for the input data for the data ingestion job. '
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: >-
              The name of the S3 bucket used for the input data for the data
              ingestion. 
      Prefix:
        allOf:
          - $ref: '#/definitions/S3Prefix'
          - description: >-
              The prefix for the S3 location being used for the input data for
              the data ingestion. 
    required:
      - Bucket
    type: object
  InlineDataSchema:
    maxLength: 1000000
    minLength: 1
    type: string
  InternalServerException: {}
  KmsKeyArn:
    maxLength: 1024
    minLength: 1
    pattern: 'arn:aws[a-z\-]*:kms:[a-z0-9\-]*:\d{12}:[\w\-\/]+'
    type: string
  LabelsInputConfiguration:
    description: >-
      Contains the configuration information for the S3 location being used to
      hold label data. 
    properties:
      S3InputConfiguration:
        allOf:
          - $ref: '#/definitions/LabelsS3InputConfiguration'
          - description: >-
              Contains location information for the S3 location being used for
              label data. 
    required:
      - S3InputConfiguration
    type: object
  LabelsS3InputConfiguration:
    description: >-
      The location information (prefix and bucket name) for the s3 location
      being used for label data. 
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: 'The name of the S3 bucket holding the label data. '
      Prefix:
        allOf:
          - $ref: '#/definitions/S3Prefix'
          - description: ' The prefix for the S3 bucket used for the label data. '
    required:
      - Bucket
    type: object
  ListDataIngestionJobsRequest:
    properties:
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being used for the data ingestion job. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: ' Specifies the maximum number of data ingestion jobs to list. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of data ingestion jobs. '
      Status:
        allOf:
          - $ref: '#/definitions/IngestionJobStatus'
          - description: 'Indicates the status of the data ingestion job. '
    title: ListDataIngestionJobsRequest
    type: object
  ListDataIngestionJobsResponse:
    properties:
      DataIngestionJobSummaries:
        allOf:
          - $ref: '#/definitions/DataIngestionJobSummaries'
          - description: >-
              Specifies information about the specific data ingestion job,
              including dataset name and status. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of data ingestion jobs. '
    type: object
  ListDatasetsRequest:
    properties:
      DatasetNameBeginsWith:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The beginning of the name of the datasets to be listed. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: ' Specifies the maximum number of datasets to list. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of datasets. '
    title: ListDatasetsRequest
    type: object
  ListDatasetsResponse:
    properties:
      DatasetSummaries:
        allOf:
          - $ref: '#/definitions/DatasetSummaries'
          - description: >-
              Provides information about the specified dataset, including
              creation time, dataset ARN, and status. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of datasets. '
    type: object
  ListInferenceExecutionsRequest:
    properties:
      DataEndTimeBefore:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time reference in the inferenced dataset before which Amazon
              Lookout for Equipment stopped the inference execution. 
      DataStartTimeAfter:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time reference in the inferenced dataset after which Amazon
              Lookout for Equipment started the inference execution. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: >-
              The name of the inference scheduler for the inference execution
              listed. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: 'Specifies the maximum number of inference executions to list. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              An opaque pagination token indicating where to continue the
              listing of inference executions.
      Status:
        allOf:
          - $ref: '#/definitions/InferenceExecutionStatus'
          - description: 'The status of the inference execution. '
    required:
      - InferenceSchedulerName
    title: ListInferenceExecutionsRequest
    type: object
  ListInferenceExecutionsResponse:
    properties:
      InferenceExecutionSummaries:
        allOf:
          - $ref: '#/definitions/InferenceExecutionSummaries'
          - description: >-
              Provides an array of information about the individual inference
              executions returned from the <code>ListInferenceExecutions</code>
              operation, including model used, inference scheduler, data
              configuration, and so on. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of inference executions. '
    type: object
  ListInferenceSchedulersRequest:
    properties:
      InferenceSchedulerNameBeginsWith:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: >-
              The beginning of the name of the inference schedulers to be
              listed. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: ' Specifies the maximum number of inference schedulers to list. '
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: >-
              The name of the ML model used by the inference scheduler to be
              listed. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of inference schedulers. '
    title: ListInferenceSchedulersRequest
    type: object
  ListInferenceSchedulersResponse:
    properties:
      InferenceSchedulerSummaries:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerSummaries'
          - description: >-
              Provides information about the specified inference scheduler,
              including data upload frequency, model name and ARN, and status. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of inference schedulers. '
    type: object
  ListModelsRequest:
    properties:
      DatasetNameBeginsWith:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: >-
              The beginning of the name of the dataset of the ML models to be
              listed. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: ' Specifies the maximum number of ML models to list. '
      ModelNameBeginsWith:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The beginning of the name of the ML models being listed. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of ML models. '
      Status:
        allOf:
          - $ref: '#/definitions/ModelStatus'
          - description: 'The status of the ML model. '
    title: ListModelsRequest
    type: object
  ListModelsResponse:
    properties:
      ModelSummaries:
        allOf:
          - $ref: '#/definitions/ModelSummaries'
          - description: >-
              Provides information on the specified model, including created
              time, model and dataset ARNs, and status. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' An opaque pagination token indicating where to continue the listing of ML models. '
    type: object
  ListTagsForResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource (such as the
              dataset or model) that is the focus of the
              <code>ListTagsForResource</code> operation. 
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' Any tags associated with the resource. '
    type: object
  MaxResults:
    maximum: 500
    minimum: 1
    type: integer
  ModelArn:
    maxLength: 2048
    minLength: 20
    pattern: 'arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\-]*:[0-9]{12}:model\/.+'
    type: string
  ModelMetrics:
    maxLength: 50000
    minLength: 1
    type: string
  ModelName:
    maxLength: 200
    minLength: 1
    pattern: '^[0-9a-zA-Z_-]{1,200}$'
    type: string
  ModelStatus:
    enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
    type: string
  ModelSummaries:
    items:
      $ref: '#/definitions/ModelSummary'
    type: array
  ModelSummary:
    description: >-
      Provides information about the specified ML model, including dataset and
      model names and ARNs, as well as status. 
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time at which the specific model was created. '
      DatasetArn:
        allOf:
          - $ref: '#/definitions/DatasetArn'
          - description: ' The Amazon Resource Name (ARN) of the dataset used to create the model. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: 'The name of the dataset being used for the ML model. '
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: ' The Amazon Resource Name (ARN) of the ML model. '
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model. '
      Status:
        allOf:
          - $ref: '#/definitions/ModelStatus'
          - description: 'Indicates the status of the ML model. '
    type: object
  NameOrArn:
    maxLength: 2048
    minLength: 1
    pattern: '^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$'
    type: string
  NextToken:
    maxLength: 8192
    pattern: '\p{ASCII}{0,8192}'
    type: string
  OffCondition:
    maxLength: 2048
    minLength: 1
    type: string
  ResourceNotFoundException: {}
  S3Bucket:
    maxLength: 63
    minLength: 3
    pattern: '^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$'
    type: string
  S3Key:
    maxLength: 1024
    minLength: 1
    pattern: '[\P{M}\p{M}]{1,1024}[^/]$'
    type: string
  S3Object:
    description: 'Contains information about an S3 bucket. '
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: 'The name of the specific S3 bucket. '
      Key:
        allOf:
          - $ref: '#/definitions/S3Key'
          - description: >-
              The AWS Key Management Service (AWS KMS) key being used to encrypt
              the S3 object. Without this key, data in the bucket is not
              accessible. 
    required:
      - Bucket
      - Key
    type: object
  S3Prefix:
    maxLength: 1024
    minLength: 0
    pattern: '(^$)|([\P{M}\p{M}]{1,1023}/$)'
    type: string
  ServiceQuotaExceededException: {}
  StartDataIngestionJobRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/IdempotenceToken'
          - description: ' A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. '
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetIdentifier'
          - description: 'The name of the dataset being used by the data ingestion job. '
      IngestionInputConfiguration:
        allOf:
          - $ref: '#/definitions/IngestionInputConfiguration'
          - description: ' Specifies information for the input data for the data ingestion job, including dataset S3 location. '
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission to access the data source for the data ingestion job. '
    required:
      - DatasetName
      - IngestionInputConfiguration
      - RoleArn
      - ClientToken
    title: StartDataIngestionJobRequest
    type: object
  StartDataIngestionJobResponse:
    properties:
      JobId:
        allOf:
          - $ref: '#/definitions/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
      Status:
        allOf:
          - $ref: '#/definitions/IngestionJobStatus'
          - description: >-
              Indicates the status of the <code>StartDataIngestionJob</code>
              operation. 
    type: object
  StartInferenceSchedulerRequest:
    properties:
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be started. '
    required:
      - InferenceSchedulerName
    title: StartInferenceSchedulerRequest
    type: object
  StartInferenceSchedulerResponse:
    properties:
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: >-
              The Amazon Resource Name (ARN) of the inference scheduler being
              started. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being started. '
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: >-
              The Amazon Resource Name (ARN) of the ML model being used by the
              inference scheduler. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: 'The name of the ML model being used by the inference scheduler. '
      Status:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
    type: object
  StopInferenceSchedulerRequest:
    properties:
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be stopped. '
    required:
      - InferenceSchedulerName
    title: StopInferenceSchedulerRequest
    type: object
  StopInferenceSchedulerResponse:
    properties:
      InferenceSchedulerArn:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerArn'
          - description: >-
              The Amazon Resource Name (ARN) of the inference schedule being
              stopped. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being stopped. '
      ModelArn:
        allOf:
          - $ref: '#/definitions/ModelArn'
          - description: >-
              The Amazon Resource Name (ARN) of the ML model used by the
              inference scheduler being stopped. 
      ModelName:
        allOf:
          - $ref: '#/definitions/ModelName'
          - description: >-
              The name of the ML model used by the inference scheduler being
              stopped. 
      Status:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
    type: object
  Tag:
    description: 'A tag is a key-value pair that can be added to a resource as metadata. '
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: 'The key for the specified tag. '
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: 'The value for the specified tag. '
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the specific resource to which
              the tag should be associated. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tag or tags to be associated with a specific resource. Both
              the tag key and value are specified. 
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '[\s\w+-=\.:/@]*'
    type: string
  TargetSamplingRate:
    enum:
      - PT1S
      - PT5S
      - PT10S
      - PT15S
      - PT30S
      - PT1M
      - PT5M
      - PT10M
      - PT15M
      - PT30M
      - PT1H
    type: string
  ThrottlingException: {}
  TimeZoneOffset:
    pattern: '^(\+|\-)[0-9]{2}\:[0-9]{2}$'
    type: string
  Timestamp:
    format: date-time
    type: string
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceArn'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to which the tag is
              currently associated. 
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: >-
              Specifies the key of the tag to be removed from a specified
              resource. 
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateInferenceSchedulerRequest:
    properties:
      DataDelayOffsetInMinutes:
        allOf:
          - $ref: '#/definitions/DataDelayOffsetInMinutes'
          - description: ' A period of time (in minutes) by which inference on the data is delayed after the data starts. For instance, if you select an offset delay time of five minutes, inference will not begin on the data until the first data measurement after the five minute mark. For example, if five minutes is selected, the inference scheduler will wake up at the configured frequency with the additional five minute delay time to check the customer S3 bucket. The customer can upload data at the same frequency and they don''t need to stop and restart the scheduler when uploading new data.'
      DataInputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceInputConfiguration'
          - description: ' Specifies information for the input data for the inference scheduler, including delimiter, format, and dataset location. '
      DataOutputConfiguration:
        allOf:
          - $ref: '#/definitions/InferenceOutputConfiguration'
          - description: ' Specifies information for the output results from the inference scheduler, including the output S3 location. '
      DataUploadFrequency:
        allOf:
          - $ref: '#/definitions/DataUploadFrequency'
          - description: >-
              How often data is uploaded to the source S3 bucket for the input
              data. The value chosen is the length of time between data uploads.
              For instance, if you select 5 minutes, Amazon Lookout for
              Equipment will upload the real-time data to the source bucket once
              every 5 minutes. This frequency also determines how often Amazon
              Lookout for Equipment starts a scheduled inference on your data.
              In this example, it starts once every 5 minutes. 
      InferenceSchedulerName:
        allOf:
          - $ref: '#/definitions/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be updated. '
      RoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission to access the data source for the inference scheduler. '
    required:
      - InferenceSchedulerName
    title: UpdateInferenceSchedulerRequest
    type: object
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/lookoutequipment/'
host: lookoutequipment.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    Amazon Lookout for Equipment is a machine learning service that uses
    advanced analytics to identify anomalies in machines from sensor data for
    use in predictive maintenance. 
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Lookout for Equipment
  version: '2020-12-15'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lookoutequipment-2020-12-15.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: lookoutequipment
paths:
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateDataset:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a container for a collection of data being ingested for
        analysis. The dataset contains the metadata describing where the data is
        and what the data actually looks like. In other words, it contains the
        location of the data source, the data schema, and other information. A
        dataset also contains any tags associated with the ingested data. 
      operationId: CreateDataset
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.CreateDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Creates a scheduled inference. Scheduling an inference is setting up a continuous real-time inference plan to analyze new measurement data. When setting up the schedule, you provide an S3 bucket location for the input data, assign it a delimiter between separate entries in the data, set an offset delay if desired, and set the frequency of inferencing. You must also provide an S3 bucket location for the output data. '
      operationId: CreateInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.CreateInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInferenceSchedulerResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateModel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates an ML model for data inference. </p> <p>A machine-learning
        (ML) model is a mathematical model that finds patterns in your data. In
        Amazon Lookout for Equipment, the model learns the patterns of normal
        behavior and detects abnormal behavior that could be potential equipment
        failure (or maintenance events). The models are made by analyzing normal
        data and abnormalities in machine behavior that have already
        occurred.</p> <p>Your model is trained using a portion of the data from
        your dataset and uses that data to learn patterns of normal behavior and
        abnormal patterns that lead to equipment failure. Another portion of the
        data is used to evaluate the model's accuracy. </p>
      operationId: CreateModel
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.CreateModel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateModelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateModelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteDataset:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Deletes a dataset and associated artifacts. The operation will check to see if any inference scheduler or data ingestion job is currently using the dataset, and if there isn''t, the dataset, its metadata, and any associated data stored in S3 will be deleted. This does not affect any models that used this dataset for training and evaluation, but does prevent it from being used in the future. '
      operationId: DeleteDataset
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DeleteDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatasetRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an inference scheduler that has been set up. Already processed
        output results are not affected. 
      operationId: DeleteInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DeleteInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteModel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an ML model currently available for Amazon Lookout for
        Equipment. This will prevent it from being used with an inference
        scheduler, even one that is already set up. 
      operationId: DeleteModel
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DeleteModel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteModelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeDataIngestionJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides information on a specific data ingestion job such as creation
        time, dataset ARN, status, and so on. 
      operationId: DescribeDataIngestionJob
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DescribeDataIngestionJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDataIngestionJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataIngestionJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeDataset:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a JSON description of the data that is in each time series
        dataset, including names, column names, and data types.
      operationId: DescribeDataset
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DescribeDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Specifies information about the inference scheduler being used, including name, model, status, and associated metadata '
      operationId: DescribeInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DescribeInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInferenceSchedulerResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeModel:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a JSON containing the overall information about a specific ML
        model, including model name and ARN, dataset, training and evaluation
        information, status, and so on. 
      operationId: DescribeModel
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.DescribeModel
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeModelRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeModelResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListDataIngestionJobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a list of all data ingestion jobs, including dataset name and
        ARN, S3 location of the input data, status, and so on. 
      operationId: ListDataIngestionJobs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSLookoutEquipmentFrontendService.ListDataIngestionJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDataIngestionJobsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDataIngestionJobsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListDatasets:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all datasets currently available in your account, filtering on the
        dataset name. 
      operationId: ListDatasets
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSLookoutEquipmentFrontendService.ListDatasets
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListInferenceExecutions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Lists all inference executions that have been performed by the specified inference scheduler. '
      operationId: ListInferenceExecutions
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSLookoutEquipmentFrontendService.ListInferenceExecutions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListInferenceExecutionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInferenceExecutionsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListInferenceSchedulers:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Retrieves a list of all inference schedulers currently available for
        your account. 
      operationId: ListInferenceSchedulers
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSLookoutEquipmentFrontendService.ListInferenceSchedulers
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListInferenceSchedulersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInferenceSchedulersResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListModels:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Generates a list of all models in the account, including model name and
        ARN, dataset, and status. 
      operationId: ListModels
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSLookoutEquipmentFrontendService.ListModels
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListModelsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListModelsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Lists all the tags for a specified resource, including key and value. '
      operationId: ListTagsForResource
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StartDataIngestionJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Starts a data ingestion job. Amazon Lookout for Equipment returns the
        job status. 
      operationId: StartDataIngestionJob
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.StartDataIngestionJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartDataIngestionJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartDataIngestionJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StartInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Starts an inference scheduler. '
      operationId: StartInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.StartInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartInferenceSchedulerResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StopInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Stops an inference scheduler. '
      operationId: StopInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.StopInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopInferenceSchedulerResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Associates a given tag to a resource in your account. A tag is a
        key-value pair which can be added to an Amazon Lookout for Equipment
        resource as metadata. Tags can be used for organizing your resources as
        well as helping you to search and filter by tag. Multiple tags can be
        added to a resource, either when you create it, or later. Up to 50 tags
        can be associated with each resource. 
      operationId: TagResource
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Removes a specific tag from a given resource. The tag is specified by
        its key. 
      operationId: UntagResource
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UpdateInferenceScheduler:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Updates an inference scheduler. '
      operationId: UpdateInferenceScheduler
      parameters:
        - enum:
            - AWSLookoutEquipmentFrontendService.UpdateInferenceScheduler
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateInferenceSchedulerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

