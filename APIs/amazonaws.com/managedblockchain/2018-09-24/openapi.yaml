basePath: /
definitions:
  AccessDeniedException: {}
  ApprovalThresholdPolicy:
    description: >-
      <p>A policy type that defines the voting rules for the network. The rules
      decide if a proposal is approved. Approval may be based on criteria such
      as the percentage of <code>YES</code> votes and the duration of the
      proposal. The policy applies to all proposals and is specified when the
      network is created.</p> <p>Applies only to Hyperledger Fabric.</p>
    properties:
      ProposalDurationInHours:
        allOf:
          - $ref: '#/definitions/ProposalDurationInt'
          - description: >-
              The duration from the time that a proposal is created until it
              expires. If members cast neither the required number of
              <code>YES</code> votes to approve the proposal nor the number of
              <code>NO</code> votes required to reject it before the duration
              expires, the proposal is <code>EXPIRED</code> and
              <code>ProposalActions</code> are not carried out.
      ThresholdComparator:
        allOf:
          - $ref: '#/definitions/ThresholdComparator'
          - description: >-
              Determines whether the vote percentage must be greater than the
              <code>ThresholdPercentage</code> or must be greater than or equal
              to the <code>ThreholdPercentage</code> to be approved.
      ThresholdPercentage:
        allOf:
          - $ref: '#/definitions/ThresholdPercentageInt'
          - description: >-
              The percentage of votes among all members that must be
              <code>YES</code> for a proposal to be approved. For example, a
              <code>ThresholdPercentage</code> value of <code>50</code>
              indicates 50%. The <code>ThresholdComparator</code> determines the
              precise comparison. If a <code>ThresholdPercentage</code> value of
              <code>50</code> is specified on a network with 10 members, along
              with a <code>ThresholdComparator</code> value of
              <code>GREATER_THAN</code>, this indicates that 6 <code>YES</code>
              votes are required for the proposal to be approved.
    type: object
  ArnString:
    maxLength: 1011
    minLength: 1
    pattern: '^arn:.+:.+:.+:.+:.+'
    type: string
  AvailabilityZoneString:
    type: string
  ClientRequestTokenString:
    maxLength: 64
    minLength: 1
    type: string
  CreateMemberInput:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestTokenString'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the operation. An idempotent operation completes no
              more than one time. This identifier is required only if you make a
              service request directly using an HTTP client. It is generated
              automatically if you use an AWS SDK or the AWS CLI.
      InvitationId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              The unique identifier of the invitation that is sent to the member
              to join the network.
      MemberConfiguration:
        allOf:
          - $ref: '#/definitions/MemberConfiguration'
          - description: Member configuration parameters.
    required:
      - ClientRequestToken
      - InvitationId
      - MemberConfiguration
    title: CreateMemberInput
    type: object
  CreateMemberOutput:
    properties:
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the member.
    type: object
  CreateNetworkInput:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestTokenString'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the operation. An idempotent operation completes no
              more than one time. This identifier is required only if you make a
              service request directly using an HTTP client. It is generated
              automatically if you use an AWS SDK or the AWS CLI.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: An optional description for the network.
      Framework:
        allOf:
          - $ref: '#/definitions/Framework'
          - description: The blockchain framework that the network uses.
      FrameworkConfiguration:
        allOf:
          - $ref: '#/definitions/NetworkFrameworkConfiguration'
          - description: ' Configuration properties of the blockchain framework relevant to the network configuration. '
      FrameworkVersion:
        allOf:
          - $ref: '#/definitions/FrameworkVersionString'
          - description: The version of the blockchain framework that the network uses.
      MemberConfiguration:
        allOf:
          - $ref: '#/definitions/MemberConfiguration'
          - description: Configuration properties for the first member within the network.
      Name:
        allOf:
          - $ref: '#/definitions/NameString'
          - description: The name of the network.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagMap'
          - description: >-
              <p>Tags to assign to the network. Each tag consists of a key and
              optional value.</p> <p>When specifying tags during creation, you
              can specify multiple key-value pairs in a single request, with an
              overall maximum of 50 tags added to each resource.</p> <p>For more
              information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
      VotingPolicy:
        allOf:
          - $ref: '#/definitions/VotingPolicy'
          - description: ' The voting rules used by the network to determine if a proposal is approved. '
    required:
      - ClientRequestToken
      - Name
      - Framework
      - FrameworkVersion
      - VotingPolicy
      - MemberConfiguration
    title: CreateNetworkInput
    type: object
  CreateNetworkOutput:
    properties:
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier for the first member within the network.
      NetworkId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier for the network.
    type: object
  CreateNodeInput:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestTokenString'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the operation. An idempotent operation completes no
              more than one time. This identifier is required only if you make a
              service request directly using an HTTP client. It is generated
              automatically if you use an AWS SDK or the AWS CLI.
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              <p>The unique identifier of the member that owns this node.</p>
              <p>Applies only to Hyperledger Fabric.</p>
      NodeConfiguration:
        allOf:
          - $ref: '#/definitions/NodeConfiguration'
          - description: The properties of a node configuration.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagMap'
          - description: >-
              <p>Tags to assign to the node. Each tag consists of a key and
              optional value.</p> <p>When specifying tags during creation, you
              can specify multiple key-value pairs in a single request, with an
              overall maximum of 50 tags added to each resource.</p> <p>For more
              information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
    required:
      - ClientRequestToken
      - NodeConfiguration
    title: CreateNodeInput
    type: object
  CreateNodeOutput:
    properties:
      NodeId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the node.
    type: object
  CreateProposalInput:
    properties:
      Actions:
        allOf:
          - $ref: '#/definitions/ProposalActions'
          - description: >-
              The type of actions proposed, such as inviting a member or
              removing a member. The types of <code>Actions</code> in a proposal
              are mutually exclusive. For example, a proposal with
              <code>Invitations</code> actions cannot also contain
              <code>Removals</code> actions.
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestTokenString'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the operation. An idempotent operation completes no
              more than one time. This identifier is required only if you make a
              service request directly using an HTTP client. It is generated
              automatically if you use an AWS SDK or the AWS CLI.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: >-
              A description for the proposal that is visible to voting members,
              for example, "Proposal to add Example Corp. as member."
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              The unique identifier of the member that is creating the proposal.
              This identifier is especially useful for identifying the member
              making the proposal when multiple members exist in a single AWS
              account.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagMap'
          - description: >-
              <p>Tags to assign to the proposal. Each tag consists of a key and
              optional value.</p> <p>When specifying tags during creation, you
              can specify multiple key-value pairs in a single request, with an
              overall maximum of 50 tags added to each resource. If the proposal
              is for a network invitation, the invitation inherits the tags
              added to the proposal.</p> <p>For more information about tags, see
              <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
    required:
      - ClientRequestToken
      - MemberId
      - Actions
    title: CreateProposalInput
    type: object
  CreateProposalOutput:
    properties:
      ProposalId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the proposal.
    type: object
  DeleteMemberInput:
    properties: {}
    title: DeleteMemberInput
    type: object
  DeleteMemberOutput:
    properties: {}
    type: object
  DeleteNodeInput:
    properties: {}
    title: DeleteNodeInput
    type: object
  DeleteNodeOutput:
    properties: {}
    type: object
  DescriptionString:
    maxLength: 128
    type: string
  Edition:
    enum:
      - STARTER
      - STANDARD
    type: string
  Enabled:
    type: boolean
  Framework:
    enum:
      - HYPERLEDGER_FABRIC
      - ETHEREUM
    type: string
  FrameworkVersionString:
    maxLength: 8
    minLength: 1
    type: string
  GetMemberInput:
    properties: {}
    title: GetMemberInput
    type: object
  GetMemberOutput:
    properties:
      Member:
        allOf:
          - $ref: '#/definitions/Member'
          - description: The properties of a member.
    type: object
  GetNetworkInput:
    properties: {}
    title: GetNetworkInput
    type: object
  GetNetworkOutput:
    properties:
      Network:
        allOf:
          - $ref: '#/definitions/Network'
          - description: An object containing network configuration parameters.
    type: object
  GetNodeInput:
    properties: {}
    title: GetNodeInput
    type: object
  GetNodeOutput:
    properties:
      Node:
        allOf:
          - $ref: '#/definitions/Node'
          - description: Properties of the node configuration.
    type: object
  GetProposalInput:
    properties: {}
    title: GetProposalInput
    type: object
  GetProposalOutput:
    properties:
      Proposal:
        allOf:
          - $ref: '#/definitions/Proposal'
          - description: Information about a proposal.
    type: object
  IllegalActionException: {}
  InputTagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 0
    type: object
  InstanceTypeString:
    type: string
  InternalServiceErrorException: {}
  InvalidRequestException: {}
  Invitation:
    description: >-
      <p>An invitation to an AWS account to create a member and join the
      network.</p> <p>Applies only to Hyperledger Fabric.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the invitation. For more
              information about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the invitation was created.
      ExpirationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time that the invitation expires. This is the
              <code>CreationDate</code> plus the
              <code>ProposalDurationInHours</code> that is specified in the
              <code>ProposalThresholdPolicy</code>. After this date and time,
              the invitee can no longer create a member and join the network
              using this <code>InvitationId</code>.
      InvitationId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier for the invitation.
      NetworkSummary:
        $ref: '#/definitions/NetworkSummary'
      Status:
        allOf:
          - $ref: '#/definitions/InvitationStatus'
          - description: >-
              <p>The status of the invitation:</p> <ul> <li> <p>
              <code>PENDING</code> - The invitee has not created a member to
              join the network, and the invitation has not yet expired.</p>
              </li> <li> <p> <code>ACCEPTING</code> - The invitee has begun
              creating a member, and creation has not yet completed.</p> </li>
              <li> <p> <code>ACCEPTED</code> - The invitee created a member and
              joined the network using the <code>InvitationID</code>.</p> </li>
              <li> <p> <code>REJECTED</code> - The invitee rejected the
              invitation.</p> </li> <li> <p> <code>EXPIRED</code> - The invitee
              neither created a member nor rejected the invitation before the
              <code>ExpirationDate</code>.</p> </li> </ul>
    type: object
  InvitationList:
    items:
      $ref: '#/definitions/Invitation'
    type: array
  InvitationStatus:
    enum:
      - PENDING
      - ACCEPTED
      - ACCEPTING
      - REJECTED
      - EXPIRED
    type: string
  InviteAction:
    description: >-
      <p>An action to invite a specific AWS account to create a member and join
      the network. The <code>InviteAction</code> is carried out when a
      <code>Proposal</code> is <code>APPROVED</code>.</p> <p>Applies only to
      Hyperledger Fabric.</p>
    properties:
      Principal:
        allOf:
          - $ref: '#/definitions/PrincipalString'
          - description: The AWS account ID to invite.
    required:
      - Principal
    type: object
  InviteActionList:
    items:
      $ref: '#/definitions/InviteAction'
    type: array
  IsOwned:
    type: boolean
  ListInvitationsInput:
    properties: {}
    title: ListInvitationsInput
    type: object
  ListInvitationsOutput:
    properties:
      Invitations:
        allOf:
          - $ref: '#/definitions/InvitationList'
          - description: The invitations for the network.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The pagination token that indicates the next set of results to
              retrieve.
    type: object
  ListMembersInput:
    properties: {}
    title: ListMembersInput
    type: object
  ListMembersOutput:
    properties:
      Members:
        allOf:
          - $ref: '#/definitions/MemberSummaryList'
          - description: >-
              An array of <code>MemberSummary</code> objects. Each object
              contains details about a network member.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The pagination token that indicates the next set of results to
              retrieve.
    type: object
  ListNetworksInput:
    properties: {}
    title: ListNetworksInput
    type: object
  ListNetworksOutput:
    properties:
      Networks:
        allOf:
          - $ref: '#/definitions/NetworkSummaryList'
          - description: >-
              An array of <code>NetworkSummary</code> objects that contain
              configuration properties for each network.
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The pagination token that indicates the next set of results to
              retrieve.
    type: object
  ListNodesInput:
    properties: {}
    title: ListNodesInput
    type: object
  ListNodesOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The pagination token that indicates the next set of results to
              retrieve.
      Nodes:
        allOf:
          - $ref: '#/definitions/NodeSummaryList'
          - description: >-
              An array of <code>NodeSummary</code> objects that contain
              configuration properties for each node.
    type: object
  ListProposalVotesInput:
    properties: {}
    title: ListProposalVotesInput
    type: object
  ListProposalVotesOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: ' The pagination token that indicates the next set of results to retrieve. '
      ProposalVotes:
        allOf:
          - $ref: '#/definitions/ProposalVoteList'
          - description: ' The list of votes. '
    type: object
  ListProposalsInput:
    properties: {}
    title: ListProposalsInput
    type: object
  ListProposalsOutput:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/PaginationToken'
          - description: >-
              The pagination token that indicates the next set of results to
              retrieve.
      Proposals:
        allOf:
          - $ref: '#/definitions/ProposalSummaryList'
          - description: The summary of each proposal made on the network.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagMap'
          - description: The tags assigned to the resource.
    type: object
  LogConfiguration:
    description: A configuration for logging events.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/Enabled'
          - description: Indicates whether logging is enabled.
    type: object
  LogConfigurations:
    description: A collection of log configurations.
    properties:
      Cloudwatch:
        allOf:
          - $ref: '#/definitions/LogConfiguration'
          - description: Parameters for publishing logs to Amazon CloudWatch Logs.
    type: object
  Member:
    description: >-
      <p>Member configuration properties.</p> <p>Applies only to Hyperledger
      Fabric.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the member. For more information
              about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the member was created.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: An optional description for the member.
      FrameworkAttributes:
        allOf:
          - $ref: '#/definitions/MemberFrameworkAttributes'
          - description: >-
              Attributes relevant to a member for the blockchain framework that
              the Managed Blockchain network uses.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the member.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the customer managed key in AWS
              Key Management Service (AWS KMS) that the member uses for
              encryption at rest. If the value of this parameter is <code>"AWS
              Owned KMS Key"</code>, the member uses an AWS owned KMS key for
              encryption. This parameter is inherited by the nodes that this
              member owns.
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/MemberLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a
              member.
      Name:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: The name of the member.
      NetworkId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the network to which the member belongs.
      Status:
        allOf:
          - $ref: '#/definitions/MemberStatus'
          - description: >-
              <p>The status of a member.</p> <ul> <li> <p> <code>CREATING</code>
              - The AWS account is in the process of creating a member.</p>
              </li> <li> <p> <code>AVAILABLE</code> - The member has been
              created and can participate in the network.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> - The AWS account attempted to create a
              member and creation failed.</p> </li> <li> <p>
              <code>UPDATING</code> - The member is in the process of being
              updated.</p> </li> <li> <p> <code>DELETING</code> - The member and
              all associated resources are in the process of being deleted.
              Either the AWS account that owns the member deleted it, or the
              member is being deleted as the result of an <code>APPROVED</code>
              <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p>
              <code>DELETED</code> - The member can no longer participate on the
              network and all associated resources are deleted. Either the AWS
              account that owns the member deleted it, or the member is being
              deleted as the result of an <code>APPROVED</code>
              <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p>
              <code>INACCESSIBLE_ENCRYPTION_KEY</code> - The member is impaired
              and might not function as expected because it cannot access the
              specified customer managed key in AWS KMS for encryption at rest.
              Either the KMS key was disabled or deleted, or the grants on the
              key were revoked.</p> <p>The effect of disabling or deleting a
              key, or revoking a grant is not immediate. The member resource
              might take some time to find that the key is inaccessible. When a
              resource is in this state, we recommend deleting and recreating
              the resource.</p> </li> </ul>
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagMap'
          - description: >-
              Tags assigned to the member. Tags consist of a key and optional
              value. For more information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.
    type: object
  MemberConfiguration:
    description: >-
      <p>Configuration properties of the member.</p> <p>Applies only to
      Hyperledger Fabric.</p>
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: An optional description of the member.
      FrameworkConfiguration:
        allOf:
          - $ref: '#/definitions/MemberFrameworkConfiguration'
          - description: >-
              Configuration properties of the blockchain framework relevant to
              the member.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the customer managed key in
              AWS Key Management Service (AWS KMS) to use for encryption at rest
              in the member. This parameter is inherited by any nodes that this
              member creates.</p> <p>Use one of the following options to specify
              this parameter:</p> <ul> <li> <p> <b>Undefined or empty string</b>
              - The member uses an AWS owned KMS key for encryption by
              default.</p> </li> <li> <p> <b>A valid symmetric customer managed
              KMS key</b> - The member uses the specified key for
              encryption.</p> <p>Amazon Managed Blockchain doesn't support
              asymmetric keys. For more information, see <a
              href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
              symmetric and asymmetric keys</a> in the <i>AWS Key Management
              Service Developer Guide</i>.</p> <p>The following is an example of
              a KMS key ARN:
              <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
              </p> </li> </ul>
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/MemberLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a
              member of a Managed Blockchain network.
      Name:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: The name of the member.
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagMap'
          - description: >-
              <p>Tags assigned to the member. Tags consist of a key and optional
              value. For more information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p> <p>When specifying tags during
              creation, you can specify multiple key-value pairs in a single
              request, with an overall maximum of 50 tags added to each
              resource.</p>
    required:
      - Name
      - FrameworkConfiguration
    type: object
  MemberFabricAttributes:
    description: >-
      Attributes of Hyperledger Fabric for a member in a Managed Blockchain
      network using the Hyperledger Fabric framework.
    properties:
      AdminUsername:
        allOf:
          - $ref: '#/definitions/UsernameString'
          - description: The user name for the initial administrator user for the member.
      CaEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: The endpoint used to access the member's certificate authority.
    type: object
  MemberFabricConfiguration:
    description: >-
      Configuration properties for Hyperledger Fabric for a member in a Managed
      Blockchain network using the Hyperledger Fabric framework.
    properties:
      AdminPassword:
        allOf:
          - $ref: '#/definitions/PasswordString'
          - description: >-
              The password for the member's initial administrative user. The
              <code>AdminPassword</code> must be at least eight characters long
              and no more than 32 characters. It must contain at least one
              uppercase letter, one lowercase letter, and one digit. It cannot
              have a single quotation mark (‘), a double quotation marks (“), a
              forward slash(/), a backward slash(\), @, or a space.
      AdminUsername:
        allOf:
          - $ref: '#/definitions/UsernameString'
          - description: The user name for the member's initial administrative user.
    required:
      - AdminUsername
      - AdminPassword
    type: object
  MemberFabricLogPublishingConfiguration:
    description: >-
      Configuration properties for logging events associated with a member of a
      Managed Blockchain network using the Hyperledger Fabric framework.
    properties:
      CaLogs:
        allOf:
          - $ref: '#/definitions/LogConfigurations'
          - description: >-
              Configuration properties for logging events associated with a
              member's Certificate Authority (CA). CA logs help you determine
              when a member in your account joins the network, or when new peers
              register with a member CA.
    type: object
  MemberFrameworkAttributes:
    description: >-
      Attributes relevant to a member for the blockchain framework that the
      Managed Blockchain network uses.
    properties:
      Fabric:
        allOf:
          - $ref: '#/definitions/MemberFabricAttributes'
          - description: >-
              Attributes of Hyperledger Fabric relevant to a member on a Managed
              Blockchain network that uses Hyperledger Fabric.
    type: object
  MemberFrameworkConfiguration:
    description: >-
      Configuration properties relevant to a member for the blockchain framework
      that the Managed Blockchain network uses.
    properties:
      Fabric:
        allOf:
          - $ref: '#/definitions/MemberFabricConfiguration'
          - description: >-
              Attributes of Hyperledger Fabric for a member on a Managed
              Blockchain network that uses Hyperledger Fabric.
    type: object
  MemberListMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  MemberLogPublishingConfiguration:
    description: >-
      Configuration properties for logging events associated with a member of a
      Managed Blockchain network.
    properties:
      Fabric:
        allOf:
          - $ref: '#/definitions/MemberFabricLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a
              member of a Managed Blockchain network using the Hyperledger
              Fabric framework.
    type: object
  MemberStatus:
    enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - UPDATING
      - DELETING
      - DELETED
      - INACCESSIBLE_ENCRYPTION_KEY
    type: string
  MemberSummary:
    description: >-
      <p>A summary of configuration properties for a member.</p> <p>Applies only
      to Hyperledger Fabric.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the member. For more information
              about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the member was created.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: An optional description of the member.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the member.
      IsOwned:
        allOf:
          - $ref: '#/definitions/IsOwned'
          - description: >-
              An indicator of whether the member is owned by your AWS account or
              a different AWS account.
      Name:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: The name of the member.
      Status:
        allOf:
          - $ref: '#/definitions/MemberStatus'
          - description: >-
              <p>The status of the member.</p> <ul> <li> <p>
              <code>CREATING</code> - The AWS account is in the process of
              creating a member.</p> </li> <li> <p> <code>AVAILABLE</code> - The
              member has been created and can participate in the network.</p>
              </li> <li> <p> <code>CREATE_FAILED</code> - The AWS account
              attempted to create a member and creation failed.</p> </li> <li>
              <p> <code>UPDATING</code> - The member is in the process of being
              updated.</p> </li> <li> <p> <code>DELETING</code> - The member and
              all associated resources are in the process of being deleted.
              Either the AWS account that owns the member deleted it, or the
              member is being deleted as the result of an <code>APPROVED</code>
              <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p>
              <code>DELETED</code> - The member can no longer participate on the
              network and all associated resources are deleted. Either the AWS
              account that owns the member deleted it, or the member is being
              deleted as the result of an <code>APPROVED</code>
              <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p>
              <code>INACCESSIBLE_ENCRYPTION_KEY</code> - The member is impaired
              and might not function as expected because it cannot access the
              specified customer managed key in AWS Key Management Service (AWS
              KMS) for encryption at rest. Either the KMS key was disabled or
              deleted, or the grants on the key were revoked.</p> <p>The effect
              of disabling or deleting a key, or revoking a grant is not
              immediate. The member resource might take some time to find that
              the key is inaccessible. When a resource is in this state, we
              recommend deleting and recreating the resource.</p> </li> </ul>
    type: object
  MemberSummaryList:
    items:
      $ref: '#/definitions/MemberSummary'
    type: array
  NameString:
    maxLength: 64
    minLength: 1
    pattern: .*\S.*
    type: string
  Network:
    description: Network configuration properties.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the network. For more
              information about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the network was created.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: Attributes of the blockchain framework for the network.
      Framework:
        allOf:
          - $ref: '#/definitions/Framework'
          - description: The blockchain framework that the network uses.
      FrameworkAttributes:
        allOf:
          - $ref: '#/definitions/NetworkFrameworkAttributes'
          - description: Attributes of the blockchain framework that the network uses.
      FrameworkVersion:
        allOf:
          - $ref: '#/definitions/FrameworkVersionString'
          - description: The version of the blockchain framework that the network uses.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the network.
      Name:
        allOf:
          - $ref: '#/definitions/NameString'
          - description: The name of the network.
      Status:
        allOf:
          - $ref: '#/definitions/NetworkStatus'
          - description: The current status of the network.
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagMap'
          - description: >-
              <p>Tags assigned to the network. Each tag consists of a key and
              optional value.</p> <p>For more information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
      VotingPolicy:
        allOf:
          - $ref: '#/definitions/VotingPolicy'
          - description: >-
              The voting rules for the network to decide if a proposal is
              accepted.
      VpcEndpointServiceName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The VPC endpoint service name of the VPC endpoint service of the
              network. Members use the VPC endpoint service name to create a VPC
              endpoint to access network resources.
    type: object
  NetworkEthereumAttributes:
    description: 'Attributes of Ethereum for a network. '
    properties:
      ChainId:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The Ethereum <code>CHAIN_ID</code> associated with the Ethereum
              network. Chain IDs are as follows:</p> <ul> <li> <p>mainnet =
              <code>1</code> </p> </li> <li> <p>rinkeby = <code>4</code> </p>
              </li> <li> <p>ropsten = <code>3</code> </p> </li> </ul>
    type: object
  NetworkFabricAttributes:
    description: Attributes of Hyperledger Fabric for a network.
    properties:
      Edition:
        allOf:
          - $ref: '#/definitions/Edition'
          - description: >-
              The edition of Amazon Managed Blockchain that Hyperledger Fabric
              uses. For more information, see <a
              href="http://aws.amazon.com/managed-blockchain/pricing/">Amazon
              Managed Blockchain Pricing</a>.
      OrderingServiceEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: The endpoint of the ordering service for the network.
    type: object
  NetworkFabricConfiguration:
    description: Hyperledger Fabric configuration properties for the network.
    properties:
      Edition:
        allOf:
          - $ref: '#/definitions/Edition'
          - description: >-
              The edition of Amazon Managed Blockchain that the network uses.
              For more information, see <a
              href="http://aws.amazon.com/managed-blockchain/pricing/">Amazon
              Managed Blockchain Pricing</a>.
    required:
      - Edition
    type: object
  NetworkFrameworkAttributes:
    description: >-
      Attributes relevant to the network for the blockchain framework that the
      network uses.
    properties:
      Ethereum:
        allOf:
          - $ref: '#/definitions/NetworkEthereumAttributes'
          - description: >-
              Attributes of an Ethereum network for Managed Blockchain resources
              participating in an Ethereum network. 
      Fabric:
        allOf:
          - $ref: '#/definitions/NetworkFabricAttributes'
          - description: >-
              Attributes of Hyperledger Fabric for a Managed Blockchain network
              that uses Hyperledger Fabric.
    type: object
  NetworkFrameworkConfiguration:
    description: ' Configuration properties relevant to the network for the blockchain framework that the network uses. '
    properties:
      Fabric:
        allOf:
          - $ref: '#/definitions/NetworkFabricConfiguration'
          - description: ' Hyperledger Fabric configuration properties for a Managed Blockchain network that uses Hyperledger Fabric. '
    type: object
  NetworkListMaxResults:
    maximum: 10
    minimum: 1
    type: integer
  NetworkMemberNameString:
    maxLength: 64
    minLength: 1
    pattern: '^(?!-|[0-9])(?!.*-$)(?!.*?--)[a-zA-Z0-9-]+$'
    type: string
  NetworkStatus:
    enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - DELETING
      - DELETED
    type: string
  NetworkSummary:
    description: A summary of network configuration properties.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the network. For more
              information about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the network was created.
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: An optional description of the network.
      Framework:
        allOf:
          - $ref: '#/definitions/Framework'
          - description: The blockchain framework that the network uses.
      FrameworkVersion:
        allOf:
          - $ref: '#/definitions/FrameworkVersionString'
          - description: The version of the blockchain framework that the network uses.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the network.
      Name:
        allOf:
          - $ref: '#/definitions/NameString'
          - description: The name of the network.
      Status:
        allOf:
          - $ref: '#/definitions/NetworkStatus'
          - description: The current status of the network.
    type: object
  NetworkSummaryList:
    items:
      $ref: '#/definitions/NetworkSummary'
    type: array
  Node:
    description: Configuration properties of a node.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the node. For more information
              about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneString'
          - description: >-
              The Availability Zone in which the node exists. Required for
              Ethereum nodes. 
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the node was created.
      FrameworkAttributes:
        allOf:
          - $ref: '#/definitions/NodeFrameworkAttributes'
          - description: Attributes of the blockchain framework being used.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the node.
      InstanceType:
        allOf:
          - $ref: '#/definitions/InstanceTypeString'
          - description: The instance type of the node.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the customer managed key in
              AWS Key Management Service (AWS KMS) that the node uses for
              encryption at rest. If the value of this parameter is <code>"AWS
              Owned KMS Key"</code>, the node uses an AWS owned KMS key for
              encryption. The node inherits this parameter from the member that
              it belongs to.</p> <p>Applies only to Hyperledger Fabric.</p>
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/NodeLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a peer
              node on a Hyperledger Fabric network on Managed Blockchain.
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              <p>The unique identifier of the member to which the node
              belongs.</p> <p>Applies only to Hyperledger Fabric.</p>
      NetworkId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the network that the node is on.
      StateDB:
        allOf:
          - $ref: '#/definitions/StateDBType'
          - description: >-
              <p>The state database that the node uses. Values are
              <code>LevelDB</code> or <code>CouchDB</code>.</p> <p>Applies only
              to Hyperledger Fabric.</p>
      Status:
        allOf:
          - $ref: '#/definitions/NodeStatus'
          - description: >-
              <p>The status of the node.</p> <ul> <li> <p> <code>CREATING</code>
              - The AWS account is in the process of creating a node.</p> </li>
              <li> <p> <code>AVAILABLE</code> - The node has been created and
              can participate in the network.</p> </li> <li> <p>
              <code>UNHEALTHY</code> - The node is impaired and might not
              function as expected. Amazon Managed Blockchain automatically
              finds nodes in this state and tries to recover them. If a node is
              recoverable, it returns to <code>AVAILABLE</code>. Otherwise, it
              moves to <code>FAILED</code> status.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> - The AWS account attempted to create a
              node and creation failed.</p> </li> <li> <p> <code>UPDATING</code>
              - The node is in the process of being updated.</p> </li> <li> <p>
              <code>DELETING</code> - The node is in the process of being
              deleted.</p> </li> <li> <p> <code>DELETED</code> - The node can no
              longer participate on the network.</p> </li> <li> <p>
              <code>FAILED</code> - The node is no longer functional, cannot be
              recovered, and must be deleted.</p> </li> <li> <p>
              <code>INACCESSIBLE_ENCRYPTION_KEY</code> - The node is impaired
              and might not function as expected because it cannot access the
              specified customer managed key in AWS KMS for encryption at rest.
              Either the KMS key was disabled or deleted, or the grants on the
              key were revoked.</p> <p>The effect of disabling or deleting a
              key, or revoking a grant is not immediate. The node resource might
              take some time to find that the key is inaccessible. When a
              resource is in this state, we recommend deleting and recreating
              the resource.</p> </li> </ul>
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagMap'
          - description: >-
              <p>Tags assigned to the node. Each tag consists of a key and
              optional value.</p> <p>For more information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
    type: object
  NodeConfiguration:
    description: Configuration properties of a node.
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneString'
          - description: >-
              The Availability Zone in which the node exists. Required for
              Ethereum nodes. 
      InstanceType:
        allOf:
          - $ref: '#/definitions/InstanceTypeString'
          - description: The Amazon Managed Blockchain instance type for the node.
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/NodeLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a peer
              node on a Hyperledger Fabric network on Managed Blockchain. 
      StateDB:
        allOf:
          - $ref: '#/definitions/StateDBType'
          - description: >-
              <p>The state database that the node uses. Values are
              <code>LevelDB</code> or <code>CouchDB</code>. When using an Amazon
              Managed Blockchain network with Hyperledger Fabric version 1.4 or
              later, the default is <code>CouchDB</code>.</p> <p>Applies only to
              Hyperledger Fabric.</p>
    required:
      - InstanceType
    type: object
  NodeEthereumAttributes:
    description: Attributes of an Ethereum node.
    properties:
      HttpEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The endpoint on which the Ethereum node listens to run Ethereum
              JSON-RPC methods over HTTP connections from a client. Use this
              endpoint in client code for smart contracts when using an HTTP
              connection. Connections to this endpoint are authenticated using
              <a
              href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
              Version 4</a>.
      WebSocketEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The endpoint on which the Ethereum node listens to run Ethereum
              JSON-RPC methods over WebSockets connections from a client. Use
              this endpoint in client code for smart contracts when using a
              WebSockets connection. Connections to this endpoint are
              authenticated using <a
              href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
              Version 4</a>.
    type: object
  NodeFabricAttributes:
    description: >-
      Attributes of Hyperledger Fabric for a peer node on a Hyperledger Fabric
      network on Managed Blockchain.
    properties:
      PeerEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The endpoint that identifies the peer node for all services except
              peer channel-based event services.
      PeerEventEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The endpoint that identifies the peer node for peer channel-based
              event services.
    type: object
  NodeFabricLogPublishingConfiguration:
    description: >-
      Configuration properties for logging events associated with a peer node
      owned by a member in a Managed Blockchain network.
    properties:
      ChaincodeLogs:
        allOf:
          - $ref: '#/definitions/LogConfigurations'
          - description: >-
              Configuration properties for logging events associated with
              chaincode execution on a peer node. Chaincode logs contain the
              results of instantiating, invoking, and querying the chaincode. A
              peer can run multiple instances of chaincode. When enabled, a log
              stream is created for all chaincodes, with an individual log
              stream for each chaincode.
      PeerLogs:
        allOf:
          - $ref: '#/definitions/LogConfigurations'
          - description: >-
              Configuration properties for a peer node log. Peer node logs
              contain messages generated when your client submits transaction
              proposals to peer nodes, requests to join channels, enrolls an
              admin peer, and lists the chaincode instances on a peer node. 
    type: object
  NodeFrameworkAttributes:
    description: >-
      Attributes relevant to a node on a Managed Blockchain network for the
      blockchain framework that the network uses.
    properties:
      Ethereum:
        allOf:
          - $ref: '#/definitions/NodeEthereumAttributes'
          - description: >-
              Attributes of Ethereum for a node on a Managed Blockchain network
              that uses Ethereum. 
      Fabric:
        allOf:
          - $ref: '#/definitions/NodeFabricAttributes'
          - description: >-
              Attributes of Hyperledger Fabric for a peer node on a Managed
              Blockchain network that uses Hyperledger Fabric.
    type: object
  NodeListMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  NodeLogPublishingConfiguration:
    description: >-
      Configuration properties for logging events associated with a peer node on
      a Hyperledger Fabric network on Managed Blockchain.
    properties:
      Fabric:
        allOf:
          - $ref: '#/definitions/NodeFabricLogPublishingConfiguration'
          - description: >-
              Configuration properties for logging events associated with a node
              that is owned by a member of a Managed Blockchain network using
              the Hyperledger Fabric framework.
    type: object
  NodeStatus:
    enum:
      - CREATING
      - AVAILABLE
      - UNHEALTHY
      - CREATE_FAILED
      - UPDATING
      - DELETING
      - DELETED
      - FAILED
      - INACCESSIBLE_ENCRYPTION_KEY
    type: string
  NodeSummary:
    description: A summary of configuration properties for a node.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the node. For more information
              about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZoneString'
          - description: The Availability Zone in which the node exists.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the node was created.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the node.
      InstanceType:
        allOf:
          - $ref: '#/definitions/InstanceTypeString'
          - description: The EC2 instance type for the node.
      Status:
        allOf:
          - $ref: '#/definitions/NodeStatus'
          - description: The status of the node.
    type: object
  NodeSummaryList:
    items:
      $ref: '#/definitions/NodeSummary'
    type: array
  OutputTagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 200
    minProperties: 0
    type: object
  PaginationToken:
    maxLength: 128
    type: string
  PasswordString:
    format: password
    maxLength: 32
    minLength: 8
    pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!.*[@''\\"/])[a-zA-Z0-9\S]*$'
    type: string
  PrincipalString:
    type: string
  Proposal:
    description: >-
      <p>Properties of a proposal on a Managed Blockchain network.</p>
      <p>Applies only to Hyperledger Fabric.</p>
    properties:
      Actions:
        allOf:
          - $ref: '#/definitions/ProposalActions'
          - description: >-
              The actions to perform on the network if the proposal is
              <code>APPROVED</code>.
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the proposal. For more
              information about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' The date and time that the proposal was created. '
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: The description of the proposal.
      ExpirationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' The date and time that the proposal expires. This is the <code>CreationDate</code> plus the <code>ProposalDurationInHours</code> that is specified in the <code>ProposalThresholdPolicy</code>. After this date and time, if members have not cast enough votes to determine the outcome according to the voting policy, the proposal is <code>EXPIRED</code> and <code>Actions</code> are not carried out. '
      NetworkId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              The unique identifier of the network for which the proposal is
              made.
      NoVoteCount:
        allOf:
          - $ref: '#/definitions/VoteCount'
          - description: ' The current total of <code>NO</code> votes cast on the proposal by members. '
      OutstandingVoteCount:
        allOf:
          - $ref: '#/definitions/VoteCount'
          - description: ' The number of votes remaining to be cast on the proposal by members. In other words, the number of members minus the sum of <code>YES</code> votes and <code>NO</code> votes. '
      ProposalId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the proposal.
      ProposedByMemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the member that created the proposal.
      ProposedByMemberName:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: The name of the member that created the proposal.
      Status:
        allOf:
          - $ref: '#/definitions/ProposalStatus'
          - description: >-
              <p>The status of the proposal. Values are as follows:</p> <ul>
              <li> <p> <code>IN_PROGRESS</code> - The proposal is active and
              open for member voting.</p> </li> <li> <p> <code>APPROVED</code> -
              The proposal was approved with sufficient <code>YES</code> votes
              among members according to the <code>VotingPolicy</code> specified
              for the <code>Network</code>. The specified proposal actions are
              carried out.</p> </li> <li> <p> <code>REJECTED</code> - The
              proposal was rejected with insufficient <code>YES</code> votes
              among members according to the <code>VotingPolicy</code> specified
              for the <code>Network</code>. The specified
              <code>ProposalActions</code> are not carried out.</p> </li> <li>
              <p> <code>EXPIRED</code> - Members did not cast the number of
              votes required to determine the proposal outcome before the
              proposal expired. The specified <code>ProposalActions</code> are
              not carried out.</p> </li> <li> <p> <code>ACTION_FAILED</code> -
              One or more of the specified <code>ProposalActions</code> in a
              proposal that was approved could not be completed because of an
              error. The <code>ACTION_FAILED</code> status occurs even if only
              one ProposalAction fails and other actions are successful.</p>
              </li> </ul>
      Tags:
        allOf:
          - $ref: '#/definitions/OutputTagMap'
          - description: >-
              <p>Tags assigned to the proposal. Each tag consists of a key and
              optional value.</p> <p>For more information about tags, see <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Ethereum
              Developer Guide</i>, or <a
              href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
              Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
              Fabric Developer Guide</i>.</p>
      YesVoteCount:
        allOf:
          - $ref: '#/definitions/VoteCount'
          - description: ' The current total of <code>YES</code> votes cast on the proposal by members. '
    type: object
  ProposalActions:
    description: >-
      <p> The actions to carry out if a proposal is <code>APPROVED</code>. </p>
      <p>Applies only to Hyperledger Fabric.</p>
    properties:
      Invitations:
        allOf:
          - $ref: '#/definitions/InviteActionList'
          - description: ' The actions to perform for an <code>APPROVED</code> proposal to invite an AWS account to create a member and join the network. '
      Removals:
        allOf:
          - $ref: '#/definitions/RemoveActionList'
          - description: ' The actions to perform for an <code>APPROVED</code> proposal to remove a member from the network, which deletes the member and all associated member resources from the network. '
    type: object
  ProposalDurationInt:
    maximum: 168
    minimum: 1
    type: integer
  ProposalListMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ProposalStatus:
    enum:
      - IN_PROGRESS
      - APPROVED
      - REJECTED
      - EXPIRED
      - ACTION_FAILED
    type: string
  ProposalSummary:
    description: >-
      <p>Properties of a proposal.</p> <p>Applies only to Hyperledger
      Fabric.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ArnString'
          - description: >-
              The Amazon Resource Name (ARN) of the proposal. For more
              information about ARNs and their format, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
              Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
      CreationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' The date and time that the proposal was created. '
      Description:
        allOf:
          - $ref: '#/definitions/DescriptionString'
          - description: ' The description of the proposal. '
      ExpirationDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' The date and time that the proposal expires. This is the <code>CreationDate</code> plus the <code>ProposalDurationInHours</code> that is specified in the <code>ProposalThresholdPolicy</code>. After this date and time, if members have not cast enough votes to determine the outcome according to the voting policy, the proposal is <code>EXPIRED</code> and <code>Actions</code> are not carried out. '
      ProposalId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: ' The unique identifier of the proposal. '
      ProposedByMemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: ' The unique identifier of the member that created the proposal. '
      ProposedByMemberName:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: ' The name of the member that created the proposal. '
      Status:
        allOf:
          - $ref: '#/definitions/ProposalStatus'
          - description: >-
              <p>The status of the proposal. Values are as follows:</p> <ul>
              <li> <p> <code>IN_PROGRESS</code> - The proposal is active and
              open for member voting.</p> </li> <li> <p> <code>APPROVED</code> -
              The proposal was approved with sufficient <code>YES</code> votes
              among members according to the <code>VotingPolicy</code> specified
              for the <code>Network</code>. The specified proposal actions are
              carried out.</p> </li> <li> <p> <code>REJECTED</code> - The
              proposal was rejected with insufficient <code>YES</code> votes
              among members according to the <code>VotingPolicy</code> specified
              for the <code>Network</code>. The specified
              <code>ProposalActions</code> are not carried out.</p> </li> <li>
              <p> <code>EXPIRED</code> - Members did not cast the number of
              votes required to determine the proposal outcome before the
              proposal expired. The specified <code>ProposalActions</code> are
              not carried out.</p> </li> <li> <p> <code>ACTION_FAILED</code> -
              One or more of the specified <code>ProposalActions</code> in a
              proposal that was approved could not be completed because of an
              error.</p> </li> </ul>
    type: object
  ProposalSummaryList:
    items:
      $ref: '#/definitions/ProposalSummary'
    type: array
  ProposalVoteList:
    items:
      $ref: '#/definitions/VoteSummary'
    type: array
  RejectInvitationInput:
    properties: {}
    title: RejectInvitationInput
    type: object
  RejectInvitationOutput:
    properties: {}
    type: object
  RemoveAction:
    description: >-
      <p>An action to remove a member from a Managed Blockchain network as the
      result of a removal proposal that is <code>APPROVED</code>. The member and
      all associated resources are deleted from the network.</p> <p>Applies only
      to Hyperledger Fabric.</p>
    properties:
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: The unique identifier of the member to remove.
    required:
      - MemberId
    type: object
  RemoveActionList:
    items:
      $ref: '#/definitions/RemoveAction'
    type: array
  ResourceAlreadyExistsException: {}
  ResourceIdString:
    maxLength: 32
    minLength: 1
    type: string
  ResourceLimitExceededException: {}
  ResourceNotFoundException: {}
  ResourceNotReadyException: {}
  StateDBType:
    enum:
      - LevelDB
      - CouchDB
    type: string
  String:
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/InputTagMap'
          - description: >-
              The tags to assign to the specified resource. Tag values can be
              empty, for example, <code>"MyTagKey" : ""</code>. You can specify
              multiple key-value pairs in a single request, with an overall
              maximum of 50 tags added to each resource.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  ThresholdComparator:
    enum:
      - GREATER_THAN
      - GREATER_THAN_OR_EQUAL_TO
    type: string
  ThresholdPercentageInt:
    maximum: 100
    minimum: 0
    type: integer
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  TooManyTagsException: {}
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateMemberInput:
    properties:
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/MemberLogPublishingConfiguration'
          - description: Configuration properties for publishing to Amazon CloudWatch Logs.
    title: UpdateMemberInput
    type: object
  UpdateMemberOutput:
    properties: {}
    type: object
  UpdateNodeInput:
    properties:
      LogPublishingConfiguration:
        allOf:
          - $ref: '#/definitions/NodeLogPublishingConfiguration'
          - description: Configuration properties for publishing to Amazon CloudWatch Logs.
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: >-
              <p>The unique identifier of the member that owns the node.</p>
              <p>Applies only to Hyperledger Fabric.</p>
    title: UpdateNodeInput
    type: object
  UpdateNodeOutput:
    properties: {}
    type: object
  UsernameString:
    maxLength: 16
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9]*$'
    type: string
  VoteCount:
    type: integer
  VoteOnProposalInput:
    properties:
      Vote:
        allOf:
          - $ref: '#/definitions/VoteValue'
          - description: ' The value of the vote. '
      VoterMemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: 'The unique identifier of the member casting the vote. '
    required:
      - VoterMemberId
      - Vote
    title: VoteOnProposalInput
    type: object
  VoteOnProposalOutput:
    properties: {}
    type: object
  VoteSummary:
    description: >-
      <p> Properties of an individual vote that a member cast for a proposal.
      </p> <p>Applies only to Hyperledger Fabric.</p>
    properties:
      MemberId:
        allOf:
          - $ref: '#/definitions/ResourceIdString'
          - description: ' The unique identifier of the member that cast the vote. '
      MemberName:
        allOf:
          - $ref: '#/definitions/NetworkMemberNameString'
          - description: ' The name of the member that cast the vote. '
      Vote:
        allOf:
          - $ref: '#/definitions/VoteValue'
          - description: ' The vote value, either <code>YES</code> or <code>NO</code>. '
    type: object
  VoteValue:
    enum:
      - 'YES'
      - 'NO'
    type: string
  VotingPolicy:
    description: >-
      <p> The voting rules for the network to decide if a proposal is accepted
      </p> <p>Applies only to Hyperledger Fabric.</p>
    properties:
      ApprovalThresholdPolicy:
        allOf:
          - $ref: '#/definitions/ApprovalThresholdPolicy'
          - description: >-
              Defines the rules for the network for voting on proposals, such as
              the percentage of <code>YES</code> votes required for the proposal
              to be approved and the duration of the proposal. The policy
              applies to all proposals and is specified when the network is
              created.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/managedblockchain/'
host: managedblockchain.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p/> <p>Amazon Managed Blockchain is a fully managed service for creating
    and managing blockchain networks using open-source frameworks. Blockchain
    allows you to build applications where multiple parties can securely and
    transparently run transactions and share data without the need for a
    trusted, central authority.</p> <p>Managed Blockchain supports the
    Hyperledger Fabric and Ethereum open-source frameworks. Because of
    fundamental differences between the frameworks, some API actions or data
    types may only apply in the context of one framework and not the other. For
    example, actions related to Hyperledger Fabric network members such as
    <code>CreateMember</code> and <code>DeleteMember</code> do not apply to
    Ethereum.</p> <p>The description for each action indicates the framework or
    frameworks to which it applies. Data types and properties that apply only in
    the context of a particular framework are similarly indicated.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Managed Blockchain
  version: '2018-09-24'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: managedblockchain
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/managedblockchain-2018-09-24.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: managedblockchain
paths:
  /invitations:
    get:
      description: >-
        <p>Returns a list of all invitations for the current AWS account.</p>
        <p>Applies only to Hyperledger Fabric.</p>
      operationId: ListInvitations
      parameters:
        - description: The maximum number of invitations to return.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The pagination token that indicates the next set of results to
            retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvitationsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/invitations/{invitationId}':
    delete:
      description: >-
        <p>Rejects an invitation to join a network. This action can be called by
        a principal in an AWS account that has received an invitation to create
        a member and join a network.</p> <p>Applies only to Hyperledger
        Fabric.</p>
      operationId: RejectInvitation
      parameters:
        - description: The unique identifier of the invitation to reject.
          in: path
          maxLength: 32
          minLength: 1
          name: invitationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectInvitationOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: IllegalActionException
          schema:
            $ref: '#/definitions/IllegalActionException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /networks:
    get:
      description: >-
        <p>Returns information about the networks in which the current AWS
        account participates.</p> <p>Applies to Hyperledger Fabric and
        Ethereum.</p>
      operationId: ListNetworks
      parameters:
        - description: The name of the network.
          in: query
          name: name
          required: false
          type: string
        - description: >-
            An optional framework specifier. If provided, only networks of this
            framework type are listed.
          enum:
            - HYPERLEDGER_FABRIC
            - ETHEREUM
          in: query
          name: framework
          required: false
          type: string
        - description: >-
            <p>An optional status specifier. If provided, only networks
            currently in this status are listed.</p> <p>Applies only to
            Hyperledger Fabric.</p>
          enum:
            - CREATING
            - AVAILABLE
            - CREATE_FAILED
            - DELETING
            - DELETED
          in: query
          name: status
          required: false
          type: string
        - description: The maximum number of networks to list.
          in: query
          maximum: 10
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The pagination token that indicates the next set of results to
            retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNetworksOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a new blockchain network using Amazon Managed Blockchain.</p>
        <p>Applies only to Hyperledger Fabric.</p>
      operationId: CreateNetwork
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the operation. An idempotent operation
                  completes no more than one time. This identifier is required
                  only if you make a service request directly using an HTTP
                  client. It is generated automatically if you use an AWS SDK or
                  the AWS CLI.
                maxLength: 64
                minLength: 1
                type: string
              Description:
                description: An optional description for the network.
                maxLength: 128
                type: string
              Framework:
                description: The blockchain framework that the network uses.
                enum:
                  - HYPERLEDGER_FABRIC
                  - ETHEREUM
                type: string
              FrameworkConfiguration:
                description: ' Configuration properties relevant to the network for the blockchain framework that the network uses. '
                properties:
                  Fabric:
                    allOf:
                      - $ref: '#/definitions/NetworkFabricConfiguration'
                      - description: ' Hyperledger Fabric configuration properties for a Managed Blockchain network that uses Hyperledger Fabric. '
                type: object
              FrameworkVersion:
                description: The version of the blockchain framework that the network uses.
                maxLength: 8
                minLength: 1
                type: string
              MemberConfiguration:
                description: >-
                  <p>Configuration properties of the member.</p> <p>Applies only
                  to Hyperledger Fabric.</p>
                properties:
                  Description:
                    allOf:
                      - $ref: '#/definitions/DescriptionString'
                      - description: An optional description of the member.
                  FrameworkConfiguration:
                    allOf:
                      - $ref: '#/definitions/MemberFrameworkConfiguration'
                      - description: >-
                          Configuration properties of the blockchain framework
                          relevant to the member.
                  KmsKeyArn:
                    allOf:
                      - $ref: '#/definitions/ArnString'
                      - description: >-
                          <p>The Amazon Resource Name (ARN) of the customer
                          managed key in AWS Key Management Service (AWS KMS) to
                          use for encryption at rest in the member. This
                          parameter is inherited by any nodes that this member
                          creates.</p> <p>Use one of the following options to
                          specify this parameter:</p> <ul> <li> <p> <b>Undefined
                          or empty string</b> - The member uses an AWS owned KMS
                          key for encryption by default.</p> </li> <li> <p> <b>A
                          valid symmetric customer managed KMS key</b> - The
                          member uses the specified key for encryption.</p>
                          <p>Amazon Managed Blockchain doesn't support
                          asymmetric keys. For more information, see <a
                          href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
                          symmetric and asymmetric keys</a> in the <i>AWS Key
                          Management Service Developer Guide</i>.</p> <p>The
                          following is an example of a KMS key ARN:
                          <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
                          </p> </li> </ul>
                  LogPublishingConfiguration:
                    allOf:
                      - $ref: '#/definitions/MemberLogPublishingConfiguration'
                      - description: >-
                          Configuration properties for logging events associated
                          with a member of a Managed Blockchain network.
                  Name:
                    allOf:
                      - $ref: '#/definitions/NetworkMemberNameString'
                      - description: The name of the member.
                  Tags:
                    allOf:
                      - $ref: '#/definitions/InputTagMap'
                      - description: >-
                          <p>Tags assigned to the member. Tags consist of a key
                          and optional value. For more information about tags,
                          see <a
                          href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
                          Resources</a> in the <i>Amazon Managed Blockchain
                          Hyperledger Fabric Developer Guide</i>.</p> <p>When
                          specifying tags during creation, you can specify
                          multiple key-value pairs in a single request, with an
                          overall maximum of 50 tags added to each resource.</p>
                type: object
              Name:
                description: The name of the network.
                maxLength: 64
                minLength: 1
                pattern: .*\S.*
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  <p>Tags to assign to the network. Each tag consists of a key
                  and optional value.</p> <p>When specifying tags during
                  creation, you can specify multiple key-value pairs in a single
                  request, with an overall maximum of 50 tags added to each
                  resource.</p> <p>For more information about tags, see <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Ethereum
                  Developer Guide</i>, or <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
                  Fabric Developer Guide</i>.</p>
                maxProperties: 50
                minProperties: 0
                type: object
              VotingPolicy:
                description: >-
                  <p> The voting rules for the network to decide if a proposal
                  is accepted </p> <p>Applies only to Hyperledger Fabric.</p>
                properties:
                  ApprovalThresholdPolicy:
                    allOf:
                      - $ref: '#/definitions/ApprovalThresholdPolicy'
                      - description: >-
                          Defines the rules for the network for voting on
                          proposals, such as the percentage of <code>YES</code>
                          votes required for the proposal to be approved and the
                          duration of the proposal. The policy applies to all
                          proposals and is specified when the network is
                          created.
                type: object
            required:
              - ClientRequestToken
              - Name
              - Framework
              - FrameworkVersion
              - VotingPolicy
              - MemberConfiguration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNetworkOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  '/networks/{networkId}':
    get:
      description: >-
        <p>Returns detailed information about a network.</p> <p>Applies to
        Hyperledger Fabric and Ethereum.</p>
      operationId: GetNetwork
      parameters:
        - description: The unique identifier of the network to get information about.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNetworkOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/networks/{networkId}/members':
    get:
      description: >-
        <p>Returns a list of the members in a network and properties of their
        configurations.</p> <p>Applies only to Hyperledger Fabric.</p>
      operationId: ListMembers
      parameters:
        - description: The unique identifier of the network for which to list members.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The optional name of the member to list.
          in: query
          name: name
          required: false
          type: string
        - description: >-
            An optional status specifier. If provided, only members currently in
            this status are listed.
          enum:
            - CREATING
            - AVAILABLE
            - CREATE_FAILED
            - UPDATING
            - DELETING
            - DELETED
            - INACCESSIBLE_ENCRYPTION_KEY
          in: query
          name: status
          required: false
          type: string
        - description: >-
            An optional Boolean value. If provided, the request is limited
            either to members that the current AWS account owns
            (<code>true</code>) or that other AWS accounts own
            (<code>false</code>). If omitted, all members are listed.
          in: query
          name: isOwned
          required: false
          type: boolean
        - description: The maximum number of members to return in the request.
          in: query
          maximum: 20
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The pagination token that indicates the next set of results to
            retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMembersOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a member within a Managed Blockchain network.</p> <p>Applies
        only to Hyperledger Fabric.</p>
      operationId: CreateMember
      parameters:
        - description: The unique identifier of the network in which the member is created.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the operation. An idempotent operation
                  completes no more than one time. This identifier is required
                  only if you make a service request directly using an HTTP
                  client. It is generated automatically if you use an AWS SDK or
                  the AWS CLI.
                maxLength: 64
                minLength: 1
                type: string
              InvitationId:
                description: >-
                  The unique identifier of the invitation that is sent to the
                  member to join the network.
                maxLength: 32
                minLength: 1
                type: string
              MemberConfiguration:
                description: >-
                  <p>Configuration properties of the member.</p> <p>Applies only
                  to Hyperledger Fabric.</p>
                properties:
                  Description:
                    allOf:
                      - $ref: '#/definitions/DescriptionString'
                      - description: An optional description of the member.
                  FrameworkConfiguration:
                    allOf:
                      - $ref: '#/definitions/MemberFrameworkConfiguration'
                      - description: >-
                          Configuration properties of the blockchain framework
                          relevant to the member.
                  KmsKeyArn:
                    allOf:
                      - $ref: '#/definitions/ArnString'
                      - description: >-
                          <p>The Amazon Resource Name (ARN) of the customer
                          managed key in AWS Key Management Service (AWS KMS) to
                          use for encryption at rest in the member. This
                          parameter is inherited by any nodes that this member
                          creates.</p> <p>Use one of the following options to
                          specify this parameter:</p> <ul> <li> <p> <b>Undefined
                          or empty string</b> - The member uses an AWS owned KMS
                          key for encryption by default.</p> </li> <li> <p> <b>A
                          valid symmetric customer managed KMS key</b> - The
                          member uses the specified key for encryption.</p>
                          <p>Amazon Managed Blockchain doesn't support
                          asymmetric keys. For more information, see <a
                          href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
                          symmetric and asymmetric keys</a> in the <i>AWS Key
                          Management Service Developer Guide</i>.</p> <p>The
                          following is an example of a KMS key ARN:
                          <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
                          </p> </li> </ul>
                  LogPublishingConfiguration:
                    allOf:
                      - $ref: '#/definitions/MemberLogPublishingConfiguration'
                      - description: >-
                          Configuration properties for logging events associated
                          with a member of a Managed Blockchain network.
                  Name:
                    allOf:
                      - $ref: '#/definitions/NetworkMemberNameString'
                      - description: The name of the member.
                  Tags:
                    allOf:
                      - $ref: '#/definitions/InputTagMap'
                      - description: >-
                          <p>Tags assigned to the member. Tags consist of a key
                          and optional value. For more information about tags,
                          see <a
                          href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
                          Resources</a> in the <i>Amazon Managed Blockchain
                          Hyperledger Fabric Developer Guide</i>.</p> <p>When
                          specifying tags during creation, you can specify
                          multiple key-value pairs in a single request, with an
                          overall maximum of 50 tags added to each resource.</p>
                type: object
            required:
              - ClientRequestToken
              - InvitationId
              - MemberConfiguration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '487':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '488':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  '/networks/{networkId}/members/{memberId}':
    delete:
      description: >-
        <p>Deletes a member. Deleting a member removes the member and all
        associated resources from the network. <code>DeleteMember</code> can
        only be called for a specified <code>MemberId</code> if the principal
        performing the action is associated with the AWS account that owns the
        member. In all other cases, the <code>DeleteMember</code> action is
        carried out as the result of an approved proposal to remove a member. If
        <code>MemberId</code> is the last member in a network specified by the
        last AWS account, the network is deleted also.</p> <p>Applies only to
        Hyperledger Fabric.</p>
      operationId: DeleteMember
      parameters:
        - description: >-
            The unique identifier of the network from which the member is
            removed.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member to remove.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    get:
      description: >-
        <p>Returns detailed information about a member.</p> <p>Applies only to
        Hyperledger Fabric.</p>
      operationId: GetMember
      parameters:
        - description: The unique identifier of the network to which the member belongs.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Updates a member configuration with new parameters.</p> <p>Applies
        only to Hyperledger Fabric.</p>
      operationId: UpdateMember
      parameters:
        - description: >-
            The unique identifier of the Managed Blockchain network to which the
            member belongs.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LogPublishingConfiguration:
                description: >-
                  Configuration properties for logging events associated with a
                  member of a Managed Blockchain network.
                properties:
                  Fabric:
                    allOf:
                      - $ref: '#/definitions/MemberFabricLogPublishingConfiguration'
                      - description: >-
                          Configuration properties for logging events associated
                          with a member of a Managed Blockchain network using
                          the Hyperledger Fabric framework.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}/nodes':
    get:
      description: >-
        <p>Returns information about the nodes within a network.</p> <p>Applies
        to Hyperledger Fabric and Ethereum.</p>
      operationId: ListNodes
      parameters:
        - description: The unique identifier of the network for which to list nodes.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: >-
            <p>The unique identifier of the member who owns the nodes to
            list.</p> <p>Applies only to Hyperledger Fabric and is required for
            Hyperledger Fabric.</p>
          in: query
          maxLength: 32
          minLength: 1
          name: memberId
          required: false
          type: string
        - description: >-
            An optional status specifier. If provided, only nodes currently in
            this status are listed.
          enum:
            - CREATING
            - AVAILABLE
            - UNHEALTHY
            - CREATE_FAILED
            - UPDATING
            - DELETING
            - DELETED
            - FAILED
            - INACCESSIBLE_ENCRYPTION_KEY
          in: query
          name: status
          required: false
          type: string
        - description: The maximum number of nodes to list.
          in: query
          maximum: 20
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The pagination token that indicates the next set of results to
            retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNodesOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a node on the specified blockchain network.</p> <p>Applies to
        Hyperledger Fabric and Ethereum.</p>
      operationId: CreateNode
      parameters:
        - description: >-
            <p>The unique identifier of the network for the node.</p>
            <p>Ethereum public networks have the following
            <code>NetworkId</code>s:</p> <ul> <li> <p>
            <code>n-ethereum-mainnet</code> </p> </li> <li> <p>
            <code>n-ethereum-rinkeby</code> </p> </li> <li> <p>
            <code>n-ethereum-ropsten</code> </p> </li> </ul>
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the operation. An idempotent operation
                  completes no more than one time. This identifier is required
                  only if you make a service request directly using an HTTP
                  client. It is generated automatically if you use an AWS SDK or
                  the AWS CLI.
                maxLength: 64
                minLength: 1
                type: string
              MemberId:
                description: >-
                  <p>The unique identifier of the member that owns this
                  node.</p> <p>Applies only to Hyperledger Fabric.</p>
                maxLength: 32
                minLength: 1
                type: string
              NodeConfiguration:
                description: Configuration properties of a node.
                properties:
                  AvailabilityZone:
                    allOf:
                      - $ref: '#/definitions/AvailabilityZoneString'
                      - description: >-
                          The Availability Zone in which the node exists.
                          Required for Ethereum nodes. 
                  InstanceType:
                    allOf:
                      - $ref: '#/definitions/InstanceTypeString'
                      - description: >-
                          The Amazon Managed Blockchain instance type for the
                          node.
                  LogPublishingConfiguration:
                    allOf:
                      - $ref: '#/definitions/NodeLogPublishingConfiguration'
                      - description: >-
                          Configuration properties for logging events associated
                          with a peer node on a Hyperledger Fabric network on
                          Managed Blockchain. 
                  StateDB:
                    allOf:
                      - $ref: '#/definitions/StateDBType'
                      - description: >-
                          <p>The state database that the node uses. Values are
                          <code>LevelDB</code> or <code>CouchDB</code>. When
                          using an Amazon Managed Blockchain network with
                          Hyperledger Fabric version 1.4 or later, the default
                          is <code>CouchDB</code>.</p> <p>Applies only to
                          Hyperledger Fabric.</p>
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  <p>Tags to assign to the node. Each tag consists of a key and
                  optional value.</p> <p>When specifying tags during creation,
                  you can specify multiple key-value pairs in a single request,
                  with an overall maximum of 50 tags added to each resource.</p>
                  <p>For more information about tags, see <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Ethereum
                  Developer Guide</i>, or <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
                  Fabric Developer Guide</i>.</p>
                maxProperties: 50
                minProperties: 0
                type: object
            required:
              - ClientRequestToken
              - NodeConfiguration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '487':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '488':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  '/networks/{networkId}/nodes/{nodeId}':
    delete:
      description: >-
        <p>Deletes a node that your AWS account owns. All data on the node is
        lost and cannot be recovered.</p> <p>Applies to Hyperledger Fabric and
        Ethereum.</p>
      operationId: DeleteNode
      parameters:
        - description: >-
            <p>The unique identifier of the network that the node is on.</p>
            <p>Ethereum public networks have the following
            <code>NetworkId</code>s:</p> <ul> <li> <p>
            <code>n-ethereum-mainnet</code> </p> </li> <li> <p>
            <code>n-ethereum-rinkeby</code> </p> </li> <li> <p>
            <code>n-ethereum-ropsten</code> </p> </li> </ul>
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: >-
            <p>The unique identifier of the member that owns this node.</p>
            <p>Applies only to Hyperledger Fabric and is required for
            Hyperledger Fabric.</p>
          in: query
          maxLength: 32
          minLength: 1
          name: memberId
          required: false
          type: string
        - description: The unique identifier of the node.
          in: path
          maxLength: 32
          minLength: 1
          name: nodeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    get:
      description: >-
        <p>Returns detailed information about a node.</p> <p>Applies to
        Hyperledger Fabric and Ethereum.</p>
      operationId: GetNode
      parameters:
        - description: The unique identifier of the network that the node is on.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: >-
            <p>The unique identifier of the member that owns the node.</p>
            <p>Applies only to Hyperledger Fabric and is required for
            Hyperledger Fabric.</p>
          in: query
          maxLength: 32
          minLength: 1
          name: memberId
          required: false
          type: string
        - description: The unique identifier of the node.
          in: path
          maxLength: 32
          minLength: 1
          name: nodeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Updates a node configuration with new parameters.</p> <p>Applies only
        to Hyperledger Fabric.</p>
      operationId: UpdateNode
      parameters:
        - description: The unique identifier of the network that the node is on.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the node.
          in: path
          maxLength: 32
          minLength: 1
          name: nodeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LogPublishingConfiguration:
                description: >-
                  Configuration properties for logging events associated with a
                  peer node on a Hyperledger Fabric network on Managed
                  Blockchain.
                properties:
                  Fabric:
                    allOf:
                      - $ref: '#/definitions/NodeFabricLogPublishingConfiguration'
                      - description: >-
                          Configuration properties for logging events associated
                          with a node that is owned by a member of a Managed
                          Blockchain network using the Hyperledger Fabric
                          framework.
                type: object
              MemberId:
                description: >-
                  <p>The unique identifier of the member that owns the node.</p>
                  <p>Applies only to Hyperledger Fabric.</p>
                maxLength: 32
                minLength: 1
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}/proposals':
    get:
      description: >-
        <p>Returns a list of proposals for the network.</p> <p>Applies only to
        Hyperledger Fabric.</p>
      operationId: ListProposals
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The maximum number of proposals to return. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: ' The pagination token that indicates the next set of results to retrieve. '
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProposalsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a proposal for a change to the network that other members of
        the network can vote on, for example, a proposal to add a new member to
        the network. Any member can create a proposal.</p> <p>Applies only to
        Hyperledger Fabric.</p>
      operationId: CreateProposal
      parameters:
        - description: ' The unique identifier of the network for which the proposal is made.'
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Actions:
                description: >-
                  <p> The actions to carry out if a proposal is
                  <code>APPROVED</code>. </p> <p>Applies only to Hyperledger
                  Fabric.</p>
                properties:
                  Invitations:
                    allOf:
                      - $ref: '#/definitions/InviteActionList'
                      - description: ' The actions to perform for an <code>APPROVED</code> proposal to invite an AWS account to create a member and join the network. '
                  Removals:
                    allOf:
                      - $ref: '#/definitions/RemoveActionList'
                      - description: ' The actions to perform for an <code>APPROVED</code> proposal to remove a member from the network, which deletes the member and all associated member resources from the network. '
                type: object
              ClientRequestToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the operation. An idempotent operation
                  completes no more than one time. This identifier is required
                  only if you make a service request directly using an HTTP
                  client. It is generated automatically if you use an AWS SDK or
                  the AWS CLI.
                maxLength: 64
                minLength: 1
                type: string
              Description:
                description: >-
                  A description for the proposal that is visible to voting
                  members, for example, "Proposal to add Example Corp. as
                  member."
                maxLength: 128
                type: string
              MemberId:
                description: >-
                  The unique identifier of the member that is creating the
                  proposal. This identifier is especially useful for identifying
                  the member making the proposal when multiple members exist in
                  a single AWS account.
                maxLength: 32
                minLength: 1
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  <p>Tags to assign to the proposal. Each tag consists of a key
                  and optional value.</p> <p>When specifying tags during
                  creation, you can specify multiple key-value pairs in a single
                  request, with an overall maximum of 50 tags added to each
                  resource. If the proposal is for a network invitation, the
                  invitation inherits the tags added to the proposal.</p> <p>For
                  more information about tags, see <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Ethereum
                  Developer Guide</i>, or <a
                  href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
                  Resources</a> in the <i>Amazon Managed Blockchain Hyperledger
                  Fabric Developer Guide</i>.</p>
                maxProperties: 50
                minProperties: 0
                type: object
            required:
              - ClientRequestToken
              - MemberId
              - Actions
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
  '/networks/{networkId}/proposals/{proposalId}':
    get:
      description: >-
        <p>Returns detailed information about a proposal.</p> <p>Applies only to
        Hyperledger Fabric.</p>
      operationId: GetProposal
      parameters:
        - description: The unique identifier of the network for which the proposal is made.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the proposal.
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/networks/{networkId}/proposals/{proposalId}/votes':
    get:
      description: >-
        <p>Returns the list of votes for a specified proposal, including the
        value of each vote and the unique identifier of the member that cast the
        vote.</p> <p>Applies only to Hyperledger Fabric.</p>
      operationId: ListProposalVotes
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The unique identifier of the proposal. '
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
        - description: ' The maximum number of votes to return. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: ' The pagination token that indicates the next set of results to retrieve. '
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProposalVotesOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Casts a vote for a specified <code>ProposalId</code> on behalf of a
        member. The member to vote as, specified by <code>VoterMemberId</code>,
        must be in the same AWS account as the principal that calls the
        action.</p> <p>Applies only to Hyperledger Fabric.</p>
      operationId: VoteOnProposal
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The unique identifier of the proposal. '
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Vote:
                description: ' The value of the vote. '
                enum:
                  - 'YES'
                  - 'NO'
                type: string
              VoterMemberId:
                description: 'The unique identifier of the member casting the vote. '
                maxLength: 32
                minLength: 1
                type: string
            required:
              - VoterMemberId
              - Vote
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoteOnProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: IllegalActionException
          schema:
            $ref: '#/definitions/IllegalActionException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/tags/{resourceArn}':
    get:
      description: >-
        <p>Returns a list of tags for the specified resource. Each tag consists
        of a key and optional value.</p> <p>For more information about tags, see
        <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer
        Guide</i>, or <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric
        Developer Guide</i>.</p>
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource. For more information
            about ARNs and their format, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          pattern: '^arn:.+:.+:.+:.+:.+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds or overwrites the specified tags for the specified Amazon
        Managed Blockchain resource. Each tag consists of a key and optional
        value.</p> <p>When you specify a tag key that already exists, the tag
        value is overwritten with the new value. Use <code>UntagResource</code>
        to remove tag keys.</p> <p>A resource can have up to 50 tags. If you try
        to create more than 50 tags for a resource, your request fails and
        returns an error.</p> <p>For more information about tags, see <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer
        Guide</i>, or <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric
        Developer Guide</i>.</p>
      operationId: TagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource. For more information
            about ARNs and their format, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          pattern: '^arn:.+:.+:.+:.+:.+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags to assign to the specified resource. Tag values can
                  be empty, for example, <code>"MyTagKey" : ""</code>. You can
                  specify multiple key-value pairs in a single request, with an
                  overall maximum of 50 tags added to each resource.
                maxProperties: 50
                minProperties: 0
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '484':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: >-
        <p>Removes the specified tags from the Amazon Managed Blockchain
        resource.</p> <p>For more information about tags, see <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer
        Guide</i>, or <a
        href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging
        Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric
        Developer Guide</i>.</p>
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource. For more information
            about ARNs and their format, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          pattern: '^arn:.+:.+:.+:.+:.+'
          required: true
          type: string
        - collectionFormat: multi
          description: The tag keys.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 200
          minItems: 0
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

