basePath: /
definitions:
  ConflictException: {}
  DeleteThingShadowRequest:
    description: The input for the DeleteThingShadow operation.
    properties: {}
    title: DeleteThingShadowRequest
    type: object
  DeleteThingShadowResponse:
    description: The output from the DeleteThingShadow operation.
    properties:
      payload:
        allOf:
          - $ref: '#/definitions/JsonDocument'
          - description: 'The state information, in JSON format.'
    required:
      - payload
    type: object
  GetRetainedMessageRequest:
    description: The input for the GetRetainedMessage operation.
    properties: {}
    title: GetRetainedMessageRequest
    type: object
  GetRetainedMessageResponse:
    description: The output from the GetRetainedMessage operation.
    properties:
      lastModifiedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Epoch date and time, in milliseconds, when the retained
              message was stored by IoT.
      payload:
        allOf:
          - $ref: '#/definitions/Payload'
          - description: The Base64-encoded message payload of the retained message body.
      qos:
        allOf:
          - $ref: '#/definitions/Qos'
          - description: >-
              The quality of service (QoS) level used to publish the retained
              message.
      topic:
        allOf:
          - $ref: '#/definitions/Topic'
          - description: The topic name to which the retained message was published.
    type: object
  GetThingShadowRequest:
    description: The input for the GetThingShadow operation.
    properties: {}
    title: GetThingShadowRequest
    type: object
  GetThingShadowResponse:
    description: The output from the GetThingShadow operation.
    properties:
      payload:
        allOf:
          - $ref: '#/definitions/JsonDocument'
          - description: 'The state information, in JSON format.'
    type: object
  InternalFailureException: {}
  InvalidRequestException: {}
  JsonDocument:
    type: string
  ListNamedShadowsForThingRequest:
    properties: {}
    title: ListNamedShadowsForThingRequest
    type: object
  ListNamedShadowsForThingResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token to use to get the next set of results, or <b>null</b> if
              there are no additional results.
      results:
        allOf:
          - $ref: '#/definitions/NamedShadowList'
          - description: The list of shadows for the specified thing.
      timestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The Epoch date and time the response was generated by IoT.
    type: object
  ListRetainedMessagesRequest:
    properties: {}
    title: ListRetainedMessagesRequest
    type: object
  ListRetainedMessagesResponse:
    properties:
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token for the next set of results, or null if there are no
              additional results.
      retainedTopics:
        allOf:
          - $ref: '#/definitions/RetainedMessageList'
          - description: >-
              A summary list the account's retained messages. The information
              returned doesn't include the message payloads of the retained
              messages.
    type: object
  MaxResults:
    maximum: 200
    minimum: 1
    type: integer
  MethodNotAllowedException: {}
  NamedShadowList:
    items:
      $ref: '#/definitions/ShadowName'
    type: array
  NextToken:
    type: string
  PageSize:
    maximum: 100
    minimum: 1
    type: integer
  Payload:
    type: string
  PayloadSize:
    type: integer
  PublishRequest:
    description: The input for the Publish operation.
    properties:
      payload:
        allOf:
          - $ref: '#/definitions/Payload'
          - description: >-
              <p>The message body. MQTT accepts text, binary, and empty (null)
              message payloads.</p> <p>Publishing an empty (null) payload with
              <b>retain</b> = <code>true</code> deletes the retained message
              identified by <b>topic</b> from IoT Core.</p>
    title: PublishRequest
    type: object
  Qos:
    maximum: 1
    minimum: 0
    type: integer
  RequestEntityTooLargeException: {}
  ResourceNotFoundException: {}
  Retain:
    type: boolean
  RetainedMessageList:
    items:
      $ref: '#/definitions/RetainedMessageSummary'
    type: array
  RetainedMessageSummary:
    description: Information about a single retained message.
    properties:
      lastModifiedTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The Epoch date and time, in milliseconds, when the retained
              message was stored by IoT.
      payloadSize:
        allOf:
          - $ref: '#/definitions/PayloadSize'
          - description: The size of the retained message's payload in bytes.
      qos:
        allOf:
          - $ref: '#/definitions/Qos'
          - description: >-
              The quality of service (QoS) level used to publish the retained
              message.
      topic:
        allOf:
          - $ref: '#/definitions/Topic'
          - description: The topic name to which the retained message was published.
    type: object
  ServiceUnavailableException: {}
  ShadowName:
    maxLength: 64
    minLength: 1
    pattern: '[a-zA-Z0-9:_-]+'
    type: string
  ThingName:
    maxLength: 128
    minLength: 1
    pattern: '[a-zA-Z0-9:_-]+'
    type: string
  ThrottlingException: {}
  Timestamp:
    type: integer
  Topic:
    type: string
  UnauthorizedException: {}
  UnsupportedDocumentEncodingException: {}
  UpdateThingShadowRequest:
    description: The input for the UpdateThingShadow operation.
    properties:
      payload:
        allOf:
          - $ref: '#/definitions/JsonDocument'
          - description: 'The state information, in JSON format.'
    required:
      - payload
    title: UpdateThingShadowRequest
    type: object
  UpdateThingShadowResponse:
    description: The output from the UpdateThingShadow operation.
    properties:
      payload:
        allOf:
          - $ref: '#/definitions/JsonDocument'
          - description: 'The state information, in JSON format.'
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
host: data.iot.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional
    communication between Internet-connected things (such as sensors, actuators,
    embedded devices, or smart appliances) and the Amazon Web Services cloud. It
    implements a broker for applications and things to publish messages over
    HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a
    persistent representation of your things and their state in the Amazon Web
    Services cloud.</p> <p>Find the endpoint address for actions in IoT data by
    running this CLI command:</p> <p> <code>aws iot describe-endpoint
    --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Amazon
    Web ServicesSignature Version 4</a> to sign requests is:
    <i>iotdevicegateway</i>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS IoT Data Plane
  version: '2015-05-28'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: iotdata
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-data-2015-05-28.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iot-data
paths:
  '/api/things/shadow/ListNamedShadowsForThing/{thingName}':
    get:
      description: >-
        <p>Lists the shadows for the specified thing.</p> <p>Requires permission
        to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListNamedShadowsForThing</a>
        action.</p>
      operationId: ListNamedShadowsForThing
      parameters:
        - description: The name of the thing.
          in: path
          maxLength: 128
          minLength: 1
          name: thingName
          pattern: '[a-zA-Z0-9:_-]+'
          required: true
          type: string
        - description: The token to retrieve the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The result page size.
          in: query
          maximum: 100
          minimum: 1
          name: pageSize
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNamedShadowsForThingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /retainedMessage:
    get:
      description: >-
        <p>Lists summary information about the retained messages stored for the
        account.</p> <p>This action returns only the topic names of the retained
        messages. It doesn't return any message payloads. Although this action
        doesn't return a message payload, it can still incur messaging
        costs.</p> <p>To get the message payload of a retained message, call <a
        href="https://docs.aws.amazon.com/iot/latest/developerguide/API_iotdata_GetRetainedMessage.html">GetRetainedMessage</a>
        with the topic name of the retained message.</p> <p>Requires permission
        to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">ListRetainedMessages</a>
        action.</p> <p>For more information about messaging costs, see <a
        href="http://aws.amazon.com/iot-core/pricing/#Messaging">IoT Core
        pricing - Messaging</a>.</p>
      operationId: ListRetainedMessages
      parameters:
        - description: >-
            To retrieve the next set of results, the <code>nextToken</code>
            value from a previous response; otherwise <b>null</b> to receive the
            first set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return at one time.
          in: query
          maximum: 200
          minimum: 1
          name: maxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRetainedMessagesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/retainedMessage/{topic}':
    get:
      description: >-
        <p>Gets the details of a single retained message for the specified
        topic.</p> <p>This action returns the message payload of the retained
        message, which can incur messaging costs. To list only the topic names
        of the retained messages, call <a
        href="/iot/latest/developerguide/API_iotdata_ListRetainedMessages.html">ListRetainedMessages</a>.</p>
        <p>Requires permission to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">GetRetainedMessage</a>
        action.</p> <p>For more information about messaging costs, see <a
        href="http://aws.amazon.com/iot-core/pricing/#Messaging">IoT Core
        pricing - Messaging</a>.</p>
      operationId: GetRetainedMessage
      parameters:
        - description: The topic name of the retained message to retrieve.
          in: path
          name: topic
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRetainedMessageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/things/{thingName}/shadow':
    delete:
      description: >-
        <p>Deletes the shadow for the specified thing.</p> <p>Requires
        permission to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DeleteThingShadow</a>
        action.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html">DeleteThingShadow</a>
        in the IoT Developer Guide.</p>
      operationId: DeleteThingShadow
      parameters:
        - description: The name of the thing.
          in: path
          maxLength: 128
          minLength: 1
          name: thingName
          pattern: '[a-zA-Z0-9:_-]+'
          required: true
          type: string
        - description: The name of the shadow.
          in: query
          maxLength: 64
          minLength: 1
          name: name
          pattern: '[a-zA-Z0-9:_-]+'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingShadowResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '487':
          description: UnsupportedDocumentEncodingException
          schema:
            $ref: '#/definitions/UnsupportedDocumentEncodingException'
    get:
      description: >-
        <p>Gets the shadow for the specified thing.</p> <p>Requires permission
        to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">GetThingShadow</a>
        action.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html">GetThingShadow</a>
        in the IoT Developer Guide.</p>
      operationId: GetThingShadow
      parameters:
        - description: The name of the thing.
          in: path
          maxLength: 128
          minLength: 1
          name: thingName
          pattern: '[a-zA-Z0-9:_-]+'
          required: true
          type: string
        - description: The name of the shadow.
          in: query
          maxLength: 64
          minLength: 1
          name: name
          pattern: '[a-zA-Z0-9:_-]+'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetThingShadowResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '487':
          description: UnsupportedDocumentEncodingException
          schema:
            $ref: '#/definitions/UnsupportedDocumentEncodingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Updates the shadow for the specified thing.</p> <p>Requires
        permission to access the <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">UpdateThingShadow</a>
        action.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html">UpdateThingShadow</a>
        in the IoT Developer Guide.</p>
      operationId: UpdateThingShadow
      parameters:
        - description: The name of the thing.
          in: path
          maxLength: 128
          minLength: 1
          name: thingName
          pattern: '[a-zA-Z0-9:_-]+'
          required: true
          type: string
        - description: The name of the shadow.
          in: query
          maxLength: 64
          minLength: 1
          name: name
          pattern: '[a-zA-Z0-9:_-]+'
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              payload:
                description: 'The state information, in JSON format.'
                type: string
            required:
              - payload
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingShadowResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: RequestEntityTooLargeException
          schema:
            $ref: '#/definitions/RequestEntityTooLargeException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '488':
          description: UnsupportedDocumentEncodingException
          schema:
            $ref: '#/definitions/UnsupportedDocumentEncodingException'
  '/topics/{topic}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Publishes an MQTT message.</p> <p>Requires permission to access the
        <a
        href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">Publish</a>
        action.</p> <p>For more information about MQTT messages, see <a
        href="http://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html">MQTT
        Protocol</a> in the IoT Developer Guide.</p> <p>For more information
        about messaging costs, see <a
        href="http://aws.amazon.com/iot-core/pricing/#Messaging">IoT Core
        pricing - Messaging</a>.</p>
      operationId: Publish
      parameters:
        - description: The name of the MQTT topic.
          in: path
          name: topic
          required: true
          type: string
        - description: The Quality of Service (QoS) level.
          in: query
          maximum: 1
          minimum: 0
          name: qos
          required: false
          type: integer
        - description: >-
            <p>A Boolean value that determines whether to set the RETAIN flag
            when the message is published.</p> <p>Setting the RETAIN flag causes
            the message to be retained and sent to new subscribers to the
            topic.</p> <p>Valid values: <code>true</code> | <code>false</code>
            </p> <p>Default value: <code>false</code> </p>
          in: query
          name: retain
          required: false
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              payload:
                description: >-
                  <p>The message body. MQTT accepts text, binary, and empty
                  (null) message payloads.</p> <p>Publishing an empty (null)
                  payload with <b>retain</b> = <code>true</code> deletes the
                  retained message identified by <b>topic</b> from IoT Core.</p>
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

