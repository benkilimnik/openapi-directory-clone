basePath: /
definitions:
  AccessDeniedException: {}
  AmazonResourceName:
    maxLength: 1011
    minLength: 1
    pattern: >-
      ^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\d{12}:datastore\/fhir\/.{32}
    type: string
  BoundedLengthString:
    maxLength: 5000
    minLength: 1
    pattern: '[\P{M}\p{M}]{1,5000}'
    type: string
  ClientTokenString:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9-]+$'
    type: string
  CmkType:
    enum:
      - CUSTOMER_MANAGED_KMS_KEY
      - AWS_OWNED_KMS_KEY
    type: string
  ConflictException: {}
  CreateFHIRDatastoreRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientTokenString'
          - description: Optional user provided token used for ensuring idempotency.
      DatastoreName:
        allOf:
          - $ref: '#/definitions/DatastoreName'
          - description: The user generated name for the Data Store.
      DatastoreTypeVersion:
        allOf:
          - $ref: '#/definitions/FHIRVersion'
          - description: >-
              The FHIR version of the Data Store. The only supported version is
              R4.
      PreloadDataConfig:
        allOf:
          - $ref: '#/definitions/PreloadDataConfig'
          - description: >-
              Optional parameter to preload data upon creation of the Data
              Store. Currently, the only supported preloaded data is synthetic
              data generated from Synthea.
      SseConfiguration:
        allOf:
          - $ref: '#/definitions/SseConfiguration'
          - description: ' The server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store. '
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' Resource tags that are applied to a Data Store when it is created. '
    required:
      - DatastoreTypeVersion
    title: CreateFHIRDatastoreRequest
    type: object
  CreateFHIRDatastoreResponse:
    properties:
      DatastoreArn:
        allOf:
          - $ref: '#/definitions/DatastoreArn'
          - description: >-
              The datastore ARN is generated during the creation of the Data
              Store and can be found in the output from the initial Data Store
              creation call.
      DatastoreEndpoint:
        allOf:
          - $ref: '#/definitions/BoundedLengthString'
          - description: >-
              The AWS endpoint for the created Data Store. For preview, only
              US-east-1 endpoints are supported.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS-generated Data Store id. This id is in the output from the
              initial Data Store creation call.
      DatastoreStatus:
        allOf:
          - $ref: '#/definitions/DatastoreStatus'
          - description: >-
              The status of the FHIR Data Store. Possible statuses are
              ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
    required:
      - DatastoreId
      - DatastoreArn
      - DatastoreStatus
      - DatastoreEndpoint
    type: object
  DatastoreArn:
    pattern: >-
      ^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?
    type: string
  DatastoreFilter:
    description: The filters applied to Data Store query.
    properties:
      CreatedAfter:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A filter that allows the user to set cutoff dates for records. All
              Data Stores created after the specified date will be included in
              the results.
      CreatedBefore:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A filter that allows the user to set cutoff dates for records. All
              Data Stores created before the specified date will be included in
              the results. 
      DatastoreName:
        allOf:
          - $ref: '#/definitions/DatastoreName'
          - description: Allows the user to filter Data Store results by name.
      DatastoreStatus:
        allOf:
          - $ref: '#/definitions/DatastoreStatus'
          - description: Allows the user to filter Data Store results by status.
    type: object
  DatastoreId:
    maxLength: 32
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  DatastoreName:
    maxLength: 256
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  DatastoreProperties:
    description: >-
      Displays the properties of the Data Store, including the ID, Arn, name,
      and the status of the Data Store.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time that a Data Store was created. '
      DatastoreArn:
        allOf:
          - $ref: '#/definitions/DatastoreArn'
          - description: The Amazon Resource Name used in the creation of the Data Store.
      DatastoreEndpoint:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The AWS endpoint for the Data Store. Each Data Store will have
              it's own endpoint with Data Store ID in the endpoint URL.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: The AWS-generated ID number for the Data Store.
      DatastoreName:
        allOf:
          - $ref: '#/definitions/DatastoreName'
          - description: The user-generated name for the Data Store.
      DatastoreStatus:
        allOf:
          - $ref: '#/definitions/DatastoreStatus'
          - description: >-
              The status of the Data Store. Possible statuses are 'CREATING',
              'ACTIVE', 'DELETING', or 'DELETED'.
      DatastoreTypeVersion:
        allOf:
          - $ref: '#/definitions/FHIRVersion'
          - description: The FHIR version. Only R4 version data is supported.
      PreloadDataConfig:
        allOf:
          - $ref: '#/definitions/PreloadDataConfig'
          - description: >-
              The preloaded data configuration for the Data Store. Only data
              preloaded from Synthea is supported.
      SseConfiguration:
        allOf:
          - $ref: '#/definitions/SseConfiguration'
          - description: ' The server-side encryption key configuration for a customer provided encryption key (CMK). '
    required:
      - DatastoreId
      - DatastoreArn
      - DatastoreStatus
      - DatastoreTypeVersion
      - DatastoreEndpoint
    type: object
  DatastorePropertiesList:
    items:
      $ref: '#/definitions/DatastoreProperties'
    type: array
  DatastoreStatus:
    enum:
      - CREATING
      - ACTIVE
      - DELETING
      - DELETED
    type: string
  DeleteFHIRDatastoreRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: ' The AWS-generated ID for the Data Store to be deleted.'
    title: DeleteFHIRDatastoreRequest
    type: object
  DeleteFHIRDatastoreResponse:
    properties:
      DatastoreArn:
        allOf:
          - $ref: '#/definitions/DatastoreArn'
          - description: >-
              The Amazon Resource Name (ARN) that gives Amazon HealthLake access
              permission.
      DatastoreEndpoint:
        allOf:
          - $ref: '#/definitions/BoundedLengthString'
          - description: >-
              The AWS endpoint for the Data Store the user has requested to be
              deleted.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: The AWS-generated ID for the Data Store to be deleted.
      DatastoreStatus:
        allOf:
          - $ref: '#/definitions/DatastoreStatus'
          - description: >-
              The status of the Data Store that the user has requested to be
              deleted. 
    required:
      - DatastoreId
      - DatastoreArn
      - DatastoreStatus
      - DatastoreEndpoint
    type: object
  DescribeFHIRDatastoreRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS-generated Data Store id. This is part of the
              ‘CreateFHIRDatastore’ output.
    title: DescribeFHIRDatastoreRequest
    type: object
  DescribeFHIRDatastoreResponse:
    properties:
      DatastoreProperties:
        allOf:
          - $ref: '#/definitions/DatastoreProperties'
          - description: >-
              All properties associated with a Data Store, including the Data
              Store ID, Data Store ARN, Data Store name, Data Store status,
              created at, Data Store type version, and Data Store endpoint.
    required:
      - DatastoreProperties
    type: object
  DescribeFHIRExportJobRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS generated ID for the Data Store from which files are being
              exported from for an export job.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS generated ID for an export job.
    required:
      - DatastoreId
      - JobId
    title: DescribeFHIRExportJobRequest
    type: object
  DescribeFHIRExportJobResponse:
    properties:
      ExportJobProperties:
        allOf:
          - $ref: '#/definitions/ExportJobProperties'
          - description: >-
              Displays the properties of the export job, including the ID, Arn,
              Name, and the status of the job. 
    required:
      - ExportJobProperties
    type: object
  DescribeFHIRImportJobRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: The AWS-generated ID of the Data Store.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS-generated job ID.
    required:
      - DatastoreId
      - JobId
    title: DescribeFHIRImportJobRequest
    type: object
  DescribeFHIRImportJobResponse:
    properties:
      ImportJobProperties:
        allOf:
          - $ref: '#/definitions/ImportJobProperties'
          - description: >-
              The properties of the Import job request, including the ID, ARN,
              name, and the status of the job.
    required:
      - ImportJobProperties
    type: object
  EncryptionKeyID:
    maxLength: 400
    minLength: 1
    pattern: >-
      (arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\d:)?(\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))
    type: string
  ExportJobProperties:
    description: >-
      The properties of a FHIR export job, including the ID, ARN, name, and the
      status of the job.
    properties:
      DataAccessRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: The Amazon Resource Name used during the initiation of the job.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS generated ID for the Data Store from which files are being
              exported for an export job.
      EndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time an export job completed.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS generated ID for an export job.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The user generated name for an export job.
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: >-
              The status of a FHIR export job. Possible statuses are SUBMITTED,
              IN_PROGRESS, COMPLETED, or FAILED.
      Message:
        allOf:
          - $ref: '#/definitions/Message'
          - description: >-
              An explanation of any errors that may have occurred during the
              export job.
      OutputDataConfig:
        allOf:
          - $ref: '#/definitions/OutputDataConfig'
          - description: >-
              The output data configuration that was supplied when the export
              job was created.
      SubmitTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time an export job was initiated.
    required:
      - JobId
      - JobStatus
      - SubmitTime
      - DatastoreId
      - OutputDataConfig
    type: object
  ExportJobPropertiesList:
    items:
      $ref: '#/definitions/ExportJobProperties'
    type: array
  FHIRVersion:
    enum:
      - R4
    type: string
  IamRoleArn:
    maxLength: 2048
    minLength: 20
    pattern: 'arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+'
    type: string
  ImportJobProperties:
    description: >-
      Displays the properties of the import job, including the ID, Arn, Name,
      and the status of the Data Store.
    properties:
      DataAccessRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) that gives Amazon HealthLake access
              to your input data.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: 'The datastore id used when the Import job was created. '
      EndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the Import job was completed.
      InputDataConfig:
        allOf:
          - $ref: '#/definitions/InputDataConfig'
          - description: >-
              The input data configuration that was supplied when the Import job
              was created.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS-generated id number for the Import job.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The user-generated name for an Import job.
      JobOutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: >-
              The job status for an Import job. Possible statuses are SUBMITTED,
              IN_PROGRESS, COMPLETED, FAILED.
      Message:
        allOf:
          - $ref: '#/definitions/Message'
          - description: >-
              An explanation of any errors that may have occurred during the
              FHIR import job. 
      SubmitTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time that the Import job was submitted for processing.
    required:
      - JobId
      - JobStatus
      - SubmitTime
      - DatastoreId
      - InputDataConfig
    type: object
  ImportJobPropertiesList:
    items:
      $ref: '#/definitions/ImportJobProperties'
    type: array
  InputDataConfig:
    description: ' The input properties for an import job.'
    properties:
      S3Uri:
        allOf:
          - $ref: '#/definitions/S3Uri'
          - description: >-
              The S3Uri is the user specified S3 location of the FHIR data to be
              imported into Amazon HealthLake. 
    type: object
  InternalServerException: {}
  JobId:
    maxLength: 32
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  JobName:
    maxLength: 64
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  JobStatus:
    enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED_WITH_ERRORS
      - COMPLETED
      - FAILED
    type: string
  KmsEncryptionConfig:
    description: ' The customer-managed-key(CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption. '
    properties:
      CmkType:
        allOf:
          - $ref: '#/definitions/CmkType'
          - description: ' The type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs. '
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/EncryptionKeyID'
          - description: ' The KMS encryption key id/alias used to encrypt the Data Store contents at rest. '
    required:
      - CmkType
    type: object
  ListFHIRDatastoresRequest:
    properties:
      Filter:
        allOf:
          - $ref: '#/definitions/DatastoreFilter'
          - description: Lists all filters associated with a FHIR Data Store request.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResultsInteger'
          - description: >-
              The maximum number of Data Stores returned in a single page of a
              ListFHIRDatastoresRequest call.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: Fetches the next page of Data Stores when results are paginated.
    title: ListFHIRDatastoresRequest
    type: object
  ListFHIRDatastoresResponse:
    properties:
      DatastorePropertiesList:
        allOf:
          - $ref: '#/definitions/DatastorePropertiesList'
          - description: All properties associated with the listed Data Stores.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              Pagination token that can be used to retrieve the next page of
              results.
    required:
      - DatastorePropertiesList
    type: object
  ListFHIRExportJobsRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: ' This parameter limits the response to the export job with the specified Data Store ID. '
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: ' This parameter limits the response to the export job with the specified job name. '
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: ' This parameter limits the response to the export jobs with the specified job status. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResultsInteger'
          - description: ' This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. '
      SubmittedAfter:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' This parameter limits the response to FHIR export jobs submitted after a user specified date. '
      SubmittedBefore:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' This parameter limits the response to FHIR export jobs submitted before a user specified date. '
    required:
      - DatastoreId
    title: ListFHIRExportJobsRequest
    type: object
  ListFHIRExportJobsResponse:
    properties:
      ExportJobPropertiesList:
        allOf:
          - $ref: '#/definitions/ExportJobPropertiesList'
          - description: ' The properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. '
    required:
      - ExportJobPropertiesList
    type: object
  ListFHIRImportJobsRequest:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: ' This parameter limits the response to the import job with the specified Data Store ID. '
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: ' This parameter limits the response to the import job with the specified job name. '
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: ' This parameter limits the response to the import job with the specified job status. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResultsInteger'
          - description: ' This parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. '
      SubmittedAfter:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' This parameter limits the response to FHIR import jobs submitted after a user specified date. '
      SubmittedBefore:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: ' This parameter limits the response to FHIR import jobs submitted before a user specified date. '
    required:
      - DatastoreId
    title: ListFHIRImportJobsRequest
    type: object
  ListFHIRImportJobsResponse:
    properties:
      ImportJobPropertiesList:
        allOf:
          - $ref: '#/definitions/ImportJobPropertiesList'
          - description: ' The properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: ' A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. '
    required:
      - ImportJobPropertiesList
    type: object
  ListTagsForResourceRequest:
    properties:
      ResourceARN:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: ' The Amazon Resource Name(ARN) of the Data Store for which tags are being added. '
    required:
      - ResourceARN
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' Returns a list of tags associated with a Data Store. '
    type: object
  MaxResultsInteger:
    maximum: 500
    minimum: 1
    type: integer
  Message:
    maxLength: 2048
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  NextToken:
    maxLength: 8192
    pattern: '\p{ASCII}{0,8192}'
    type: string
  OutputDataConfig:
    description: >-
      The output data configuration that was supplied when the export job was
      created.
    properties:
      S3Configuration:
        allOf:
          - $ref: '#/definitions/S3Configuration'
          - description: ' The output data configuration that was supplied when the export job was created. '
    type: object
  PreloadDataConfig:
    description: ' The input properties for the preloaded Data Store. Only data preloaded from Synthea is supported.'
    properties:
      PreloadDataType:
        allOf:
          - $ref: '#/definitions/PreloadDataType'
          - description: >-
              The type of preloaded data. Only Synthea preloaded data is
              supported.
    required:
      - PreloadDataType
    type: object
  PreloadDataType:
    enum:
      - SYNTHEA
    type: string
  ResourceNotFoundException: {}
  S3Configuration:
    description: ' The configuration of the S3 bucket for either an import or export job. This includes assigning permissions for access. '
    properties:
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/EncryptionKeyID'
          - description: ' The KMS key ID used to access the S3 bucket. '
      S3Uri:
        allOf:
          - $ref: '#/definitions/S3Uri'
          - description: ' The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. '
    required:
      - S3Uri
      - KmsKeyId
    type: object
  S3Uri:
    maxLength: 1024
    pattern: 's3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?'
    type: string
  SseConfiguration:
    description: ' The server-side encryption key configuration for a customer provided encryption key. '
    properties:
      KmsEncryptionConfig:
        allOf:
          - $ref: '#/definitions/KmsEncryptionConfig'
          - description: ' The KMS encryption configuration used to provide details for data encryption. '
    required:
      - KmsEncryptionConfig
    type: object
  StartFHIRExportJobRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientTokenString'
          - description: An optional user provided token used for ensuring idempotency.
      DataAccessRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: The Amazon Resource Name used during the initiation of the job.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS generated ID for the Data Store from which files are being
              exported for an export job.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The user generated name for an export job.
      OutputDataConfig:
        allOf:
          - $ref: '#/definitions/OutputDataConfig'
          - description: >-
              The output data configuration that was supplied when the export
              job was created.
    required:
      - OutputDataConfig
      - DatastoreId
      - DataAccessRoleArn
      - ClientToken
    title: StartFHIRExportJobRequest
    type: object
  StartFHIRExportJobResponse:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: >-
              The AWS generated ID for the Data Store from which files are being
              exported for an export job.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS generated ID for an export job.
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: >-
              The status of a FHIR export job. Possible statuses are SUBMITTED,
              IN_PROGRESS, COMPLETED, or FAILED.
    required:
      - JobId
      - JobStatus
    type: object
  StartFHIRImportJobRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientTokenString'
          - description: Optional user provided token used for ensuring idempotency.
      DataAccessRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) that gives Amazon HealthLake access
              permission.
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: The AWS-generated Data Store ID.
      InputDataConfig:
        allOf:
          - $ref: '#/definitions/InputDataConfig'
          - description: >-
              The input properties of the FHIR Import job in the StartFHIRImport
              job request.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: >-
              The name of the FHIR Import job in the StartFHIRImport job
              request.
      JobOutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
    required:
      - InputDataConfig
      - JobOutputDataConfig
      - DatastoreId
      - DataAccessRoleArn
      - ClientToken
    title: StartFHIRImportJobRequest
    type: object
  StartFHIRImportJobResponse:
    properties:
      DatastoreId:
        allOf:
          - $ref: '#/definitions/DatastoreId'
          - description: The AWS-generated Data Store ID.
      JobId:
        allOf:
          - $ref: '#/definitions/JobId'
          - description: The AWS-generated job ID.
      JobStatus:
        allOf:
          - $ref: '#/definitions/JobStatus'
          - description: The status of an import job.
    required:
      - JobId
      - JobStatus
    type: object
  String:
    maxLength: 10000
    pattern: '[\P{M}\p{M}]{0,10000}'
    type: string
  Tag:
    description: ' A tag is a label consisting of a user-defined key and value. The form for tags is {"Key", "Value"} '
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: ' The key portion of a tag. Tag keys are case sensitive. '
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: ' The value portion of tag. Tag values are case sensitive. '
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      ResourceARN:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: ' The Amazon Resource Name(ARN)that gives Amazon HealthLake access to the Data Store which tags are being added to. '
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: ' The user specified key and value pair tags being added to a Data Store. '
    required:
      - ResourceARN
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  UntagResourceRequest:
    properties:
      ResourceARN:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: ' "The Amazon Resource Name(ARN) of the Data Store for which tags are being removed '
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: ' The keys for the tags to be removed from the Healthlake Data Store. '
    required:
      - ResourceARN
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/healthlake/'
host: healthlake.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    Amazon HealthLake is a HIPAA eligibile service that allows customers to
    store, transform, query, and analyze their FHIR-formatted data in a
    consistent fashion in the cloud.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon HealthLake
  version: '2017-07-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: healthlake
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/healthlake-2017-07-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: healthlake
paths:
  /#X-Amz-Target=HealthLake.CreateFHIRDatastore:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a Data Store that can ingest and export FHIR formatted data.
      operationId: CreateFHIRDatastore
      parameters:
        - enum:
            - HealthLake.CreateFHIRDatastore
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFHIRDatastoreRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFHIRDatastoreResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.DeleteFHIRDatastore:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Deletes a Data Store. '
      operationId: DeleteFHIRDatastore
      parameters:
        - enum:
            - HealthLake.DeleteFHIRDatastore
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFHIRDatastoreRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFHIRDatastoreResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.DescribeFHIRDatastore:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets the properties associated with the FHIR Data Store, including the
        Data Store ID, Data Store ARN, Data Store name, Data Store status,
        created at, Data Store type version, and Data Store endpoint.
      operationId: DescribeFHIRDatastore
      parameters:
        - enum:
            - HealthLake.DescribeFHIRDatastore
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFHIRDatastoreRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFHIRDatastoreResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.DescribeFHIRExportJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Displays the properties of a FHIR export job, including the ID, ARN,
        name, and the status of the job.
      operationId: DescribeFHIRExportJob
      parameters:
        - enum:
            - HealthLake.DescribeFHIRExportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFHIRExportJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFHIRExportJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.DescribeFHIRImportJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Displays the properties of a FHIR import job, including the ID, ARN,
        name, and the status of the job. 
      operationId: DescribeFHIRImportJob
      parameters:
        - enum:
            - HealthLake.DescribeFHIRImportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFHIRImportJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFHIRImportJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.ListFHIRDatastores:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all FHIR Data Stores that are in the user’s account, regardless of
        Data Store status.
      operationId: ListFHIRDatastores
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - HealthLake.ListFHIRDatastores
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFHIRDatastoresRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFHIRDatastoresResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.ListFHIRExportJobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Lists all FHIR export jobs associated with an account and their statuses. '
      operationId: ListFHIRExportJobs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - HealthLake.ListFHIRExportJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFHIRExportJobsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFHIRExportJobsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.ListFHIRImportJobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Lists all FHIR import jobs associated with an account and their statuses. '
      operationId: ListFHIRImportJobs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - HealthLake.ListFHIRImportJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFHIRImportJobsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFHIRImportJobsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Returns a list of all existing tags associated with a Data Store. '
      operationId: ListTagsForResource
      parameters:
        - enum:
            - HealthLake.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=HealthLake.StartFHIRExportJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Begins a FHIR export job.
      operationId: StartFHIRExportJob
      parameters:
        - enum:
            - HealthLake.StartFHIRExportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartFHIRExportJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartFHIRExportJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.StartFHIRImportJob:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Begins a FHIR Import job.
      operationId: StartFHIRImportJob
      parameters:
        - enum:
            - HealthLake.StartFHIRImportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartFHIRImportJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartFHIRImportJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /#X-Amz-Target=HealthLake.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Adds a user specifed key and value tag to a Data Store. '
      operationId: TagResource
      parameters:
        - enum:
            - HealthLake.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /#X-Amz-Target=HealthLake.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: ' Removes tags from a Data Store. '
      operationId: UntagResource
      parameters:
        - enum:
            - HealthLake.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

