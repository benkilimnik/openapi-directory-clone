basePath: /
definitions:
  AccessDeniedException: {}
  AccountId:
    maxLength: 32
    minLength: 12
    type: string
  Action:
    enum:
      - ALLOW
      - BLOCK
      - ALERT
    type: string
  Arn:
    maxLength: 255
    minLength: 1
    type: string
  AssociateFirewallRuleGroupRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows failed
              requests to be retried without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
      MutationProtection:
        allOf:
          - $ref: '#/definitions/MutationProtectionStatus'
          - description: >-
              If enabled, this setting disallows modification or removal of the
              association, to help prevent against accidentally altering DNS
              firewall protections. When you create the association, the default
              setting is <code>DISABLED</code>. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A name that lets you identify the association, to manage and use
              it.
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              <p>The setting that determines the processing order of the rule
              group among the rule groups that you associate with the specified
              VPC. DNS Firewall filters VPC traffic starting from the rule group
              with the lowest numeric priority setting. </p> <p>You must specify
              a unique priority for each rule group that you associate with a
              single VPC. To make it easier to insert rule groups later, leave
              space between the numbers, for example, use 101, 200, and so on.
              You can change the priority setting for a rule group association
              after you create it.</p> <p>The allowed values for
              <code>Priority</code> are between 100 and 9900.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the rule group association. 
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the VPC that you want to associate with
              the rule group. 
    required:
      - CreatorRequestId
      - FirewallRuleGroupId
      - VpcId
      - Priority
      - Name
    title: AssociateFirewallRuleGroupRequest
    type: object
  AssociateFirewallRuleGroupResponse:
    properties:
      FirewallRuleGroupAssociation:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociation'
          - description: >-
              The association that you just created. The association has an ID
              that you can use to identify it in other requests, like update and
              delete.
    type: object
  AssociateResolverEndpointIpAddressRequest:
    properties:
      IpAddress:
        allOf:
          - $ref: '#/definitions/IpAddressUpdate'
          - description: >-
              Either the IPv4 address that you want to add to a Resolver
              endpoint or a subnet ID. If you specify a subnet ID, Resolver
              chooses an IP address for you from the available IPs in the
              specified subnet.
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver endpoint that you want to associate IP
              addresses with.
    required:
      - ResolverEndpointId
      - IpAddress
    title: AssociateResolverEndpointIpAddressRequest
    type: object
  AssociateResolverEndpointIpAddressResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: >-
              The response to an <code>AssociateResolverEndpointIpAddress</code>
              request.
    type: object
  AssociateResolverQueryLogConfigRequest:
    properties:
      ResolverQueryLogConfigId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the query logging configuration that you want to
              associate a VPC with.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              <p>The ID of an Amazon VPC that you want this query logging
              configuration to log queries for.</p> <note> <p>The VPCs and the
              query logging configuration must be in the same Region.</p>
              </note>
    required:
      - ResolverQueryLogConfigId
      - ResourceId
    title: AssociateResolverQueryLogConfigRequest
    type: object
  AssociateResolverQueryLogConfigResponse:
    properties:
      ResolverQueryLogConfigAssociation:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociation'
          - description: >-
              A complex type that contains settings for a specified association
              between an Amazon VPC and a query logging configuration.
    type: object
  AssociateResolverRuleRequest:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A name for the association that you're creating between a Resolver
              rule and a VPC.
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver rule that you want to associate with the
              VPC. To list the existing Resolver rules, use <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>.
      VPCId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the VPC that you want to associate the Resolver rule
              with.
    required:
      - ResolverRuleId
      - VPCId
    title: AssociateResolverRuleRequest
    type: object
  AssociateResolverRuleResponse:
    properties:
      ResolverRuleAssociation:
        allOf:
          - $ref: '#/definitions/ResolverRuleAssociation'
          - description: >-
              Information about the <code>AssociateResolverRule</code> request,
              including the status of the request.
    type: object
  BlockOverrideDnsType:
    enum:
      - CNAME
    type: string
  BlockOverrideDomain:
    maxLength: 255
    minLength: 1
    type: string
  BlockOverrideTtl:
    maximum: 604800
    minimum: 0
    type: integer
  BlockResponse:
    enum:
      - NODATA
      - NXDOMAIN
      - OVERRIDE
    type: string
  Boolean:
    type: boolean
  ConflictException: {}
  Count:
    type: integer
  CreateFirewallDomainListRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows you to
              retry failed requests without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A name that lets you identify the domain list to manage and use
              it.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the domain list. 
    required:
      - CreatorRequestId
      - Name
    title: CreateFirewallDomainListRequest
    type: object
  CreateFirewallDomainListResponse:
    properties:
      FirewallDomainList:
        allOf:
          - $ref: '#/definitions/FirewallDomainList'
          - description: The domain list that you just created.
    type: object
  CreateFirewallRuleGroupRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A name that lets you identify the rule group, to manage and use
              it.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the rule group. 
    required:
      - CreatorRequestId
      - Name
    title: CreateFirewallRuleGroupRequest
    type: object
  CreateFirewallRuleGroupResponse:
    properties:
      FirewallRuleGroup:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroup'
          - description: 'A collection of rules used to filter DNS network traffic. '
    type: object
  CreateFirewallRuleRequest:
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: >-
              <p>The action that DNS Firewall should take on a DNS query when it
              matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go
              through.</p> </li> <li> <p> <code>ALERT</code> - Permit the
              request and send metrics and logs to Cloud Watch.</p> </li> <li>
              <p> <code>BLOCK</code> - Disallow the request. This option
              requires additional details in the rule's
              <code>BlockResponse</code>. </p> </li> </ul>
      BlockOverrideDnsType:
        allOf:
          - $ref: '#/definitions/BlockOverrideDnsType'
          - description: >-
              <p>The DNS record's type. This determines the format of the record
              value that you provided in <code>BlockOverrideDomain</code>. Used
              for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
              <p>This setting is required if the <code>BlockResponse</code>
              setting is <code>OVERRIDE</code>.</p>
      BlockOverrideDomain:
        allOf:
          - $ref: '#/definitions/BlockOverrideDomain'
          - description: >-
              <p>The custom DNS record to send back in response to the query.
              Used for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
              <p>This setting is required if the <code>BlockResponse</code>
              setting is <code>OVERRIDE</code>.</p>
      BlockOverrideTtl:
        allOf:
          - $ref: '#/definitions/BlockOverrideTtl'
          - description: >-
              <p>The recommended amount of time, in seconds, for the DNS
              resolver or web browser to cache the provided override record.
              Used for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
              <p>This setting is required if the <code>BlockResponse</code>
              setting is <code>OVERRIDE</code>.</p>
      BlockResponse:
        allOf:
          - $ref: '#/definitions/BlockResponse'
          - description: >-
              <p>The way that you want DNS Firewall to block the request, used
              with the rule action setting <code>BLOCK</code>. </p> <ul> <li>
              <p> <code>NODATA</code> - Respond indicating that the query was
              successful, but no response is available for it.</p> </li> <li>
              <p> <code>NXDOMAIN</code> - Respond indicating that the domain
              name that's in the query doesn't exist.</p> </li> <li> <p>
              <code>OVERRIDE</code> - Provide a custom override in the response.
              This option requires custom handling details in the rule's
              <code>BlockOverride*</code> settings. </p> </li> </ul> <p>This
              setting is required if the rule action setting is
              <code>BLOCK</code>.</p>
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows you to
              retry failed requests without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list that you want to use in the rule. '
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the firewall rule group where you want to
              create the rule. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: A name that lets you identify the rule in the rule group.
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              <p>The setting that determines the processing order of the rule in
              the rule group. DNS Firewall processes the rules in a rule group
              by order of priority, starting from the lowest setting.</p> <p>You
              must specify a unique priority for each rule in a rule group. To
              make it easier to insert rules later, leave space between the
              numbers, for example, use 100, 200, and so on. You can change the
              priority setting for the rules in a rule group at any time.</p>
    required:
      - CreatorRequestId
      - FirewallRuleGroupId
      - FirewallDomainListId
      - Priority
      - Action
      - Name
    title: CreateFirewallRuleRequest
    type: object
  CreateFirewallRuleResponse:
    properties:
      FirewallRule:
        allOf:
          - $ref: '#/definitions/FirewallRule'
          - description: 'The firewall rule that you just created. '
    type: object
  CreateResolverEndpointRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows failed
              requests to be retried without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      Direction:
        allOf:
          - $ref: '#/definitions/ResolverEndpointDirection'
          - description: >-
              <p>Specify the applicable value:</p> <ul> <li> <p>
              <code>INBOUND</code>: Resolver forwards DNS queries to the DNS
              service for a VPC from your network</p> </li> <li> <p>
              <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS
              service for a VPC to your network</p> </li> </ul>
      IpAddresses:
        allOf:
          - $ref: '#/definitions/IpAddressesRequest'
          - description: >-
              The subnets and IP addresses in your VPC that DNS queries
              originate from (for outbound endpoints) or that you forward DNS
              queries to (for inbound endpoints). The subnet ID uniquely
              identifies a VPC. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A friendly name that lets you easily find a configuration in the
              Resolver dashboard in the Route 53 console.
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIds'
          - description: >-
              The ID of one or more security groups that you want to use to
              control access to this VPC. The security group that you specify
              must include one or more inbound rules (for inbound Resolver
              endpoints) or outbound rules (for outbound Resolver endpoints).
              Inbound and outbound rules must allow TCP and UDP access. For
              inbound access, open port 53. For outbound access, open the port
              that you're using for DNS queries on your network.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the endpoint.
    required:
      - CreatorRequestId
      - SecurityGroupIds
      - Direction
      - IpAddresses
    title: CreateResolverEndpointRequest
    type: object
  CreateResolverEndpointResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: >-
              Information about the <code>CreateResolverEndpoint</code> request,
              including the status of the request.
    type: object
  CreateResolverQueryLogConfigRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows failed
              requests to be retried without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      DestinationArn:
        allOf:
          - $ref: '#/definitions/DestinationArn'
          - description: >-
              <p>The ARN of the resource that you want Resolver to send query
              logs. You can send query logs to an S3 bucket, a CloudWatch Logs
              log group, or a Kinesis Data Firehose delivery stream. Examples of
              valid values include the following:</p> <ul> <li> <p> <b>S3
              bucket</b>: </p> <p> <code>arn:aws:s3:::examplebucket</code> </p>
              <p>You can optionally append a file prefix to the end of the
              ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code>
              </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p>
              <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code>
              </p> </li> <li> <p> <b>Kinesis Data Firehose delivery
              stream</b>:</p> <p>
              <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code>
              </p> </li> </ul>
      Name:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigName'
          - description: The name that you want to give the query logging configuration.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the query logging configuration.
    required:
      - Name
      - DestinationArn
      - CreatorRequestId
    title: CreateResolverQueryLogConfigRequest
    type: object
  CreateResolverQueryLogConfigResponse:
    properties:
      ResolverQueryLogConfig:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfig'
          - description: >-
              Information about the <code>CreateResolverQueryLogConfig</code>
              request, including the status of the request.
    type: object
  CreateResolverRuleRequest:
    properties:
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request and that allows failed
              requests to be retried without the risk of running the operation
              twice. <code>CreatorRequestId</code> can be any unique string, for
              example, a date/time stamp. 
      DomainName:
        allOf:
          - $ref: '#/definitions/DomainName'
          - description: >-
              DNS queries for this domain name are forwarded to the IP addresses
              that you specify in <code>TargetIps</code>. If a query matches
              multiple Resolver rules (example.com and www.example.com),
              outbound DNS queries are routed using the Resolver rule that
              contains the most specific domain name (www.example.com).
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              A friendly name that lets you easily find a rule in the Resolver
              dashboard in the Route 53 console.
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the outbound Resolver endpoint that you want to use to
              route DNS queries to the IP addresses that you specify in
              <code>TargetIps</code>.
      RuleType:
        allOf:
          - $ref: '#/definitions/RuleTypeOption'
          - description: >-
              <p>When you want to forward DNS queries for specified domain name
              to resolvers on your network, specify <code>FORWARD</code>.</p>
              <p>When you have a forwarding rule to forward DNS queries for a
              domain to your network and you want Resolver to process queries
              for a subdomain of that domain, specify <code>SYSTEM</code>.</p>
              <p>For example, to forward DNS queries for example.com to
              resolvers on your network, you create a rule and specify
              <code>FORWARD</code> for <code>RuleType</code>. To then have
              Resolver process queries for apex.example.com, you create a rule
              and specify <code>SYSTEM</code> for <code>RuleType</code>.</p>
              <p>Currently, only Resolver can create rules that have a value of
              <code>RECURSIVE</code> for <code>RuleType</code>.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of the tag keys and values that you want to associate with
              the endpoint.
      TargetIps:
        allOf:
          - $ref: '#/definitions/TargetList'
          - description: >-
              <p>The IPs that you want Resolver to forward DNS queries to. You
              can specify only IPv4 addresses. Separate IP addresses with a
              space.</p> <p> <code>TargetIps</code> is available only when the
              value of <code>Rule type</code> is <code>FORWARD</code>.</p>
    required:
      - CreatorRequestId
      - RuleType
      - DomainName
    title: CreateResolverRuleRequest
    type: object
  CreateResolverRuleResponse:
    properties:
      ResolverRule:
        allOf:
          - $ref: '#/definitions/ResolverRule'
          - description: >-
              Information about the <code>CreateResolverRule</code> request,
              including the status of the request.
    type: object
  CreatorRequestId:
    maxLength: 255
    minLength: 1
    type: string
  DeleteFirewallDomainListRequest:
    properties:
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list that you want to delete. '
    required:
      - FirewallDomainListId
    title: DeleteFirewallDomainListRequest
    type: object
  DeleteFirewallDomainListResponse:
    properties:
      FirewallDomainList:
        allOf:
          - $ref: '#/definitions/FirewallDomainList'
          - description: 'The domain list that you just deleted. '
    type: object
  DeleteFirewallRuleGroupRequest:
    properties:
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the firewall rule group that you want to
              delete. 
    required:
      - FirewallRuleGroupId
    title: DeleteFirewallRuleGroupRequest
    type: object
  DeleteFirewallRuleGroupResponse:
    properties:
      FirewallRuleGroup:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroup'
          - description: 'A collection of rules used to filter DNS network traffic. '
    type: object
  DeleteFirewallRuleRequest:
    properties:
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list that''s used in the rule. '
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the firewall rule group that you want to
              delete the rule from. 
    required:
      - FirewallRuleGroupId
      - FirewallDomainListId
    title: DeleteFirewallRuleRequest
    type: object
  DeleteFirewallRuleResponse:
    properties:
      FirewallRule:
        allOf:
          - $ref: '#/definitions/FirewallRule'
          - description: The specification for the firewall rule that you just deleted.
    type: object
  DeleteResolverEndpointRequest:
    properties:
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Resolver endpoint that you want to delete.
    required:
      - ResolverEndpointId
    title: DeleteResolverEndpointRequest
    type: object
  DeleteResolverEndpointResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: >-
              Information about the <code>DeleteResolverEndpoint</code> request,
              including the status of the request.
    type: object
  DeleteResolverQueryLogConfigRequest:
    properties:
      ResolverQueryLogConfigId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the query logging configuration that you want to delete.
    required:
      - ResolverQueryLogConfigId
    title: DeleteResolverQueryLogConfigRequest
    type: object
  DeleteResolverQueryLogConfigResponse:
    properties:
      ResolverQueryLogConfig:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfig'
          - description: >-
              Information about the query logging configuration that you
              deleted, including the status of the request.
    type: object
  DeleteResolverRuleRequest:
    properties:
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Resolver rule that you want to delete.
    required:
      - ResolverRuleId
    title: DeleteResolverRuleRequest
    type: object
  DeleteResolverRuleResponse:
    properties:
      ResolverRule:
        allOf:
          - $ref: '#/definitions/ResolverRule'
          - description: >-
              Information about the <code>DeleteResolverRule</code> request,
              including the status of the request.
    type: object
  DestinationArn:
    maxLength: 600
    minLength: 1
    type: string
  DisassociateFirewallRuleGroupRequest:
    properties:
      FirewallRuleGroupAssociationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
    required:
      - FirewallRuleGroupAssociationId
    title: DisassociateFirewallRuleGroupRequest
    type: object
  DisassociateFirewallRuleGroupResponse:
    properties:
      FirewallRuleGroupAssociation:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociation'
          - description: 'The firewall rule group association that you just removed. '
    type: object
  DisassociateResolverEndpointIpAddressRequest:
    properties:
      IpAddress:
        allOf:
          - $ref: '#/definitions/IpAddressUpdate'
          - description: The IPv4 address that you want to remove from a Resolver endpoint.
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver endpoint that you want to disassociate an
              IP address from.
    required:
      - ResolverEndpointId
      - IpAddress
    title: DisassociateResolverEndpointIpAddressRequest
    type: object
  DisassociateResolverEndpointIpAddressResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: >-
              The response to an
              <code>DisassociateResolverEndpointIpAddress</code> request.
    type: object
  DisassociateResolverQueryLogConfigRequest:
    properties:
      ResolverQueryLogConfigId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the query logging configuration that you want to
              disassociate a specified VPC from.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Amazon VPC that you want to disassociate from a
              specified query logging configuration.
    required:
      - ResolverQueryLogConfigId
      - ResourceId
    title: DisassociateResolverQueryLogConfigRequest
    type: object
  DisassociateResolverQueryLogConfigResponse:
    properties:
      ResolverQueryLogConfigAssociation:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociation'
          - description: >-
              A complex type that contains settings for the association that you
              deleted between an Amazon VPC and a query logging configuration.
    type: object
  DisassociateResolverRuleRequest:
    properties:
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver rule that you want to disassociate from the
              specified VPC.
      VPCId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the VPC that you want to disassociate the Resolver rule
              from.
    required:
      - VPCId
      - ResolverRuleId
    title: DisassociateResolverRuleRequest
    type: object
  DisassociateResolverRuleResponse:
    properties:
      ResolverRuleAssociation:
        allOf:
          - $ref: '#/definitions/ResolverRuleAssociation'
          - description: >-
              Information about the <code>DisassociateResolverRule</code>
              request, including the status of the request.
    type: object
  DomainListFileUrl:
    maxLength: 1024
    minLength: 1
    type: string
  DomainName:
    maxLength: 256
    minLength: 1
    type: string
  Filter:
    description: >-
      <p>For Resolver list operations (<a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>),
      and <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverDnssecConfigs.html">ListResolverDnssecConfigs</a>),
      an optional specification to return a subset of objects.</p> <p>To filter
      objects, such as Resolver endpoints or Resolver rules, you specify
      <code>Name</code> and <code>Values</code>. For example, to list only
      inbound Resolver endpoints, specify <code>Direction</code> for
      <code>Name</code> and specify <code>INBOUND</code> for
      <code>Values</code>. </p>
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/FilterName'
          - description: >-
              <p>The name of the parameter that you want to use to filter
              objects.</p> <p>The valid values for <code>Name</code> depend on
              the action that you're including the filter in, <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>,
              <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>,
              <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>,
              <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a>,
              or <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>.</p>
              <note> <p>In early versions of Resolver, values for
              <code>Name</code> were listed as uppercase, with underscore (_)
              delimiters. For example, <code>CreatorRequestId</code> was
              originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase
              values for <code>Name</code> are still supported.</p> </note> <p>
              <b>ListResolverEndpoints</b> </p> <p>Valid values for
              <code>Name</code> include the following:</p> <ul> <li> <p>
              <code>CreatorRequestId</code>: The value that you specified when
              you created the Resolver endpoint.</p> </li> <li> <p>
              <code>Direction</code>: Whether you want to return inbound or
              outbound Resolver endpoints. If you specify <code>DIRECTION</code>
              for <code>Name</code>, specify <code>INBOUND</code> or
              <code>OUTBOUND</code> for <code>Values</code>.</p> </li> <li> <p>
              <code>HostVPCId</code>: The ID of the VPC that inbound DNS queries
              pass through on the way from your network to your VPCs in a
              region, or the VPC that outbound queries pass through on the way
              from your VPCs to your network. In a <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>
              request, <code>SubnetId</code> indirectly identifies the VPC. In a
              <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>
              request, the VPC ID for a Resolver endpoint is returned in the
              <code>HostVPCId</code> element. </p> </li> <li> <p>
              <code>IpAddressCount</code>: The number of IP addresses that you
              have associated with the Resolver endpoint.</p> </li> <li> <p>
              <code>Name</code>: The name of the Resolver endpoint.</p> </li>
              <li> <p> <code>SecurityGroupIds</code>: The IDs of the VPC
              security groups that you specified when you created the Resolver
              endpoint.</p> </li> <li> <p> <code>Status</code>: The status of
              the Resolver endpoint. If you specify <code>Status</code> for
              <code>Name</code>, specify one of the following status codes for
              <code>Values</code>: <code>CREATING</code>,
              <code>OPERATIONAL</code>, <code>UPDATING</code>,
              <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>, or
              <code>DELETING</code>. For more information, see
              <code>Status</code> in <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html">ResolverEndpoint</a>.</p>
              </li> </ul> <p> <b>ListResolverRules</b> </p> <p>Valid values for
              <code>Name</code> include the following:</p> <ul> <li> <p>
              <code>CreatorRequestId</code>: The value that you specified when
              you created the Resolver rule.</p> </li> <li> <p>
              <code>DomainName</code>: The domain name for which Resolver is
              forwarding DNS queries to your network. In the value that you
              specify for <code>Values</code>, include a trailing dot (.) after
              the domain name. For example, if the domain name is example.com,
              specify the following value. Note the "." after
              <code>com</code>:</p> <p> <code>example.com.</code> </p> </li>
              <li> <p> <code>Name</code>: The name of the Resolver rule.</p>
              </li> <li> <p> <code>ResolverEndpointId</code>: The ID of the
              Resolver endpoint that the Resolver rule is associated with.</p>
              <note> <p>You can filter on the Resolver endpoint only for rules
              that have a value of <code>FORWARD</code> for
              <code>RuleType</code>.</p> </note> </li> <li> <p>
              <code>Status</code>: The status of the Resolver rule. If you
              specify <code>Status</code> for <code>Name</code>, specify one of
              the following status codes for <code>Values</code>:
              <code>COMPLETE</code>, <code>DELETING</code>,
              <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p>
              <code>Type</code>: The type of the Resolver rule. If you specify
              <code>TYPE</code> for <code>Name</code>, specify
              <code>FORWARD</code> or <code>SYSTEM</code> for
              <code>Values</code>.</p> </li> </ul> <p>
              <b>ListResolverRuleAssociations</b> </p> <p>Valid values for
              <code>Name</code> include the following:</p> <ul> <li> <p>
              <code>Name</code>: The name of the Resolver rule association.</p>
              </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver
              rule that is associated with one or more VPCs.</p> </li> <li> <p>
              <code>Status</code>: The status of the Resolver rule association.
              If you specify <code>Status</code> for <code>Name</code>, specify
              one of the following status codes for <code>Values</code>:
              <code>CREATING</code>, <code>COMPLETE</code>,
              <code>DELETING</code>, or <code>FAILED</code>.</p> </li> <li> <p>
              <code>VPCId</code>: The ID of the VPC that the Resolver rule is
              associated with.</p> </li> </ul> <p>
              <b>ListResolverQueryLogConfigs</b> </p> <p>Valid values for
              <code>Name</code> include the following:</p> <ul> <li> <p>
              <code>Arn</code>: The ARN for the query logging configuration.</p>
              </li> <li> <p> <code>AssociationCount</code>: The number of VPCs
              that are associated with the query logging configuration.</p>
              </li> <li> <p> <code>CreationTime</code>: The date and time that
              the query logging configuration was created, in Unix time format
              and Coordinated Universal Time (UTC). </p> </li> <li> <p>
              <code>CreatorRequestId</code>: A unique string that identifies the
              request that created the query logging configuration.</p> </li>
              <li> <p> <code>Destination</code>: The Amazon Web Services service
              that you want to forward query logs to. Valid values include the
              following:</p> <ul> <li> <p> <code>S3</code> </p> </li> <li> <p>
              <code>CloudWatchLogs</code> </p> </li> <li> <p>
              <code>KinesisFirehose</code> </p> </li> </ul> </li> <li> <p>
              <code>DestinationArn</code>: The ARN of the location that Resolver
              is sending query logs to. This value can be the ARN for an S3
              bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose
              delivery stream.</p> </li> <li> <p> <code>Id</code>: The ID of the
              query logging configuration</p> </li> <li> <p> <code>Name</code>:
              The name of the query logging configuration</p> </li> <li> <p>
              <code>OwnerId</code>: The Amazon Web Services account ID for the
              account that created the query logging configuration.</p> </li>
              <li> <p> <code>ShareStatus</code>: An indication of whether the
              query logging configuration is shared with other Amazon Web
              Services accounts, or was shared with the current account by
              another Amazon Web Services account. Valid values include:
              <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or
              <code>SHARED_BY_ME</code>.</p> </li> <li> <p> <code>Status</code>:
              The status of the query logging configuration. If you specify
              <code>Status</code> for <code>Name</code>, specify the applicable
              status code for <code>Values</code>: <code>CREATING</code>,
              <code>CREATED</code>, <code>DELETING</code>, or
              <code>FAILED</code>. For more information, see <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status">Status</a>.
              </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b>
              </p> <p>Valid values for <code>Name</code> include the
              following:</p> <ul> <li> <p> <code>CreationTime</code>: The date
              and time that the VPC was associated with the query logging
              configuration, in Unix time format and Coordinated Universal Time
              (UTC).</p> </li> <li> <p> <code>Error</code>: If the value of
              <code>Status</code> is <code>FAILED</code>, specify the cause:
              <code>DESTINATION_NOT_FOUND</code> or
              <code>ACCESS_DENIED</code>.</p> </li> <li> <p> <code>Id</code>:
              The ID of the query logging association.</p> </li> <li> <p>
              <code>ResolverQueryLogConfigId</code>: The ID of the query logging
              configuration that a VPC is associated with.</p> </li> <li> <p>
              <code>ResourceId</code>: The ID of the Amazon VPC that is
              associated with the query logging configuration.</p> </li> <li>
              <p> <code>Status</code>: The status of the query logging
              association. If you specify <code>Status</code> for
              <code>Name</code>, specify the applicable status code for
              <code>Values</code>: <code>CREATING</code>, <code>CREATED</code>,
              <code>DELETING</code>, or <code>FAILED</code>. For more
              information, see <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status">Status</a>.
              </p> </li> </ul>
      Values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: >-
              When you're using a <code>List</code> operation and you want the
              operation to return a subset of objects, such as Resolver
              endpoints or Resolver rules, the value of the parameter that you
              want to use to filter objects. For example, to list only inbound
              Resolver endpoints, specify <code>Direction</code> for
              <code>Name</code> and specify <code>INBOUND</code> for
              <code>Values</code>.
    type: object
  FilterName:
    maxLength: 64
    minLength: 1
    type: string
  FilterValue:
    maxLength: 600
    minLength: 1
    type: string
  FilterValues:
    items:
      $ref: '#/definitions/FilterValue'
    type: array
  Filters:
    items:
      $ref: '#/definitions/Filter'
    type: array
  FirewallConfig:
    description: >-
      Configuration of the firewall behavior provided by DNS Firewall for a
      single VPC from Amazon Virtual Private Cloud (Amazon VPC). 
    properties:
      FirewallFailOpen:
        allOf:
          - $ref: '#/definitions/FirewallFailOpenStatus'
          - description: >-
              <p>Determines how DNS Firewall operates during failures, for
              example when all traffic that is sent to DNS Firewall fails to
              receive a reply. </p> <ul> <li> <p>By default, fail open is
              disabled, which means the failure mode is closed. This approach
              favors security over availability. DNS Firewall returns a failure
              error when it is unable to properly evaluate a query. </p> </li>
              <li> <p>If you enable this option, the failure mode is open. This
              approach favors availability over security. DNS Firewall allows
              queries to proceed if it is unable to properly evaluate them. </p>
              </li> </ul> <p>This behavior is only enforced for VPCs that have
              at least one DNS Firewall rule group association. </p>
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the firewall configuration.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The Amazon Web Services account ID of the owner of the VPC that
              this firewall configuration applies to.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the VPC that this firewall configuration applies to.
    type: object
  FirewallConfigList:
    items:
      $ref: '#/definitions/FirewallConfig'
    type: array
  FirewallDomainImportOperation:
    enum:
      - REPLACE
    type: string
  FirewallDomainList:
    description: >-
      <p>High-level information about a list of firewall domains for use in a
      <a>FirewallRule</a>. This is returned by <a>GetFirewallDomainList</a>.</p>
      <p>To retrieve the domains that are defined for this domain list, call
      <a>ListFirewallDomains</a>.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the firewall domain list.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the domain list was created, in Unix time
              format and Coordinated Universal Time (UTC). 
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      DomainCount:
        allOf:
          - $ref: '#/definitions/Unsigned'
          - description: The number of domain names that are specified in the domain list.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list. '
      ManagedOwnerName:
        allOf:
          - $ref: '#/definitions/ServicePrinciple'
          - description: >-
              The owner of the list, used only for lists that are not managed by
              you. For example, the managed domain list
              <code>AWSManagedDomainsMalwareDomainList</code> has the managed
              owner name <code>Route 53 Resolver DNS Firewall</code>.
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the domain list was last modified, in Unix
              time format and Coordinated Universal Time (UTC). 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: 'The name of the domain list. '
      Status:
        allOf:
          - $ref: '#/definitions/FirewallDomainListStatus'
          - description: 'The status of the domain list. '
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: 'Additional information about the status of the list, if available.'
    type: object
  FirewallDomainListMetadata:
    description: >-
      <p>Minimal high-level information for a firewall domain list. The action
      <a>ListFirewallDomainLists</a> returns an array of these objects. </p>
      <p>To retrieve full information for a firewall domain list, call
      <a>GetFirewallDomainList</a> and <a>ListFirewallDomains</a>.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the firewall domain list
              metadata.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list. '
      ManagedOwnerName:
        allOf:
          - $ref: '#/definitions/ServicePrinciple'
          - description: >-
              The owner of the list, used only for lists that are not managed by
              you. For example, the managed domain list
              <code>AWSManagedDomainsMalwareDomainList</code> has the managed
              owner name <code>Route 53 Resolver DNS Firewall</code>.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: 'The name of the domain list. '
    type: object
  FirewallDomainListMetadataList:
    items:
      $ref: '#/definitions/FirewallDomainListMetadata'
    type: array
  FirewallDomainListStatus:
    enum:
      - COMPLETE
      - COMPLETE_IMPORT_FAILED
      - IMPORTING
      - DELETING
      - UPDATING
    type: string
  FirewallDomainName:
    maxLength: 255
    minLength: 1
    type: string
  FirewallDomainUpdateOperation:
    enum:
      - ADD
      - REMOVE
      - REPLACE
    type: string
  FirewallDomains:
    items:
      $ref: '#/definitions/FirewallDomainName'
    type: array
  FirewallFailOpenStatus:
    enum:
      - ENABLED
      - DISABLED
    type: string
  FirewallRule:
    description: A single firewall rule in a rule group.
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: >-
              <p>The action that DNS Firewall should take on a DNS query when it
              matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go
              through.</p> </li> <li> <p> <code>ALERT</code> - Permit the
              request to go through but send an alert to the logs.</p> </li>
              <li> <p> <code>BLOCK</code> - Disallow the request. If this is
              specified, additional handling details are provided in the rule's
              <code>BlockResponse</code> setting. </p> </li> </ul>
      BlockOverrideDnsType:
        allOf:
          - $ref: '#/definitions/BlockOverrideDnsType'
          - description: >-
              The DNS record's type. This determines the format of the record
              value that you provided in <code>BlockOverrideDomain</code>. Used
              for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.
      BlockOverrideDomain:
        allOf:
          - $ref: '#/definitions/BlockOverrideDomain'
          - description: >-
              The custom DNS record to send back in response to the query. Used
              for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.
      BlockOverrideTtl:
        allOf:
          - $ref: '#/definitions/Unsigned'
          - description: >-
              The recommended amount of time, in seconds, for the DNS resolver
              or web browser to cache the provided override record. Used for the
              rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
      BlockResponse:
        allOf:
          - $ref: '#/definitions/BlockResponse'
          - description: >-
              <p>The way that you want DNS Firewall to block the request. Used
              for the rule action setting <code>BLOCK</code>.</p> <ul> <li> <p>
              <code>NODATA</code> - Respond indicating that the query was
              successful, but no response is available for it.</p> </li> <li>
              <p> <code>NXDOMAIN</code> - Respond indicating that the domain
              name that's in the query doesn't exist.</p> </li> <li> <p>
              <code>OVERRIDE</code> - Provide a custom override in the response.
              This option requires custom handling details in the rule's
              <code>BlockOverride*</code> settings. </p> </li> </ul>
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the rule was created, in Unix time format
              and Coordinated Universal Time (UTC). 
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of executing
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list that''s used in the rule. '
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The unique identifier of the firewall rule group of the rule. '
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the rule was last modified, in Unix time
              format and Coordinated Universal Time (UTC).
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: 'The name of the rule. '
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              The priority of the rule in the rule group. This value must be
              unique within the rule group. DNS Firewall processes the rules in
              a rule group by order of priority, starting from the lowest
              setting.
    type: object
  FirewallRuleGroup:
    description: >-
      High-level information for a firewall rule group. A firewall rule group is
      a collection of rules that DNS Firewall uses to filter DNS network traffic
      for a VPC. To retrieve the rules for the rule group, call
      <a>ListFirewallRules</a>.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN (Amazon Resource Name) of the rule group.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the rule group was created, in Unix time
              format and Coordinated Universal Time (UTC). 
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the rule group. '
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the rule group was last modified, in Unix
              time format and Coordinated Universal Time (UTC).
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the rule group.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The Amazon Web Services account ID for the account that created
              the rule group. When a rule group is shared with your account,
              this is the account that has shared the rule group with you. 
      RuleCount:
        allOf:
          - $ref: '#/definitions/Unsigned'
          - description: The number of rules in the rule group.
      ShareStatus:
        allOf:
          - $ref: '#/definitions/ShareStatus'
          - description: >-
              Whether the rule group is shared with other Amazon Web Services
              accounts, or was shared with the current account by another Amazon
              Web Services account. Sharing is configured through Resource
              Access Manager (RAM).
      Status:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupStatus'
          - description: 'The status of the domain list. '
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: >-
              Additional information about the status of the rule group, if
              available.
    type: object
  FirewallRuleGroupAssociation:
    description: >-
      An association between a firewall rule group and a VPC, which enables DNS
      filtering for the VPC. 
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the firewall rule group
              association.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the association was created, in Unix time
              format and Coordinated Universal Time (UTC). 
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The identifier for the association.
      ManagedOwnerName:
        allOf:
          - $ref: '#/definitions/ServicePrinciple'
          - description: >-
              The owner of the association, used only for associations that are
              not managed by you. If you use Firewall Manager to manage your DNS
              Firewalls, then this reports Firewall Manager as the managed
              owner.
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the association was last modified, in Unix
              time format and Coordinated Universal Time (UTC).
      MutationProtection:
        allOf:
          - $ref: '#/definitions/MutationProtectionStatus'
          - description: >-
              If enabled, this setting disallows modification or removal of the
              association, to help prevent against accidentally altering DNS
              firewall protections. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the association.
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              The setting that determines the processing order of the rule group
              among the rule groups that are associated with a single VPC. DNS
              Firewall filters VPC traffic starting from rule group with the
              lowest numeric priority setting. 
      Status:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociationStatus'
          - description: The current status of the association.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: >-
              Additional information about the status of the response, if
              available.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the VPC that is associated with the rule
              group. 
    type: object
  FirewallRuleGroupAssociationStatus:
    enum:
      - COMPLETE
      - DELETING
      - UPDATING
    type: string
  FirewallRuleGroupAssociations:
    items:
      $ref: '#/definitions/FirewallRuleGroupAssociation'
    type: array
  FirewallRuleGroupMetadata:
    description: >-
      <p>Minimal high-level information for a firewall rule group. The action
      <a>ListFirewallRuleGroups</a> returns an array of these objects. </p>
      <p>To retrieve full information for a firewall rule group, call
      <a>GetFirewallRuleGroup</a> and <a>ListFirewallRules</a>.</p>
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN (Amazon Resource Name) of the rule group.
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string defined by you to identify the request. This
              allows you to retry failed requests without the risk of running
              the operation twice. This can be any unique string, for example, a
              timestamp. 
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the rule group. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the rule group.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The Amazon Web Services account ID for the account that created
              the rule group. When a rule group is shared with your account,
              this is the account that has shared the rule group with you. 
      ShareStatus:
        allOf:
          - $ref: '#/definitions/ShareStatus'
          - description: >-
              Whether the rule group is shared with other Amazon Web Services
              accounts, or was shared with the current account by another Amazon
              Web Services account. Sharing is configured through Resource
              Access Manager (RAM).
    type: object
  FirewallRuleGroupMetadataList:
    items:
      $ref: '#/definitions/FirewallRuleGroupMetadata'
    type: array
  FirewallRuleGroupPolicy:
    maxLength: 5000
    type: string
  FirewallRuleGroupStatus:
    enum:
      - COMPLETE
      - DELETING
      - UPDATING
    type: string
  FirewallRules:
    items:
      $ref: '#/definitions/FirewallRule'
    type: array
  GetFirewallConfigRequest:
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the VPC from Amazon VPC that the configuration is for.
    required:
      - ResourceId
    title: GetFirewallConfigRequest
    type: object
  GetFirewallConfigResponse:
    properties:
      FirewallConfig:
        allOf:
          - $ref: '#/definitions/FirewallConfig'
          - description: >-
              Configuration of the firewall behavior provided by DNS Firewall
              for a single VPC from AmazonVPC. 
    type: object
  GetFirewallDomainListRequest:
    properties:
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list. '
    required:
      - FirewallDomainListId
    title: GetFirewallDomainListRequest
    type: object
  GetFirewallDomainListResponse:
    properties:
      FirewallDomainList:
        allOf:
          - $ref: '#/definitions/FirewallDomainList'
          - description: 'The domain list that you requested. '
    type: object
  GetFirewallRuleGroupAssociationRequest:
    properties:
      FirewallRuleGroupAssociationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
    required:
      - FirewallRuleGroupAssociationId
    title: GetFirewallRuleGroupAssociationRequest
    type: object
  GetFirewallRuleGroupAssociationResponse:
    properties:
      FirewallRuleGroupAssociation:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociation'
          - description: 'The association that you requested. '
    type: object
  GetFirewallRuleGroupPolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN (Amazon Resource Name) for the rule group.
    required:
      - Arn
    title: GetFirewallRuleGroupPolicyRequest
    type: object
  GetFirewallRuleGroupPolicyResponse:
    properties:
      FirewallRuleGroupPolicy:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupPolicy'
          - description: >-
              The Identity and Access Management (Amazon Web Services IAM)
              policy for sharing the specified rule group. You can use the
              policy to share the rule group using Resource Access Manager
              (RAM). 
    type: object
  GetFirewallRuleGroupRequest:
    properties:
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
    required:
      - FirewallRuleGroupId
    title: GetFirewallRuleGroupRequest
    type: object
  GetFirewallRuleGroupResponse:
    properties:
      FirewallRuleGroup:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroup'
          - description: 'A collection of rules used to filter DNS network traffic. '
    type: object
  GetResolverDnssecConfigRequest:
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the virtual private cloud (VPC) for the DNSSEC
              validation status.
    required:
      - ResourceId
    title: GetResolverDnssecConfigRequest
    type: object
  GetResolverDnssecConfigResponse:
    properties:
      ResolverDNSSECConfig:
        allOf:
          - $ref: '#/definitions/ResolverDnssecConfig'
          - description: The information about a configuration for DNSSEC validation.
    type: object
  GetResolverEndpointRequest:
    properties:
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver endpoint that you want to get information
              about.
    required:
      - ResolverEndpointId
    title: GetResolverEndpointRequest
    type: object
  GetResolverEndpointResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: >-
              Information about the Resolver endpoint that you specified in a
              <code>GetResolverEndpoint</code> request.
    type: object
  GetResolverQueryLogConfigAssociationRequest:
    properties:
      ResolverQueryLogConfigAssociationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver query logging configuration association
              that you want to get information about.
    required:
      - ResolverQueryLogConfigAssociationId
    title: GetResolverQueryLogConfigAssociationRequest
    type: object
  GetResolverQueryLogConfigAssociationResponse:
    properties:
      ResolverQueryLogConfigAssociation:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociation'
          - description: >-
              Information about the Resolver query logging configuration
              association that you specified in a
              <code>GetQueryLogConfigAssociation</code> request.
    type: object
  GetResolverQueryLogConfigPolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of the query logging configuration that you want to get
              the query logging policy for.
    required:
      - Arn
    title: GetResolverQueryLogConfigPolicyRequest
    type: object
  GetResolverQueryLogConfigPolicyResponse:
    properties:
      ResolverQueryLogConfigPolicy:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigPolicy'
          - description: >-
              Information about the query logging policy for the query logging
              configuration that you specified in a
              <code>GetResolverQueryLogConfigPolicy</code> request.
    type: object
  GetResolverQueryLogConfigRequest:
    properties:
      ResolverQueryLogConfigId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver query logging configuration that you want
              to get information about.
    required:
      - ResolverQueryLogConfigId
    title: GetResolverQueryLogConfigRequest
    type: object
  GetResolverQueryLogConfigResponse:
    properties:
      ResolverQueryLogConfig:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfig'
          - description: >-
              Information about the Resolver query logging configuration that
              you specified in a <code>GetQueryLogConfig</code> request.
    type: object
  GetResolverRuleAssociationRequest:
    properties:
      ResolverRuleAssociationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver rule association that you want to get
              information about.
    required:
      - ResolverRuleAssociationId
    title: GetResolverRuleAssociationRequest
    type: object
  GetResolverRuleAssociationResponse:
    properties:
      ResolverRuleAssociation:
        allOf:
          - $ref: '#/definitions/ResolverRuleAssociation'
          - description: >-
              Information about the Resolver rule association that you specified
              in a <code>GetResolverRuleAssociation</code> request.
    type: object
  GetResolverRulePolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ID of the Resolver rule that you want to get the Resolver rule
              policy for.
    required:
      - Arn
    title: GetResolverRulePolicyRequest
    type: object
  GetResolverRulePolicyResponse:
    properties:
      ResolverRulePolicy:
        allOf:
          - $ref: '#/definitions/ResolverRulePolicy'
          - description: >-
              The Resolver rule policy for the rule that you specified in a
              <code>GetResolverRulePolicy</code> request.
    type: object
  GetResolverRuleRequest:
    properties:
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver rule that you want to get information
              about.
    required:
      - ResolverRuleId
    title: GetResolverRuleRequest
    type: object
  GetResolverRuleResponse:
    properties:
      ResolverRule:
        allOf:
          - $ref: '#/definitions/ResolverRule'
          - description: >-
              Information about the Resolver rule that you specified in a
              <code>GetResolverRule</code> request.
    type: object
  ImportFirewallDomainsRequest:
    properties:
      DomainFileUrl:
        allOf:
          - $ref: '#/definitions/DomainListFileUrl'
          - description: >-
              <p>The fully qualified URL or URI of the file stored in Amazon
              Simple Storage Service (Amazon S3) that contains the list of
              domains to import.</p> <p>The file must be in an S3 bucket that's
              in the same Region as your DNS Firewall. The file must be a text
              file and must contain a single domain per line.</p>
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the domain list that you want to modify with the import
              operation.
      Operation:
        allOf:
          - $ref: '#/definitions/FirewallDomainImportOperation'
          - description: >-
              What you want DNS Firewall to do with the domains that are listed
              in the file. This must be set to <code>REPLACE</code>, which
              updates the domain list to exactly match the list in the file. 
    required:
      - FirewallDomainListId
      - Operation
      - DomainFileUrl
    title: ImportFirewallDomainsRequest
    type: object
  ImportFirewallDomainsResponse:
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The Id of the firewall domain list that DNS Firewall just updated.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: 'The name of the domain list. '
      Status:
        allOf:
          - $ref: '#/definitions/FirewallDomainListStatus'
          - description: ' '
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: 'Additional information about the status of the list, if available.'
    type: object
  InternalServiceErrorException: {}
  InvalidNextTokenException: {}
  InvalidParameterException: {}
  InvalidPolicyDocument: {}
  InvalidRequestException: {}
  InvalidTagException: {}
  Ip:
    maxLength: 36
    minLength: 7
    type: string
  IpAddressCount:
    type: integer
  IpAddressRequest:
    description: >-
      In a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>
      request, the IP address that DNS queries originate from (for outbound
      endpoints) or that you forward DNS queries to (for inbound endpoints).
      <code>IpAddressRequest</code> also includes the ID of the subnet that
      contains the IP address.
    properties:
      Ip:
        allOf:
          - $ref: '#/definitions/Ip'
          - description: The IP address that you want to use for DNS queries.
      SubnetId:
        allOf:
          - $ref: '#/definitions/SubnetId'
          - description: 'The ID of the subnet that contains the IP address. '
    required:
      - SubnetId
    type: object
  IpAddressResponse:
    description: >-
      In the response to a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>
      request, information about the IP addresses that the Resolver endpoint
      uses for DNS queries.
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the IP address was created, in Unix time
              format and Coordinated Universal Time (UTC).
      Ip:
        allOf:
          - $ref: '#/definitions/Ip'
          - description: One IP address that the Resolver endpoint uses for DNS queries.
      IpId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of one IP address.
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the IP address was last modified, in Unix
              time format and Coordinated Universal Time (UTC).
      Status:
        allOf:
          - $ref: '#/definitions/IpAddressStatus'
          - description: A status code that gives the current status of the request.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: >-
              A message that provides additional information about the status of
              the request.
      SubnetId:
        allOf:
          - $ref: '#/definitions/SubnetId'
          - description: The ID of one subnet.
    type: object
  IpAddressStatus:
    enum:
      - CREATING
      - FAILED_CREATION
      - ATTACHING
      - ATTACHED
      - REMAP_DETACHING
      - REMAP_ATTACHING
      - DETACHING
      - FAILED_RESOURCE_GONE
      - DELETING
      - DELETE_FAILED_FAS_EXPIRED
    type: string
  IpAddressUpdate:
    description: >-
      In an <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html">UpdateResolverEndpoint</a>
      request, information about an IP address to update.
    properties:
      Ip:
        allOf:
          - $ref: '#/definitions/Ip'
          - description: The new IP address.
      IpId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: ' <i>Only when removing an IP address from a Resolver endpoint</i>: The ID of the IP address that you want to remove. To get this ID, use <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>.'
      SubnetId:
        allOf:
          - $ref: '#/definitions/SubnetId'
          - description: >-
              The ID of the subnet that includes the IP address that you want to
              update. To get this ID, use <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>.
    type: object
  IpAddressesRequest:
    items:
      $ref: '#/definitions/IpAddressRequest'
    maxItems: 10
    minItems: 1
    type: array
  IpAddressesResponse:
    items:
      $ref: '#/definitions/IpAddressResponse'
    type: array
  LimitExceededException: {}
  ListDomainMaxResults:
    maximum: 5000
    minimum: 1
    type: integer
  ListFirewallConfigsMaxResult:
    maximum: 10
    minimum: 5
    type: integer
  ListFirewallConfigsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/ListFirewallConfigsMaxResult'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
    title: ListFirewallConfigsRequest
    type: object
  ListFirewallConfigsResponse:
    properties:
      FirewallConfigs:
        allOf:
          - $ref: '#/definitions/FirewallConfigList'
          - description: >-
              The configurations for the firewall behavior provided by DNS
              Firewall for VPCs from Amazon Virtual Private Cloud (Amazon VPC). 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListFirewallDomainListsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
    title: ListFirewallDomainListsRequest
    type: object
  ListFirewallDomainListsResponse:
    properties:
      FirewallDomainLists:
        allOf:
          - $ref: '#/definitions/FirewallDomainListMetadataList'
          - description: >-
              <p>A list of the domain lists that you have defined. </p> <p>This
              might be a partial list of the domain lists that you've defined.
              For information, see <code>MaxResults</code>. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListFirewallDomainsRequest:
    properties:
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list whose domains you want to retrieve. '
      MaxResults:
        allOf:
          - $ref: '#/definitions/ListDomainMaxResults'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
    required:
      - FirewallDomainListId
    title: ListFirewallDomainsRequest
    type: object
  ListFirewallDomainsResponse:
    properties:
      Domains:
        allOf:
          - $ref: '#/definitions/FirewallDomains'
          - description: >-
              <p>A list of the domains in the firewall domain list. </p> <p>This
              might be a partial list of the domains that you've defined in the
              domain list. For information, see <code>MaxResults</code>. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListFirewallRuleGroupAssociationsRequest:
    properties:
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the firewall rule group that you want to
              retrieve the associations for. Leave this blank to retrieve
              associations for any rule group. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              The setting that determines the processing order of the rule group
              among the rule groups that are associated with a single VPC. DNS
              Firewall filters VPC traffic starting from the rule group with the
              lowest numeric priority setting. 
      Status:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociationStatus'
          - description: >-
              The association <code>Status</code> setting that you want DNS
              Firewall to filter on for the list. If you don't specify this,
              then DNS Firewall returns all associations, regardless of status.
      VpcId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the VPC that you want to retrieve the
              associations for. Leave this blank to retrieve associations for
              any VPC. 
    title: ListFirewallRuleGroupAssociationsRequest
    type: object
  ListFirewallRuleGroupAssociationsResponse:
    properties:
      FirewallRuleGroupAssociations:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociations'
          - description: >-
              <p>A list of your firewall rule group associations.</p> <p>This
              might be a partial list of the associations that you have defined.
              For information, see <code>MaxResults</code>. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListFirewallRuleGroupsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
    title: ListFirewallRuleGroupsRequest
    type: object
  ListFirewallRuleGroupsResponse:
    properties:
      FirewallRuleGroups:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupMetadataList'
          - description: >-
              <p>A list of your firewall rule groups.</p> <p>This might be a
              partial list of the rule groups that you have defined. For
              information, see <code>MaxResults</code>. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListFirewallRulesRequest:
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: >-
              <p>Optional additional filter for the rules to retrieve.</p>
              <p>The action that DNS Firewall should take on a DNS query when it
              matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go
              through.</p> </li> <li> <p> <code>ALERT</code> - Permit the
              request to go through but send an alert to the logs.</p> </li>
              <li> <p> <code>BLOCK</code> - Disallow the request. If this is
              specified, additional handling details are provided in the rule's
              <code>BlockResponse</code> setting. </p> </li> </ul>
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The unique identifier of the firewall rule group that you want to
              retrieve the rules for. 
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              <p>The maximum number of objects that you want Resolver to return
              for this request. If more objects are available, in the response,
              Resolver provides a <code>NextToken</code> value that you can use
              in a subsequent call to get the next batch of objects.</p> <p>If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 objects. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first call to this list request, omit this value.</p>
              <p>When you request a list of objects, Resolver returns at most
              the number of objects specified in <code>MaxResults</code>. If
              more objects are available for retrieval, Resolver returns a
              <code>NextToken</code> value in the response. To retrieve the next
              batch of objects, use the token that was returned for the prior
              request in your next request.</p>
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              <p>Optional additional filter for the rules to retrieve.</p>
              <p>The setting that determines the processing order of the rules
              in a rule group. DNS Firewall processes the rules in a rule group
              by order of priority, starting from the lowest setting.</p>
    required:
      - FirewallRuleGroupId
    title: ListFirewallRulesRequest
    type: object
  ListFirewallRulesResponse:
    properties:
      FirewallRules:
        allOf:
          - $ref: '#/definitions/FirewallRules'
          - description: >-
              <p>A list of the rules that you have defined. </p> <p>This might
              be a partial list of the firewall rules that you've defined. For
              information, see <code>MaxResults</code>. </p>
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If objects are still available for retrieval, Resolver returns
              this token in the response. To retrieve the next batch of objects,
              provide this token in your next request.
    type: object
  ListResolverDnssecConfigsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: An optional specification to return a subset of objects.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: ' <i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don''t specify a value for <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.'
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>(Optional) If the current Amazon Web Services account has more
              than <code>MaxResults</code> DNSSEC configurations, use
              <code>NextToken</code> to get the second and subsequent pages of
              results.</p> <p>For the first
              <code>ListResolverDnssecConfigs</code> request, omit this
              value.</p> <p>For the second and subsequent requests, get the
              value of <code>NextToken</code> from the previous response and
              specify that value for <code>NextToken</code> in the request.</p>
    title: ListResolverDnssecConfigsRequest
    type: object
  ListResolverDnssecConfigsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>If a response includes the last of the DNSSEC configurations
              that are associated with the current Amazon Web Services account,
              <code>NextToken</code> doesn't appear in the response.</p> <p>If a
              response doesn't include the last of the configurations, you can
              get more configurations by submitting another <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html">ListResolverDnssecConfigs</a>
              request. Get the value of <code>NextToken</code> that Amazon Route
              53 returned in the previous response and include it in
              <code>NextToken</code> in the next request.</p>
      ResolverDnssecConfigs:
        allOf:
          - $ref: '#/definitions/ResolverDnssecConfigList'
          - description: >-
              An array that contains one <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html">ResolverDnssecConfig</a>
              element for each configuration for DNSSEC validation that is
              associated with the current Amazon Web Services account.
    type: object
  ListResolverEndpointIpAddressesRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of IP addresses that you want to return in the
              response to a <code>ListResolverEndpointIpAddresses</code>
              request. If you don't specify a value for <code>MaxResults</code>,
              Resolver returns up to 100 IP addresses. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListResolverEndpointIpAddresses</code>
              request, omit this value.</p> <p>If the specified Resolver
              endpoint has more than <code>MaxResults</code> IP addresses, you
              can submit another <code>ListResolverEndpointIpAddresses</code>
              request to get the next group of IP addresses. In the next
              request, specify the value of <code>NextToken</code> from the
              previous response. </p>
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver endpoint that you want to get IP addresses
              for.
    required:
      - ResolverEndpointId
    title: ListResolverEndpointIpAddressesRequest
    type: object
  ListResolverEndpointIpAddressesResponse:
    properties:
      IpAddresses:
        allOf:
          - $ref: '#/definitions/IpAddressesResponse'
          - description: >-
              Information about the IP addresses in your VPC that DNS queries
              originate from (for outbound endpoints) or that you forward DNS
              queries to (for inbound endpoints).
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The value that you specified for <code>MaxResults</code> in the
              request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the specified endpoint has more than <code>MaxResults</code> IP
              addresses, you can submit another
              <code>ListResolverEndpointIpAddresses</code> request to get the
              next group of IP addresses. In the next request, specify the value
              of <code>NextToken</code> from the previous response. 
    type: object
  ListResolverEndpointsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: >-
              <p>An optional specification to return a subset of Resolver
              endpoints, such as all inbound Resolver endpoints.</p> <note>
              <p>If you submit a second or subsequent
              <code>ListResolverEndpoints</code> request and specify the
              <code>NextToken</code> parameter, you must use the same values for
              <code>Filters</code>, if any, as in the previous request.</p>
              </note>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of Resolver endpoints that you want to return
              in the response to a <code>ListResolverEndpoints</code> request.
              If you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 Resolver endpoints. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListResolverEndpoints</code> request, omit
              this value.</p> <p>If you have more than <code>MaxResults</code>
              Resolver endpoints, you can submit another
              <code>ListResolverEndpoints</code> request to get the next group
              of Resolver endpoints. In the next request, specify the value of
              <code>NextToken</code> from the previous response. </p>
    title: ListResolverEndpointsRequest
    type: object
  ListResolverEndpointsResponse:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The value that you specified for <code>MaxResults</code> in the
              request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If more than <code>MaxResults</code> IP addresses match the
              specified criteria, you can submit another
              <code>ListResolverEndpoint</code> request to get the next group of
              results. In the next request, specify the value of
              <code>NextToken</code> from the previous response. 
      ResolverEndpoints:
        allOf:
          - $ref: '#/definitions/ResolverEndpoints'
          - description: >-
              The Resolver endpoints that were created by using the current
              Amazon Web Services account, and that match the specified filters,
              if any.
    type: object
  ListResolverQueryLogConfigAssociationsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: >-
              <p>An optional specification to return a subset of query logging
              associations.</p> <note> <p>If you submit a second or subsequent
              <code>ListResolverQueryLogConfigAssociations</code> request and
              specify the <code>NextToken</code> parameter, you must use the
              same values for <code>Filters</code>, if any, as in the previous
              request.</p> </note>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of query logging associations that you want to
              return in the response to a
              <code>ListResolverQueryLogConfigAssociations</code> request. If
              you don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 query logging associations. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first
              <code>ListResolverQueryLogConfigAssociations</code> request, omit
              this value.</p> <p>If there are more than <code>MaxResults</code>
              query logging associations that match the values that you specify
              for <code>Filters</code>, you can submit another
              <code>ListResolverQueryLogConfigAssociations</code> request to get
              the next group of associations. In the next request, specify the
              value of <code>NextToken</code> from the previous response. </p>
      SortBy:
        allOf:
          - $ref: '#/definitions/SortByKey'
          - description: >-
              <p>The element that you want Resolver to sort query logging
              associations by. </p> <note> <p>If you submit a second or
              subsequent <code>ListResolverQueryLogConfigAssociations</code>
              request and specify the <code>NextToken</code> parameter, you must
              use the same value for <code>SortBy</code>, if any, as in the
              previous request.</p> </note> <p>Valid values include the
              following elements:</p> <ul> <li> <p> <code>CreationTime</code>:
              The ID of the query logging association.</p> </li> <li> <p>
              <code>Error</code>: If the value of <code>Status</code> is
              <code>FAILED</code>, the value of <code>Error</code> indicates the
              cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>: The
              specified destination (for example, an Amazon S3 bucket) was
              deleted.</p> </li> <li> <p> <code>ACCESS_DENIED</code>:
              Permissions don't allow sending logs to the destination.</p> </li>
              </ul> <p>If <code>Status</code> is a value other than
              <code>FAILED</code>, <code>ERROR</code> is null.</p> </li> <li>
              <p> <code>Id</code>: The ID of the query logging association</p>
              </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of
              the query logging configuration</p> </li> <li> <p>
              <code>ResourceId</code>: The ID of the VPC that is associated with
              the query logging configuration</p> </li> <li> <p>
              <code>Status</code>: The current status of the configuration.
              Valid values include the following:</p> <ul> <li> <p>
              <code>CREATING</code>: Resolver is creating an association between
              an Amazon VPC and a query logging configuration.</p> </li> <li>
              <p> <code>CREATED</code>: The association between an Amazon VPC
              and a query logging configuration was successfully created.
              Resolver is logging queries that originate in the specified
              VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is
              deleting this query logging association.</p> </li> <li> <p>
              <code>FAILED</code>: Resolver either couldn't create or couldn't
              delete the query logging association. Here are two common
              causes:</p> <ul> <li> <p>The specified destination (for example,
              an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions
              don't allow sending logs to the destination.</p> </li> </ul> </li>
              </ul> </li> </ul>
      SortOrder:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              <p>If you specified a value for <code>SortBy</code>, the order
              that you want query logging associations to be listed in,
              <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note>
              <p>If you submit a second or subsequent
              <code>ListResolverQueryLogConfigAssociations</code> request and
              specify the <code>NextToken</code> parameter, you must use the
              same value for <code>SortOrder</code>, if any, as in the previous
              request.</p> </note>
    title: ListResolverQueryLogConfigAssociationsRequest
    type: object
  ListResolverQueryLogConfigAssociationsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If there are more than <code>MaxResults</code> query logging
              associations, you can submit another
              <code>ListResolverQueryLogConfigAssociations</code> request to get
              the next group of associations. In the next request, specify the
              value of <code>NextToken</code> from the previous response. 
      ResolverQueryLogConfigAssociations:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociationList'
          - description: >-
              A list that contains one
              <code>ResolverQueryLogConfigAssociations</code> element for each
              query logging association that matches the values that you
              specified for <code>Filter</code>.
      TotalCount:
        allOf:
          - $ref: '#/definitions/Count'
          - description: >-
              The total number of query logging associations that were created
              by the current account in the specified Region. This count can
              differ from the number of associations that are returned in a
              <code>ListResolverQueryLogConfigAssociations</code> response,
              depending on the values that you specify in the request.
      TotalFilteredCount:
        allOf:
          - $ref: '#/definitions/Count'
          - description: >-
              The total number of query logging associations that were created
              by the current account in the specified Region and that match the
              filters that were specified in the
              <code>ListResolverQueryLogConfigAssociations</code> request. For
              the total number of associations that were created by the current
              account in the specified Region, see <code>TotalCount</code>.
    type: object
  ListResolverQueryLogConfigsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: >-
              <p>An optional specification to return a subset of query logging
              configurations.</p> <note> <p>If you submit a second or subsequent
              <code>ListResolverQueryLogConfigs</code> request and specify the
              <code>NextToken</code> parameter, you must use the same values for
              <code>Filters</code>, if any, as in the previous request.</p>
              </note>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of query logging configurations that you want
              to return in the response to a
              <code>ListResolverQueryLogConfigs</code> request. If you don't
              specify a value for <code>MaxResults</code>, Resolver returns up
              to 100 query logging configurations. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListResolverQueryLogConfigs</code> request,
              omit this value.</p> <p>If there are more than
              <code>MaxResults</code> query logging configurations that match
              the values that you specify for <code>Filters</code>, you can
              submit another <code>ListResolverQueryLogConfigs</code> request to
              get the next group of configurations. In the next request, specify
              the value of <code>NextToken</code> from the previous response.
              </p>
      SortBy:
        allOf:
          - $ref: '#/definitions/SortByKey'
          - description: >-
              <p>The element that you want Resolver to sort query logging
              configurations by. </p> <note> <p>If you submit a second or
              subsequent <code>ListResolverQueryLogConfigs</code> request and
              specify the <code>NextToken</code> parameter, you must use the
              same value for <code>SortBy</code>, if any, as in the previous
              request.</p> </note> <p>Valid values include the following
              elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN of the query
              logging configuration</p> </li> <li> <p>
              <code>AssociationCount</code>: The number of VPCs that are
              associated with the specified configuration </p> </li> <li> <p>
              <code>CreationTime</code>: The date and time that Resolver
              returned when the configuration was created</p> </li> <li> <p>
              <code>CreatorRequestId</code>: The value that was specified for
              <code>CreatorRequestId</code> when the configuration was
              created</p> </li> <li> <p> <code>DestinationArn</code>: The
              location that logs are sent to</p> </li> <li> <p> <code>Id</code>:
              The ID of the configuration</p> </li> <li> <p> <code>Name</code>:
              The name of the configuration</p> </li> <li> <p>
              <code>OwnerId</code>: The Amazon Web Services account number of
              the account that created the configuration</p> </li> <li> <p>
              <code>ShareStatus</code>: Whether the configuration is shared with
              other Amazon Web Services accounts or shared with the current
              account by another Amazon Web Services account. Sharing is
              configured through Resource Access Manager (RAM).</p> </li> <li>
              <p> <code>Status</code>: The current status of the configuration.
              Valid values include the following:</p> <ul> <li> <p>
              <code>CREATING</code>: Resolver is creating the query logging
              configuration.</p> </li> <li> <p> <code>CREATED</code>: The query
              logging configuration was successfully created. Resolver is
              logging queries that originate in the specified VPC.</p> </li>
              <li> <p> <code>DELETING</code>: Resolver is deleting this query
              logging configuration.</p> </li> <li> <p> <code>FAILED</code>:
              Resolver either couldn't create or couldn't delete the query
              logging configuration. Here are two common causes:</p> <ul> <li>
              <p>The specified destination (for example, an Amazon S3 bucket)
              was deleted.</p> </li> <li> <p>Permissions don't allow sending
              logs to the destination.</p> </li> </ul> </li> </ul> </li> </ul>
      SortOrder:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              <p>If you specified a value for <code>SortBy</code>, the order
              that you want query logging configurations to be listed in,
              <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note>
              <p>If you submit a second or subsequent
              <code>ListResolverQueryLogConfigs</code> request and specify the
              <code>NextToken</code> parameter, you must use the same value for
              <code>SortOrder</code>, if any, as in the previous request.</p>
              </note>
    title: ListResolverQueryLogConfigsRequest
    type: object
  ListResolverQueryLogConfigsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If there are more than <code>MaxResults</code> query logging
              configurations, you can submit another
              <code>ListResolverQueryLogConfigs</code> request to get the next
              group of configurations. In the next request, specify the value of
              <code>NextToken</code> from the previous response. 
      ResolverQueryLogConfigs:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigList'
          - description: >-
              A list that contains one <code>ResolverQueryLogConfig</code>
              element for each query logging configuration that matches the
              values that you specified for <code>Filter</code>.
      TotalCount:
        allOf:
          - $ref: '#/definitions/Count'
          - description: >-
              The total number of query logging configurations that were created
              by the current account in the specified Region. This count can
              differ from the number of query logging configurations that are
              returned in a <code>ListResolverQueryLogConfigs</code> response,
              depending on the values that you specify in the request.
      TotalFilteredCount:
        allOf:
          - $ref: '#/definitions/Count'
          - description: >-
              The total number of query logging configurations that were created
              by the current account in the specified Region and that match the
              filters that were specified in the
              <code>ListResolverQueryLogConfigs</code> request. For the total
              number of query logging configurations that were created by the
              current account in the specified Region, see
              <code>TotalCount</code>.
    type: object
  ListResolverRuleAssociationsRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: >-
              <p>An optional specification to return a subset of Resolver rules,
              such as Resolver rules that are associated with the same VPC
              ID.</p> <note> <p>If you submit a second or subsequent
              <code>ListResolverRuleAssociations</code> request and specify the
              <code>NextToken</code> parameter, you must use the same values for
              <code>Filters</code>, if any, as in the previous request.</p>
              </note>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of rule associations that you want to return in
              the response to a <code>ListResolverRuleAssociations</code>
              request. If you don't specify a value for <code>MaxResults</code>,
              Resolver returns up to 100 rule associations. 
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListResolverRuleAssociation</code> request,
              omit this value.</p> <p>If you have more than
              <code>MaxResults</code> rule associations, you can submit another
              <code>ListResolverRuleAssociation</code> request to get the next
              group of rule associations. In the next request, specify the value
              of <code>NextToken</code> from the previous response. </p>
    title: ListResolverRuleAssociationsRequest
    type: object
  ListResolverRuleAssociationsResponse:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The value that you specified for <code>MaxResults</code> in the
              request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If more than <code>MaxResults</code> rule associations match the
              specified criteria, you can submit another
              <code>ListResolverRuleAssociation</code> request to get the next
              group of results. In the next request, specify the value of
              <code>NextToken</code> from the previous response. 
      ResolverRuleAssociations:
        allOf:
          - $ref: '#/definitions/ResolverRuleAssociations'
          - description: >-
              The associations that were created between Resolver rules and VPCs
              using the current Amazon Web Services account, and that match the
              specified filters, if any.
    type: object
  ListResolverRulesRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/Filters'
          - description: >-
              <p>An optional specification to return a subset of Resolver rules,
              such as all Resolver rules that are associated with the same
              Resolver endpoint.</p> <note> <p>If you submit a second or
              subsequent <code>ListResolverRules</code> request and specify the
              <code>NextToken</code> parameter, you must use the same values for
              <code>Filters</code>, if any, as in the previous request.</p>
              </note>
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of Resolver rules that you want to return in
              the response to a <code>ListResolverRules</code> request. If you
              don't specify a value for <code>MaxResults</code>, Resolver
              returns up to 100 Resolver rules.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListResolverRules</code> request, omit this
              value.</p> <p>If you have more than <code>MaxResults</code>
              Resolver rules, you can submit another
              <code>ListResolverRules</code> request to get the next group of
              Resolver rules. In the next request, specify the value of
              <code>NextToken</code> from the previous response. </p>
    title: ListResolverRulesRequest
    type: object
  ListResolverRulesResponse:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The value that you specified for <code>MaxResults</code> in the
              request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If more than <code>MaxResults</code> Resolver rules match the
              specified criteria, you can submit another
              <code>ListResolverRules</code> request to get the next group of
              results. In the next request, specify the value of
              <code>NextToken</code> from the previous response. 
      ResolverRules:
        allOf:
          - $ref: '#/definitions/ResolverRules'
          - description: >-
              The Resolver rules that were created using the current Amazon Web
              Services account and that match the specified filters, if any.
    type: object
  ListTagsForResourceRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of tags that you want to return in the response
              to a <code>ListTagsForResource</code> request. If you don't
              specify a value for <code>MaxResults</code>, Resolver returns up
              to 100 tags.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>For the first <code>ListTagsForResource</code> request, omit
              this value.</p> <p>If you have more than <code>MaxResults</code>
              tags, you can submit another <code>ListTagsForResource</code>
              request to get the next group of tags for the resource. In the
              next request, specify the value of <code>NextToken</code> from the
              previous response. </p>
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) for the resource that you want to
              list tags for.
    required:
      - ResourceArn
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If more than <code>MaxResults</code> tags match the specified
              criteria, you can submit another <code>ListTagsForResource</code>
              request to get the next group of results. In the next request,
              specify the value of <code>NextToken</code> from the previous
              response. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              The tags that are associated with the resource that you specified
              in the <code>ListTagsForResource</code> request.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MutationProtectionStatus:
    enum:
      - ENABLED
      - DISABLED
    type: string
  Name:
    maxLength: 64
    pattern: '(?!^[0-9]+$)([a-zA-Z0-9\-_'' '']+)'
    type: string
  NextToken:
    type: string
  Port:
    maximum: 65535
    minimum: 0
    type: integer
  Priority:
    type: integer
  PutFirewallRuleGroupPolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN (Amazon Resource Name) for the rule group that you want to
              share.
      FirewallRuleGroupPolicy:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupPolicy'
          - description: >-
              The Identity and Access Management (Amazon Web Services IAM)
              policy to attach to the rule group.
    required:
      - Arn
      - FirewallRuleGroupPolicy
    title: PutFirewallRuleGroupPolicyRequest
    type: object
  PutFirewallRuleGroupPolicyResponse:
    properties:
      ReturnValue:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: <p/>
    type: object
  PutResolverQueryLogConfigPolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the account that you want to
              share rules with.
      ResolverQueryLogConfigPolicy:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigPolicy'
          - description: >-
              <p>An Identity and Access Management policy statement that lists
              the query logging configurations that you want to share with
              another Amazon Web Services account and the operations that you
              want the account to be able to perform. You can specify the
              following operations in the <code>Actions</code> section of the
              statement:</p> <ul> <li> <p>
              <code>route53resolver:AssociateResolverQueryLogConfig</code> </p>
              </li> <li> <p>
              <code>route53resolver:DisassociateResolverQueryLogConfig</code>
              </p> </li> <li> <p>
              <code>route53resolver:ListResolverQueryLogConfigAssociations</code>
              </p> </li> <li> <p>
              <code>route53resolver:ListResolverQueryLogConfigs</code> </p>
              </li> </ul> <p>In the <code>Resource</code> section of the
              statement, you specify the ARNs for the query logging
              configurations that you want to share with the account that you
              specified in <code>Arn</code>. </p>
    required:
      - Arn
      - ResolverQueryLogConfigPolicy
    title: PutResolverQueryLogConfigPolicyRequest
    type: object
  PutResolverQueryLogConfigPolicyResponse:
    description: The response to a <code>PutResolverQueryLogConfigPolicy</code> request.
    properties:
      ReturnValue:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the <code>PutResolverQueryLogConfigPolicy</code> request
              was successful.
    type: object
  PutResolverRulePolicyRequest:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the rule that you want to share
              with another account.
      ResolverRulePolicy:
        allOf:
          - $ref: '#/definitions/ResolverRulePolicy'
          - description: >-
              <p>An Identity and Access Management policy statement that lists
              the rules that you want to share with another Amazon Web Services
              account and the operations that you want the account to be able to
              perform. You can specify the following operations in the
              <code>Action</code> section of the statement:</p> <ul> <li> <p>
              <code>route53resolver:GetResolverRule</code> </p> </li> <li> <p>
              <code>route53resolver:AssociateResolverRule</code> </p> </li> <li>
              <p> <code>route53resolver:DisassociateResolverRule</code> </p>
              </li> <li> <p> <code>route53resolver:ListResolverRules</code> </p>
              </li> <li> <p>
              <code>route53resolver:ListResolverRuleAssociations</code> </p>
              </li> </ul> <p>In the <code>Resource</code> section of the
              statement, specify the ARN for the rule that you want to share
              with another account. Specify the same ARN that you specified in
              <code>Arn</code>.</p>
    required:
      - Arn
      - ResolverRulePolicy
    title: PutResolverRulePolicyRequest
    type: object
  PutResolverRulePolicyResponse:
    description: The response to a <code>PutResolverRulePolicy</code> request.
    properties:
      ReturnValue:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Whether the <code>PutResolverRulePolicy</code> request was
              successful.
    type: object
  ResolverDNSSECValidationStatus:
    enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
    type: string
  ResolverDnssecConfig:
    description: >-
      A complex type that contains information about a configuration for DNSSEC
      validation.
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID for a configuration for DNSSEC validation.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The owner account ID of the virtual private cloud (VPC) for a
              configuration for DNSSEC validation.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the virtual private cloud (VPC) that you're configuring
              the DNSSEC validation status for.
      ValidationStatus:
        allOf:
          - $ref: '#/definitions/ResolverDNSSECValidationStatus'
          - description: >-
              <p>The validation status for a DNSSEC configuration. The status
              can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b>
              DNSSEC validation is being enabled but is not complete.</p> </li>
              <li> <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li>
              <li> <p> <b>DISABLING:</b> DNSSEC validation is being disabled but
              is not complete.</p> </li> <li> <p> <b>DISABLED</b> DNSSEC
              validation is disabled.</p> </li> </ul>
    type: object
  ResolverDnssecConfigList:
    items:
      $ref: '#/definitions/ResolverDnssecConfig'
    type: array
  ResolverEndpoint:
    description: >-
      In the response to a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverEndpoint.html">DeleteResolverEndpoint</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>,
      or <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html">UpdateResolverEndpoint</a>
      request, a complex type that contains settings for an existing inbound or
      outbound Resolver endpoint.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN (Amazon Resource Name) for the Resolver endpoint.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the endpoint was created, in Unix time
              format and Coordinated Universal Time (UTC).
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request that created the
              Resolver endpoint. The <code>CreatorRequestId</code> allows failed
              requests to be retried without the risk of running the operation
              twice.
      Direction:
        allOf:
          - $ref: '#/definitions/ResolverEndpointDirection'
          - description: >-
              <p>Indicates whether the Resolver endpoint allows inbound or
              outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>:
              allows DNS queries to your VPC from your network</p> </li> <li>
              <p> <code>OUTBOUND</code>: allows DNS queries from your VPC to
              your network</p> </li> </ul>
      HostVPCId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the VPC that you want to create the Resolver endpoint
              in.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Resolver endpoint.
      IpAddressCount:
        allOf:
          - $ref: '#/definitions/IpAddressCount'
          - description: >-
              The number of IP addresses that the Resolver endpoint can use for
              DNS queries.
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the endpoint was last modified, in Unix
              time format and Coordinated Universal Time (UTC).
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name that you assigned to the Resolver endpoint when you
              submitted a <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>
              request.
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIds'
          - description: >-
              The ID of one or more security groups that control access to this
              VPC. The security group must include one or more inbound rules
              (for inbound endpoints) or outbound rules (for outbound
              endpoints). Inbound and outbound rules must allow TCP and UDP
              access. For inbound access, open port 53. For outbound access,
              open the port that you're using for DNS queries on your network.
      Status:
        allOf:
          - $ref: '#/definitions/ResolverEndpointStatus'
          - description: >-
              <p>A code that specifies the current status of the Resolver
              endpoint. Valid values include the following:</p> <ul> <li> <p>
              <code>CREATING</code>: Resolver is creating and configuring one or
              more Amazon VPC network interfaces for this endpoint.</p> </li>
              <li> <p> <code>OPERATIONAL</code>: The Amazon VPC network
              interfaces for this endpoint are correctly configured and able to
              pass inbound or outbound DNS queries between your network and
              Resolver.</p> </li> <li> <p> <code>UPDATING</code>: Resolver is
              associating or disassociating one or more network interfaces with
              this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>:
              Resolver is trying to recover one or more of the network
              interfaces that are associated with this endpoint. During the
              recovery process, the endpoint functions with limited capacity
              because of the limit on the number of DNS queries per IP address
              (per network interface). For the current limit, see <a
              href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver">Limits
              on Route 53 Resolver</a>.</p> </li> <li> <p>
              <code>ACTION_NEEDED</code>: This endpoint is unhealthy, and
              Resolver can't automatically recover it. To resolve the problem,
              we recommend that you check each IP address that you associated
              with the endpoint. For each IP address that isn't available, add
              another IP address and then delete the IP address that isn't
              available. (An endpoint must always include at least two IP
              addresses.) A status of <code>ACTION_NEEDED</code> can have a
              variety of causes. Here are two common causes:</p> <ul> <li>
              <p>One or more of the network interfaces that are associated with
              the endpoint were deleted using Amazon VPC.</p> </li> <li> <p>The
              network interface couldn't be created for some reason that's
              outside the control of Resolver.</p> </li> </ul> </li> <li> <p>
              <code>DELETING</code>: Resolver is deleting this endpoint and the
              associated network interfaces.</p> </li> </ul>
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: A detailed description of the status of the Resolver endpoint.
    type: object
  ResolverEndpointDirection:
    enum:
      - INBOUND
      - OUTBOUND
    type: string
  ResolverEndpointStatus:
    enum:
      - CREATING
      - OPERATIONAL
      - UPDATING
      - AUTO_RECOVERING
      - ACTION_NEEDED
      - DELETING
    type: string
  ResolverEndpoints:
    items:
      $ref: '#/definitions/ResolverEndpoint'
    type: array
  ResolverQueryLogConfig:
    description: >-
      In the response to a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverQueryLogConfig.html">CreateResolverQueryLogConfig</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverQueryLogConfig.html">DeleteResolverQueryLogConfig</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfig.html">GetResolverQueryLogConfig</a>,
      or <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a>
      request, a complex type that contains settings for one query logging
      configuration.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN for the query logging configuration.
      AssociationCount:
        allOf:
          - $ref: '#/definitions/Count'
          - description: >-
              The number of VPCs that are associated with the query logging
              configuration.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the query logging configuration was
              created, in Unix time format and Coordinated Universal Time (UTC).
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that identifies the request that created the query
              logging configuration. The <code>CreatorRequestId</code> allows
              failed requests to be retried without the risk of running the
              operation twice.
      DestinationArn:
        allOf:
          - $ref: '#/definitions/DestinationArn'
          - description: >-
              The ARN of the resource that you want Resolver to send query logs:
              an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis
              Data Firehose delivery stream.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID for the query logging configuration.
      Name:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigName'
          - description: 'The name of the query logging configuration. '
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              The Amazon Web Services account ID for the account that created
              the query logging configuration. 
      ShareStatus:
        allOf:
          - $ref: '#/definitions/ShareStatus'
          - description: >-
              An indication of whether the query logging configuration is shared
              with other Amazon Web Services accounts, or was shared with the
              current account by another Amazon Web Services account. Sharing is
              configured through Resource Access Manager (RAM).
      Status:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigStatus'
          - description: >-
              <p>The status of the specified query logging configuration. Valid
              values include the following:</p> <ul> <li> <p>
              <code>CREATING</code>: Resolver is creating the query logging
              configuration.</p> </li> <li> <p> <code>CREATED</code>: The query
              logging configuration was successfully created. Resolver is
              logging queries that originate in the specified VPC.</p> </li>
              <li> <p> <code>DELETING</code>: Resolver is deleting this query
              logging configuration.</p> </li> <li> <p> <code>FAILED</code>:
              Resolver can't deliver logs to the location that is specified in
              the query logging configuration. Here are two common causes:</p>
              <ul> <li> <p>The specified destination (for example, an Amazon S3
              bucket) was deleted.</p> </li> <li> <p>Permissions don't allow
              sending logs to the destination.</p> </li> </ul> </li> </ul>
    type: object
  ResolverQueryLogConfigAssociation:
    description: >-
      In the response to an <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html">AssociateResolverQueryLogConfig</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfigAssociation.html">GetResolverQueryLogConfigAssociation</a>,
      or <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>,
      request, a complex type that contains settings for a specified association
      between an Amazon VPC and a query logging configuration.
    properties:
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the VPC was associated with the query
              logging configuration, in Unix time format and Coordinated
              Universal Time (UTC).
      Error:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociationError'
          - description: >-
              <p>If the value of <code>Status</code> is <code>FAILED</code>, the
              value of <code>Error</code> indicates the cause:</p> <ul> <li> <p>
              <code>DESTINATION_NOT_FOUND</code>: The specified destination (for
              example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>
              <code>ACCESS_DENIED</code>: Permissions don't allow sending logs
              to the destination.</p> </li> </ul> <p>If the value of
              <code>Status</code> is a value other than <code>FAILED</code>,
              <code>Error</code> is null. </p>
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociationErrorMessage'
          - description: >-
              Contains additional information about the error. If the value or
              <code>Error</code> is null, the value of <code>ErrorMessage</code>
              also is null.
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the query logging association.
      ResolverQueryLogConfigId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the query logging configuration that a VPC is associated
              with.
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Amazon VPC that is associated with the query logging
              configuration.
      Status:
        allOf:
          - $ref: '#/definitions/ResolverQueryLogConfigAssociationStatus'
          - description: >-
              <p>The status of the specified query logging association. Valid
              values include the following:</p> <ul> <li> <p>
              <code>CREATING</code>: Resolver is creating an association between
              an Amazon VPC and a query logging configuration.</p> </li> <li>
              <p> <code>CREATED</code>: The association between an Amazon VPC
              and a query logging configuration was successfully created.
              Resolver is logging queries that originate in the specified
              VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is
              deleting this query logging association.</p> </li> <li> <p>
              <code>FAILED</code>: Resolver either couldn't create or couldn't
              delete the query logging association.</p> </li> </ul>
    type: object
  ResolverQueryLogConfigAssociationError:
    enum:
      - NONE
      - DESTINATION_NOT_FOUND
      - ACCESS_DENIED
      - INTERNAL_SERVICE_ERROR
    type: string
  ResolverQueryLogConfigAssociationErrorMessage:
    type: string
  ResolverQueryLogConfigAssociationList:
    items:
      $ref: '#/definitions/ResolverQueryLogConfigAssociation'
    type: array
  ResolverQueryLogConfigAssociationStatus:
    enum:
      - CREATING
      - ACTIVE
      - ACTION_NEEDED
      - DELETING
      - FAILED
    type: string
  ResolverQueryLogConfigList:
    items:
      $ref: '#/definitions/ResolverQueryLogConfig'
    type: array
  ResolverQueryLogConfigName:
    maxLength: 64
    minLength: 1
    pattern: '(?!^[0-9]+$)([a-zA-Z0-9\-_'' '']+)'
    type: string
  ResolverQueryLogConfigPolicy:
    maxLength: 5000
    type: string
  ResolverQueryLogConfigStatus:
    enum:
      - CREATING
      - CREATED
      - DELETING
      - FAILED
    type: string
  ResolverRule:
    description: >-
      For queries that originate in your VPC, detailed information about a
      Resolver rule, which specifies how to route DNS queries out of the VPC.
      The <code>ResolverRule</code> parameter appears in the response to a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html">DeleteResolverRule</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>,
      or <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html">UpdateResolverRule</a>
      request.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN (Amazon Resource Name) for the Resolver rule specified by
              <code>Id</code>.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the Resolver rule was created, in Unix time
              format and Coordinated Universal Time (UTC).
      CreatorRequestId:
        allOf:
          - $ref: '#/definitions/CreatorRequestId'
          - description: >-
              A unique string that you specified when you created the Resolver
              rule. <code>CreatorRequestId</code> identifies the request and
              allows failed requests to be retried without the risk of running
              the operation twice. 
      DomainName:
        allOf:
          - $ref: '#/definitions/DomainName'
          - description: >-
              DNS queries for this domain name are forwarded to the IP addresses
              that are specified in <code>TargetIps</code>. If a query matches
              multiple Resolver rules (example.com and www.example.com), the
              query is routed using the Resolver rule that contains the most
              specific domain name (www.example.com).
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID that Resolver assigned to the Resolver rule when you
              created it.
      ModificationTime:
        allOf:
          - $ref: '#/definitions/Rfc3339TimeString'
          - description: >-
              The date and time that the Resolver rule was last updated, in Unix
              time format and Coordinated Universal Time (UTC).
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name for the Resolver rule, which you specified when you
              created the Resolver rule.
      OwnerId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: >-
              When a rule is shared with another Amazon Web Services account,
              the account ID of the account that the rule is shared with.
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the endpoint that the rule is associated with.
      RuleType:
        allOf:
          - $ref: '#/definitions/RuleTypeOption'
          - description: >-
              <p>When you want to forward DNS queries for specified domain name
              to resolvers on your network, specify <code>FORWARD</code>.</p>
              <p>When you have a forwarding rule to forward DNS queries for a
              domain to your network and you want Resolver to process queries
              for a subdomain of that domain, specify <code>SYSTEM</code>.</p>
              <p>For example, to forward DNS queries for example.com to
              resolvers on your network, you create a rule and specify
              <code>FORWARD</code> for <code>RuleType</code>. To then have
              Resolver process queries for apex.example.com, you create a rule
              and specify <code>SYSTEM</code> for <code>RuleType</code>.</p>
              <p>Currently, only Resolver can create rules that have a value of
              <code>RECURSIVE</code> for <code>RuleType</code>.</p>
      ShareStatus:
        allOf:
          - $ref: '#/definitions/ShareStatus'
          - description: >-
              Whether the rule is shared and, if so, whether the current account
              is sharing the rule with another account, or another account is
              sharing the rule with the current account.
      Status:
        allOf:
          - $ref: '#/definitions/ResolverRuleStatus'
          - description: A code that specifies the current status of the Resolver rule.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: A detailed description of the status of a Resolver rule.
      TargetIps:
        allOf:
          - $ref: '#/definitions/TargetList'
          - description: >-
              An array that contains the IP addresses and ports that an outbound
              endpoint forwards DNS queries to. Typically, these are the IP
              addresses of DNS resolvers on your network. Specify IPv4
              addresses. IPv6 is not supported.
    type: object
  ResolverRuleAssociation:
    description: >-
      In the response to an <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>,
      <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html">DisassociateResolverRule</a>,
      or <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>
      request, provides information about an association between a Resolver rule
      and a VPC. The association determines which DNS queries that originate in
      the VPC are forwarded to your network. 
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the association between a Resolver rule and a VPC.
              Resolver assigns this value when you submit an <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>
              request.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of an association between a Resolver rule and a VPC.
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the Resolver rule that you associated with the VPC that
              is specified by <code>VPCId</code>.
      Status:
        allOf:
          - $ref: '#/definitions/ResolverRuleAssociationStatus'
          - description: >-
              A code that specifies the current status of the association
              between a Resolver rule and a VPC.
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: >-
              A detailed description of the status of the association between a
              Resolver rule and a VPC.
      VPCId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the VPC that you associated the Resolver rule with.
    type: object
  ResolverRuleAssociationStatus:
    enum:
      - CREATING
      - COMPLETE
      - DELETING
      - FAILED
      - OVERRIDDEN
    type: string
  ResolverRuleAssociations:
    items:
      $ref: '#/definitions/ResolverRuleAssociation'
    type: array
  ResolverRuleConfig:
    description: >-
      In an <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html">UpdateResolverRule</a>
      request, information about the changes that you want to make.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The new name for the Resolver rule. The name that you specify
              appears in the Resolver dashboard in the Route 53 console. 
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the new outbound Resolver endpoint that you want to use
              to route DNS queries to the IP addresses that you specify in
              <code>TargetIps</code>.
      TargetIps:
        allOf:
          - $ref: '#/definitions/TargetList'
          - description: >-
              For DNS queries that originate in your VPC, the new IP addresses
              that you want to route outbound DNS queries to.
    type: object
  ResolverRulePolicy:
    maxLength: 5000
    type: string
  ResolverRuleStatus:
    enum:
      - COMPLETE
      - DELETING
      - UPDATING
      - FAILED
    type: string
  ResolverRules:
    items:
      $ref: '#/definitions/ResolverRule'
    type: array
  ResourceExistsException: {}
  ResourceId:
    maxLength: 64
    minLength: 1
    type: string
  ResourceInUseException: {}
  ResourceNotFoundException: {}
  ResourceUnavailableException: {}
  Rfc3339TimeString:
    maxLength: 40
    minLength: 20
    type: string
  RuleTypeOption:
    enum:
      - FORWARD
      - SYSTEM
      - RECURSIVE
    type: string
  SecurityGroupIds:
    items:
      $ref: '#/definitions/ResourceId'
    type: array
  ServicePrinciple:
    maxLength: 512
    minLength: 1
    type: string
  ShareStatus:
    enum:
      - NOT_SHARED
      - SHARED_WITH_ME
      - SHARED_BY_ME
    type: string
  SortByKey:
    maxLength: 64
    minLength: 1
    type: string
  SortOrder:
    enum:
      - ASCENDING
      - DESCENDING
    type: string
  StatusMessage:
    maxLength: 255
    type: string
  SubnetId:
    maxLength: 32
    minLength: 1
    type: string
  Tag:
    description: >-
      One tag that you want to add to the specified resource. A tag consists of
      a <code>Key</code> (a name for the tag) and a <code>Value</code>.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: >-
              The name for the tag. For example, if you want to associate
              Resolver resources with the account IDs of your customers for
              billing purposes, the value of <code>Key</code> might be
              <code>account-id</code>.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: >-
              The value for the tag. For example, if <code>Key</code> is
              <code>account-id</code>, then <code>Value</code> might be the ID
              of the customer account that you're creating the resource for.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              <p>The Amazon Resource Name (ARN) for the resource that you want
              to add tags to. To get the ARN for a resource, use the applicable
              <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p>
              <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html">GetResolverRuleAssociation</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>
              </p> </li> </ul>
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags that you want to add to the specified resource.
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  TargetAddress:
    description: >-
      In a <a
      href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>
      request, an array of the IPs that you want to forward DNS queries to.
    properties:
      Ip:
        allOf:
          - $ref: '#/definitions/Ip'
          - description: >-
              One IP address that you want to forward DNS queries to. You can
              specify only IPv4 addresses.
      Port:
        allOf:
          - $ref: '#/definitions/Port'
          - description: >-
              The port at <code>Ip</code> that you want to forward DNS queries
              to.
    required:
      - Ip
    type: object
  TargetList:
    items:
      $ref: '#/definitions/TargetAddress'
    minItems: 1
    type: array
  ThrottlingException: {}
  UnknownResourceException: {}
  Unsigned:
    type: integer
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              <p>The Amazon Resource Name (ARN) for the resource that you want
              to remove tags from. To get the ARN for a resource, use the
              applicable <code>Get</code> or <code>List</code> command: </p>
              <ul> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html">GetResolverRuleAssociation</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>
              </p> </li> <li> <p> <a
              href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>
              </p> </li> </ul>
      TagKeys:
        allOf:
          - $ref: '#/definitions/TagKeyList'
          - description: The tags that you want to remove to the specified resource.
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateFirewallConfigRequest:
    properties:
      FirewallFailOpen:
        allOf:
          - $ref: '#/definitions/FirewallFailOpenStatus'
          - description: >-
              <p>Determines how Route 53 Resolver handles queries during
              failures, for example when all traffic that is sent to DNS
              Firewall fails to receive a reply. </p> <ul> <li> <p>By default,
              fail open is disabled, which means the failure mode is closed.
              This approach favors security over availability. DNS Firewall
              blocks queries that it is unable to evaluate properly. </p> </li>
              <li> <p>If you enable this option, the failure mode is open. This
              approach favors availability over security. DNS Firewall allows
              queries to proceed if it is unable to properly evaluate them. </p>
              </li> </ul> <p>This behavior is only enforced for VPCs that have
              at least one DNS Firewall rule group association. </p>
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the VPC that the configuration is for.
    required:
      - ResourceId
      - FirewallFailOpen
    title: UpdateFirewallConfigRequest
    type: object
  UpdateFirewallConfigResponse:
    properties:
      FirewallConfig:
        allOf:
          - $ref: '#/definitions/FirewallConfig'
          - description: >-
              Configuration of the firewall behavior provided by DNS Firewall
              for a single VPC. 
    type: object
  UpdateFirewallDomainsRequest:
    properties:
      Domains:
        allOf:
          - $ref: '#/definitions/FirewallDomains'
          - description: >-
              <p>A list of domains to use in the update operation.</p> <p>Each
              domain specification in your domain list must satisfy the
              following requirements: </p> <ul> <li> <p>It can optionally start
              with <code>*</code> (asterisk).</p> </li> <li> <p>With the
              exception of the optional starting asterisk, it must only contain
              the following characters: <code>A-Z</code>, <code>a-z</code>,
              <code>0-9</code>, <code>-</code> (hyphen).</p> </li> <li> <p>It
              must be from 1-255 characters in length. </p> </li> </ul>
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list whose domains you want to update. '
      Operation:
        allOf:
          - $ref: '#/definitions/FirewallDomainUpdateOperation'
          - description: >-
              <p>What you want DNS Firewall to do with the domains that you are
              providing: </p> <ul> <li> <p> <code>ADD</code> - Add the domains
              to the ones that are already in the domain list. </p> </li> <li>
              <p> <code>REMOVE</code> - Search the domain list for the domains
              and remove them from the list.</p> </li> <li> <p>
              <code>REPLACE</code> - Update the domain list to exactly match the
              list that you are providing. </p> </li> </ul>
    required:
      - FirewallDomainListId
      - Operation
      - Domains
    title: UpdateFirewallDomainsRequest
    type: object
  UpdateFirewallDomainsResponse:
    properties:
      Id:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the firewall domain list that DNS Firewall just updated.
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: 'The name of the domain list. '
      Status:
        allOf:
          - $ref: '#/definitions/FirewallDomainListStatus'
          - description: ' '
      StatusMessage:
        allOf:
          - $ref: '#/definitions/StatusMessage'
          - description: 'Additional information about the status of the list, if available.'
    type: object
  UpdateFirewallRuleGroupAssociationRequest:
    properties:
      FirewallRuleGroupAssociationId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
      MutationProtection:
        allOf:
          - $ref: '#/definitions/MutationProtectionStatus'
          - description: >-
              If enabled, this setting disallows modification or removal of the
              association, to help prevent against accidentally altering DNS
              firewall protections. 
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the rule group association.
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              <p>The setting that determines the processing order of the rule
              group among the rule groups that you associate with the specified
              VPC. DNS Firewall filters VPC traffic starting from the rule group
              with the lowest numeric priority setting. </p> <p>You must specify
              a unique priority for each rule group that you associate with a
              single VPC. To make it easier to insert rule groups later, leave
              space between the numbers, for example, use 100, 200, and so on.
              You can change the priority setting for a rule group association
              after you create it.</p>
    required:
      - FirewallRuleGroupAssociationId
    title: UpdateFirewallRuleGroupAssociationRequest
    type: object
  UpdateFirewallRuleGroupAssociationResponse:
    properties:
      FirewallRuleGroupAssociation:
        allOf:
          - $ref: '#/definitions/FirewallRuleGroupAssociation'
          - description: 'The association that you just updated. '
    type: object
  UpdateFirewallRuleRequest:
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: >-
              <p>The action that DNS Firewall should take on a DNS query when it
              matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go
              through.</p> </li> <li> <p> <code>ALERT</code> - Permit the
              request to go through but send an alert to the logs.</p> </li>
              <li> <p> <code>BLOCK</code> - Disallow the request. This option
              requires additional details in the rule's
              <code>BlockResponse</code>. </p> </li> </ul>
      BlockOverrideDnsType:
        allOf:
          - $ref: '#/definitions/BlockOverrideDnsType'
          - description: >-
              The DNS record's type. This determines the format of the record
              value that you provided in <code>BlockOverrideDomain</code>. Used
              for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.
      BlockOverrideDomain:
        allOf:
          - $ref: '#/definitions/BlockOverrideDomain'
          - description: >-
              The custom DNS record to send back in response to the query. Used
              for the rule action <code>BLOCK</code> with a
              <code>BlockResponse</code> setting of <code>OVERRIDE</code>.
      BlockOverrideTtl:
        allOf:
          - $ref: '#/definitions/BlockOverrideTtl'
          - description: >-
              The recommended amount of time, in seconds, for the DNS resolver
              or web browser to cache the provided override record. Used for the
              rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
      BlockResponse:
        allOf:
          - $ref: '#/definitions/BlockResponse'
          - description: >-
              <p>The way that you want DNS Firewall to block the request. Used
              for the rule action setting <code>BLOCK</code>.</p> <ul> <li> <p>
              <code>NODATA</code> - Respond indicating that the query was
              successful, but no response is available for it.</p> </li> <li>
              <p> <code>NXDOMAIN</code> - Respond indicating that the domain
              name that's in the query doesn't exist.</p> </li> <li> <p>
              <code>OVERRIDE</code> - Provide a custom override in the response.
              This option requires custom handling details in the rule's
              <code>BlockOverride*</code> settings. </p> </li> </ul>
      FirewallDomainListId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The ID of the domain list to use in the rule. '
      FirewallRuleGroupId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: 'The unique identifier of the firewall rule group for the rule. '
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the rule.
      Priority:
        allOf:
          - $ref: '#/definitions/Priority'
          - description: >-
              <p>The setting that determines the processing order of the rule in
              the rule group. DNS Firewall processes the rules in a rule group
              by order of priority, starting from the lowest setting.</p> <p>You
              must specify a unique priority for each rule in a rule group. To
              make it easier to insert rules later, leave space between the
              numbers, for example, use 100, 200, and so on. You can change the
              priority setting for the rules in a rule group at any time.</p>
    required:
      - FirewallRuleGroupId
      - FirewallDomainListId
    title: UpdateFirewallRuleRequest
    type: object
  UpdateFirewallRuleResponse:
    properties:
      FirewallRule:
        allOf:
          - $ref: '#/definitions/FirewallRule'
          - description: 'The firewall rule that you just updated. '
    type: object
  UpdateResolverDnssecConfigRequest:
    properties:
      ResourceId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: >-
              The ID of the virtual private cloud (VPC) that you're updating the
              DNSSEC validation status for.
      Validation:
        allOf:
          - $ref: '#/definitions/Validation'
          - description: >-
              The new value that you are specifying for DNSSEC validation for
              the VPC. The value can be <code>ENABLE</code> or
              <code>DISABLE</code>. Be aware that it can take time for a
              validation status change to be completed.
    required:
      - ResourceId
      - Validation
    title: UpdateResolverDnssecConfigRequest
    type: object
  UpdateResolverDnssecConfigResponse:
    properties:
      ResolverDNSSECConfig:
        allOf:
          - $ref: '#/definitions/ResolverDnssecConfig'
          - description: >-
              A complex type that contains settings for the specified DNSSEC
              configuration.
    type: object
  UpdateResolverEndpointRequest:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the Resolver endpoint that you want to update.
      ResolverEndpointId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Resolver endpoint that you want to update.
    required:
      - ResolverEndpointId
    title: UpdateResolverEndpointRequest
    type: object
  UpdateResolverEndpointResponse:
    properties:
      ResolverEndpoint:
        allOf:
          - $ref: '#/definitions/ResolverEndpoint'
          - description: The response to an <code>UpdateResolverEndpoint</code> request.
    type: object
  UpdateResolverRuleRequest:
    properties:
      Config:
        allOf:
          - $ref: '#/definitions/ResolverRuleConfig'
          - description: The new settings for the Resolver rule.
      ResolverRuleId:
        allOf:
          - $ref: '#/definitions/ResourceId'
          - description: The ID of the Resolver rule that you want to update.
    required:
      - ResolverRuleId
      - Config
    title: UpdateResolverRuleRequest
    type: object
  UpdateResolverRuleResponse:
    properties:
      ResolverRule:
        allOf:
          - $ref: '#/definitions/ResolverRule'
          - description: The response to an <code>UpdateResolverRule</code> request.
    type: object
  Validation:
    enum:
      - ENABLE
      - DISABLE
    type: string
  ValidationException: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/route53resolver/'
host: route53resolver.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>When you create a VPC using Amazon VPC, you automatically get DNS
    resolution within the VPC from Route 53 Resolver. By default, Resolver
    answers DNS queries for VPC domain names such as domain names for EC2
    instances or Elastic Load Balancing load balancers. Resolver performs
    recursive lookups against public name servers for all other domain
    names.</p> <p>You can also configure DNS resolution between your VPC and
    your network over a Direct Connect or VPN connection:</p> <p> <b>Forward DNS
    queries from resolvers on your network to Route 53 Resolver</b> </p> <p>DNS
    resolvers on your network can forward DNS queries to Resolver in a specified
    VPC. This allows your DNS resolvers to easily resolve domain names for
    Amazon Web Services resources such as EC2 instances or records in a Route 53
    private hosted zone. For more information, see <a
    href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-network-to-vpc">How
    DNS Resolvers on Your Network Forward DNS Queries to Route 53 Resolver</a>
    in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Conditionally
    forward queries from a VPC to resolvers on your network</b> </p> <p>You can
    configure Resolver to forward queries that it receives from EC2 instances in
    your VPCs to DNS resolvers on your network. To forward selected queries, you
    create Resolver rules that specify the domain names for the DNS queries that
    you want to forward (such as example.com), and the IP addresses of the DNS
    resolvers on your network that you want to forward the queries to. If a
    query matches multiple rules (example.com, acme.example.com), Resolver
    chooses the rule with the most specific match (acme.example.com) and
    forwards the query to the IP addresses that you specified in that rule. For
    more information, see <a
    href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-vpc-to-network">How
    Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network</a> in
    the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Like Amazon VPC, Resolver
    is Regional. In each Region where you have VPCs, you can choose whether to
    forward queries from your VPCs to your network (outbound queries), from your
    network to your VPCs (inbound queries), or both.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Route 53 Resolver
  version: '2018-04-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53resolver-2018-04-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: route53resolver
paths:
  /#X-Amz-Target=Route53Resolver.AssociateFirewallRuleGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Associates a <a>FirewallRuleGroup</a> with a VPC, to provide DNS
        filtering for the VPC. 
      operationId: AssociateFirewallRuleGroup
      parameters:
        - enum:
            - Route53Resolver.AssociateFirewallRuleGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateFirewallRuleGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateFirewallRuleGroupResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.AssociateResolverEndpointIpAddress:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds IP addresses to an inbound or an outbound Resolver endpoint. If
        you want to add more than one IP address, submit one
        <code>AssociateResolverEndpointIpAddress</code> request for each IP
        address.</p> <p>To remove an IP address from an endpoint, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverEndpointIpAddress.html">DisassociateResolverEndpointIpAddress</a>.
        </p>
      operationId: AssociateResolverEndpointIpAddress
      parameters:
        - enum:
            - Route53Resolver.AssociateResolverEndpointIpAddress
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateResolverEndpointIpAddressRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateResolverEndpointIpAddressResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.AssociateResolverQueryLogConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Associates an Amazon VPC with a specified query logging
        configuration. Route 53 Resolver logs DNS queries that originate in all
        of the Amazon VPCs that are associated with a specified query logging
        configuration. To associate more than one VPC with a configuration,
        submit one <code>AssociateResolverQueryLogConfig</code> request for each
        VPC.</p> <note> <p>The VPCs that you associate with a query logging
        configuration must be in the same Region as the configuration.</p>
        </note> <p>To remove a VPC from a query logging configuration, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>.
        </p>
      operationId: AssociateResolverQueryLogConfig
      parameters:
        - enum:
            - Route53Resolver.AssociateResolverQueryLogConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateResolverQueryLogConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateResolverQueryLogConfigResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '487':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.AssociateResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Associates a Resolver rule with a VPC. When you associate a rule with a
        VPC, Resolver forwards all DNS queries for the domain name that is
        specified in the rule and that originate in the VPC. The queries are
        forwarded to the IP addresses for the DNS resolvers that are specified
        in the rule. For more information about rules, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>. 
      operationId: AssociateResolverRule
      parameters:
        - enum:
            - Route53Resolver.AssociateResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateResolverRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
        '485':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '486':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '487':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.CreateFirewallDomainList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an empty firewall domain list for use in DNS Firewall rules. You
        can populate the domains for the new list with a file, using
        <a>ImportFirewallDomains</a>, or with domain strings, using
        <a>UpdateFirewallDomains</a>. 
      operationId: CreateFirewallDomainList
      parameters:
        - enum:
            - Route53Resolver.CreateFirewallDomainList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFirewallDomainListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFirewallDomainListResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.CreateFirewallRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a single DNS Firewall rule in the specified rule group, using
        the specified domain list.
      operationId: CreateFirewallRule
      parameters:
        - enum:
            - Route53Resolver.CreateFirewallRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFirewallRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFirewallRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.CreateFirewallRuleGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an empty DNS Firewall rule group for filtering DNS network
        traffic in a VPC. You can add rules to the new rule group by calling
        <a>CreateFirewallRule</a>. 
      operationId: CreateFirewallRuleGroup
      parameters:
        - enum:
            - Route53Resolver.CreateFirewallRuleGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFirewallRuleGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFirewallRuleGroupResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.CreateResolverEndpoint:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a Resolver endpoint. There are two types of Resolver
        endpoints, inbound and outbound:</p> <ul> <li> <p>An <i>inbound Resolver
        endpoint</i> forwards DNS queries to the DNS service for a VPC from your
        network.</p> </li> <li> <p>An <i>outbound Resolver endpoint</i> forwards
        DNS queries from the DNS service for a VPC to your network.</p> </li>
        </ul>
      operationId: CreateResolverEndpoint
      parameters:
        - enum:
            - Route53Resolver.CreateResolverEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateResolverEndpointRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResolverEndpointResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.CreateResolverQueryLogConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a Resolver query logging configuration, which defines where
        you want Resolver to save DNS query logs that originate in your VPCs.
        Resolver can log queries only for VPCs that are in the same Region as
        the query logging configuration.</p> <p>To specify which VPCs you want
        to log queries for, you use
        <code>AssociateResolverQueryLogConfig</code>. For more information, see
        <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html">AssociateResolverQueryLogConfig</a>.
        </p> <p>You can optionally use Resource Access Manager (RAM) to share a
        query logging configuration with other Amazon Web Services accounts. The
        other accounts can then associate VPCs with the configuration. The query
        logs that Resolver creates for a configuration include all DNS queries
        that originate in all VPCs that are associated with the
        configuration.</p>
      operationId: CreateResolverQueryLogConfig
      parameters:
        - enum:
            - Route53Resolver.CreateResolverQueryLogConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateResolverQueryLogConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResolverQueryLogConfigResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '487':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.CreateResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        For DNS queries that originate in your VPCs, specifies which Resolver
        endpoint the queries pass through, one domain name that you want to
        forward to your network, and the IP addresses of the DNS resolvers in
        your network.
      operationId: CreateResolverRule
      parameters:
        - enum:
            - Route53Resolver.CreateResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResolverRuleResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
        '486':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '487':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DeleteFirewallDomainList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Deletes the specified domain list. '
      operationId: DeleteFirewallDomainList
      parameters:
        - enum:
            - Route53Resolver.DeleteFirewallDomainList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFirewallDomainListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFirewallDomainListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DeleteFirewallRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes the specified firewall rule.
      operationId: DeleteFirewallRule
      parameters:
        - enum:
            - Route53Resolver.DeleteFirewallRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFirewallRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFirewallRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DeleteFirewallRuleGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Deletes the specified firewall rule group. '
      operationId: DeleteFirewallRuleGroup
      parameters:
        - enum:
            - Route53Resolver.DeleteFirewallRuleGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFirewallRuleGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFirewallRuleGroupResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DeleteResolverEndpoint:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes a Resolver endpoint. The effect of deleting a Resolver
        endpoint depends on whether it's an inbound or an outbound Resolver
        endpoint:</p> <ul> <li> <p> <b>Inbound</b>: DNS queries from your
        network are no longer routed to the DNS service for the specified
        VPC.</p> </li> <li> <p> <b>Outbound</b>: DNS queries from a VPC are no
        longer routed to your network.</p> </li> </ul>
      operationId: DeleteResolverEndpoint
      parameters:
        - enum:
            - Route53Resolver.DeleteResolverEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResolverEndpointRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResolverEndpointResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DeleteResolverQueryLogConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes a query logging configuration. When you delete a
        configuration, Resolver stops logging DNS queries for all of the Amazon
        VPCs that are associated with the configuration. This also applies if
        the query logging configuration is shared with other Amazon Web Services
        accounts, and the other accounts have associated VPCs with the shared
        configuration.</p> <p>Before you can delete a query logging
        configuration, you must first disassociate all VPCs from the
        configuration. See <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>.</p>
        <p>If you used Resource Access Manager (RAM) to share a query logging
        configuration with other accounts, you must stop sharing the
        configuration before you can delete a configuration. The accounts that
        you shared the configuration with can first disassociate VPCs that they
        associated with the configuration, but that's not necessary. If you stop
        sharing the configuration, those VPCs are automatically disassociated
        from the configuration.</p>
      operationId: DeleteResolverQueryLogConfig
      parameters:
        - enum:
            - Route53Resolver.DeleteResolverQueryLogConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResolverQueryLogConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResolverQueryLogConfigResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.DeleteResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes a Resolver rule. Before you can delete a Resolver rule, you must
        disassociate it from all the VPCs that you associated the Resolver rule
        with. For more information, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html">DisassociateResolverRule</a>.
      operationId: DeleteResolverRule
      parameters:
        - enum:
            - Route53Resolver.DeleteResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResolverRuleResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DisassociateFirewallRuleGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Disassociates a <a>FirewallRuleGroup</a> from a VPC, to remove DNS
        filtering from the VPC. 
      operationId: DisassociateFirewallRuleGroup
      parameters:
        - enum:
            - Route53Resolver.DisassociateFirewallRuleGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateFirewallRuleGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFirewallRuleGroupResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DisassociateResolverEndpointIpAddress:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Removes IP addresses from an inbound or an outbound Resolver
        endpoint. If you want to remove more than one IP address, submit one
        <code>DisassociateResolverEndpointIpAddress</code> request for each IP
        address.</p> <p>To add an IP address to an endpoint, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverEndpointIpAddress.html">AssociateResolverEndpointIpAddress</a>.
        </p>
      operationId: DisassociateResolverEndpointIpAddress
      parameters:
        - enum:
            - Route53Resolver.DisassociateResolverEndpointIpAddress
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateResolverEndpointIpAddressRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateResolverEndpointIpAddressResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.DisassociateResolverQueryLogConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Disassociates a VPC from a query logging configuration.</p> <note>
        <p>Before you can delete a query logging configuration, you must first
        disassociate all VPCs from the configuration. If you used Resource
        Access Manager (RAM) to share a query logging configuration with other
        accounts, VPCs can be disassociated from the configuration in the
        following ways:</p> <ul> <li> <p>The accounts that you shared the
        configuration with can disassociate VPCs from the configuration.</p>
        </li> <li> <p>You can stop sharing the configuration.</p> </li> </ul>
        </note>
      operationId: DisassociateResolverQueryLogConfig
      parameters:
        - enum:
            - Route53Resolver.DisassociateResolverQueryLogConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateResolverQueryLogConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateResolverQueryLogConfigResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.DisassociateResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Removes the association between a specified Resolver rule and a
        specified VPC.</p> <important> <p>If you disassociate a Resolver rule
        from a VPC, Resolver stops forwarding DNS queries for the domain name
        that you specified in the Resolver rule. </p> </important>
      operationId: DisassociateResolverRule
      parameters:
        - enum:
            - Route53Resolver.DisassociateResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateResolverRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetFirewallConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Retrieves the configuration of the firewall behavior provided by DNS
        Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon
        VPC). 
      operationId: GetFirewallConfig
      parameters:
        - enum:
            - Route53Resolver.GetFirewallConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFirewallConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFirewallConfigResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /#X-Amz-Target=Route53Resolver.GetFirewallDomainList:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Retrieves the specified firewall domain list.
      operationId: GetFirewallDomainList
      parameters:
        - enum:
            - Route53Resolver.GetFirewallDomainList
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFirewallDomainListRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFirewallDomainListResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Retrieves the specified firewall rule group. '
      operationId: GetFirewallRuleGroup
      parameters:
        - enum:
            - Route53Resolver.GetFirewallRuleGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroupAssociation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Retrieves a firewall rule group association, which enables DNS filtering
        for a VPC with one rule group. A VPC can have more than one firewall
        rule group association, and a rule group can be associated with more
        than one VPC.
      operationId: GetFirewallRuleGroupAssociation
      parameters:
        - enum:
            - Route53Resolver.GetFirewallRuleGroupAssociation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupAssociationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupAssociationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroupPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns the Identity and Access Management (Amazon Web Services IAM)
        policy for sharing the specified rule group. You can use the policy to
        share the rule group using Resource Access Manager (RAM). 
      operationId: GetFirewallRuleGroupPolicy
      parameters:
        - enum:
            - Route53Resolver.GetFirewallRuleGroupPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFirewallRuleGroupPolicyResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetResolverDnssecConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets DNSSEC validation information for a specified resource.
      operationId: GetResolverDnssecConfig
      parameters:
        - enum:
            - Route53Resolver.GetResolverDnssecConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverDnssecConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverDnssecConfigResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.GetResolverEndpoint:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about a specified Resolver endpoint, such as whether
        it's an inbound or an outbound Resolver endpoint, and the current status
        of the endpoint.
      operationId: GetResolverEndpoint
      parameters:
        - enum:
            - Route53Resolver.GetResolverEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverEndpointRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverEndpointResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about a specified Resolver query logging configuration,
        such as the number of VPCs that the configuration is logging queries for
        and the location that logs are sent to. 
      operationId: GetResolverQueryLogConfig
      parameters:
        - enum:
            - Route53Resolver.GetResolverQueryLogConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfigAssociation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about a specified association between a Resolver query
        logging configuration and an Amazon VPC. When you associate a VPC with a
        query logging configuration, Resolver logs DNS queries that originate in
        that VPC.
      operationId: GetResolverQueryLogConfigAssociation
      parameters:
        - enum:
            - Route53Resolver.GetResolverQueryLogConfigAssociation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigAssociationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigAssociationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfigPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about a query logging policy. A query logging policy
        specifies the Resolver query logging operations and resources that you
        want to allow another Amazon Web Services account to be able to use.
      operationId: GetResolverQueryLogConfigPolicy
      parameters:
        - enum:
            - Route53Resolver.GetResolverQueryLogConfigPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverQueryLogConfigPolicyResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnknownResourceException
          schema:
            $ref: '#/definitions/UnknownResourceException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.GetResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about a specified Resolver rule, such as the domain
        name that the rule forwards DNS queries for and the ID of the outbound
        Resolver endpoint that the rule is associated with.
      operationId: GetResolverRule
      parameters:
        - enum:
            - Route53Resolver.GetResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetResolverRuleAssociation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about an association between a specified Resolver rule
        and a VPC. You associate a Resolver rule and a VPC using <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>. 
      operationId: GetResolverRuleAssociation
      parameters:
        - enum:
            - Route53Resolver.GetResolverRuleAssociation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverRuleAssociationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverRuleAssociationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.GetResolverRulePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Gets information about the Resolver rule policy for a specified rule. A
        Resolver rule policy includes the rule that you want to share with
        another account, the account that you want to share the rule with, and
        the Resolver operations that you want to allow the account to use. 
      operationId: GetResolverRulePolicy
      parameters:
        - enum:
            - Route53Resolver.GetResolverRulePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResolverRulePolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResolverRulePolicyResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: UnknownResourceException
          schema:
            $ref: '#/definitions/UnknownResourceException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=Route53Resolver.ImportFirewallDomains:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Imports domain names from a file into a domain list, for use in a DNS
        firewall rule group. </p> <p>Each domain specification in your domain
        list must satisfy the following requirements: </p> <ul> <li> <p>It can
        optionally start with <code>*</code> (asterisk).</p> </li> <li> <p>With
        the exception of the optional starting asterisk, it must only contain
        the following characters: <code>A-Z</code>, <code>a-z</code>,
        <code>0-9</code>, <code>-</code> (hyphen).</p> </li> <li> <p>It must be
        from 1-255 characters in length. </p> </li> </ul>
      operationId: ImportFirewallDomains
      parameters:
        - enum:
            - Route53Resolver.ImportFirewallDomains
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportFirewallDomainsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportFirewallDomainsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallConfigs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the firewall configurations that you have defined. DNS
        Firewall uses the configurations to manage firewall behavior for your
        VPCs. </p> <p>A single call might return only a partial list of the
        configurations. For information, see <code>MaxResults</code>. </p>
      operationId: ListFirewallConfigs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallConfigs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallConfigsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallConfigsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallDomainLists:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the firewall domain lists that you have defined. For each
        firewall domain list, you can retrieve the domains that are defined for
        a list by calling <a>ListFirewallDomains</a>. </p> <p>A single call to
        this list operation might return only a partial list of the domain
        lists. For information, see <code>MaxResults</code>. </p>
      operationId: ListFirewallDomainLists
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallDomainLists
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallDomainListsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallDomainListsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallDomains:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the domains that you have defined for the specified
        firewall domain list. </p> <p>A single call might return only a partial
        list of the domains. For information, see <code>MaxResults</code>. </p>
      operationId: ListFirewallDomains
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallDomains
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallDomainsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallDomainsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallRuleGroupAssociations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the firewall rule group associations that you have defined.
        Each association enables DNS filtering for a VPC with one rule group.
        </p> <p>A single call might return only a partial list of the
        associations. For information, see <code>MaxResults</code>. </p>
      operationId: ListFirewallRuleGroupAssociations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallRuleGroupAssociations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallRuleGroupAssociationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallRuleGroupAssociationsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallRuleGroups:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the minimal high-level information for the rule groups that
        you have defined. </p> <p>A single call might return only a partial list
        of the rule groups. For information, see <code>MaxResults</code>. </p>
      operationId: ListFirewallRuleGroups
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallRuleGroups
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallRuleGroupsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallRuleGroupsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListFirewallRules:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves the firewall rules that you have defined for the specified
        firewall rule group. DNS Firewall uses the rules in a rule group to
        filter DNS network traffic for a VPC. </p> <p>A single call might return
        only a partial list of the rules. For information, see
        <code>MaxResults</code>. </p>
      operationId: ListFirewallRules
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListFirewallRules
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFirewallRulesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFirewallRulesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListResolverDnssecConfigs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the configurations for DNSSEC validation that are associated with
        the current Amazon Web Services account.
      operationId: ListResolverDnssecConfigs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverDnssecConfigs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverDnssecConfigsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverDnssecConfigsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.ListResolverEndpointIpAddresses:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets the IP addresses for a specified Resolver endpoint.
      operationId: ListResolverEndpointIpAddresses
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverEndpointIpAddresses
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverEndpointIpAddressesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverEndpointIpAddressesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListResolverEndpoints:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all the Resolver endpoints that were created using the current
        Amazon Web Services account.
      operationId: ListResolverEndpoints
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverEndpoints
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverEndpointsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverEndpointsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListResolverQueryLogConfigAssociations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists information about associations between Amazon VPCs and query
        logging configurations.
      operationId: ListResolverQueryLogConfigAssociations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverQueryLogConfigAssociations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverQueryLogConfigAssociationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverQueryLogConfigAssociationsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.ListResolverQueryLogConfigs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists information about the specified query logging configurations. Each
        configuration defines where you want Resolver to save DNS query logs and
        specifies the VPCs that you want to log queries for.
      operationId: ListResolverQueryLogConfigs
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverQueryLogConfigs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverQueryLogConfigsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverQueryLogConfigsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.ListResolverRuleAssociations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the associations that were created between Resolver rules and VPCs
        using the current Amazon Web Services account.
      operationId: ListResolverRuleAssociations
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverRuleAssociations
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverRuleAssociationsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverRuleAssociationsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListResolverRules:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the Resolver rules that were created using the current Amazon Web
        Services account.
      operationId: ListResolverRules
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListResolverRules
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResolverRulesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResolverRulesResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.ListTagsForResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Lists the tags that you associated with the specified resource.
      operationId: ListTagsForResource
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - Route53Resolver.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.PutFirewallRuleGroupPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Attaches an Identity and Access Management (Amazon Web Services IAM)
        policy for sharing the rule group. You can use the policy to share the
        rule group using Resource Access Manager (RAM). 
      operationId: PutFirewallRuleGroupPolicy
      parameters:
        - enum:
            - Route53Resolver.PutFirewallRuleGroupPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutFirewallRuleGroupPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutFirewallRuleGroupPolicyResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.PutResolverQueryLogConfigPolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Specifies an Amazon Web Services account that you want to share a query
        logging configuration with, the query logging configuration that you
        want to share, and the operations that you want the account to be able
        to perform on the configuration.
      operationId: PutResolverQueryLogConfigPolicy
      parameters:
        - enum:
            - Route53Resolver.PutResolverQueryLogConfigPolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutResolverQueryLogConfigPolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutResolverQueryLogConfigPolicyResponse'
        '480':
          description: InvalidPolicyDocument
          schema:
            $ref: '#/definitions/InvalidPolicyDocument'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnknownResourceException
          schema:
            $ref: '#/definitions/UnknownResourceException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.PutResolverRulePolicy:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Specifies an Amazon Web Services rule that you want to share with
        another account, the account that you want to share the rule with, and
        the operations that you want the account to be able to perform on the
        rule.
      operationId: PutResolverRulePolicy
      parameters:
        - enum:
            - Route53Resolver.PutResolverRulePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutResolverRulePolicyRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutResolverRulePolicyResponse'
        '480':
          description: InvalidPolicyDocument
          schema:
            $ref: '#/definitions/InvalidPolicyDocument'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: UnknownResourceException
          schema:
            $ref: '#/definitions/UnknownResourceException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  /#X-Amz-Target=Route53Resolver.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Adds one or more tags to a specified resource.
      operationId: TagResource
      parameters:
        - enum:
            - Route53Resolver.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidTagException
          schema:
            $ref: '#/definitions/InvalidTagException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Removes one or more tags from a specified resource.
      operationId: UntagResource
      parameters:
        - enum:
            - Route53Resolver.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateFirewallConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates the configuration of the firewall behavior provided by DNS
        Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon
        VPC). 
      operationId: UpdateFirewallConfig
      parameters:
        - enum:
            - Route53Resolver.UpdateFirewallConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFirewallConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFirewallConfigResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateFirewallDomains:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates the firewall domain list from an array of domain
        specifications. 
      operationId: UpdateFirewallDomains
      parameters:
        - enum:
            - Route53Resolver.UpdateFirewallDomains
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFirewallDomainsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFirewallDomainsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateFirewallRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Updates the specified firewall rule. '
      operationId: UpdateFirewallRule
      parameters:
        - enum:
            - Route53Resolver.UpdateFirewallRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFirewallRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFirewallRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateFirewallRuleGroupAssociation:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Changes the association of a <a>FirewallRuleGroup</a> with a VPC. The
        association enables DNS filtering for the VPC. 
      operationId: UpdateFirewallRuleGroupAssociation
      parameters:
        - enum:
            - Route53Resolver.UpdateFirewallRuleGroupAssociation
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFirewallRuleGroupAssociationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFirewallRuleGroupAssociationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateResolverDnssecConfig:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates an existing DNSSEC validation configuration. If there is no
        existing DNSSEC validation configuration, one is created.
      operationId: UpdateResolverDnssecConfig
      parameters:
        - enum:
            - Route53Resolver.UpdateResolverDnssecConfig
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResolverDnssecConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResolverDnssecConfigResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /#X-Amz-Target=Route53Resolver.UpdateResolverEndpoint:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Updates the name of an inbound or an outbound Resolver endpoint. '
      operationId: UpdateResolverEndpoint
      parameters:
        - enum:
            - Route53Resolver.UpdateResolverEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResolverEndpointRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResolverEndpointResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /#X-Amz-Target=Route53Resolver.UpdateResolverRule:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates settings for a specified Resolver rule.
        <code>ResolverRuleId</code> is required, and all other parameters are
        optional. If you don't specify a parameter, it retains its current
        value.
      operationId: UpdateResolverRule
      parameters:
        - enum:
            - Route53Resolver.UpdateResolverRule
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResolverRuleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResolverRuleResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

