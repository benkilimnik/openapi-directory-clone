basePath: /
definitions:
  AccessDeniedException: {}
  AddProfileKeyRequest:
    properties:
      KeyName:
        allOf:
          - $ref: '#/definitions/name'
          - description: A searchable identifier of a customer profile.
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
      Values:
        allOf:
          - $ref: '#/definitions/requestValueList'
          - description: A list of key values.
    required:
      - ProfileId
      - KeyName
      - Values
    title: AddProfileKeyRequest
    type: object
  AddProfileKeyResponse:
    properties:
      KeyName:
        allOf:
          - $ref: '#/definitions/name'
          - description: A searchable identifier of a customer profile.
      Values:
        allOf:
          - $ref: '#/definitions/requestValueList'
          - description: A list of key values.
    type: object
  Address:
    description: >-
      A generic address associated with the customer that is not mailing,
      shipping, or billing.
    properties:
      Address1:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The first line of a customer address.
      Address2:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The second line of a customer address.
      Address3:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The third line of a customer address.
      Address4:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The fourth line of a customer address.
      City:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The city in which a customer lives.
      Country:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The country in which a customer lives.
      County:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The county in which a customer lives.
      PostalCode:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The postal code of a customer address.
      Province:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The province in which a customer lives.
      State:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The state in which a customer lives.
    type: object
  AttributeSourceIdMap:
    additionalProperties:
      $ref: '#/definitions/uuid'
    type: object
  Attributes:
    additionalProperties:
      $ref: '#/definitions/string1To255'
    type: object
  BadRequestException: {}
  BucketName:
    maxLength: 63
    minLength: 3
    pattern: \S+
    type: string
  BucketPrefix:
    maxLength: 512
    pattern: .*
    type: string
  ConnectorOperator:
    description: The operation to be performed on the provided source fields.
    properties:
      Marketo:
        allOf:
          - $ref: '#/definitions/MarketoConnectorOperator'
          - description: >-
              The operation to be performed on the provided Marketo source
              fields.
      S3:
        allOf:
          - $ref: '#/definitions/S3ConnectorOperator'
          - description: >-
              The operation to be performed on the provided Amazon S3 source
              fields.
      Salesforce:
        allOf:
          - $ref: '#/definitions/SalesforceConnectorOperator'
          - description: >-
              The operation to be performed on the provided Salesforce source
              fields.
      ServiceNow:
        allOf:
          - $ref: '#/definitions/ServiceNowConnectorOperator'
          - description: >-
              The operation to be performed on the provided ServiceNow source
              fields.
      Zendesk:
        allOf:
          - $ref: '#/definitions/ZendeskConnectorOperator'
          - description: >-
              The operation to be performed on the provided Zendesk source
              fields.
    type: object
  ConnectorProfileName:
    maxLength: 256
    pattern: '[\w/!@#+=.-]+'
    type: string
  CreateDomainRequest:
    properties:
      DeadLetterQueueUrl:
        allOf:
          - $ref: '#/definitions/sqsQueueUrl'
          - description: >-
              The URL of the SQS dead letter queue, which is used for reporting
              errors associated with ingesting data from third party
              applications. You must set up a policy on the DeadLetterQueue for
              the SendMessage operation to enable Amazon Connect Customer
              Profiles to send messages to the DeadLetterQueue.
      DefaultEncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The default encryption key, which is an AWS managed key, is used
              when no specific type of encryption key is specified. It is used
              to encrypt all data before it is placed in permanent or
              semi-permanent storage.
      DefaultExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: >-
              The default number of days until the data within the domain
              expires.
      Matching:
        allOf:
          - $ref: '#/definitions/MatchingRequest'
          - description: >-
              The process of matching duplicate profiles. If Matching = true,
              Amazon Connect Customer Profiles starts a weekly batch process
              every Saturday at 12AM UTC to detect duplicate profiles in your
              domains. After that batch process completes, use the <a
              href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>
              API to return and review the results. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - DefaultExpirationDays
    title: CreateDomainRequest
    type: object
  CreateDomainResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DeadLetterQueueUrl:
        allOf:
          - $ref: '#/definitions/sqsQueueUrl'
          - description: >-
              The URL of the SQS dead letter queue, which is used for reporting
              errors associated with ingesting data from third party
              applications.
      DefaultEncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The default encryption key, which is an AWS managed key, is used
              when no specific type of encryption key is specified. It is used
              to encrypt all data before it is placed in permanent or
              semi-permanent storage.
      DefaultExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: >-
              The default number of days until the data within the domain
              expires.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      Matching:
        allOf:
          - $ref: '#/definitions/MatchingResponse'
          - description: >-
              The process of matching duplicate profiles. If Matching = true,
              Amazon Connect Customer Profiles starts a weekly batch process
              every Saturday at 12AM UTC to detect duplicate profiles in your
              domains. After that batch process completes, use the <a
              href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>
              API to return and review the results. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - DomainName
      - DefaultExpirationDays
      - CreatedAt
      - LastUpdatedAt
    type: object
  CreateProfileRequest:
    properties:
      AccountNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: A unique account number that you have given to the customer.
      AdditionalInformation:
        allOf:
          - $ref: '#/definitions/string1To1000'
          - description: Any additional information relevant to the customer’s profile.
      Address:
        allOf:
          - $ref: '#/definitions/Address'
          - description: >-
              A generic address associated with the customer that is not
              mailing, shipping, or billing.
      Attributes:
        allOf:
          - $ref: '#/definitions/Attributes'
          - description: A key value pair of attributes of a customer profile.
      BillingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s billing address.
      BirthDate:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: 'The customer’s birth date. '
      BusinessEmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s business email address.
      BusinessName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The name of the customer’s business.
      BusinessPhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s business phone number.
      EmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The customer’s email address, which has not been specified as a
              personal or business address. 
      FirstName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s first name.
      Gender:
        allOf:
          - $ref: '#/definitions/Gender'
          - description: 'The gender with which the customer identifies. '
      HomePhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s home phone number.
      LastName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s last name.
      MailingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s mailing address.
      MiddleName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s middle name.
      MobilePhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s mobile phone number.
      PartyType:
        allOf:
          - $ref: '#/definitions/PartyType'
          - description: The type of profile used to describe the customer.
      PersonalEmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s personal email address.
      PhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The customer’s phone number, which has not been specified as a
              mobile, home, or business number. 
      ShippingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s shipping address.
    title: CreateProfileRequest
    type: object
  CreateProfileResponse:
    properties:
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
    required:
      - ProfileId
    type: object
  DataPullMode:
    enum:
      - Incremental
      - Complete
    type: string
  Date:
    format: date-time
    type: string
  DatetimeTypeFieldName:
    maxLength: 256
    pattern: .*
    type: string
  DeleteDomainRequest:
    properties: {}
    title: DeleteDomainRequest
    type: object
  DeleteDomainResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    required:
      - Message
    type: object
  DeleteIntegrationRequest:
    properties:
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - Uri
    title: DeleteIntegrationRequest
    type: object
  DeleteIntegrationResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    required:
      - Message
    type: object
  DeleteProfileKeyRequest:
    properties:
      KeyName:
        allOf:
          - $ref: '#/definitions/name'
          - description: A searchable identifier of a customer profile.
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
      Values:
        allOf:
          - $ref: '#/definitions/requestValueList'
          - description: A list of key values.
    required:
      - ProfileId
      - KeyName
      - Values
    title: DeleteProfileKeyRequest
    type: object
  DeleteProfileKeyResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    type: object
  DeleteProfileObjectRequest:
    properties:
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
      ProfileObjectUniqueKey:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The unique identifier of the profile object generated by the
              service.
    required:
      - ProfileId
      - ProfileObjectUniqueKey
      - ObjectTypeName
    title: DeleteProfileObjectRequest
    type: object
  DeleteProfileObjectResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    type: object
  DeleteProfileObjectTypeRequest:
    properties: {}
    title: DeleteProfileObjectTypeRequest
    type: object
  DeleteProfileObjectTypeResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    required:
      - Message
    type: object
  DeleteProfileRequest:
    properties:
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
    required:
      - ProfileId
    title: DeleteProfileRequest
    type: object
  DeleteProfileResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the delete request is done.
    type: object
  DestinationField:
    maxLength: 256
    pattern: .*
    type: string
  DomainList:
    items:
      $ref: '#/definitions/ListDomainItem'
    type: array
  DomainStats:
    description: Usage-specific statistics about the domain.
    properties:
      MeteringProfileCount:
        allOf:
          - $ref: '#/definitions/long'
          - description: >-
              The number of profiles that you are currently paying for in the
              domain. If you have more than 100 objects associated with a single
              profile, that profile counts as two profiles. If you have more
              than 200 objects, that profile counts as three, and so on.
      ObjectCount:
        allOf:
          - $ref: '#/definitions/long'
          - description: The total number of objects in domain.
      ProfileCount:
        allOf:
          - $ref: '#/definitions/long'
          - description: The total number of profiles currently in the domain.
      TotalSize:
        allOf:
          - $ref: '#/definitions/long'
          - description: 'The total size, in bytes, of all objects in the domain.'
    type: object
  FieldContentType:
    enum:
      - STRING
      - NUMBER
      - PHONE_NUMBER
      - EMAIL_ADDRESS
      - NAME
    type: string
  FieldMap:
    additionalProperties:
      $ref: '#/definitions/ObjectTypeField'
    type: object
  FieldNameList:
    items:
      $ref: '#/definitions/name'
    type: array
  FieldSourceProfileIds:
    description: 'A duplicate customer profile that is to be merged into a main profile. '
    properties:
      AccountNumber:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: 'A unique identifier for the account number field to be merged. '
      AdditionalInformation:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: >-
              A unique identifier for the additional information field to be
              merged.
      Address:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the party type field to be merged.
      Attributes:
        allOf:
          - $ref: '#/definitions/AttributeSourceIdMap'
          - description: A unique identifier for the attributes field to be merged.
      BillingAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the billing type field to be merged.
      BirthDate:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the birthdate field to be merged.
      BusinessEmailAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the party type field to be merged.
      BusinessName:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the business name field to be merged.
      BusinessPhoneNumber:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: >-
              A unique identifier for the business phone number field to be
              merged.
      EmailAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the email address field to be merged.
      FirstName:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the first name field to be merged.
      Gender:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the gender field to be merged.
      HomePhoneNumber:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the home phone number field to be merged.
      LastName:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the last name field to be merged.
      MailingAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the mailing address field to be merged.
      MiddleName:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the middle name field to be merged.
      MobilePhoneNumber:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: >-
              A unique identifier for the mobile phone number field to be
              merged.
      PartyType:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the party type field to be merged.
      PersonalEmailAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: >-
              A unique identifier for the personal email address field to be
              merged.
      PhoneNumber:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the phone number field to be merged.
      ShippingAddress:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: A unique identifier for the shipping address field to be merged.
    type: object
  FlowDefinition:
    description: >-
      The configurations that control how Customer Profiles retrieves data from
      the source, Amazon AppFlow. Customer Profiles uses this information to
      create an AppFlow flow on behalf of customers.
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/FlowDescription'
          - description: A description of the flow you want to create.
      FlowName:
        allOf:
          - $ref: '#/definitions/FlowName'
          - description: >-
              The specified name of the flow. Use underscores (_) or hyphens (-)
              only. Spaces are not allowed.
      KmsArn:
        allOf:
          - $ref: '#/definitions/KmsArn'
          - description: >-
              The Amazon Resource Name of the AWS Key Management Service (KMS)
              key you provide for encryption.
      SourceFlowConfig:
        allOf:
          - $ref: '#/definitions/SourceFlowConfig'
          - description: >-
              The configuration that controls how Customer Profiles retrieves
              data from the source.
      Tasks:
        allOf:
          - $ref: '#/definitions/Tasks'
          - description: >-
              A list of tasks that Customer Profiles performs while transferring
              the data in the flow run.
      TriggerConfig:
        allOf:
          - $ref: '#/definitions/TriggerConfig'
          - description: The trigger settings that determine how and when the flow runs.
    required:
      - FlowName
      - KmsArn
      - SourceFlowConfig
      - Tasks
      - TriggerConfig
    type: object
  FlowDescription:
    maxLength: 2048
    pattern: '[\w!@#\-.?,\s]*'
    type: string
  FlowName:
    maxLength: 256
    pattern: '[a-zA-Z0-9][\w!@#.-]+'
    type: string
  Gender:
    enum:
      - MALE
      - FEMALE
      - UNSPECIFIED
    type: string
  GetDomainRequest:
    properties: {}
    title: GetDomainRequest
    type: object
  GetDomainResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DeadLetterQueueUrl:
        allOf:
          - $ref: '#/definitions/sqsQueueUrl'
          - description: >-
              The URL of the SQS dead letter queue, which is used for reporting
              errors associated with ingesting data from third party
              applications.
      DefaultEncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The default encryption key, which is an AWS managed key, is used
              when no specific type of encryption key is specified. It is used
              to encrypt all data before it is placed in permanent or
              semi-permanent storage.
      DefaultExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: >-
              The default number of days until the data within the domain
              expires.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      Matching:
        allOf:
          - $ref: '#/definitions/MatchingResponse'
          - description: >-
              The process of matching duplicate profiles. If Matching = true,
              Amazon Connect Customer Profiles starts a weekly batch process
              every Saturday at 12AM UTC to detect duplicate profiles in your
              domains. After that batch process completes, use the <a
              href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>
              API to return and review the results. 
      Stats:
        allOf:
          - $ref: '#/definitions/DomainStats'
          - description: Usage-specific statistics about the domain.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - DomainName
      - CreatedAt
      - LastUpdatedAt
    type: object
  GetIntegrationRequest:
    properties:
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - Uri
    title: GetIntegrationRequest
    type: object
  GetIntegrationResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - DomainName
      - Uri
      - ObjectTypeName
      - CreatedAt
      - LastUpdatedAt
    type: object
  GetMatchesRequest:
    properties: {}
    title: GetMatchesRequest
    type: object
  GetMatchesResponse:
    properties:
      MatchGenerationDate:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp this version of Match Result generated.
      Matches:
        allOf:
          - $ref: '#/definitions/MatchesList'
          - description: The list of matched profiles for this instance.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: >-
              If there are additional results, this is the token for the next
              set of results.
      PotentialMatches:
        allOf:
          - $ref: '#/definitions/matchesNumber'
          - description: The number of potential matches found.
    type: object
  GetProfileObjectTypeRequest:
    properties: {}
    title: GetProfileObjectTypeRequest
    type: object
  GetProfileObjectTypeResponse:
    properties:
      AllowProfileCreation:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether a profile should be created when data is
              received if one doesn’t exist for an object of this type. The
              default is <code>FALSE</code>. If the AllowProfileCreation flag is
              set to <code>FALSE</code>, then the service tries to fetch a
              standard profile and associate this object with the profile. If it
              is set to <code>TRUE</code>, and if no match is found, then the
              service creates a new standard profile.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      Description:
        allOf:
          - $ref: '#/definitions/text'
          - description: The description of the profile object type.
      EncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The customer-provided key to encrypt the profile object that will
              be created in this profile object type.
      ExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
      Fields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A map of the name and ObjectType field.
      Keys:
        allOf:
          - $ref: '#/definitions/KeyMap'
          - description: A list of unique keys that can be used to map data to the profile.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      TemplateId:
        allOf:
          - $ref: '#/definitions/name'
          - description: A unique identifier for the object template.
    required:
      - ObjectTypeName
      - Description
    type: object
  GetProfileObjectTypeTemplateRequest:
    properties: {}
    title: GetProfileObjectTypeTemplateRequest
    type: object
  GetProfileObjectTypeTemplateResponse:
    properties:
      AllowProfileCreation:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether a profile should be created when data is
              received if one doesn’t exist for an object of this type. The
              default is <code>FALSE</code>. If the AllowProfileCreation flag is
              set to <code>FALSE</code>, then the service tries to fetch a
              standard profile and associate this object with the profile. If it
              is set to <code>TRUE</code>, and if no match is found, then the
              service creates a new standard profile.
      Fields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A map of the name and ObjectType field.
      Keys:
        allOf:
          - $ref: '#/definitions/KeyMap'
          - description: A list of unique keys that can be used to map data to the profile.
      SourceName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The name of the source of the object template.
      SourceObject:
        allOf:
          - $ref: '#/definitions/name'
          - description: The source of the object template.
      TemplateId:
        allOf:
          - $ref: '#/definitions/name'
          - description: A unique identifier for the object template.
    type: object
  IncrementalPullConfig:
    description: >-
      Specifies the configuration used when importing incremental records from
      the source.
    properties:
      DatetimeTypeFieldName:
        allOf:
          - $ref: '#/definitions/DatetimeTypeFieldName'
          - description: >-
              A field that specifies the date time or timestamp field as the
              criteria to use when importing incremental records from the
              source.
    type: object
  IntegrationList:
    items:
      $ref: '#/definitions/ListIntegrationItem'
    type: array
  InternalServerException: {}
  KeyMap:
    additionalProperties:
      $ref: '#/definitions/ObjectTypeKeyList'
    type: object
  KmsArn:
    maxLength: 2048
    minLength: 20
    pattern: 'arn:aws:kms:.*:[0-9]+:.*'
    type: string
  ListAccountIntegrationsRequest:
    properties:
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - Uri
    title: ListAccountIntegrationsRequest
    type: object
  ListAccountIntegrationsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/IntegrationList'
          - description: The list of ListAccountIntegration instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: >-
              The pagination token from the previous ListAccountIntegrations API
              call.
    type: object
  ListDomainItem:
    description: An object in a list that represents a domain.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - DomainName
      - CreatedAt
      - LastUpdatedAt
    type: object
  ListDomainsRequest:
    properties: {}
    title: ListDomainsRequest
    type: object
  ListDomainsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/DomainList'
          - description: The list of ListDomains instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: The pagination token from the previous ListDomains API call.
    type: object
  ListIntegrationItem:
    description: An integration in list of integrations.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - DomainName
      - Uri
      - ObjectTypeName
      - CreatedAt
      - LastUpdatedAt
    type: object
  ListIntegrationsRequest:
    properties: {}
    title: ListIntegrationsRequest
    type: object
  ListIntegrationsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/IntegrationList'
          - description: The list of ListIntegrations instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: The pagination token from the previous ListIntegrations API call.
    type: object
  ListProfileObjectTypeItem:
    description: A ProfileObjectType instance.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      Description:
        allOf:
          - $ref: '#/definitions/text'
          - description: Description of the profile object type.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - ObjectTypeName
      - Description
    type: object
  ListProfileObjectTypeTemplateItem:
    description: A ProfileObjectTypeTemplate in a list of ProfileObjectTypeTemplates.
    properties:
      SourceName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The name of the source of the object template.
      SourceObject:
        allOf:
          - $ref: '#/definitions/name'
          - description: The source of the object template.
      TemplateId:
        allOf:
          - $ref: '#/definitions/name'
          - description: A unique identifier for the object template.
    type: object
  ListProfileObjectTypeTemplatesRequest:
    properties: {}
    title: ListProfileObjectTypeTemplatesRequest
    type: object
  ListProfileObjectTypeTemplatesResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/ProfileObjectTypeTemplateList'
          - description: The list of ListProfileObjectType template instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: >-
              The pagination token from the previous ListObjectTypeTemplates API
              call. 
    type: object
  ListProfileObjectTypesRequest:
    properties: {}
    title: ListProfileObjectTypesRequest
    type: object
  ListProfileObjectTypesResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/ProfileObjectTypeList'
          - description: The list of ListProfileObjectTypes instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: Identifies the next page of results to return.
    type: object
  ListProfileObjectsItem:
    description: A ProfileObject in a list of ProfileObjects.
    properties:
      Object:
        allOf:
          - $ref: '#/definitions/stringifiedJson'
          - description: >-
              A JSON representation of a ProfileObject that belongs to a
              profile.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: >-
              Specifies the kind of object being added to a profile, such as
              "Salesforce-Account."
      ProfileObjectUniqueKey:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The unique identifier of the ProfileObject generated by the
              service.
    type: object
  ListProfileObjectsRequest:
    properties:
      ObjectFilter:
        allOf:
          - $ref: '#/definitions/ObjectFilter'
          - description: >-
              Applies a filter to the response to include profile objects with
              the specified index values. This filter is only supported for
              ObjectTypeName _asset and _case.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
    required:
      - ObjectTypeName
      - ProfileId
    title: ListProfileObjectsRequest
    type: object
  ListProfileObjectsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/ProfileObjectList'
          - description: The list of ListProfileObject instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: The pagination token from the previous call to ListProfileObjects.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    type: object
  MarketoConnectorOperator:
    enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
    type: string
  MarketoSourceProperties:
    description: The properties that are applied when Marketo is being used as a source.
    properties:
      Object:
        allOf:
          - $ref: '#/definitions/Object'
          - description: The object specified in the Marketo flow source.
    required:
      - Object
    type: object
  MatchItem:
    description: The Match group object.
    properties:
      MatchId:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The unique identifiers for this group of profiles that match.
      ProfileIds:
        allOf:
          - $ref: '#/definitions/ProfileIdList'
          - description: A list of identifiers for profiles that match.
    type: object
  MatchesList:
    items:
      $ref: '#/definitions/MatchItem'
    type: array
  MatchingRequest:
    description: The flag that enables the matching process of duplicate profiles.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/optionalBoolean'
          - description: The flag that enables the matching process of duplicate profiles.
    required:
      - Enabled
    type: object
  MatchingResponse:
    description: The flag that enables the matching process of duplicate profiles.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/optionalBoolean'
          - description: The flag that enables the matching process of duplicate profiles.
    type: object
  MergeProfilesRequest:
    properties:
      FieldSourceProfileIds:
        allOf:
          - $ref: '#/definitions/FieldSourceProfileIds'
          - description: >-
              The identifiers of the fields in the profile that has the
              information you want to apply to the merge. For example, say you
              want to merge EmailAddress from Profile1 into MainProfile. This
              would be the identifier of the EmailAddress field in Profile1. 
      MainProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The identifier of the profile to be taken.
      ProfileIdsToBeMerged:
        allOf:
          - $ref: '#/definitions/ProfileIdToBeMergedList'
          - description: The identifier of the profile to be merged into MainProfileId.
    required:
      - MainProfileId
      - ProfileIdsToBeMerged
    title: MergeProfilesRequest
    type: object
  MergeProfilesResponse:
    properties:
      Message:
        allOf:
          - $ref: '#/definitions/message'
          - description: A message that indicates the merge request is complete.
    type: object
  Object:
    maxLength: 512
    pattern: \S+
    type: string
  ObjectFilter:
    description: >-
      The filter applied to ListProfileObjects response to include profile
      objects with the specified index values. This filter is only supported for
      ObjectTypeName _asset and _case.
    properties:
      KeyName:
        allOf:
          - $ref: '#/definitions/name'
          - description: >-
              A searchable identifier of a standard profile object. The
              predefined keys you can use to search for _asset include:
              _assetId, _assetName, _serialNumber. The predefined keys you can
              use to search for _case include: _caseId.
      Values:
        allOf:
          - $ref: '#/definitions/requestValueList'
          - description: A list of key values.
    required:
      - KeyName
      - Values
    type: object
  ObjectTypeField:
    description: Represents a field in a ProfileObjectType.
    properties:
      ContentType:
        allOf:
          - $ref: '#/definitions/FieldContentType'
          - description: >-
              The content type of the field. Used for determining equality when
              searching.
      Source:
        allOf:
          - $ref: '#/definitions/text'
          - description: >-
              A field of a ProfileObject. For example: _source.FirstName, where
              “_source” is a ProfileObjectType of a Zendesk user and “FirstName”
              is a field in that ObjectType.
      Target:
        allOf:
          - $ref: '#/definitions/text'
          - description: >-
              The location of the data in the standard ProfileObject model. For
              example: _profile.Address.PostalCode.
    type: object
  ObjectTypeKey:
    description: >-
      An object that defines the Key element of a ProfileObject. A Key is a
      special element that can be used to search for a customer profile.
    properties:
      FieldNames:
        allOf:
          - $ref: '#/definitions/FieldNameList'
          - description: The reference for the key name of the fields map.
      StandardIdentifiers:
        allOf:
          - $ref: '#/definitions/StandardIdentifierList'
          - description: >-
              The types of keys that a ProfileObject can have. Each
              ProfileObject can have only 1 UNIQUE key but multiple PROFILE
              keys. PROFILE, ASSET or CASE means that this key can be used to
              tie an object to a PROFILE, ASSET or CASE respectively. UNIQUE
              means that it can be used to uniquely identify an object. If a key
              a is marked as SECONDARY, it will be used to search for profiles
              after all other PROFILE keys have been searched. A LOOKUP_ONLY key
              is only used to match a profile but is not persisted to be used
              for searching of the profile. A NEW_ONLY key is only used if the
              profile does not already exist before the object is ingested,
              otherwise it is only used for matching objects to profiles.
    type: object
  ObjectTypeKeyList:
    items:
      $ref: '#/definitions/ObjectTypeKey'
    type: array
  OperatorPropertiesKeys:
    enum:
      - VALUE
      - VALUES
      - DATA_TYPE
      - UPPER_BOUND
      - LOWER_BOUND
      - SOURCE_DATA_TYPE
      - DESTINATION_DATA_TYPE
      - VALIDATION_ACTION
      - MASK_VALUE
      - MASK_LENGTH
      - TRUNCATE_LENGTH
      - MATH_OPERATION_FIELDS_ORDER
      - CONCAT_FORMAT
      - SUBFIELD_CATEGORY_MAP
    type: string
  PartyType:
    enum:
      - INDIVIDUAL
      - BUSINESS
      - OTHER
    type: string
  Profile:
    description: The standard profile of a customer.
    properties:
      AccountNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: A unique account number that you have given to the customer.
      AdditionalInformation:
        allOf:
          - $ref: '#/definitions/string1To1000'
          - description: Any additional information relevant to the customer’s profile.
      Address:
        allOf:
          - $ref: '#/definitions/Address'
          - description: >-
              A generic address associated with the customer that is not
              mailing, shipping, or billing.
      Attributes:
        allOf:
          - $ref: '#/definitions/Attributes'
          - description: A key value pair of attributes of a customer profile.
      BillingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s billing address.
      BirthDate:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: 'The customer’s birth date. '
      BusinessEmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s business email address.
      BusinessName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The name of the customer’s business.
      BusinessPhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s home phone number.
      EmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The customer’s email address, which has not been specified as a
              personal or business address. 
      FirstName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s first name.
      Gender:
        allOf:
          - $ref: '#/definitions/Gender'
          - description: 'The gender with which the customer identifies. '
      HomePhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s home phone number.
      LastName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s last name.
      MailingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s mailing address.
      MiddleName:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s middle name.
      MobilePhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s mobile phone number.
      PartyType:
        allOf:
          - $ref: '#/definitions/PartyType'
          - description: The type of profile used to describe the customer.
      PersonalEmailAddress:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The customer’s personal email address.
      PhoneNumber:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The customer's phone number, which has not been specified as a
              mobile, home, or business number.
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
      ShippingAddress:
        allOf:
          - $ref: '#/definitions/Address'
          - description: The customer’s shipping address.
    type: object
  ProfileIdList:
    items:
      $ref: '#/definitions/uuid'
    type: array
  ProfileIdToBeMergedList:
    items:
      $ref: '#/definitions/uuid'
    maxItems: 20
    minItems: 1
    type: array
  ProfileList:
    items:
      $ref: '#/definitions/Profile'
    type: array
  ProfileObjectList:
    items:
      $ref: '#/definitions/ListProfileObjectsItem'
    type: array
  ProfileObjectTypeList:
    items:
      $ref: '#/definitions/ListProfileObjectTypeItem'
    type: array
  ProfileObjectTypeTemplateList:
    items:
      $ref: '#/definitions/ListProfileObjectTypeTemplateItem'
    type: array
  Property:
    maxLength: 2048
    pattern: .+
    type: string
  PutIntegrationRequest:
    properties:
      FlowDefinition:
        allOf:
          - $ref: '#/definitions/FlowDefinition'
          - description: >-
              The configuration that controls how Customer Profiles retrieves
              data from the source.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - ObjectTypeName
    title: PutIntegrationRequest
    type: object
  PutIntegrationResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      Uri:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
    required:
      - DomainName
      - Uri
      - ObjectTypeName
      - CreatedAt
      - LastUpdatedAt
    type: object
  PutProfileObjectRequest:
    properties:
      Object:
        allOf:
          - $ref: '#/definitions/stringifiedJson'
          - description: A string that is serialized from a JSON object.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
    required:
      - ObjectTypeName
      - Object
    title: PutProfileObjectRequest
    type: object
  PutProfileObjectResponse:
    properties:
      ProfileObjectUniqueKey:
        allOf:
          - $ref: '#/definitions/string1To255'
          - description: >-
              The unique identifier of the profile object generated by the
              service.
    type: object
  PutProfileObjectTypeRequest:
    properties:
      AllowProfileCreation:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether a profile should be created when data is
              received if one doesn’t exist for an object of this type. The
              default is <code>FALSE</code>. If the AllowProfileCreation flag is
              set to <code>FALSE</code>, then the service tries to fetch a
              standard profile and associate this object with the profile. If it
              is set to <code>TRUE</code>, and if no match is found, then the
              service creates a new standard profile.
      Description:
        allOf:
          - $ref: '#/definitions/text'
          - description: Description of the profile object type.
      EncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The customer-provided key to encrypt the profile object that will
              be created in this profile object type.
      ExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
      Fields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A map of the name and ObjectType field.
      Keys:
        allOf:
          - $ref: '#/definitions/KeyMap'
          - description: A list of unique keys that can be used to map data to the profile.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      TemplateId:
        allOf:
          - $ref: '#/definitions/name'
          - description: A unique identifier for the object template.
    required:
      - Description
    title: PutProfileObjectTypeRequest
    type: object
  PutProfileObjectTypeResponse:
    properties:
      AllowProfileCreation:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether a profile should be created when data is
              received if one doesn’t exist for an object of this type. The
              default is <code>FALSE</code>. If the AllowProfileCreation flag is
              set to <code>FALSE</code>, then the service tries to fetch a
              standard profile and associate this object with the profile. If it
              is set to <code>TRUE</code>, and if no match is found, then the
              service creates a new standard profile.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      Description:
        allOf:
          - $ref: '#/definitions/text'
          - description: Description of the profile object type.
      EncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The customer-provided key to encrypt the profile object that will
              be created in this profile object type.
      ExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
      Fields:
        allOf:
          - $ref: '#/definitions/FieldMap'
          - description: A map of the name and ObjectType field.
      Keys:
        allOf:
          - $ref: '#/definitions/KeyMap'
          - description: A list of unique keys that can be used to map data to the profile.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      ObjectTypeName:
        allOf:
          - $ref: '#/definitions/typeName'
          - description: The name of the profile object type.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
      TemplateId:
        allOf:
          - $ref: '#/definitions/name'
          - description: A unique identifier for the object template.
    required:
      - ObjectTypeName
      - Description
    type: object
  ResourceNotFoundException: {}
  S3ConnectorOperator:
    enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
    type: string
  S3SourceProperties:
    description: >-
      The properties that are applied when Amazon S3 is being used as the flow
      source.
    properties:
      BucketName:
        allOf:
          - $ref: '#/definitions/BucketName'
          - description: The Amazon S3 bucket name where the source files are stored.
      BucketPrefix:
        allOf:
          - $ref: '#/definitions/BucketPrefix'
          - description: >-
              The object key for the Amazon S3 bucket in which the source files
              are stored.
    required:
      - BucketName
    type: object
  SalesforceConnectorOperator:
    enum:
      - PROJECTION
      - LESS_THAN
      - CONTAINS
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
    type: string
  SalesforceSourceProperties:
    description: The properties that are applied when Salesforce is being used as a source.
    properties:
      EnableDynamicFieldUpdate:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              The flag that enables dynamic fetching of new (recently added)
              fields in the Salesforce objects while running a flow.
      IncludeDeletedRecords:
        allOf:
          - $ref: '#/definitions/boolean'
          - description: >-
              Indicates whether Amazon AppFlow includes deleted files in the
              flow run.
      Object:
        allOf:
          - $ref: '#/definitions/Object'
          - description: The object specified in the Salesforce flow source.
    required:
      - Object
    type: object
  ScheduleExpression:
    maxLength: 256
    pattern: .*
    type: string
  ScheduleOffset:
    maximum: 36000
    minimum: 0
    type: integer
  ScheduledTriggerProperties:
    description: >-
      Specifies the configuration details of a scheduled-trigger flow that you
      define. Currently, these settings only apply to the scheduled-trigger
      type.
    properties:
      DataPullMode:
        allOf:
          - $ref: '#/definitions/DataPullMode'
          - description: >-
              Specifies whether a scheduled flow has an incremental data
              transfer or a complete data transfer for each flow run.
      FirstExecutionFrom:
        allOf:
          - $ref: '#/definitions/Date'
          - description: >-
              Specifies the date range for the records to import from the
              connector in the first flow run.
      ScheduleEndTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: Specifies the scheduled end time for a scheduled-trigger flow.
      ScheduleExpression:
        allOf:
          - $ref: '#/definitions/ScheduleExpression'
          - description: >-
              The scheduling expression that determines the rate at which the
              schedule will run, for example rate (5 minutes).
      ScheduleOffset:
        allOf:
          - $ref: '#/definitions/ScheduleOffset'
          - description: >-
              Specifies the optional offset that is added to the time interval
              for a schedule-triggered flow.
      ScheduleStartTime:
        allOf:
          - $ref: '#/definitions/Date'
          - description: Specifies the scheduled start time for a scheduled-trigger flow.
      Timezone:
        allOf:
          - $ref: '#/definitions/Timezone'
          - description: >-
              Specifies the time zone used when referring to the date and time
              of a scheduled-triggered flow, such as America/New_York.
    required:
      - ScheduleExpression
    type: object
  SearchProfilesRequest:
    properties:
      KeyName:
        allOf:
          - $ref: '#/definitions/name'
          - description: >-
              A searchable identifier of a customer profile. The predefined keys
              you can use to search include: _account, _profileId, _fullName,
              _phone, _email, _ctrContactId, _marketoLeadId,
              _salesforceAccountId, _salesforceContactId, _zendeskUserId,
              _zendeskExternalId, _serviceNowSystemId.
      Values:
        allOf:
          - $ref: '#/definitions/requestValueList'
          - description: A list of key values.
    required:
      - KeyName
      - Values
    title: SearchProfilesRequest
    type: object
  SearchProfilesResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/ProfileList'
          - description: The list of SearchProfiles instances.
      NextToken:
        allOf:
          - $ref: '#/definitions/token'
          - description: The pagination token from the previous SearchProfiles API call.
    type: object
  ServiceNowConnectorOperator:
    enum:
      - PROJECTION
      - CONTAINS
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
    type: string
  ServiceNowSourceProperties:
    description: The properties that are applied when ServiceNow is being used as a source.
    properties:
      Object:
        allOf:
          - $ref: '#/definitions/Object'
          - description: The object specified in the ServiceNow flow source.
    required:
      - Object
    type: object
  SourceConnectorProperties:
    description: >-
      Specifies the information that is required to query a particular Amazon
      AppFlow connector. Customer Profiles supports Salesforce, Zendesk,
      Marketo, ServiceNow and Amazon S3.
    properties:
      Marketo:
        allOf:
          - $ref: '#/definitions/MarketoSourceProperties'
          - description: >-
              The properties that are applied when Marketo is being used as a
              source.
      S3:
        allOf:
          - $ref: '#/definitions/S3SourceProperties'
          - description: >-
              The properties that are applied when Amazon S3 is being used as
              the flow source.
      Salesforce:
        allOf:
          - $ref: '#/definitions/SalesforceSourceProperties'
          - description: >-
              The properties that are applied when Salesforce is being used as a
              source.
      ServiceNow:
        allOf:
          - $ref: '#/definitions/ServiceNowSourceProperties'
          - description: >-
              The properties that are applied when ServiceNow is being used as a
              source.
      Zendesk:
        allOf:
          - $ref: '#/definitions/ZendeskSourceProperties'
          - description: >-
              The properties that are applied when using Zendesk as a flow
              source.
    type: object
  SourceConnectorType:
    enum:
      - Salesforce
      - Marketo
      - Zendesk
      - Servicenow
      - S3
    type: string
  SourceFields:
    items:
      $ref: '#/definitions/stringTo2048'
    type: array
  SourceFlowConfig:
    description: >-
      Contains information about the configuration of the source connector used
      in the flow.
    properties:
      ConnectorProfileName:
        allOf:
          - $ref: '#/definitions/ConnectorProfileName'
          - description: >-
              The name of the AppFlow connector profile. This name must be
              unique for each connector profile in the AWS account.
      ConnectorType:
        allOf:
          - $ref: '#/definitions/SourceConnectorType'
          - description: 'The type of connector, such as Salesforce, Marketo, and so on.'
      IncrementalPullConfig:
        allOf:
          - $ref: '#/definitions/IncrementalPullConfig'
          - description: >-
              Defines the configuration for a scheduled incremental data pull.
              If a valid configuration is provided, the fields specified in the
              configuration are used when querying for the incremental data
              pull.
      SourceConnectorProperties:
        allOf:
          - $ref: '#/definitions/SourceConnectorProperties'
          - description: >-
              Specifies the information that is required to query a particular
              source connector.
    required:
      - ConnectorType
      - SourceConnectorProperties
    type: object
  StandardIdentifier:
    enum:
      - PROFILE
      - ASSET
      - CASE
      - UNIQUE
      - SECONDARY
      - LOOKUP_ONLY
      - NEW_ONLY
    type: string
  StandardIdentifierList:
    items:
      $ref: '#/definitions/StandardIdentifier'
    type: array
  TagArn:
    maxLength: 256
    pattern: '^arn:[a-z0-9]{1,10}:profile'
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  Task:
    description: >-
      A class for modeling different type of tasks. Task implementation varies
      based on the TaskType.
    properties:
      ConnectorOperator:
        allOf:
          - $ref: '#/definitions/ConnectorOperator'
          - description: The operation to be performed on the provided source fields.
      DestinationField:
        allOf:
          - $ref: '#/definitions/DestinationField'
          - description: >-
              A field in a destination connector, or a field value against which
              Amazon AppFlow validates a source field.
      SourceFields:
        allOf:
          - $ref: '#/definitions/SourceFields'
          - description: The source fields to which a particular task is applied.
      TaskProperties:
        allOf:
          - $ref: '#/definitions/TaskPropertiesMap'
          - description: >-
              A map used to store task-related information. The service looks
              for particular information based on the TaskType.
      TaskType:
        allOf:
          - $ref: '#/definitions/TaskType'
          - description: >-
              Specifies the particular task implementation that Amazon AppFlow
              performs.
    required:
      - SourceFields
      - TaskType
    type: object
  TaskPropertiesMap:
    additionalProperties:
      $ref: '#/definitions/Property'
    type: object
  TaskType:
    enum:
      - Arithmetic
      - Filter
      - Map
      - Mask
      - Merge
      - Truncate
      - Validate
    type: string
  Tasks:
    items:
      $ref: '#/definitions/Task'
    type: array
  ThrottlingException: {}
  Timezone:
    maxLength: 256
    pattern: .*
    type: string
  TriggerConfig:
    description: >-
      The trigger settings that determine how and when Amazon AppFlow runs the
      specified flow.
    properties:
      TriggerProperties:
        allOf:
          - $ref: '#/definitions/TriggerProperties'
          - description: >-
              Specifies the configuration details of a schedule-triggered flow
              that you define. Currently, these settings only apply to the
              Scheduled trigger type.
      TriggerType:
        allOf:
          - $ref: '#/definitions/TriggerType'
          - description: >-
              Specifies the type of flow trigger. It can be OnDemand, Scheduled,
              or Event.
    required:
      - TriggerType
    type: object
  TriggerProperties:
    description: >-
      Specifies the configuration details that control the trigger for a flow.
      Currently, these settings only apply to the Scheduled trigger type.
    properties:
      Scheduled:
        allOf:
          - $ref: '#/definitions/ScheduledTriggerProperties'
          - description: >-
              Specifies the configuration details of a schedule-triggered flow
              that you define.
    type: object
  TriggerType:
    enum:
      - Scheduled
      - Event
      - OnDemand
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateAddress:
    description: Updates associated with the address properties of a customer profile.
    properties:
      Address1:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The first line of a customer address.
      Address2:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The second line of a customer address.
      Address3:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The third line of a customer address.
      Address4:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The fourth line of a customer address.
      City:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The city in which a customer lives.
      Country:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The country in which a customer lives.
      County:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The county in which a customer lives.
      PostalCode:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The postal code of a customer address.
      Province:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The province in which a customer lives.
      State:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The state in which a customer lives.
    type: object
  UpdateAttributes:
    additionalProperties:
      $ref: '#/definitions/string0To255'
    type: object
  UpdateDomainRequest:
    properties:
      DeadLetterQueueUrl:
        allOf:
          - $ref: '#/definitions/sqsQueueUrl'
          - description: >-
              The URL of the SQS dead letter queue, which is used for reporting
              errors associated with ingesting data from third party
              applications. If specified as an empty string, it will clear any
              existing value. You must set up a policy on the DeadLetterQueue
              for the SendMessage operation to enable Amazon Connect Customer
              Profiles to send messages to the DeadLetterQueue.
      DefaultEncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The default encryption key, which is an AWS managed key, is used
              when no specific type of encryption key is specified. It is used
              to encrypt all data before it is placed in permanent or
              semi-permanent storage. If specified as an empty string, it will
              clear any existing value.
      DefaultExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: >-
              The default number of days until the data within the domain
              expires.
      Matching:
        allOf:
          - $ref: '#/definitions/MatchingRequest'
          - description: >-
              The process of matching duplicate profiles. If Matching = true,
              Amazon Connect Customer Profiles starts a weekly batch process
              every Saturday at 12AM UTC to detect duplicate profiles in your
              domains. After that batch process completes, use the <a
              href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>
              API to return and review the results. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    title: UpdateDomainRequest
    type: object
  UpdateDomainResponse:
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was created.
      DeadLetterQueueUrl:
        allOf:
          - $ref: '#/definitions/sqsQueueUrl'
          - description: >-
              The URL of the SQS dead letter queue, which is used for reporting
              errors associated with ingesting data from third party
              applications.
      DefaultEncryptionKey:
        allOf:
          - $ref: '#/definitions/encryptionKey'
          - description: >-
              The default encryption key, which is an AWS managed key, is used
              when no specific type of encryption key is specified. It is used
              to encrypt all data before it is placed in permanent or
              semi-permanent storage.
      DefaultExpirationDays:
        allOf:
          - $ref: '#/definitions/expirationDaysInteger'
          - description: >-
              The default number of days until the data within the domain
              expires.
      DomainName:
        allOf:
          - $ref: '#/definitions/name'
          - description: The unique name of the domain.
      LastUpdatedAt:
        allOf:
          - $ref: '#/definitions/timestamp'
          - description: The timestamp of when the domain was most recently edited.
      Matching:
        allOf:
          - $ref: '#/definitions/MatchingResponse'
          - description: >-
              The process of matching duplicate profiles. If Matching = true,
              Amazon Connect Customer Profiles starts a weekly batch process
              every Saturday at 12AM UTC to detect duplicate profiles in your
              domains. After that batch process completes, use the <a
              href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>
              API to return and review the results. 
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The tags used to organize, track, or control access for this
              resource.
    required:
      - DomainName
      - CreatedAt
      - LastUpdatedAt
    type: object
  UpdateProfileRequest:
    properties:
      AccountNumber:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: A unique account number that you have given to the customer.
      AdditionalInformation:
        allOf:
          - $ref: '#/definitions/string0To1000'
          - description: Any additional information relevant to the customer’s profile.
      Address:
        allOf:
          - $ref: '#/definitions/UpdateAddress'
          - description: >-
              A generic address associated with the customer that is not
              mailing, shipping, or billing.
      Attributes:
        allOf:
          - $ref: '#/definitions/UpdateAttributes'
          - description: A key value pair of attributes of a customer profile.
      BillingAddress:
        allOf:
          - $ref: '#/definitions/UpdateAddress'
          - description: The customer’s billing address.
      BirthDate:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: 'The customer’s birth date. '
      BusinessEmailAddress:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s business email address.
      BusinessName:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The name of the customer’s business.
      BusinessPhoneNumber:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s business phone number.
      EmailAddress:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: >-
              The customer’s email address, which has not been specified as a
              personal or business address. 
      FirstName:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s first name.
      Gender:
        allOf:
          - $ref: '#/definitions/Gender'
          - description: 'The gender with which the customer identifies. '
      HomePhoneNumber:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s home phone number.
      LastName:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s last name.
      MailingAddress:
        allOf:
          - $ref: '#/definitions/UpdateAddress'
          - description: The customer’s mailing address.
      MiddleName:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s middle name.
      MobilePhoneNumber:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s mobile phone number.
      PartyType:
        allOf:
          - $ref: '#/definitions/PartyType'
          - description: The type of profile used to describe the customer.
      PersonalEmailAddress:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: The customer’s personal email address.
      PhoneNumber:
        allOf:
          - $ref: '#/definitions/string0To255'
          - description: >-
              The customer’s phone number, which has not been specified as a
              mobile, home, or business number. 
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
      ShippingAddress:
        allOf:
          - $ref: '#/definitions/UpdateAddress'
          - description: The customer’s shipping address.
    required:
      - ProfileId
    title: UpdateProfileRequest
    type: object
  UpdateProfileResponse:
    properties:
      ProfileId:
        allOf:
          - $ref: '#/definitions/uuid'
          - description: The unique identifier of a customer profile.
    required:
      - ProfileId
    type: object
  ZendeskConnectorOperator:
    enum:
      - PROJECTION
      - GREATER_THAN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
    type: string
  ZendeskSourceProperties:
    description: The properties that are applied when using Zendesk as a flow source.
    properties:
      Object:
        allOf:
          - $ref: '#/definitions/Object'
          - description: The object specified in the Zendesk flow source.
    required:
      - Object
    type: object
  boolean:
    type: boolean
  encryptionKey:
    maxLength: 255
    minLength: 0
    type: string
  expirationDaysInteger:
    maximum: 1098
    minimum: 1
    type: integer
  long:
    type: integer
  matchesNumber:
    minimum: 0
    type: integer
  maxSize100:
    maximum: 100
    minimum: 1
    type: integer
  message:
    type: string
  name:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  optionalBoolean:
    type: boolean
  requestValueList:
    items:
      $ref: '#/definitions/string1To255'
    type: array
  sqsQueueUrl:
    maxLength: 255
    minLength: 0
    type: string
  string0To1000:
    maxLength: 1000
    minLength: 0
    type: string
  string0To255:
    maxLength: 255
    minLength: 0
    type: string
  string1To1000:
    maxLength: 1000
    minLength: 1
    type: string
  string1To255:
    maxLength: 255
    minLength: 1
    type: string
  stringTo2048:
    maxLength: 2048
    pattern: .*
    type: string
  stringifiedJson:
    maxLength: 256000
    minLength: 1
    type: string
  text:
    maxLength: 1000
    minLength: 1
    type: string
  timestamp:
    format: date-time
    type: string
  token:
    maxLength: 1024
    minLength: 1
    type: string
  typeName:
    maxLength: 255
    minLength: 1
    pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
    type: string
  uuid:
    pattern: '[a-f0-9]{32}'
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/profile/'
host: profile.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <fullname>Amazon Connect Customer Profiles</fullname> <p>Welcome to the
    Amazon Connect Customer Profiles API Reference. This guide provides
    information about the Amazon Connect Customer Profiles API, including
    supported operations, data types, parameters, and schemas.</p> <p>Amazon
    Connect Customer Profiles is a unified customer profile for your contact
    center that has pre-built connectors powered by AppFlow that make it easy to
    combine customer information from third party applications, such as
    Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning
    (ERP), with contact history from your Amazon Connect contact center.</p>
    <p>If you're new to Amazon Connect , you might find it helpful to also
    review the <a
    href="https://docs.aws.amazon.com/connect/latest/adminguide/what-is-amazon-connect.html">Amazon
    Connect Administrator Guide</a>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Connect Customer Profiles
  version: '2020-08-15'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: profile
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/customer-profiles-2020-08-15.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: customer-profiles
paths:
  /domains:
    get:
      description: >-
        Returns a list of all the domains for an AWS account that have been
        created.
      operationId: ListDomains
      parameters:
        - description: The pagination token from the previous ListDomain API call.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDomainsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/domains/{DomainName}':
    delete:
      description: >-
        Deletes a specific domain and all of its customer data, such as customer
        profile attributes and their related objects.
      operationId: DeleteDomain
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDomainResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Returns information about a specific domain.
      operationId: GetDomain
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDomainResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a domain, which is a container for all customer data, such as
        customer profile attributes, object types, profile keys, and encryption
        keys. You can create multiple domains, and each domain can have multiple
        third-party integrations.</p> <p>Each Amazon Connect instance can be
        associated with only one domain. Multiple Amazon Connect instances can
        be associated with one domain.</p> <p>Use this API or <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html">UpdateDomain</a>
        to enable <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">identity
        resolution</a>: set <code>Matching</code> to true. </p>
      operationId: CreateDomain
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DeadLetterQueueUrl:
                description: >-
                  The URL of the SQS dead letter queue, which is used for
                  reporting errors associated with ingesting data from third
                  party applications. You must set up a policy on the
                  DeadLetterQueue for the SendMessage operation to enable Amazon
                  Connect Customer Profiles to send messages to the
                  DeadLetterQueue.
                maxLength: 255
                minLength: 0
                type: string
              DefaultEncryptionKey:
                description: >-
                  The default encryption key, which is an AWS managed key, is
                  used when no specific type of encryption key is specified. It
                  is used to encrypt all data before it is placed in permanent
                  or semi-permanent storage.
                maxLength: 255
                minLength: 0
                type: string
              DefaultExpirationDays:
                description: >-
                  The default number of days until the data within the domain
                  expires.
                maximum: 1098
                minimum: 1
                type: integer
              Matching:
                description: >-
                  The flag that enables the matching process of duplicate
                  profiles.
                properties:
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/optionalBoolean'
                      - description: >-
                          The flag that enables the matching process of
                          duplicate profiles.
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags used to organize, track, or control access for this
                  resource.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - DefaultExpirationDays
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDomainResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Updates the properties of a domain, including creating or selecting a
        dead letter queue or an encryption key.</p> <p>After a domain is
        created, the name can’t be changed.</p> <p>Use this API or <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html">CreateDomain</a>
        to enable <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">identity
        resolution</a>: set <code>Matching</code> to true. </p>
      operationId: UpdateDomain
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DeadLetterQueueUrl:
                description: >-
                  The URL of the SQS dead letter queue, which is used for
                  reporting errors associated with ingesting data from third
                  party applications. If specified as an empty string, it will
                  clear any existing value. You must set up a policy on the
                  DeadLetterQueue for the SendMessage operation to enable Amazon
                  Connect Customer Profiles to send messages to the
                  DeadLetterQueue.
                maxLength: 255
                minLength: 0
                type: string
              DefaultEncryptionKey:
                description: >-
                  The default encryption key, which is an AWS managed key, is
                  used when no specific type of encryption key is specified. It
                  is used to encrypt all data before it is placed in permanent
                  or semi-permanent storage. If specified as an empty string, it
                  will clear any existing value.
                maxLength: 255
                minLength: 0
                type: string
              DefaultExpirationDays:
                description: >-
                  The default number of days until the data within the domain
                  expires.
                maximum: 1098
                minimum: 1
                type: integer
              Matching:
                description: >-
                  The flag that enables the matching process of duplicate
                  profiles.
                properties:
                  Enabled:
                    allOf:
                      - $ref: '#/definitions/optionalBoolean'
                      - description: >-
                          The flag that enables the matching process of
                          duplicate profiles.
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags used to organize, track, or control access for this
                  resource.
                maxProperties: 50
                minProperties: 1
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDomainResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/integrations':
    get:
      description: Lists all of the integrations in your domain.
      operationId: ListIntegrations
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: The pagination token from the previous ListIntegrations API call.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIntegrationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns an integration for a domain.
      operationId: GetIntegration
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Uri:
                description: The URI of the S3 bucket or any other type of data source.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - Uri
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIntegrationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Adds an integration between the service and a third-party service,
        which includes Amazon AppFlow and Amazon Connect.</p> <p>An integration
        can belong to only one domain.</p>
      operationId: PutIntegration
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FlowDefinition:
                description: >-
                  The configurations that control how Customer Profiles
                  retrieves data from the source, Amazon AppFlow. Customer
                  Profiles uses this information to create an AppFlow flow on
                  behalf of customers.
                properties:
                  Description:
                    allOf:
                      - $ref: '#/definitions/FlowDescription'
                      - description: A description of the flow you want to create.
                  FlowName:
                    allOf:
                      - $ref: '#/definitions/FlowName'
                      - description: >-
                          The specified name of the flow. Use underscores (_) or
                          hyphens (-) only. Spaces are not allowed.
                  KmsArn:
                    allOf:
                      - $ref: '#/definitions/KmsArn'
                      - description: >-
                          The Amazon Resource Name of the AWS Key Management
                          Service (KMS) key you provide for encryption.
                  SourceFlowConfig:
                    allOf:
                      - $ref: '#/definitions/SourceFlowConfig'
                      - description: >-
                          The configuration that controls how Customer Profiles
                          retrieves data from the source.
                  Tasks:
                    allOf:
                      - $ref: '#/definitions/Tasks'
                      - description: >-
                          A list of tasks that Customer Profiles performs while
                          transferring the data in the flow run.
                  TriggerConfig:
                    allOf:
                      - $ref: '#/definitions/TriggerConfig'
                      - description: >-
                          The trigger settings that determine how and when the
                          flow runs.
                type: object
              ObjectTypeName:
                description: The name of the profile object type.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags used to organize, track, or control access for this
                  resource.
                maxProperties: 50
                minProperties: 1
                type: object
              Uri:
                description: The URI of the S3 bucket or any other type of data source.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - ObjectTypeName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutIntegrationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/integrations/delete':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Removes an integration from a specific domain.
      operationId: DeleteIntegration
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Uri:
                description: The URI of the S3 bucket or any other type of data source.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - Uri
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteIntegrationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/matches':
    get:
      description: >-
        <p>This API is in preview release for Amazon Connect and subject to
        change.</p> <p>Before calling this API, use <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html">CreateDomain</a>
        or <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html">UpdateDomain</a>
        to enable identity resolution: set <code>Matching</code> to true.</p>
        <p>GetMatches returns potentially matching profiles, based on the
        results of the latest run of a machine learning process. </p>
        <important> <p>Amazon Connect starts a batch process every Saturday at
        12AM UTC to identify matching profiles. The results are returned up to
        seven days after the Saturday run.</p> </important> <p>Amazon Connect
        uses the following profile attributes to identify matches:</p> <ul> <li>
        <p>PhoneNumber</p> </li> <li> <p>HomePhoneNumber</p> </li> <li>
        <p>BusinessPhoneNumber</p> </li> <li> <p>MobilePhoneNumber</p> </li>
        <li> <p>EmailAddress</p> </li> <li> <p>PersonalEmailAddress</p> </li>
        <li> <p>BusinessEmailAddress</p> </li> <li> <p>FullName</p> </li> <li>
        <p>BusinessName</p> </li> </ul> <p>For example, two or more
        profiles—with spelling mistakes such as <b>John Doe</b> and <b>Jhn
        Doe</b>, or different casing email addresses such as
        <b>JOHN_DOE@ANYCOMPANY.COM</b> and <b>johndoe@anycompany.com</b>, or
        different phone number formats such as <b>555-010-0000</b> and
        <b>+1-555-010-0000</b>—can be detected as belonging to the same customer
        <b>John Doe</b> and merged into a unified profile.</p>
      operationId: GetMatches
      parameters:
        - description: >-
            The token for the next set of results. Use the value returned in the
            previous response in the next request to retrieve the next set of
            results.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of results to return per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMatchesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/domains/{DomainName}/object-types':
    get:
      description: Lists all of the templates available within the service.
      operationId: ListProfileObjectTypes
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: Identifies the next page of results to return.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProfileObjectTypesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/domains/{DomainName}/object-types/{ObjectTypeName}':
    delete:
      description: >-
        Removes a ProfileObjectType from a specific domain as well as removes
        all the ProfileObjects of that type. It also disables integrations from
        this specific ProfileObjectType. In addition, it scrubs all of the
        fields of the standard profile that were populated from this
        ProfileObjectType.
      operationId: DeleteProfileObjectType
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: The name of the profile object type.
          in: path
          maxLength: 255
          minLength: 1
          name: ObjectTypeName
          pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProfileObjectTypeResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Returns the object types for a specific domain.
      operationId: GetProfileObjectType
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: The name of the profile object type.
          in: path
          maxLength: 255
          minLength: 1
          name: ObjectTypeName
          pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProfileObjectTypeResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Defines a ProfileObjectType.
      operationId: PutProfileObjectType
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: The name of the profile object type.
          in: path
          maxLength: 255
          minLength: 1
          name: ObjectTypeName
          pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AllowProfileCreation:
                description: >-
                  Indicates whether a profile should be created when data is
                  received if one doesn’t exist for an object of this type. The
                  default is <code>FALSE</code>. If the AllowProfileCreation
                  flag is set to <code>FALSE</code>, then the service tries to
                  fetch a standard profile and associate this object with the
                  profile. If it is set to <code>TRUE</code>, and if no match is
                  found, then the service creates a new standard profile.
                type: boolean
              Description:
                description: Description of the profile object type.
                maxLength: 1000
                minLength: 1
                type: string
              EncryptionKey:
                description: >-
                  The customer-provided key to encrypt the profile object that
                  will be created in this profile object type.
                maxLength: 255
                minLength: 0
                type: string
              ExpirationDays:
                description: The number of days until the data in the object expires.
                maximum: 1098
                minimum: 1
                type: integer
              Fields:
                additionalProperties:
                  $ref: '#/definitions/ObjectTypeField'
                description: A map of the name and ObjectType field.
                type: object
              Keys:
                additionalProperties:
                  $ref: '#/definitions/ObjectTypeKeyList'
                description: >-
                  A list of unique keys that can be used to map data to the
                  profile.
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags used to organize, track, or control access for this
                  resource.
                maxProperties: 50
                minProperties: 1
                type: object
              TemplateId:
                description: A unique identifier for the object template.
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9_-]+$'
                type: string
            required:
              - Description
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutProfileObjectTypeResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a standard profile.</p> <p>A standard profile represents the
        following attributes for a customer profile in a domain.</p>
      operationId: CreateProfile
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountNumber:
                description: A unique account number that you have given to the customer.
                maxLength: 255
                minLength: 1
                type: string
              AdditionalInformation:
                description: Any additional information relevant to the customer’s profile.
                maxLength: 1000
                minLength: 1
                type: string
              Address:
                description: >-
                  A generic address associated with the customer that is not
                  mailing, shipping, or billing.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The state in which a customer lives.
                type: object
              Attributes:
                additionalProperties:
                  $ref: '#/definitions/string1To255'
                description: A key value pair of attributes of a customer profile.
                type: object
              BillingAddress:
                description: >-
                  A generic address associated with the customer that is not
                  mailing, shipping, or billing.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The state in which a customer lives.
                type: object
              BirthDate:
                description: 'The customer’s birth date. '
                maxLength: 255
                minLength: 1
                type: string
              BusinessEmailAddress:
                description: The customer’s business email address.
                maxLength: 255
                minLength: 1
                type: string
              BusinessName:
                description: The name of the customer’s business.
                maxLength: 255
                minLength: 1
                type: string
              BusinessPhoneNumber:
                description: The customer’s business phone number.
                maxLength: 255
                minLength: 1
                type: string
              EmailAddress:
                description: >-
                  The customer’s email address, which has not been specified as
                  a personal or business address. 
                maxLength: 255
                minLength: 1
                type: string
              FirstName:
                description: The customer’s first name.
                maxLength: 255
                minLength: 1
                type: string
              Gender:
                description: 'The gender with which the customer identifies. '
                enum:
                  - MALE
                  - FEMALE
                  - UNSPECIFIED
                type: string
              HomePhoneNumber:
                description: The customer’s home phone number.
                maxLength: 255
                minLength: 1
                type: string
              LastName:
                description: The customer’s last name.
                maxLength: 255
                minLength: 1
                type: string
              MailingAddress:
                description: >-
                  A generic address associated with the customer that is not
                  mailing, shipping, or billing.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The state in which a customer lives.
                type: object
              MiddleName:
                description: The customer’s middle name.
                maxLength: 255
                minLength: 1
                type: string
              MobilePhoneNumber:
                description: The customer’s mobile phone number.
                maxLength: 255
                minLength: 1
                type: string
              PartyType:
                description: The type of profile used to describe the customer.
                enum:
                  - INDIVIDUAL
                  - BUSINESS
                  - OTHER
                type: string
              PersonalEmailAddress:
                description: The customer’s personal email address.
                maxLength: 255
                minLength: 1
                type: string
              PhoneNumber:
                description: >-
                  The customer’s phone number, which has not been specified as a
                  mobile, home, or business number. 
                maxLength: 255
                minLength: 1
                type: string
              ShippingAddress:
                description: >-
                  A generic address associated with the customer that is not
                  mailing, shipping, or billing.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string1To255'
                      - description: The state in which a customer lives.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProfileResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Updates the properties of a profile. The ProfileId is required for
        updating a customer profile.</p> <p>When calling the UpdateProfile API,
        specifying an empty string value means that any existing value will be
        removed. Not specifying a string value means that any value already
        there will be kept.</p>
      operationId: UpdateProfile
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccountNumber:
                description: A unique account number that you have given to the customer.
                maxLength: 255
                minLength: 0
                type: string
              AdditionalInformation:
                description: Any additional information relevant to the customer’s profile.
                maxLength: 1000
                minLength: 0
                type: string
              Address:
                description: >-
                  Updates associated with the address properties of a customer
                  profile.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The state in which a customer lives.
                type: object
              Attributes:
                additionalProperties:
                  $ref: '#/definitions/string0To255'
                description: A key value pair of attributes of a customer profile.
                type: object
              BillingAddress:
                description: >-
                  Updates associated with the address properties of a customer
                  profile.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The state in which a customer lives.
                type: object
              BirthDate:
                description: 'The customer’s birth date. '
                maxLength: 255
                minLength: 0
                type: string
              BusinessEmailAddress:
                description: The customer’s business email address.
                maxLength: 255
                minLength: 0
                type: string
              BusinessName:
                description: The name of the customer’s business.
                maxLength: 255
                minLength: 0
                type: string
              BusinessPhoneNumber:
                description: The customer’s business phone number.
                maxLength: 255
                minLength: 0
                type: string
              EmailAddress:
                description: >-
                  The customer’s email address, which has not been specified as
                  a personal or business address. 
                maxLength: 255
                minLength: 0
                type: string
              FirstName:
                description: The customer’s first name.
                maxLength: 255
                minLength: 0
                type: string
              Gender:
                description: 'The gender with which the customer identifies. '
                enum:
                  - MALE
                  - FEMALE
                  - UNSPECIFIED
                type: string
              HomePhoneNumber:
                description: The customer’s home phone number.
                maxLength: 255
                minLength: 0
                type: string
              LastName:
                description: The customer’s last name.
                maxLength: 255
                minLength: 0
                type: string
              MailingAddress:
                description: >-
                  Updates associated with the address properties of a customer
                  profile.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The state in which a customer lives.
                type: object
              MiddleName:
                description: The customer’s middle name.
                maxLength: 255
                minLength: 0
                type: string
              MobilePhoneNumber:
                description: The customer’s mobile phone number.
                maxLength: 255
                minLength: 0
                type: string
              PartyType:
                description: The type of profile used to describe the customer.
                enum:
                  - INDIVIDUAL
                  - BUSINESS
                  - OTHER
                type: string
              PersonalEmailAddress:
                description: The customer’s personal email address.
                maxLength: 255
                minLength: 0
                type: string
              PhoneNumber:
                description: >-
                  The customer’s phone number, which has not been specified as a
                  mobile, home, or business number. 
                maxLength: 255
                minLength: 0
                type: string
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
              ShippingAddress:
                description: >-
                  Updates associated with the address properties of a customer
                  profile.
                properties:
                  Address1:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The first line of a customer address.
                  Address2:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The second line of a customer address.
                  Address3:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The third line of a customer address.
                  Address4:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The fourth line of a customer address.
                  City:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The city in which a customer lives.
                  Country:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The country in which a customer lives.
                  County:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The county in which a customer lives.
                  PostalCode:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The postal code of a customer address.
                  Province:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The province in which a customer lives.
                  State:
                    allOf:
                      - $ref: '#/definitions/string0To255'
                      - description: The state in which a customer lives.
                type: object
            required:
              - ProfileId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProfileResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/delete':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the standard customer profile and all data pertaining to the
        profile.
      operationId: DeleteProfile
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
            required:
              - ProfileId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProfileResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/keys':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Associates a new key value with a specific profile, such as a Contact
        Trace Record (CTR) ContactId.</p> <p>A profile object can have a single
        unique key and any number of additional keys that can be used to
        identify the profile that it belongs to.</p>
      operationId: AddProfileKey
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              KeyName:
                description: A searchable identifier of a customer profile.
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9_-]+$'
                type: string
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
              Values:
                description: A list of key values.
                items:
                  $ref: '#/definitions/string1To255'
                type: array
            required:
              - ProfileId
              - KeyName
              - Values
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddProfileKeyResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/keys/delete':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Removes a searchable key from a customer profile.
      operationId: DeleteProfileKey
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              KeyName:
                description: A searchable identifier of a customer profile.
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9_-]+$'
                type: string
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
              Values:
                description: A list of key values.
                items:
                  $ref: '#/definitions/string1To255'
                type: array
            required:
              - ProfileId
              - KeyName
              - Values
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProfileKeyResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/objects':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of objects associated with a profile of a given
        ProfileObjectType.
      operationId: ListProfileObjects
      parameters:
        - description: The pagination token from the previous call to ListProfileObjects.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ObjectFilter:
                description: >-
                  The filter applied to ListProfileObjects response to include
                  profile objects with the specified index values. This filter
                  is only supported for ObjectTypeName _asset and _case.
                properties:
                  KeyName:
                    allOf:
                      - $ref: '#/definitions/name'
                      - description: >-
                          A searchable identifier of a standard profile object.
                          The predefined keys you can use to search for _asset
                          include: _assetId, _assetName, _serialNumber. The
                          predefined keys you can use to search for _case
                          include: _caseId.
                  Values:
                    allOf:
                      - $ref: '#/definitions/requestValueList'
                      - description: A list of key values.
                type: object
              ObjectTypeName:
                description: The name of the profile object type.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
                type: string
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
            required:
              - ObjectTypeName
              - ProfileId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProfileObjectsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Adds additional objects to customer profiles of a given
        ObjectType.</p> <p>When adding a specific profile object, like a Contact
        Trace Record (CTR), an inferred profile can get created if it is not
        mapped to an existing profile. The resulting profile will only have a
        phone number populated in the standard ProfileObject. Any additional
        CTRs with the same phone number will be mapped to the same inferred
        profile.</p> <p>When a ProfileObject is created and if a
        ProfileObjectType already exists for the ProfileObject, it will provide
        data to a standard profile depending on the ProfileObjectType
        definition.</p> <p>PutProfileObject needs an ObjectType, which can be
        created using PutProfileObjectType.</p>
      operationId: PutProfileObject
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Object:
                description: A string that is serialized from a JSON object.
                maxLength: 256000
                minLength: 1
                type: string
              ObjectTypeName:
                description: The name of the profile object type.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
                type: string
            required:
              - ObjectTypeName
              - Object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutProfileObjectResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/objects/delete':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Removes an object associated with a profile of a given
        ProfileObjectType.
      operationId: DeleteProfileObject
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ObjectTypeName:
                description: The name of the profile object type.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z_][a-zA-Z_0-9-]*$'
                type: string
              ProfileId:
                description: The unique identifier of a customer profile.
                pattern: '[a-f0-9]{32}'
                type: string
              ProfileObjectUniqueKey:
                description: >-
                  The unique identifier of the profile object generated by the
                  service.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - ProfileId
              - ProfileObjectUniqueKey
              - ObjectTypeName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProfileObjectResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/objects/merge':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>This API is in preview release for Amazon Connect and subject to
        change.</p> <p>Runs an AWS Lambda job that does the following:</p> <ol>
        <li> <p>All the profileKeys in the <code>ProfileToBeMerged</code> will
        be moved to the main profile.</p> </li> <li> <p>All the objects in the
        <code>ProfileToBeMerged</code> will be moved to the main profile.</p>
        </li> <li> <p>All the <code>ProfileToBeMerged</code> will be deleted at
        the end.</p> </li> <li> <p>All the profileKeys in the
        <code>ProfileIdsToBeMerged</code> will be moved to the main profile.</p>
        </li> <li> <p>Standard fields are merged as follows:</p> <ol> <li>
        <p>Fields are always "union"-ed if there are no conflicts in standard
        fields or attributeKeys.</p> </li> <li> <p>When there are conflicting
        fields:</p> <ol> <li> <p>If no <code>SourceProfileIds</code> entry is
        specified, the main Profile value is always taken. </p> </li> <li> <p>If
        a <code>SourceProfileIds</code> entry is specified, the specified
        profileId is always taken, even if it is a NULL value.</p> </li> </ol>
        </li> </ol> </li> </ol> <p>You can use MergeProfiles together with <a
        href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a>,
        which returns potentially matching profiles, or use it with the results
        of another matching system. After profiles have been merged, they cannot
        be separated (unmerged).</p>
      operationId: MergeProfiles
      parameters:
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FieldSourceProfileIds:
                description: >-
                  A duplicate customer profile that is to be merged into a main
                  profile. 
                properties:
                  AccountNumber:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the account number field to be
                          merged. 
                  AdditionalInformation:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the additional information
                          field to be merged.
                  Address:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the party type field to be
                          merged.
                  Attributes:
                    allOf:
                      - $ref: '#/definitions/AttributeSourceIdMap'
                      - description: >-
                          A unique identifier for the attributes field to be
                          merged.
                  BillingAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the billing type field to be
                          merged.
                  BirthDate:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the birthdate field to be
                          merged.
                  BusinessEmailAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the party type field to be
                          merged.
                  BusinessName:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the business name field to be
                          merged.
                  BusinessPhoneNumber:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the business phone number
                          field to be merged.
                  EmailAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the email address field to be
                          merged.
                  FirstName:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the first name field to be
                          merged.
                  Gender:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: A unique identifier for the gender field to be merged.
                  HomePhoneNumber:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the home phone number field to
                          be merged.
                  LastName:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the last name field to be
                          merged.
                  MailingAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the mailing address field to
                          be merged.
                  MiddleName:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the middle name field to be
                          merged.
                  MobilePhoneNumber:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the mobile phone number field
                          to be merged.
                  PartyType:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the party type field to be
                          merged.
                  PersonalEmailAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the personal email address
                          field to be merged.
                  PhoneNumber:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the phone number field to be
                          merged.
                  ShippingAddress:
                    allOf:
                      - $ref: '#/definitions/uuid'
                      - description: >-
                          A unique identifier for the shipping address field to
                          be merged.
                type: object
              MainProfileId:
                description: The identifier of the profile to be taken.
                pattern: '[a-f0-9]{32}'
                type: string
              ProfileIdsToBeMerged:
                description: The identifier of the profile to be merged into MainProfileId.
                items:
                  $ref: '#/definitions/uuid'
                maxItems: 20
                minItems: 1
                type: array
            required:
              - MainProfileId
              - ProfileIdsToBeMerged
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MergeProfilesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/domains/{DomainName}/profiles/search':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Searches for profiles within a specific domain name using name, phone
        number, email address, account number, or a custom defined index.
      operationId: SearchProfiles
      parameters:
        - description: The pagination token from the previous SearchProfiles API call.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: The unique name of the domain.
          in: path
          maxLength: 64
          minLength: 1
          name: DomainName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              KeyName:
                description: >-
                  A searchable identifier of a customer profile. The predefined
                  keys you can use to search include: _account, _profileId,
                  _fullName, _phone, _email, _ctrContactId, _marketoLeadId,
                  _salesforceAccountId, _salesforceContactId, _zendeskUserId,
                  _zendeskExternalId, _serviceNowSystemId.
                maxLength: 64
                minLength: 1
                pattern: '^[a-zA-Z0-9_-]+$'
                type: string
              Values:
                description: A list of key values.
                items:
                  $ref: '#/definitions/string1To255'
                type: array
            required:
              - KeyName
              - Values
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProfilesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /integrations:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all of the integrations associated to a specific URI in the AWS
        account.
      operationId: ListAccountIntegrations
      parameters:
        - description: >-
            The pagination token from the previous ListAccountIntegrations API
            call.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
        - in: body
          name: body
          required: true
          schema:
            properties:
              Uri:
                description: The URI of the S3 bucket or any other type of data source.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - Uri
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAccountIntegrationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/tags/{resourceArn}':
    get:
      description: >-
        Displays the tags associated with an Amazon Connect Customer Profiles
        resource. In Connect Customer Profiles, domains, profile object types,
        and integrations can be tagged.
      operationId: ListTagsForResource
      parameters:
        - description: The ARN of the resource for which you want to view tags.
          in: path
          maxLength: 256
          name: resourceArn
          pattern: '^arn:[a-z0-9]{1,10}:profile'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Assigns one or more tags (key-value pairs) to the specified Amazon
        Connect Customer Profiles resource. Tags can help you organize and
        categorize your resources. You can also use them to scope user
        permissions by granting a user permission to access or change only
        resources with certain tag values. In Connect Customer Profiles,
        domains, profile object types, and integrations can be tagged.</p>
        <p>Tags don't have any semantic meaning to AWS and are interpreted
        strictly as strings of characters.</p> <p>You can use the TagResource
        action with a resource that already has tags. If you specify a new tag
        key, this tag is appended to the list of tags associated with the
        resource. If you specify a tag key that is already associated with the
        resource, the new tag value that you specify replaces the previous value
        for that tag.</p> <p>You can associate as many as 50 tags with a
        resource.</p>
      operationId: TagResource
      parameters:
        - description: The ARN of the resource that you're adding tags to.
          in: path
          maxLength: 256
          name: resourceArn
          pattern: '^arn:[a-z0-9]{1,10}:profile'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The tags used to organize, track, or control access for this
                  resource.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: >-
        Removes one or more tags from the specified Amazon Connect Customer
        Profiles resource. In Connect Customer Profiles, domains, profile object
        types, and integrations can be tagged.
      operationId: UntagResource
      parameters:
        - description: The ARN of the resource from which you are removing tags.
          in: path
          maxLength: 256
          name: resourceArn
          pattern: '^arn:[a-z0-9]{1,10}:profile'
          required: true
          type: string
        - collectionFormat: multi
          description: The list of tag keys to remove from the resource.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /templates:
    get:
      description: Lists all of the template information for object types.
      operationId: ListProfileObjectTypeTemplates
      parameters:
        - description: >-
            The pagination token from the previous ListObjectTypeTemplates API
            call.
          in: query
          maxLength: 1024
          minLength: 1
          name: next-token
          required: false
          type: string
        - description: The maximum number of objects returned per page.
          in: query
          maximum: 100
          minimum: 1
          name: max-results
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProfileObjectTypeTemplatesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/templates/{TemplateId}':
    get:
      description: >-
        <p>Returns the template information for a specific object type.</p> <p>A
        template is a predefined ProfileObjectType, such as “Salesforce-Account”
        or “Salesforce-Contact.” When a user sends a ProfileObject, using the
        PutProfileObject API, with an ObjectTypeName that matches one of the
        TemplateIds, it uses the mappings from the template.</p>
      operationId: GetProfileObjectTypeTemplate
      parameters:
        - description: A unique identifier for the object template.
          in: path
          maxLength: 64
          minLength: 1
          name: TemplateId
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProfileObjectTypeTemplateResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

