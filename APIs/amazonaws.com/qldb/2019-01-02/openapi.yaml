basePath: /
definitions:
  Arn:
    maxLength: 1600
    minLength: 20
    type: string
  Boolean:
    type: boolean
  CancelJournalKinesisStreamRequest:
    properties: {}
    title: CancelJournalKinesisStreamRequest
    type: object
  CancelJournalKinesisStreamResponse:
    properties:
      StreamId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              The UUID (Base62-encoded text) of the canceled QLDB journal
              stream.
    type: object
  CreateLedgerRequest:
    properties:
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/DeletionProtection'
          - description: >-
              <p>The flag that prevents a ledger from being deleted by any user.
              If not provided on ledger creation, this feature is enabled
              (<code>true</code>) by default.</p> <p>If deletion protection is
              enabled, you must first disable it before you can delete the
              ledger. You can disable it by calling the
              <code>UpdateLedger</code> operation to set the flag to
              <code>false</code>.</p>
      KmsKey:
        allOf:
          - $ref: '#/definitions/KmsKey'
          - description: >-
              <p>The key in Key Management Service (KMS) to use for encryption
              of data at rest in the ledger. For more information, see <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption
              at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use
              one of the following options to specify this parameter:</p> <ul>
              <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is
              owned and managed by Amazon Web Services on your behalf.</p> </li>
              <li> <p> <b>Undefined</b>: By default, use an Amazon Web Services
              owned KMS key.</p> </li> <li> <p> <b>A valid symmetric customer
              managed KMS key</b>: Use the specified KMS key in your account
              that you create, own, and manage.</p> <p>Amazon QLDB does not
              support asymmetric keys. For more information, see <a
              href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
              symmetric and asymmetric keys</a> in the <i>Key Management Service
              Developer Guide</i>.</p> </li> </ul> <p>To specify a customer
              managed KMS key, you can use its key ID, Amazon Resource Name
              (ARN), alias name, or alias ARN. When using an alias name, prefix
              it with <code>"alias/"</code>. To specify a key in a different
              account, you must use the key ARN or alias ARN.</p> <p>For
              example:</p> <ul> <li> <p>Key ID:
              <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li>
              <p>Key ARN:
              <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
              </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code>
              </p> </li> <li> <p>Alias ARN:
              <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
              </p> </li> </ul> <p>For more information, see <a
              href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key
              identifiers (KeyId)</a> in the <i>Key Management Service Developer
              Guide</i>.</p>
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: >-
              <p>The name of the ledger that you want to create. The name must
              be unique among all of the ledgers in your account in the current
              Region.</p> <p>Naming constraints for ledger names are defined in
              <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
              in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
      PermissionsMode:
        allOf:
          - $ref: '#/definitions/PermissionsMode'
          - description: >-
              <p>The permissions mode to assign to the ledger that you want to
              create. This parameter can have one of the following values:</p>
              <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy permissions mode
              that enables access control with API-level granularity for
              ledgers.</p> <p>This mode allows users who have the
              <code>SendCommand</code> API permission for this ledger to run all
              PartiQL commands (hence, <code>ALLOW_ALL</code>) on any tables in
              the specified ledger. This mode disregards any table-level or
              command-level IAM permissions policies that you create for the
              ledger.</p> </li> <li> <p> <code>STANDARD</code>:
              (<i>Recommended</i>) A permissions mode that enables access
              control with finer granularity for ledgers, tables, and PartiQL
              commands.</p> <p>By default, this mode denies all user requests to
              run any PartiQL commands on any tables in this ledger. To allow
              PartiQL commands to run, you must create IAM permissions policies
              for specific table resources and PartiQL actions, in addition to
              the <code>SendCommand</code> API permission for the ledger. For
              information, see <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting
              started with the standard permissions mode</a> in the <i>Amazon
              QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly
              recommend using the <code>STANDARD</code> permissions mode to
              maximize the security of your ledger data.</p> </note>
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The key-value pairs to add as tags to the ledger that you want to
              create. Tag keys are case sensitive. Tag values are case sensitive
              and can be null.
    required:
      - Name
      - PermissionsMode
    title: CreateLedgerRequest
    type: object
  CreateLedgerResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
      CreationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the ledger was
              created. (Epoch time format is the number of seconds elapsed since
              12:00:00 AM January 1, 1970 UTC.)
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/DeletionProtection'
          - description: >-
              <p>The flag that prevents a ledger from being deleted by any user.
              If not provided on ledger creation, this feature is enabled
              (<code>true</code>) by default.</p> <p>If deletion protection is
              enabled, you must first disable it before you can delete the
              ledger. You can disable it by calling the
              <code>UpdateLedger</code> operation to set the flag to
              <code>false</code>.</p>
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of the customer managed KMS key that the ledger uses for
              encryption at rest. If this parameter is undefined, the ledger
              uses an Amazon Web Services owned KMS key for encryption.
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      PermissionsMode:
        allOf:
          - $ref: '#/definitions/PermissionsMode'
          - description: The permissions mode of the ledger that you created.
      State:
        allOf:
          - $ref: '#/definitions/LedgerState'
          - description: The current status of the ledger.
    type: object
  DeleteLedgerRequest:
    properties: {}
    title: DeleteLedgerRequest
    type: object
  DeletionProtection:
    type: boolean
  DescribeJournalKinesisStreamRequest:
    properties: {}
    title: DescribeJournalKinesisStreamRequest
    type: object
  DescribeJournalKinesisStreamResponse:
    properties:
      Stream:
        allOf:
          - $ref: '#/definitions/JournalKinesisStreamDescription'
          - description: >-
              Information about the QLDB journal stream returned by a
              <code>DescribeJournalS3Export</code> request.
    type: object
  DescribeJournalS3ExportRequest:
    properties: {}
    title: DescribeJournalS3ExportRequest
    type: object
  DescribeJournalS3ExportResponse:
    properties:
      ExportDescription:
        allOf:
          - $ref: '#/definitions/JournalS3ExportDescription'
          - description: >-
              Information about the journal export job returned by a
              <code>DescribeJournalS3Export</code> request.
    required:
      - ExportDescription
    type: object
  DescribeLedgerRequest:
    properties: {}
    title: DescribeLedgerRequest
    type: object
  DescribeLedgerResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
      CreationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the ledger was
              created. (Epoch time format is the number of seconds elapsed since
              12:00:00 AM January 1, 1970 UTC.)
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/DeletionProtection'
          - description: >-
              <p>The flag that prevents a ledger from being deleted by any user.
              If not provided on ledger creation, this feature is enabled
              (<code>true</code>) by default.</p> <p>If deletion protection is
              enabled, you must first disable it before you can delete the
              ledger. You can disable it by calling the
              <code>UpdateLedger</code> operation to set the flag to
              <code>false</code>.</p>
      EncryptionDescription:
        allOf:
          - $ref: '#/definitions/LedgerEncryptionDescription'
          - description: >-
              Information about the encryption of data at rest in the ledger.
              This includes the current status, the KMS key, and when the key
              became inaccessible (in the case of an error).
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      PermissionsMode:
        allOf:
          - $ref: '#/definitions/PermissionsMode'
          - description: The permissions mode of the ledger.
      State:
        allOf:
          - $ref: '#/definitions/LedgerState'
          - description: The current status of the ledger.
    type: object
  Digest:
    maxLength: 32
    minLength: 32
    type: string
  EncryptionStatus:
    enum:
      - ENABLED
      - UPDATING
      - KMS_KEY_INACCESSIBLE
    type: string
  ErrorCause:
    enum:
      - KINESIS_STREAM_NOT_FOUND
      - IAM_PERMISSION_REVOKED
    type: string
  ExportJournalToS3Request:
    properties:
      ExclusiveEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              <p>The exclusive end date and time for the range of journal
              contents to export.</p> <p>The <code>ExclusiveEndTime</code> must
              be in <code>ISO 8601</code> date and time format and in Universal
              Coordinated Time (UTC). For example:
              <code>2019-06-13T21:36:34Z</code>.</p> <p>The
              <code>ExclusiveEndTime</code> must be less than or equal to the
              current UTC date and time.</p>
      InclusiveStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              <p>The inclusive start date and time for the range of journal
              contents to export.</p> <p>The <code>InclusiveStartTime</code>
              must be in <code>ISO 8601</code> date and time format and in
              Universal Coordinated Time (UTC). For example:
              <code>2019-06-13T21:36:34Z</code>.</p> <p>The
              <code>InclusiveStartTime</code> must be before
              <code>ExclusiveEndTime</code>.</p> <p>If you provide an
              <code>InclusiveStartTime</code> that is before the ledger's
              <code>CreationDateTime</code>, Amazon QLDB defaults it to the
              ledger's <code>CreationDateTime</code>.</p>
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB
              permissions for a journal export job to do the following:</p> <ul>
              <li> <p>Write objects into your Amazon Simple Storage Service
              (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer
              master key (CMK) in Key Management Service (KMS) for server-side
              encryption of your exported data.</p> </li> </ul>
      S3ExportConfiguration:
        allOf:
          - $ref: '#/definitions/S3ExportConfiguration'
          - description: >-
              The configuration settings of the Amazon S3 bucket destination for
              your export request.
    required:
      - InclusiveStartTime
      - ExclusiveEndTime
      - S3ExportConfiguration
      - RoleArn
    title: ExportJournalToS3Request
    type: object
  ExportJournalToS3Response:
    properties:
      ExportId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              <p>The UUID (represented in Base62-encoded text) that QLDB assigns
              to each journal export job.</p> <p>To describe your export request
              and check the status of the job, you can use <code>ExportId</code>
              to call <code>DescribeJournalS3Export</code>.</p>
    required:
      - ExportId
    type: object
  ExportStatus:
    enum:
      - IN_PROGRESS
      - COMPLETED
      - CANCELLED
    type: string
  GetBlockRequest:
    properties:
      BlockAddress:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              <p>The location of the block that you want to request. An address
              is an Amazon Ion structure that has two fields:
              <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For
              example:
              <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code>.</p>
      DigestTipAddress:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              <p>The latest block location covered by the digest for which to
              request a proof. An address is an Amazon Ion structure that has
              two fields: <code>strandId</code> and <code>sequenceNo</code>.</p>
              <p>For example:
              <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code>.</p>
    required:
      - BlockAddress
    title: GetBlockRequest
    type: object
  GetBlockResponse:
    properties:
      Block:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: The block data object in Amazon Ion format.
      Proof:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              The proof object in Amazon Ion format returned by a
              <code>GetBlock</code> request. A proof contains the list of hash
              values required to recalculate the specified digest using a Merkle
              tree, starting with the specified block.
    required:
      - Block
    type: object
  GetDigestRequest:
    properties: {}
    title: GetDigestRequest
    type: object
  GetDigestResponse:
    properties:
      Digest:
        allOf:
          - $ref: '#/definitions/Digest'
          - description: >-
              The 256-bit hash value representing the digest returned by a
              <code>GetDigest</code> request.
      DigestTipAddress:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              The latest block location covered by the digest that you
              requested. An address is an Amazon Ion structure that has two
              fields: <code>strandId</code> and <code>sequenceNo</code>.
    required:
      - Digest
      - DigestTipAddress
    type: object
  GetRevisionRequest:
    properties:
      BlockAddress:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              <p>The block location of the document revision to be verified. An
              address is an Amazon Ion structure that has two fields:
              <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For
              example:
              <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code>.</p>
      DigestTipAddress:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              <p>The latest block location covered by the digest for which to
              request a proof. An address is an Amazon Ion structure that has
              two fields: <code>strandId</code> and <code>sequenceNo</code>.</p>
              <p>For example:
              <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code>.</p>
      DocumentId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              The UUID (represented in Base62-encoded text) of the document to
              be verified.
    required:
      - BlockAddress
      - DocumentId
    title: GetRevisionRequest
    type: object
  GetRevisionResponse:
    properties:
      Proof:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: >-
              The proof object in Amazon Ion format returned by a
              <code>GetRevision</code> request. A proof contains the list of
              hash values that are required to recalculate the specified digest
              using a Merkle tree, starting with the specified document
              revision.
      Revision:
        allOf:
          - $ref: '#/definitions/ValueHolder'
          - description: The document revision data object in Amazon Ion format.
    required:
      - Revision
    type: object
  InvalidParameterException: {}
  IonText:
    format: password
    maxLength: 1048576
    minLength: 1
    type: string
  JournalKinesisStreamDescription:
    description: >-
      Information about an Amazon QLDB journal stream, including the Amazon
      Resource Name (ARN), stream name, creation time, current status, and the
      parameters of the original stream creation request.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the QLDB journal stream.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the QLDB journal
              stream was created. (Epoch time format is the number of seconds
              elapsed since 12:00:00 AM January 1, 1970 UTC.)
      ErrorCause:
        allOf:
          - $ref: '#/definitions/ErrorCause'
          - description: >-
              The error message that describes the reason that a stream has a
              status of <code>IMPAIRED</code> or <code>FAILED</code>. This is
              not applicable to streams that have other status values.
      ExclusiveEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The exclusive date and time that specifies when the stream ends.
              If this parameter is undefined, the stream runs indefinitely until
              you cancel it.
      InclusiveStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The inclusive start date and time from which to start streaming
              journal data.
      KinesisConfiguration:
        allOf:
          - $ref: '#/definitions/KinesisConfiguration'
          - description: >-
              The configuration settings of the Amazon Kinesis Data Streams
              destination for a QLDB journal stream.
      LedgerName:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role that grants QLDB
              permissions for a journal stream to write data records to a
              Kinesis Data Streams resource.
      Status:
        allOf:
          - $ref: '#/definitions/StreamStatus'
          - description: The current state of the QLDB journal stream.
      StreamId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              The UUID (represented in Base62-encoded text) of the QLDB journal
              stream.
      StreamName:
        allOf:
          - $ref: '#/definitions/StreamName'
          - description: The user-defined name of the QLDB journal stream.
    required:
      - LedgerName
      - RoleArn
      - StreamId
      - Status
      - KinesisConfiguration
      - StreamName
    type: object
  JournalKinesisStreamDescriptionList:
    items:
      $ref: '#/definitions/JournalKinesisStreamDescription'
    type: array
  JournalS3ExportDescription:
    description: >-
      Information about a journal export job, including the ledger name, export
      ID, creation time, current status, and the parameters of the original
      export creation request.
    properties:
      ExclusiveEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The exclusive end date and time for the range of journal contents
              that are specified in the original export request.
      ExportCreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the export job was
              created. (Epoch time format is the number of seconds elapsed since
              12:00:00 AM January 1, 1970 UTC.)
      ExportId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              The UUID (represented in Base62-encoded text) of the journal
              export job.
      InclusiveStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The inclusive start date and time for the range of journal
              contents that are specified in the original export request.
      LedgerName:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB
              permissions for a journal export job to do the following:</p> <ul>
              <li> <p>Write objects into your Amazon Simple Storage Service
              (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer
              master key (CMK) in Key Management Service (KMS) for server-side
              encryption of your exported data.</p> </li> </ul>
      S3ExportConfiguration:
        $ref: '#/definitions/S3ExportConfiguration'
      Status:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: The current state of the journal export job.
    required:
      - LedgerName
      - ExportId
      - ExportCreationTime
      - Status
      - InclusiveStartTime
      - ExclusiveEndTime
      - S3ExportConfiguration
      - RoleArn
    type: object
  JournalS3ExportList:
    items:
      $ref: '#/definitions/JournalS3ExportDescription'
    type: array
  KinesisConfiguration:
    description: >-
      The configuration settings of the Amazon Kinesis Data Streams destination
      for an Amazon QLDB journal stream.
    properties:
      AggregationEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Enables QLDB to publish multiple data records in a single
              Kinesis Data Streams record, increasing the number of records sent
              per API call.</p> <p> <i>This option is enabled by default.</i>
              Record aggregation has important implications for processing
              records and requires de-aggregation in your stream consumer. To
              learn more, see <a
              href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html">KPL
              Key Concepts</a> and <a
              href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html">Consumer
              De-aggregation</a> in the <i>Amazon Kinesis Data Streams Developer
              Guide</i>.</p>
      StreamArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Kinesis Data Streams
              resource.
    required:
      - StreamArn
    type: object
  KmsKey:
    maxLength: 1600
    type: string
  LedgerEncryptionDescription:
    description: >-
      <p>Information about the encryption of data at rest in an Amazon QLDB
      ledger. This includes the current status, the key in Key Management
      Service (KMS), and when the key became inaccessible (in the case of an
      error).</p> <p>For more information, see <a
      href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption
      at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
    properties:
      EncryptionStatus:
        allOf:
          - $ref: '#/definitions/EncryptionStatus'
          - description: >-
              <p>The current state of encryption at rest for the ledger. This
              can be one of the following values:</p> <ul> <li> <p>
              <code>ENABLED</code>: Encryption is fully enabled using the
              specified key.</p> </li> <li> <p> <code>UPDATING</code>: The
              ledger is actively processing the specified key change.</p> <p>Key
              changes in QLDB are asynchronous. The ledger is fully accessible
              without any performance impact while the key change is being
              processed. The amount of time it takes to update a key varies
              depending on the ledger size.</p> </li> <li> <p>
              <code>KMS_KEY_INACCESSIBLE</code>: The specified customer managed
              KMS key is not accessible, and the ledger is impaired. Either the
              key was disabled or deleted, or the grants on the key were
              revoked. When a ledger is impaired, it is not accessible and does
              not accept any read or write requests.</p> <p>An impaired ledger
              automatically returns to an active state after you restore the
              grants on the key, or re-enable the key that was disabled.
              However, deleting a customer managed KMS key is irreversible.
              After a key is deleted, you can no longer access the ledgers that
              are protected with that key, and the data becomes unrecoverable
              permanently.</p> </li> </ul>
      InaccessibleKmsKeyDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              <p>The date and time, in epoch time format, when the KMS key first
              became inaccessible, in the case of an error. (Epoch time format
              is the number of seconds that have elapsed since 12:00:00 AM
              January 1, 1970 UTC.)</p> <p>This parameter is undefined if the
              KMS key is accessible.</p>
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the customer managed KMS key
              that the ledger uses for encryption at rest. If this parameter is
              undefined, the ledger uses an Amazon Web Services owned KMS key
              for encryption.
    required:
      - KmsKeyArn
      - EncryptionStatus
    type: object
  LedgerList:
    items:
      $ref: '#/definitions/LedgerSummary'
    type: array
  LedgerName:
    maxLength: 32
    minLength: 1
    pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
    type: string
  LedgerState:
    enum:
      - CREATING
      - ACTIVE
      - DELETING
      - DELETED
    type: string
  LedgerSummary:
    description: >-
      Information about a ledger, including its name, state, and when it was
      created.
    properties:
      CreationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the ledger was
              created. (Epoch time format is the number of seconds elapsed since
              12:00:00 AM January 1, 1970 UTC.)
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      State:
        allOf:
          - $ref: '#/definitions/LedgerState'
          - description: The current status of the ledger.
    type: object
  LimitExceededException: {}
  ListJournalKinesisStreamsForLedgerRequest:
    properties: {}
    title: ListJournalKinesisStreamsForLedgerRequest
    type: object
  ListJournalKinesisStreamsForLedgerResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <ul> <li> <p>If <code>NextToken</code> is empty, the last page of
              results has been processed and there are no more results to be
              retrieved.</p> </li> <li> <p>If <code>NextToken</code> is
              <i>not</i> empty, more results are available. To retrieve the next
              page of results, use the value of <code>NextToken</code> in a
              subsequent <code>ListJournalKinesisStreamsForLedger</code>
              call.</p> </li> </ul>
      Streams:
        allOf:
          - $ref: '#/definitions/JournalKinesisStreamDescriptionList'
          - description: >-
              The array of QLDB journal stream descriptors that are associated
              with the given ledger.
    type: object
  ListJournalS3ExportsForLedgerRequest:
    properties: {}
    title: ListJournalS3ExportsForLedgerRequest
    type: object
  ListJournalS3ExportsForLedgerResponse:
    properties:
      JournalS3Exports:
        allOf:
          - $ref: '#/definitions/JournalS3ExportList'
          - description: >-
              The array of journal export job descriptions that are associated
              with the specified ledger.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <ul> <li> <p>If <code>NextToken</code> is empty, then the last
              page of results has been processed and there are no more results
              to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is
              <i>not</i> empty, then there are more results available. To
              retrieve the next page of results, use the value of
              <code>NextToken</code> in a subsequent
              <code>ListJournalS3ExportsForLedger</code> call.</p> </li> </ul>
    type: object
  ListJournalS3ExportsRequest:
    properties: {}
    title: ListJournalS3ExportsRequest
    type: object
  ListJournalS3ExportsResponse:
    properties:
      JournalS3Exports:
        allOf:
          - $ref: '#/definitions/JournalS3ExportList'
          - description: >-
              The array of journal export job descriptions for all ledgers that
              are associated with the current account and Region.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <ul> <li> <p>If <code>NextToken</code> is empty, then the last
              page of results has been processed and there are no more results
              to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is
              <i>not</i> empty, then there are more results available. To
              retrieve the next page of results, use the value of
              <code>NextToken</code> in a subsequent
              <code>ListJournalS3Exports</code> call.</p> </li> </ul>
    type: object
  ListLedgersRequest:
    properties: {}
    title: ListLedgersRequest
    type: object
  ListLedgersResponse:
    properties:
      Ledgers:
        allOf:
          - $ref: '#/definitions/LedgerList'
          - description: >-
              The array of ledger summaries that are associated with the current
              account and Region.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              <p>A pagination token, indicating whether there are more results
              available:</p> <ul> <li> <p>If <code>NextToken</code> is empty,
              then the last page of results has been processed and there are no
              more results to be retrieved.</p> </li> <li> <p>If
              <code>NextToken</code> is <i>not</i> empty, then there are more
              results available. To retrieve the next page of results, use the
              value of <code>NextToken</code> in a subsequent
              <code>ListLedgers</code> call.</p> </li> </ul>
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The tags that are currently associated with the specified Amazon
              QLDB resource.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  NextToken:
    maxLength: 1024
    minLength: 4
    pattern: '^[A-Za-z-0-9+/=]+$'
    type: string
  PermissionsMode:
    enum:
      - ALLOW_ALL
      - STANDARD
    type: string
  ResourceAlreadyExistsException: {}
  ResourceInUseException: {}
  ResourceNotFoundException: {}
  ResourcePreconditionNotMetException: {}
  S3Bucket:
    maxLength: 255
    minLength: 3
    pattern: '^[A-Za-z-0-9-_.]+$'
    type: string
  S3EncryptionConfiguration:
    description: >-
      The encryption settings that are used by a journal export job to write
      data in an Amazon Simple Storage Service (Amazon S3) bucket.
    properties:
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              <p>The Amazon Resource Name (ARN) of a symmetric customer master
              key (CMK) in Key Management Service (KMS). Amazon S3 does not
              support asymmetric CMKs.</p> <p>You must provide a
              <code>KmsKeyArn</code> if you specify <code>SSE_KMS</code> as the
              <code>ObjectEncryptionType</code>.</p> <p> <code>KmsKeyArn</code>
              is not required if you specify <code>SSE_S3</code> as the
              <code>ObjectEncryptionType</code>.</p>
      ObjectEncryptionType:
        allOf:
          - $ref: '#/definitions/S3ObjectEncryptionType'
          - description: >-
              <p>The Amazon S3 object encryption type.</p> <p>To learn more
              about server-side encryption options in Amazon S3, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting
              Data Using Server-Side Encryption</a> in the <i>Amazon S3
              Developer Guide</i>.</p>
    required:
      - ObjectEncryptionType
    type: object
  S3ExportConfiguration:
    description: >-
      The Amazon Simple Storage Service (Amazon S3) bucket location in which a
      journal export job writes the journal contents.
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/S3Bucket'
          - description: >-
              <p>The Amazon S3 bucket name in which a journal export job writes
              the journal contents.</p> <p>The bucket name must comply with the
              Amazon S3 bucket naming conventions. For more information, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket
              Restrictions and Limitations</a> in the <i>Amazon S3 Developer
              Guide</i>.</p>
      EncryptionConfiguration:
        allOf:
          - $ref: '#/definitions/S3EncryptionConfiguration'
          - description: >-
              The encryption settings that are used by a journal export job to
              write data in an Amazon S3 bucket.
      Prefix:
        allOf:
          - $ref: '#/definitions/S3Prefix'
          - description: >-
              <p>The prefix for the Amazon S3 bucket in which a journal export
              job writes the journal contents.</p> <p>The prefix must comply
              with Amazon S3 key naming rules and restrictions. For more
              information, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object
              Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p>
              <p>The following are examples of valid <code>Prefix</code>
              values:</p> <ul> <li> <p>
              <code>JournalExports-ForMyLedger/Testing/</code> </p> </li> <li>
              <p> <code>JournalExports</code> </p> </li> <li> <p>
              <code>My:Tests/</code> </p> </li> </ul>
    required:
      - Bucket
      - Prefix
      - EncryptionConfiguration
    type: object
  S3ObjectEncryptionType:
    enum:
      - SSE_KMS
      - SSE_S3
      - NO_ENCRYPTION
    type: string
  S3Prefix:
    maxLength: 128
    minLength: 0
    type: string
  StreamJournalToKinesisRequest:
    properties:
      ExclusiveEndTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              <p>The exclusive date and time that specifies when the stream
              ends. If you don't define this parameter, the stream runs
              indefinitely until you cancel it.</p> <p>The
              <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code>
              date and time format and in Universal Coordinated Time (UTC). For
              example: <code>2019-06-13T21:36:34Z</code>.</p>
      InclusiveStartTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              <p>The inclusive start date and time from which to start streaming
              journal data. This parameter must be in <code>ISO 8601</code> date
              and time format and in Universal Coordinated Time (UTC). For
              example: <code>2019-06-13T21:36:34Z</code>.</p> <p>The
              <code>InclusiveStartTime</code> cannot be in the future and must
              be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an
              <code>InclusiveStartTime</code> that is before the ledger's
              <code>CreationDateTime</code>, QLDB effectively defaults it to the
              ledger's <code>CreationDateTime</code>.</p>
      KinesisConfiguration:
        allOf:
          - $ref: '#/definitions/KinesisConfiguration'
          - description: >-
              The configuration settings of the Kinesis Data Streams destination
              for your stream request.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role that grants QLDB
              permissions for a journal stream to write data records to a
              Kinesis Data Streams resource.
      StreamName:
        allOf:
          - $ref: '#/definitions/StreamName'
          - description: >-
              <p>The name that you want to assign to the QLDB journal stream.
              User-defined names can help identify and indicate the purpose of a
              stream.</p> <p>Your stream name must be unique among other
              <i>active</i> streams for a given ledger. Stream names have the
              same naming constraints as ledger names, as defined in <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
              in Amazon QLDB</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The key-value pairs to add as tags to the stream that you want to
              create. Tag keys are case sensitive. Tag values are case sensitive
              and can be null.
    required:
      - RoleArn
      - InclusiveStartTime
      - KinesisConfiguration
      - StreamName
    title: StreamJournalToKinesisRequest
    type: object
  StreamJournalToKinesisResponse:
    properties:
      StreamId:
        allOf:
          - $ref: '#/definitions/UniqueId'
          - description: >-
              The UUID (represented in Base62-encoded text) that QLDB assigns to
              each QLDB journal stream.
    type: object
  StreamName:
    maxLength: 32
    minLength: 1
    pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
    type: string
  StreamStatus:
    enum:
      - ACTIVE
      - COMPLETED
      - CANCELED
      - FAILED
      - IMPAIRED
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/Tags'
          - description: >-
              The key-value pairs to add as tags to the specified QLDB resource.
              Tag keys are case sensitive. If you specify a key that already
              exists for the resource, your request fails and returns an error.
              Tag values are case sensitive and can be null.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 200
    minProperties: 0
    type: object
  Timestamp:
    format: date-time
    type: string
  UniqueId:
    maxLength: 22
    minLength: 22
    pattern: '^[A-Za-z-0-9]+$'
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateLedgerPermissionsModeRequest:
    properties:
      PermissionsMode:
        allOf:
          - $ref: '#/definitions/PermissionsMode'
          - description: >-
              <p>The permissions mode to assign to the ledger. This parameter
              can have one of the following values:</p> <ul> <li> <p>
              <code>ALLOW_ALL</code>: A legacy permissions mode that enables
              access control with API-level granularity for ledgers.</p> <p>This
              mode allows users who have the <code>SendCommand</code> API
              permission for this ledger to run all PartiQL commands (hence,
              <code>ALLOW_ALL</code>) on any tables in the specified ledger.
              This mode disregards any table-level or command-level IAM
              permissions policies that you create for the ledger.</p> </li>
              <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A permissions
              mode that enables access control with finer granularity for
              ledgers, tables, and PartiQL commands.</p> <p>By default, this
              mode denies all user requests to run any PartiQL commands on any
              tables in this ledger. To allow PartiQL commands to run, you must
              create IAM permissions policies for specific table resources and
              PartiQL actions, in addition to the <code>SendCommand</code> API
              permission for the ledger. For information, see <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting
              started with the standard permissions mode</a> in the <i>Amazon
              QLDB Developer Guide</i>.</p> </li> </ul> <note> <p>We strongly
              recommend using the <code>STANDARD</code> permissions mode to
              maximize the security of your ledger data.</p> </note>
    required:
      - PermissionsMode
    title: UpdateLedgerPermissionsModeRequest
    type: object
  UpdateLedgerPermissionsModeResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      PermissionsMode:
        allOf:
          - $ref: '#/definitions/PermissionsMode'
          - description: The current permissions mode of the ledger.
    type: object
  UpdateLedgerRequest:
    properties:
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/DeletionProtection'
          - description: >-
              <p>The flag that prevents a ledger from being deleted by any user.
              If not provided on ledger creation, this feature is enabled
              (<code>true</code>) by default.</p> <p>If deletion protection is
              enabled, you must first disable it before you can delete the
              ledger. You can disable it by calling the
              <code>UpdateLedger</code> operation to set the flag to
              <code>false</code>.</p>
      KmsKey:
        allOf:
          - $ref: '#/definitions/KmsKey'
          - description: >-
              <p>The key in Key Management Service (KMS) to use for encryption
              of data at rest in the ledger. For more information, see <a
              href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption
              at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>Use
              one of the following options to specify this parameter:</p> <ul>
              <li> <p> <code>AWS_OWNED_KMS_KEY</code>: Use an KMS key that is
              owned and managed by Amazon Web Services on your behalf.</p> </li>
              <li> <p> <b>Undefined</b>: Make no changes to the KMS key of the
              ledger.</p> </li> <li> <p> <b>A valid symmetric customer managed
              KMS key</b>: Use the specified KMS key in your account that you
              create, own, and manage.</p> <p>Amazon QLDB does not support
              asymmetric keys. For more information, see <a
              href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
              symmetric and asymmetric keys</a> in the <i>Key Management Service
              Developer Guide</i>.</p> </li> </ul> <p>To specify a customer
              managed KMS key, you can use its key ID, Amazon Resource Name
              (ARN), alias name, or alias ARN. When using an alias name, prefix
              it with <code>"alias/"</code>. To specify a key in a different
              account, you must use the key ARN or alias ARN.</p> <p>For
              example:</p> <ul> <li> <p>Key ID:
              <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li>
              <p>Key ARN:
              <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
              </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code>
              </p> </li> <li> <p>Alias ARN:
              <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
              </p> </li> </ul> <p>For more information, see <a
              href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key
              identifiers (KeyId)</a> in the <i>Key Management Service Developer
              Guide</i>.</p>
    title: UpdateLedgerRequest
    type: object
  UpdateLedgerResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the ledger.
      CreationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The date and time, in epoch time format, when the ledger was
              created. (Epoch time format is the number of seconds elapsed since
              12:00:00 AM January 1, 1970 UTC.)
      DeletionProtection:
        allOf:
          - $ref: '#/definitions/DeletionProtection'
          - description: >-
              <p>The flag that prevents a ledger from being deleted by any user.
              If not provided on ledger creation, this feature is enabled
              (<code>true</code>) by default.</p> <p>If deletion protection is
              enabled, you must first disable it before you can delete the
              ledger. You can disable it by calling the
              <code>UpdateLedger</code> operation to set the flag to
              <code>false</code>.</p>
      EncryptionDescription:
        allOf:
          - $ref: '#/definitions/LedgerEncryptionDescription'
          - description: >-
              Information about the encryption of data at rest in the ledger.
              This includes the current status, the KMS key, and when the key
              became inaccessible (in the case of an error).
      Name:
        allOf:
          - $ref: '#/definitions/LedgerName'
          - description: The name of the ledger.
      State:
        allOf:
          - $ref: '#/definitions/LedgerState'
          - description: The current status of the ledger.
    type: object
  ValueHolder:
    description: A structure that can contain a value in multiple encoding formats.
    properties:
      IonText:
        allOf:
          - $ref: '#/definitions/IonText'
          - description: >-
              An Amazon Ion plaintext value contained in a
              <code>ValueHolder</code> structure.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/qldb/'
host: qldb.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: The control plane for Amazon QLDB
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon QLDB
  version: '2019-01-02'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: qldb
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-2019-01-02.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: qldb
paths:
  /journal-s3-exports:
    get:
      description: >-
        <p>Returns an array of journal export job descriptions for all ledgers
        that are associated with the current account and Region.</p> <p>This
        action returns a maximum of <code>MaxResults</code> items, and is
        paginated so that you can retrieve all the items by calling
        <code>ListJournalS3Exports</code> multiple times.</p> <p>This action
        does not return any expired export jobs. For more information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export
        job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
      operationId: ListJournalS3Exports
      parameters:
        - description: >-
            The maximum number of results to return in a single
            <code>ListJournalS3Exports</code> request. (The actual number of
            results returned might be fewer.)
          in: query
          maximum: 100
          minimum: 1
          name: max_results
          required: false
          type: integer
        - description: >-
            A pagination token, indicating that you want to retrieve the next
            page of results. If you received a value for <code>NextToken</code>
            in the response from a previous <code>ListJournalS3Exports</code>
            call, then you should use that value as input here.
          in: query
          maxLength: 1024
          minLength: 4
          name: next_token
          pattern: '^[A-Za-z-0-9+/=]+$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJournalS3ExportsResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /ledgers:
    get:
      description: >-
        <p>Returns an array of ledger summaries that are associated with the
        current account and Region.</p> <p>This action returns a maximum of 100
        items and is paginated so that you can retrieve all the items by calling
        <code>ListLedgers</code> multiple times.</p>
      operationId: ListLedgers
      parameters:
        - description: >-
            The maximum number of results to return in a single
            <code>ListLedgers</code> request. (The actual number of results
            returned might be fewer.)
          in: query
          maximum: 100
          minimum: 1
          name: max_results
          required: false
          type: integer
        - description: >-
            A pagination token, indicating that you want to retrieve the next
            page of results. If you received a value for <code>NextToken</code>
            in the response from a previous <code>ListLedgers</code> call, then
            you should use that value as input here.
          in: query
          maxLength: 1024
          minLength: 4
          name: next_token
          pattern: '^[A-Za-z-0-9+/=]+$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLedgersResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new ledger in your account in the current Region.
      operationId: CreateLedger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DeletionProtection:
                description: >-
                  <p>The flag that prevents a ledger from being deleted by any
                  user. If not provided on ledger creation, this feature is
                  enabled (<code>true</code>) by default.</p> <p>If deletion
                  protection is enabled, you must first disable it before you
                  can delete the ledger. You can disable it by calling the
                  <code>UpdateLedger</code> operation to set the flag to
                  <code>false</code>.</p>
                type: boolean
              KmsKey:
                description: >-
                  <p>The key in Key Management Service (KMS) to use for
                  encryption of data at rest in the ledger. For more
                  information, see <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption
                  at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
                  <p>Use one of the following options to specify this
                  parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>:
                  Use an KMS key that is owned and managed by Amazon Web
                  Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>:
                  By default, use an Amazon Web Services owned KMS key.</p>
                  </li> <li> <p> <b>A valid symmetric customer managed KMS
                  key</b>: Use the specified KMS key in your account that you
                  create, own, and manage.</p> <p>Amazon QLDB does not support
                  asymmetric keys. For more information, see <a
                  href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
                  symmetric and asymmetric keys</a> in the <i>Key Management
                  Service Developer Guide</i>.</p> </li> </ul> <p>To specify a
                  customer managed KMS key, you can use its key ID, Amazon
                  Resource Name (ARN), alias name, or alias ARN. When using an
                  alias name, prefix it with <code>"alias/"</code>. To specify a
                  key in a different account, you must use the key ARN or alias
                  ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID:
                  <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li>
                  <li> <p>Key ARN:
                  <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
                  </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code>
                  </p> </li> <li> <p>Alias ARN:
                  <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
                  </p> </li> </ul> <p>For more information, see <a
                  href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key
                  identifiers (KeyId)</a> in the <i>Key Management Service
                  Developer Guide</i>.</p>
                maxLength: 1600
                type: string
              Name:
                description: >-
                  <p>The name of the ledger that you want to create. The name
                  must be unique among all of the ledgers in your account in the
                  current Region.</p> <p>Naming constraints for ledger names are
                  defined in <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
                  in Amazon QLDB</a> in the <i>Amazon QLDB Developer
                  Guide</i>.</p>
                maxLength: 32
                minLength: 1
                pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
                type: string
              PermissionsMode:
                description: >-
                  <p>The permissions mode to assign to the ledger that you want
                  to create. This parameter can have one of the following
                  values:</p> <ul> <li> <p> <code>ALLOW_ALL</code>: A legacy
                  permissions mode that enables access control with API-level
                  granularity for ledgers.</p> <p>This mode allows users who
                  have the <code>SendCommand</code> API permission for this
                  ledger to run all PartiQL commands (hence,
                  <code>ALLOW_ALL</code>) on any tables in the specified ledger.
                  This mode disregards any table-level or command-level IAM
                  permissions policies that you create for the ledger.</p> </li>
                  <li> <p> <code>STANDARD</code>: (<i>Recommended</i>) A
                  permissions mode that enables access control with finer
                  granularity for ledgers, tables, and PartiQL commands.</p>
                  <p>By default, this mode denies all user requests to run any
                  PartiQL commands on any tables in this ledger. To allow
                  PartiQL commands to run, you must create IAM permissions
                  policies for specific table resources and PartiQL actions, in
                  addition to the <code>SendCommand</code> API permission for
                  the ledger. For information, see <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting
                  started with the standard permissions mode</a> in the
                  <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note>
                  <p>We strongly recommend using the <code>STANDARD</code>
                  permissions mode to maximize the security of your ledger
                  data.</p> </note>
                enum:
                  - ALLOW_ALL
                  - STANDARD
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The key-value pairs to add as tags to the ledger that you want
                  to create. Tag keys are case sensitive. Tag values are case
                  sensitive and can be null.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - Name
              - PermissionsMode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLedgerResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/ledgers/{name}':
    delete:
      description: >-
        <p>Deletes a ledger and all of its contents. This action is
        irreversible.</p> <p>If deletion protection is enabled, you must first
        disable it before you can delete the ledger. You can disable it by
        calling the <code>UpdateLedger</code> operation to set the flag to
        <code>false</code>.</p>
      operationId: DeleteLedger
      parameters:
        - description: The name of the ledger that you want to delete.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
    get:
      description: >-
        Returns information about a ledger, including its state, permissions
        mode, encryption at rest settings, and when it was created.
      operationId: DescribeLedger
      parameters:
        - description: The name of the ledger that you want to describe.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLedgerResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: Updates properties on a ledger.
      operationId: UpdateLedger
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DeletionProtection:
                description: >-
                  <p>The flag that prevents a ledger from being deleted by any
                  user. If not provided on ledger creation, this feature is
                  enabled (<code>true</code>) by default.</p> <p>If deletion
                  protection is enabled, you must first disable it before you
                  can delete the ledger. You can disable it by calling the
                  <code>UpdateLedger</code> operation to set the flag to
                  <code>false</code>.</p>
                type: boolean
              KmsKey:
                description: >-
                  <p>The key in Key Management Service (KMS) to use for
                  encryption of data at rest in the ledger. For more
                  information, see <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption
                  at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
                  <p>Use one of the following options to specify this
                  parameter:</p> <ul> <li> <p> <code>AWS_OWNED_KMS_KEY</code>:
                  Use an KMS key that is owned and managed by Amazon Web
                  Services on your behalf.</p> </li> <li> <p> <b>Undefined</b>:
                  Make no changes to the KMS key of the ledger.</p> </li> <li>
                  <p> <b>A valid symmetric customer managed KMS key</b>: Use the
                  specified KMS key in your account that you create, own, and
                  manage.</p> <p>Amazon QLDB does not support asymmetric keys.
                  For more information, see <a
                  href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using
                  symmetric and asymmetric keys</a> in the <i>Key Management
                  Service Developer Guide</i>.</p> </li> </ul> <p>To specify a
                  customer managed KMS key, you can use its key ID, Amazon
                  Resource Name (ARN), alias name, or alias ARN. When using an
                  alias name, prefix it with <code>"alias/"</code>. To specify a
                  key in a different account, you must use the key ARN or alias
                  ARN.</p> <p>For example:</p> <ul> <li> <p>Key ID:
                  <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li>
                  <li> <p>Key ARN:
                  <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
                  </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code>
                  </p> </li> <li> <p>Alias ARN:
                  <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
                  </p> </li> </ul> <p>For more information, see <a
                  href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id">Key
                  identifiers (KeyId)</a> in the <i>Key Management Service
                  Developer Guide</i>.</p>
                maxLength: 1600
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLedgerResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/ledgers/{name}/block':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Returns a block object at a specified address in a journal. Also
        returns a proof of the specified block for verification if
        <code>DigestTipAddress</code> is provided.</p> <p>For information about
        the data contents in a block, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/journal-contents.html">Journal
        contents</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>If the
        specified ledger doesn't exist or is in <code>DELETING</code> status,
        then throws <code>ResourceNotFoundException</code>.</p> <p>If the
        specified ledger is in <code>CREATING</code> status, then throws
        <code>ResourcePreconditionNotMetException</code>.</p> <p>If no block
        exists with the specified address, then throws
        <code>InvalidParameterException</code>.</p>
      operationId: GetBlock
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BlockAddress:
                description: >-
                  A structure that can contain a value in multiple encoding
                  formats.
                properties:
                  IonText:
                    allOf:
                      - $ref: '#/definitions/IonText'
                      - description: >-
                          An Amazon Ion plaintext value contained in a
                          <code>ValueHolder</code> structure.
                type: object
              DigestTipAddress:
                description: >-
                  A structure that can contain a value in multiple encoding
                  formats.
                properties:
                  IonText:
                    allOf:
                      - $ref: '#/definitions/IonText'
                      - description: >-
                          An Amazon Ion plaintext value contained in a
                          <code>ValueHolder</code> structure.
                type: object
            required:
              - BlockAddress
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBlockResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
  '/ledgers/{name}/digest':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Returns the digest of a ledger at the latest committed block in the
        journal. The response includes a 256-bit hash value and a block address.
      operationId: GetDigest
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDigestResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
  '/ledgers/{name}/journal-kinesis-streams':
    get:
      description: >-
        <p>Returns an array of all Amazon QLDB journal stream descriptors for a
        given ledger. The output of each stream descriptor includes the same
        details that are returned by
        <code>DescribeJournalKinesisStream</code>.</p> <p>This action does not
        return any expired journal streams. For more information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration">Expiration
        for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
        <p>This action returns a maximum of <code>MaxResults</code> items. It is
        paginated so that you can retrieve all the items by calling
        <code>ListJournalKinesisStreamsForLedger</code> multiple times.</p>
      operationId: ListJournalKinesisStreamsForLedger
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - description: >-
            The maximum number of results to return in a single
            <code>ListJournalKinesisStreamsForLedger</code> request. (The actual
            number of results returned might be fewer.)
          in: query
          maximum: 100
          minimum: 1
          name: max_results
          required: false
          type: integer
        - description: >-
            A pagination token, indicating that you want to retrieve the next
            page of results. If you received a value for <code>NextToken</code>
            in the response from a previous
            <code>ListJournalKinesisStreamsForLedger</code> call, you should use
            that value as input here.
          in: query
          maxLength: 1024
          minLength: 4
          name: next_token
          pattern: '^[A-Za-z-0-9+/=]+$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJournalKinesisStreamsForLedgerResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a journal stream for a given Amazon QLDB ledger. The stream
        captures every document revision that is committed to the ledger's
        journal and delivers the data to a specified Amazon Kinesis Data Streams
        resource.
      operationId: StreamJournalToKinesis
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ExclusiveEndTime:
                description: >-
                  <p>The exclusive date and time that specifies when the stream
                  ends. If you don't define this parameter, the stream runs
                  indefinitely until you cancel it.</p> <p>The
                  <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code>
                  date and time format and in Universal Coordinated Time (UTC).
                  For example: <code>2019-06-13T21:36:34Z</code>.</p>
                format: date-time
                type: string
              InclusiveStartTime:
                description: >-
                  <p>The inclusive start date and time from which to start
                  streaming journal data. This parameter must be in <code>ISO
                  8601</code> date and time format and in Universal Coordinated
                  Time (UTC). For example:
                  <code>2019-06-13T21:36:34Z</code>.</p> <p>The
                  <code>InclusiveStartTime</code> cannot be in the future and
                  must be before <code>ExclusiveEndTime</code>.</p> <p>If you
                  provide an <code>InclusiveStartTime</code> that is before the
                  ledger's <code>CreationDateTime</code>, QLDB effectively
                  defaults it to the ledger's <code>CreationDateTime</code>.</p>
                format: date-time
                type: string
              KinesisConfiguration:
                description: >-
                  The configuration settings of the Amazon Kinesis Data Streams
                  destination for an Amazon QLDB journal stream.
                properties:
                  AggregationEnabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          <p>Enables QLDB to publish multiple data records in a
                          single Kinesis Data Streams record, increasing the
                          number of records sent per API call.</p> <p> <i>This
                          option is enabled by default.</i> Record aggregation
                          has important implications for processing records and
                          requires de-aggregation in your stream consumer. To
                          learn more, see <a
                          href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html">KPL
                          Key Concepts</a> and <a
                          href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html">Consumer
                          De-aggregation</a> in the <i>Amazon Kinesis Data
                          Streams Developer Guide</i>.</p>
                  StreamArn:
                    allOf:
                      - $ref: '#/definitions/Arn'
                      - description: >-
                          The Amazon Resource Name (ARN) of the Kinesis Data
                          Streams resource.
                type: object
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the IAM role that grants
                  QLDB permissions for a journal stream to write data records to
                  a Kinesis Data Streams resource.
                maxLength: 1600
                minLength: 20
                type: string
              StreamName:
                description: >-
                  <p>The name that you want to assign to the QLDB journal
                  stream. User-defined names can help identify and indicate the
                  purpose of a stream.</p> <p>Your stream name must be unique
                  among other <i>active</i> streams for a given ledger. Stream
                  names have the same naming constraints as ledger names, as
                  defined in <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming">Quotas
                  in Amazon QLDB</a> in the <i>Amazon QLDB Developer
                  Guide</i>.</p>
                maxLength: 32
                minLength: 1
                pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The key-value pairs to add as tags to the stream that you want
                  to create. Tag keys are case sensitive. Tag values are case
                  sensitive and can be null.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - RoleArn
              - InclusiveStartTime
              - KinesisConfiguration
              - StreamName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StreamJournalToKinesisResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
  '/ledgers/{name}/journal-kinesis-streams/{streamId}':
    delete:
      description: >-
        <p>Ends a given Amazon QLDB journal stream. Before a stream can be
        canceled, its current status must be <code>ACTIVE</code>.</p> <p>You
        can't restart a stream after you cancel it. Canceled QLDB stream
        resources are subject to a 7-day retention period, so they are
        automatically deleted after this limit expires.</p>
      operationId: CancelJournalKinesisStream
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - description: >-
            The UUID (represented in Base62-encoded text) of the QLDB journal
            stream to be canceled.
          in: path
          maxLength: 22
          minLength: 22
          name: streamId
          pattern: '^[A-Za-z-0-9]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelJournalKinesisStreamResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
    get:
      description: >-
        <p>Returns detailed information about a given Amazon QLDB journal
        stream. The output includes the Amazon Resource Name (ARN), stream name,
        current status, creation time, and the parameters of the original stream
        creation request.</p> <p>This action does not return any expired journal
        streams. For more information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/streams.create.html#streams.create.states.expiration">Expiration
        for terminal streams</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
      operationId: DescribeJournalKinesisStream
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - description: >-
            The UUID (represented in Base62-encoded text) of the QLDB journal
            stream to describe.
          in: path
          maxLength: 22
          minLength: 22
          name: streamId
          pattern: '^[A-Za-z-0-9]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJournalKinesisStreamResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/ledgers/{name}/journal-s3-exports':
    get:
      description: >-
        <p>Returns an array of journal export job descriptions for a specified
        ledger.</p> <p>This action returns a maximum of <code>MaxResults</code>
        items, and is paginated so that you can retrieve all the items by
        calling <code>ListJournalS3ExportsForLedger</code> multiple times.</p>
        <p>This action does not return any expired export jobs. For more
        information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export
        job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
      operationId: ListJournalS3ExportsForLedger
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - description: >-
            The maximum number of results to return in a single
            <code>ListJournalS3ExportsForLedger</code> request. (The actual
            number of results returned might be fewer.)
          in: query
          maximum: 100
          minimum: 1
          name: max_results
          required: false
          type: integer
        - description: >-
            A pagination token, indicating that you want to retrieve the next
            page of results. If you received a value for <code>NextToken</code>
            in the response from a previous
            <code>ListJournalS3ExportsForLedger</code> call, then you should use
            that value as input here.
          in: query
          maxLength: 1024
          minLength: 4
          name: next_token
          pattern: '^[A-Za-z-0-9+/=]+$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJournalS3ExportsForLedgerResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Exports journal contents within a date and time range from a ledger
        into a specified Amazon Simple Storage Service (Amazon S3) bucket. The
        data is written as files in Amazon Ion format.</p> <p>If the ledger with
        the given <code>Name</code> doesn't exist, then throws
        <code>ResourceNotFoundException</code>.</p> <p>If the ledger with the
        given <code>Name</code> is in <code>CREATING</code> status, then throws
        <code>ResourcePreconditionNotMetException</code>.</p> <p>You can
        initiate up to two concurrent journal export requests for each ledger.
        Beyond this limit, journal export requests throw
        <code>LimitExceededException</code>.</p>
      operationId: ExportJournalToS3
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ExclusiveEndTime:
                description: >-
                  <p>The exclusive end date and time for the range of journal
                  contents to export.</p> <p>The <code>ExclusiveEndTime</code>
                  must be in <code>ISO 8601</code> date and time format and in
                  Universal Coordinated Time (UTC). For example:
                  <code>2019-06-13T21:36:34Z</code>.</p> <p>The
                  <code>ExclusiveEndTime</code> must be less than or equal to
                  the current UTC date and time.</p>
                format: date-time
                type: string
              InclusiveStartTime:
                description: >-
                  <p>The inclusive start date and time for the range of journal
                  contents to export.</p> <p>The <code>InclusiveStartTime</code>
                  must be in <code>ISO 8601</code> date and time format and in
                  Universal Coordinated Time (UTC). For example:
                  <code>2019-06-13T21:36:34Z</code>.</p> <p>The
                  <code>InclusiveStartTime</code> must be before
                  <code>ExclusiveEndTime</code>.</p> <p>If you provide an
                  <code>InclusiveStartTime</code> that is before the ledger's
                  <code>CreationDateTime</code>, Amazon QLDB defaults it to the
                  ledger's <code>CreationDateTime</code>.</p>
                format: date-time
                type: string
              RoleArn:
                description: >-
                  <p>The Amazon Resource Name (ARN) of the IAM role that grants
                  QLDB permissions for a journal export job to do the
                  following:</p> <ul> <li> <p>Write objects into your Amazon
                  Simple Storage Service (Amazon S3) bucket.</p> </li> <li>
                  <p>(Optional) Use your customer master key (CMK) in Key
                  Management Service (KMS) for server-side encryption of your
                  exported data.</p> </li> </ul>
                maxLength: 1600
                minLength: 20
                type: string
              S3ExportConfiguration:
                description: >-
                  The Amazon Simple Storage Service (Amazon S3) bucket location
                  in which a journal export job writes the journal contents.
                properties:
                  Bucket:
                    allOf:
                      - $ref: '#/definitions/S3Bucket'
                      - description: >-
                          <p>The Amazon S3 bucket name in which a journal export
                          job writes the journal contents.</p> <p>The bucket
                          name must comply with the Amazon S3 bucket naming
                          conventions. For more information, see <a
                          href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket
                          Restrictions and Limitations</a> in the <i>Amazon S3
                          Developer Guide</i>.</p>
                  EncryptionConfiguration:
                    allOf:
                      - $ref: '#/definitions/S3EncryptionConfiguration'
                      - description: >-
                          The encryption settings that are used by a journal
                          export job to write data in an Amazon S3 bucket.
                  Prefix:
                    allOf:
                      - $ref: '#/definitions/S3Prefix'
                      - description: >-
                          <p>The prefix for the Amazon S3 bucket in which a
                          journal export job writes the journal contents.</p>
                          <p>The prefix must comply with Amazon S3 key naming
                          rules and restrictions. For more information, see <a
                          href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object
                          Key and Metadata</a> in the <i>Amazon S3 Developer
                          Guide</i>.</p> <p>The following are examples of valid
                          <code>Prefix</code> values:</p> <ul> <li> <p>
                          <code>JournalExports-ForMyLedger/Testing/</code> </p>
                          </li> <li> <p> <code>JournalExports</code> </p> </li>
                          <li> <p> <code>My:Tests/</code> </p> </li> </ul>
                type: object
            required:
              - InclusiveStartTime
              - ExclusiveEndTime
              - S3ExportConfiguration
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportJournalToS3Response'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
  '/ledgers/{name}/journal-s3-exports/{exportId}':
    get:
      description: >-
        <p>Returns information about a journal export job, including the ledger
        name, export ID, creation time, current status, and the parameters of
        the original export creation request.</p> <p>This action does not return
        any expired export jobs. For more information, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export
        job expiration</a> in the <i>Amazon QLDB Developer Guide</i>.</p> <p>If
        the export job with the given <code>ExportId</code> doesn't exist, then
        throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger with
        the given <code>Name</code> doesn't exist, then throws
        <code>ResourceNotFoundException</code>.</p>
      operationId: DescribeJournalS3Export
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - description: >-
            The UUID (represented in Base62-encoded text) of the journal export
            job to describe.
          in: path
          maxLength: 22
          minLength: 22
          name: exportId
          pattern: '^[A-Za-z-0-9]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJournalS3ExportResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/ledgers/{name}/permissions-mode':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        <p>Updates the permissions mode of a ledger.</p> <important> <p>Before
        you switch to the <code>STANDARD</code> permissions mode, you must first
        create all required IAM policies and table tags to avoid disruption to
        your users. To learn more, see <a
        href="https://docs.aws.amazon.com/qldb/latest/developerguide/ledger-management.basics.html#ledger-mgmt.basics.update-permissions.migrating">Migrating
        to the standard permissions mode</a> in the <i>Amazon QLDB Developer
        Guide</i>.</p> </important>
      operationId: UpdateLedgerPermissionsMode
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              PermissionsMode:
                description: >-
                  <p>The permissions mode to assign to the ledger. This
                  parameter can have one of the following values:</p> <ul> <li>
                  <p> <code>ALLOW_ALL</code>: A legacy permissions mode that
                  enables access control with API-level granularity for
                  ledgers.</p> <p>This mode allows users who have the
                  <code>SendCommand</code> API permission for this ledger to run
                  all PartiQL commands (hence, <code>ALLOW_ALL</code>) on any
                  tables in the specified ledger. This mode disregards any
                  table-level or command-level IAM permissions policies that you
                  create for the ledger.</p> </li> <li> <p>
                  <code>STANDARD</code>: (<i>Recommended</i>) A permissions mode
                  that enables access control with finer granularity for
                  ledgers, tables, and PartiQL commands.</p> <p>By default, this
                  mode denies all user requests to run any PartiQL commands on
                  any tables in this ledger. To allow PartiQL commands to run,
                  you must create IAM permissions policies for specific table
                  resources and PartiQL actions, in addition to the
                  <code>SendCommand</code> API permission for the ledger. For
                  information, see <a
                  href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-standard-mode.html">Getting
                  started with the standard permissions mode</a> in the
                  <i>Amazon QLDB Developer Guide</i>.</p> </li> </ul> <note>
                  <p>We strongly recommend using the <code>STANDARD</code>
                  permissions mode to maximize the security of your ledger
                  data.</p> </note>
                enum:
                  - ALLOW_ALL
                  - STANDARD
                type: string
            required:
              - PermissionsMode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLedgerPermissionsModeResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/ledgers/{name}/revision':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a revision data object for a specified document ID and block
        address. Also returns a proof of the specified revision for verification
        if <code>DigestTipAddress</code> is provided.
      operationId: GetRevision
      parameters:
        - description: The name of the ledger.
          in: path
          maxLength: 32
          minLength: 1
          name: name
          pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BlockAddress:
                description: >-
                  A structure that can contain a value in multiple encoding
                  formats.
                properties:
                  IonText:
                    allOf:
                      - $ref: '#/definitions/IonText'
                      - description: >-
                          An Amazon Ion plaintext value contained in a
                          <code>ValueHolder</code> structure.
                type: object
              DigestTipAddress:
                description: >-
                  A structure that can contain a value in multiple encoding
                  formats.
                properties:
                  IonText:
                    allOf:
                      - $ref: '#/definitions/IonText'
                      - description: >-
                          An Amazon Ion plaintext value contained in a
                          <code>ValueHolder</code> structure.
                type: object
              DocumentId:
                description: >-
                  The UUID (represented in Base62-encoded text) of the document
                  to be verified.
                maxLength: 22
                minLength: 22
                pattern: '^[A-Za-z-0-9]+$'
                type: string
            required:
              - BlockAddress
              - DocumentId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRevisionResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          schema:
            $ref: '#/definitions/ResourcePreconditionNotMetException'
  '/tags/{resourceArn}':
    get:
      description: Returns all tags for a specified Amazon QLDB resource.
      operationId: ListTagsForResource
      parameters:
        - description: >-
            <p>The Amazon Resource Name (ARN) for which to list the tags. For
            example:</p> <p>
            <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
            </p>
          in: path
          maxLength: 1600
          minLength: 20
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds one or more tags to a specified Amazon QLDB resource.</p> <p>A
        resource can have up to 50 tags. If you try to create more than 50 tags
        for a resource, your request fails and returns an error.</p>
      operationId: TagResource
      parameters:
        - description: >-
            <p>The Amazon Resource Name (ARN) to which you want to add the tags.
            For example:</p> <p>
            <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
            </p>
          in: path
          maxLength: 1600
          minLength: 20
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The key-value pairs to add as tags to the specified QLDB
                  resource. Tag keys are case sensitive. If you specify a key
                  that already exists for the resource, your request fails and
                  returns an error. Tag values are case sensitive and can be
                  null.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: >-
        Removes one or more tags from a specified Amazon QLDB resource. You can
        specify up to 50 tag keys to remove.
      operationId: UntagResource
      parameters:
        - description: >-
            <p>The Amazon Resource Name (ARN) from which to remove the tags. For
            example:</p> <p>
            <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code>
            </p>
          in: path
          maxLength: 1600
          minLength: 20
          name: resourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: The list of tag keys to remove.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 200
          minItems: 0
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

