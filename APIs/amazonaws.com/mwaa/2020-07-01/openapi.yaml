basePath: /
definitions:
  AccessDeniedException: {}
  AirflowConfigurationOptions:
    additionalProperties:
      $ref: '#/definitions/ConfigValue'
    type: object
  AirflowVersion:
    maxLength: 32
    minLength: 1
    pattern: '^[0-9a-z.]+$'
    type: string
  CloudWatchLogGroupArn:
    maxLength: 1224
    minLength: 1
    pattern: '^arn:aws(-[a-z]+)?:logs:[a-z0-9\-]+:\d{12}:log-group:\w+'
    type: string
  ConfigKey:
    maxLength: 64
    minLength: 1
    pattern: '^[a-z]+([a-z._]*[a-z]+)?$'
    type: string
  ConfigValue:
    maxLength: 256
    minLength: 1
    pattern: .*
    type: string
  CreateCliTokenRequest:
    properties: {}
    title: CreateCliTokenRequest
    type: object
  CreateCliTokenResponse:
    properties:
      CliToken:
        allOf:
          - $ref: '#/definitions/SyntheticCreateCliTokenResponseToken'
          - description: >-
              Create an Airflow CLI login token response for the provided JWT
              token.
      WebServerHostname:
        allOf:
          - $ref: '#/definitions/Hostname'
          - description: >-
              Create an Airflow CLI login token response for the provided
              webserver hostname.
    type: object
  CreateEnvironmentInput:
    description: >-
      This section contains the Amazon Managed Workflows for Apache Airflow
      (MWAA) API reference documentation to create an environment. For more
      information, see <a
      href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get
      started with Amazon Managed Workflows for Apache Airflow</a>.
    properties:
      AirflowConfigurationOptions:
        allOf:
          - $ref: >-
              #/definitions/SyntheticCreateEnvironmentInputAirflowConfigurationOptions
          - description: >-
              A list of key-value pairs containing the Apache Airflow
              configuration options you want to attach to your environment. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache
              Airflow configuration options</a>.
      AirflowVersion:
        allOf:
          - $ref: '#/definitions/AirflowVersion'
          - description: >-
              The Apache Airflow version for your environment. For example,
              <code>v1.10.12</code>. If no value is specified, defaults to the
              latest version. Valid values: <code>v1.10.12</code>.
      DagS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the DAGs folder on your Amazon S3 bucket. For
              example, <code>dags</code>. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding
              or updating DAGs</a>.
      EnvironmentClass:
        allOf:
          - $ref: '#/definitions/EnvironmentClass'
          - description: >-
              The environment class type. Valid values: <code>mw1.small</code>,
              <code>mw1.medium</code>, <code>mw1.large</code>. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon
              MWAA environment class</a>.
      ExecutionRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the execution role for your
              environment. An execution role is an AWS Identity and Access
              Management (IAM) role that grants MWAA permission to access AWS
              services and resources used by your environment. For example,
              <code>arn:aws:iam::123456789:role/my-execution-role</code>. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon
              MWAA Execution role</a>.
      KmsKey:
        allOf:
          - $ref: '#/definitions/KmsKey'
          - description: >-
              The AWS Key Management Service (KMS) key to encrypt the data in
              your environment. You can use an AWS owned CMK, or a Customer
              managed CMK (advanced). To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get
              started with Amazon Managed Workflows for Apache Airflow</a>.
      LoggingConfiguration:
        allOf:
          - $ref: '#/definitions/LoggingConfigurationInput'
          - description: >-
              Defines the Apache Airflow logs to send to CloudWatch Logs:
              <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
              <code>TaskLogs</code>, <code>WebserverLogs</code>,
              <code>WorkerLogs</code>.
      MaxWorkers:
        allOf:
          - $ref: '#/definitions/MaxWorkers'
          - description: >-
              The maximum number of workers that you want to run in your
              environment. MWAA scales the number of Apache Airflow workers up
              to the number you specify in the <code>MaxWorkers</code> field.
              For example, <code>20</code>. When there are no more tasks
              running, and no more in the queue, MWAA disposes of the extra
              workers leaving the one worker that is included with your
              environment, or the number you specify in <code>MinWorkers</code>.
      MinWorkers:
        allOf:
          - $ref: '#/definitions/MinWorkers'
          - description: >-
              The minimum number of workers that you want to run in your
              environment. MWAA scales the number of Apache Airflow workers up
              to the number you specify in the <code>MaxWorkers</code> field.
              When there are no more tasks running, and no more in the queue,
              MWAA disposes of the extra workers leaving the worker count you
              specify in the <code>MinWorkers</code> field. For example,
              <code>2</code>.
      NetworkConfiguration:
        allOf:
          - $ref: '#/definitions/NetworkConfiguration'
          - description: >-
              The VPC networking components used to secure and enable network
              traffic between the AWS resources for your environment. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
              networking on Amazon MWAA</a>.
      PluginsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the plugins.zip file on your Amazon S3 bucket. A
              version must be specified each time a plugins.zip file is updated.
              To learn more, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
              S3 Versioning works</a>.
      PluginsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>plugins.zip</code> file on your
              Amazon S3 bucket. For example, <code>plugins.zip</code>. If
              specified, then the plugins.zip version is required. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
              custom plugins</a>.
      RequirementsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the requirements.txt file on your Amazon S3 bucket.
              A version must be specified each time a requirements.txt file is
              updated. To learn more, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
              S3 Versioning works</a>.
      RequirementsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>requirements.txt</code> file on
              your Amazon S3 bucket. For example, <code>requirements.txt</code>.
              If specified, then a file version is required. To learn more, see
              <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
              Python dependencies</a>.
      Schedulers:
        allOf:
          - $ref: '#/definitions/Schedulers'
          - description: >-
              The number of Apache Airflow schedulers to run in your
              environment.
      SourceBucketArn:
        allOf:
          - $ref: '#/definitions/S3BucketArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon S3 bucket where your
              DAG code and supporting files are stored. For example,
              <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create
              an Amazon S3 bucket for Amazon MWAA</a>.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The key-value tag pairs you want to associate to your environment.
              For example, <code>"Environment": "Staging"</code>. To learn more,
              see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              AWS resources</a>.
      WebserverAccessMode:
        allOf:
          - $ref: '#/definitions/WebserverAccessMode'
          - description: >-
              The Apache Airflow <i>Web server</i> access mode. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache
              Airflow access modes</a>.
      WeeklyMaintenanceWindowStart:
        allOf:
          - $ref: '#/definitions/WeeklyMaintenanceWindowStart'
          - description: >-
              <p>The day and time of the week to start weekly maintenance
              updates of your environment in the following format:
              <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You
              can specify a start time in 30 minute increments only. Supported
              input includes the following:</p> <ul> <li>
              <p>MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)</p> </li>
              </ul>
    required:
      - DagS3Path
      - ExecutionRoleArn
      - NetworkConfiguration
      - SourceBucketArn
    title: CreateEnvironmentInput
    type: object
  CreateEnvironmentOutput:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/EnvironmentArn'
          - description: >-
              The Amazon Resource Name (ARN) returned in the response for the
              environment.
    type: object
  CreateWebLoginTokenRequest:
    properties: {}
    title: CreateWebLoginTokenRequest
    type: object
  CreateWebLoginTokenResponse:
    properties:
      WebServerHostname:
        allOf:
          - $ref: '#/definitions/Hostname'
          - description: >-
              Create an Airflow Web UI login token response for the provided
              webserver hostname.
      WebToken:
        allOf:
          - $ref: '#/definitions/SyntheticCreateWebLoginTokenResponseToken'
          - description: >-
              Create an Airflow Web UI login token response for the provided JWT
              token.
    type: object
  CreatedAt:
    format: date-time
    type: string
  DeleteEnvironmentInput:
    properties: {}
    title: DeleteEnvironmentInput
    type: object
  DeleteEnvironmentOutput:
    properties: {}
    type: object
  Dimension:
    description: Internal only API.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: Internal only API.
      Value:
        allOf:
          - $ref: '#/definitions/String'
          - description: Internal only API.
    required:
      - Name
      - Value
    type: object
  Dimensions:
    items:
      $ref: '#/definitions/Dimension'
    type: array
  Double:
    format: double
    type: number
  Environment:
    description: The Amazon Managed Workflows for Apache Airflow (MWAA) environment.
    properties:
      AirflowConfigurationOptions:
        allOf:
          - $ref: '#/definitions/AirflowConfigurationOptions'
          - description: >-
              A list of key-value pairs containing the Apache Airflow
              configuration options attached to your environment. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache
              Airflow configuration options</a>.
      AirflowVersion:
        allOf:
          - $ref: '#/definitions/AirflowVersion'
          - description: >-
              The Apache Airflow version on your environment. For example,
              <code>v1.10.12</code>.
      Arn:
        allOf:
          - $ref: '#/definitions/EnvironmentArn'
          - description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
      CreatedAt:
        allOf:
          - $ref: '#/definitions/CreatedAt'
          - description: The day and time the environment was created.
      DagS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the DAGs folder on your Amazon S3 bucket. For
              example, <code>dags</code>. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding
              or updating DAGs</a>.
      EnvironmentClass:
        allOf:
          - $ref: '#/definitions/EnvironmentClass'
          - description: >-
              The environment class type. Valid values: <code>mw1.small</code>,
              <code>mw1.medium</code>, <code>mw1.large</code>. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon
              MWAA environment class</a>.
      ExecutionRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the execution role in IAM that
              allows MWAA to access AWS resources in your environment. For
              example,
              <code>arn:aws:iam::123456789:role/my-execution-role</code>. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon
              MWAA Execution role</a>.
      KmsKey:
        allOf:
          - $ref: '#/definitions/KmsKey'
          - description: >-
              The Key Management Service (KMS) encryption key used to encrypt
              the data in your environment.
      LastUpdate:
        $ref: '#/definitions/LastUpdate'
      LoggingConfiguration:
        allOf:
          - $ref: '#/definitions/LoggingConfiguration'
          - description: >-
              The Apache Airflow logs being sent to CloudWatch Logs:
              <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
              <code>TaskLogs</code>, <code>WebserverLogs</code>,
              <code>WorkerLogs</code>.
      MaxWorkers:
        allOf:
          - $ref: '#/definitions/MaxWorkers'
          - description: >-
              The maximum number of workers that run in your environment. For
              example, <code>20</code>.
      MinWorkers:
        allOf:
          - $ref: '#/definitions/MinWorkers'
          - description: >-
              The minimum number of workers that run in your environment. For
              example, <code>2</code>.
      Name:
        allOf:
          - $ref: '#/definitions/EnvironmentName'
          - description: >-
              The name of the Amazon MWAA environment. For example,
              <code>MyMWAAEnvironment</code>.
      NetworkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
      PluginsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the plugins.zip file on your Amazon S3 bucket. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
              custom plugins</a>.
      PluginsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>plugins.zip</code> file on your
              Amazon S3 bucket. For example, <code>plugins.zip</code>. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
              custom plugins</a>.
      RequirementsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the requirements.txt file on your Amazon S3 bucket.
              To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
              Python dependencies</a>.
      RequirementsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>requirements.txt</code> file on
              your Amazon S3 bucket. For example, <code>requirements.txt</code>.
              To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
              Python dependencies</a>.
      Schedulers:
        allOf:
          - $ref: '#/definitions/Schedulers'
          - description: >-
              The number of Apache Airflow schedulers that run in your Amazon
              MWAA environment.
      ServiceRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) for the service-linked role of the
              environment. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-slr.html">Amazon
              MWAA Service-linked role</a>.
      SourceBucketArn:
        allOf:
          - $ref: '#/definitions/S3BucketArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon S3 bucket where your
              DAG code and supporting files are stored. For example,
              <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create
              an Amazon S3 bucket for Amazon MWAA</a>.
      Status:
        allOf:
          - $ref: '#/definitions/EnvironmentStatus'
          - description: >-
              <p>The status of the Amazon MWAA environment. Valid values:</p>
              <ul> <li> <p> <code>CREATING</code> - Indicates the request to
              create the environment is in progress.</p> </li> <li> <p>
              <code>CREATE_FAILED</code> - Indicates the request to create the
              environment failed, and the environment could not be created.</p>
              </li> <li> <p> <code>AVAILABLE</code> - Indicates the request was
              successful and the environment is ready to use.</p> </li> <li> <p>
              <code>UPDATING</code> - Indicates the request to update the
              environment is in progress.</p> </li> <li> <p>
              <code>DELETING</code> - Indicates the request to delete the
              environment is in progress.</p> </li> <li> <p>
              <code>DELETED</code> - Indicates the request to delete the
              environment is complete, and the environment has been deleted.</p>
              </li> <li> <p> <code>UNAVAILABLE</code> - Indicates the request
              failed, but the environment was unable to rollback and is not in a
              stable state.</p> </li> <li> <p> <code>UPDATE_FAILED</code> -
              Indicates the request to update the environment failed, and the
              environment has rolled back successfully and is ready to use.</p>
              </li> </ul> <p>We recommend reviewing our troubleshooting guide
              for a list of common errors and their solutions. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/troubleshooting.html">Amazon
              MWAA troubleshooting</a>.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The key-value tag pairs associated to your environment. For
              example, <code>"Environment": "Staging"</code>. To learn more, see
              <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              AWS resources</a>.
      WebserverAccessMode:
        allOf:
          - $ref: '#/definitions/WebserverAccessMode'
          - description: >-
              The Apache Airflow <i>Web server</i> access mode. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache
              Airflow access modes</a>.
      WebserverUrl:
        allOf:
          - $ref: '#/definitions/WebserverUrl'
          - description: >-
              The Apache Airflow <i>Web server</i> host name for the Amazon MWAA
              environment. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/access-airflow-ui.html">Accessing
              the Apache Airflow UI</a>.
      WeeklyMaintenanceWindowStart:
        allOf:
          - $ref: '#/definitions/WeeklyMaintenanceWindowStart'
          - description: >-
              The day and time of the week that weekly maintenance updates are
              scheduled. For example: <code>TUE:03:30</code>.
    type: object
  EnvironmentArn:
    maxLength: 1224
    minLength: 1
    pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
    type: string
  EnvironmentClass:
    maxLength: 1024
    minLength: 1
    type: string
  EnvironmentList:
    items:
      $ref: '#/definitions/EnvironmentName'
    type: array
  EnvironmentName:
    maxLength: 80
    minLength: 1
    pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
    type: string
  EnvironmentStatus:
    enum:
      - CREATING
      - CREATE_FAILED
      - AVAILABLE
      - UPDATING
      - DELETING
      - DELETED
      - UNAVAILABLE
      - UPDATE_FAILED
    type: string
  ErrorCode:
    type: string
  ErrorMessage:
    maxLength: 1024
    minLength: 1
    pattern: ^.+$
    type: string
  GetEnvironmentInput:
    properties: {}
    title: GetEnvironmentInput
    type: object
  GetEnvironmentOutput:
    properties:
      Environment:
        allOf:
          - $ref: '#/definitions/Environment'
          - description: An object containing all available details about the environment.
    type: object
  Hostname:
    maxLength: 255
    minLength: 1
    pattern: >-
      ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    type: string
  IamRoleArn:
    maxLength: 1224
    minLength: 1
    pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
    type: string
  Integer:
    type: integer
  InternalServerException: {}
  KmsKey:
    maxLength: 1224
    minLength: 1
    pattern: >-
      ^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$
    type: string
  LastUpdate:
    description: >-
      The status of the last update on the environment, and any errors that were
      encountered.
    properties:
      CreatedAt:
        allOf:
          - $ref: '#/definitions/UpdateCreatedAt'
          - description: The day and time of the last update on the environment.
      Error:
        allOf:
          - $ref: '#/definitions/UpdateError'
          - description: >-
              The error that was encountered during the last update of the
              environment.
      Status:
        allOf:
          - $ref: '#/definitions/UpdateStatus'
          - description: >-
              The status of the last update on the environment. Valid values:
              <code>SUCCESS</code>, <code>PENDING</code>, <code>FAILED</code>.
    type: object
  ListEnvironmentsInput:
    properties: {}
    title: ListEnvironmentsInput
    type: object
  ListEnvironmentsInputMaxResultsInteger:
    maximum: 25
    minimum: 1
    type: integer
  ListEnvironmentsOutput:
    properties:
      Environments:
        allOf:
          - $ref: '#/definitions/EnvironmentList'
          - description: Returns the list of Amazon MWAA environments.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: Retrieves the next page of the results.
    required:
      - Environments
    type: object
  ListTagsForResourceInput:
    properties: {}
    title: ListTagsForResourceInput
    type: object
  ListTagsForResourceOutput:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The key-value tag pairs associated to your environment. To learn
              more, see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              AWS resources</a>.
    type: object
  LoggingConfiguration:
    description: >-
      Defines the Apache Airflow logs to send to CloudWatch Logs:
      <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
      <code>TaskLogs</code>, <code>WebserverLogs</code>,
      <code>WorkerLogs</code>.
    properties:
      DagProcessingLogs:
        $ref: '#/definitions/ModuleLoggingConfiguration'
      SchedulerLogs:
        $ref: '#/definitions/ModuleLoggingConfiguration'
      TaskLogs:
        $ref: '#/definitions/ModuleLoggingConfiguration'
      WebserverLogs:
        $ref: '#/definitions/ModuleLoggingConfiguration'
      WorkerLogs:
        $ref: '#/definitions/ModuleLoggingConfiguration'
    type: object
  LoggingConfigurationInput:
    description: >-
      Defines the Apache Airflow logs to send to CloudWatch Logs:
      <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
      <code>TaskLogs</code>, <code>WebserverLogs</code>,
      <code>WorkerLogs</code>.
    properties:
      DagProcessingLogs:
        $ref: '#/definitions/ModuleLoggingConfigurationInput'
      SchedulerLogs:
        $ref: '#/definitions/ModuleLoggingConfigurationInput'
      TaskLogs:
        $ref: '#/definitions/ModuleLoggingConfigurationInput'
      WebserverLogs:
        $ref: '#/definitions/ModuleLoggingConfigurationInput'
      WorkerLogs:
        $ref: '#/definitions/ModuleLoggingConfigurationInput'
    type: object
  LoggingEnabled:
    type: boolean
  LoggingLevel:
    enum:
      - CRITICAL
      - ERROR
      - WARNING
      - INFO
      - DEBUG
    type: string
  MaxWorkers:
    minimum: 1
    type: integer
  MetricData:
    items:
      $ref: '#/definitions/MetricDatum'
    type: array
  MetricDatum:
    description: Internal only API.
    properties:
      Dimensions:
        allOf:
          - $ref: '#/definitions/Dimensions'
          - description: Internal only API.
      MetricName:
        allOf:
          - $ref: '#/definitions/String'
          - description: Internal only API.
      StatisticValues:
        allOf:
          - $ref: '#/definitions/StatisticSet'
          - description: Internal only API.
      Timestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: Internal only API.
      Unit:
        $ref: '#/definitions/Unit'
      Value:
        allOf:
          - $ref: '#/definitions/Double'
          - description: Internal only API.
    required:
      - MetricName
      - Timestamp
    type: object
  MinWorkers:
    minimum: 1
    type: integer
  ModuleLoggingConfiguration:
    description: >-
      Defines the type of logs to send for the Apache Airflow log type (e.g.
      <code>DagProcessingLogs</code>). Valid values:
      <code>CloudWatchLogGroupArn</code>, <code>Enabled</code>,
      <code>LogLevel</code>.
    properties:
      CloudWatchLogGroupArn:
        allOf:
          - $ref: '#/definitions/CloudWatchLogGroupArn'
          - description: >-
              The Amazon Resource Name (ARN) for the CloudWatch Logs group where
              the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>)
              is published. For example,
              <code>arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:*</code>.
      Enabled:
        allOf:
          - $ref: '#/definitions/LoggingEnabled'
          - description: >-
              Indicates whether to enable the Apache Airflow log type (e.g.
              <code>DagProcessingLogs</code>) in CloudWatch Logs.
      LogLevel:
        allOf:
          - $ref: '#/definitions/LoggingLevel'
          - description: >-
              Defines the Apache Airflow logs to send for the log type (e.g.
              <code>DagProcessingLogs</code>) to CloudWatch Logs. Valid values:
              <code>CRITICAL</code>, <code>ERROR</code>, <code>WARNING</code>,
              <code>INFO</code>.
    type: object
  ModuleLoggingConfigurationInput:
    description: >-
      Defines the type of logs to send for the Apache Airflow log type (e.g.
      <code>DagProcessingLogs</code>). Valid values:
      <code>CloudWatchLogGroupArn</code>, <code>Enabled</code>,
      <code>LogLevel</code>.
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/LoggingEnabled'
          - description: >-
              Indicates whether to enable the Apache Airflow log type (e.g.
              <code>DagProcessingLogs</code>) in CloudWatch Logs.
      LogLevel:
        allOf:
          - $ref: '#/definitions/LoggingLevel'
          - description: >-
              Defines the Apache Airflow logs to send for the log type (e.g.
              <code>DagProcessingLogs</code>) to CloudWatch Logs. Valid values:
              <code>CRITICAL</code>, <code>ERROR</code>, <code>WARNING</code>,
              <code>INFO</code>.
    required:
      - Enabled
      - LogLevel
    type: object
  NetworkConfiguration:
    description: >-
      The VPC networking components used to secure and enable network traffic
      between the AWS resources for your environment. To learn more, see <a
      href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
      networking on Amazon MWAA</a>.
    properties:
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupList'
          - description: >-
              A list of 1 or more security group IDs. Accepts up to 5 security
              group IDs. A security group must be attached to the same VPC as
              the subnets. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security
              in your VPC on Amazon MWAA</a>.
      SubnetIds:
        allOf:
          - $ref: '#/definitions/SubnetList'
          - description: >-
              A list of 2 subnet IDs. <b>Required</b> to create an environment.
              Must be private subnets in two different availability zones. A
              subnet must be attached to the same VPC as the security group.
    type: object
  NextToken:
    maxLength: 2048
    minLength: 0
    type: string
  PublishMetricsInput:
    properties:
      MetricData:
        allOf:
          - $ref: '#/definitions/MetricData'
          - description: >-
              Publishes metric data points to Amazon CloudWatch. CloudWatch
              associates the data points with the specified metrica.
    required:
      - MetricData
    title: PublishMetricsInput
    type: object
  PublishMetricsOutput:
    properties: {}
    type: object
  RelativePath:
    maxLength: 1024
    minLength: 1
    pattern: .*
    type: string
  ResourceNotFoundException: {}
  S3BucketArn:
    maxLength: 1224
    minLength: 1
    pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
    type: string
  S3ObjectVersion:
    maxLength: 1024
    minLength: 1
    type: string
  Schedulers:
    maximum: 5
    type: integer
  SecurityGroupId:
    maxLength: 1024
    minLength: 1
    pattern: '^sg-[a-zA-Z0-9\-._]+$'
    type: string
  SecurityGroupList:
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
    minItems: 1
    type: array
  StatisticSet:
    description: Internal only API.
    properties:
      Maximum:
        allOf:
          - $ref: '#/definitions/Double'
          - description: Internal only API.
      Minimum:
        allOf:
          - $ref: '#/definitions/Double'
          - description: Internal only API.
      SampleCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: Internal only API.
      Sum:
        allOf:
          - $ref: '#/definitions/Double'
          - description: Internal only API.
    type: object
  String:
    type: string
  SubnetId:
    maxLength: 1024
    minLength: 1
    pattern: '^subnet-[a-zA-Z0-9\-._]+$'
    type: string
  SubnetList:
    items:
      $ref: '#/definitions/SubnetId'
    maxItems: 2
    minItems: 2
    type: array
  SyntheticCreateCliTokenResponseToken:
    format: password
    type: string
  SyntheticCreateEnvironmentInputAirflowConfigurationOptions:
    additionalProperties:
      $ref: '#/definitions/ConfigValue'
    type: object
  SyntheticCreateWebLoginTokenResponseToken:
    format: password
    type: string
  SyntheticUpdateEnvironmentInputAirflowConfigurationOptions:
    additionalProperties:
      $ref: '#/definitions/ConfigValue'
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 0
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceInput:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The key-value tag pairs you want to associate to your environment.
              For example, <code>"Environment": "Staging"</code>. To learn more,
              see <a
              href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
              AWS resources</a>.
    required:
      - Tags
    title: TagResourceInput
    type: object
  TagResourceOutput:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Timestamp:
    format: date-time
    type: string
  Unit:
    description: Unit
    enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    type: string
  UntagResourceInput:
    properties: {}
    title: UntagResourceInput
    type: object
  UntagResourceOutput:
    properties: {}
    type: object
  UpdateCreatedAt:
    format: date-time
    type: string
  UpdateEnvironmentInput:
    properties:
      AirflowConfigurationOptions:
        allOf:
          - $ref: >-
              #/definitions/SyntheticUpdateEnvironmentInputAirflowConfigurationOptions
          - description: >-
              A list of key-value pairs containing the Apache Airflow
              configuration options you want to attach to your environment. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache
              Airflow configuration options</a>.
      AirflowVersion:
        allOf:
          - $ref: '#/definitions/AirflowVersion'
          - description: >-
              The Apache Airflow version for your environment. For example,
              <code>v1.10.12</code>. If no value is specified, defaults to the
              latest version. Valid values: <code>v1.10.12</code>.
      DagS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the DAGs folder on your Amazon S3 bucket. For
              example, <code>dags</code>. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding
              or updating DAGs</a>.
      EnvironmentClass:
        allOf:
          - $ref: '#/definitions/EnvironmentClass'
          - description: >-
              The environment class type. Valid values: <code>mw1.small</code>,
              <code>mw1.medium</code>, <code>mw1.large</code>. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon
              MWAA environment class</a>.
      ExecutionRoleArn:
        allOf:
          - $ref: '#/definitions/IamRoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the execution role in IAM that
              allows MWAA to access AWS resources in your environment. For
              example,
              <code>arn:aws:iam::123456789:role/my-execution-role</code>. To
              learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon
              MWAA Execution role</a>.
      LoggingConfiguration:
        allOf:
          - $ref: '#/definitions/LoggingConfigurationInput'
          - description: >-
              Defines the Apache Airflow logs to send to CloudWatch Logs:
              <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
              <code>TaskLogs</code>, <code>WebserverLogs</code>,
              <code>WorkerLogs</code>.
      MaxWorkers:
        allOf:
          - $ref: '#/definitions/MaxWorkers'
          - description: >-
              The maximum number of workers that you want to run in your
              environment. MWAA scales the number of Apache Airflow workers up
              to the number you specify in the <code>MaxWorkers</code> field.
              For example, <code>20</code>. When there are no more tasks
              running, and no more in the queue, MWAA disposes of the extra
              workers leaving the one worker that is included with your
              environment, or the number you specify in <code>MinWorkers</code>.
      MinWorkers:
        allOf:
          - $ref: '#/definitions/MinWorkers'
          - description: >-
              The minimum number of workers that you want to run in your
              environment. MWAA scales the number of Apache Airflow workers up
              to the number you specify in the <code>MaxWorkers</code> field.
              When there are no more tasks running, and no more in the queue,
              MWAA disposes of the extra workers leaving the worker count you
              specify in the <code>MinWorkers</code> field. For example,
              <code>2</code>.
      NetworkConfiguration:
        allOf:
          - $ref: '#/definitions/UpdateNetworkConfigurationInput'
          - description: >-
              The VPC networking components used to secure and enable network
              traffic between the AWS resources for your environment. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
              networking on Amazon MWAA</a>.
      PluginsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the plugins.zip file on your Amazon S3 bucket. A
              version must be specified each time a plugins.zip file is updated.
              To learn more, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
              S3 Versioning works</a>.
      PluginsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>plugins.zip</code> file on your
              Amazon S3 bucket. For example, <code>plugins.zip</code>. If
              specified, then the plugins.zip version is required. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
              custom plugins</a>.
      RequirementsS3ObjectVersion:
        allOf:
          - $ref: '#/definitions/S3ObjectVersion'
          - description: >-
              The version of the requirements.txt file on your Amazon S3 bucket.
              A version must be specified each time a requirements.txt file is
              updated. To learn more, see <a
              href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
              S3 Versioning works</a>.
      RequirementsS3Path:
        allOf:
          - $ref: '#/definitions/RelativePath'
          - description: >-
              The relative path to the <code>requirements.txt</code> file on
              your Amazon S3 bucket. For example, <code>requirements.txt</code>.
              If specified, then a file version is required. To learn more, see
              <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
              Python dependencies</a>.
      Schedulers:
        allOf:
          - $ref: '#/definitions/Schedulers'
          - description: >-
              The number of Apache Airflow schedulers to run in your Amazon MWAA
              environment.
      SourceBucketArn:
        allOf:
          - $ref: '#/definitions/S3BucketArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon S3 bucket where your
              DAG code and supporting files are stored. For example,
              <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn
              more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create
              an Amazon S3 bucket for Amazon MWAA</a>.
      WebserverAccessMode:
        allOf:
          - $ref: '#/definitions/WebserverAccessMode'
          - description: >-
              The Apache Airflow <i>Web server</i> access mode. To learn more,
              see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache
              Airflow access modes</a>.
      WeeklyMaintenanceWindowStart:
        allOf:
          - $ref: '#/definitions/WeeklyMaintenanceWindowStart'
          - description: >-
              <p>The day and time of the week to start weekly maintenance
              updates of your environment in the following format:
              <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You
              can specify a start time in 30 minute increments only. Supported
              input includes the following:</p> <ul> <li>
              <p>MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)</p> </li>
              </ul>
    title: UpdateEnvironmentInput
    type: object
  UpdateEnvironmentOutput:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/EnvironmentArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon MWAA environment. For
              example,
              <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
    type: object
  UpdateError:
    description: >-
      An object containing the error encountered with the last update:
      <code>ErrorCode</code>, <code>ErrorMessage</code>.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code that corresponds to the error with the last update.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: The error message that corresponds to the error code.
    type: object
  UpdateNetworkConfigurationInput:
    description: >-
      The VPC networking components used to secure and enable network traffic
      between the AWS resources for your environment. To learn more, see <a
      href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
      networking on Amazon MWAA</a>.
    properties:
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupList'
          - description: >-
              A list of 1 or more security group IDs. Accepts up to 5 security
              group IDs. A security group must be attached to the same VPC as
              the subnets. To learn more, see <a
              href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security
              in your VPC on Amazon MWAA</a>.
    required:
      - SecurityGroupIds
    type: object
  UpdateStatus:
    enum:
      - SUCCESS
      - PENDING
      - FAILED
    type: string
  ValidationException: {}
  WebserverAccessMode:
    enum:
      - PRIVATE_ONLY
      - PUBLIC_ONLY
    type: string
  WebserverUrl:
    maxLength: 256
    minLength: 1
    pattern: '^https://.+$'
    type: string
  WeeklyMaintenanceWindowStart:
    maxLength: 9
    minLength: 1
    pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/airflow/'
host: airflow.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This
    section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API
    reference documentation. For more information, see <a
    href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html">What
    Is Amazon MWAA?</a>.</p></p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AmazonMWAA
  version: '2020-07-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: airflow
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mwaa-2020-07-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: mwaa
paths:
  '/clitoken/{Name}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: Create a CLI token to use Airflow CLI.
      operationId: CreateCliToken
      parameters:
        - description: Create a CLI token request for a MWAA environment.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCliTokenResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /environments:
    get:
      description: >-
        Lists the Amazon Managed Workflows for Apache Airflow (MWAA)
        environments.
      operationId: ListEnvironments
      parameters:
        - description: >-
            The maximum number of results to retrieve per page. For example,
            <code>5</code> environments per page.
          in: query
          maximum: 25
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: Retrieves the next page of the results.
          in: query
          maxLength: 2048
          minLength: 0
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEnvironmentsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/environments/{Name}':
    delete:
      description: >-
        Deletes an Amazon Managed Workflows for Apache Airflow (MWAA)
        environment.
      operationId: DeleteEnvironment
      parameters:
        - description: >-
            The name of the Amazon MWAA environment. For example,
            <code>MyMWAAEnvironment</code>.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: >-
        Retrieves the details of an Amazon Managed Workflows for Apache Airflow
        (MWAA) environment.
      operationId: GetEnvironment
      parameters:
        - description: >-
            The name of the Amazon MWAA environment. For example,
            <code>MyMWAAEnvironment</code>.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        Updates an Amazon Managed Workflows for Apache Airflow (MWAA)
        environment.
      operationId: UpdateEnvironment
      parameters:
        - description: >-
            The name of your Amazon MWAA environment. For example,
            <code>MyMWAAEnvironment</code>.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AirflowConfigurationOptions:
                additionalProperties:
                  $ref: '#/definitions/ConfigValue'
                description: >-
                  A list of key-value pairs containing the Apache Airflow
                  configuration options you want to attach to your environment.
                  To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache
                  Airflow configuration options</a>.
                type: object
              AirflowVersion:
                description: >-
                  The Apache Airflow version for your environment. For example,
                  <code>v1.10.12</code>. If no value is specified, defaults to
                  the latest version. Valid values: <code>v1.10.12</code>.
                maxLength: 32
                minLength: 1
                pattern: '^[0-9a-z.]+$'
                type: string
              DagS3Path:
                description: >-
                  The relative path to the DAGs folder on your Amazon S3 bucket.
                  For example, <code>dags</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding
                  or updating DAGs</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              EnvironmentClass:
                description: >-
                  The environment class type. Valid values:
                  <code>mw1.small</code>, <code>mw1.medium</code>,
                  <code>mw1.large</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon
                  MWAA environment class</a>.
                maxLength: 1024
                minLength: 1
                type: string
              ExecutionRoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the execution role in IAM
                  that allows MWAA to access AWS resources in your environment.
                  For example,
                  <code>arn:aws:iam::123456789:role/my-execution-role</code>. To
                  learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon
                  MWAA Execution role</a>.
                maxLength: 1224
                minLength: 1
                pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                type: string
              LoggingConfiguration:
                description: >-
                  Defines the Apache Airflow logs to send to CloudWatch Logs:
                  <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
                  <code>TaskLogs</code>, <code>WebserverLogs</code>,
                  <code>WorkerLogs</code>.
                properties:
                  DagProcessingLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  SchedulerLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  TaskLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  WebserverLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  WorkerLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                type: object
              MaxWorkers:
                description: >-
                  The maximum number of workers that you want to run in your
                  environment. MWAA scales the number of Apache Airflow workers
                  up to the number you specify in the <code>MaxWorkers</code>
                  field. For example, <code>20</code>. When there are no more
                  tasks running, and no more in the queue, MWAA disposes of the
                  extra workers leaving the one worker that is included with
                  your environment, or the number you specify in
                  <code>MinWorkers</code>.
                minimum: 1
                type: integer
              MinWorkers:
                description: >-
                  The minimum number of workers that you want to run in your
                  environment. MWAA scales the number of Apache Airflow workers
                  up to the number you specify in the <code>MaxWorkers</code>
                  field. When there are no more tasks running, and no more in
                  the queue, MWAA disposes of the extra workers leaving the
                  worker count you specify in the <code>MinWorkers</code> field.
                  For example, <code>2</code>.
                minimum: 1
                type: integer
              NetworkConfiguration:
                description: >-
                  The VPC networking components used to secure and enable
                  network traffic between the AWS resources for your
                  environment. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
                  networking on Amazon MWAA</a>.
                properties:
                  SecurityGroupIds:
                    allOf:
                      - $ref: '#/definitions/SecurityGroupList'
                      - description: >-
                          A list of 1 or more security group IDs. Accepts up to
                          5 security group IDs. A security group must be
                          attached to the same VPC as the subnets. To learn
                          more, see <a
                          href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security
                          in your VPC on Amazon MWAA</a>.
                type: object
              PluginsS3ObjectVersion:
                description: >-
                  The version of the plugins.zip file on your Amazon S3 bucket.
                  A version must be specified each time a plugins.zip file is
                  updated. To learn more, see <a
                  href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
                  S3 Versioning works</a>.
                maxLength: 1024
                minLength: 1
                type: string
              PluginsS3Path:
                description: >-
                  The relative path to the <code>plugins.zip</code> file on your
                  Amazon S3 bucket. For example, <code>plugins.zip</code>. If
                  specified, then the plugins.zip version is required. To learn
                  more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
                  custom plugins</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              RequirementsS3ObjectVersion:
                description: >-
                  The version of the requirements.txt file on your Amazon S3
                  bucket. A version must be specified each time a
                  requirements.txt file is updated. To learn more, see <a
                  href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
                  S3 Versioning works</a>.
                maxLength: 1024
                minLength: 1
                type: string
              RequirementsS3Path:
                description: >-
                  The relative path to the <code>requirements.txt</code> file on
                  your Amazon S3 bucket. For example,
                  <code>requirements.txt</code>. If specified, then a file
                  version is required. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
                  Python dependencies</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              Schedulers:
                description: >-
                  The number of Apache Airflow schedulers to run in your Amazon
                  MWAA environment.
                maximum: 5
                type: integer
              SourceBucketArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Amazon S3 bucket where
                  your DAG code and supporting files are stored. For example,
                  <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To
                  learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create
                  an Amazon S3 bucket for Amazon MWAA</a>.
                maxLength: 1224
                minLength: 1
                pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
                type: string
              WebserverAccessMode:
                description: >-
                  The Apache Airflow <i>Web server</i> access mode. To learn
                  more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache
                  Airflow access modes</a>.
                enum:
                  - PRIVATE_ONLY
                  - PUBLIC_ONLY
                type: string
              WeeklyMaintenanceWindowStart:
                description: >-
                  <p>The day and time of the week to start weekly maintenance
                  updates of your environment in the following format:
                  <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>.
                  You can specify a start time in 30 minute increments only.
                  Supported input includes the following:</p> <ul> <li>
                  <p>MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)</p>
                  </li> </ul>
                maxLength: 9
                minLength: 1
                pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        Creates an Amazon Managed Workflows for Apache Airflow (MWAA)
        environment.
      operationId: CreateEnvironment
      parameters:
        - description: >-
            The name of the Amazon MWAA environment. For example,
            <code>MyMWAAEnvironment</code>.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AirflowConfigurationOptions:
                additionalProperties:
                  $ref: '#/definitions/ConfigValue'
                description: >-
                  A list of key-value pairs containing the Apache Airflow
                  configuration options you want to attach to your environment.
                  To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache
                  Airflow configuration options</a>.
                type: object
              AirflowVersion:
                description: >-
                  The Apache Airflow version for your environment. For example,
                  <code>v1.10.12</code>. If no value is specified, defaults to
                  the latest version. Valid values: <code>v1.10.12</code>.
                maxLength: 32
                minLength: 1
                pattern: '^[0-9a-z.]+$'
                type: string
              DagS3Path:
                description: >-
                  The relative path to the DAGs folder on your Amazon S3 bucket.
                  For example, <code>dags</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding
                  or updating DAGs</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              EnvironmentClass:
                description: >-
                  The environment class type. Valid values:
                  <code>mw1.small</code>, <code>mw1.medium</code>,
                  <code>mw1.large</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon
                  MWAA environment class</a>.
                maxLength: 1024
                minLength: 1
                type: string
              ExecutionRoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the execution role for your
                  environment. An execution role is an AWS Identity and Access
                  Management (IAM) role that grants MWAA permission to access
                  AWS services and resources used by your environment. For
                  example,
                  <code>arn:aws:iam::123456789:role/my-execution-role</code>. To
                  learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon
                  MWAA Execution role</a>.
                maxLength: 1224
                minLength: 1
                pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                type: string
              KmsKey:
                description: >-
                  The AWS Key Management Service (KMS) key to encrypt the data
                  in your environment. You can use an AWS owned CMK, or a
                  Customer managed CMK (advanced). To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get
                  started with Amazon Managed Workflows for Apache Airflow</a>.
                maxLength: 1224
                minLength: 1
                pattern: >-
                  ^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$
                type: string
              LoggingConfiguration:
                description: >-
                  Defines the Apache Airflow logs to send to CloudWatch Logs:
                  <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>,
                  <code>TaskLogs</code>, <code>WebserverLogs</code>,
                  <code>WorkerLogs</code>.
                properties:
                  DagProcessingLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  SchedulerLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  TaskLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  WebserverLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                  WorkerLogs:
                    $ref: '#/definitions/ModuleLoggingConfigurationInput'
                type: object
              MaxWorkers:
                description: >-
                  The maximum number of workers that you want to run in your
                  environment. MWAA scales the number of Apache Airflow workers
                  up to the number you specify in the <code>MaxWorkers</code>
                  field. For example, <code>20</code>. When there are no more
                  tasks running, and no more in the queue, MWAA disposes of the
                  extra workers leaving the one worker that is included with
                  your environment, or the number you specify in
                  <code>MinWorkers</code>.
                minimum: 1
                type: integer
              MinWorkers:
                description: >-
                  The minimum number of workers that you want to run in your
                  environment. MWAA scales the number of Apache Airflow workers
                  up to the number you specify in the <code>MaxWorkers</code>
                  field. When there are no more tasks running, and no more in
                  the queue, MWAA disposes of the extra workers leaving the
                  worker count you specify in the <code>MinWorkers</code> field.
                  For example, <code>2</code>.
                minimum: 1
                type: integer
              NetworkConfiguration:
                description: >-
                  The VPC networking components used to secure and enable
                  network traffic between the AWS resources for your
                  environment. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About
                  networking on Amazon MWAA</a>.
                properties:
                  SecurityGroupIds:
                    allOf:
                      - $ref: '#/definitions/SecurityGroupList'
                      - description: >-
                          A list of 1 or more security group IDs. Accepts up to
                          5 security group IDs. A security group must be
                          attached to the same VPC as the subnets. To learn
                          more, see <a
                          href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html">Security
                          in your VPC on Amazon MWAA</a>.
                  SubnetIds:
                    allOf:
                      - $ref: '#/definitions/SubnetList'
                      - description: >-
                          A list of 2 subnet IDs. <b>Required</b> to create an
                          environment. Must be private subnets in two different
                          availability zones. A subnet must be attached to the
                          same VPC as the security group.
                type: object
              PluginsS3ObjectVersion:
                description: >-
                  The version of the plugins.zip file on your Amazon S3 bucket.
                  A version must be specified each time a plugins.zip file is
                  updated. To learn more, see <a
                  href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
                  S3 Versioning works</a>.
                maxLength: 1024
                minLength: 1
                type: string
              PluginsS3Path:
                description: >-
                  The relative path to the <code>plugins.zip</code> file on your
                  Amazon S3 bucket. For example, <code>plugins.zip</code>. If
                  specified, then the plugins.zip version is required. To learn
                  more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing
                  custom plugins</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              RequirementsS3ObjectVersion:
                description: >-
                  The version of the requirements.txt file on your Amazon S3
                  bucket. A version must be specified each time a
                  requirements.txt file is updated. To learn more, see <a
                  href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How
                  S3 Versioning works</a>.
                maxLength: 1024
                minLength: 1
                type: string
              RequirementsS3Path:
                description: >-
                  The relative path to the <code>requirements.txt</code> file on
                  your Amazon S3 bucket. For example,
                  <code>requirements.txt</code>. If specified, then a file
                  version is required. To learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing
                  Python dependencies</a>.
                maxLength: 1024
                minLength: 1
                pattern: .*
                type: string
              Schedulers:
                description: >-
                  The number of Apache Airflow schedulers to run in your
                  environment.
                maximum: 5
                type: integer
              SourceBucketArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Amazon S3 bucket where
                  your DAG code and supporting files are stored. For example,
                  <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To
                  learn more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create
                  an Amazon S3 bucket for Amazon MWAA</a>.
                maxLength: 1224
                minLength: 1
                pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The key-value tag pairs you want to associate to your
                  environment. For example, <code>"Environment":
                  "Staging"</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
                  AWS resources</a>.
                maxProperties: 50
                minProperties: 1
                type: object
              WebserverAccessMode:
                description: >-
                  The Apache Airflow <i>Web server</i> access mode. To learn
                  more, see <a
                  href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache
                  Airflow access modes</a>.
                enum:
                  - PRIVATE_ONLY
                  - PUBLIC_ONLY
                type: string
              WeeklyMaintenanceWindowStart:
                description: >-
                  <p>The day and time of the week to start weekly maintenance
                  updates of your environment in the following format:
                  <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>.
                  You can specify a start time in 30 minute increments only.
                  Supported input includes the following:</p> <ul> <li>
                  <p>MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)</p>
                  </li> </ul>
                maxLength: 9
                minLength: 1
                pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
                type: string
            required:
              - DagS3Path
              - ExecutionRoleArn
              - NetworkConfiguration
              - SourceBucketArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEnvironmentOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/metrics/environments/{EnvironmentName}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: An operation for publishing metrics from the customers to the Ops plane.
      operationId: PublishMetrics
      parameters:
        - description: Publishes environment metric data to Amazon CloudWatch.
          in: path
          maxLength: 80
          minLength: 1
          name: EnvironmentName
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MetricData:
                description: >-
                  Publishes metric data points to Amazon CloudWatch. CloudWatch
                  associates the data points with the specified metrica.
                items:
                  $ref: '#/definitions/MetricDatum'
                type: array
            required:
              - MetricData
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PublishMetricsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/tags/{ResourceArn}':
    get:
      description: >-
        Lists the key-value tag pairs associated to the Amazon Managed Workflows
        for Apache Airflow (MWAA) environment. For example, <code>"Environment":
        "Staging"</code>. 
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the Amazon MWAA environment. For
            example,
            <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
          in: path
          maxLength: 1224
          minLength: 1
          name: ResourceArn
          pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Associates key-value tag pairs to your Amazon Managed Workflows for
        Apache Airflow (MWAA) environment. 
      operationId: TagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the Amazon MWAA environment. For
            example,
            <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
          in: path
          maxLength: 1224
          minLength: 1
          name: ResourceArn
          pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  The key-value tag pairs you want to associate to your
                  environment. For example, <code>"Environment":
                  "Staging"</code>. To learn more, see <a
                  href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
                  AWS resources</a>.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      description: >-
        Removes key-value tag pairs associated to your Amazon Managed Workflows
        for Apache Airflow (MWAA) environment. For example, <code>"Environment":
        "Staging"</code>.
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the Amazon MWAA environment. For
            example,
            <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
          in: path
          maxLength: 1224
          minLength: 1
          name: ResourceArn
          pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The key-value tag pair you want to remove. For example,
            <code>"Environment": "Staging"</code>. 
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 0
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/webtoken/{Name}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Create a JWT token to be used to login to Airflow Web UI with claims
        based Authentication.
      operationId: CreateWebLoginToken
      parameters:
        - description: Create an Airflow Web UI login token request for a MWAA environment.
          in: path
          maxLength: 80
          minLength: 1
          name: Name
          pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateWebLoginTokenResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

