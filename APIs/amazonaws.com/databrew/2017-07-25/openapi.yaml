basePath: /
definitions:
  AccessDeniedException: {}
  AccountId:
    maxLength: 255
    type: string
  ActionId:
    type: integer
  Arn:
    maxLength: 2048
    minLength: 20
    type: string
  AssumeControl:
    type: boolean
  Attempt:
    type: integer
  BatchDeleteRecipeVersionRequest:
    properties:
      RecipeVersions:
        allOf:
          - $ref: '#/definitions/RecipeVersionList'
          - description: >-
              An array of version identifiers, for the recipe versions to be
              deleted. You can specify numeric versions (<code>X.Y</code>) or
              <code>LATEST_WORKING</code>. <code>LATEST_PUBLISHED</code> is not
              supported.
    required:
      - RecipeVersions
    title: BatchDeleteRecipeVersionRequest
    type: object
  BatchDeleteRecipeVersionResponse:
    properties:
      Errors:
        allOf:
          - $ref: '#/definitions/RecipeErrorList'
          - description: >-
              Errors, if any, that occurred while attempting to delete the
              recipe versions.
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe that was modified.
    required:
      - Name
    type: object
  Bucket:
    maxLength: 63
    minLength: 3
    type: string
  CatalogId:
    maxLength: 255
    minLength: 1
    type: string
  ClientSessionId:
    maxLength: 255
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'
    type: string
  ColumnName:
    maxLength: 255
    minLength: 1
    type: string
  ColumnNameList:
    items:
      $ref: '#/definitions/ColumnName'
    maxItems: 200
    type: array
  ColumnRange:
    maximum: 20
    minimum: 0
    type: integer
  ColumnSelector:
    description: >-
      Selector of a column from a dataset for profile job configuration. One
      selector includes either a column name or a regular expression.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of a column from a dataset.
      Regex:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: A regular expression for selecting a column from a dataset.
    type: object
  ColumnSelectorList:
    items:
      $ref: '#/definitions/ColumnSelector'
    minItems: 1
    type: array
  ColumnStatisticsConfiguration:
    description: >-
      Configuration for column evaluations for a profile job.
      ColumnStatisticsConfiguration can be used to select evaluations and
      override parameters of evaluations for particular columns. 
    properties:
      Selectors:
        allOf:
          - $ref: '#/definitions/ColumnSelectorList'
          - description: >-
              List of column selectors. Selectors can be used to select columns
              from the dataset. When selectors are undefined, configuration will
              be applied to all supported columns. 
      Statistics:
        allOf:
          - $ref: '#/definitions/StatisticsConfiguration'
          - description: >-
              Configuration for evaluations. Statistics can be used to select
              evaluations and override parameters of evaluations. 
    required:
      - Statistics
    type: object
  ColumnStatisticsConfigurationList:
    items:
      $ref: '#/definitions/ColumnStatisticsConfiguration'
    minItems: 1
    type: array
  CompressionFormat:
    enum:
      - GZIP
      - LZ4
      - SNAPPY
      - BZIP2
      - DEFLATE
      - LZO
      - BROTLI
      - ZSTD
      - ZLIB
    type: string
  Condition:
    maxLength: 128
    minLength: 1
    pattern: '^[A-Z\_]+$'
    type: string
  ConditionExpression:
    description: >-
      <p>Represents an individual condition that evaluates to true or false.</p>
      <p>Conditions are used with recipe actions. The action is only performed
      for column values where the condition evaluates to true.</p> <p>If a
      recipe requires more than one condition, then the recipe must specify
      multiple <code>ConditionExpression</code> elements. Each condition is
      applied to the rows in a dataset first, before the recipe action is
      performed.</p>
    properties:
      Condition:
        allOf:
          - $ref: '#/definitions/Condition'
          - description: >-
              A specific condition to apply to a recipe action. For more
              information, see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/recipes.html#recipes.structure">Recipe
              structure</a> in the <i>Glue DataBrew Developer Guide</i>.
      TargetColumn:
        allOf:
          - $ref: '#/definitions/TargetColumn'
          - description: A column to apply this condition to.
      Value:
        allOf:
          - $ref: '#/definitions/ConditionValue'
          - description: >-
              A value that the condition must evaluate to for the condition to
              succeed.
    required:
      - Condition
      - TargetColumn
    type: object
  ConditionExpressionList:
    items:
      $ref: '#/definitions/ConditionExpression'
    type: array
  ConditionValue:
    maxLength: 1024
    type: string
  ConflictException: {}
  CreateColumn:
    type: boolean
  CreateDatasetRequest:
    properties:
      Format:
        allOf:
          - $ref: '#/definitions/InputFormat'
          - description: >-
              The file format of a dataset that is created from an Amazon S3
              file or folder.
      FormatOptions:
        $ref: '#/definitions/FormatOptions'
      Input:
        $ref: '#/definitions/Input'
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: >-
              The name of the dataset to be created. Valid characters are
              alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      PathOptions:
        allOf:
          - $ref: '#/definitions/PathOptions'
          - description: >-
              A set of options that defines how DataBrew interprets an Amazon S3
              path of the dataset.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this dataset.
    required:
      - Name
      - Input
    title: CreateDatasetRequest
    type: object
  CreateDatasetResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset that you created.
    required:
      - Name
    type: object
  CreateProfileJobRequest:
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/ProfileConfiguration'
          - description: >-
              Configuration for profile jobs. Used to select columns, do
              evaluations, and override default parameters of evaluations. When
              configuration is null, the profile job will run with default
              settings.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset that this job is to act upon.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job.
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> -
              <code>SSE-KMS</code> - Server-side encryption with KMS-managed
              keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side
              encryption with keys managed by Amazon S3.</p> </li> </ul>
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              Sample configuration for profile jobs only. Determines the number
              of rows on which the profile job will be executed. If a JobSample
              value is not provided, the default value will be used. The default
              value is CUSTOM_ROWS for the mode parameter and 20000 for the size
              parameter.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: >-
              Enables or disables Amazon CloudWatch logging for the job. If
              logging is enabled, CloudWatch writes one log stream for each job
              run.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of nodes that DataBrew can use when the job
              processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: >-
              The name of the job to be created. Valid characters are
              alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      OutputLocation:
        $ref: '#/definitions/S3Location'
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be assumed when DataBrew runs the job.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
    required:
      - DatasetName
      - Name
      - OutputLocation
      - RoleArn
    title: CreateProfileJobRequest
    type: object
  CreateProfileJobResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job that was created.
    required:
      - Name
    type: object
  CreateProjectRequest:
    properties:
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of an existing dataset to associate this project with.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: >-
              A unique name for the new project. Valid characters are
              alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      RecipeName:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of an existing recipe to associate with the project.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be assumed for this request.
      Sample:
        $ref: '#/definitions/Sample'
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this project.
    required:
      - DatasetName
      - Name
      - RecipeName
      - RoleArn
    title: CreateProjectRequest
    type: object
  CreateProjectResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that you created.
    required:
      - Name
    type: object
  CreateRecipeJobRequest:
    properties:
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write to. 
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset that this job processes.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job.
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side
              encryption with keys managed by KMS.</p> </li> <li> <p>
              <code>SSE-S3</code> - Server-side encryption with keys managed by
              Amazon S3.</p> </li> </ul>
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: >-
              Enables or disables Amazon CloudWatch logging for the job. If
              logging is enabled, CloudWatch writes one log stream for each job
              run.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of nodes that DataBrew can consume when the job
              processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: >-
              A unique name for the job. Valid characters are alphanumeric (A-Z,
              a-z, 0-9), hyphen (-), period (.), and space.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: >-
              One or more artifacts that represent the output from running the
              job.
      ProjectName:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: >-
              Either the name of an existing project, or a combination of a
              recipe and a dataset to associate with the recipe.
      RecipeReference:
        $ref: '#/definitions/RecipeReference'
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be assumed when DataBrew runs the job.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
    required:
      - Name
      - RoleArn
    title: CreateRecipeJobRequest
    type: object
  CreateRecipeJobResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job that you created.
    required:
      - Name
    type: object
  CreateRecipeRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/RecipeDescription'
          - description: A description for the recipe.
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: >-
              A unique name for the recipe. Valid characters are alphanumeric
              (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      Steps:
        allOf:
          - $ref: '#/definitions/RecipeStepList'
          - description: >-
              An array containing the steps to be performed by the recipe. Each
              recipe step consists of one recipe action and (optionally) an
              array of condition expressions.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this recipe.
    required:
      - Name
      - Steps
    title: CreateRecipeRequest
    type: object
  CreateRecipeResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe that you created.
    required:
      - Name
    type: object
  CreateScheduleRequest:
    properties:
      CronExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              The date or dates and time or times when the jobs are to be run.
              For more information, see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
              expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
      JobNames:
        allOf:
          - $ref: '#/definitions/JobNameList'
          - description: The name or names of one or more jobs to be run.
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: >-
              A unique name for the schedule. Valid characters are alphanumeric
              (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags to apply to this schedule.
    required:
      - CronExpression
      - Name
    title: CreateScheduleRequest
    type: object
  CreateScheduleResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: The name of the schedule that was created.
    required:
      - Name
    type: object
  CreatedBy:
    type: string
  CronExpression:
    maxLength: 512
    minLength: 1
    type: string
  CsvOptions:
    description: >-
      Represents a set of options that define how DataBrew will read a
      comma-separated value (CSV) file when creating a dataset from that file.
    properties:
      Delimiter:
        allOf:
          - $ref: '#/definitions/Delimiter'
          - description: >-
              A single character that specifies the delimiter being used in the
              CSV file.
      HeaderRow:
        allOf:
          - $ref: '#/definitions/HeaderRow'
          - description: >-
              A variable that specifies whether the first row in the file is
              parsed as the header. If this value is false, column names are
              auto-generated.
    type: object
  CsvOutputOptions:
    description: >-
      Represents a set of options that define how DataBrew will write a
      comma-separated value (CSV) file.
    properties:
      Delimiter:
        allOf:
          - $ref: '#/definitions/Delimiter'
          - description: >-
              A single character that specifies the delimiter used to create CSV
              job output.
    type: object
  DataCatalogInputDefinition:
    description: >-
      Represents how metadata stored in the Glue Data Catalog is defined in a
      DataBrew dataset. 
    properties:
      CatalogId:
        allOf:
          - $ref: '#/definitions/CatalogId'
          - description: >-
              The unique identifier of the Amazon Web Services account that
              holds the Data Catalog that stores the data.
      DatabaseName:
        allOf:
          - $ref: '#/definitions/DatabaseName'
          - description: The name of a database in the Data Catalog.
      TableName:
        allOf:
          - $ref: '#/definitions/TableName'
          - description: >-
              The name of a database table in the Data Catalog. This table
              corresponds to a DataBrew dataset.
      TempDirectory:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: >-
              Represents an Amazon location where DataBrew can store
              intermediate results.
    required:
      - DatabaseName
      - TableName
    type: object
  DataCatalogOutput:
    description: >-
      Represents options that specify how and where in the Glue Data Catalog
      DataBrew writes the output generated by recipe jobs.
    properties:
      CatalogId:
        allOf:
          - $ref: '#/definitions/CatalogId'
          - description: >-
              The unique identifier of the Amazon Web Services account that
              holds the Data Catalog that stores the data.
      DatabaseName:
        allOf:
          - $ref: '#/definitions/DatabaseName'
          - description: The name of a database in the Data Catalog.
      DatabaseOptions:
        allOf:
          - $ref: '#/definitions/DatabaseTableOutputOptions'
          - description: >-
              Represents options that specify how and where DataBrew writes the
              database output generated by recipe jobs.
      Overwrite:
        allOf:
          - $ref: '#/definitions/OverwriteOutput'
          - description: >-
              A value that, if true, means that any data in the location
              specified for output is overwritten with new output. Not supported
              with DatabaseOptions.
      S3Options:
        allOf:
          - $ref: '#/definitions/S3TableOutputOptions'
          - description: >-
              Represents options that specify how and where DataBrew writes the
              Amazon S3 output generated by recipe jobs.
      TableName:
        allOf:
          - $ref: '#/definitions/TableName'
          - description: The name of a table in the Data Catalog.
    required:
      - DatabaseName
      - TableName
    type: object
  DataCatalogOutputList:
    items:
      $ref: '#/definitions/DataCatalogOutput'
    minItems: 1
    type: array
  DatabaseInputDefinition:
    description: Connection information for dataset input files stored in a database.
    properties:
      DatabaseTableName:
        allOf:
          - $ref: '#/definitions/DatabaseTableName'
          - description: The table within the target database.
      GlueConnectionName:
        allOf:
          - $ref: '#/definitions/GlueConnectionName'
          - description: >-
              The Glue Connection that stores the connection information for the
              target database.
      TempDirectory:
        $ref: '#/definitions/S3Location'
    required:
      - GlueConnectionName
      - DatabaseTableName
    type: object
  DatabaseName:
    maxLength: 255
    minLength: 1
    type: string
  DatabaseOutput:
    description: >-
      Represents a JDBC database output object which defines the output
      destination for a DataBrew recipe job to write into.
    properties:
      DatabaseOptions:
        allOf:
          - $ref: '#/definitions/DatabaseTableOutputOptions'
          - description: >-
              Represents options that specify how and where DataBrew writes the
              database output generated by recipe jobs.
      DatabaseOutputMode:
        allOf:
          - $ref: '#/definitions/DatabaseOutputMode'
          - description: >-
              The output mode to write into the database. Currently supported
              option: NEW_TABLE.
      GlueConnectionName:
        allOf:
          - $ref: '#/definitions/GlueConnectionName'
          - description: >-
              The Glue connection that stores the connection information for the
              target database.
    required:
      - GlueConnectionName
      - DatabaseOptions
    type: object
  DatabaseOutputList:
    items:
      $ref: '#/definitions/DatabaseOutput'
    minItems: 1
    type: array
  DatabaseOutputMode:
    enum:
      - NEW_TABLE
    type: string
  DatabaseTableName:
    maxLength: 255
    minLength: 1
    type: string
  DatabaseTableOutputOptions:
    description: >-
      Represents options that specify how and where DataBrew writes the database
      output generated by recipe jobs.
    properties:
      TableName:
        allOf:
          - $ref: '#/definitions/DatabaseTableName'
          - description: >-
              A prefix for the name of a table DataBrew will create in the
              database.
      TempDirectory:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: >-
              Represents an Amazon S3 location (bucket name and object key)
              where DataBrew can store intermediate results.
    required:
      - TableName
    type: object
  Dataset:
    description: Represents a dataset that can be processed by DataBrew.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The ID of the Amazon Web Services account that owns the dataset.
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the dataset was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who created the
              dataset.
      Format:
        allOf:
          - $ref: '#/definitions/InputFormat'
          - description: >-
              The file format of a dataset that is created from an Amazon S3
              file or folder.
      FormatOptions:
        allOf:
          - $ref: '#/definitions/FormatOptions'
          - description: >-
              A set of options that define how DataBrew interprets the data in
              the dataset.
      Input:
        allOf:
          - $ref: '#/definitions/Input'
          - description: >-
              Information on how DataBrew can find the dataset, in either the
              Glue Data Catalog or Amazon S3.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who last modified the
              dataset.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The last modification date and time of the dataset.
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The unique name of the dataset.
      PathOptions:
        allOf:
          - $ref: '#/definitions/PathOptions'
          - description: >-
              A set of options that defines how DataBrew interprets an Amazon S3
              path of the dataset.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The unique Amazon Resource Name (ARN) for the dataset.
      Source:
        allOf:
          - $ref: '#/definitions/Source'
          - description: >-
              The location of the data for the dataset, either Amazon S3 or the
              Glue Data Catalog.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags that have been applied to the dataset.
    required:
      - Name
      - Input
    type: object
  DatasetList:
    items:
      $ref: '#/definitions/Dataset'
    type: array
  DatasetName:
    maxLength: 255
    minLength: 1
    type: string
  DatasetParameter:
    description: >-
      Represents a dataset paramater that defines type and conditions for a
      parameter in the Amazon S3 path of the dataset.
    properties:
      CreateColumn:
        allOf:
          - $ref: '#/definitions/CreateColumn'
          - description: >-
              Optional boolean value that defines whether the captured value of
              this parameter should be used to create a new column in a dataset.
      DatetimeOptions:
        allOf:
          - $ref: '#/definitions/DatetimeOptions'
          - description: >-
              Additional parameter options such as a format and a timezone.
              Required for datetime parameters.
      Filter:
        allOf:
          - $ref: '#/definitions/FilterExpression'
          - description: >-
              The optional filter expression structure to apply additional
              matching criteria to the parameter.
      Name:
        allOf:
          - $ref: '#/definitions/PathParameterName'
          - description: >-
              The name of the parameter that is used in the dataset's Amazon S3
              path.
      Type:
        allOf:
          - $ref: '#/definitions/ParameterType'
          - description: >-
              The type of the dataset parameter, can be one of a 'String',
              'Number' or 'Datetime'.
    required:
      - Name
      - Type
    type: object
  Date:
    format: date-time
    type: string
  DatetimeFormat:
    maxLength: 100
    minLength: 2
    type: string
  DatetimeOptions:
    description: >-
      Represents additional options for correct interpretation of datetime
      parameters used in the Amazon S3 path of a dataset.
    properties:
      Format:
        allOf:
          - $ref: '#/definitions/DatetimeFormat'
          - description: >-
              Required option, that defines the datetime format used for a date
              parameter in the Amazon S3 path. Should use only supported
              datetime specifiers and separation characters, all literal a-z or
              A-Z characters should be escaped with single quotes. E.g.
              "MM.dd.yyyy-'at'-HH:mm".
      LocaleCode:
        allOf:
          - $ref: '#/definitions/LocaleCode'
          - description: >-
              Optional value for a non-US locale code, needed for correct
              interpretation of some date formats.
      TimezoneOffset:
        allOf:
          - $ref: '#/definitions/TimezoneOffset'
          - description: >-
              Optional value for a timezone offset of the datetime parameter
              value in the Amazon S3 path. Shouldn't be used if Format for this
              parameter includes timezone fields. If no offset specified, UTC is
              assumed.
    required:
      - Format
    type: object
  DeleteDatasetRequest:
    properties: {}
    title: DeleteDatasetRequest
    type: object
  DeleteDatasetResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset that you deleted.
    required:
      - Name
    type: object
  DeleteJobRequest:
    properties: {}
    title: DeleteJobRequest
    type: object
  DeleteJobResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job that you deleted.
    required:
      - Name
    type: object
  DeleteProjectRequest:
    properties: {}
    title: DeleteProjectRequest
    type: object
  DeleteProjectResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that you deleted.
    required:
      - Name
    type: object
  DeleteRecipeVersionRequest:
    properties: {}
    title: DeleteRecipeVersionRequest
    type: object
  DeleteRecipeVersionResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe that was deleted.
      RecipeVersion:
        allOf:
          - $ref: '#/definitions/RecipeVersion'
          - description: The version of the recipe that was deleted.
    required:
      - Name
      - RecipeVersion
    type: object
  DeleteScheduleRequest:
    properties: {}
    title: DeleteScheduleRequest
    type: object
  DeleteScheduleResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: The name of the schedule that was deleted.
    required:
      - Name
    type: object
  Delimiter:
    maxLength: 1
    minLength: 1
    type: string
  DescribeDatasetRequest:
    properties: {}
    title: DescribeDatasetRequest
    type: object
  DescribeDatasetResponse:
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the dataset was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The identifier (user name) of the user who created the dataset.
      Format:
        allOf:
          - $ref: '#/definitions/InputFormat'
          - description: >-
              The file format of a dataset that is created from an Amazon S3
              file or folder.
      FormatOptions:
        $ref: '#/definitions/FormatOptions'
      Input:
        $ref: '#/definitions/Input'
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The identifier (user name) of the user who last modified the
              dataset.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the dataset was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset.
      PathOptions:
        allOf:
          - $ref: '#/definitions/PathOptions'
          - description: >-
              A set of options that defines how DataBrew interprets an Amazon S3
              path of the dataset.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the dataset.
      Source:
        allOf:
          - $ref: '#/definitions/Source'
          - description: >-
              The location of the data for this dataset, Amazon S3 or the Glue
              Data Catalog.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags associated with this dataset.
    required:
      - Name
      - Input
    type: object
  DescribeJobRequest:
    properties: {}
    title: DescribeJobRequest
    type: object
  DescribeJobResponse:
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the job was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: >-
              The identifier (user name) of the user associated with the
              creation of the job.
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write into.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The dataset that the job acts upon.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job.
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side
              encryption with keys managed by KMS.</p> </li> <li> <p>
              <code>SSE-S3</code> - Server-side encryption with keys managed by
              Amazon S3.</p> </li> </ul>
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              Sample configuration for profile jobs only. Determines the number
              of rows on which the profile job will be executed.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: The identifier (user name) of the user who last modified the job.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the job was last modified.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: >-
              Indicates whether Amazon CloudWatch logging is enabled for this
              job.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of compute nodes that DataBrew can consume when
              the job processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: >-
              One or more artifacts that represent the output from running the
              job.
      ProfileConfiguration:
        allOf:
          - $ref: '#/definitions/ProfileConfiguration'
          - description: >-
              Configuration for profile jobs. Used to select columns, do
              evaluations, and override default parameters of evaluations. When
              configuration is null, the profile job will run with default
              settings.
      ProjectName:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The DataBrew project associated with this job.
      RecipeReference:
        $ref: '#/definitions/RecipeReference'
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the job.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of the Identity and Access Management (IAM) role to be
              assumed when DataBrew runs the job.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags associated with this job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
      Type:
        allOf:
          - $ref: '#/definitions/JobType'
          - description: >-
              <p>The job type, which must be one of the following:</p> <ul> <li>
              <p> <code>PROFILE</code> - The job analyzes the dataset to
              determine its size, data types, data distribution, and more.</p>
              </li> <li> <p> <code>RECIPE</code> - The job applies one or more
              transformations to a dataset.</p> </li> </ul>
    required:
      - Name
    type: object
  DescribeJobRunRequest:
    properties: {}
    title: DescribeJobRunRequest
    type: object
  DescribeJobRunResponse:
    properties:
      Attempt:
        allOf:
          - $ref: '#/definitions/Attempt'
          - description: The number of times that DataBrew has attempted to run the job.
      CompletedOn:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the job completed processing.
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write into.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset for the job to process.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/JobRunErrorMessage'
          - description: >-
              A message indicating an error (if any) that was encountered when
              the job ran.
      ExecutionTime:
        allOf:
          - $ref: '#/definitions/ExecutionTime'
          - description: >-
              The amount of time, in seconds, during which the job run consumed
              resources.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job being processed during this run.
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              Sample configuration for profile jobs only. Determines the number
              of rows on which the profile job will be executed. If a JobSample
              value is not provided, the default value will be used. The default
              value is CUSTOM_ROWS for the mode parameter and 20000 for the size
              parameter.
      LogGroupName:
        allOf:
          - $ref: '#/definitions/LogGroupName'
          - description: >-
              The name of an Amazon CloudWatch log group, where the job writes
              diagnostic messages when it runs.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: The current status of Amazon CloudWatch logging for the job run.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: One or more output artifacts from a job run.
      ProfileConfiguration:
        allOf:
          - $ref: '#/definitions/ProfileConfiguration'
          - description: >-
              Configuration for profile jobs. Used to select columns, do
              evaluations, and override default parameters of evaluations. When
              configuration is null, the profile job will run with default
              settings.
      RecipeReference:
        $ref: '#/definitions/RecipeReference'
      RunId:
        allOf:
          - $ref: '#/definitions/JobRunId'
          - description: The unique identifier of the job run.
      StartedBy:
        allOf:
          - $ref: '#/definitions/StartedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who started the job
              run.
      StartedOn:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the job run began.
      State:
        allOf:
          - $ref: '#/definitions/JobRunState'
          - description: The current state of the job run entity itself.
    required:
      - JobName
    type: object
  DescribeProjectRequest:
    properties: {}
    title: DescribeProjectRequest
    type: object
  DescribeProjectResponse:
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the project was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The identifier (user name) of the user who created the project.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The dataset associated with the project.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The identifier (user name) of the user who last modified the
              project.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the project was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project.
      OpenDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: 'The date and time when the project was opened. '
      OpenedBy:
        allOf:
          - $ref: '#/definitions/OpenedBy'
          - description: >-
              The identifier (user name) of the user that opened the project for
              use. 
      RecipeName:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The recipe associated with this job.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the project.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of the Identity and Access Management (IAM) role to be
              assumed when DataBrew runs the job.
      Sample:
        $ref: '#/definitions/Sample'
      SessionStatus:
        allOf:
          - $ref: '#/definitions/SessionStatus'
          - description: >-
              <p>Describes the current state of the session:</p> <ul> <li> <p>
              <code>PROVISIONING</code> - allocating resources for the
              session.</p> </li> <li> <p> <code>INITIALIZING</code> - getting
              the session ready for first use.</p> </li> <li> <p>
              <code>ASSIGNED</code> - the session is ready for use.</p> </li>
              </ul>
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags associated with this project.
    required:
      - Name
    type: object
  DescribeRecipeRequest:
    properties: {}
    title: DescribeRecipeRequest
    type: object
  DescribeRecipeResponse:
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the recipe was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The identifier (user name) of the user who created the recipe.
      Description:
        allOf:
          - $ref: '#/definitions/RecipeDescription'
          - description: The description of the recipe.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The identifier (user name) of the user who last modified the
              recipe.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the recipe was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe.
      ProjectName:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project associated with this recipe.
      PublishedBy:
        allOf:
          - $ref: '#/definitions/PublishedBy'
          - description: >-
              The identifier (user name) of the user who last published the
              recipe.
      PublishedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the recipe was last published.
      RecipeVersion:
        allOf:
          - $ref: '#/definitions/RecipeVersion'
          - description: The recipe version identifier.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the recipe.
      Steps:
        allOf:
          - $ref: '#/definitions/RecipeStepList'
          - description: >-
              One or more steps to be performed by the recipe. Each step
              consists of an action, and the conditions under which the action
              should succeed.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags associated with this project.
    required:
      - Name
    type: object
  DescribeScheduleRequest:
    properties: {}
    title: DescribeScheduleRequest
    type: object
  DescribeScheduleResponse:
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the schedule was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: 'The identifier (user name) of the user who created the schedule. '
      CronExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              The date or dates and time or times when the jobs are to be run
              for the schedule. For more information, see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
              expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
      JobNames:
        allOf:
          - $ref: '#/definitions/JobNameList'
          - description: >-
              The name or names of one or more jobs to be run by using the
              schedule.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The identifier (user name) of the user who last modified the
              schedule.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the schedule was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: The name of the schedule.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the schedule.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags associated with this schedule.
    required:
      - Name
    type: object
  EncryptionKeyArn:
    maxLength: 2048
    minLength: 20
    type: string
  EncryptionMode:
    enum:
      - SSE-KMS
      - SSE-S3
    type: string
  ErrorCode:
    pattern: '^[1-5][0-9][0-9]$'
    type: string
  ExcelOptions:
    description: >-
      Represents a set of options that define how DataBrew will interpret a
      Microsoft Excel file when creating a dataset from that file.
    properties:
      HeaderRow:
        allOf:
          - $ref: '#/definitions/HeaderRow'
          - description: >-
              A variable that specifies whether the first row in the file is
              parsed as the header. If this value is false, column names are
              auto-generated.
      SheetIndexes:
        allOf:
          - $ref: '#/definitions/SheetIndexList'
          - description: >-
              One or more sheet numbers in the Excel file that will be included
              in the dataset.
      SheetNames:
        allOf:
          - $ref: '#/definitions/SheetNameList'
          - description: >-
              One or more named sheets in the Excel file that will be included
              in the dataset.
    type: object
  ExecutionTime:
    type: integer
  Expression:
    maxLength: 1024
    minLength: 4
    pattern: '^[<>0-9A-Za-z_:)(!= ]+$'
    type: string
  FilesLimit:
    description: >-
      Represents a limit imposed on number of Amazon S3 files that should be
      selected for a dataset from a connected Amazon S3 path.
    properties:
      MaxFiles:
        allOf:
          - $ref: '#/definitions/MaxFiles'
          - description: The number of Amazon S3 files to select.
      Order:
        allOf:
          - $ref: '#/definitions/Order'
          - description: >-
              A criteria to use for Amazon S3 files sorting before their
              selection. By default uses DESCENDING order, i.e. most recent
              files are selected first. Anotherpossible value is ASCENDING.
      OrderedBy:
        allOf:
          - $ref: '#/definitions/OrderedBy'
          - description: >-
              A criteria to use for Amazon S3 files sorting before their
              selection. By default uses LAST_MODIFIED_DATE as a sorting
              criteria. Currently it's the only allowed value.
    required:
      - MaxFiles
    type: object
  FilterExpression:
    description: >-
      Represents a structure for defining parameter conditions. Supported
      conditions are described here: <a
      href="https://docs-aws.amazon.com/databrew/latest/dg/datasets.multiple-files.html#conditions.for.dynamic.datasets">Supported
      conditions for dynamic datasets</a> in the <i>Glue DataBrew Developer
      Guide</i>.
    properties:
      Expression:
        allOf:
          - $ref: '#/definitions/Expression'
          - description: >-
              The expression which includes condition names followed by
              substitution variables, possibly grouped and combined with other
              conditions. For example, "(starts_with :prefix1 or starts_with
              :prefix2) and (ends_with :suffix1 or ends_with :suffix2)".
              Substitution variables should start with ':' symbol.
      ValuesMap:
        allOf:
          - $ref: '#/definitions/ValuesMap'
          - description: >-
              The map of substitution variable names to their values used in
              this filter expression.
    required:
      - Expression
      - ValuesMap
    type: object
  FormatOptions:
    description: >-
      Represents a set of options that define the structure of either
      comma-separated value (CSV), Excel, or JSON input.
    properties:
      Csv:
        allOf:
          - $ref: '#/definitions/CsvOptions'
          - description: >-
              Options that define how CSV input is to be interpreted by
              DataBrew.
      Excel:
        allOf:
          - $ref: '#/definitions/ExcelOptions'
          - description: >-
              Options that define how Excel input is to be interpreted by
              DataBrew.
      Json:
        allOf:
          - $ref: '#/definitions/JsonOptions'
          - description: >-
              Options that define how JSON input is to be interpreted by
              DataBrew.
    type: object
  GlueConnectionName:
    maxLength: 255
    minLength: 1
    type: string
  HeaderRow:
    type: boolean
  HiddenColumnList:
    items:
      $ref: '#/definitions/ColumnName'
    type: array
  Input:
    description: >-
      Represents information on how DataBrew can find data, in either the Glue
      Data Catalog or Amazon S3.
    properties:
      DataCatalogInputDefinition:
        allOf:
          - $ref: '#/definitions/DataCatalogInputDefinition'
          - description: The Glue Data Catalog parameters for the data.
      DatabaseInputDefinition:
        allOf:
          - $ref: '#/definitions/DatabaseInputDefinition'
          - description: >-
              Connection information for dataset input files stored in a
              database.
      S3InputDefinition:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: The Amazon S3 location where the data is stored.
    type: object
  InputFormat:
    enum:
      - CSV
      - JSON
      - PARQUET
      - EXCEL
    type: string
  InternalServerException: {}
  Job:
    description: Represents all of the attributes of a DataBrew job.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The ID of the Amazon Web Services account that owns the job.
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the job was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The Amazon Resource Name (ARN) of the user who created the job.
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write into.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: A dataset that the job is to process.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job output. For more information, see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/encryption-security-configuration.html">Encrypting
              data written by DataBrew jobs</a> 
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side
              encryption with keys managed by KMS.</p> </li> <li> <p>
              <code>SSE-S3</code> - Server-side encryption with keys managed by
              Amazon S3.</p> </li> </ul>
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              A sample configuration for profile jobs only, which determines the
              number of rows on which the profile job is run. If a
              <code>JobSample</code> value isn't provided, the default value is
              used. The default value is CUSTOM_ROWS for the mode parameter and
              20,000 for the size parameter.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who last modified the
              job.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The modification date and time of the job.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: The current status of Amazon CloudWatch logging for the job.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of nodes that can be consumed when the job
              processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The unique name of the job.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: One or more artifacts that represent output from running the job.
      ProjectName:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that the job is associated with.
      RecipeReference:
        allOf:
          - $ref: '#/definitions/RecipeReference'
          - description: A set of steps that the job runs.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The unique Amazon Resource Name (ARN) for the job.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the role to be assumed for this
              job.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags that have been applied to the job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
      Type:
        allOf:
          - $ref: '#/definitions/JobType'
          - description: >-
              <p>The job type of the job, which must be one of the
              following:</p> <ul> <li> <p> <code>PROFILE</code> - A job to
              analyze a dataset, to determine its size, data types, data
              distribution, and more.</p> </li> <li> <p> <code>RECIPE</code> - A
              job to apply one or more transformations to a dataset.</p> </li>
              </ul>
    required:
      - Name
    type: object
  JobList:
    items:
      $ref: '#/definitions/Job'
    type: array
  JobName:
    maxLength: 240
    minLength: 1
    type: string
  JobNameList:
    items:
      $ref: '#/definitions/JobName'
    maxItems: 50
    type: array
  JobRun:
    description: Represents one run of a DataBrew job.
    properties:
      Attempt:
        allOf:
          - $ref: '#/definitions/Attempt'
          - description: The number of times that DataBrew has attempted to run the job.
      CompletedOn:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the job completed processing.
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write into.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset for the job to process.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/JobRunErrorMessage'
          - description: >-
              A message indicating an error (if any) that was encountered when
              the job ran.
      ExecutionTime:
        allOf:
          - $ref: '#/definitions/ExecutionTime'
          - description: >-
              The amount of time, in seconds, during which a job run consumed
              resources.
      JobName:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job being processed during this run.
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              A sample configuration for profile jobs only, which determines the
              number of rows on which the profile job is run. If a
              <code>JobSample</code> value isn't provided, the default is used.
              The default value is CUSTOM_ROWS for the mode parameter and 20,000
              for the size parameter.
      LogGroupName:
        allOf:
          - $ref: '#/definitions/LogGroupName'
          - description: >-
              The name of an Amazon CloudWatch log group, where the job writes
              diagnostic messages when it runs.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: The current status of Amazon CloudWatch logging for the job run.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: One or more output artifacts from a job run.
      RecipeReference:
        allOf:
          - $ref: '#/definitions/RecipeReference'
          - description: The set of steps processed by the job.
      RunId:
        allOf:
          - $ref: '#/definitions/JobRunId'
          - description: The unique identifier of the job run.
      StartedBy:
        allOf:
          - $ref: '#/definitions/StartedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who initiated the job
              run. 
      StartedOn:
        allOf:
          - $ref: '#/definitions/Date'
          - description: 'The date and time when the job run began. '
      State:
        allOf:
          - $ref: '#/definitions/JobRunState'
          - description: The current state of the job run entity itself.
    type: object
  JobRunErrorMessage:
    type: string
  JobRunId:
    maxLength: 255
    minLength: 1
    type: string
  JobRunList:
    items:
      $ref: '#/definitions/JobRun'
    type: array
  JobRunState:
    enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
    type: string
  JobSample:
    description: >-
      A sample configuration for profile jobs only, which determines the number
      of rows on which the profile job is run. If a <code>JobSample</code> value
      isn't provided, the default is used. The default value is CUSTOM_ROWS for
      the mode parameter and 20,000 for the size parameter.
    properties:
      Mode:
        allOf:
          - $ref: '#/definitions/SampleMode'
          - description: >-
              <p>A value that determines whether the profile job is run on the
              entire dataset or a specified number of rows. This value must be
              one of the following:</p> <ul> <li> <p>FULL_DATASET - The profile
              job is run on the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS -
              The profile job is run on the number of rows specified in the
              <code>Size</code> parameter.</p> </li> </ul>
      Size:
        allOf:
          - $ref: '#/definitions/JobSize'
          - description: >-
              <p>The <code>Size</code> parameter is only required when the mode
              is CUSTOM_ROWS. The profile job is run on the specified number of
              rows. The maximum value for size is Long.MAX_VALUE.</p>
              <p>Long.MAX_VALUE = 9223372036854775807</p>
    type: object
  JobSize:
    type: integer
  JobType:
    enum:
      - PROFILE
      - RECIPE
    type: string
  JsonOptions:
    description: >-
      Represents the JSON-specific options that define how input is to be
      interpreted by Glue DataBrew.
    properties:
      MultiLine:
        allOf:
          - $ref: '#/definitions/MultiLine'
          - description: >-
              A value that specifies whether JSON input contains embedded new
              line characters.
    type: object
  Key:
    maxLength: 1280
    minLength: 1
    type: string
  LastModifiedBy:
    type: string
  ListDatasetsRequest:
    properties: {}
    title: ListDatasetsRequest
    type: object
  ListDatasetsResponse:
    properties:
      Datasets:
        allOf:
          - $ref: '#/definitions/DatasetList'
          - description: A list of datasets that are defined.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
    required:
      - Datasets
    type: object
  ListJobRunsRequest:
    properties: {}
    title: ListJobRunsRequest
    type: object
  ListJobRunsResponse:
    properties:
      JobRuns:
        allOf:
          - $ref: '#/definitions/JobRunList'
          - description: A list of job runs that have occurred for the specified job.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
    required:
      - JobRuns
    type: object
  ListJobsRequest:
    properties: {}
    title: ListJobsRequest
    type: object
  ListJobsResponse:
    properties:
      Jobs:
        allOf:
          - $ref: '#/definitions/JobList'
          - description: A list of jobs that are defined.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
    required:
      - Jobs
    type: object
  ListProjectsRequest:
    properties: {}
    title: ListProjectsRequest
    type: object
  ListProjectsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
      Projects:
        allOf:
          - $ref: '#/definitions/ProjectList'
          - description: A list of projects that are defined .
    required:
      - Projects
    type: object
  ListRecipeVersionsRequest:
    properties: {}
    title: ListRecipeVersionsRequest
    type: object
  ListRecipeVersionsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
      Recipes:
        allOf:
          - $ref: '#/definitions/RecipeList'
          - description: A list of versions for the specified recipe.
    required:
      - Recipes
    type: object
  ListRecipesRequest:
    properties: {}
    title: ListRecipesRequest
    type: object
  ListRecipesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
      Recipes:
        allOf:
          - $ref: '#/definitions/RecipeList'
          - description: A list of recipes that are defined.
    required:
      - Recipes
    type: object
  ListSchedulesRequest:
    properties: {}
    title: ListSchedulesRequest
    type: object
  ListSchedulesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that you can use in a subsequent call to retrieve the next
              set of results.
      Schedules:
        allOf:
          - $ref: '#/definitions/ScheduleList'
          - description: A list of schedules that are defined.
    required:
      - Schedules
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags associated with the DataBrew resource.
    type: object
  LocaleCode:
    maxLength: 100
    minLength: 2
    pattern: '^[A-Za-z0-9_\.#@\-]+$'
    type: string
  LogGroupName:
    maxLength: 512
    minLength: 1
    type: string
  LogSubscription:
    enum:
      - ENABLE
      - DISABLE
    type: string
  MaxCapacity:
    type: integer
  MaxFiles:
    minimum: 1
    type: integer
  MaxResults100:
    maximum: 100
    minimum: 1
    type: integer
  MaxRetries:
    minimum: 0
    type: integer
  MultiLine:
    type: boolean
  NextToken:
    maxLength: 2000
    minLength: 1
    type: string
  OpenedBy:
    type: string
  Operation:
    maxLength: 128
    minLength: 1
    pattern: '^[A-Z\_]+$'
    type: string
  Order:
    enum:
      - DESCENDING
      - ASCENDING
    type: string
  OrderedBy:
    enum:
      - LAST_MODIFIED_DATE
    type: string
  Output:
    description: >-
      Represents options that specify how and where in Amazon S3 DataBrew writes
      the output generated by recipe jobs or profile jobs.
    properties:
      CompressionFormat:
        allOf:
          - $ref: '#/definitions/CompressionFormat'
          - description: >-
              The compression algorithm used to compress the output text of the
              job.
      Format:
        allOf:
          - $ref: '#/definitions/OutputFormat'
          - description: The data format of the output of the job.
      FormatOptions:
        allOf:
          - $ref: '#/definitions/OutputFormatOptions'
          - description: >-
              Represents options that define how DataBrew formats job output
              files.
      Location:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: The location in Amazon S3 where the job writes its output.
      Overwrite:
        allOf:
          - $ref: '#/definitions/OverwriteOutput'
          - description: >-
              A value that, if true, means that any data in the location
              specified for output is overwritten with new output.
      PartitionColumns:
        allOf:
          - $ref: '#/definitions/ColumnNameList'
          - description: >-
              The names of one or more partition columns for the output of the
              job.
    required:
      - Location
    type: object
  OutputFormat:
    enum:
      - CSV
      - JSON
      - PARQUET
      - GLUEPARQUET
      - AVRO
      - ORC
      - XML
      - TABLEAUHYPER
    type: string
  OutputFormatOptions:
    description: >-
      Represents a set of options that define the structure of comma-separated
      (CSV) job output.
    properties:
      Csv:
        allOf:
          - $ref: '#/definitions/CsvOutputOptions'
          - description: >-
              Represents a set of options that define the structure of
              comma-separated value (CSV) job output.
    type: object
  OutputList:
    items:
      $ref: '#/definitions/Output'
    minItems: 1
    type: array
  OverwriteOutput:
    type: boolean
  ParameterMap:
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
    type: object
  ParameterName:
    maxLength: 128
    minLength: 1
    pattern: '^[A-Za-z0-9]+$'
    type: string
  ParameterType:
    enum:
      - Datetime
      - Number
      - String
    type: string
  ParameterValue:
    maxLength: 32768
    minLength: 1
    type: string
  PathOptions:
    description: >-
      Represents a set of options that define how DataBrew selects files for a
      given Amazon S3 path in a dataset.
    properties:
      FilesLimit:
        allOf:
          - $ref: '#/definitions/FilesLimit'
          - description: >-
              If provided, this structure imposes a limit on a number of files
              that should be selected.
      LastModifiedDateCondition:
        allOf:
          - $ref: '#/definitions/FilterExpression'
          - description: >-
              If provided, this structure defines a date range for matching
              Amazon S3 objects based on their LastModifiedDate attribute in
              Amazon S3.
      Parameters:
        allOf:
          - $ref: '#/definitions/PathParametersMap'
          - description: >-
              A structure that maps names of parameters used in the Amazon S3
              path of a dataset to their definitions.
    type: object
  PathParameterName:
    maxLength: 255
    minLength: 1
    type: string
  PathParametersMap:
    additionalProperties:
      $ref: '#/definitions/DatasetParameter'
    description: >-
      A structure that map names of parameters used in the Amazon S3 path of a
      dataset to their definitions. A definition includes parameter type and
      conditions.
    maxProperties: 10
    minProperties: 1
    type: object
  Preview:
    type: boolean
  ProfileConfiguration:
    description: >-
      Configuration for profile jobs. Configuration can be used to select
      columns, do evaluations, and override default parameters of evaluations.
      When configuration is undefined, the profile job will apply default
      settings to all supported columns. 
    properties:
      ColumnStatisticsConfigurations:
        allOf:
          - $ref: '#/definitions/ColumnStatisticsConfigurationList'
          - description: >-
              List of configurations for column evaluations.
              ColumnStatisticsConfigurations are used to select evaluations and
              override parameters of evaluations for particular columns. When
              ColumnStatisticsConfigurations is undefined, the profile job will
              profile all supported columns and run all supported evaluations. 
      DatasetStatisticsConfiguration:
        allOf:
          - $ref: '#/definitions/StatisticsConfiguration'
          - description: >-
              Configuration for inter-column evaluations. Configuration can be
              used to select evaluations and override parameters of evaluations.
              When configuration is undefined, the profile job will run all
              supported inter-column evaluations. 
      ProfileColumns:
        allOf:
          - $ref: '#/definitions/ColumnSelectorList'
          - description: >-
              List of column selectors. ProfileColumns can be used to select
              columns from the dataset. When ProfileColumns is undefined, the
              profile job will profile all supported columns. 
    type: object
  Project:
    description: Represents all of the attributes of a DataBrew project.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The ID of the Amazon Web Services account that owns the project.
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the project was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The Amazon Resource Name (ARN) of the user who crated the project.
      DatasetName:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The dataset that the project is to act upon.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who last modified the
              project.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The last modification date and time for the project.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The unique name of a project.
      OpenDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the project was opened.
      OpenedBy:
        allOf:
          - $ref: '#/definitions/OpenedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user that opened the project
              for use.
      RecipeName:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: >-
              The name of a recipe that will be developed during a project
              session.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the project.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the role that will be assumed
              for this project.
      Sample:
        allOf:
          - $ref: '#/definitions/Sample'
          - description: >-
              The sample size and sampling type to apply to the data. If this
              parameter isn't specified, then the sample consists of the first
              500 rows from the dataset.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags that have been applied to the project.
    required:
      - Name
      - RecipeName
    type: object
  ProjectList:
    items:
      $ref: '#/definitions/Project'
    type: array
  ProjectName:
    maxLength: 255
    minLength: 1
    type: string
  PublishRecipeRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/RecipeDescription'
          - description: >-
              A description of the recipe to be published, for this version of
              the recipe.
    title: PublishRecipeRequest
    type: object
  PublishRecipeResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe that you published.
    required:
      - Name
    type: object
  PublishedBy:
    type: string
  Recipe:
    description: Represents one or more actions to be performed on a DataBrew dataset.
    properties:
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the recipe was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: The Amazon Resource Name (ARN) of the user who created the recipe.
      Description:
        allOf:
          - $ref: '#/definitions/RecipeDescription'
          - description: The description of the recipe.
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who last modified the
              recipe.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The last modification date and time of the recipe.
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The unique name for the recipe.
      ProjectName:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that the recipe is associated with.
      PublishedBy:
        allOf:
          - $ref: '#/definitions/PublishedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who published the
              recipe.
      PublishedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the recipe was published.
      RecipeVersion:
        allOf:
          - $ref: '#/definitions/RecipeVersion'
          - description: >-
              <p>The identifier for the version for the recipe. Must be one of
              the following:</p> <ul> <li> <p>Numeric version (<code>X.Y</code>)
              - <code>X</code> and <code>Y</code> stand for major and minor
              version numbers. The maximum length of each is 6 digits, and
              neither can be negative values. Both <code>X</code> and
              <code>Y</code> are required, and "0.0" isn't a valid version.</p>
              </li> <li> <p> <code>LATEST_WORKING</code> - the most recent valid
              version being developed in a DataBrew project.</p> </li> <li> <p>
              <code>LATEST_PUBLISHED</code> - the most recent published
              version.</p> </li> </ul>
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) for the recipe.
      Steps:
        allOf:
          - $ref: '#/definitions/RecipeStepList'
          - description: A list of steps that are defined by the recipe.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags that have been applied to the recipe.
    required:
      - Name
    type: object
  RecipeAction:
    description: >-
      Represents a transformation and associated parameters that are used to
      apply a change to a DataBrew dataset. For more information, see <a
      href="https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html">Recipe
      actions reference</a>.
    properties:
      Operation:
        allOf:
          - $ref: '#/definitions/Operation'
          - description: >-
              The name of a valid DataBrew transformation to be performed on the
              data.
      Parameters:
        allOf:
          - $ref: '#/definitions/ParameterMap'
          - description: Contextual parameters for the transformation.
    required:
      - Operation
    type: object
  RecipeDescription:
    maxLength: 1024
    type: string
  RecipeErrorList:
    items:
      $ref: '#/definitions/RecipeVersionErrorDetail'
    type: array
  RecipeErrorMessage:
    type: string
  RecipeList:
    items:
      $ref: '#/definitions/Recipe'
    type: array
  RecipeName:
    maxLength: 255
    minLength: 1
    type: string
  RecipeReference:
    description: Represents the name and version of a DataBrew recipe.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe.
      RecipeVersion:
        allOf:
          - $ref: '#/definitions/RecipeVersion'
          - description: 'The identifier for the version for the recipe. '
    required:
      - Name
    type: object
  RecipeStep:
    description: Represents a single step from a DataBrew recipe to be performed.
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/RecipeAction'
          - description: The particular action to be performed in the recipe step.
      ConditionExpressions:
        allOf:
          - $ref: '#/definitions/ConditionExpressionList'
          - description: >-
              <p>One or more conditions that must be met for the recipe step to
              succeed.</p> <note> <p>All of the conditions in the array must be
              met. In other words, all of the conditions must be combined using
              a logical AND operation.</p> </note>
    required:
      - Action
    type: object
  RecipeStepList:
    items:
      $ref: '#/definitions/RecipeStep'
    type: array
  RecipeVersion:
    maxLength: 16
    minLength: 1
    type: string
  RecipeVersionErrorDetail:
    description: >-
      Represents any errors encountered when attempting to delete multiple
      recipe versions.
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The HTTP status code for the error.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/RecipeErrorMessage'
          - description: The text of the error message.
      RecipeVersion:
        allOf:
          - $ref: '#/definitions/RecipeVersion'
          - description: The identifier for the recipe version associated with this error.
    type: object
  RecipeVersionList:
    items:
      $ref: '#/definitions/RecipeVersion'
    maxItems: 50
    minItems: 1
    type: array
  ResourceNotFoundException: {}
  Result:
    type: string
  S3Location:
    description: >-
      Represents an Amazon S3 location (bucket name and object key) where
      DataBrew can read input data, or write output from a job.
    properties:
      Bucket:
        allOf:
          - $ref: '#/definitions/Bucket'
          - description: The Amazon S3 bucket name.
      Key:
        allOf:
          - $ref: '#/definitions/Key'
          - description: The unique name of the object in the bucket.
    required:
      - Bucket
    type: object
  S3TableOutputOptions:
    description: >-
      Represents options that specify how and where DataBrew writes the Amazon
      S3 output generated by recipe jobs.
    properties:
      Location:
        allOf:
          - $ref: '#/definitions/S3Location'
          - description: >-
              Represents an Amazon S3 location (bucket name and object key)
              where DataBrew can write output from a job.
    required:
      - Location
    type: object
  Sample:
    description: >-
      Represents the sample size and sampling type for DataBrew to use for
      interactive data analysis.
    properties:
      Size:
        allOf:
          - $ref: '#/definitions/SampleSize'
          - description: The number of rows in the sample.
      Type:
        allOf:
          - $ref: '#/definitions/SampleType'
          - description: The way in which DataBrew obtains rows from a dataset.
    required:
      - Type
    type: object
  SampleMode:
    enum:
      - FULL_DATASET
      - CUSTOM_ROWS
    type: string
  SampleSize:
    maximum: 5000
    minimum: 1
    type: integer
  SampleType:
    enum:
      - FIRST_N
      - LAST_N
      - RANDOM
    type: string
  Schedule:
    description: Represents one or more dates and times when a job is to run.
    properties:
      AccountId:
        allOf:
          - $ref: '#/definitions/AccountId'
          - description: The ID of the Amazon Web Services account that owns the schedule.
      CreateDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the schedule was created.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/CreatedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who created the
              schedule.
      CronExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              The dates and times when the job is to run. For more information,
              see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
              expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
      JobNames:
        allOf:
          - $ref: '#/definitions/JobNameList'
          - description: 'A list of jobs to be run, according to the schedule.'
      LastModifiedBy:
        allOf:
          - $ref: '#/definitions/LastModifiedBy'
          - description: >-
              The Amazon Resource Name (ARN) of the user who last modified the
              schedule.
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time when the schedule was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: The name of the schedule.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the schedule.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: Metadata tags that have been applied to the schedule.
    required:
      - Name
    type: object
  ScheduleList:
    items:
      $ref: '#/definitions/Schedule'
    type: array
  ScheduleName:
    maxLength: 255
    minLength: 1
    type: string
  SendProjectSessionActionRequest:
    properties:
      ClientSessionId:
        allOf:
          - $ref: '#/definitions/ClientSessionId'
          - description: >-
              A unique identifier for an interactive session that's currently
              open and ready for work. The action will be performed on this
              session.
      Preview:
        allOf:
          - $ref: '#/definitions/Preview'
          - description: >-
              If true, the result of the recipe step will be returned, but not
              applied.
      RecipeStep:
        $ref: '#/definitions/RecipeStep'
      StepIndex:
        allOf:
          - $ref: '#/definitions/StepIndex'
          - description: >-
              The index from which to preview a step. This index is used to
              preview the result of steps that have already been applied, so
              that the resulting view frame is from earlier in the view frame
              stack.
      ViewFrame:
        $ref: '#/definitions/ViewFrame'
    title: SendProjectSessionActionRequest
    type: object
  SendProjectSessionActionResponse:
    properties:
      ActionId:
        allOf:
          - $ref: '#/definitions/ActionId'
          - description: A unique identifier for the action that was performed.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that was affected by the action.
      Result:
        allOf:
          - $ref: '#/definitions/Result'
          - description: A message indicating the result of performing the action.
    required:
      - Name
    type: object
  ServiceQuotaExceededException: {}
  SessionStatus:
    enum:
      - ASSIGNED
      - FAILED
      - INITIALIZING
      - PROVISIONING
      - READY
      - RECYCLING
      - ROTATING
      - TERMINATED
      - TERMINATING
      - UPDATING
    type: string
  SheetIndex:
    maximum: 200
    minimum: 0
    type: integer
  SheetIndexList:
    items:
      $ref: '#/definitions/SheetIndex'
    maxItems: 1
    minItems: 1
    type: array
  SheetName:
    maxLength: 31
    minLength: 1
    type: string
  SheetNameList:
    items:
      $ref: '#/definitions/SheetName'
    maxItems: 1
    minItems: 1
    type: array
  Source:
    enum:
      - S3
      - DATA-CATALOG
      - DATABASE
    type: string
  StartColumnIndex:
    minimum: 0
    type: integer
  StartJobRunRequest:
    properties: {}
    title: StartJobRunRequest
    type: object
  StartJobRunResponse:
    properties:
      RunId:
        allOf:
          - $ref: '#/definitions/JobRunId'
          - description: A system-generated identifier for this particular job run.
    required:
      - RunId
    type: object
  StartProjectSessionRequest:
    properties:
      AssumeControl:
        allOf:
          - $ref: '#/definitions/AssumeControl'
          - description: >-
              A value that, if true, enables you to take control of a session,
              even if a different client is currently accessing the project.
    title: StartProjectSessionRequest
    type: object
  StartProjectSessionResponse:
    properties:
      ClientSessionId:
        allOf:
          - $ref: '#/definitions/ClientSessionId'
          - description: A system-generated identifier for the session.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project to be acted upon.
    required:
      - Name
    type: object
  StartedBy:
    type: string
  Statistic:
    maxLength: 128
    minLength: 1
    pattern: '^[A-Z\_]+$'
    type: string
  StatisticList:
    items:
      $ref: '#/definitions/Statistic'
    minItems: 1
    type: array
  StatisticOverride:
    description: 'Override of a particular evaluation for a profile job. '
    properties:
      Parameters:
        allOf:
          - $ref: '#/definitions/ParameterMap'
          - description: A map that includes overrides of an evaluation’s parameters.
      Statistic:
        allOf:
          - $ref: '#/definitions/Statistic'
          - description: The name of an evaluation
    required:
      - Statistic
      - Parameters
    type: object
  StatisticOverrideList:
    items:
      $ref: '#/definitions/StatisticOverride'
    minItems: 1
    type: array
  StatisticsConfiguration:
    description: >-
      Configuration of evaluations for a profile job. This configuration can be
      used to select evaluations and override the parameters of selected
      evaluations. 
    properties:
      IncludedStatistics:
        allOf:
          - $ref: '#/definitions/StatisticList'
          - description: >-
              List of included evaluations. When the list is undefined, all
              supported evaluations will be included.
      Overrides:
        allOf:
          - $ref: '#/definitions/StatisticOverrideList'
          - description: List of overrides for evaluations.
    type: object
  StepIndex:
    minimum: 0
    type: integer
  StopJobRunRequest:
    properties: {}
    title: StopJobRunRequest
    type: object
  StopJobRunResponse:
    properties:
      RunId:
        allOf:
          - $ref: '#/definitions/JobRunId'
          - description: The ID of the job run that you stopped.
    required:
      - RunId
    type: object
  TableName:
    maxLength: 255
    minLength: 1
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 200
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: One or more tags to be assigned to the resource.
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  TargetColumn:
    maxLength: 1024
    minLength: 1
    type: string
  Timeout:
    minimum: 0
    type: integer
  TimezoneOffset:
    maxLength: 6
    minLength: 1
    pattern: '^(Z|[-+](\d|\d{2}|\d{2}:?\d{2}))$'
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateDatasetRequest:
    properties:
      Format:
        allOf:
          - $ref: '#/definitions/InputFormat'
          - description: >-
              The file format of a dataset that is created from an Amazon S3
              file or folder.
      FormatOptions:
        $ref: '#/definitions/FormatOptions'
      Input:
        $ref: '#/definitions/Input'
      PathOptions:
        allOf:
          - $ref: '#/definitions/PathOptions'
          - description: >-
              A set of options that defines how DataBrew interprets an Amazon S3
              path of the dataset.
    required:
      - Input
    title: UpdateDatasetRequest
    type: object
  UpdateDatasetResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/DatasetName'
          - description: The name of the dataset that you updated.
    required:
      - Name
    type: object
  UpdateProfileJobRequest:
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/ProfileConfiguration'
          - description: >-
              Configuration for profile jobs. Used to select columns, do
              evaluations, and override default parameters of evaluations. When
              configuration is null, the profile job will run with default
              settings.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job.
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side
              encryption with keys managed by KMS.</p> </li> <li> <p>
              <code>SSE-S3</code> - Server-side encryption with keys managed by
              Amazon S3.</p> </li> </ul>
      JobSample:
        allOf:
          - $ref: '#/definitions/JobSample'
          - description: >-
              Sample configuration for Profile Jobs only. Determines the number
              of rows on which the Profile job will be executed. If a JobSample
              value is not provided for profile jobs, the default value will be
              used. The default value is CUSTOM_ROWS for the mode parameter and
              20000 for the size parameter.
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: >-
              Enables or disables Amazon CloudWatch logging for the job. If
              logging is enabled, CloudWatch writes one log stream for each job
              run.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of compute nodes that DataBrew can use when the
              job processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      OutputLocation:
        $ref: '#/definitions/S3Location'
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be assumed when DataBrew runs the job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
    required:
      - OutputLocation
      - RoleArn
    title: UpdateProfileJobRequest
    type: object
  UpdateProfileJobResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job that was updated.
    required:
      - Name
    type: object
  UpdateProjectRequest:
    properties:
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role to be assumed for
              this request.
      Sample:
        $ref: '#/definitions/Sample'
    required:
      - RoleArn
    title: UpdateProjectRequest
    type: object
  UpdateProjectResponse:
    properties:
      LastModifiedDate:
        allOf:
          - $ref: '#/definitions/Date'
          - description: The date and time that the project was last modified.
      Name:
        allOf:
          - $ref: '#/definitions/ProjectName'
          - description: The name of the project that you updated.
    required:
      - Name
    type: object
  UpdateRecipeJobRequest:
    properties:
      DataCatalogOutputs:
        allOf:
          - $ref: '#/definitions/DataCatalogOutputList'
          - description: >-
              One or more artifacts that represent the Glue Data Catalog output
              from running the job.
      DatabaseOutputs:
        allOf:
          - $ref: '#/definitions/DatabaseOutputList'
          - description: >-
              Represents a list of JDBC database output objects which defines
              the output destination for a DataBrew recipe job to write into.
      EncryptionKeyArn:
        allOf:
          - $ref: '#/definitions/EncryptionKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an encryption key that is used
              to protect the job.
      EncryptionMode:
        allOf:
          - $ref: '#/definitions/EncryptionMode'
          - description: >-
              <p>The encryption mode for the job, which can be one of the
              following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side
              encryption with keys managed by KMS.</p> </li> <li> <p>
              <code>SSE-S3</code> - Server-side encryption with keys managed by
              Amazon S3.</p> </li> </ul>
      LogSubscription:
        allOf:
          - $ref: '#/definitions/LogSubscription'
          - description: >-
              Enables or disables Amazon CloudWatch logging for the job. If
              logging is enabled, CloudWatch writes one log stream for each job
              run.
      MaxCapacity:
        allOf:
          - $ref: '#/definitions/MaxCapacity'
          - description: >-
              The maximum number of nodes that DataBrew can consume when the job
              processes data.
      MaxRetries:
        allOf:
          - $ref: '#/definitions/MaxRetries'
          - description: >-
              The maximum number of times to retry the job after a job run
              fails.
      Outputs:
        allOf:
          - $ref: '#/definitions/OutputList'
          - description: >-
              One or more artifacts that represent the output from running the
              job. 
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be assumed when DataBrew runs the job.
      Timeout:
        allOf:
          - $ref: '#/definitions/Timeout'
          - description: >-
              The job's timeout in minutes. A job that attempts to run longer
              than this timeout period ends with a status of
              <code>TIMEOUT</code>.
    required:
      - RoleArn
    title: UpdateRecipeJobRequest
    type: object
  UpdateRecipeJobResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/JobName'
          - description: The name of the job that you updated.
    required:
      - Name
    type: object
  UpdateRecipeRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/RecipeDescription'
          - description: A description of the recipe.
      Steps:
        allOf:
          - $ref: '#/definitions/RecipeStepList'
          - description: >-
              One or more steps to be performed by the recipe. Each step
              consists of an action, and the conditions under which the action
              should succeed.
    title: UpdateRecipeRequest
    type: object
  UpdateRecipeResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/RecipeName'
          - description: The name of the recipe that was updated.
    required:
      - Name
    type: object
  UpdateScheduleRequest:
    properties:
      CronExpression:
        allOf:
          - $ref: '#/definitions/CronExpression'
          - description: >-
              The date or dates and time or times when the jobs are to be run.
              For more information, see <a
              href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
              expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
      JobNames:
        allOf:
          - $ref: '#/definitions/JobNameList'
          - description: The name or names of one or more jobs to be run for this schedule.
    required:
      - CronExpression
    title: UpdateScheduleRequest
    type: object
  UpdateScheduleResponse:
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/ScheduleName'
          - description: The name of the schedule that was updated.
    required:
      - Name
    type: object
  ValidationException: {}
  ValueReference:
    maxLength: 128
    minLength: 2
    pattern: '^:[A-Za-z0-9_]+$'
    type: string
  ValuesMap:
    additionalProperties:
      $ref: '#/definitions/ConditionValue'
    type: object
  ViewFrame:
    description: Represents the data being transformed during an action.
    properties:
      ColumnRange:
        allOf:
          - $ref: '#/definitions/ColumnRange'
          - description: >-
              The number of columns to include in the view frame, beginning with
              the <code>StartColumnIndex</code> value and ignoring any columns
              in the <code>HiddenColumns</code> list.
      HiddenColumns:
        allOf:
          - $ref: '#/definitions/HiddenColumnList'
          - description: A list of columns to hide in the view frame.
      StartColumnIndex:
        allOf:
          - $ref: '#/definitions/StartColumnIndex'
          - description: >-
              The starting index for the range of columns to return in the view
              frame.
    required:
      - StartColumnIndex
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/databrew/'
host: databrew.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew
    simplifies data preparation tasks, targeting data issues that are hard to
    spot and time-consuming to fix. DataBrew empowers users of all technical
    levels to visualize the data and perform one-click data transformations,
    with no coding required.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Glue DataBrew
  version: '2017-07-25'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: databrew
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/databrew-2017-07-25.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: databrew
paths:
  /datasets:
    get:
      description: Lists all of the DataBrew datasets.
      operationId: ListDatasets
      parameters:
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new DataBrew dataset.
      operationId: CreateDataset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Format:
                description: >-
                  The file format of a dataset that is created from an Amazon S3
                  file or folder.
                enum:
                  - CSV
                  - JSON
                  - PARQUET
                  - EXCEL
                type: string
              FormatOptions:
                description: >-
                  Represents a set of options that define the structure of
                  either comma-separated value (CSV), Excel, or JSON input.
                properties:
                  Csv:
                    allOf:
                      - $ref: '#/definitions/CsvOptions'
                      - description: >-
                          Options that define how CSV input is to be interpreted
                          by DataBrew.
                  Excel:
                    allOf:
                      - $ref: '#/definitions/ExcelOptions'
                      - description: >-
                          Options that define how Excel input is to be
                          interpreted by DataBrew.
                  Json:
                    allOf:
                      - $ref: '#/definitions/JsonOptions'
                      - description: >-
                          Options that define how JSON input is to be
                          interpreted by DataBrew.
                type: object
              Input:
                description: >-
                  Represents information on how DataBrew can find data, in
                  either the Glue Data Catalog or Amazon S3.
                properties:
                  DataCatalogInputDefinition:
                    allOf:
                      - $ref: '#/definitions/DataCatalogInputDefinition'
                      - description: The Glue Data Catalog parameters for the data.
                  DatabaseInputDefinition:
                    allOf:
                      - $ref: '#/definitions/DatabaseInputDefinition'
                      - description: >-
                          Connection information for dataset input files stored
                          in a database.
                  S3InputDefinition:
                    allOf:
                      - $ref: '#/definitions/S3Location'
                      - description: The Amazon S3 location where the data is stored.
                type: object
              Name:
                description: >-
                  The name of the dataset to be created. Valid characters are
                  alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and
                  space.
                maxLength: 255
                minLength: 1
                type: string
              PathOptions:
                description: >-
                  Represents a set of options that define how DataBrew selects
                  files for a given Amazon S3 path in a dataset.
                properties:
                  FilesLimit:
                    allOf:
                      - $ref: '#/definitions/FilesLimit'
                      - description: >-
                          If provided, this structure imposes a limit on a
                          number of files that should be selected.
                  LastModifiedDateCondition:
                    allOf:
                      - $ref: '#/definitions/FilterExpression'
                      - description: >-
                          If provided, this structure defines a date range for
                          matching Amazon S3 objects based on their
                          LastModifiedDate attribute in Amazon S3.
                  Parameters:
                    allOf:
                      - $ref: '#/definitions/PathParametersMap'
                      - description: >-
                          A structure that maps names of parameters used in the
                          Amazon S3 path of a dataset to their definitions.
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this dataset.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - Name
              - Input
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/datasets/{name}':
    delete:
      description: Deletes a dataset from DataBrew.
      operationId: DeleteDataset
      parameters:
        - description: The name of the dataset to be deleted.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDatasetResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: Returns the definition of a specific DataBrew dataset.
      operationId: DescribeDataset
      parameters:
        - description: The name of the dataset to be described.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Modifies the definition of an existing DataBrew dataset.
      operationId: UpdateDataset
      parameters:
        - description: The name of the dataset to be updated.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Format:
                description: >-
                  The file format of a dataset that is created from an Amazon S3
                  file or folder.
                enum:
                  - CSV
                  - JSON
                  - PARQUET
                  - EXCEL
                type: string
              FormatOptions:
                description: >-
                  Represents a set of options that define the structure of
                  either comma-separated value (CSV), Excel, or JSON input.
                properties:
                  Csv:
                    allOf:
                      - $ref: '#/definitions/CsvOptions'
                      - description: >-
                          Options that define how CSV input is to be interpreted
                          by DataBrew.
                  Excel:
                    allOf:
                      - $ref: '#/definitions/ExcelOptions'
                      - description: >-
                          Options that define how Excel input is to be
                          interpreted by DataBrew.
                  Json:
                    allOf:
                      - $ref: '#/definitions/JsonOptions'
                      - description: >-
                          Options that define how JSON input is to be
                          interpreted by DataBrew.
                type: object
              Input:
                description: >-
                  Represents information on how DataBrew can find data, in
                  either the Glue Data Catalog or Amazon S3.
                properties:
                  DataCatalogInputDefinition:
                    allOf:
                      - $ref: '#/definitions/DataCatalogInputDefinition'
                      - description: The Glue Data Catalog parameters for the data.
                  DatabaseInputDefinition:
                    allOf:
                      - $ref: '#/definitions/DatabaseInputDefinition'
                      - description: >-
                          Connection information for dataset input files stored
                          in a database.
                  S3InputDefinition:
                    allOf:
                      - $ref: '#/definitions/S3Location'
                      - description: The Amazon S3 location where the data is stored.
                type: object
              PathOptions:
                description: >-
                  Represents a set of options that define how DataBrew selects
                  files for a given Amazon S3 path in a dataset.
                properties:
                  FilesLimit:
                    allOf:
                      - $ref: '#/definitions/FilesLimit'
                      - description: >-
                          If provided, this structure imposes a limit on a
                          number of files that should be selected.
                  LastModifiedDateCondition:
                    allOf:
                      - $ref: '#/definitions/FilterExpression'
                      - description: >-
                          If provided, this structure defines a date range for
                          matching Amazon S3 objects based on their
                          LastModifiedDate attribute in Amazon S3.
                  Parameters:
                    allOf:
                      - $ref: '#/definitions/PathParametersMap'
                      - description: >-
                          A structure that maps names of parameters used in the
                          Amazon S3 path of a dataset to their definitions.
                type: object
            required:
              - Input
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDatasetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /jobs:
    get:
      description: Lists all of the DataBrew jobs that are defined.
      operationId: ListJobs
      parameters:
        - description: >-
            The name of a dataset. Using this parameter indicates to return only
            those jobs that act on the specified dataset.
          in: query
          maxLength: 255
          minLength: 1
          name: datasetName
          required: false
          type: string
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            A token generated by DataBrew that specifies where to continue
            pagination if a previous request was truncated. To get the next set
            of pages, pass in the NextToken value from the response object of
            the previous page call. 
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: >-
            The name of a project. Using this parameter indicates to return only
            those jobs that are associated with the specified project.
          in: query
          maxLength: 255
          minLength: 1
          name: projectName
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/jobs/{name}':
    delete:
      description: Deletes the specified DataBrew job.
      operationId: DeleteJob
      parameters:
        - description: The name of the job to be deleted.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteJobResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: Returns the definition of a specific DataBrew job.
      operationId: DescribeJob
      parameters:
        - description: The name of the job to be described.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/jobs/{name}/jobRun/{runId}':
    get:
      description: Represents one run of a DataBrew job.
      operationId: DescribeJobRun
      parameters:
        - description: The name of the job being processed during this run.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
        - description: The unique identifier of the job run.
          in: path
          maxLength: 255
          minLength: 1
          name: runId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobRunResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/jobs/{name}/jobRun/{runId}/stopJobRun':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: Stops a particular run of a job.
      operationId: StopJobRun
      parameters:
        - description: The name of the job to be stopped.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
        - description: The ID of the job run to be stopped.
          in: path
          maxLength: 255
          minLength: 1
          name: runId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopJobRunResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/jobs/{name}/jobRuns':
    get:
      description: Lists all of the previous runs of a particular DataBrew job.
      operationId: ListJobRuns
      parameters:
        - description: The name of the job.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobRunsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/jobs/{name}/startJobRun':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: Runs a DataBrew job.
      operationId: StartJobRun
      parameters:
        - description: The name of the job to be run.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartJobRunResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /profileJobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new job to analyze a dataset and create its data profile.
      operationId: CreateProfileJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Configuration:
                description: >-
                  Configuration for profile jobs. Configuration can be used to
                  select columns, do evaluations, and override default
                  parameters of evaluations. When configuration is undefined,
                  the profile job will apply default settings to all supported
                  columns. 
                properties:
                  ColumnStatisticsConfigurations:
                    allOf:
                      - $ref: '#/definitions/ColumnStatisticsConfigurationList'
                      - description: >-
                          List of configurations for column evaluations.
                          ColumnStatisticsConfigurations are used to select
                          evaluations and override parameters of evaluations for
                          particular columns. When
                          ColumnStatisticsConfigurations is undefined, the
                          profile job will profile all supported columns and run
                          all supported evaluations. 
                  DatasetStatisticsConfiguration:
                    allOf:
                      - $ref: '#/definitions/StatisticsConfiguration'
                      - description: >-
                          Configuration for inter-column evaluations.
                          Configuration can be used to select evaluations and
                          override parameters of evaluations. When configuration
                          is undefined, the profile job will run all supported
                          inter-column evaluations. 
                  ProfileColumns:
                    allOf:
                      - $ref: '#/definitions/ColumnSelectorList'
                      - description: >-
                          List of column selectors. ProfileColumns can be used
                          to select columns from the dataset. When
                          ProfileColumns is undefined, the profile job will
                          profile all supported columns. 
                type: object
              DatasetName:
                description: The name of the dataset that this job is to act upon.
                maxLength: 255
                minLength: 1
                type: string
              EncryptionKeyArn:
                description: >-
                  The Amazon Resource Name (ARN) of an encryption key that is
                  used to protect the job.
                maxLength: 2048
                minLength: 20
                type: string
              EncryptionMode:
                description: >-
                  <p>The encryption mode for the job, which can be one of the
                  following:</p> <ul> <li> <p> <code>SSE-KMS</code> -
                  <code>SSE-KMS</code> - Server-side encryption with KMS-managed
                  keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side
                  encryption with keys managed by Amazon S3.</p> </li> </ul>
                enum:
                  - SSE-KMS
                  - SSE-S3
                type: string
              JobSample:
                description: >-
                  A sample configuration for profile jobs only, which determines
                  the number of rows on which the profile job is run. If a
                  <code>JobSample</code> value isn't provided, the default is
                  used. The default value is CUSTOM_ROWS for the mode parameter
                  and 20,000 for the size parameter.
                properties:
                  Mode:
                    allOf:
                      - $ref: '#/definitions/SampleMode'
                      - description: >-
                          <p>A value that determines whether the profile job is
                          run on the entire dataset or a specified number of
                          rows. This value must be one of the following:</p>
                          <ul> <li> <p>FULL_DATASET - The profile job is run on
                          the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS -
                          The profile job is run on the number of rows specified
                          in the <code>Size</code> parameter.</p> </li> </ul>
                  Size:
                    allOf:
                      - $ref: '#/definitions/JobSize'
                      - description: >-
                          <p>The <code>Size</code> parameter is only required
                          when the mode is CUSTOM_ROWS. The profile job is run
                          on the specified number of rows. The maximum value for
                          size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE =
                          9223372036854775807</p>
                type: object
              LogSubscription:
                description: >-
                  Enables or disables Amazon CloudWatch logging for the job. If
                  logging is enabled, CloudWatch writes one log stream for each
                  job run.
                enum:
                  - ENABLE
                  - DISABLE
                type: string
              MaxCapacity:
                description: >-
                  The maximum number of nodes that DataBrew can use when the job
                  processes data.
                type: integer
              MaxRetries:
                description: >-
                  The maximum number of times to retry the job after a job run
                  fails.
                minimum: 0
                type: integer
              Name:
                description: >-
                  The name of the job to be created. Valid characters are
                  alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and
                  space.
                maxLength: 240
                minLength: 1
                type: string
              OutputLocation:
                description: >-
                  Represents an Amazon S3 location (bucket name and object key)
                  where DataBrew can read input data, or write output from a
                  job.
                properties:
                  Bucket:
                    allOf:
                      - $ref: '#/definitions/Bucket'
                      - description: The Amazon S3 bucket name.
                  Key:
                    allOf:
                      - $ref: '#/definitions/Key'
                      - description: The unique name of the object in the bucket.
                type: object
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Identity and Access
                  Management (IAM) role to be assumed when DataBrew runs the
                  job.
                maxLength: 2048
                minLength: 20
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this job.
                maxProperties: 200
                minProperties: 1
                type: object
              Timeout:
                description: >-
                  The job's timeout in minutes. A job that attempts to run
                  longer than this timeout period ends with a status of
                  <code>TIMEOUT</code>.
                minimum: 0
                type: integer
            required:
              - DatasetName
              - Name
              - OutputLocation
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProfileJobResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/profileJobs/{name}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Modifies the definition of an existing profile job.
      operationId: UpdateProfileJob
      parameters:
        - description: The name of the job to be updated.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Configuration:
                description: >-
                  Configuration for profile jobs. Configuration can be used to
                  select columns, do evaluations, and override default
                  parameters of evaluations. When configuration is undefined,
                  the profile job will apply default settings to all supported
                  columns. 
                properties:
                  ColumnStatisticsConfigurations:
                    allOf:
                      - $ref: '#/definitions/ColumnStatisticsConfigurationList'
                      - description: >-
                          List of configurations for column evaluations.
                          ColumnStatisticsConfigurations are used to select
                          evaluations and override parameters of evaluations for
                          particular columns. When
                          ColumnStatisticsConfigurations is undefined, the
                          profile job will profile all supported columns and run
                          all supported evaluations. 
                  DatasetStatisticsConfiguration:
                    allOf:
                      - $ref: '#/definitions/StatisticsConfiguration'
                      - description: >-
                          Configuration for inter-column evaluations.
                          Configuration can be used to select evaluations and
                          override parameters of evaluations. When configuration
                          is undefined, the profile job will run all supported
                          inter-column evaluations. 
                  ProfileColumns:
                    allOf:
                      - $ref: '#/definitions/ColumnSelectorList'
                      - description: >-
                          List of column selectors. ProfileColumns can be used
                          to select columns from the dataset. When
                          ProfileColumns is undefined, the profile job will
                          profile all supported columns. 
                type: object
              EncryptionKeyArn:
                description: >-
                  The Amazon Resource Name (ARN) of an encryption key that is
                  used to protect the job.
                maxLength: 2048
                minLength: 20
                type: string
              EncryptionMode:
                description: >-
                  <p>The encryption mode for the job, which can be one of the
                  following:</p> <ul> <li> <p> <code>SSE-KMS</code> -
                  Server-side encryption with keys managed by KMS.</p> </li>
                  <li> <p> <code>SSE-S3</code> - Server-side encryption with
                  keys managed by Amazon S3.</p> </li> </ul>
                enum:
                  - SSE-KMS
                  - SSE-S3
                type: string
              JobSample:
                description: >-
                  A sample configuration for profile jobs only, which determines
                  the number of rows on which the profile job is run. If a
                  <code>JobSample</code> value isn't provided, the default is
                  used. The default value is CUSTOM_ROWS for the mode parameter
                  and 20,000 for the size parameter.
                properties:
                  Mode:
                    allOf:
                      - $ref: '#/definitions/SampleMode'
                      - description: >-
                          <p>A value that determines whether the profile job is
                          run on the entire dataset or a specified number of
                          rows. This value must be one of the following:</p>
                          <ul> <li> <p>FULL_DATASET - The profile job is run on
                          the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS -
                          The profile job is run on the number of rows specified
                          in the <code>Size</code> parameter.</p> </li> </ul>
                  Size:
                    allOf:
                      - $ref: '#/definitions/JobSize'
                      - description: >-
                          <p>The <code>Size</code> parameter is only required
                          when the mode is CUSTOM_ROWS. The profile job is run
                          on the specified number of rows. The maximum value for
                          size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE =
                          9223372036854775807</p>
                type: object
              LogSubscription:
                description: >-
                  Enables or disables Amazon CloudWatch logging for the job. If
                  logging is enabled, CloudWatch writes one log stream for each
                  job run.
                enum:
                  - ENABLE
                  - DISABLE
                type: string
              MaxCapacity:
                description: >-
                  The maximum number of compute nodes that DataBrew can use when
                  the job processes data.
                type: integer
              MaxRetries:
                description: >-
                  The maximum number of times to retry the job after a job run
                  fails.
                minimum: 0
                type: integer
              OutputLocation:
                description: >-
                  Represents an Amazon S3 location (bucket name and object key)
                  where DataBrew can read input data, or write output from a
                  job.
                properties:
                  Bucket:
                    allOf:
                      - $ref: '#/definitions/Bucket'
                      - description: The Amazon S3 bucket name.
                  Key:
                    allOf:
                      - $ref: '#/definitions/Key'
                      - description: The unique name of the object in the bucket.
                type: object
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Identity and Access
                  Management (IAM) role to be assumed when DataBrew runs the
                  job.
                maxLength: 2048
                minLength: 20
                type: string
              Timeout:
                description: >-
                  The job's timeout in minutes. A job that attempts to run
                  longer than this timeout period ends with a status of
                  <code>TIMEOUT</code>.
                minimum: 0
                type: integer
            required:
              - OutputLocation
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProfileJobResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /projects:
    get:
      description: Lists all of the DataBrew projects that are defined.
      operationId: ListProjects
      parameters:
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProjectsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new DataBrew project.
      operationId: CreateProject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DatasetName:
                description: >-
                  The name of an existing dataset to associate this project
                  with.
                maxLength: 255
                minLength: 1
                type: string
              Name:
                description: >-
                  A unique name for the new project. Valid characters are
                  alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and
                  space.
                maxLength: 255
                minLength: 1
                type: string
              RecipeName:
                description: The name of an existing recipe to associate with the project.
                maxLength: 255
                minLength: 1
                type: string
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Identity and Access
                  Management (IAM) role to be assumed for this request.
                maxLength: 2048
                minLength: 20
                type: string
              Sample:
                description: >-
                  Represents the sample size and sampling type for DataBrew to
                  use for interactive data analysis.
                properties:
                  Size:
                    allOf:
                      - $ref: '#/definitions/SampleSize'
                      - description: The number of rows in the sample.
                  Type:
                    allOf:
                      - $ref: '#/definitions/SampleType'
                      - description: The way in which DataBrew obtains rows from a dataset.
                type: object
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this project.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - DatasetName
              - Name
              - RecipeName
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProjectResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/projects/{name}':
    delete:
      description: Deletes an existing DataBrew project.
      operationId: DeleteProject
      parameters:
        - description: The name of the project to be deleted.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProjectResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: Returns the definition of a specific DataBrew project.
      operationId: DescribeProject
      parameters:
        - description: The name of the project to be described.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProjectResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Modifies the definition of an existing DataBrew project.
      operationId: UpdateProject
      parameters:
        - description: The name of the project to be updated.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the IAM role to be assumed
                  for this request.
                maxLength: 2048
                minLength: 20
                type: string
              Sample:
                description: >-
                  Represents the sample size and sampling type for DataBrew to
                  use for interactive data analysis.
                properties:
                  Size:
                    allOf:
                      - $ref: '#/definitions/SampleSize'
                      - description: The number of rows in the sample.
                  Type:
                    allOf:
                      - $ref: '#/definitions/SampleType'
                      - description: The way in which DataBrew obtains rows from a dataset.
                type: object
            required:
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProjectResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/projects/{name}/sendProjectSessionAction':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Performs a recipe step within an interactive DataBrew session that's
        currently open.
      operationId: SendProjectSessionAction
      parameters:
        - description: The name of the project to apply the action to.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientSessionId:
                description: >-
                  A unique identifier for an interactive session that's
                  currently open and ready for work. The action will be
                  performed on this session.
                maxLength: 255
                minLength: 1
                pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'
                type: string
              Preview:
                description: >-
                  If true, the result of the recipe step will be returned, but
                  not applied.
                type: boolean
              RecipeStep:
                description: >-
                  Represents a single step from a DataBrew recipe to be
                  performed.
                properties:
                  Action:
                    allOf:
                      - $ref: '#/definitions/RecipeAction'
                      - description: >-
                          The particular action to be performed in the recipe
                          step.
                  ConditionExpressions:
                    allOf:
                      - $ref: '#/definitions/ConditionExpressionList'
                      - description: >-
                          <p>One or more conditions that must be met for the
                          recipe step to succeed.</p> <note> <p>All of the
                          conditions in the array must be met. In other words,
                          all of the conditions must be combined using a logical
                          AND operation.</p> </note>
                type: object
              StepIndex:
                description: >-
                  The index from which to preview a step. This index is used to
                  preview the result of steps that have already been applied, so
                  that the resulting view frame is from earlier in the view
                  frame stack.
                minimum: 0
                type: integer
              ViewFrame:
                description: Represents the data being transformed during an action.
                properties:
                  ColumnRange:
                    allOf:
                      - $ref: '#/definitions/ColumnRange'
                      - description: >-
                          The number of columns to include in the view frame,
                          beginning with the <code>StartColumnIndex</code> value
                          and ignoring any columns in the
                          <code>HiddenColumns</code> list.
                  HiddenColumns:
                    allOf:
                      - $ref: '#/definitions/HiddenColumnList'
                      - description: A list of columns to hide in the view frame.
                  StartColumnIndex:
                    allOf:
                      - $ref: '#/definitions/StartColumnIndex'
                      - description: >-
                          The starting index for the range of columns to return
                          in the view frame.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendProjectSessionActionResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/projects/{name}/startProjectSession':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Creates an interactive session, enabling you to manipulate data in a
        DataBrew project.
      operationId: StartProjectSession
      parameters:
        - description: The name of the project to act upon.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AssumeControl:
                description: >-
                  A value that, if true, enables you to take control of a
                  session, even if a different client is currently accessing the
                  project.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartProjectSessionResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /recipeJobs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a new job to transform input data, using steps defined in an
        existing Glue DataBrew recipe
      operationId: CreateRecipeJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DataCatalogOutputs:
                description: >-
                  One or more artifacts that represent the Glue Data Catalog
                  output from running the job.
                items:
                  $ref: '#/definitions/DataCatalogOutput'
                minItems: 1
                type: array
              DatabaseOutputs:
                description: >-
                  Represents a list of JDBC database output objects which
                  defines the output destination for a DataBrew recipe job to
                  write to. 
                items:
                  $ref: '#/definitions/DatabaseOutput'
                minItems: 1
                type: array
              DatasetName:
                description: The name of the dataset that this job processes.
                maxLength: 255
                minLength: 1
                type: string
              EncryptionKeyArn:
                description: >-
                  The Amazon Resource Name (ARN) of an encryption key that is
                  used to protect the job.
                maxLength: 2048
                minLength: 20
                type: string
              EncryptionMode:
                description: >-
                  <p>The encryption mode for the job, which can be one of the
                  following:</p> <ul> <li> <p> <code>SSE-KMS</code> -
                  Server-side encryption with keys managed by KMS.</p> </li>
                  <li> <p> <code>SSE-S3</code> - Server-side encryption with
                  keys managed by Amazon S3.</p> </li> </ul>
                enum:
                  - SSE-KMS
                  - SSE-S3
                type: string
              LogSubscription:
                description: >-
                  Enables or disables Amazon CloudWatch logging for the job. If
                  logging is enabled, CloudWatch writes one log stream for each
                  job run.
                enum:
                  - ENABLE
                  - DISABLE
                type: string
              MaxCapacity:
                description: >-
                  The maximum number of nodes that DataBrew can consume when the
                  job processes data.
                type: integer
              MaxRetries:
                description: >-
                  The maximum number of times to retry the job after a job run
                  fails.
                minimum: 0
                type: integer
              Name:
                description: >-
                  A unique name for the job. Valid characters are alphanumeric
                  (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
                maxLength: 240
                minLength: 1
                type: string
              Outputs:
                description: >-
                  One or more artifacts that represent the output from running
                  the job.
                items:
                  $ref: '#/definitions/Output'
                minItems: 1
                type: array
              ProjectName:
                description: >-
                  Either the name of an existing project, or a combination of a
                  recipe and a dataset to associate with the recipe.
                maxLength: 255
                minLength: 1
                type: string
              RecipeReference:
                description: Represents the name and version of a DataBrew recipe.
                properties:
                  Name:
                    allOf:
                      - $ref: '#/definitions/RecipeName'
                      - description: The name of the recipe.
                  RecipeVersion:
                    allOf:
                      - $ref: '#/definitions/RecipeVersion'
                      - description: 'The identifier for the version for the recipe. '
                type: object
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Identity and Access
                  Management (IAM) role to be assumed when DataBrew runs the
                  job.
                maxLength: 2048
                minLength: 20
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this job.
                maxProperties: 200
                minProperties: 1
                type: object
              Timeout:
                description: >-
                  The job's timeout in minutes. A job that attempts to run
                  longer than this timeout period ends with a status of
                  <code>TIMEOUT</code>.
                minimum: 0
                type: integer
            required:
              - Name
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRecipeJobResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/recipeJobs/{name}':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Modifies the definition of an existing DataBrew recipe job.
      operationId: UpdateRecipeJob
      parameters:
        - description: The name of the job to update.
          in: path
          maxLength: 240
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DataCatalogOutputs:
                description: >-
                  One or more artifacts that represent the Glue Data Catalog
                  output from running the job.
                items:
                  $ref: '#/definitions/DataCatalogOutput'
                minItems: 1
                type: array
              DatabaseOutputs:
                description: >-
                  Represents a list of JDBC database output objects which
                  defines the output destination for a DataBrew recipe job to
                  write into.
                items:
                  $ref: '#/definitions/DatabaseOutput'
                minItems: 1
                type: array
              EncryptionKeyArn:
                description: >-
                  The Amazon Resource Name (ARN) of an encryption key that is
                  used to protect the job.
                maxLength: 2048
                minLength: 20
                type: string
              EncryptionMode:
                description: >-
                  <p>The encryption mode for the job, which can be one of the
                  following:</p> <ul> <li> <p> <code>SSE-KMS</code> -
                  Server-side encryption with keys managed by KMS.</p> </li>
                  <li> <p> <code>SSE-S3</code> - Server-side encryption with
                  keys managed by Amazon S3.</p> </li> </ul>
                enum:
                  - SSE-KMS
                  - SSE-S3
                type: string
              LogSubscription:
                description: >-
                  Enables or disables Amazon CloudWatch logging for the job. If
                  logging is enabled, CloudWatch writes one log stream for each
                  job run.
                enum:
                  - ENABLE
                  - DISABLE
                type: string
              MaxCapacity:
                description: >-
                  The maximum number of nodes that DataBrew can consume when the
                  job processes data.
                type: integer
              MaxRetries:
                description: >-
                  The maximum number of times to retry the job after a job run
                  fails.
                minimum: 0
                type: integer
              Outputs:
                description: >-
                  One or more artifacts that represent the output from running
                  the job. 
                items:
                  $ref: '#/definitions/Output'
                minItems: 1
                type: array
              RoleArn:
                description: >-
                  The Amazon Resource Name (ARN) of the Identity and Access
                  Management (IAM) role to be assumed when DataBrew runs the
                  job.
                maxLength: 2048
                minLength: 20
                type: string
              Timeout:
                description: >-
                  The job's timeout in minutes. A job that attempts to run
                  longer than this timeout period ends with a status of
                  <code>TIMEOUT</code>.
                minimum: 0
                type: integer
            required:
              - RoleArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRecipeJobResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /recipeVersions#name:
    get:
      description: >-
        Lists the versions of a particular DataBrew recipe, except for
        <code>LATEST_WORKING</code>.
      operationId: ListRecipeVersions
      parameters:
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: The name of the recipe for which to return version information.
          in: query
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecipeVersionsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /recipes:
    get:
      description: Lists all of the DataBrew recipes that are defined.
      operationId: ListRecipes
      parameters:
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: >-
            <p>Return only those recipes with a version identifier of
            <code>LATEST_WORKING</code> or <code>LATEST_PUBLISHED</code>. If
            <code>RecipeVersion</code> is omitted, <code>ListRecipes</code>
            returns all of the <code>LATEST_PUBLISHED</code> recipe
            versions.</p> <p>Valid values: <code>LATEST_WORKING</code> |
            <code>LATEST_PUBLISHED</code> </p>
          in: query
          maxLength: 16
          minLength: 1
          name: recipeVersion
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecipesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new DataBrew recipe.
      operationId: CreateRecipe
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A description for the recipe.
                maxLength: 1024
                type: string
              Name:
                description: >-
                  A unique name for the recipe. Valid characters are
                  alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and
                  space.
                maxLength: 255
                minLength: 1
                type: string
              Steps:
                description: >-
                  An array containing the steps to be performed by the recipe.
                  Each recipe step consists of one recipe action and
                  (optionally) an array of condition expressions.
                items:
                  $ref: '#/definitions/RecipeStep'
                type: array
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this recipe.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - Name
              - Steps
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRecipeResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/recipes/{name}':
    get:
      description: >-
        Returns the definition of a specific DataBrew recipe corresponding to a
        particular version.
      operationId: DescribeRecipe
      parameters:
        - description: The name of the recipe to be described.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - description: >-
            The recipe version identifier. If this parameter isn't specified,
            then the latest published version is returned.
          in: query
          maxLength: 16
          minLength: 1
          name: recipeVersion
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecipeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Modifies the definition of the <code>LATEST_WORKING</code> version of a
        DataBrew recipe.
      operationId: UpdateRecipe
      parameters:
        - description: The name of the recipe to be updated.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A description of the recipe.
                maxLength: 1024
                type: string
              Steps:
                description: >-
                  One or more steps to be performed by the recipe. Each step
                  consists of an action, and the conditions under which the
                  action should succeed.
                items:
                  $ref: '#/definitions/RecipeStep'
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRecipeResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/recipes/{name}/batchDeleteRecipeVersion':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Deletes one or more versions of a recipe at a time.</p> <p>The entire
        request will be rejected if:</p> <ul> <li> <p>The recipe does not
        exist.</p> </li> <li> <p>There is an invalid version identifier in the
        list of versions.</p> </li> <li> <p>The version list is empty.</p> </li>
        <li> <p>The version list size exceeds 50.</p> </li> <li> <p>The version
        list contains duplicate entries.</p> </li> </ul> <p>The request will
        complete successfully, but with partial failures, if:</p> <ul> <li> <p>A
        version does not exist.</p> </li> <li> <p>A version is being used by a
        job.</p> </li> <li> <p>You specify <code>LATEST_WORKING</code>, but it's
        being used by a project.</p> </li> <li> <p>The version fails to be
        deleted.</p> </li> </ul> <p>The <code>LATEST_WORKING</code> version will
        only be deleted if the recipe has no other versions. If you try to
        delete <code>LATEST_WORKING</code> while other versions exist (or if
        they can't be deleted), then <code>LATEST_WORKING</code> will be listed
        as partial failure in the response.</p>
      operationId: BatchDeleteRecipeVersion
      parameters:
        - description: The name of the recipe whose versions are to be deleted.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              RecipeVersions:
                description: >-
                  An array of version identifiers, for the recipe versions to be
                  deleted. You can specify numeric versions (<code>X.Y</code>)
                  or <code>LATEST_WORKING</code>. <code>LATEST_PUBLISHED</code>
                  is not supported.
                items:
                  $ref: '#/definitions/RecipeVersion'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - RecipeVersions
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeleteRecipeVersionResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/recipes/{name}/publishRecipe':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Publishes a new version of a DataBrew recipe.
      operationId: PublishRecipe
      parameters:
        - description: The name of the recipe to be published.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: >-
                  A description of the recipe to be published, for this version
                  of the recipe.
                maxLength: 1024
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PublishRecipeResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  '/recipes/{name}/recipeVersion/{recipeVersion}':
    delete:
      description: Deletes a single version of a DataBrew recipe.
      operationId: DeleteRecipeVersion
      parameters:
        - description: The name of the recipe.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - description: >-
            The version of the recipe to be deleted. You can specify a numeric
            versions (<code>X.Y</code>) or <code>LATEST_WORKING</code>.
            <code>LATEST_PUBLISHED</code> is not supported.
          in: path
          maxLength: 16
          minLength: 1
          name: recipeVersion
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRecipeVersionResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /schedules:
    get:
      description: Lists the DataBrew schedules that are defined.
      operationId: ListSchedules
      parameters:
        - description: The name of the job that these schedules apply to.
          in: query
          maxLength: 240
          minLength: 1
          name: jobName
          required: false
          type: string
        - description: 'The maximum number of results to return in this request. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            The token returned by a previous call to retrieve the next set of
            results.
          in: query
          maxLength: 2000
          minLength: 1
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchedulesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a new schedule for one or more DataBrew jobs. Jobs can be run at
        a specific date and time, or at regular intervals.
      operationId: CreateSchedule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              CronExpression:
                description: >-
                  The date or dates and time or times when the jobs are to be
                  run. For more information, see <a
                  href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
                  expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
                maxLength: 512
                minLength: 1
                type: string
              JobNames:
                description: The name or names of one or more jobs to be run.
                items:
                  $ref: '#/definitions/JobName'
                maxItems: 50
                type: array
              Name:
                description: >-
                  A unique name for the schedule. Valid characters are
                  alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and
                  space.
                maxLength: 255
                minLength: 1
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata tags to apply to this schedule.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - CronExpression
              - Name
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateScheduleResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/schedules/{name}':
    delete:
      description: Deletes the specified DataBrew schedule.
      operationId: DeleteSchedule
      parameters:
        - description: The name of the schedule to be deleted.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteScheduleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    get:
      description: Returns the definition of a specific DataBrew schedule.
      operationId: DescribeSchedule
      parameters:
        - description: The name of the schedule to be described.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeScheduleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Modifies the definition of an existing DataBrew schedule.
      operationId: UpdateSchedule
      parameters:
        - description: The name of the schedule to update.
          in: path
          maxLength: 255
          minLength: 1
          name: name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CronExpression:
                description: >-
                  The date or dates and time or times when the jobs are to be
                  run. For more information, see <a
                  href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron
                  expressions</a> in the <i>Glue DataBrew Developer Guide</i>.
                maxLength: 512
                minLength: 1
                type: string
              JobNames:
                description: >-
                  The name or names of one or more jobs to be run for this
                  schedule.
                items:
                  $ref: '#/definitions/JobName'
                maxItems: 50
                type: array
            required:
              - CronExpression
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateScheduleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/tags/{ResourceArn}':
    get:
      description: 'Lists all the tags for a DataBrew resource. '
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) string that uniquely identifies the
            DataBrew resource. 
          in: path
          maxLength: 2048
          minLength: 20
          name: ResourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Adds metadata tags to a DataBrew resource, such as a dataset, project,
        recipe, job, or schedule.
      operationId: TagResource
      parameters:
        - description: >-
            The DataBrew resource to which tags should be added. The value for
            this parameter is an Amazon Resource Name (ARN). For DataBrew, you
            can tag a dataset, a job, a project, or a recipe.
          in: path
          maxLength: 2048
          minLength: 20
          name: ResourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: One or more tags to be assigned to the resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - Tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      description: Removes metadata tags from a DataBrew resource.
      operationId: UntagResource
      parameters:
        - description: >-
            A DataBrew resource from which you want to remove a tag or tags. The
            value for this parameter is an Amazon Resource Name (ARN). 
          in: path
          maxLength: 2048
          minLength: 20
          name: ResourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: The tag keys (names) of one or more tags to be removed.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 200
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

