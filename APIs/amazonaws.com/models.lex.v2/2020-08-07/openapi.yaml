basePath: /
definitions:
  AmazonResourceName:
    maxLength: 1011
    minLength: 1
    type: string
  AttachmentTitle:
    maxLength: 250
    minLength: 1
    type: string
  AttachmentUrl:
    maxLength: 250
    minLength: 1
    type: string
  AudioLogDestination:
    description: >-
      The location of audio log files collected when conversation logging is
      enabled for a bot.
    properties:
      s3Bucket:
        allOf:
          - $ref: '#/definitions/S3BucketLogDestination'
          - description: >-
              The Amazon S3 bucket where the audio log files are stored. The IAM
              role specified in the <code>roleArn</code> parameter of the
              <a>CreateBot</a> operation must have permission to write to this
              bucket.
    required:
      - s3Bucket
    type: object
  AudioLogSetting:
    description: >-
      Settings for logging audio of conversations between Amazon Lex and a user.
      You specify whether to log audio and the Amazon S3 bucket where the audio
      file is stored.
    properties:
      destination:
        $ref: '#/definitions/AudioLogDestination'
      enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Determines whether audio logging in enabled for the bot.
    required:
      - enabled
      - destination
    type: object
  AudioLogSettingsList:
    items:
      $ref: '#/definitions/AudioLogSetting'
    maxItems: 1
    minItems: 1
    type: array
  Boolean:
    type: boolean
  BotAliasHistoryEvent:
    description: >-
      Provides a record of an event that affects a bot alias. For example, when
      the version of a bot that the alias points to changes.
    properties:
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: 'The version of the bot that was used in the event. '
      endDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the event ended.
      startDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the event started.
    type: object
  BotAliasHistoryEventsList:
    items:
      $ref: '#/definitions/BotAliasHistoryEvent'
    type: array
  BotAliasId:
    maxLength: 10
    minLength: 10
    pattern: '^(\bTSTALIASID\b|[0-9a-zA-Z]+)$'
    type: string
  BotAliasLocaleSettings:
    description: >-
      Specifies settings that are unique to a locale. For example, you can use
      different Lambda function depending on the bot's locale.
    properties:
      codeHookSpecification:
        allOf:
          - $ref: '#/definitions/CodeHookSpecification'
          - description: Specifies the Lambda function that should be used in the locale.
      enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Determines whether the locale is enabled for the bot. If the value
              is <code>false</code>, the locale isn't available for use.
    required:
      - enabled
    type: object
  BotAliasLocaleSettingsMap:
    additionalProperties:
      $ref: '#/definitions/BotAliasLocaleSettings'
    minProperties: 1
    type: object
  BotAliasStatus:
    enum:
      - Creating
      - Available
      - Deleting
      - Failed
    type: string
  BotAliasSummary:
    description: >-
      Summary information about bot aliases returned from the
      <a>ListBotAliases</a> operation.
    properties:
      botAliasId:
        allOf:
          - $ref: '#/definitions/BotAliasId'
          - description: >-
              The unique identifier assigned to the bot alias. You can use this
              ID to get detailed information about the alias using the
              <a>DescribeBotAlias</a> operation.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot alias.
      botAliasStatus:
        allOf:
          - $ref: '#/definitions/BotAliasStatus'
          - description: >-
              The current state of the bot alias. If the status is
              <code>Available</code>, the alias is ready for use.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot that the bot alias references.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot alias was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the bot alias.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the bot alias was last
              updated.
    type: object
  BotAliasSummaryList:
    items:
      $ref: '#/definitions/BotAliasSummary'
    type: array
  BotExportSpecification:
    description: Provides the identity of a the bot that was exported.
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot assigned by Amazon Lex.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: >-
              The version of the bot that was exported. This will be either
              <code>DRAFT</code> or the version number.
    required:
      - botId
      - botVersion
    type: object
  BotFilter:
    description: Filters the responses returned by the <code>ListBots</code> operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/BotFilterName'
          - description: The name of the field to filter the list of bots.
      operator:
        allOf:
          - $ref: '#/definitions/BotFilterOperator'
          - description: >-
              The operator to use for the filter. Specify <code>EQ</code> when
              the <code>ListBots</code> operation should return only aliases
              that equal the specified value. Specify <code>CO</code> when the
              <code>ListBots</code> operation should return aliases that contain
              the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The value to use for filtering the list of bots.
    required:
      - name
      - values
      - operator
    type: object
  BotFilterName:
    enum:
      - BotName
    type: string
  BotFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  BotFilters:
    items:
      $ref: '#/definitions/BotFilter'
    maxItems: 1
    minItems: 1
    type: array
  BotImportSpecification:
    description: Provides the bot parameters required for importing a bot.
    properties:
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name that Amazon Lex should use for the bot.
      botTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tags to add to the bot. You can only add tags when you
              import a bot. You can't use the <code>UpdateBot</code> operation
              to update tags. To update tags, use the <code>TagResource</code>
              operation.
      dataPrivacy:
        $ref: '#/definitions/DataPrivacy'
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: >-
              <p>The time, in seconds, that Amazon Lex should keep information
              about a user's conversation with the bot. </p> <p>A user
              interaction remains active for the amount of time specified. If no
              conversation occurs during this time, the session expires and
              Amazon Lex deletes any data provided before the timeout.</p>
              <p>You can specify between 60 (1 minute) and 86,400 (24 hours)
              seconds.</p>
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role used to build and
              run the bot.
      testBotAliasTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tags to add to the test alias for a bot. You can only
              add tags when you import a bot. You can't use the
              <code>UpdateAlias</code> operation to update tags. To update tags
              on the test alias, use the <code>TagResource</code> operation.
    required:
      - botName
      - roleArn
      - dataPrivacy
    type: object
  BotLocaleExportSpecification:
    description: Provides the bot locale parameters required for exporting a bot locale.
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot to create the locale for.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot to export.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: >-
              The identifier of the language and locale to export. The string
              must match one of the locales in the bot.
    required:
      - botId
      - botVersion
      - localeId
    type: object
  BotLocaleFilter:
    description: Filters responses returned by the <code>ListBotLocales</code> operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/BotLocaleFilterName'
          - description: The name of the field to filter the list of bots.
      operator:
        allOf:
          - $ref: '#/definitions/BotLocaleFilterOperator'
          - description: >-
              The operator to use for the filter. Specify <code>EQ</code> when
              the <code>ListBotLocales</code> operation should return only
              aliases that equal the specified value. Specify <code>CO</code>
              when the <code>ListBotLocales</code> operation should return
              aliases that contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The value to use for filtering the list of bots.
    required:
      - name
      - values
      - operator
    type: object
  BotLocaleFilterName:
    enum:
      - BotLocaleName
    type: string
  BotLocaleFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  BotLocaleFilters:
    items:
      $ref: '#/definitions/BotLocaleFilter'
    maxItems: 1
    minItems: 1
    type: array
  BotLocaleHistoryEvent:
    description: >-
      Provides information about an event that occurred affecting the bot
      locale.
    properties:
      event:
        allOf:
          - $ref: '#/definitions/BotLocaleHistoryEventDescription'
          - description: A description of the event that occurred.
      eventDate:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the event occurred.
    required:
      - event
      - eventDate
    type: object
  BotLocaleHistoryEventDescription:
    type: string
  BotLocaleHistoryEventsList:
    items:
      $ref: '#/definitions/BotLocaleHistoryEvent'
    type: array
  BotLocaleImportSpecification:
    description: Provides the bot locale parameters required for importing a bot locale.
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot to import the locale to.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The version of the bot to import the locale to. This can only be
              the <code>DRAFT</code> version of the bot.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: >-
              The identifier of the language and locale that the bot will be
              used in. The string must match one of the supported locales. All
              of the intents, slot types, and slots used in the bot must have
              the same locale. For more information, see <a
              href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
              languages</a>.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              <p>Determines the threshold where Amazon Lex will insert the
              <code>AMAZON.FallbackIntent</code>,
              <code>AMAZON.KendraSearchIntent</code>, or both when returning
              alternative intents. <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> are only inserted if they
              are configured for the bot. </p> <p>For example, suppose a bot is
              configured with the confidence threshold of 0.80 and the
              <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three
              alternative intents with the following confidence scores: IntentA
              (0.70), IntentB (0.60), IntentC (0.50). The response from the
              <code>PostText</code> operation would be:</p> <ul> <li> <p>
              <code>AMAZON.FallbackIntent</code> </p> </li> <li> <p>
              <code>IntentA</code> </p> </li> <li> <p> <code>IntentB</code> </p>
              </li> <li> <p> <code>IntentC</code> </p> </li> </ul>
      voiceSettings:
        $ref: '#/definitions/VoiceSettings'
    required:
      - botId
      - botVersion
      - localeId
    type: object
  BotLocaleSortAttribute:
    enum:
      - BotLocaleName
    type: string
  BotLocaleSortBy:
    description: Specifies attributes for sorting a list of bot locales.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/BotLocaleSortAttribute'
          - description: The bot locale attribute to sort by.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              Specifies whether to sort the bot locales in ascending or
              descending order.
    required:
      - attribute
      - order
    type: object
  BotLocaleStatus:
    enum:
      - Creating
      - Building
      - Built
      - ReadyExpressTesting
      - Failed
      - Deleting
      - NotBuilt
      - Importing
    type: string
  BotLocaleSummary:
    description: >-
      Summary information about bot locales returned by the
      <a>ListBotLocales</a> operation.
    properties:
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              The current status of the bot locale. When the status is
              <code>Built</code> the locale is ready for use.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the bot locale.
      lastBuildSubmittedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the bot locale was last
              built.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the bot locale was last
              updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the bot locale.
      localeName:
        allOf:
          - $ref: '#/definitions/LocaleName'
          - description: The name of the bot locale.
    type: object
  BotLocaleSummaryList:
    items:
      $ref: '#/definitions/BotLocaleSummary'
    type: array
  BotSortAttribute:
    enum:
      - BotName
    type: string
  BotSortBy:
    description: Specifies attributes for sorting a list of bots.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/BotSortAttribute'
          - description: The attribute to use to sort the list of bots.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can choose ascending or
              descending.
    required:
      - attribute
      - order
    type: object
  BotStatus:
    enum:
      - Creating
      - Available
      - Inactive
      - Deleting
      - Failed
      - Versioning
      - Importing
    type: string
  BotSummary:
    description: Summary information about a bot returned by the <a>ListBots</a> operation.
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier assigned to the bot. Use this ID to get
              detailed information about the bot with the <a>DescribeBot</a>
              operation.
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              The current status of the bot. When the status is
              <code>Available</code> the bot is ready for use.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the bot.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the bot was last updated.
      latestBotVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: The latest numerical version in use for the bot.
    type: object
  BotSummaryList:
    items:
      $ref: '#/definitions/BotSummary'
    type: array
  BotVersion:
    maxLength: 5
    minLength: 1
    pattern: '^(DRAFT|[0-9]+)$'
    type: string
  BotVersionLocaleDetails:
    description: The version of a bot used for a bot locale.
    properties:
      sourceBotVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of a bot used for a bot locale.
    required:
      - sourceBotVersion
    type: object
  BotVersionLocaleSpecification:
    additionalProperties:
      $ref: '#/definitions/BotVersionLocaleDetails'
    minProperties: 1
    type: object
  BotVersionSortAttribute:
    enum:
      - BotVersion
    type: string
  BotVersionSortBy:
    description: Specifies attributes for sorting a list of bot versions.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/BotVersionSortAttribute'
          - description: The attribute to use to sort the list of versions.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can specify ascending or
              descending order.
    required:
      - attribute
      - order
    type: object
  BotVersionSummary:
    description: >-
      Summary information about a bot version returned by the
      <a>ListBotVersions</a> operation.
    properties:
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot associated with the version.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              The status of the bot. When the status is available, the version
              of the bot is ready for use.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: >-
              The numeric version of the bot, or <code>DRAFT</code> to indicate
              that this is the version of the bot that can be updated..
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the version was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the version.
    type: object
  BotVersionSummaryList:
    items:
      $ref: '#/definitions/BotVersionSummary'
    type: array
  BoxedBoolean:
    type: boolean
  BuildBotLocaleRequest:
    properties: {}
    title: BuildBotLocaleRequest
    type: object
  BuildBotLocaleResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the specified bot.
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              The bot's build status. When the status is
              <code>ReadyExpressTesting</code> you can test the bot using the
              utterances defined for the intents and slot types. When the status
              is <code>Built</code>, the bot is ready for use and can be tested
              using any utterance.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The version of the bot that was built. This is only the draft
              version of the bot.
      lastBuildSubmittedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp indicating the date and time that the bot was last
              built for this locale.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale specified of where the bot can be used.
    type: object
  BuiltInIntentSortAttribute:
    enum:
      - IntentSignature
    type: string
  BuiltInIntentSortBy:
    description: Specifies attributes for sorting a list of built-in intents.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/BuiltInIntentSortAttribute'
          - description: The attribute to use to sort the list of built-in intents.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can specify ascending or
              descending order.
    required:
      - attribute
      - order
    type: object
  BuiltInIntentSummary:
    description: >-
      Provides summary information about a built-in intent for the
      <a>ListBuiltInIntents</a> operation.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the intent.
      intentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: >-
              The signature of the built-in intent. Use this to specify the
              parent intent of a derived intent.
    type: object
  BuiltInIntentSummaryList:
    items:
      $ref: '#/definitions/BuiltInIntentSummary'
    type: array
  BuiltInOrCustomSlotTypeId:
    maxLength: 25
    minLength: 1
    pattern: '^((AMAZON\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'
    type: string
  BuiltInSlotTypeSortAttribute:
    enum:
      - SlotTypeSignature
    type: string
  BuiltInSlotTypeSortBy:
    description: Specifies attributes for sorting a list of built-in slot types.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/BuiltInSlotTypeSortAttribute'
          - description: The attribute to use to sort the list of built-in intents.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can choose ascending or
              descending.
    required:
      - attribute
      - order
    type: object
  BuiltInSlotTypeSummary:
    description: >-
      Provides summary information about a built-in slot type for the
      <a>ListBuiltInSlotTypes</a> operation.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the built-in slot type.
      slotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: >-
              The signature of the built-in slot type. Use this to specify the
              parent slot type of a derived slot type.
    type: object
  BuiltInSlotTypeSummaryList:
    items:
      $ref: '#/definitions/BuiltInSlotTypeSummary'
    type: array
  BuiltInsMaxResults:
    maximum: 20
    minimum: 20
    type: integer
  Button:
    description: >-
      Describes a button to use on a response card used to gather slot values
      from a user.
    properties:
      text:
        allOf:
          - $ref: '#/definitions/ButtonText'
          - description: >-
              The text that appears on the button. Use this to tell the user
              what value is returned when they choose this button.
      value:
        allOf:
          - $ref: '#/definitions/ButtonValue'
          - description: >-
              The value returned to Amazon Lex when the user chooses this
              button. This must be one of the slot values configured for the
              slot.
    required:
      - text
      - value
    type: object
  ButtonText:
    maxLength: 50
    minLength: 1
    type: string
  ButtonValue:
    maxLength: 50
    minLength: 1
    type: string
  ButtonsList:
    items:
      $ref: '#/definitions/Button'
    maxItems: 5
    minItems: 0
    type: array
  ChildDirected:
    type: boolean
  CloudWatchLogGroupArn:
    maxLength: 2048
    minLength: 1
    pattern: >-
      ^arn:[\w\-]+:logs:[\w\-]+:[\d]{12}:log-group:[\.\-_/#A-Za-z0-9]{1,512}(?::\*)?$
    type: string
  CloudWatchLogGroupLogDestination:
    description: >-
      The Amazon CloudWatch Logs log group where the text and metadata logs are
      delivered. The log group must exist before you enable logging.
    properties:
      cloudWatchLogGroupArn:
        allOf:
          - $ref: '#/definitions/CloudWatchLogGroupArn'
          - description: >-
              The Amazon Resource Name (ARN) of the log group where text and
              metadata logs are delivered.
      logPrefix:
        allOf:
          - $ref: '#/definitions/LogPrefix'
          - description: >-
              The prefix of the log stream name within the log group that you
              specified 
    required:
      - cloudWatchLogGroupArn
      - logPrefix
    type: object
  CodeHookInterfaceVersion:
    maxLength: 5
    minLength: 1
    type: string
  CodeHookSpecification:
    description: >-
      Contains information about code hooks that Amazon Lex calls during a
      conversation.
    properties:
      lambdaCodeHook:
        $ref: '#/definitions/LambdaCodeHook'
    required:
      - lambdaCodeHook
    type: object
  ConditionKey:
    maxLength: 1024
    minLength: 1
    type: string
  ConditionKeyValueMap:
    additionalProperties:
      $ref: '#/definitions/ConditionValue'
    maxProperties: 10
    minProperties: 0
    type: object
  ConditionMap:
    additionalProperties:
      $ref: '#/definitions/ConditionKeyValueMap'
    maxProperties: 10
    minProperties: 0
    type: object
  ConditionOperator:
    minLength: 1
    type: string
  ConditionValue:
    maxLength: 1024
    minLength: 1
    type: string
  ConfidenceThreshold:
    format: double
    maximum: 1
    minimum: 0
    type: number
  ConflictException: {}
  ContextTimeToLiveInSeconds:
    maximum: 86400
    minimum: 5
    type: integer
  ContextTurnsToLive:
    maximum: 20
    minimum: 1
    type: integer
  ConversationLogSettings:
    description: >-
      Configures conversation logging that saves audio, text, and metadata for
      the conversations with your users.
    properties:
      audioLogSettings:
        allOf:
          - $ref: '#/definitions/AudioLogSettingsList'
          - description: The Amazon S3 settings for logging audio to an S3 bucket.
      textLogSettings:
        allOf:
          - $ref: '#/definitions/TextLogSettingsList'
          - description: The Amazon CloudWatch Logs settings for logging text and metadata.
    type: object
  CreateBotAliasRequest:
    properties:
      botAliasLocaleSettings:
        allOf:
          - $ref: '#/definitions/BotAliasLocaleSettingsMap'
          - description: >-
              Maps configuration information to a specific locale. You can use
              this parameter to specify a specific Lambda function to run
              different functions in different locales.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The alias to create. The name must be unique for the bot.
      botVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: >-
              The version of the bot that this alias points to. You can use the
              operation to change the bot version associated with the alias.
      conversationLogSettings:
        allOf:
          - $ref: '#/definitions/ConversationLogSettings'
          - description: >-
              Specifies whether Amazon Lex logs text and audio for a
              conversation with the bot. When you enable conversation logs, text
              logs store text input, transcripts of audio input, and associated
              metadata in Amazon CloudWatch Logs. Audio logs store audio input
              in Amazon S3.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the alias. Use this description to help identify
              the alias.
      sentimentAnalysisSettings:
        $ref: '#/definitions/SentimentAnalysisSettings'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tags to add to the bot alias. You can only add tags when
              you create an alias, you can't use the <code>UpdateBotAlias</code>
              operation to update the tags on a bot alias. To update tags, use
              the <code>TagResource</code> operation.
    required:
      - botAliasName
    title: CreateBotAliasRequest
    type: object
  CreateBotAliasResponse:
    properties:
      botAliasId:
        allOf:
          - $ref: '#/definitions/BotAliasId'
          - description: The unique identifier of the bot alias.
      botAliasLocaleSettings:
        allOf:
          - $ref: '#/definitions/BotAliasLocaleSettingsMap'
          - description: Configuration information for a specific locale.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the bot alias.
      botAliasStatus:
        allOf:
          - $ref: '#/definitions/BotAliasStatus'
          - description: >-
              The current status of the alias. The alias is first put into the
              <code>Creating</code> state. When the alias is ready to be used,
              it is put into the <code>Available</code> state. You can use the
              <code>DescribeBotAlias</code> operation to get the current state
              of an alias.
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the bot that this alias applies to.
      botVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: The version of the bot associated with this alias.
      conversationLogSettings:
        allOf:
          - $ref: '#/definitions/ConversationLogSettings'
          - description: The conversation log settings specified for the alias.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A Unix timestamp indicating the date and time that the bot alias
              was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the bot alias.
      sentimentAnalysisSettings:
        $ref: '#/definitions/SentimentAnalysisSettings'
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags associated with the bot alias.
    type: object
  CreateBotLocaleRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the bot locale. Use this to help identify the bot
              locale in lists.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: >-
              The identifier of the language and locale that the bot will be
              used in. The string must match one of the supported locales. All
              of the intents, slot types, and slots used in the bot must have
              the same locale. For more information, see <a
              href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
              languages</a>.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              <p>Determines the threshold where Amazon Lex will insert the
              <code>AMAZON.FallbackIntent</code>,
              <code>AMAZON.KendraSearchIntent</code>, or both when returning
              alternative intents. <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> are only inserted if they
              are configured for the bot.</p> <p>For example, suppose a bot is
              configured with the confidence threshold of 0.80 and the
              <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three
              alternative intents with the following confidence scores: IntentA
              (0.70), IntentB (0.60), IntentC (0.50). The response from the
              PostText operation would be:</p> <ul> <li>
              <p>AMAZON.FallbackIntent</p> </li> <li> <p>IntentA</p> </li> <li>
              <p>IntentB</p> </li> <li> <p>IntentC</p> </li> </ul>
      voiceSettings:
        allOf:
          - $ref: '#/definitions/VoiceSettings'
          - description: >-
              The Amazon Polly voice ID that Amazon Lex uses for voice
              interaction with the user.
    required:
      - localeId
      - nluIntentConfidenceThreshold
    title: CreateBotLocaleRequest
    type: object
  CreateBotLocaleResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The specified bot identifier.
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              <p>The status of the bot.</p> <p>When the status is
              <code>Creating</code> the bot locale is being configured. When the
              status is <code>Building</code> Amazon Lex is building the bot for
              testing and use.</p> <p>If the status of the bot is
              <code>ReadyExpressTesting</code>, you can test the bot using the
              exact utterances specified in the bots' intents. When the bot is
              ready for full testing or to run, the status is
              <code>Built</code>.</p> <p>If there was a problem with building
              the bot, the status is <code>Failed</code>. If the bot was saved
              but not built, the status is <code>NotBuilt</code>.</p>
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The specified bot version.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp specifying the date and time that the bot locale was
              created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The specified description of the bot locale.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The specified locale identifier.
      localeName:
        allOf:
          - $ref: '#/definitions/LocaleName'
          - description: The specified locale name.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              The specified confidence threshold for inserting the
              <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> intents.
      voiceSettings:
        allOf:
          - $ref: '#/definitions/VoiceSettings'
          - description: >-
              The Amazon Polly voice ID that Amazon Lex uses for voice
              interaction with the user.
    type: object
  CreateBotRequest:
    properties:
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the bot. The bot name must be unique in the account
              that creates the bot.
      botTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tags to add to the bot. You can only add tags when you
              create a bot. You can't use the <code>UpdateBot</code> operation
              to update tags. To update tags, use the <code>TagResource</code>
              operation.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: >-
              Provides information on additional privacy protections Amazon Lex
              should use with the bot's data.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the bot. It appears in lists to help you identify
              a particular bot.
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: >-
              <p>The time, in seconds, that Amazon Lex should keep information
              about a user's conversation with the bot. </p> <p>A user
              interaction remains active for the amount of time specified. If no
              conversation occurs during this time, the session expires and
              Amazon Lex deletes any data provided before the timeout.</p>
              <p>You can specify between 60 (1 minute) and 86,400 (24 hours)
              seconds.</p>
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that has permission
              to access the bot.
      testBotAliasTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tags to add to the test alias for a bot. You can only
              add tags when you create a bot. You can't use the
              <code>UpdateAlias</code> operation to update tags. To update tags
              on the test alias, use the <code>TagResource</code> operation.
    required:
      - botName
      - roleArn
      - dataPrivacy
      - idleSessionTTLInSeconds
    title: CreateBotRequest
    type: object
  CreateBotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              A unique identifier for a particular bot. You use this to identify
              the bot when you call other Amazon Lex API operations.
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the bot.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              Shows the current status of the bot. The bot is first in the
              <code>Creating</code> status. Once the bot is read for use, it
              changes to the <code>Available</code> status. After the bot is
              created, you can use the <code>Draft</code> version of the bot.
      botTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags associated with the bot.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp indicating the date and time that the bot was created.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: The data privacy settings specified for the bot.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the bot.
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: The session idle time specified for the bot.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: The IAM role specified for the bot.
      testBotAliasTags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: A list of tags associated with the test alias for the bot.
    type: object
  CreateBotVersionRequest:
    properties:
      botVersionLocaleSpecification:
        allOf:
          - $ref: '#/definitions/BotVersionLocaleSpecification'
          - description: >-
              Specifies the locales that Amazon Lex adds to this version. You
              can choose the <code>Draft</code> version or any other previously
              published version for each locale. When you specify a source
              version, the locale data is copied from the source version to the
              new version.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the version. Use the description to help identify
              the version in lists.
    required:
      - botVersionLocaleSpecification
    title: CreateBotVersionRequest
    type: object
  CreateBotVersionResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The bot identifier specified in the request.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              When you send a request to create or update a bot, Amazon Lex sets
              the status response element to <code>Creating</code>. After Amazon
              Lex builds the bot, it sets status to <code>Available</code>. If
              Amazon Lex can't build the bot, it sets status to
              <code>Failed</code>.
      botVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: The version number assigned to the version.
      botVersionLocaleSpecification:
        allOf:
          - $ref: '#/definitions/BotVersionLocaleSpecification'
          - description: The source versions used for each locale in the new version.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the version was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the version specified in the request.
    type: object
  CreateExportRequest:
    properties:
      fileFormat:
        allOf:
          - $ref: '#/definitions/ImportExportFileFormat'
          - description: The file format of the bot or bot locale definition files.
      filePassword:
        allOf:
          - $ref: '#/definitions/ImportExportFilePassword'
          - description: >-
              An password to use to encrypt the exported archive. Using a
              password is optional, but you should encrypt the archive to
              protect the data in transit between Amazon Lex and your local
              computer.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ExportResourceSpecification'
          - description: >-
              Specifies the type of resource to export, either a bot or a bot
              locale. You can only specify one type of resource to export.
    required:
      - resourceSpecification
      - fileFormat
    title: CreateExportRequest
    type: object
  CreateExportResponse:
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the request to export a bot was created.
      exportId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: An identifier for a specific request to create an export.
      exportStatus:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: >-
              The status of the export. When the status is
              <code>Completed</code>, you can use the operation to get the
              pre-signed S3 URL link to your exported bot or bot locale.
      fileFormat:
        allOf:
          - $ref: '#/definitions/ImportExportFileFormat'
          - description: The file format used for the bot or bot locale definition files.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ExportResourceSpecification'
          - description: >-
              A description of the type of resource that was exported, either a
              bot or a bot locale.
    type: object
  CreateIntentRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the intent. Use the description to help identify
              the intent in lists.
      dialogCodeHook:
        allOf:
          - $ref: '#/definitions/DialogCodeHookSettings'
          - description: >-
              <p>Specifies that Amazon Lex invokes the alias Lambda function for
              each user input. You can invoke this Lambda function to
              personalize user interaction.</p> <p>For example, suppose that
              your bot determines that the user's name is John. You Lambda
              function might retrieve John's information from a backend database
              and prepopulate some of the values. For example, if you find that
              John is gluten intolerant, you might set the corresponding intent
              slot, <code>glutenIntolerant</code> to <code>true</code>. You
              might find John's phone number and set the corresponding session
              attribute.</p>
      fulfillmentCodeHook:
        allOf:
          - $ref: '#/definitions/FulfillmentCodeHookSettings'
          - description: >-
              <p>Specifies that Amazon Lex invokes the alias Lambda function
              when the intent is ready for fulfillment. You can invoke this
              function to complete the bot's transaction with the user.</p>
              <p>For example, in a pizza ordering bot, the Lambda function can
              look up the closest pizza restaurant to the customer's location
              and then place an order on the customer's behalf.</p>
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: >-
              <p>A list of contexts that must be active for this intent to be
              considered by Amazon Lex.</p> <p>When an intent has an input
              context list, Amazon Lex only considers using the intent in an
              interaction with the user when the specified contexts are included
              in the active context list for the session. If the contexts are
              not active, then Amazon Lex will not use the intent.</p> <p>A
              context can be automatically activated using the
              <code>outputContexts</code> property or it can be set at
              runtime.</p> <p> For example, if there are two intents with
              different input contexts that respond to the same utterances, only
              the intent with the active context will respond.</p> <p>An intent
              may have up to 5 input contexts. If an intent has multiple input
              contexts, all of the contexts must be active to consider the
              intent.</p>
      intentClosingSetting:
        allOf:
          - $ref: '#/definitions/IntentClosingSetting'
          - description: >-
              Sets the response that Amazon Lex sends to the user when the
              intent is closed.
      intentConfirmationSetting:
        allOf:
          - $ref: '#/definitions/IntentConfirmationSetting'
          - description: >-
              Provides prompts that Amazon Lex sends to the user to confirm the
              completion of an intent. If the user answers "no," the settings
              contain a statement that is sent to the user to end the intent.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the intent. Intent names must be unique in the locale
              that contains the intent and cannot match the name of any built-in
              intent.
      kendraConfiguration:
        allOf:
          - $ref: '#/definitions/KendraConfiguration'
          - description: >-
              Configuration information required to use the
              <code>AMAZON.KendraSearchIntent</code> intent to connect to an
              Amazon Kendra index. The <code>AMAZON.KendraSearchIntent</code>
              intent is called when Amazon Lex can't determine another intent to
              invoke.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: >-
              <p>A lists of contexts that the intent activates when it is
              fulfilled.</p> <p>You can use an output context to indicate the
              intents that Amazon Lex should consider for the next turn of the
              conversation with a customer. </p> <p>When you use the
              <code>outputContextsList</code> property, all of the contexts
              specified in the list are activated when the intent is fulfilled.
              You can set up to 10 output contexts. You can also set the number
              of conversation turns that the context should be active, or the
              length of time that the context should be active.</p>
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: >-
              A unique identifier for the built-in intent to base this intent
              on.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: >-
              <p>An array of strings that a user might say to signal the intent.
              For example, "I want a pizza", or "I want a {PizzaSize} pizza".
              </p> <p>In an utterance, slot names are enclosed in curly braces
              ("{", "}") to indicate where they should be displayed in the
              utterance shown to the user.. </p>
    required:
      - intentName
    title: CreateIntentRequest
    type: object
  CreateIntentResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the intent.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The identifier of the version of the bot associated with the
              intent.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the intent was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the intent.
      dialogCodeHook:
        allOf:
          - $ref: '#/definitions/DialogCodeHookSettings'
          - description: The dialog Lambda function specified for the intent.
      fulfillmentCodeHook:
        allOf:
          - $ref: '#/definitions/FulfillmentCodeHookSettings'
          - description: The fulfillment Lambda function specified for the intent.
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: The list of input contexts specified for the intent.
      intentClosingSetting:
        allOf:
          - $ref: '#/definitions/IntentClosingSetting'
          - description: The closing setting specified for the intent.
      intentConfirmationSetting:
        allOf:
          - $ref: '#/definitions/IntentConfirmationSetting'
          - description: The confirmation setting specified for the intent.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: A unique identifier for the intent.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the intent.
      kendraConfiguration:
        allOf:
          - $ref: '#/definitions/KendraConfiguration'
          - description: >-
              Configuration for searching a Amazon Kendra index specified for
              the intent.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The locale that the intent is specified to use.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: The list of output contexts specified for the intent.
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: The signature of the parent intent specified for the intent.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: The sample utterances specified for the intent.
    type: object
  CreateResourcePolicyRequest:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: >-
              <p>A resource policy to add to the resource. The policy is a JSON
              structure that contains one or more statements that define the
              policy. The policy must follow the IAM syntax. For more
              information about the contents of a JSON policy document, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">
              IAM JSON policy reference </a>. </p> <p>If the policy isn't valid,
              Amazon Lex returns a validation exception.</p>
    required:
      - policy
    title: CreateResourcePolicyRequest
    type: object
  CreateResourcePolicyResponse:
    properties:
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy was attached to.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  CreateResourcePolicyStatementRequest:
    properties:
      action:
        allOf:
          - $ref: '#/definitions/OperationList'
          - description: >-
              The Amazon Lex action that this policy either allows or denies.
              The action must apply to the resource type of the specified ARN.
              For more information, see <a
              href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html">
              Actions, resources, and condition keys for Amazon Lex V2</a>.
      condition:
        allOf:
          - $ref: '#/definitions/ConditionMap'
          - description: >-
              <p>Specifies a condition when the policy is in effect. If the
              principal of the policy is a service principal, you must provide
              two condition blocks, one with a SourceAccount global condition
              key and one with a SourceArn global condition key.</p> <p>For more
              information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html">IAM
              JSON policy elements: Condition </a>.</p>
      effect:
        allOf:
          - $ref: '#/definitions/Effect'
          - description: >-
              Determines whether the statement allows or denies access to the
              resource.
      principal:
        allOf:
          - $ref: '#/definitions/PrincipalList'
          - description: >-
              An IAM principal, such as an IAM users, IAM roles, or AWS services
              that is allowed or denied access to a resource. For more
              information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">AWS
              JSON policy elements: Principal</a>.
      statementId:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the statement. The ID is the same as the
              <code>Sid</code> IAM property. The statement name must be unique
              within the policy. For more information, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html">IAM
              JSON policy elements: Sid</a>. 
    required:
      - statementId
      - effect
      - principal
      - action
    title: CreateResourcePolicyStatementRequest
    type: object
  CreateResourcePolicyStatementResponse:
    properties:
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy is attached to.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  CreateSlotRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the slot. Use this to help identify the slot in
              lists.
      multipleValuesSetting:
        allOf:
          - $ref: '#/definitions/MultipleValuesSetting'
          - description: >-
              <p>Indicates whether the slot returns multiple values in one
              response. Multi-value slots are only available in the en-US
              locale. If you set this value to <code>true</code> in any other
              locale, Amazon Lex throws a <code>ValidationException</code>. </p>
              <p>If the <code>multipleValuesSetting</code> is not set, the
              default value is <code>false</code>.</p>
      obfuscationSetting:
        allOf:
          - $ref: '#/definitions/ObfuscationSetting'
          - description: >-
              <p>Determines how slot values are used in Amazon CloudWatch logs.
              If the value of the <code>obfuscationSetting</code> parameter is
              <code>DefaultObfuscation</code>, slot values are obfuscated in the
              log output. If the value is <code>None</code>, the actual value is
              present in the log output.</p> <p>The default is to obfuscate
              values in the CloudWatch logs.</p>
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name of the slot. Slot names must be unique within the bot
              that contains the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: >-
              The unique identifier for the slot type associated with this slot.
              The slot type determines the values that can be entered into the
              slot.
      valueElicitationSetting:
        allOf:
          - $ref: '#/definitions/SlotValueElicitationSetting'
          - description: >-
              Specifies prompts that Amazon Lex sends to the user to elicit a
              response that provides the value for the slot. 
    required:
      - slotName
      - slotTypeId
      - valueElicitationSetting
    title: CreateSlotRequest
    type: object
  CreateSlotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the bot associated with the slot.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot associated with the slot.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of the date and time that the slot was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description associated with the slot.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the intent associated with the slot.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and local specified for the slot.
      multipleValuesSetting:
        allOf:
          - $ref: '#/definitions/MultipleValuesSetting'
          - description: >-
              Indicates whether the slot returns multiple values in one
              response.
      obfuscationSetting:
        allOf:
          - $ref: '#/definitions/ObfuscationSetting'
          - description: >-
              Indicates whether the slot is configured to obfuscate values in
              Amazon CloudWatch logs.
      slotId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier associated with the slot. Use this to
              identify the slot when you update or delete it.
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: The unique identifier of the slot type associated with this slot.
      valueElicitationSetting:
        allOf:
          - $ref: '#/definitions/SlotValueElicitationSetting'
          - description: The value elicitation settings specified for the slot.
    type: object
  CreateSlotTypeRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: >-
              A description of the slot type. Use the description to help
              identify the slot type in lists.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: >-
              <p>The built-in slot type used as a parent of this slot type. When
              you define a parent slot type, the new slot type has the
              configuration of the parent slot type.</p> <p>Only
              <code>AMAZON.AlphaNumeric</code> is supported.</p>
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The name for the slot. A slot type name must be unique within the
              account.
      slotTypeValues:
        allOf:
          - $ref: '#/definitions/SlotTypeValues'
          - description: >-
              A list of <code>SlotTypeValue</code> objects that defines the
              values that the slot type can take. Each value can have a list of
              synonyms, additional values that help train the machine learning
              model about the values that it resolves for a slot.
      valueSelectionSetting:
        allOf:
          - $ref: '#/definitions/SlotValueSelectionSetting'
          - description: >-
              <p>Determines the strategy that Amazon Lex uses to select a value
              from the list of possible values. The field can be set to one of
              the following values:</p> <ul> <li> <p> <code>OriginalValue</code>
              - Returns the value entered by the user, if the user value is
              similar to the slot value.</p> </li> <li> <p>
              <code>TopResolution</code> - If there is a resolution list for the
              slot, return the first value in the resolution list. If there is
              no resolution list, return null.</p> </li> </ul> <p>If you don't
              specify the <code>valueSelectionSetting</code> parameter, the
              default is <code>OriginalValue</code>.</p>
    required:
      - slotTypeName
      - valueSelectionSetting
    title: CreateSlotTypeRequest
    type: object
  CreateSlotTypeResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier for the bot associated with the slot type.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot associated with the slot type.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the slot type was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the slot type.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The specified language and local specified for the slot type.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: The signature of the base slot type specified for the slot type.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier assigned to the slot type. Use this to
              identify the slot type in the <code>UpdateSlotType</code> and
              <code>DeleteSlotType</code> operations.
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the slot type.
      slotTypeValues:
        allOf:
          - $ref: '#/definitions/SlotTypeValues'
          - description: The list of values that the slot type can assume.
      valueSelectionSetting:
        allOf:
          - $ref: '#/definitions/SlotValueSelectionSetting'
          - description: >-
              The strategy that Amazon Lex uses to select a value from the list
              of possible values.
    type: object
  CreateUploadUrlRequest:
    properties: {}
    title: CreateUploadUrlRequest
    type: object
  CreateUploadUrlResponse:
    properties:
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              An identifier for a unique import job. Use it when you call the
              operation.
      uploadUrl:
        allOf:
          - $ref: '#/definitions/PresignedS3Url'
          - description: >-
              A pre-signed S3 write URL. Upload the zip archive file that
              contains the definition of your bot or bot locale.
    type: object
  CustomPayload:
    description: >-
      A custom response string that Amazon Lex sends to your application. You
      define the content and structure the string.
    properties:
      value:
        allOf:
          - $ref: '#/definitions/CustomPayloadValue'
          - description: The string that is sent to your application.
    required:
      - value
    type: object
  CustomPayloadValue:
    maxLength: 1000
    minLength: 1
    type: string
  DataPrivacy:
    description: >-
      By default, data stored by Amazon Lex is encrypted. The
      <code>DataPrivacy</code> structure provides settings that determine how
      Amazon Lex handles special cases of securing the data for your bot. 
    properties:
      childDirected:
        allOf:
          - $ref: '#/definitions/ChildDirected'
          - description: >-
              For each Amazon Lex bot created with the Amazon Lex Model Building
              Service, you must specify whether your use of Amazon Lex is
              related to a website, program, or other application that is
              directed or targeted, in whole or in part, to children under age
              13 and subject to the Children's Online Privacy Protection Act
              (COPPA) by specifying <code>true</code> or <code>false</code> in
              the <code>childDirected</code> field. By specifying
              <code>true</code> in the <code>childDirected</code> field, you
              confirm that your use of Amazon Lex <b>is</b> related to a
              website, program, or other application that is directed or
              targeted, in whole or in part, to children under age 13 and
              subject to COPPA. By specifying <code>false</code> in the
              <code>childDirected</code> field, you confirm that your use of
              Amazon Lex <b>is not</b> related to a website, program, or other
              application that is directed or targeted, in whole or in part, to
              children under age 13 and subject to COPPA. You may not specify a
              default value for the <code>childDirected</code> field that does
              not accurately reflect whether your use of Amazon Lex is related
              to a website, program, or other application that is directed or
              targeted, in whole or in part, to children under age 13 and
              subject to COPPA. If your use of Amazon Lex relates to a website,
              program, or other application that is directed in whole or in
              part, to children under age 13, you must obtain any required
              verifiable parental consent under COPPA. For information regarding
              the use of Amazon Lex in connection with websites, programs, or
              other applications that are directed or targeted, in whole or in
              part, to children under age 13, see the <a
              href="https://aws.amazon.com/lex/faqs#data-security">Amazon Lex
              FAQ</a>.
    required:
      - childDirected
    type: object
  DeleteBotAliasRequest:
    properties: {}
    title: DeleteBotAliasRequest
    type: object
  DeleteBotAliasResponse:
    properties:
      botAliasId:
        allOf:
          - $ref: '#/definitions/BotAliasId'
          - description: The unique identifier of the bot alias to delete.
      botAliasStatus:
        allOf:
          - $ref: '#/definitions/BotAliasStatus'
          - description: >-
              The current status of the alias. The status is
              <code>Deleting</code> while the alias is in the process of being
              deleted. Once the alias is deleted, it will no longer appear in
              the list of aliases returned by the <code>ListBotAliases</code>
              operation.
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier of the bot that contains the alias to
              delete.
    type: object
  DeleteBotLocaleRequest:
    properties: {}
    title: DeleteBotLocaleRequest
    type: object
  DeleteBotLocaleResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contained the deleted locale.
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              The status of deleting the bot locale. The locale first enters the
              <code>Deleting</code> status. Once the locale is deleted it no
              longer appears in the list of locales for the bot.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot that contained the deleted locale.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the deleted locale.
    type: object
  DeleteBotRequest:
    properties: {}
    title: DeleteBotRequest
    type: object
  DeleteBotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the bot that Amazon Lex is deleting.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              The current status of the bot. The status is <code>Deleting</code>
              while the bot and its associated resources are being deleted.
    type: object
  DeleteBotVersionRequest:
    properties: {}
    title: DeleteBotVersionRequest
    type: object
  DeleteBotVersionResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that is being deleted.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: 'The current status of the bot. '
      botVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: The version of the bot that is being deleted.
    type: object
  DeleteExportRequest:
    properties: {}
    title: DeleteExportRequest
    type: object
  DeleteExportResponse:
    properties:
      exportId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the deleted export.
      exportStatus:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: >-
              The current status of the deletion. When the deletion is complete,
              the export will no longer be returned by the operation and calls
              to the with the export identifier will fail.
    type: object
  DeleteImportRequest:
    properties: {}
    title: DeleteImportRequest
    type: object
  DeleteImportResponse:
    properties:
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the deleted import.
      importStatus:
        allOf:
          - $ref: '#/definitions/ImportStatus'
          - description: >-
              The current status of the deletion. When the deletion is complete,
              the import will no longer be returned by the operation and calls
              to the with the import identifier will fail.
    type: object
  DeleteIntentRequest:
    properties: {}
    title: DeleteIntentRequest
    type: object
  DeleteResourcePolicyRequest:
    properties: {}
    title: DeleteResourcePolicyRequest
    type: object
  DeleteResourcePolicyResponse:
    properties:
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy was deleted from.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  DeleteResourcePolicyStatementRequest:
    properties: {}
    title: DeleteResourcePolicyStatementRequest
    type: object
  DeleteResourcePolicyStatementResponse:
    properties:
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy statement was removed from.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  DeleteSlotRequest:
    properties: {}
    title: DeleteSlotRequest
    type: object
  DeleteSlotTypeRequest:
    properties: {}
    title: DeleteSlotTypeRequest
    type: object
  DescribeBotAliasRequest:
    properties: {}
    title: DescribeBotAliasRequest
    type: object
  DescribeBotAliasResponse:
    properties:
      botAliasHistoryEvents:
        allOf:
          - $ref: '#/definitions/BotAliasHistoryEventsList'
          - description: >-
              A list of events that affect a bot alias. For example, an event is
              recorded when the version that the alias points to changes.
      botAliasId:
        allOf:
          - $ref: '#/definitions/BotAliasId'
          - description: The identifier of the bot alias.
      botAliasLocaleSettings:
        allOf:
          - $ref: '#/definitions/BotAliasLocaleSettingsMap'
          - description: The locale settings that are unique to the alias.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot alias.
      botAliasStatus:
        allOf:
          - $ref: '#/definitions/BotAliasStatus'
          - description: >-
              The current status of the alias. When the alias is
              <code>Available</code>, the alias is ready for use with your bot.
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the bot alias.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot associated with the bot alias.
      conversationLogSettings:
        allOf:
          - $ref: '#/definitions/ConversationLogSettings'
          - description: >-
              Specifics of how Amazon Lex logs text and audio conversations with
              the bot associated with the alias.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the alias was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the bot alias.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the alias was last updated.
      sentimentAnalysisSettings:
        $ref: '#/definitions/SentimentAnalysisSettings'
    type: object
  DescribeBotLocaleRequest:
    properties: {}
    title: DescribeBotLocaleRequest
    type: object
  DescribeBotLocaleResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the locale.
      botLocaleHistoryEvents:
        allOf:
          - $ref: '#/definitions/BotLocaleHistoryEventsList'
          - description: >-
              History of changes, such as when a locale is used in an alias,
              that have taken place for the locale.
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              The status of the bot. If the status is <code>Failed</code>, the
              reasons for the failure are listed in the
              <code>failureReasons</code> field.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: >-
              The identifier of the version of the bot associated with the
              locale.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the locale was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the locale.
      failureReasons:
        allOf:
          - $ref: '#/definitions/FailureReasons'
          - description: >-
              if <code>botLocaleStatus</code> is <code>Failed</code>, Amazon Lex
              explains why it failed to build the bot.
      intentsCount:
        allOf:
          - $ref: '#/definitions/ResourceCount'
          - description: The number of intents defined for the locale.
      lastBuildSubmittedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the locale was last submitted for building.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the locale was last updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The unique identifier of the described locale.
      localeName:
        allOf:
          - $ref: '#/definitions/LocaleName'
          - description: The name of the locale.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              The confidence threshold where Amazon Lex inserts the
              <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> intents in the list of
              possible intents for an utterance.
      slotTypesCount:
        allOf:
          - $ref: '#/definitions/ResourceCount'
          - description: The number of slot types defined for the locale.
      voiceSettings:
        allOf:
          - $ref: '#/definitions/VoiceSettings'
          - description: >-
              The Amazon Polly voice Amazon Lex uses for voice interaction with
              the user.
    type: object
  DescribeBotRequest:
    properties: {}
    title: DescribeBotRequest
    type: object
  DescribeBotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the bot.
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              The current status of the bot. When the status is
              <code>Available</code> the bot is ready to be used in
              conversations with users.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was created.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: >-
              Settings for managing data privacy of the bot and its
              conversations with users.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: 'The description of the bot. '
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: >-
              The maximum time in seconds that Amazon Lex retains the data
              gathered in a conversation.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was last updated.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that has permission
              to access the bot.
    type: object
  DescribeBotVersionRequest:
    properties: {}
    title: DescribeBotVersionRequest
    type: object
  DescribeBotVersionResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the version.
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot that contains the version.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              The current status of the bot. When the status is
              <code>Available</code>, the bot version is ready for use.
      botVersion:
        allOf:
          - $ref: '#/definitions/NumericalBotVersion'
          - description: The version of the bot to describe.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot version was created.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: Data privacy settings for the bot version.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the bot.
      failureReasons:
        allOf:
          - $ref: '#/definitions/FailureReasons'
          - description: >-
              If the <code>botStatus</code> is <code>Failed</code>, this
              contains a list of reasons that the version couldn't be built.
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: >-
              The number of seconds that a session with the bot remains active
              before it is discarded by Amazon Lex.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that has permission
              to access the bot version.
    type: object
  DescribeExportRequest:
    properties: {}
    title: DescribeExportRequest
    type: object
  DescribeExportResponse:
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the export was created.
      downloadUrl:
        allOf:
          - $ref: '#/definitions/PresignedS3Url'
          - description: >-
              A pre-signed S3 URL that points to the bot or bot locale archive.
              The URL is only available for 5 minutes after calling the
              <code>DescribeExport</code> operation.
      exportId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the described export.
      exportStatus:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: >-
              The status of the export. When the status is <code>Complete</code>
              the export archive file is available for download.
      failureReasons:
        allOf:
          - $ref: '#/definitions/FailureReasons'
          - description: >-
              If the <code>exportStatus</code> is failed, contains one or more
              reasons why the export could not be completed.
      fileFormat:
        allOf:
          - $ref: '#/definitions/ImportExportFileFormat'
          - description: >-
              The file format used in the files that describe the bot or bot
              locale.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The last date and time that the export was updated.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ExportResourceSpecification'
          - description: >-
              The bot, bot ID, and optional locale ID of the exported bot or bot
              locale.
    type: object
  DescribeImportRequest:
    properties: {}
    title: DescribeImportRequest
    type: object
  DescribeImportResponse:
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the import was created.
      failureReasons:
        allOf:
          - $ref: '#/definitions/FailureReasons'
          - description: >-
              If the <code>importStatus</code> field is <code>Failed</code>,
              this provides one or more reasons for the failture.
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the described import.
      importStatus:
        allOf:
          - $ref: '#/definitions/ImportStatus'
          - description: >-
              The status of the import process. When the status is
              <code>Completed</code> the resource is imported and ready for use.
      importedResourceId:
        allOf:
          - $ref: '#/definitions/ImportedResourceId'
          - description: >-
              The unique identifier that Amazon Lex assigned to the resource
              created by the import.
      importedResourceName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the imported resource.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the import was last updated.
      mergeStrategy:
        allOf:
          - $ref: '#/definitions/MergeStrategy'
          - description: >-
              The strategy used when there was a name conflict between the
              imported resource and an existing resource. When the merge
              strategy is <code>FailOnConflict</code> existing resources are not
              overwritten and the import fails.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ImportResourceSpecification'
          - description: The specifications of the imported bot or bot locale.
    type: object
  DescribeIntentRequest:
    properties: {}
    title: DescribeIntentRequest
    type: object
  DescribeIntentResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the intent.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot associated with the intent.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the intent was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the intent.
      dialogCodeHook:
        allOf:
          - $ref: '#/definitions/DialogCodeHookSettings'
          - description: >-
              The Lambda function called during each turn of a conversation with
              the intent.
      fulfillmentCodeHook:
        allOf:
          - $ref: '#/definitions/FulfillmentCodeHookSettings'
          - description: >-
              The Lambda function called when the intent is complete and ready
              for fulfillment.
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: >-
              A list of contexts that must be active for the intent to be
              considered for sending to the user.
      intentClosingSetting:
        allOf:
          - $ref: '#/definitions/IntentClosingSetting'
          - description: The response that Amazon Lex sends to when the intent is closed.
      intentConfirmationSetting:
        allOf:
          - $ref: '#/definitions/IntentConfirmationSetting'
          - description: >-
              Prompts that Amazon Lex sends to the user to confirm completion of
              an intent.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier assigned to the intent when it was created.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the intent.
      kendraConfiguration:
        allOf:
          - $ref: '#/definitions/KendraConfiguration'
          - description: >-
              Configuration information required to use the
              <code>AMAZON.KendraSearchIntent</code> intent.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the intent was last updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale specified for the intent.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: >-
              A list of contexts that are activated when the intent is
              fulfilled.
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: >-
              The identifier of the built-in intent that this intent is derived
              from, if any.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: User utterances that trigger this intent.
      slotPriorities:
        allOf:
          - $ref: '#/definitions/SlotPrioritiesList'
          - description: >-
              The list that determines the priority that slots should be
              elicited from the user.
    type: object
  DescribeResourcePolicyRequest:
    properties: {}
    title: DescribeResourcePolicyRequest
    type: object
  DescribeResourcePolicyResponse:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: >-
              The JSON structure that contains the resource policy. For more
              information about the contents of a JSON policy document, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">
              IAM JSON policy reference </a>.
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy is attached to.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  DescribeSlotRequest:
    properties: {}
    title: DescribeSlotRequest
    type: object
  DescribeSlotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the slot.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot associated with the slot.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the slot was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the slot.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the intent associated with the slot.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the slot was last updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale specified for the slot.
      multipleValuesSetting:
        allOf:
          - $ref: '#/definitions/MultipleValuesSetting'
          - description: >-
              <p>Indicates whether the slot accepts multiple values in a single
              utterance.</p> <p>If the <code>multipleValuesSetting</code> is not
              set, the default value is <code>false</code>.</p>
      obfuscationSetting:
        allOf:
          - $ref: '#/definitions/ObfuscationSetting'
          - description: >-
              Whether slot values are shown in Amazon CloudWatch logs. If the
              value is <code>None</code>, the actual value of the slot is shown
              in logs.
      slotId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier generated for the slot.
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: >-
              The identifier of the slot type that determines the values entered
              into the slot.
      valueElicitationSetting:
        allOf:
          - $ref: '#/definitions/SlotValueElicitationSetting'
          - description: Prompts that Amazon Lex uses to elicit a value for the slot.
    type: object
  DescribeSlotTypeRequest:
    properties: {}
    title: DescribeSlotTypeRequest
    type: object
  DescribeSlotTypeResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the slot type.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot associated with the slot type.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the slot type was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description specified for the slot type.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the slot type was last
              updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale specified for the slot type.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: The built in slot type used as a parent to this slot type.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier for the slot type.
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name specified for the slot type.
      slotTypeValues:
        allOf:
          - $ref: '#/definitions/SlotTypeValues'
          - description: >-
              The values that the slot type can take. Includes any synonyms for
              the slot type values.
      valueSelectionSetting:
        allOf:
          - $ref: '#/definitions/SlotValueSelectionSetting'
          - description: >-
              The strategy that Amazon Lex uses to choose a value from a list of
              possible values.
    type: object
  Description:
    maxLength: 200
    minLength: 0
    type: string
  DialogCodeHookSettings:
    description: >-
      Settings that determine the Lambda function that Amazon Lex uses for
      processing user responses.
    properties:
      enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Enables the dialog code hook so that it processes user requests.
    required:
      - enabled
    type: object
  DraftBotVersion:
    maxLength: 5
    minLength: 5
    pattern: ^DRAFT$
    type: string
  Effect:
    enum:
      - Allow
      - Deny
    type: string
  ExportFilter:
    description: Filtes the response form the operation
    properties:
      name:
        allOf:
          - $ref: '#/definitions/ExportFilterName'
          - description: The name of the field to use for filtering.
      operator:
        allOf:
          - $ref: '#/definitions/ExportFilterOperator'
          - description: >-
              The operator to use for the filter. Specify EQ when the
              <code>ListExports</code> operation should return only resource
              types that equal the specified value. Specify CO when the
              <code>ListExports</code> operation should return resource types
              that contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The values to use to fileter the response.
    required:
      - name
      - values
      - operator
    type: object
  ExportFilterName:
    enum:
      - ExportResourceType
    type: string
  ExportFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  ExportFilters:
    items:
      $ref: '#/definitions/ExportFilter'
    maxItems: 1
    minItems: 1
    type: array
  ExportResourceSpecification:
    description: >-
      Provides information about the bot or bot locale that you want to export.
      You can specify the <code>botExportSpecification</code> or the
      <code>botLocaleExportSpecification</code>, but not both.
    properties:
      botExportSpecification:
        allOf:
          - $ref: '#/definitions/BotExportSpecification'
          - description: Parameters for exporting a bot.
      botLocaleExportSpecification:
        allOf:
          - $ref: '#/definitions/BotLocaleExportSpecification'
          - description: Parameters for exporting a bot locale.
    type: object
  ExportSortAttribute:
    enum:
      - LastUpdatedDateTime
    type: string
  ExportSortBy:
    description: Provides information about sorting a list of exports.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/ExportSortAttribute'
          - description: The export field to use for sorting.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: The order to sort the list.
    required:
      - attribute
      - order
    type: object
  ExportStatus:
    enum:
      - InProgress
      - Completed
      - Failed
      - Deleting
    type: string
  ExportSummary:
    description: 'Provides summary information about an export in an export list. '
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the export was created.
      exportId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier that Amazon Lex assigned to the export.
      exportStatus:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: >-
              The status of the export. When the status is
              <code>Completed</code> the export is ready to download.
      fileFormat:
        allOf:
          - $ref: '#/definitions/ImportExportFileFormat'
          - description: The file format used in the export files.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the export was last updated.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ExportResourceSpecification'
          - description: Information about the bot or bot locale that was exported.
    type: object
  ExportSummaryList:
    items:
      $ref: '#/definitions/ExportSummary'
    type: array
  FailureReason:
    type: string
  FailureReasons:
    items:
      $ref: '#/definitions/FailureReason'
    type: array
  FilterValue:
    maxLength: 100
    minLength: 1
    pattern: '^[0-9a-zA-Z_()\s-]+$'
    type: string
  FilterValues:
    items:
      $ref: '#/definitions/FilterValue'
    maxItems: 1
    minItems: 1
    type: array
  FulfillmentCodeHookSettings:
    description: Determines if a Lambda function should be invoked for a specific intent.
    properties:
      enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Indicates whether a Lambda function should be invoked to fulfill a
              specific intent.
    required:
      - enabled
    type: object
  Id:
    maxLength: 10
    minLength: 10
    pattern: '^[0-9a-zA-Z]+$'
    type: string
  ImageResponseCard:
    description: >-
      <p>A card that is shown to the user by a messaging platform. You define
      the contents of the card, the card is displayed by the platform. </p>
      <p>When you use a response card, the response from the user is constrained
      to the text associated with a button on the card.</p>
    properties:
      buttons:
        allOf:
          - $ref: '#/definitions/ButtonsList'
          - description: >-
              A list of buttons that should be displayed on the response card.
              The arrangement of the buttons is determined by the platform that
              displays the button.
      imageUrl:
        allOf:
          - $ref: '#/definitions/AttachmentUrl'
          - description: >-
              The URL of an image to display on the response card. The image URL
              must be publicly available so that the platform displaying the
              response card has access to the image.
      subtitle:
        allOf:
          - $ref: '#/definitions/AttachmentTitle'
          - description: >-
              The subtitle to display on the response card. The format of the
              subtitle is determined by the platform displaying the response
              card.
      title:
        allOf:
          - $ref: '#/definitions/AttachmentTitle'
          - description: >-
              The title to display on the response card. The format of the title
              is determined by the platform displaying the response card.
    required:
      - title
    type: object
  ImportExportFileFormat:
    enum:
      - LexJson
    type: string
  ImportExportFilePassword:
    format: password
    maxLength: 1024
    minLength: 1
    type: string
  ImportFilter:
    description: Filters the response from the operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/ImportFilterName'
          - description: The name of the field to use for filtering.
      operator:
        allOf:
          - $ref: '#/definitions/ImportFilterOperator'
          - description: >-
              The operator to use for the filter. Specify EQ when the
              <code>ListImports</code> operation should return only resource
              types that equal the specified value. Specify CO when the
              <code>ListImports</code> operation should return resource types
              that contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The values to use to filter the response.
    required:
      - name
      - values
      - operator
    type: object
  ImportFilterName:
    enum:
      - ImportResourceType
    type: string
  ImportFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  ImportFilters:
    items:
      $ref: '#/definitions/ImportFilter'
    maxItems: 1
    minItems: 1
    type: array
  ImportResourceSpecification:
    description: >-
      Provides information about the bot or bot locale that you want to import.
      You can sepcifiy the <code>botImportSpecification</code> or the
      <code>botLocaleImportSpecification</code>, but not both.
    properties:
      botImportSpecification:
        allOf:
          - $ref: '#/definitions/BotImportSpecification'
          - description: Parameters for importing a bot.
      botLocaleImportSpecification:
        allOf:
          - $ref: '#/definitions/BotLocaleImportSpecification'
          - description: Parameters for importing a bot locale.
    type: object
  ImportSortAttribute:
    enum:
      - LastUpdatedDateTime
    type: string
  ImportSortBy:
    description: Provides information for sorting a list of imports.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/ImportSortAttribute'
          - description: The export field to use for sorting.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: The order to sort the list.
    required:
      - attribute
      - order
    type: object
  ImportStatus:
    enum:
      - InProgress
      - Completed
      - Failed
      - Deleting
    type: string
  ImportSummary:
    description: Provides summary information about an import in an import list.
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the import was created.
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier that Amazon Lex assigned to the import.
      importStatus:
        allOf:
          - $ref: '#/definitions/ImportStatus'
          - description: >-
              The status of the resource. When the status is
              <code>Completed</code> the resource is ready to build.
      importedResourceId:
        allOf:
          - $ref: '#/definitions/ImportedResourceId'
          - description: >-
              The unique identifier that Amazon Lex assigned to the imported
              resource.
      importedResourceName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name that you gave the imported resource.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the import was last updated.
      mergeStrategy:
        allOf:
          - $ref: '#/definitions/MergeStrategy'
          - description: >-
              The strategy used to merge existing bot or bot locale definitions
              with the imported definition.
    type: object
  ImportSummaryList:
    items:
      $ref: '#/definitions/ImportSummary'
    type: array
  ImportedResourceId:
    maxLength: 10
    minLength: 5
    pattern: '^([0-9a-zA-Z_])+$'
    type: string
  InputContext:
    description: >-
      The name of a context that must be active for an intent to be selected by
      Amazon Lex.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the context.
    required:
      - name
    type: object
  InputContextsList:
    items:
      $ref: '#/definitions/InputContext'
    maxItems: 5
    minItems: 0
    type: array
  IntentClosingSetting:
    description: >-
      Provides a statement the Amazon Lex conveys to the user when the intent is
      successfully fulfilled.
    properties:
      active:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Specifies whether an intent's closing response is used. When this
              field is false, the closing response isn't sent to the user and no
              closing input from the user is used. If the <code>active</code>
              field isn't specified, the default is true.
      closingResponse:
        allOf:
          - $ref: '#/definitions/ResponseSpecification'
          - description: >-
              The response that Amazon Lex sends to the user when the intent is
              complete.
    required:
      - closingResponse
    type: object
  IntentConfirmationSetting:
    description: >-
      Provides a prompt for making sure that the user is ready for the intent to
      be fulfilled.
    properties:
      active:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Specifies whether the intent's confirmation is sent to the user.
              When this field is false, confirmation and declination responses
              aren't sent and processing continues as if the responses aren't
              present. If the <code>active</code> field isn't specified, the
              default is true.
      declinationResponse:
        allOf:
          - $ref: '#/definitions/ResponseSpecification'
          - description: >-
              When the user answers "no" to the question defined in
              <code>promptSpecification</code>, Amazon Lex responds with this
              response to acknowledge that the intent was canceled. 
      promptSpecification:
        allOf:
          - $ref: '#/definitions/PromptSpecification'
          - description: >-
              <p>Prompts the user to confirm the intent. This question should
              have a yes or no answer.</p> <p>Amazon Lex uses this prompt to
              ensure that the user acknowledges that the intent is ready for
              fulfillment. For example, with the <code>OrderPizza</code> intent,
              you might want to confirm that the order is correct before placing
              it. For other intents, such as intents that simply respond to user
              questions, you might not need to ask the user for confirmation
              before providing the information. </p>
    required:
      - promptSpecification
      - declinationResponse
    type: object
  IntentFilter:
    description: Filters the response from the <code>ListIntents</code> operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/IntentFilterName'
          - description: The name of the field to use for the filter.
      operator:
        allOf:
          - $ref: '#/definitions/IntentFilterOperator'
          - description: >-
              The operator to use for the filter. Specify <code>EQ</code> when
              the <code>ListIntents</code> operation should return only aliases
              that equal the specified value. Specify <code>CO</code> when the
              <code>ListIntents</code> operation should return aliases that
              contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The value to use for the filter.
    required:
      - name
      - values
      - operator
    type: object
  IntentFilterName:
    enum:
      - IntentName
    type: string
  IntentFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  IntentFilters:
    items:
      $ref: '#/definitions/IntentFilter'
    maxItems: 1
    minItems: 1
    type: array
  IntentSignature:
    type: string
  IntentSortAttribute:
    enum:
      - IntentName
      - LastUpdatedDateTime
    type: string
  IntentSortBy:
    description: Specifies attributes for sorting a list of intents.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/IntentSortAttribute'
          - description: The attribute to use to sort the list of intents.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can choose ascending or
              descending.
    required:
      - attribute
      - order
    type: object
  IntentSummary:
    description: >-
      Summary information about an intent returned by the
      <code>ListIntents</code> operation.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the intent.
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: >-
              The input contexts that must be active for this intent to be
              considered for recognition.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier assigned to the intent. Use this ID to get
              detailed information about the intent with the
              <code>DescribeIntent</code> operation.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the intent.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The timestamp of the date and time that the intent was last
              updated.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: >-
              The output contexts that are activated when this intent is
              fulfilled.
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: >-
              If this intent is derived from a built-in intent, the name of the
              parent intent.
    type: object
  IntentSummaryList:
    items:
      $ref: '#/definitions/IntentSummary'
    type: array
  InternalServerException: {}
  KendraConfiguration:
    description: >-
      Provides configuration information for the AMAZON.KendraSearchIntent
      intent. When you use this intent, Amazon Lex searches the specified Amazon
      Kendra index and returns documents from the index that match the user's
      utterance.
    properties:
      kendraIndex:
        allOf:
          - $ref: '#/definitions/KendraIndexArn'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon Kendra index that you
              want the AMAZON.KendraSearchIntent intent to search. The index
              must be in the same account and Region as the Amazon Lex bot.
      queryFilterString:
        allOf:
          - $ref: '#/definitions/QueryFilterString'
          - description: >-
              A query filter that Amazon Lex sends to Amazon Kendra to filter
              the response from a query. The filter is in the format defined by
              Amazon Kendra. For more information, see <a
              href="https://docs.aws.amazon.com/kendra/latest/dg/filtering.html">Filtering
              queries</a>.
      queryFilterStringEnabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Determines whether the AMAZON.KendraSearchIntent intent uses a
              custom query string to query the Amazon Kendra index.
    required:
      - kendraIndex
    type: object
  KendraIndexArn:
    maxLength: 2048
    minLength: 32
    pattern: >-
      ^arn:aws:kendra:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:index\/[a-zA-Z0-9][a-zA-Z0-9_-]*$
    type: string
  KmsKeyArn:
    maxLength: 2048
    minLength: 20
    pattern: >-
      ^arn:[\w\-]+:kms:[\w\-]+:[\d]{12}:(?:key\/[\w\-]+|alias\/[a-zA-Z0-9:\/_\-]{1,256})$
    type: string
  LambdaARN:
    maxLength: 2048
    minLength: 20
    pattern: >-
      arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?
    type: string
  LambdaCodeHook:
    description: >-
      Specifies a Lambda function that verifies requests to a bot or fulfilles
      the user's request to a bot.
    properties:
      codeHookInterfaceVersion:
        allOf:
          - $ref: '#/definitions/CodeHookInterfaceVersion'
          - description: >-
              The version of the request-response that you want Amazon Lex to
              use to invoke your Lambda function.
      lambdaARN:
        allOf:
          - $ref: '#/definitions/LambdaARN'
          - description: The Amazon Resource Name (ARN) of the Lambda function.
    required:
      - lambdaARN
      - codeHookInterfaceVersion
    type: object
  ListBotAliasesRequest:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of aliases to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListBotAliases</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
    title: ListBotAliasesRequest
    type: object
  ListBotAliasesResponse:
    properties:
      botAliasSummaries:
        allOf:
          - $ref: '#/definitions/BotAliasSummaryList'
          - description: >-
              Summary information for the bot aliases that meet the filter
              criteria specified in the request. The length of the list is
              specified in the <code>maxResults</code> parameter of the request.
              If there are more aliases available, the <code>nextToken</code>
              field contains a token to get the next page of results.
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot associated with the aliases.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBotAliases</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a
              <code>ListBotAliases</code> operation request to get the next page
              of results.
    type: object
  ListBotLocalesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/BotLocaleFilters'
          - description: >-
              Provides the specification for a filter used to limit the response
              to only those locales that match the filter specification. You can
              only specify one filter and one value to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of aliases to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListBotLocales</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token as the <code>nextToken</code> parameter
              to return the next page of results. 
      sortBy:
        allOf:
          - $ref: '#/definitions/BotLocaleSortBy'
          - description: >-
              Specifies sorting parameters for the list of locales. You can sort
              by locale name in ascending or descending order.
    title: ListBotLocalesRequest
    type: object
  ListBotLocalesResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot to list locales for.
      botLocaleSummaries:
        allOf:
          - $ref: '#/definitions/BotLocaleSummaryList'
          - description: >-
              Summary information for the locales that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter of the request. If there are
              more locales available, the <code>nextToken</code> field contains
              a token to get the next page of results.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBotLocales</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a
              <code>ListBotLocales</code> operation request to get the next page
              of results.
    type: object
  ListBotVersionsRequest:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of versions to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response to the <code>ListBotVersion</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/BotVersionSortBy'
          - description: >-
              Specifies sorting parameters for the list of versions. You can
              specify that the list be sorted by version name in either
              ascending or descending order.
    title: ListBotVersionsRequest
    type: object
  ListBotVersionsResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot to list versions for.
      botVersionSummaries:
        allOf:
          - $ref: '#/definitions/BotVersionSummaryList'
          - description: >-
              Summary information for the bot versions that meet the filter
              criteria specified in the request. The length of the list is
              specified in the <code>maxResults</code> parameter of the request.
              If there are more versions available, the <code>nextToken</code>
              field contains a token to get the next page of results.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBotVersions</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a
              <code>ListBotAliases</code> operation request to get the next page
              of results.
    type: object
  ListBotsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/BotFilters'
          - description: >-
              Provides the specification of a filter used to limit the bots in
              the response to only those that match the filter specification.
              You can only specify one filter and one string to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of bots to return in each page of results. If
              there are fewer results than the maximum page size, only the
              actual number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListBots</code> operation contains
              more results than specified in the <code>maxResults</code>
              parameter, a token is returned in the response. Use that token in
              the <code>nextToken</code> parameter to return the next page of
              results.
      sortBy:
        allOf:
          - $ref: '#/definitions/BotSortBy'
          - description: >-
              Specifies sorting parameters for the list of bots. You can specify
              that the list be sorted by bot name in ascending or descending
              order.
    title: ListBotsRequest
    type: object
  ListBotsResponse:
    properties:
      botSummaries:
        allOf:
          - $ref: '#/definitions/BotSummaryList'
          - description: >-
              Summary information for the bots that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter of the request. If there are
              more bots available, the <code>nextToken</code> field contains a
              token to the next page of results.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBots</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a <code>ListBots</code>
              operation request to get the next page of results.
    type: object
  ListBuiltInIntentsRequest:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/BuiltInsMaxResults'
          - description: >-
              The maximum number of built-in intents to return in each page of
              results. If there are fewer results than the max page size, only
              the actual number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListBuiltInIntents</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/BuiltInIntentSortBy'
          - description: >-
              Specifies sorting parameters for the list of built-in intents. You
              can specify that the list be sorted by the built-in intent
              signature in either ascending or descending order.
    title: ListBuiltInIntentsRequest
    type: object
  ListBuiltInIntentsResponse:
    properties:
      builtInIntentSummaries:
        allOf:
          - $ref: '#/definitions/BuiltInIntentSummaryList'
          - description: >-
              Summary information for the built-in intents that meet the filter
              criteria specified in the request. The length of the list is
              specified in the <code>maxResults</code> parameter of the request.
              If there are more intents available, the <code>nextToken</code>
              field contains a token to get the next page of results.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the intents in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBuiltInIntents</code> operation. If
              the <code>nextToken</code> field is present, you send the contents
              as the <code>nextToken</code> parameter of a
              <code>ListBotAliases</code> operation request to get the next page
              of results.
    type: object
  ListBuiltInSlotTypesRequest:
    properties:
      maxResults:
        allOf:
          - $ref: '#/definitions/BuiltInsMaxResults'
          - description: >-
              The maximum number of built-in slot types to return in each page
              of results. If there are fewer results than the max page size,
              only the actual number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListBuiltInSlotTypes</code>
              operation contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/BuiltInSlotTypeSortBy'
          - description: >-
              Determines the sort order for the response from the
              <code>ListBuiltInSlotTypes</code> operation. You can choose to
              sort by the slot type signature in either ascending or descending
              order.
    title: ListBuiltInSlotTypesRequest
    type: object
  ListBuiltInSlotTypesResponse:
    properties:
      builtInSlotTypeSummaries:
        allOf:
          - $ref: '#/definitions/BuiltInSlotTypeSummaryList'
          - description: >-
              Summary information for the built-in slot types that meet the
              filter criteria specified in the request. The length of the list
              is specified in the <code>maxResults</code> parameter of the
              request. If there are more slot types available, the
              <code>nextToken</code> field contains a token to get the next page
              of results.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the slot types in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListBuiltInSlotTypes</code> operation. If
              the <code>nextToken</code> field is present, you send the contents
              as the <code>nextToken</code> parameter of a
              <code>LIstBuiltInSlotTypes</code> operation request to get the
              next page of results.
    type: object
  ListExportsRequest:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier that Amazon Lex assigned to the bot.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: 'The version of the bot to list exports for. '
      filters:
        allOf:
          - $ref: '#/definitions/ExportFilters'
          - description: >-
              Provides the specification of a filter used to limit the exports
              in the response to only those that match the filter specification.
              You can only specify one filter and one string to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of exports to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListExports</code> operation
              contans more results that specified in the <code>maxResults</code>
              parameter, a token is returned in the response. Use that token in
              the <code>nextToken</code> parameter to return the next page of
              results.
      sortBy:
        allOf:
          - $ref: '#/definitions/ExportSortBy'
          - description: >-
              Determines the field that the list of exports is sorted by. You
              can sort by the <code>LastUpdatedDateTime</code> field in
              ascending or descending order.
    title: ListExportsRequest
    type: object
  ListExportsResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier assigned to the bot by Amazon Lex.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot that was exported.
      exportSummaries:
        allOf:
          - $ref: '#/definitions/ExportSummaryList'
          - description: >-
              Summary information for the exports that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter. If there are more exports
              available, the <code>nextToken</code> field contains a token to
              get the next page of results.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListExports</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a <code>ListExports</code>
              operation request to get the next page of results.
    type: object
  ListImportsRequest:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier that Amazon Lex assigned to the bot.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot to list imports for.
      filters:
        allOf:
          - $ref: '#/definitions/ImportFilters'
          - description: >-
              Provides the specification of a filter used to limit the bots in
              the response to only those that match the filter specification.
              You can only specify one filter and one string to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of imports to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListImports</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/ImportSortBy'
          - description: >-
              Determines the field that the list of imports is sorted by. You
              can sort by the <code>LastUpdatedDateTime</code> field in
              ascending or descending order.
    title: ListImportsRequest
    type: object
  ListImportsResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier assigned by Amazon Lex to the bot.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The version of the bot that was imported. It will always be
              <code>DRAFT</code>.
      importSummaries:
        allOf:
          - $ref: '#/definitions/ImportSummaryList'
          - description: >-
              Summary information for the imports that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter. If there are more imports
              available, the <code>nextToken</code> field contains a token to
              get the next page of results.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListImports</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a <code>ListImports</code>
              operation request to get the next page of results.
    type: object
  ListIntentsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/IntentFilters'
          - description: >-
              Provides the specification of a filter used to limit the intents
              in the response to only those that match the filter specification.
              You can only specify one filter and only one string to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of intents to return in each page of results.
              If there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListIntents</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/IntentSortBy'
          - description: >-
              Determines the sort order for the response from the
              <code>ListIntents</code> operation. You can choose to sort by the
              intent name or last updated date in either ascending or descending
              order.
    title: ListIntentsRequest
    type: object
  ListIntentsResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the intent.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot that contains the intent.
      intentSummaries:
        allOf:
          - $ref: '#/definitions/IntentSummaryList'
          - description: >-
              Summary information for the intents that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter of the request. If there are
              more intents available, the <code>nextToken</code> field contains
              a token to get the next page of results.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the intents in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListIntents</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a <code>ListIntents</code>
              operation request to get the next page of results.
    type: object
  ListSlotTypesRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/SlotTypeFilters'
          - description: >-
              Provides the specification of a filter used to limit the slot
              types in the response to only those that match the filter
              specification. You can only specify one filter and only one string
              to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of slot types to return in each page of
              results. If there are fewer results than the max page size, only
              the actual number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListSlotTypes</code> operation
              contains more results than specified in the
              <code>maxResults</code> parameter, a token is returned in the
              response. Use that token in the <code>nextToken</code> parameter
              to return the next page of results.
      sortBy:
        allOf:
          - $ref: '#/definitions/SlotTypeSortBy'
          - description: >-
              Determines the sort order for the response from the
              <code>ListSlotTypes</code> operation. You can choose to sort by
              the slot type name or last updated date in either ascending or
              descending order.
    title: ListSlotTypesRequest
    type: object
  ListSlotTypesResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the slot types.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot that contains the slot types.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and local of the slot types in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListSlotTypes</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a
              <code>ListSlotTypes</code> operation request to get the next page
              of results.
      slotTypeSummaries:
        allOf:
          - $ref: '#/definitions/SlotTypeSummaryList'
          - description: >-
              Summary information for the slot types that meet the filter
              criteria specified in the request. The length of the list is
              specified in the <code>maxResults</code> parameter of the request.
              If there are more slot types available, the <code>nextToken</code>
              field contains a token to get the next page of results.
    type: object
  ListSlotsRequest:
    properties:
      filters:
        allOf:
          - $ref: '#/definitions/SlotFilters'
          - description: >-
              Provides the specification of a filter used to limit the slots in
              the response to only those that match the filter specification.
              You can only specify one filter and only one string to filter on.
      maxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of slots to return in each page of results. If
              there are fewer results than the max page size, only the actual
              number of results are returned.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response from the <code>ListSlots</code> operation contains
              more results than specified in the <code>maxResults</code>
              parameter, a token is returned in the response. Use that token in
              the <code>nextToken</code> parameter to return the next page of
              results.
      sortBy:
        allOf:
          - $ref: '#/definitions/SlotSortBy'
          - description: >-
              Determines the sort order for the response from the
              <code>ListSlots</code> operation. You can choose to sort by the
              slot name or last updated date in either ascending or descending
              order.
    title: ListSlotsRequest
    type: object
  ListSlotsResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the slots.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The version of the bot that contains the slots.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the intent that contains the slots.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the slots in the list.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              A token that indicates whether there are more results to return in
              a response to the <code>ListSlots</code> operation. If the
              <code>nextToken</code> field is present, you send the contents as
              the <code>nextToken</code> parameter of a <code>ListSlots</code>
              operation request to get the next page of results.
      slotSummaries:
        allOf:
          - $ref: '#/definitions/SlotSummaryList'
          - description: >-
              Summary information for the slots that meet the filter criteria
              specified in the request. The length of the list is specified in
              the <code>maxResults</code> parameter of the request. If there are
              more slots available, the <code>nextToken</code> field contains a
              token to get the next page of results.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The tags associated with a resource.
    type: object
  LocaleId:
    type: string
  LocaleName:
    type: string
  LogPrefix:
    maxLength: 1024
    type: string
  MaxResults:
    maximum: 1000
    minimum: 1
    type: integer
  MergeStrategy:
    enum:
      - Overwrite
      - FailOnConflict
    type: string
  Message:
    description: The object that provides message text and it's type.
    properties:
      customPayload:
        allOf:
          - $ref: '#/definitions/CustomPayload'
          - description: A message in a custom format defined by the client application.
      imageResponseCard:
        allOf:
          - $ref: '#/definitions/ImageResponseCard'
          - description: >-
              A message that defines a response card that the client application
              can show to the user.
      plainTextMessage:
        allOf:
          - $ref: '#/definitions/PlainTextMessage'
          - description: A message in plain text format.
      ssmlMessage:
        allOf:
          - $ref: '#/definitions/SSMLMessage'
          - description: A message in Speech Synthesis Markup Language (SSML).
    type: object
  MessageGroup:
    description: Provides one or more messages that Amazon Lex should send to the user.
    properties:
      message:
        allOf:
          - $ref: '#/definitions/Message'
          - description: The primary message that Amazon Lex should send to the user.
      variations:
        allOf:
          - $ref: '#/definitions/MessageVariationsList'
          - description: >-
              Message variations to send to the user. When variations are
              defined, Amazon Lex chooses the primary message or one of the
              variations to send to the user.
    required:
      - message
    type: object
  MessageGroupsList:
    items:
      $ref: '#/definitions/MessageGroup'
    maxItems: 5
    minItems: 1
    type: array
  MessageVariationsList:
    items:
      $ref: '#/definitions/Message'
    maxItems: 2
    minItems: 0
    type: array
  MultipleValuesSetting:
    description: Indicates whether a slot can return multiple values.
    properties:
      allowMultipleValues:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              <p>Indicates whether a slot can return multiple values. When
              <code>true</code>, the slot may return more than one value in a
              response. When <code>false</code>, the slot returns only a single
              value.</p> <p>Multi-value slots are only available in the en-US
              locale. If you set this value to <code>true</code> in any other
              locale, Amazon Lex throws a <code>ValidationException</code>.</p>
              <p>If the <code>allowMutlipleValues</code> is not set, the default
              value is <code>false</code>.</p>
    type: object
  Name:
    maxLength: 100
    minLength: 1
    pattern: '^([0-9a-zA-Z][_-]?)+$'
    type: string
  NextToken:
    type: string
  NumericalBotVersion:
    maxLength: 5
    minLength: 1
    pattern: '^[0-9]+$'
    type: string
  ObfuscationSetting:
    description: 'Determines whether Amazon Lex obscures slot values in conversation logs. '
    properties:
      obfuscationSettingType:
        allOf:
          - $ref: '#/definitions/ObfuscationSettingType'
          - description: >-
              Value that determines whether Amazon Lex obscures slot values in
              conversation logs. The default is to obscure the values.
    required:
      - obfuscationSettingType
    type: object
  ObfuscationSettingType:
    enum:
      - None
      - DefaultObfuscation
    type: string
  Operation:
    maxLength: 50
    minLength: 5
    pattern: 'lex:[a-zA-Z*]+$'
    type: string
  OperationList:
    items:
      $ref: '#/definitions/Operation'
    type: array
  OutputContext:
    description: Describes a session context that is activated when an intent is fulfilled.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the output context.
      timeToLiveInSeconds:
        allOf:
          - $ref: '#/definitions/ContextTimeToLiveInSeconds'
          - description: >-
              The amount of time, in seconds, that the output context should
              remain active. The time is figured from the first time the context
              is sent to the user.
      turnsToLive:
        allOf:
          - $ref: '#/definitions/ContextTurnsToLive'
          - description: >-
              The number of conversation turns that the output context should
              remain active. The number of turns is counted from the first time
              that the context is sent to the user.
    required:
      - name
      - timeToLiveInSeconds
      - turnsToLive
    type: object
  OutputContextsList:
    items:
      $ref: '#/definitions/OutputContext'
    maxItems: 10
    minItems: 0
    type: array
  PlainTextMessage:
    description: Defines an ASCII text message to send to the user.
    properties:
      value:
        allOf:
          - $ref: '#/definitions/PlainTextMessageValue'
          - description: The message to send to the user.
    required:
      - value
    type: object
  PlainTextMessageValue:
    maxLength: 1000
    minLength: 1
    type: string
  Policy:
    minLength: 2
    type: string
  PreconditionFailedException: {}
  PresignedS3Url:
    maxLength: 1024
    minLength: 1
    type: string
  Principal:
    description: >-
      The IAM principal that you allowing or denying access to an Amazon Lex
      action. You must provide a <code>service</code> or an <code>arn</code>,
      but not both in the same statement. For more information, see <a
      href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">
      AWS JSON policy elements: Principal </a>.
    properties:
      arn:
        allOf:
          - $ref: '#/definitions/PrincipalArn'
          - description: The Amazon Resource Name (ARN) of the principal.
      service:
        allOf:
          - $ref: '#/definitions/ServicePrincipal'
          - description: >-
              The name of the AWS service that should allowed or denied access
              to an Amazon Lex action.
    type: object
  PrincipalArn:
    maxLength: 1024
    minLength: 30
    pattern: '^arn:aws:iam::[0-9]{12}:(root|(user|role)/.*)$'
    type: string
  PrincipalList:
    items:
      $ref: '#/definitions/Principal'
    type: array
  PriorityValue:
    maximum: 100
    minimum: 0
    type: integer
  PromptMaxRetries:
    maximum: 5
    minimum: 0
    type: integer
  PromptSpecification:
    description: >-
      Specifies a list of message groups that Amazon Lex sends to a user to
      elicit a response.
    properties:
      allowInterrupt:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Indicates whether the user can interrupt a speech prompt from the
              bot.
      maxRetries:
        allOf:
          - $ref: '#/definitions/PromptMaxRetries'
          - description: >-
              The maximum number of times the bot tries to elicit a resonse from
              the user using this prompt.
      messageGroups:
        allOf:
          - $ref: '#/definitions/MessageGroupsList'
          - description: >-
              A collection of messages that Amazon Lex can send to the user.
              Amazon Lex chooses the actual message to send at runtime.
    required:
      - messageGroups
      - maxRetries
    type: object
  QueryFilterString:
    maxLength: 5000
    minLength: 1
    type: string
  RegexPattern:
    maxLength: 100
    minLength: 1
    type: string
  ResourceCount:
    type: integer
  ResourceNotFoundException: {}
  ResponseSpecification:
    description: >-
      Specifies a list of message groups that Amazon Lex uses to respond the
      user input.
    properties:
      allowInterrupt:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Indicates whether the user can interrupt a speech response from
              Amazon Lex.
      messageGroups:
        allOf:
          - $ref: '#/definitions/MessageGroupsList'
          - description: >-
              A collection of responses that Amazon Lex can send to the user.
              Amazon Lex chooses the actual response to send at runtime.
    required:
      - messageGroups
    type: object
  RevisionId:
    maxLength: 5
    minLength: 1
    pattern: '^[0-9]+$'
    type: string
  RoleArn:
    maxLength: 2048
    minLength: 32
    pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'
    type: string
  S3BucketArn:
    maxLength: 2048
    minLength: 1
    pattern: '^arn:[\w\-]+:s3:::[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$'
    type: string
  S3BucketLogDestination:
    description: Specifies an Amazon S3 bucket for logging audio conversations
    properties:
      kmsKeyArn:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: >-
              The Amazon Resource Name (ARN) of an AWS Key Management Service
              (KMS) key for encrypting audio log files stored in an S3 bucket.
      logPrefix:
        allOf:
          - $ref: '#/definitions/LogPrefix'
          - description: The S3 prefix to assign to audio log files.
      s3BucketArn:
        allOf:
          - $ref: '#/definitions/S3BucketArn'
          - description: >-
              The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio
              log files are stored.
    required:
      - s3BucketArn
      - logPrefix
    type: object
  SSMLMessage:
    description: Defines a Speech Synthesis Markup Language (SSML) prompt.
    properties:
      value:
        allOf:
          - $ref: '#/definitions/SSMLMessageValue'
          - description: The SSML text that defines the prompt.
    required:
      - value
    type: object
  SSMLMessageValue:
    maxLength: 1000
    minLength: 1
    type: string
  SampleUtterance:
    description: >-
      A sample utterance that invokes an intent or respond to a slot elicitation
      prompt.
    properties:
      utterance:
        allOf:
          - $ref: '#/definitions/Utterance'
          - description: >-
              The sample utterance that Amazon Lex uses to build its
              machine-learning model to recognize intents.
    required:
      - utterance
    type: object
  SampleUtterancesList:
    items:
      $ref: '#/definitions/SampleUtterance'
    type: array
  SampleValue:
    description: Defines one of the values for a slot type.
    properties:
      value:
        allOf:
          - $ref: '#/definitions/Value'
          - description: The value that can be used for a slot type.
    required:
      - value
    type: object
  SentimentAnalysisSettings:
    description: >-
      Determines whether Amazon Lex will use Amazon Comprehend to detect the
      sentiment of user utterances.
    properties:
      detectSentiment:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Sets whether Amazon Lex uses Amazon Comprehend to detect the
              sentiment of user utterances.
    required:
      - detectSentiment
    type: object
  ServicePrincipal:
    maxLength: 1024
    minLength: 15
    pattern: '^[0-9a-zA-Z_.]+$'
    type: string
  ServiceQuotaExceededException: {}
  SessionTTL:
    maximum: 86400
    minimum: 60
    type: integer
  SkipResourceInUseCheck:
    type: boolean
  SlotConstraint:
    enum:
      - Required
      - Optional
    type: string
  SlotDefaultValue:
    description: >-
      Specifies the default value to use when a user doesn't provide a value for
      a slot.
    properties:
      defaultValue:
        allOf:
          - $ref: '#/definitions/SlotDefaultValueString'
          - description: >-
              The default value to use when a user doesn't provide a value for a
              slot.
    required:
      - defaultValue
    type: object
  SlotDefaultValueList:
    items:
      $ref: '#/definitions/SlotDefaultValue'
    maxItems: 10
    minItems: 0
    type: array
  SlotDefaultValueSpecification:
    description: >-
      Defines a list of values that Amazon Lex should use as the default value
      for a slot.
    properties:
      defaultValueList:
        allOf:
          - $ref: '#/definitions/SlotDefaultValueList'
          - description: >-
              A list of default values. Amazon Lex chooses the default value to
              use in the order that they are presented in the list.
    required:
      - defaultValueList
    type: object
  SlotDefaultValueString:
    maxLength: 202
    minLength: 1
    type: string
  SlotFilter:
    description: Filters the response from the <code>ListSlots</code> operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/SlotFilterName'
          - description: The name of the field to use for filtering.
      operator:
        allOf:
          - $ref: '#/definitions/SlotFilterOperator'
          - description: >-
              The operator to use for the filter. Specify <code>EQ</code> when
              the <code>ListSlots</code> operation should return only aliases
              that equal the specified value. Specify <code>CO</code> when the
              <code>ListSlots</code> operation should return aliases that
              contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The value to use to filter the response.
    required:
      - name
      - values
      - operator
    type: object
  SlotFilterName:
    enum:
      - SlotName
    type: string
  SlotFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  SlotFilters:
    items:
      $ref: '#/definitions/SlotFilter'
    maxItems: 1
    minItems: 1
    type: array
  SlotPrioritiesList:
    items:
      $ref: '#/definitions/SlotPriority'
    type: array
  SlotPriority:
    description: >-
      Sets the priority that Amazon Lex should use when eliciting slot values
      from a user.
    properties:
      priority:
        allOf:
          - $ref: '#/definitions/PriorityValue'
          - description: The priority that a slot should be elicited.
      slotId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the slot.
    required:
      - priority
      - slotId
    type: object
  SlotSortAttribute:
    enum:
      - SlotName
      - LastUpdatedDateTime
    type: string
  SlotSortBy:
    description: Specifies attributes for sorting a list of bots.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/SlotSortAttribute'
          - description: The attribute to use to sort the list.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: >-
              The order to sort the list. You can choose ascending or
              descending.
    required:
      - attribute
      - order
    type: object
  SlotSummary:
    description: >-
      Summary information about a slot, a value that the bot elicits from the
      user.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the slot.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of the last date and time that the slot was updated.
      slotConstraint:
        allOf:
          - $ref: '#/definitions/SlotConstraint'
          - description: >-
              Whether the slot is required or optional. An intent is complete
              when all required slots are filled.
      slotId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the slot.
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name given to the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: >-
              The unique identifier for the slot type that defines the values
              for the slot.
      valueElicitationPromptSpecification:
        allOf:
          - $ref: '#/definitions/PromptSpecification'
          - description: Prompts that are sent to the user to elicit a value for the slot.
    type: object
  SlotSummaryList:
    items:
      $ref: '#/definitions/SlotSummary'
    type: array
  SlotTypeFilter:
    description: Filters the response from the <code>ListSlotTypes</code> operation.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/SlotTypeFilterName'
          - description: The name of the field to use for filtering.
      operator:
        allOf:
          - $ref: '#/definitions/SlotTypeFilterOperator'
          - description: >-
              The operator to use for the filter. Specify <code>EQ</code> when
              the <code>ListSlotTypes</code> operation should return only
              aliases that equal the specified value. Specify <code>CO</code>
              when the <code>ListSlotTypes</code> operation should return
              aliases that contain the specified value.
      values:
        allOf:
          - $ref: '#/definitions/FilterValues'
          - description: The value to use to filter the response.
    required:
      - name
      - values
      - operator
    type: object
  SlotTypeFilterName:
    enum:
      - SlotTypeName
    type: string
  SlotTypeFilterOperator:
    enum:
      - CO
      - EQ
    type: string
  SlotTypeFilters:
    items:
      $ref: '#/definitions/SlotTypeFilter'
    maxItems: 1
    minItems: 1
    type: array
  SlotTypeSignature:
    type: string
  SlotTypeSortAttribute:
    enum:
      - SlotTypeName
      - LastUpdatedDateTime
    type: string
  SlotTypeSortBy:
    description: Specifies attributes for sorting a list of slot types.
    properties:
      attribute:
        allOf:
          - $ref: '#/definitions/SlotTypeSortAttribute'
          - description: The attribute to use to sort the list of slot types.
      order:
        allOf:
          - $ref: '#/definitions/SortOrder'
          - description: The order to sort the list. You can say ascending or descending.
    required:
      - attribute
      - order
    type: object
  SlotTypeSummary:
    description: Provides summary information about a slot type.
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the slot type.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the slot type was last
              updated.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: >-
              If the slot type is derived from a built-on slot type, the name of
              the parent slot type.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier assigned to the slot type.
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the slot type.
    type: object
  SlotTypeSummaryList:
    items:
      $ref: '#/definitions/SlotTypeSummary'
    type: array
  SlotTypeValue:
    description: >-
      Each slot type can have a set of values. Each <code>SlotTypeValue</code>
      represents a value that the slot type can take.
    properties:
      sampleValue:
        allOf:
          - $ref: '#/definitions/SampleValue'
          - description: The value of the slot type entry.
      synonyms:
        allOf:
          - $ref: '#/definitions/SynonymList'
          - description: Additional values releated to the slot type entry.
    type: object
  SlotTypeValues:
    items:
      $ref: '#/definitions/SlotTypeValue'
    maxItems: 10000
    minItems: 1
    type: array
  SlotValueElicitationSetting:
    description: Settings that you can use for eliciting a slot value.
    properties:
      defaultValueSpecification:
        allOf:
          - $ref: '#/definitions/SlotDefaultValueSpecification'
          - description: >-
              A list of default values for a slot. Default values are used when
              Amazon Lex hasn't determined a value for a slot. You can specify
              default values from context variables, sesion attributes, and
              defined values.
      promptSpecification:
        allOf:
          - $ref: '#/definitions/PromptSpecification'
          - description: >-
              The prompt that Amazon Lex uses to elicit the slot value from the
              user.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: >-
              If you know a specific pattern that users might respond to an
              Amazon Lex request for a slot value, you can provide those
              utterances to improve accuracy. This is optional. In most cases,
              Amazon Lex is capable of understanding user utterances.
      slotConstraint:
        allOf:
          - $ref: '#/definitions/SlotConstraint'
          - description: Specifies whether the slot is required or optional.
      waitAndContinueSpecification:
        $ref: '#/definitions/WaitAndContinueSpecification'
    required:
      - slotConstraint
    type: object
  SlotValueRegexFilter:
    description: Provides a regular expression used to validate the value of a slot.
    properties:
      pattern:
        allOf:
          - $ref: '#/definitions/RegexPattern'
          - description: >-
              <p>A regular expression used to validate the value of a slot.</p>
              <p> Use a standard regular expression. Amazon Lex supports the
              following characters in the regular expression: </p> <ul> <li>
              <p>A-Z, a-z</p> </li> <li> <p>0-9</p> </li> <li> <p>Unicode
              characters ("\ u&lt;Unicode&gt;")</p> </li> </ul> <p> Represent
              Unicode characters with four digits, for example "\u0041" or
              "\u005A". </p> <p> The following regular expression operators are
              not supported: </p> <ul> <li> <p>Infinite repeaters: *, +, or {x,}
              with no upper bound.</p> </li> <li> <p>Wild card (.)</p> </li>
              </ul>
    required:
      - pattern
    type: object
  SlotValueResolutionStrategy:
    enum:
      - OriginalValue
      - TopResolution
    type: string
  SlotValueSelectionSetting:
    description: Contains settings used by Amazon Lex to select a slot value.
    properties:
      regexFilter:
        allOf:
          - $ref: '#/definitions/SlotValueRegexFilter'
          - description: A regular expression used to validate the value of a slot.
      resolutionStrategy:
        allOf:
          - $ref: '#/definitions/SlotValueResolutionStrategy'
          - description: >-
              <p>Determines the slot resolution strategy that Amazon Lex uses to
              return slot type values. The field can be set to one of the
              following values:</p> <ul> <li> <p>OriginalValue - Returns the
              value entered by the user, if the user value is similar to the
              slot value.</p> </li> <li> <p>TopResolution - If there is a
              resolution list for the slot, return the first value in the
              resolution list as the slot type value. If there is no resolution
              list, null is returned.</p> </li> </ul> <p>If you don't specify
              the valueSelectionStrategy, the default is OriginalValue. </p>
    required:
      - resolutionStrategy
    type: object
  SortOrder:
    enum:
      - Ascending
      - Descending
    type: string
  StartImportRequest:
    properties:
      filePassword:
        allOf:
          - $ref: '#/definitions/ImportExportFilePassword'
          - description: >-
              The password used to encrypt the zip archive that contains the bot
              or bot locale definition. You should always encrypt the zip
              archive to protect it during transit between your site and Amazon
              Lex.
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: >-
              The unique identifier for the import. It is included in the
              response from the operation.
      mergeStrategy:
        allOf:
          - $ref: '#/definitions/MergeStrategy'
          - description: >-
              The strategy to use when there is a name conflict between the
              imported resource and an existing resource. When the merge
              strategy is <code>FailOnConflict</code> existing resources are not
              overwritten and the import fails.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ImportResourceSpecification'
          - description: Parameters for creating the bot or bot locale.
    required:
      - importId
      - resourceSpecification
      - mergeStrategy
    title: StartImportRequest
    type: object
  StartImportResponse:
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the import request was created.
      importId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: A unique identifier for the import.
      importStatus:
        allOf:
          - $ref: '#/definitions/ImportStatus'
          - description: >-
              The current status of the import. When the status is
              <code>Complete</code> the bot or bot alias is ready to use.
      mergeStrategy:
        allOf:
          - $ref: '#/definitions/MergeStrategy'
          - description: >-
              The strategy used when there was a name conflict between the
              imported resource and an existing resource. When the merge
              strategy is <code>FailOnConflict</code> existing resources are not
              overwritten and the import fails.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ImportResourceSpecification'
          - description: The parameters used when importing the bot or bot locale.
    type: object
  StillWaitingResponseFrequency:
    maximum: 300
    minimum: 1
    type: integer
  StillWaitingResponseSpecification:
    description: >-
      Defines the messages that Amazon Lex sends to a user to remind them that
      the bot is waiting for a response.
    properties:
      allowInterrupt:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Indicates that the user can interrupt the response by speaking
              while the message is being played.
      frequencyInSeconds:
        allOf:
          - $ref: '#/definitions/StillWaitingResponseFrequency'
          - description: >-
              How often a message should be sent to the user. Minimum of 1
              second, maximum of 5 minutes.
      messageGroups:
        allOf:
          - $ref: '#/definitions/MessageGroupsList'
          - description: >-
              One or more message groups, each containing one or more messages,
              that define the prompts that Amazon Lex sends to the user.
      timeoutInSeconds:
        allOf:
          - $ref: '#/definitions/StillWaitingResponseTimeout'
          - description: >-
              If Amazon Lex waits longer than this length of time for a
              response, it will stop sending messages.
    required:
      - messageGroups
      - frequencyInSeconds
      - timeoutInSeconds
    type: object
  StillWaitingResponseTimeout:
    maximum: 900
    minimum: 1
    type: integer
  SynonymList:
    items:
      $ref: '#/definitions/SampleValue'
    maxItems: 10000
    minItems: 1
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 0
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 200
    minProperties: 0
    type: object
  TagResourceRequest:
    properties:
      tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of tag keys to add to the resource. If a tag key already
              exists, the existing value is replaced with the new value.
    required:
      - tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  TextLogDestination:
    description: >-
      Defines the Amazon CloudWatch Logs destination log group for conversation
      text logs.
    properties:
      cloudWatch:
        allOf:
          - $ref: '#/definitions/CloudWatchLogGroupLogDestination'
          - description: >-
              Defines the Amazon CloudWatch Logs log group where text and
              metadata logs are delivered.
    required:
      - cloudWatch
    type: object
  TextLogSetting:
    description: Defines settings to enable text conversation logs.
    properties:
      destination:
        $ref: '#/definitions/TextLogDestination'
      enabled:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              Determines whether conversation logs should be stored for an
              alias.
    required:
      - enabled
      - destination
    type: object
  TextLogSettingsList:
    items:
      $ref: '#/definitions/TextLogSetting'
    maxItems: 1
    minItems: 1
    type: array
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateBotAliasRequest:
    properties:
      botAliasLocaleSettings:
        allOf:
          - $ref: '#/definitions/BotAliasLocaleSettingsMap'
          - description: The new Lambda functions to use in each locale for the bot alias.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The new name to assign to the bot alias.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The new bot version to assign to the bot alias.
      conversationLogSettings:
        allOf:
          - $ref: '#/definitions/ConversationLogSettings'
          - description: >-
              The new settings for storing conversation logs in Amazon
              CloudWatch Logs and Amazon S3 buckets.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The new description to assign to the bot alias.
      sentimentAnalysisSettings:
        $ref: '#/definitions/SentimentAnalysisSettings'
    required:
      - botAliasName
    title: UpdateBotAliasRequest
    type: object
  UpdateBotAliasResponse:
    properties:
      botAliasId:
        allOf:
          - $ref: '#/definitions/BotAliasId'
          - description: The identifier of the updated bot alias.
      botAliasLocaleSettings:
        allOf:
          - $ref: '#/definitions/BotAliasLocaleSettingsMap'
          - description: >-
              The updated Lambda functions to use in each locale for the bot
              alias.
      botAliasName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The updated name of the bot alias.
      botAliasStatus:
        allOf:
          - $ref: '#/definitions/BotAliasStatus'
          - description: >-
              The current status of the bot alias. When the status is
              <code>Available</code> the alias is ready for use.
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot with the updated alias.
      botVersion:
        allOf:
          - $ref: '#/definitions/BotVersion'
          - description: The updated version of the bot that the alias points to.
      conversationLogSettings:
        allOf:
          - $ref: '#/definitions/ConversationLogSettings'
          - description: >-
              The updated settings for storing conversation logs in Amazon
              CloudWatch Logs and Amazon S3 buckets.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The updated description of the bot alias.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was last updated.
      sentimentAnalysisSettings:
        $ref: '#/definitions/SentimentAnalysisSettings'
    type: object
  UpdateBotLocaleRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The new description of the locale.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              The new confidence threshold where Amazon Lex inserts the
              <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> intents in the list of
              possible intents for an utterance.
      voiceSettings:
        allOf:
          - $ref: '#/definitions/VoiceSettings'
          - description: >-
              The new Amazon Polly voice Amazon Lex should use for voice
              interaction with the user.
    required:
      - nluIntentConfidenceThreshold
    title: UpdateBotLocaleRequest
    type: object
  UpdateBotLocaleResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the updated locale.
      botLocaleStatus:
        allOf:
          - $ref: '#/definitions/BotLocaleStatus'
          - description: >-
              The current status of the locale. When the bot status is
              <code>Built</code> the locale is ready for use.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: The version of the bot that contains the updated locale.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the locale was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The updated description of the locale.
      failureReasons:
        allOf:
          - $ref: '#/definitions/FailureReasons'
          - description: >-
              If the <code>botLocaleStatus</code> is <code>Failed</code>, the
              <code>failureReasons</code> field lists the errors that occurred
              while building the bot.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the locale was last updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the updated bot locale.
      localeName:
        allOf:
          - $ref: '#/definitions/LocaleName'
          - description: The updated locale name for the locale.
      nluIntentConfidenceThreshold:
        allOf:
          - $ref: '#/definitions/ConfidenceThreshold'
          - description: >-
              The updated confidence threshold for inserting the
              <code>AMAZON.FallbackIntent</code> and
              <code>AMAZON.KendraSearchIntent</code> intents in the list of
              possible intents for an utterance.
      voiceSettings:
        allOf:
          - $ref: '#/definitions/VoiceSettings'
          - description: >-
              The updated Amazon Polly voice to use for voice interaction with
              the user.
    type: object
  UpdateBotRequest:
    properties:
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: >-
              The new name of the bot. The name must be unique in the account
              that creates the bot.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: >-
              Provides information on additional privacy protections Amazon Lex
              should use with the bot's data.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: A description of the bot.
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: >-
              <p>The time, in seconds, that Amazon Lex should keep information
              about a user's conversation with the bot.</p> <p>A user
              interaction remains active for the amount of time specified. If no
              conversation occurs during this time, the session expires and
              Amazon Lex deletes any data provided before the timeout.</p>
              <p>You can specify between 60 (1 minute) and 86,400 (24 hours)
              seconds.</p>
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of an IAM role that has permissions
              to access the bot.
    required:
      - botName
      - roleArn
      - dataPrivacy
      - idleSessionTTLInSeconds
    title: UpdateBotRequest
    type: object
  UpdateBotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the bot that was updated.
      botName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The name of the bot after the update.
      botStatus:
        allOf:
          - $ref: '#/definitions/BotStatus'
          - description: >-
              Shows the current status of the bot. The bot is first in the
              <code>Creating</code> status. Once the bot is read for use, it
              changes to the <code>Available</code> status. After the bot is
              created, you can use the <code>DRAFT</code> version of the bot.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was created.
      dataPrivacy:
        allOf:
          - $ref: '#/definitions/DataPrivacy'
          - description: The data privacy settings for the bot after the update.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The description of the bot after the update.
      idleSessionTTLInSeconds:
        allOf:
          - $ref: '#/definitions/SessionTTL'
          - description: 'The session timeout, in seconds, for the bot after the update.'
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the date and time that the bot was last updated.
      roleArn:
        allOf:
          - $ref: '#/definitions/RoleArn'
          - description: >-
              The Amazon Resource Name (ARN) of the IAM role used by the bot
              after the update.
    type: object
  UpdateExportRequest:
    properties:
      filePassword:
        allOf:
          - $ref: '#/definitions/ImportExportFilePassword'
          - description: The new password to use to encrypt the export zip archive.
    title: UpdateExportRequest
    type: object
  UpdateExportResponse:
    properties:
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the export was created.
      exportId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier Amazon Lex assigned to the export.
      exportStatus:
        allOf:
          - $ref: '#/definitions/ExportStatus'
          - description: >-
              The status of the export. When the status is
              <code>Completed</code> the export archive is available for
              download.
      fileFormat:
        allOf:
          - $ref: '#/definitions/ImportExportFileFormat'
          - description: The file format used for the files that define the resource.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The date and time that the export was last updated.
      resourceSpecification:
        allOf:
          - $ref: '#/definitions/ExportResourceSpecification'
          - description: >-
              A description of the type of resource that was exported, either a
              bot or a bot locale.
    type: object
  UpdateIntentRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The new description of the intent.
      dialogCodeHook:
        allOf:
          - $ref: '#/definitions/DialogCodeHookSettings'
          - description: >-
              The new Lambda function to use between each turn of the
              conversation with the bot.
      fulfillmentCodeHook:
        allOf:
          - $ref: '#/definitions/FulfillmentCodeHookSettings'
          - description: >-
              The new Lambda function to call when all of the intents required
              slots are provided and the intent is ready for fulfillment.
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: >-
              A new list of contexts that must be active in order for Amazon Lex
              to consider the intent.
      intentClosingSetting:
        allOf:
          - $ref: '#/definitions/IntentClosingSetting'
          - description: >-
              The new response that Amazon Lex sends the user when the intent is
              closed.
      intentConfirmationSetting:
        allOf:
          - $ref: '#/definitions/IntentConfirmationSetting'
          - description: >-
              New prompts that Amazon Lex sends to the user to confirm the
              completion of an intent.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The new name for the intent.
      kendraConfiguration:
        allOf:
          - $ref: '#/definitions/KendraConfiguration'
          - description: >-
              New configuration settings for connecting to an Amazon Kendra
              index.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: >-
              A new list of contexts that Amazon Lex activates when the intent
              is fulfilled.
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: >-
              The signature of the new built-in intent to use as the parent of
              this intent.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: New utterances used to invoke the intent.
      slotPriorities:
        allOf:
          - $ref: '#/definitions/SlotPrioritiesList'
          - description: >-
              A new list of slots and their priorities that are contained by the
              intent.
    required:
      - intentName
    title: UpdateIntentRequest
    type: object
  UpdateIntentResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the intent.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The version of the bot that contains the intent. Will always be
              <code>DRAFT</code>.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of when the intent was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The updated description of the intent.
      dialogCodeHook:
        allOf:
          - $ref: '#/definitions/DialogCodeHookSettings'
          - description: >-
              The updated Lambda function called during each turn of the
              conversation with the user.
      fulfillmentCodeHook:
        allOf:
          - $ref: '#/definitions/FulfillmentCodeHookSettings'
          - description: >-
              The updated Lambda function called when the intent is ready for
              fulfillment.
      inputContexts:
        allOf:
          - $ref: '#/definitions/InputContextsList'
          - description: >-
              The updated list of contexts that must be active for the intent to
              be considered by Amazon Lex.
      intentClosingSetting:
        allOf:
          - $ref: '#/definitions/IntentClosingSetting'
          - description: >-
              The updated response that Amazon Lex sends the user when the
              intent is closed.
      intentConfirmationSetting:
        allOf:
          - $ref: '#/definitions/IntentConfirmationSetting'
          - description: >-
              The updated prompts that Amazon Lex sends to the user to confirm
              the completion of an intent.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the intent that was updated.
      intentName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The updated name of the intent.
      kendraConfiguration:
        allOf:
          - $ref: '#/definitions/KendraConfiguration'
          - description: >-
              The updated configuration for connecting to an Amazon Kendra index
              with the <code>AMAZON.KendraSearchIntent</code> intent.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: A timestamp of the last time that the intent was modified.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The updated language and locale of the intent.
      outputContexts:
        allOf:
          - $ref: '#/definitions/OutputContextsList'
          - description: >-
              The updated list of contexts that Amazon Lex activates when the
              intent is fulfilled.
      parentIntentSignature:
        allOf:
          - $ref: '#/definitions/IntentSignature'
          - description: The updated built-in intent that is the parent of this intent.
      sampleUtterances:
        allOf:
          - $ref: '#/definitions/SampleUtterancesList'
          - description: The updated list of sample utterances for the intent.
      slotPriorities:
        allOf:
          - $ref: '#/definitions/SlotPrioritiesList'
          - description: >-
              The updated list of slots and their priorities that are elicited
              from the user for the intent.
    type: object
  UpdateResourcePolicyRequest:
    properties:
      policy:
        allOf:
          - $ref: '#/definitions/Policy'
          - description: >-
              <p>A resource policy to add to the resource. The policy is a JSON
              structure that contains one or more statements that define the
              policy. The policy must follow the IAM syntax. For more
              information about the contents of a JSON policy document, see <a
              href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">
              IAM JSON policy reference </a>. </p> <p>If the policy isn't valid,
              Amazon Lex returns a validation exception.</p>
    required:
      - policy
    title: UpdateResourcePolicyRequest
    type: object
  UpdateResourcePolicyResponse:
    properties:
      resourceArn:
        allOf:
          - $ref: '#/definitions/AmazonResourceName'
          - description: >-
              The Amazon Resource Name (ARN) of the bot or bot alias that the
              resource policy is attached to.
      revisionId:
        allOf:
          - $ref: '#/definitions/RevisionId'
          - description: >-
              The current revision of the resource policy. Use the revision ID
              to make sure that you are updating the most current version of a
              resource policy when you add a policy statement to a resource,
              delete a resource, or update a resource.
    type: object
  UpdateSlotRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The new description for the slot.
      multipleValuesSetting:
        allOf:
          - $ref: '#/definitions/MultipleValuesSetting'
          - description: >-
              <p>Determines whether the slot accepts multiple values in one
              response. Multiple value slots are only available in the en-US
              locale. If you set this value to <code>true</code> in any other
              locale, Amazon Lex throws a <code>ValidationException</code>.</p>
              <p>If the <code>multipleValuesSetting</code> is not set, the
              default value is <code>false</code>.</p>
      obfuscationSetting:
        allOf:
          - $ref: '#/definitions/ObfuscationSetting'
          - description: >-
              New settings that determine how slot values are formatted in
              Amazon CloudWatch logs. 
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The new name for the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: >-
              The unique identifier of the new slot type to associate with this
              slot. 
      valueElicitationSetting:
        allOf:
          - $ref: '#/definitions/SlotValueElicitationSetting'
          - description: >-
              A new set of prompts that Amazon Lex sends to the user to elicit a
              response the provides a value for the slot.
    required:
      - slotName
      - slotTypeId
      - valueElicitationSetting
    title: UpdateSlotRequest
    type: object
  UpdateSlotResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the slot.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The identifier of the slot version that contains the slot. Will
              always be <code>DRAFT</code>.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of the date and time that the slot was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The updated description of the bot.
      intentId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The intent that contains the slot.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of the date and time that the slot was last updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The locale that contains the slot.
      multipleValuesSetting:
        allOf:
          - $ref: '#/definitions/MultipleValuesSetting'
          - description: >-
              Indicates whether the slot accepts multiple values in one
              response.
      obfuscationSetting:
        allOf:
          - $ref: '#/definitions/ObfuscationSetting'
          - description: >-
              The updated setting that determines whether the slot value is
              obfuscated in the Amazon CloudWatch logs.
      slotId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the slot that was updated.
      slotName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The updated name of the slot.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/BuiltInOrCustomSlotTypeId'
          - description: >-
              The updated identifier of the slot type that provides values for
              the slot.
      valueElicitationSetting:
        allOf:
          - $ref: '#/definitions/SlotValueElicitationSetting'
          - description: >-
              The updated prompts that Amazon Lex sends to the user to elicit a
              response that provides a value for the slot.
    type: object
  UpdateSlotTypeRequest:
    properties:
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The new description of the slot type.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: >-
              The new built-in slot type that should be used as the parent of
              this slot type.
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The new name of the slot type.
      slotTypeValues:
        allOf:
          - $ref: '#/definitions/SlotTypeValues'
          - description: >-
              A new list of values and their optional synonyms that define the
              values that the slot type can take.
      valueSelectionSetting:
        allOf:
          - $ref: '#/definitions/SlotValueSelectionSetting'
          - description: >-
              The strategy that Amazon Lex should use when deciding on a value
              from the list of slot type values.
    required:
      - slotTypeName
      - valueSelectionSetting
    title: UpdateSlotTypeRequest
    type: object
  UpdateSlotTypeResponse:
    properties:
      botId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The identifier of the bot that contains the slot type.
      botVersion:
        allOf:
          - $ref: '#/definitions/DraftBotVersion'
          - description: >-
              The version of the bot that contains the slot type. This is always
              <code>DRAFT</code>.
      creationDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp of the date and time that the slot type was created.
      description:
        allOf:
          - $ref: '#/definitions/Description'
          - description: The updated description of the slot type.
      lastUpdatedDateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              A timestamp of the date and time that the slot type was last
              updated.
      localeId:
        allOf:
          - $ref: '#/definitions/LocaleId'
          - description: The language and locale of the updated slot type.
      parentSlotTypeSignature:
        allOf:
          - $ref: '#/definitions/SlotTypeSignature'
          - description: >-
              The updated signature of the built-in slot type that is the parent
              of this slot type.
      slotTypeId:
        allOf:
          - $ref: '#/definitions/Id'
          - description: The unique identifier of the updated slot type.
      slotTypeName:
        allOf:
          - $ref: '#/definitions/Name'
          - description: The updated name of the slot type.
      slotTypeValues:
        allOf:
          - $ref: '#/definitions/SlotTypeValues'
          - description: The updated values that the slot type provides.
      valueSelectionSetting:
        allOf:
          - $ref: '#/definitions/SlotValueSelectionSetting'
          - description: >-
              The updated strategy that Amazon Lex uses to determine which value
              to select from the slot type.
    type: object
  Utterance:
    type: string
  ValidationException: {}
  Value:
    maxLength: 140
    minLength: 1
    type: string
  VoiceId:
    type: string
  VoiceSettings:
    description: >-
      Defines settings for using an Amazon Polly voice to communicate with a
      user.
    properties:
      voiceId:
        allOf:
          - $ref: '#/definitions/VoiceId'
          - description: The identifier of the Amazon Polly voice to use.
    required:
      - voiceId
    type: object
  WaitAndContinueSpecification:
    description: >-
      Specifies the prompts that Amazon Lex uses while a bot is waiting for
      customer input. 
    properties:
      active:
        allOf:
          - $ref: '#/definitions/BoxedBoolean'
          - description: >-
              Specifies whether the bot will wait for a user to respond. When
              this field is false, wait and continue responses for a slot aren't
              used and the bot expects an appropriate response within the
              configured timeout. If the <code>active</code> field isn't
              specified, the default is true.
      continueResponse:
        allOf:
          - $ref: '#/definitions/ResponseSpecification'
          - description: >-
              The response that Amazon Lex sends to indicate that the bot is
              ready to continue the conversation.
      stillWaitingResponse:
        allOf:
          - $ref: '#/definitions/StillWaitingResponseSpecification'
          - description: >-
              A response that Amazon Lex sends periodically to the user to
              indicate that the bot is still waiting for input from the user.
      waitingResponse:
        allOf:
          - $ref: '#/definitions/ResponseSpecification'
          - description: >-
              The response that Amazon Lex sends to indicate that the bot is
              waiting for the conversation to continue.
    required:
      - waitingResponse
      - continueResponse
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/models-v2-lex/'
host: models-v2-lex.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: <p/>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Lex Model Building V2
  version: '2020-08-07'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: lex
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/models.lex.v2-2020-08-07.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: models.lex.v2
paths:
  /bots/:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of available bots.
      operationId: ListBots
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  Provides the specification of a filter used to limit the bots
                  in the response to only those that match the filter
                  specification. You can only specify one filter and one string
                  to filter on.
                items:
                  $ref: '#/definitions/BotFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of bots to return in each page of results.
                  If there are fewer results than the maximum page size, only
                  the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListBots</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of bots.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/BotSortAttribute'
                      - description: The attribute to use to sort the list of bots.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can choose ascending
                          or descending.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBotsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: 'Creates an Amazon Lex conversational bot. '
      operationId: CreateBot
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              botName:
                description: >-
                  The name of the bot. The bot name must be unique in the
                  account that creates the bot.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              botTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of tags to add to the bot. You can only add tags when
                  you create a bot. You can't use the <code>UpdateBot</code>
                  operation to update tags. To update tags, use the
                  <code>TagResource</code> operation.
                maxProperties: 200
                minProperties: 0
                type: object
              dataPrivacy:
                description: >-
                  By default, data stored by Amazon Lex is encrypted. The
                  <code>DataPrivacy</code> structure provides settings that
                  determine how Amazon Lex handles special cases of securing the
                  data for your bot. 
                properties:
                  childDirected:
                    allOf:
                      - $ref: '#/definitions/ChildDirected'
                      - description: >-
                          For each Amazon Lex bot created with the Amazon Lex
                          Model Building Service, you must specify whether your
                          use of Amazon Lex is related to a website, program, or
                          other application that is directed or targeted, in
                          whole or in part, to children under age 13 and subject
                          to the Children's Online Privacy Protection Act
                          (COPPA) by specifying <code>true</code> or
                          <code>false</code> in the <code>childDirected</code>
                          field. By specifying <code>true</code> in the
                          <code>childDirected</code> field, you confirm that
                          your use of Amazon Lex <b>is</b> related to a website,
                          program, or other application that is directed or
                          targeted, in whole or in part, to children under age
                          13 and subject to COPPA. By specifying
                          <code>false</code> in the <code>childDirected</code>
                          field, you confirm that your use of Amazon Lex <b>is
                          not</b> related to a website, program, or other
                          application that is directed or targeted, in whole or
                          in part, to children under age 13 and subject to
                          COPPA. You may not specify a default value for the
                          <code>childDirected</code> field that does not
                          accurately reflect whether your use of Amazon Lex is
                          related to a website, program, or other application
                          that is directed or targeted, in whole or in part, to
                          children under age 13 and subject to COPPA. If your
                          use of Amazon Lex relates to a website, program, or
                          other application that is directed in whole or in
                          part, to children under age 13, you must obtain any
                          required verifiable parental consent under COPPA. For
                          information regarding the use of Amazon Lex in
                          connection with websites, programs, or other
                          applications that are directed or targeted, in whole
                          or in part, to children under age 13, see the <a
                          href="https://aws.amazon.com/lex/faqs#data-security">Amazon
                          Lex FAQ</a>.
                type: object
              description:
                description: >-
                  A description of the bot. It appears in lists to help you
                  identify a particular bot.
                maxLength: 200
                minLength: 0
                type: string
              idleSessionTTLInSeconds:
                description: >-
                  <p>The time, in seconds, that Amazon Lex should keep
                  information about a user's conversation with the bot. </p>
                  <p>A user interaction remains active for the amount of time
                  specified. If no conversation occurs during this time, the
                  session expires and Amazon Lex deletes any data provided
                  before the timeout.</p> <p>You can specify between 60 (1
                  minute) and 86,400 (24 hours) seconds.</p>
                maximum: 86400
                minimum: 60
                type: integer
              roleArn:
                description: >-
                  The Amazon Resource Name (ARN) of an IAM role that has
                  permission to access the bot.
                maxLength: 2048
                minLength: 32
                pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'
                type: string
              testBotAliasTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of tags to add to the test alias for a bot. You can
                  only add tags when you create a bot. You can't use the
                  <code>UpdateAlias</code> operation to update tags. To update
                  tags on the test alias, use the <code>TagResource</code>
                  operation.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - botName
              - roleArn
              - dataPrivacy
              - idleSessionTTLInSeconds
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateBotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/':
    delete:
      description: >-
        <p>Deletes all versions of a bot, including the <code>Draft</code>
        version. To delete a specific version, use the
        <code>DeleteBotVersion</code> operation.</p> <p>When you delete a bot,
        all of the resources contained in the bot are also deleted. Deleting a
        bot removes all locales, intents, slot, and slot types defined for the
        bot.</p> <p>If a bot has an alias, the <code>DeleteBot</code> operation
        returns a <code>ResourceInUseException</code> exception. If you want to
        delete the bot and the alias, set the
        <code>skipResourceInUseCheck</code> parameter to <code>true</code>.</p>
      operationId: DeleteBot
      parameters:
        - description: 'The identifier of the bot to delete. '
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            When <code>true</code>, Amazon Lex doesn't check to see if another
            resource, such as an alias, is using the bot before it is deleted.
          in: query
          name: skipResourceInUseCheck
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: 'Provides metadata information about a bot. '
      operationId: DescribeBot
      parameters:
        - description: The unique identifier of the bot to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: 'Updates the configuration of an existing bot. '
      operationId: UpdateBot
      parameters:
        - description: >-
            The unique identifier of the bot to update. This identifier is
            returned by the <a>CreateBot</a> operation.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botName:
                description: >-
                  The new name of the bot. The name must be unique in the
                  account that creates the bot.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              dataPrivacy:
                description: >-
                  By default, data stored by Amazon Lex is encrypted. The
                  <code>DataPrivacy</code> structure provides settings that
                  determine how Amazon Lex handles special cases of securing the
                  data for your bot. 
                properties:
                  childDirected:
                    allOf:
                      - $ref: '#/definitions/ChildDirected'
                      - description: >-
                          For each Amazon Lex bot created with the Amazon Lex
                          Model Building Service, you must specify whether your
                          use of Amazon Lex is related to a website, program, or
                          other application that is directed or targeted, in
                          whole or in part, to children under age 13 and subject
                          to the Children's Online Privacy Protection Act
                          (COPPA) by specifying <code>true</code> or
                          <code>false</code> in the <code>childDirected</code>
                          field. By specifying <code>true</code> in the
                          <code>childDirected</code> field, you confirm that
                          your use of Amazon Lex <b>is</b> related to a website,
                          program, or other application that is directed or
                          targeted, in whole or in part, to children under age
                          13 and subject to COPPA. By specifying
                          <code>false</code> in the <code>childDirected</code>
                          field, you confirm that your use of Amazon Lex <b>is
                          not</b> related to a website, program, or other
                          application that is directed or targeted, in whole or
                          in part, to children under age 13 and subject to
                          COPPA. You may not specify a default value for the
                          <code>childDirected</code> field that does not
                          accurately reflect whether your use of Amazon Lex is
                          related to a website, program, or other application
                          that is directed or targeted, in whole or in part, to
                          children under age 13 and subject to COPPA. If your
                          use of Amazon Lex relates to a website, program, or
                          other application that is directed in whole or in
                          part, to children under age 13, you must obtain any
                          required verifiable parental consent under COPPA. For
                          information regarding the use of Amazon Lex in
                          connection with websites, programs, or other
                          applications that are directed or targeted, in whole
                          or in part, to children under age 13, see the <a
                          href="https://aws.amazon.com/lex/faqs#data-security">Amazon
                          Lex FAQ</a>.
                type: object
              description:
                description: A description of the bot.
                maxLength: 200
                minLength: 0
                type: string
              idleSessionTTLInSeconds:
                description: >-
                  <p>The time, in seconds, that Amazon Lex should keep
                  information about a user's conversation with the bot.</p> <p>A
                  user interaction remains active for the amount of time
                  specified. If no conversation occurs during this time, the
                  session expires and Amazon Lex deletes any data provided
                  before the timeout.</p> <p>You can specify between 60 (1
                  minute) and 86,400 (24 hours) seconds.</p>
                maximum: 86400
                minimum: 60
                type: integer
              roleArn:
                description: >-
                  The Amazon Resource Name (ARN) of an IAM role that has
                  permissions to access the bot.
                maxLength: 2048
                minLength: 32
                pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'
                type: string
            required:
              - botName
              - roleArn
              - dataPrivacy
              - idleSessionTTLInSeconds
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botaliases/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of aliases for the specified bot.
      operationId: ListBotAliases
      parameters:
        - description: The identifier of the bot to list aliases for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: >-
                  The maximum number of aliases to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListBotAliases</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBotAliasesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates an alias for the specified version of a bot. Use an alias to
        enable you to change the version of a bot without updating applications
        that use the bot.</p> <p>For example, you can create an alias called
        "PROD" that your applications use to call the Amazon Lex bot. </p>
      operationId: CreateBotAlias
      parameters:
        - description: The unique identifier of the bot that the alias applies to.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botAliasLocaleSettings:
                additionalProperties:
                  $ref: '#/definitions/BotAliasLocaleSettings'
                description: >-
                  Maps configuration information to a specific locale. You can
                  use this parameter to specify a specific Lambda function to
                  run different functions in different locales.
                minProperties: 1
                type: object
              botAliasName:
                description: The alias to create. The name must be unique for the bot.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              botVersion:
                description: >-
                  The version of the bot that this alias points to. You can use
                  the operation to change the bot version associated with the
                  alias.
                maxLength: 5
                minLength: 1
                pattern: '^[0-9]+$'
                type: string
              conversationLogSettings:
                description: >-
                  Configures conversation logging that saves audio, text, and
                  metadata for the conversations with your users.
                properties:
                  audioLogSettings:
                    allOf:
                      - $ref: '#/definitions/AudioLogSettingsList'
                      - description: >-
                          The Amazon S3 settings for logging audio to an S3
                          bucket.
                  textLogSettings:
                    allOf:
                      - $ref: '#/definitions/TextLogSettingsList'
                      - description: >-
                          The Amazon CloudWatch Logs settings for logging text
                          and metadata.
                type: object
              description:
                description: >-
                  A description of the alias. Use this description to help
                  identify the alias.
                maxLength: 200
                minLength: 0
                type: string
              sentimentAnalysisSettings:
                description: >-
                  Determines whether Amazon Lex will use Amazon Comprehend to
                  detect the sentiment of user utterances.
                properties:
                  detectSentiment:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Sets whether Amazon Lex uses Amazon Comprehend to
                          detect the sentiment of user utterances.
                type: object
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of tags to add to the bot alias. You can only add tags
                  when you create an alias, you can't use the
                  <code>UpdateBotAlias</code> operation to update the tags on a
                  bot alias. To update tags, use the <code>TagResource</code>
                  operation.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - botAliasName
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateBotAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botaliases/{botAliasId}/':
    delete:
      description: Deletes the specified bot alias.
      operationId: DeleteBotAlias
      parameters:
        - description: The unique identifier of the bot alias to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: botAliasId
          pattern: '^(\bTSTALIASID\b|[0-9a-zA-Z]+)$'
          required: true
          type: string
        - description: >-
            The unique identifier of the bot associated with the alias to
            delete.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            When this parameter is true, Amazon Lex doesn't check to see if any
            other resource is using the alias before it is deleted.
          in: query
          name: skipResourceInUseCheck
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBotAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Get information about a specific bot alias.
      operationId: DescribeBotAlias
      parameters:
        - description: The identifier of the bot alias to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: botAliasId
          pattern: '^(\bTSTALIASID\b|[0-9a-zA-Z]+)$'
          required: true
          type: string
        - description: The identifier of the bot associated with the bot alias to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBotAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Updates the configuration of an existing bot alias.
      operationId: UpdateBotAlias
      parameters:
        - description: The unique identifier of the bot alias.
          in: path
          maxLength: 10
          minLength: 10
          name: botAliasId
          pattern: '^(\bTSTALIASID\b|[0-9a-zA-Z]+)$'
          required: true
          type: string
        - description: The identifier of the bot with the updated alias.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botAliasLocaleSettings:
                additionalProperties:
                  $ref: '#/definitions/BotAliasLocaleSettings'
                description: >-
                  The new Lambda functions to use in each locale for the bot
                  alias.
                minProperties: 1
                type: object
              botAliasName:
                description: The new name to assign to the bot alias.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              botVersion:
                description: The new bot version to assign to the bot alias.
                maxLength: 5
                minLength: 1
                pattern: '^(DRAFT|[0-9]+)$'
                type: string
              conversationLogSettings:
                description: >-
                  Configures conversation logging that saves audio, text, and
                  metadata for the conversations with your users.
                properties:
                  audioLogSettings:
                    allOf:
                      - $ref: '#/definitions/AudioLogSettingsList'
                      - description: >-
                          The Amazon S3 settings for logging audio to an S3
                          bucket.
                  textLogSettings:
                    allOf:
                      - $ref: '#/definitions/TextLogSettingsList'
                      - description: >-
                          The Amazon CloudWatch Logs settings for logging text
                          and metadata.
                type: object
              description:
                description: The new description to assign to the bot alias.
                maxLength: 200
                minLength: 0
                type: string
              sentimentAnalysisSettings:
                description: >-
                  Determines whether Amazon Lex will use Amazon Comprehend to
                  detect the sentiment of user utterances.
                properties:
                  detectSentiment:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Sets whether Amazon Lex uses Amazon Comprehend to
                          detect the sentiment of user utterances.
                type: object
            required:
              - botAliasName
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBotAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Gets information about all of the versions of a bot.</p> <p>The
        <code>ListBotVersions</code> operation returns a summary of each version
        of a bot. For example, if a bot has three numbered versions, the
        <code>ListBotVersions</code> operation returns for summaries, one for
        each numbered version and one for the <code>DRAFT</code> version.</p>
        <p>The <code>ListBotVersions</code> operation always returns at least
        one version, the <code>DRAFT</code> version.</p>
      operationId: ListBotVersions
      parameters:
        - description: The identifier of the bot to list versions for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: >-
                  The maximum number of versions to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response to the <code>ListBotVersion</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of bot versions.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/BotVersionSortAttribute'
                      - description: The attribute to use to sort the list of versions.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can specify ascending
                          or descending order.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBotVersionsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a new version of the bot based on the <code>DRAFT</code>
        version. If the <code>DRAFT</code> version of this resource hasn't
        changed since you created the last version, Amazon Lex doesn't create a
        new version, it returns the last created version.</p> <p>When you create
        the first version of a bot, Amazon Lex sets the version to 1. Subsequent
        versions increment by 1.</p>
      operationId: CreateBotVersion
      parameters:
        - description: The identifier of the bot to create the version for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botVersionLocaleSpecification:
                additionalProperties:
                  $ref: '#/definitions/BotVersionLocaleDetails'
                description: >-
                  Specifies the locales that Amazon Lex adds to this version.
                  You can choose the <code>Draft</code> version or any other
                  previously published version for each locale. When you specify
                  a source version, the locale data is copied from the source
                  version to the new version.
                minProperties: 1
                type: object
              description:
                description: >-
                  A description of the version. Use the description to help
                  identify the version in lists.
                maxLength: 200
                minLength: 0
                type: string
            required:
              - botVersionLocaleSpecification
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateBotVersionResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/':
    delete:
      description: >-
        Deletes a specific version of a bot. To delete all version of a bot, use
        the <a>DeleteBot</a> operation.
      operationId: DeleteBotVersion
      parameters:
        - description: The identifier of the bot that contains the version.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot to delete.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^[0-9]+$'
          required: true
          type: string
        - description: >-
            By default, the <code>DeleteBotVersion</code> operations throws a
            <code>ResourceInUseException</code> exception if you try to delete a
            bot version that has an alias pointing at it. Set the
            <code>skipResourceInUseCheck</code> parameter to <code>true</code>
            to skip this check and remove the version even if an alias points to
            it.
          in: query
          name: skipResourceInUseCheck
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBotVersionResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Provides metadata about a version of a bot.
      operationId: DescribeBotVersion
      parameters:
        - description: >-
            The identifier of the bot containing the version to return metadata
            for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot to return metadata for.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^[0-9]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBotVersionResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/bots/{botId}/botversions/{botVersion}/botlocales/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of locales for the specified bot.
      operationId: ListBotLocales
      parameters:
        - description: The identifier of the bot to list locales for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot to list locales for.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  Provides the specification for a filter used to limit the
                  response to only those locales that match the filter
                  specification. You can only specify one filter and one value
                  to filter on.
                items:
                  $ref: '#/definitions/BotLocaleFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of aliases to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListBotLocales</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token as the <code>nextToken</code>
                  parameter to return the next page of results. 
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of bot locales.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/BotLocaleSortAttribute'
                      - description: The bot locale attribute to sort by.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          Specifies whether to sort the bot locales in ascending
                          or descending order.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBotLocalesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        Creates a locale in the bot. The locale contains the intents and slot
        types that the bot uses in conversations with users in the specified
        language and locale. You must add a locale to a bot before you can add
        intents and slot types to the bot.
      operationId: CreateBotLocale
      parameters:
        - description: The identifier of the bot to create the locale for.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot to create the locale for. This can only be
            the draft version of the bot.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: >-
                  A description of the bot locale. Use this to help identify the
                  bot locale in lists.
                maxLength: 200
                minLength: 0
                type: string
              localeId:
                description: >-
                  The identifier of the language and locale that the bot will be
                  used in. The string must match one of the supported locales.
                  All of the intents, slot types, and slots used in the bot must
                  have the same locale. For more information, see <a
                  href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
                  languages</a>.
                type: string
              nluIntentConfidenceThreshold:
                description: >-
                  <p>Determines the threshold where Amazon Lex will insert the
                  <code>AMAZON.FallbackIntent</code>,
                  <code>AMAZON.KendraSearchIntent</code>, or both when returning
                  alternative intents. <code>AMAZON.FallbackIntent</code> and
                  <code>AMAZON.KendraSearchIntent</code> are only inserted if
                  they are configured for the bot.</p> <p>For example, suppose a
                  bot is configured with the confidence threshold of 0.80 and
                  the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns
                  three alternative intents with the following confidence
                  scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The
                  response from the PostText operation would be:</p> <ul> <li>
                  <p>AMAZON.FallbackIntent</p> </li> <li> <p>IntentA</p> </li>
                  <li> <p>IntentB</p> </li> <li> <p>IntentC</p> </li> </ul>
                format: double
                maximum: 1
                minimum: 0
                type: number
              voiceSettings:
                description: >-
                  Defines settings for using an Amazon Polly voice to
                  communicate with a user.
                properties:
                  voiceId:
                    allOf:
                      - $ref: '#/definitions/VoiceId'
                      - description: The identifier of the Amazon Polly voice to use.
                type: object
            required:
              - localeId
              - nluIntentConfidenceThreshold
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateBotLocaleResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/':
    delete:
      description: >-
        <p>Removes a locale from a bot.</p> <p>When you delete a locale, all
        intents, slots, and slot types defined for the locale are also
        deleted.</p>
      operationId: DeleteBotLocale
      parameters:
        - description: The unique identifier of the bot that contains the locale.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: 'The version of the bot that contains the locale. '
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that will be deleted. The
            string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBotLocaleResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: 'Describes the settings that a bot has for a specific locale. '
      operationId: DescribeBotLocale
      parameters:
        - description: The identifier of the bot associated with the locale.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the version of the bot associated with the locale.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The unique identifier of the locale to describe. The string must
            match one of the supported locales. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>. 
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBotLocaleResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Builds a bot, its intents, and its slot types into a specific locale. A
        bot can be built into multiple locales. At runtime the locale is used to
        choose a specific build of the bot.
      operationId: BuildBotLocale
      parameters:
        - description: >-
            The identifier of the bot to build. The identifier is returned in
            the response from the operation.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot to build. This can only be the draft version
            of the bot.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that the bot will be used
            in. The string must match one of the supported locales. All of the
            intents, slot types, and slots used in the bot must have the same
            locale. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BuildBotLocaleResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: Updates the settings that a bot has for a specific locale.
      operationId: UpdateBotLocale
      parameters:
        - description: The unique identifier of the bot that contains the locale.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot that contains the locale to be updated. The
            version can only be the <code>DRAFT</code> version.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale to update. The string must
            match one of the supported locales. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The new description of the locale.
                maxLength: 200
                minLength: 0
                type: string
              nluIntentConfidenceThreshold:
                description: >-
                  The new confidence threshold where Amazon Lex inserts the
                  <code>AMAZON.FallbackIntent</code> and
                  <code>AMAZON.KendraSearchIntent</code> intents in the list of
                  possible intents for an utterance.
                format: double
                maximum: 1
                minimum: 0
                type: number
              voiceSettings:
                description: >-
                  Defines settings for using an Amazon Polly voice to
                  communicate with a user.
                properties:
                  voiceId:
                    allOf:
                      - $ref: '#/definitions/VoiceId'
                      - description: The identifier of the Amazon Polly voice to use.
                type: object
            required:
              - nluIntentConfidenceThreshold
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBotLocaleResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Get a list of intents that meet the specified criteria.
      operationId: ListIntents
      parameters:
        - description: The unique identifier of the bot that contains the intent.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot that contains the intent.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the intents to list.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  Provides the specification of a filter used to limit the
                  intents in the response to only those that match the filter
                  specification. You can only specify one filter and only one
                  string to filter on.
                items:
                  $ref: '#/definitions/IntentFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of intents to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListIntents</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of intents.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/IntentSortAttribute'
                      - description: The attribute to use to sort the list of intents.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can choose ascending
                          or descending.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIntentsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates an intent.</p> <p>To define the interaction between the user
        and your bot, you define one or more intents. For example, for a pizza
        ordering bot you would create an <code>OrderPizza</code> intent.</p>
        <p>When you create an intent, you must provide a name. You can
        optionally provide the following:</p> <ul> <li> <p>Sample utterances.
        For example, "I want to order a pizza" and "Can I order a pizza." You
        can't provide utterances for built-in intents.</p> </li> <li>
        <p>Information to be gathered. You specify slots for the information
        that you bot requests from the user. You can specify standard slot
        types, such as date and time, or custom slot types for your
        application.</p> </li> <li> <p>How the intent is fulfilled. You can
        provide a Lambda function or configure the intent to return the intent
        information to your client application. If you use a Lambda function,
        Amazon Lex invokes the function when all of the intent information is
        available.</p> </li> <li> <p>A confirmation prompt to send to the user
        to confirm an intent. For example, "Shall I order your pizza?"</p> </li>
        <li> <p>A conclusion statement to send to the user after the intent is
        fulfilled. For example, "I ordered your pizza."</p> </li> <li> <p>A
        follow-up prompt that asks the user for additional activity. For
        example, "Do you want a drink with your pizza?"</p> </li> </ul>
      operationId: CreateIntent
      parameters:
        - description: The identifier of the bot associated with this intent.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The identifier of the version of the bot associated with this
            intent.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale where this intent is used.
            All of the bots, slot types, and slots used by the intent must have
            the same locale. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: >-
                  A description of the intent. Use the description to help
                  identify the intent in lists.
                maxLength: 200
                minLength: 0
                type: string
              dialogCodeHook:
                description: >-
                  Settings that determine the Lambda function that Amazon Lex
                  uses for processing user responses.
                properties:
                  enabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Enables the dialog code hook so that it processes user
                          requests.
                type: object
              fulfillmentCodeHook:
                description: >-
                  Determines if a Lambda function should be invoked for a
                  specific intent.
                properties:
                  enabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Indicates whether a Lambda function should be invoked
                          to fulfill a specific intent.
                type: object
              inputContexts:
                description: >-
                  <p>A list of contexts that must be active for this intent to
                  be considered by Amazon Lex.</p> <p>When an intent has an
                  input context list, Amazon Lex only considers using the intent
                  in an interaction with the user when the specified contexts
                  are included in the active context list for the session. If
                  the contexts are not active, then Amazon Lex will not use the
                  intent.</p> <p>A context can be automatically activated using
                  the <code>outputContexts</code> property or it can be set at
                  runtime.</p> <p> For example, if there are two intents with
                  different input contexts that respond to the same utterances,
                  only the intent with the active context will respond.</p>
                  <p>An intent may have up to 5 input contexts. If an intent has
                  multiple input contexts, all of the contexts must be active to
                  consider the intent.</p>
                items:
                  $ref: '#/definitions/InputContext'
                maxItems: 5
                minItems: 0
                type: array
              intentClosingSetting:
                description: >-
                  Provides a statement the Amazon Lex conveys to the user when
                  the intent is successfully fulfilled.
                properties:
                  active:
                    allOf:
                      - $ref: '#/definitions/BoxedBoolean'
                      - description: >-
                          Specifies whether an intent's closing response is
                          used. When this field is false, the closing response
                          isn't sent to the user and no closing input from the
                          user is used. If the <code>active</code> field isn't
                          specified, the default is true.
                  closingResponse:
                    allOf:
                      - $ref: '#/definitions/ResponseSpecification'
                      - description: >-
                          The response that Amazon Lex sends to the user when
                          the intent is complete.
                type: object
              intentConfirmationSetting:
                description: >-
                  Provides a prompt for making sure that the user is ready for
                  the intent to be fulfilled.
                properties:
                  active:
                    allOf:
                      - $ref: '#/definitions/BoxedBoolean'
                      - description: >-
                          Specifies whether the intent's confirmation is sent to
                          the user. When this field is false, confirmation and
                          declination responses aren't sent and processing
                          continues as if the responses aren't present. If the
                          <code>active</code> field isn't specified, the default
                          is true.
                  declinationResponse:
                    allOf:
                      - $ref: '#/definitions/ResponseSpecification'
                      - description: >-
                          When the user answers "no" to the question defined in
                          <code>promptSpecification</code>, Amazon Lex responds
                          with this response to acknowledge that the intent was
                          canceled. 
                  promptSpecification:
                    allOf:
                      - $ref: '#/definitions/PromptSpecification'
                      - description: >-
                          <p>Prompts the user to confirm the intent. This
                          question should have a yes or no answer.</p> <p>Amazon
                          Lex uses this prompt to ensure that the user
                          acknowledges that the intent is ready for fulfillment.
                          For example, with the <code>OrderPizza</code> intent,
                          you might want to confirm that the order is correct
                          before placing it. For other intents, such as intents
                          that simply respond to user questions, you might not
                          need to ask the user for confirmation before providing
                          the information. </p>
                type: object
              intentName:
                description: >-
                  The name of the intent. Intent names must be unique in the
                  locale that contains the intent and cannot match the name of
                  any built-in intent.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              kendraConfiguration:
                description: >-
                  Provides configuration information for the
                  AMAZON.KendraSearchIntent intent. When you use this intent,
                  Amazon Lex searches the specified Amazon Kendra index and
                  returns documents from the index that match the user's
                  utterance.
                properties:
                  kendraIndex:
                    allOf:
                      - $ref: '#/definitions/KendraIndexArn'
                      - description: >-
                          The Amazon Resource Name (ARN) of the Amazon Kendra
                          index that you want the AMAZON.KendraSearchIntent
                          intent to search. The index must be in the same
                          account and Region as the Amazon Lex bot.
                  queryFilterString:
                    allOf:
                      - $ref: '#/definitions/QueryFilterString'
                      - description: >-
                          A query filter that Amazon Lex sends to Amazon Kendra
                          to filter the response from a query. The filter is in
                          the format defined by Amazon Kendra. For more
                          information, see <a
                          href="https://docs.aws.amazon.com/kendra/latest/dg/filtering.html">Filtering
                          queries</a>.
                  queryFilterStringEnabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Determines whether the AMAZON.KendraSearchIntent
                          intent uses a custom query string to query the Amazon
                          Kendra index.
                type: object
              outputContexts:
                description: >-
                  <p>A lists of contexts that the intent activates when it is
                  fulfilled.</p> <p>You can use an output context to indicate
                  the intents that Amazon Lex should consider for the next turn
                  of the conversation with a customer. </p> <p>When you use the
                  <code>outputContextsList</code> property, all of the contexts
                  specified in the list are activated when the intent is
                  fulfilled. You can set up to 10 output contexts. You can also
                  set the number of conversation turns that the context should
                  be active, or the length of time that the context should be
                  active.</p>
                items:
                  $ref: '#/definitions/OutputContext'
                maxItems: 10
                minItems: 0
                type: array
              parentIntentSignature:
                description: >-
                  A unique identifier for the built-in intent to base this
                  intent on.
                type: string
              sampleUtterances:
                description: >-
                  <p>An array of strings that a user might say to signal the
                  intent. For example, "I want a pizza", or "I want a
                  {PizzaSize} pizza". </p> <p>In an utterance, slot names are
                  enclosed in curly braces ("{", "}") to indicate where they
                  should be displayed in the utterance shown to the user.. </p>
                items:
                  $ref: '#/definitions/SampleUtterance'
                type: array
            required:
              - intentName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIntentResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/':
    delete:
      description: >-
        <p>Removes the specified intent.</p> <p>Deleting an intent also deletes
        the slots associated with the intent.</p>
      operationId: DeleteIntent
      parameters:
        - description: The unique identifier of the intent to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the intent.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the intent.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale where the bot will be
            deleted. The string must match one of the supported locales. For
            more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Returns metadata about an intent.
      operationId: DescribeIntent
      parameters:
        - description: The identifier of the intent to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the intent.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the intent.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the intent to describe.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIntentResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Updates the settings for an intent.
      operationId: UpdateIntent
      parameters:
        - description: The unique identifier of the intent to update.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot that contains the intent.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot that contains the intent. Must be
            <code>DRAFT</code>.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale where this intent is used.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The new description of the intent.
                maxLength: 200
                minLength: 0
                type: string
              dialogCodeHook:
                description: >-
                  Settings that determine the Lambda function that Amazon Lex
                  uses for processing user responses.
                properties:
                  enabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Enables the dialog code hook so that it processes user
                          requests.
                type: object
              fulfillmentCodeHook:
                description: >-
                  Determines if a Lambda function should be invoked for a
                  specific intent.
                properties:
                  enabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Indicates whether a Lambda function should be invoked
                          to fulfill a specific intent.
                type: object
              inputContexts:
                description: >-
                  A new list of contexts that must be active in order for Amazon
                  Lex to consider the intent.
                items:
                  $ref: '#/definitions/InputContext'
                maxItems: 5
                minItems: 0
                type: array
              intentClosingSetting:
                description: >-
                  Provides a statement the Amazon Lex conveys to the user when
                  the intent is successfully fulfilled.
                properties:
                  active:
                    allOf:
                      - $ref: '#/definitions/BoxedBoolean'
                      - description: >-
                          Specifies whether an intent's closing response is
                          used. When this field is false, the closing response
                          isn't sent to the user and no closing input from the
                          user is used. If the <code>active</code> field isn't
                          specified, the default is true.
                  closingResponse:
                    allOf:
                      - $ref: '#/definitions/ResponseSpecification'
                      - description: >-
                          The response that Amazon Lex sends to the user when
                          the intent is complete.
                type: object
              intentConfirmationSetting:
                description: >-
                  Provides a prompt for making sure that the user is ready for
                  the intent to be fulfilled.
                properties:
                  active:
                    allOf:
                      - $ref: '#/definitions/BoxedBoolean'
                      - description: >-
                          Specifies whether the intent's confirmation is sent to
                          the user. When this field is false, confirmation and
                          declination responses aren't sent and processing
                          continues as if the responses aren't present. If the
                          <code>active</code> field isn't specified, the default
                          is true.
                  declinationResponse:
                    allOf:
                      - $ref: '#/definitions/ResponseSpecification'
                      - description: >-
                          When the user answers "no" to the question defined in
                          <code>promptSpecification</code>, Amazon Lex responds
                          with this response to acknowledge that the intent was
                          canceled. 
                  promptSpecification:
                    allOf:
                      - $ref: '#/definitions/PromptSpecification'
                      - description: >-
                          <p>Prompts the user to confirm the intent. This
                          question should have a yes or no answer.</p> <p>Amazon
                          Lex uses this prompt to ensure that the user
                          acknowledges that the intent is ready for fulfillment.
                          For example, with the <code>OrderPizza</code> intent,
                          you might want to confirm that the order is correct
                          before placing it. For other intents, such as intents
                          that simply respond to user questions, you might not
                          need to ask the user for confirmation before providing
                          the information. </p>
                type: object
              intentName:
                description: The new name for the intent.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              kendraConfiguration:
                description: >-
                  Provides configuration information for the
                  AMAZON.KendraSearchIntent intent. When you use this intent,
                  Amazon Lex searches the specified Amazon Kendra index and
                  returns documents from the index that match the user's
                  utterance.
                properties:
                  kendraIndex:
                    allOf:
                      - $ref: '#/definitions/KendraIndexArn'
                      - description: >-
                          The Amazon Resource Name (ARN) of the Amazon Kendra
                          index that you want the AMAZON.KendraSearchIntent
                          intent to search. The index must be in the same
                          account and Region as the Amazon Lex bot.
                  queryFilterString:
                    allOf:
                      - $ref: '#/definitions/QueryFilterString'
                      - description: >-
                          A query filter that Amazon Lex sends to Amazon Kendra
                          to filter the response from a query. The filter is in
                          the format defined by Amazon Kendra. For more
                          information, see <a
                          href="https://docs.aws.amazon.com/kendra/latest/dg/filtering.html">Filtering
                          queries</a>.
                  queryFilterStringEnabled:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Determines whether the AMAZON.KendraSearchIntent
                          intent uses a custom query string to query the Amazon
                          Kendra index.
                type: object
              outputContexts:
                description: >-
                  A new list of contexts that Amazon Lex activates when the
                  intent is fulfilled.
                items:
                  $ref: '#/definitions/OutputContext'
                maxItems: 10
                minItems: 0
                type: array
              parentIntentSignature:
                description: >-
                  The signature of the new built-in intent to use as the parent
                  of this intent.
                type: string
              sampleUtterances:
                description: New utterances used to invoke the intent.
                items:
                  $ref: '#/definitions/SampleUtterance'
                type: array
              slotPriorities:
                description: >-
                  A new list of slots and their priorities that are contained by
                  the intent.
                items:
                  $ref: '#/definitions/SlotPriority'
                type: array
            required:
              - intentName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIntentResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of slots that match the specified criteria.
      operationId: ListSlots
      parameters:
        - description: The identifier of the bot that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot that contains the slot.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the slots to list. The
            string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: The unique identifier of the intent that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  Provides the specification of a filter used to limit the slots
                  in the response to only those that match the filter
                  specification. You can only specify one filter and only one
                  string to filter on.
                items:
                  $ref: '#/definitions/SlotFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of slots to return in each page of results.
                  If there are fewer results than the max page size, only the
                  actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListSlots</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of bots.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/SlotSortAttribute'
                      - description: The attribute to use to sort the list.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can choose ascending
                          or descending.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSlotsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        Creates a slot in an intent. A slot is a variable needed to fulfill an
        intent. For example, an <code>OrderPizza</code> intent might need slots
        for size, crust, and number of pizzas. For each slot, you define one or
        more utterances that Amazon Lex uses to elicit a response from the
        user. 
      operationId: CreateSlot
      parameters:
        - description: The identifier of the bot associated with the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the slot.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that the slot will be used
            in. The string must match one of the supported locales. All of the
            bots, intents, slot types used by the slot must have the same
            locale. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: The identifier of the intent that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: >-
                  A description of the slot. Use this to help identify the slot
                  in lists.
                maxLength: 200
                minLength: 0
                type: string
              multipleValuesSetting:
                description: Indicates whether a slot can return multiple values.
                properties:
                  allowMultipleValues:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          <p>Indicates whether a slot can return multiple
                          values. When <code>true</code>, the slot may return
                          more than one value in a response. When
                          <code>false</code>, the slot returns only a single
                          value.</p> <p>Multi-value slots are only available in
                          the en-US locale. If you set this value to
                          <code>true</code> in any other locale, Amazon Lex
                          throws a <code>ValidationException</code>.</p> <p>If
                          the <code>allowMutlipleValues</code> is not set, the
                          default value is <code>false</code>.</p>
                type: object
              obfuscationSetting:
                description: >-
                  Determines whether Amazon Lex obscures slot values in
                  conversation logs. 
                properties:
                  obfuscationSettingType:
                    allOf:
                      - $ref: '#/definitions/ObfuscationSettingType'
                      - description: >-
                          Value that determines whether Amazon Lex obscures slot
                          values in conversation logs. The default is to obscure
                          the values.
                type: object
              slotName:
                description: >-
                  The name of the slot. Slot names must be unique within the bot
                  that contains the slot.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              slotTypeId:
                description: >-
                  The unique identifier for the slot type associated with this
                  slot. The slot type determines the values that can be entered
                  into the slot.
                maxLength: 25
                minLength: 1
                pattern: '^((AMAZON\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'
                type: string
              valueElicitationSetting:
                description: Settings that you can use for eliciting a slot value.
                properties:
                  defaultValueSpecification:
                    allOf:
                      - $ref: '#/definitions/SlotDefaultValueSpecification'
                      - description: >-
                          A list of default values for a slot. Default values
                          are used when Amazon Lex hasn't determined a value for
                          a slot. You can specify default values from context
                          variables, sesion attributes, and defined values.
                  promptSpecification:
                    allOf:
                      - $ref: '#/definitions/PromptSpecification'
                      - description: >-
                          The prompt that Amazon Lex uses to elicit the slot
                          value from the user.
                  sampleUtterances:
                    allOf:
                      - $ref: '#/definitions/SampleUtterancesList'
                      - description: >-
                          If you know a specific pattern that users might
                          respond to an Amazon Lex request for a slot value, you
                          can provide those utterances to improve accuracy. This
                          is optional. In most cases, Amazon Lex is capable of
                          understanding user utterances.
                  slotConstraint:
                    allOf:
                      - $ref: '#/definitions/SlotConstraint'
                      - description: Specifies whether the slot is required or optional.
                  waitAndContinueSpecification:
                    $ref: '#/definitions/WaitAndContinueSpecification'
                type: object
            required:
              - slotName
              - slotTypeId
              - valueElicitationSetting
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSlotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/{slotId}/':
    delete:
      description: Deletes the specified slot from an intent.
      operationId: DeleteSlot
      parameters:
        - description: 'The identifier of the slot to delete. '
          in: path
          maxLength: 10
          minLength: 10
          name: slotId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the slot to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the slot to delete.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that the slot will be
            deleted from. The string must match one of the supported locales.
            For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: The identifier of the intent associated with the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Gets metadata information about a slot.
      operationId: DescribeSlot
      parameters:
        - description: The unique identifier for the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: slotId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the slot.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the slot to describe.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: The identifier of the intent that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSlotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Updates the settings for a slot.
      operationId: UpdateSlot
      parameters:
        - description: The unique identifier for the slot to update.
          in: path
          maxLength: 10
          minLength: 10
          name: slotId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The unique identifier of the bot that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot that contains the slot. Must always be
            <code>DRAFT</code>.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that contains the slot.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: The identifier of the intent that contains the slot.
          in: path
          maxLength: 10
          minLength: 10
          name: intentId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The new description for the slot.
                maxLength: 200
                minLength: 0
                type: string
              multipleValuesSetting:
                description: Indicates whether a slot can return multiple values.
                properties:
                  allowMultipleValues:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          <p>Indicates whether a slot can return multiple
                          values. When <code>true</code>, the slot may return
                          more than one value in a response. When
                          <code>false</code>, the slot returns only a single
                          value.</p> <p>Multi-value slots are only available in
                          the en-US locale. If you set this value to
                          <code>true</code> in any other locale, Amazon Lex
                          throws a <code>ValidationException</code>.</p> <p>If
                          the <code>allowMutlipleValues</code> is not set, the
                          default value is <code>false</code>.</p>
                type: object
              obfuscationSetting:
                description: >-
                  Determines whether Amazon Lex obscures slot values in
                  conversation logs. 
                properties:
                  obfuscationSettingType:
                    allOf:
                      - $ref: '#/definitions/ObfuscationSettingType'
                      - description: >-
                          Value that determines whether Amazon Lex obscures slot
                          values in conversation logs. The default is to obscure
                          the values.
                type: object
              slotName:
                description: The new name for the slot.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              slotTypeId:
                description: >-
                  The unique identifier of the new slot type to associate with
                  this slot. 
                maxLength: 25
                minLength: 1
                pattern: '^((AMAZON\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'
                type: string
              valueElicitationSetting:
                description: Settings that you can use for eliciting a slot value.
                properties:
                  defaultValueSpecification:
                    allOf:
                      - $ref: '#/definitions/SlotDefaultValueSpecification'
                      - description: >-
                          A list of default values for a slot. Default values
                          are used when Amazon Lex hasn't determined a value for
                          a slot. You can specify default values from context
                          variables, sesion attributes, and defined values.
                  promptSpecification:
                    allOf:
                      - $ref: '#/definitions/PromptSpecification'
                      - description: >-
                          The prompt that Amazon Lex uses to elicit the slot
                          value from the user.
                  sampleUtterances:
                    allOf:
                      - $ref: '#/definitions/SampleUtterancesList'
                      - description: >-
                          If you know a specific pattern that users might
                          respond to an Amazon Lex request for a slot value, you
                          can provide those utterances to improve accuracy. This
                          is optional. In most cases, Amazon Lex is capable of
                          understanding user utterances.
                  slotConstraint:
                    allOf:
                      - $ref: '#/definitions/SlotConstraint'
                      - description: Specifies whether the slot is required or optional.
                  waitAndContinueSpecification:
                    $ref: '#/definitions/WaitAndContinueSpecification'
                type: object
            required:
              - slotName
              - slotTypeId
              - valueElicitationSetting
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSlotResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of slot types that match the specified criteria.
      operationId: ListSlotTypes
      parameters:
        - description: The unique identifier of the bot that contains the slot types.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot that contains the slot type.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the slot types to list.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filters:
                description: >-
                  Provides the specification of a filter used to limit the slot
                  types in the response to only those that match the filter
                  specification. You can only specify one filter and only one
                  string to filter on.
                items:
                  $ref: '#/definitions/SlotTypeFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of slot types to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListSlotTypes</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of slot types.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/SlotTypeSortAttribute'
                      - description: The attribute to use to sort the list of slot types.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can say ascending or
                          descending.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSlotTypesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a custom slot type</p> <p> To create a custom slot type,
        specify a name for the slot type and a set of enumeration values, the
        values that a slot of this type can assume. </p>
      operationId: CreateSlotType
      parameters:
        - description: The identifier of the bot associated with this slot type.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot version associated with this slot type.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that the slot type will be
            used in. The string must match one of the supported locales. All of
            the bots, intents, and slots used by the slot type must have the
            same locale. For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: >-
                  A description of the slot type. Use the description to help
                  identify the slot type in lists.
                maxLength: 200
                minLength: 0
                type: string
              parentSlotTypeSignature:
                description: >-
                  <p>The built-in slot type used as a parent of this slot type.
                  When you define a parent slot type, the new slot type has the
                  configuration of the parent slot type.</p> <p>Only
                  <code>AMAZON.AlphaNumeric</code> is supported.</p>
                type: string
              slotTypeName:
                description: >-
                  The name for the slot. A slot type name must be unique within
                  the account.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              slotTypeValues:
                description: >-
                  A list of <code>SlotTypeValue</code> objects that defines the
                  values that the slot type can take. Each value can have a list
                  of synonyms, additional values that help train the machine
                  learning model about the values that it resolves for a slot.
                items:
                  $ref: '#/definitions/SlotTypeValue'
                maxItems: 10000
                minItems: 1
                type: array
              valueSelectionSetting:
                description: Contains settings used by Amazon Lex to select a slot value.
                properties:
                  regexFilter:
                    allOf:
                      - $ref: '#/definitions/SlotValueRegexFilter'
                      - description: >-
                          A regular expression used to validate the value of a
                          slot.
                  resolutionStrategy:
                    allOf:
                      - $ref: '#/definitions/SlotValueResolutionStrategy'
                      - description: >-
                          <p>Determines the slot resolution strategy that Amazon
                          Lex uses to return slot type values. The field can be
                          set to one of the following values:</p> <ul> <li>
                          <p>OriginalValue - Returns the value entered by the
                          user, if the user value is similar to the slot
                          value.</p> </li> <li> <p>TopResolution - If there is a
                          resolution list for the slot, return the first value
                          in the resolution list as the slot type value. If
                          there is no resolution list, null is returned.</p>
                          </li> </ul> <p>If you don't specify the
                          valueSelectionStrategy, the default is OriginalValue.
                          </p>
                type: object
            required:
              - slotTypeName
              - valueSelectionSetting
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSlotTypeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/{slotTypeId}/':
    delete:
      description: >-
        <p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the
        slot type, Amazon Lex throws a <code>ResourceInUseException</code>
        exception. To avoid the exception, set the
        <code>skipResourceInUseCheck</code> parameter to <code>true</code>.</p>
      operationId: DeleteSlotType
      parameters:
        - description: The identifier of the slot type to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: slotTypeId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the slot type.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the slot type.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that the slot type will be
            deleted from. The string must match one of the supported locales.
            For more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: >-
            By default, the <code>DeleteSlotType</code> operations throws a
            <code>ResourceInUseException</code> exception if you try to delete a
            slot type used by a slot. Set the
            <code>skipResourceInUseCheck</code> parameter to <code>true</code>
            to skip this check and remove the slot type even if a slot uses it.
          in: query
          name: skipResourceInUseCheck
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Gets metadata information about a slot type.
      operationId: DescribeSlotType
      parameters:
        - description: The identifier of the slot type.
          in: path
          maxLength: 10
          minLength: 10
          name: slotTypeId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot associated with the slot type.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The version of the bot associated with the slot type.
          in: path
          maxLength: 5
          minLength: 1
          name: botVersion
          pattern: '^(DRAFT|[0-9]+)$'
          required: true
          type: string
        - description: >-
            The identifier of the language and locale of the slot type to
            describe. The string must match one of the supported locales. For
            more information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSlotTypeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Updates the configuration of an existing slot type.
      operationId: UpdateSlotType
      parameters:
        - description: The unique identifier of the slot type to update.
          in: path
          maxLength: 10
          minLength: 10
          name: slotTypeId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: The identifier of the bot that contains the slot type.
          in: path
          maxLength: 10
          minLength: 10
          name: botId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - description: >-
            The version of the bot that contains the slot type. Must be
            <code>DRAFT</code>.
          in: path
          maxLength: 5
          minLength: 5
          name: botVersion
          pattern: ^DRAFT$
          required: true
          type: string
        - description: >-
            The identifier of the language and locale that contains the slot
            type. The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              description:
                description: The new description of the slot type.
                maxLength: 200
                minLength: 0
                type: string
              parentSlotTypeSignature:
                description: >-
                  The new built-in slot type that should be used as the parent
                  of this slot type.
                type: string
              slotTypeName:
                description: The new name of the slot type.
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
              slotTypeValues:
                description: >-
                  A new list of values and their optional synonyms that define
                  the values that the slot type can take.
                items:
                  $ref: '#/definitions/SlotTypeValue'
                maxItems: 10000
                minItems: 1
                type: array
              valueSelectionSetting:
                description: Contains settings used by Amazon Lex to select a slot value.
                properties:
                  regexFilter:
                    allOf:
                      - $ref: '#/definitions/SlotValueRegexFilter'
                      - description: >-
                          A regular expression used to validate the value of a
                          slot.
                  resolutionStrategy:
                    allOf:
                      - $ref: '#/definitions/SlotValueResolutionStrategy'
                      - description: >-
                          <p>Determines the slot resolution strategy that Amazon
                          Lex uses to return slot type values. The field can be
                          set to one of the following values:</p> <ul> <li>
                          <p>OriginalValue - Returns the value entered by the
                          user, if the user value is similar to the slot
                          value.</p> </li> <li> <p>TopResolution - If there is a
                          resolution list for the slot, return the first value
                          in the resolution list as the slot type value. If
                          there is no resolution list, null is returned.</p>
                          </li> </ul> <p>If you don't specify the
                          valueSelectionStrategy, the default is OriginalValue.
                          </p>
                type: object
            required:
              - slotTypeName
              - valueSelectionSetting
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSlotTypeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/builtins/locales/{localeId}/intents/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Gets a list of built-in intents provided by Amazon Lex that you can
        use in your bot. </p> <p>To use a built-in intent as a the base for your
        own intent, include the built-in intent signature in the
        <code>parentIntentSignature</code> parameter when you call the
        <code>CreateIntent</code> operation. For more information, see
        <a>CreateIntent</a>.</p>
      operationId: ListBuiltInIntents
      parameters:
        - description: >-
            The identifier of the language and locale of the intents to list.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: >-
                  The maximum number of built-in intents to return in each page
                  of results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 20
                minimum: 20
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListBuiltInIntents</code>
                  operation contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Specifies attributes for sorting a list of built-in intents.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/BuiltInIntentSortAttribute'
                      - description: >-
                          The attribute to use to sort the list of built-in
                          intents.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can specify ascending
                          or descending order.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBuiltInIntentsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/builtins/locales/{localeId}/slottypes/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of built-in slot types that meet the specified criteria.
      operationId: ListBuiltInSlotTypes
      parameters:
        - description: >-
            The identifier of the language and locale of the slot types to list.
            The string must match one of the supported locales. For more
            information, see <a
            href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported
            languages</a>.
          in: path
          name: localeId
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              maxResults:
                description: >-
                  The maximum number of built-in slot types to return in each
                  page of results. If there are fewer results than the max page
                  size, only the actual number of results are returned.
                maximum: 20
                minimum: 20
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListBuiltInSlotTypes</code>
                  operation contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: >-
                  Specifies attributes for sorting a list of built-in slot
                  types.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/BuiltInSlotTypeSortAttribute'
                      - description: >-
                          The attribute to use to sort the list of built-in
                          intents.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: >-
                          The order to sort the list. You can choose ascending
                          or descending.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBuiltInSlotTypesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /createuploadurl/:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        Gets a pre-signed S3 write URL that you use to upload the zip archive
        when importing a bot or a bot locale. 
      operationId: CreateUploadUrl
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUploadUrlResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /exports/:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the exports for a bot or bot locale. Exports are kept in the list
        for 7 days.
      operationId: ListExports
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botId:
                description: The unique identifier that Amazon Lex assigned to the bot.
                maxLength: 10
                minLength: 10
                pattern: '^[0-9a-zA-Z]+$'
                type: string
              botVersion:
                description: 'The version of the bot to list exports for. '
                maxLength: 5
                minLength: 1
                pattern: '^(DRAFT|[0-9]+)$'
                type: string
              filters:
                description: >-
                  Provides the specification of a filter used to limit the
                  exports in the response to only those that match the filter
                  specification. You can only specify one filter and one string
                  to filter on.
                items:
                  $ref: '#/definitions/ExportFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of exports to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListExports</code> operation
                  contans more results that specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Provides information about sorting a list of exports.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/ExportSortAttribute'
                      - description: The export field to use for sorting.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: The order to sort the list.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListExportsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        <p>Creates a zip archive containing the contents of a bot or a bot
        locale. The archive contains a directory structure that contains JSON
        files that define the bot.</p> <p>You can create an archive that
        contains the complete definition of a bot, or you can specify that the
        archive contain only the definition of a single bot locale.</p> <p>For
        more information about exporting bots, and about the structure of the
        export archive, see <a
        href="https://docs.aws.amazon.com/lexv2/latest/dg/importing-exporting.html">
        Importing and exporting bots </a> </p>
      operationId: CreateExport
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              fileFormat:
                description: The file format of the bot or bot locale definition files.
                enum:
                  - LexJson
                type: string
              filePassword:
                description: >-
                  An password to use to encrypt the exported archive. Using a
                  password is optional, but you should encrypt the archive to
                  protect the data in transit between Amazon Lex and your local
                  computer.
                format: password
                maxLength: 1024
                minLength: 1
                type: string
              resourceSpecification:
                description: >-
                  Provides information about the bot or bot locale that you want
                  to export. You can specify the
                  <code>botExportSpecification</code> or the
                  <code>botLocaleExportSpecification</code>, but not both.
                properties:
                  botExportSpecification:
                    allOf:
                      - $ref: '#/definitions/BotExportSpecification'
                      - description: Parameters for exporting a bot.
                  botLocaleExportSpecification:
                    allOf:
                      - $ref: '#/definitions/BotLocaleExportSpecification'
                      - description: Parameters for exporting a bot locale.
                type: object
            required:
              - resourceSpecification
              - fileFormat
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateExportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/exports/{exportId}/':
    delete:
      description: >-
        Removes a previous export and the associated files stored in an S3
        bucket.
      operationId: DeleteExport
      parameters:
        - description: The unique identifier of the export to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: exportId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteExportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Gets information about a specific export.
      operationId: DescribeExport
      parameters:
        - description: The unique identifier of the export to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: exportId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Updates the password used to protect an export zip archive.</p>
        <p>The password is not required. If you don't supply a password, Amazon
        Lex generates a zip file that is not protected by a password. This is
        the archive that is available at the pre-signed S3 URL provided by the
        operation.</p>
      operationId: UpdateExport
      parameters:
        - description: The unique identifier Amazon Lex assigned to the export.
          in: path
          maxLength: 10
          minLength: 10
          name: exportId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              filePassword:
                description: The new password to use to encrypt the export zip archive.
                format: password
                maxLength: 1024
                minLength: 1
                type: string
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateExportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /imports/:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists the imports for a bot or bot locale. Imports are kept in the list
        for 7 days.
      operationId: ListImports
      parameters:
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              botId:
                description: The unique identifier that Amazon Lex assigned to the bot.
                maxLength: 10
                minLength: 10
                pattern: '^[0-9a-zA-Z]+$'
                type: string
              botVersion:
                description: The version of the bot to list imports for.
                maxLength: 5
                minLength: 5
                pattern: ^DRAFT$
                type: string
              filters:
                description: >-
                  Provides the specification of a filter used to limit the bots
                  in the response to only those that match the filter
                  specification. You can only specify one filter and one string
                  to filter on.
                items:
                  $ref: '#/definitions/ImportFilter'
                maxItems: 1
                minItems: 1
                type: array
              maxResults:
                description: >-
                  The maximum number of imports to return in each page of
                  results. If there are fewer results than the max page size,
                  only the actual number of results are returned.
                maximum: 1000
                minimum: 1
                type: integer
              nextToken:
                description: >-
                  If the response from the <code>ListImports</code> operation
                  contains more results than specified in the
                  <code>maxResults</code> parameter, a token is returned in the
                  response. Use that token in the <code>nextToken</code>
                  parameter to return the next page of results.
                type: string
              sortBy:
                description: Provides information for sorting a list of imports.
                properties:
                  attribute:
                    allOf:
                      - $ref: '#/definitions/ImportSortAttribute'
                      - description: The export field to use for sorting.
                  order:
                    allOf:
                      - $ref: '#/definitions/SortOrder'
                      - description: The order to sort the list.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImportsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    put:
      consumes:
        - application/json
      description: >-
        Starts importing a bot or bot locale from a zip archive that you
        uploaded to an S3 bucket.
      operationId: StartImport
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              filePassword:
                description: >-
                  The password used to encrypt the zip archive that contains the
                  bot or bot locale definition. You should always encrypt the
                  zip archive to protect it during transit between your site and
                  Amazon Lex.
                format: password
                maxLength: 1024
                minLength: 1
                type: string
              importId:
                description: >-
                  The unique identifier for the import. It is included in the
                  response from the operation.
                maxLength: 10
                minLength: 10
                pattern: '^[0-9a-zA-Z]+$'
                type: string
              mergeStrategy:
                description: >-
                  The strategy to use when there is a name conflict between the
                  imported resource and an existing resource. When the merge
                  strategy is <code>FailOnConflict</code> existing resources are
                  not overwritten and the import fails.
                enum:
                  - Overwrite
                  - FailOnConflict
                type: string
              resourceSpecification:
                description: >-
                  Provides information about the bot or bot locale that you want
                  to import. You can sepcifiy the
                  <code>botImportSpecification</code> or the
                  <code>botLocaleImportSpecification</code>, but not both.
                properties:
                  botImportSpecification:
                    allOf:
                      - $ref: '#/definitions/BotImportSpecification'
                      - description: Parameters for importing a bot.
                  botLocaleImportSpecification:
                    allOf:
                      - $ref: '#/definitions/BotLocaleImportSpecification'
                      - description: Parameters for importing a bot locale.
                type: object
            required:
              - importId
              - resourceSpecification
              - mergeStrategy
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/StartImportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  '/imports/{importId}/':
    delete:
      description: >-
        Removes a previous import and the associated file stored in an S3
        bucket.
      operationId: DeleteImport
      parameters:
        - description: The unique identifier of the import to delete.
          in: path
          maxLength: 10
          minLength: 10
          name: importId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    get:
      description: Gets information about a specific import.
      operationId: DescribeImport
      parameters:
        - description: The unique identifier of the import to describe.
          in: path
          maxLength: 10
          minLength: 10
          name: importId
          pattern: '^[0-9a-zA-Z]+$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeImportResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/policy/{resourceArn}/':
    delete:
      description: >-
        Removes an existing policy from a bot or bot alias. If the resource
        doesn't have a policy attached, Amazon Lex returns an exception.
      operationId: DeleteResourcePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that has the
            resource policy attached.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - description: >-
            <p>The identifier of the revision to edit. If this ID doesn't match
            the current revision number, Amazon Lex returns an exception</p>
            <p>If you don't specify a revision ID, Amazon Lex will delete the
            current policy.</p>
          in: query
          maxLength: 5
          minLength: 1
          name: expectedRevisionId
          pattern: '^[0-9]+$'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourcePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Gets the resource policy and policy revision for a bot or bot alias.
      operationId: DescribeResourcePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that the
            resource policy is attached to.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeResourcePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new resource policy with the specified policy statements.
      operationId: CreateResourcePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that the
            resource policy is attached to.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              policy:
                description: >-
                  <p>A resource policy to add to the resource. The policy is a
                  JSON structure that contains one or more statements that
                  define the policy. The policy must follow the IAM syntax. For
                  more information about the contents of a JSON policy document,
                  see <a
                  href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">
                  IAM JSON policy reference </a>. </p> <p>If the policy isn't
                  valid, Amazon Lex returns a validation exception.</p>
                minLength: 2
                type: string
            required:
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourcePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    put:
      consumes:
        - application/json
      description: >-
        Replaces the existing resource policy for a bot or bot alias with a new
        one. If the policy doesn't exist, Amazon Lex returns an exception.
      operationId: UpdateResourcePolicy
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that the
            resource policy is attached to.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - description: >-
            <p>The identifier of the revision of the policy to update. If this
            revision ID doesn't match the current revision ID, Amazon Lex throws
            an exception.</p> <p>If you don't specify a revision, Amazon Lex
            overwrites the contents of the policy with the new values.</p>
          in: query
          maxLength: 5
          minLength: 1
          name: expectedRevisionId
          pattern: '^[0-9]+$'
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              policy:
                description: >-
                  <p>A resource policy to add to the resource. The policy is a
                  JSON structure that contains one or more statements that
                  define the policy. The policy must follow the IAM syntax. For
                  more information about the contents of a JSON policy document,
                  see <a
                  href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">
                  IAM JSON policy reference </a>. </p> <p>If the policy isn't
                  valid, Amazon Lex returns a validation exception.</p>
                minLength: 2
                type: string
            required:
              - policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResourcePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '482':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/policy/{resourceArn}/statements/':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds a new resource policy statement to a bot or bot alias. If a
        resource policy exists, the statement is added to the current resource
        policy. If a policy doesn't exist, a new policy is created.</p> <p>You
        can't create a resource policy statement that allows cross-account
        access.</p>
      operationId: CreateResourcePolicyStatement
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that the
            resource policy is attached to.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - description: >-
            <p>The identifier of the revision of the policy to edit. If this
            revision ID doesn't match the current revision ID, Amazon Lex throws
            an exception.</p> <p>If you don't specify a revision, Amazon Lex
            overwrites the contents of the policy with the new values.</p>
          in: query
          maxLength: 5
          minLength: 1
          name: expectedRevisionId
          pattern: '^[0-9]+$'
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                description: >-
                  The Amazon Lex action that this policy either allows or
                  denies. The action must apply to the resource type of the
                  specified ARN. For more information, see <a
                  href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html">
                  Actions, resources, and condition keys for Amazon Lex V2</a>.
                items:
                  $ref: '#/definitions/Operation'
                type: array
              condition:
                additionalProperties:
                  $ref: '#/definitions/ConditionKeyValueMap'
                description: >-
                  <p>Specifies a condition when the policy is in effect. If the
                  principal of the policy is a service principal, you must
                  provide two condition blocks, one with a SourceAccount global
                  condition key and one with a SourceArn global condition
                  key.</p> <p>For more information, see <a
                  href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html">IAM
                  JSON policy elements: Condition </a>.</p>
                maxProperties: 10
                minProperties: 0
                type: object
              effect:
                description: >-
                  Determines whether the statement allows or denies access to
                  the resource.
                enum:
                  - Allow
                  - Deny
                type: string
              principal:
                description: >-
                  An IAM principal, such as an IAM users, IAM roles, or AWS
                  services that is allowed or denied access to a resource. For
                  more information, see <a
                  href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">AWS
                  JSON policy elements: Principal</a>.
                items:
                  $ref: '#/definitions/Principal'
                type: array
              statementId:
                description: >-
                  The name of the statement. The ID is the same as the
                  <code>Sid</code> IAM property. The statement name must be
                  unique within the policy. For more information, see <a
                  href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html">IAM
                  JSON policy elements: Sid</a>. 
                maxLength: 100
                minLength: 1
                pattern: '^([0-9a-zA-Z][_-]?)+$'
                type: string
            required:
              - statementId
              - effect
              - principal
              - action
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourcePolicyStatementResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/policy/{resourceArn}/statements/{statementId}/':
    delete:
      description: >-
        Deletes a policy statement from a resource policy. If you delete the
        last statement from a policy, the policy is deleted. If you specify a
        statement ID that doesn't exist in the policy, or if the bot or bot
        alias doesn't have a policy attached, Amazon Lex returns an exception.
      operationId: DeleteResourcePolicyStatement
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot or bot alias that the
            resource policy is attached to.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceArn
          required: true
          type: string
        - description: The name of the statement (SID) to delete from the policy.
          in: path
          maxLength: 100
          minLength: 1
          name: statementId
          pattern: '^([0-9a-zA-Z][_-]?)+$'
          required: true
          type: string
        - description: >-
            <p>The identifier of the revision of the policy to delete the
            statement from. If this revision ID doesn't match the current
            revision ID, Amazon Lex throws an exception.</p> <p>If you don't
            specify a revision, Amazon Lex removes the current contents of the
            statement. </p>
          in: query
          maxLength: 5
          minLength: 1
          name: expectedRevisionId
          pattern: '^[0-9]+$'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourcePolicyStatementResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{resourceARN}':
    get:
      description: >-
        Gets a list of tags associated with a resource. Only bots, bot aliases,
        and bot channels can have tags associated with them.
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource to get a list of tags
            for.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceARN
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Adds the specified tags to the specified resource. If a tag key already
        exists, the existing value is replaced with the new value.
      operationId: TagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
            to tag.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceARN
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of tag keys to add to the resource. If a tag key
                  already exists, the existing value is replaced with the new
                  value.
                maxProperties: 200
                minProperties: 0
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/tags/{resourceARN}#tagKeys':
    delete:
      description: 'Removes tags from a bot, bot alias, or bot channel.'
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) of the resource to remove the tags
            from.
          in: path
          maxLength: 1011
          minLength: 1
          name: resourceARN
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            A list of tag keys to remove from the resource. If a tag key does
            not exist on the resource, it is ignored.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 200
          minItems: 0
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

