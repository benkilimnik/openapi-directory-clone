basePath: /
definitions:
  AccessDeniedException: {}
  ArtifactId:
    maxLength: 256
    minLength: 1
    type: string
  ArtifactStatus:
    enum:
      - APPROVED
      - REJECTED
      - IN_PROGRESS
    type: string
  AttachmentIdList:
    items:
      $ref: '#/definitions/ArtifactId'
    maxItems: 1
    minItems: 1
    type: array
  AttachmentItem:
    description: >-
      The case-insensitive input to indicate standard MIME type that describes
      the format of the file that will be uploaded.
    properties:
      AttachmentId:
        allOf:
          - $ref: '#/definitions/ArtifactId'
          - description: A unique identifier for the attachment.
      AttachmentName:
        allOf:
          - $ref: '#/definitions/AttachmentName'
          - description: A case-sensitive name of the attachment being uploaded.
      ContentType:
        allOf:
          - $ref: '#/definitions/ContentType'
          - description: >-
              Describes the MIME file type of the attachment. For a list of
              supported file types, see <a
              href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
              specifications</a> in the <i>Amazon Connect Administrator
              Guide</i>.
      Status:
        allOf:
          - $ref: '#/definitions/ArtifactStatus'
          - description: Status of the attachment.
    type: object
  AttachmentName:
    maxLength: 256
    minLength: 1
    type: string
  AttachmentSizeInBytes:
    minimum: 1
    type: integer
  Attachments:
    items:
      $ref: '#/definitions/AttachmentItem'
    type: array
  ChatContent:
    maxLength: 1024
    minLength: 1
    type: string
  ChatContentType:
    maxLength: 100
    minLength: 1
    type: string
  ChatItemId:
    maxLength: 256
    minLength: 1
    type: string
  ChatItemType:
    enum:
      - TYPING
      - PARTICIPANT_JOINED
      - PARTICIPANT_LEFT
      - CHAT_ENDED
      - TRANSFER_SUCCEEDED
      - TRANSFER_FAILED
      - MESSAGE
      - EVENT
      - ATTACHMENT
      - CONNECTION_ACK
    type: string
  ClientToken:
    maxLength: 500
    type: string
  CompleteAttachmentUploadRequest:
    properties:
      AttachmentIds:
        allOf:
          - $ref: '#/definitions/AttachmentIdList'
          - description: A list of unique identifiers for the attachments.
      ClientToken:
        allOf:
          - $ref: '#/definitions/NonEmptyClientToken'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
    required:
      - AttachmentIds
      - ClientToken
    title: CompleteAttachmentUploadRequest
    type: object
  CompleteAttachmentUploadResponse:
    properties: {}
    type: object
  ConflictException: {}
  ConnectionCredentials:
    description: 'Connection credentials. '
    properties:
      ConnectionToken:
        allOf:
          - $ref: '#/definitions/ParticipantToken'
          - description: The connection token.
      Expiry:
        allOf:
          - $ref: '#/definitions/ISO8601Datetime'
          - description: >-
              <p>The expiration of the token.</p> <p>It's specified in ISO 8601
              format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.</p>
    type: object
  ConnectionType:
    enum:
      - WEBSOCKET
      - CONNECTION_CREDENTIALS
    type: string
  ConnectionTypeList:
    items:
      $ref: '#/definitions/ConnectionType'
    minItems: 1
    type: array
  ContactId:
    maxLength: 256
    minLength: 1
    type: string
  ContentType:
    maxLength: 255
    minLength: 1
    type: string
  CreateParticipantConnectionRequest:
    properties:
      Type:
        allOf:
          - $ref: '#/definitions/ConnectionTypeList'
          - description: Type of connection information required.
    required:
      - Type
    title: CreateParticipantConnectionRequest
    type: object
  CreateParticipantConnectionResponse:
    properties:
      ConnectionCredentials:
        allOf:
          - $ref: '#/definitions/ConnectionCredentials'
          - description: >-
              Creates the participant's connection credentials. The
              authentication token associated with the participant's connection.
      Websocket:
        allOf:
          - $ref: '#/definitions/Websocket'
          - description: Creates the participant's websocket connection.
    type: object
  DisconnectParticipantRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
    title: DisconnectParticipantRequest
    type: object
  DisconnectParticipantResponse:
    properties: {}
    type: object
  DisplayName:
    maxLength: 256
    minLength: 1
    type: string
  GetAttachmentRequest:
    properties:
      AttachmentId:
        allOf:
          - $ref: '#/definitions/ArtifactId'
          - description: A unique identifier for the attachment.
    required:
      - AttachmentId
    title: GetAttachmentRequest
    type: object
  GetAttachmentResponse:
    properties:
      Url:
        allOf:
          - $ref: '#/definitions/PreSignedAttachmentUrl'
          - description: >-
              The pre-signed URL using which file would be downloaded from
              Amazon S3 by the API caller.
      UrlExpiry:
        allOf:
          - $ref: '#/definitions/ISO8601Datetime'
          - description: >-
              The expiration time of the URL in ISO timestamp. It's specified in
              ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.
    type: object
  GetTranscriptRequest:
    properties:
      ContactId:
        allOf:
          - $ref: '#/definitions/ContactId'
          - description: >-
              The contactId from the current contact chain for which transcript
              is needed.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: 'The maximum number of results to return in the page. Default: 10. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token. Use the value returned previously in the
              next subsequent request to retrieve the next set of results.
      ScanDirection:
        allOf:
          - $ref: '#/definitions/ScanDirection'
          - description: >-
              The direction from StartPosition from which to retrieve message.
              Default: BACKWARD when no StartPosition is provided, FORWARD with
              StartPosition. 
      SortOrder:
        allOf:
          - $ref: '#/definitions/SortKey'
          - description: 'The sort order for the records. Default: DESCENDING.'
      StartPosition:
        allOf:
          - $ref: '#/definitions/StartPosition'
          - description: A filtering option for where to start.
    title: GetTranscriptRequest
    type: object
  GetTranscriptResponse:
    properties:
      InitialContactId:
        allOf:
          - $ref: '#/definitions/ContactId'
          - description: 'The initial contact ID for the contact. '
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token. Use the value returned previously in the
              next subsequent request to retrieve the next set of results.
      Transcript:
        allOf:
          - $ref: '#/definitions/Transcript'
          - description: The list of messages in the session.
    type: object
  ISO8601Datetime:
    type: string
  Instant:
    maxLength: 100
    minLength: 1
    type: string
  InternalServerException: {}
  Item:
    description: 'An item - message or event - that has been sent. '
    properties:
      AbsoluteTime:
        allOf:
          - $ref: '#/definitions/Instant'
          - description: >-
              <p>The time when the message or event was sent.</p> <p>It's
              specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
              example, 2019-11-08T02:41:28.172Z.</p>
      Attachments:
        allOf:
          - $ref: '#/definitions/Attachments'
          - description: Provides information about the attachments.
      Content:
        allOf:
          - $ref: '#/definitions/ChatContent'
          - description: The content of the message or event.
      ContentType:
        allOf:
          - $ref: '#/definitions/ChatContentType'
          - description: The type of content of the item.
      DisplayName:
        allOf:
          - $ref: '#/definitions/DisplayName'
          - description: The chat display name of the sender.
      Id:
        allOf:
          - $ref: '#/definitions/ChatItemId'
          - description: The ID of the item.
      ParticipantId:
        allOf:
          - $ref: '#/definitions/ParticipantId'
          - description: The ID of the sender in the session.
      ParticipantRole:
        allOf:
          - $ref: '#/definitions/ParticipantRole'
          - description: >-
              The role of the sender. For example, is it a customer, agent, or
              system.
      Type:
        allOf:
          - $ref: '#/definitions/ChatItemType'
          - description: 'Type of the item: message or event. '
    type: object
  MaxResults:
    maximum: 100
    minimum: 0
    type: integer
  MostRecent:
    maximum: 100
    minimum: 0
    type: integer
  NextToken:
    maxLength: 1000
    minLength: 1
    type: string
  NonEmptyClientToken:
    maxLength: 500
    minLength: 1
    type: string
  ParticipantId:
    maxLength: 256
    minLength: 1
    type: string
  ParticipantRole:
    enum:
      - AGENT
      - CUSTOMER
      - SYSTEM
    type: string
  ParticipantToken:
    maxLength: 1000
    minLength: 1
    type: string
  PreSignedAttachmentUrl:
    maxLength: 2000
    minLength: 1
    type: string
  PreSignedConnectionUrl:
    maxLength: 2000
    minLength: 1
    type: string
  ScanDirection:
    enum:
      - FORWARD
      - BACKWARD
    type: string
  SendEventRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
      Content:
        allOf:
          - $ref: '#/definitions/ChatContent'
          - description: >-
              The content of the event to be sent (for example, message text).
              This is not yet supported.
      ContentType:
        allOf:
          - $ref: '#/definitions/ChatContentType'
          - description: >-
              <p>The content type of the request. Supported types are:</p> <ul>
              <li> <p>application/vnd.amazonaws.connect.event.typing</p> </li>
              <li>
              <p>application/vnd.amazonaws.connect.event.connection.acknowledged</p>
              </li> </ul>
    required:
      - ContentType
    title: SendEventRequest
    type: object
  SendEventResponse:
    properties:
      AbsoluteTime:
        allOf:
          - $ref: '#/definitions/Instant'
          - description: >-
              <p>The time when the event was sent.</p> <p>It's specified in ISO
              8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.</p>
      Id:
        allOf:
          - $ref: '#/definitions/ChatItemId'
          - description: The ID of the response.
    type: object
  SendMessageRequest:
    properties:
      ClientToken:
        allOf:
          - $ref: '#/definitions/ClientToken'
          - description: >-
              A unique, case-sensitive identifier that you provide to ensure the
              idempotency of the request.
      Content:
        allOf:
          - $ref: '#/definitions/ChatContent'
          - description: The content of the message.
      ContentType:
        allOf:
          - $ref: '#/definitions/ChatContentType'
          - description: The type of the content. Supported types are text/plain.
    required:
      - ContentType
      - Content
    title: SendMessageRequest
    type: object
  SendMessageResponse:
    properties:
      AbsoluteTime:
        allOf:
          - $ref: '#/definitions/Instant'
          - description: >-
              <p>The time when the message was sent.</p> <p>It's specified in
              ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.</p>
      Id:
        allOf:
          - $ref: '#/definitions/ChatItemId'
          - description: The ID of the message.
    type: object
  ServiceQuotaExceededException: {}
  SortKey:
    enum:
      - DESCENDING
      - ASCENDING
    type: string
  StartAttachmentUploadRequest:
    properties:
      AttachmentName:
        allOf:
          - $ref: '#/definitions/AttachmentName'
          - description: A case-sensitive name of the attachment being uploaded.
      AttachmentSizeInBytes:
        allOf:
          - $ref: '#/definitions/AttachmentSizeInBytes'
          - description: The size of the attachment in bytes.
      ClientToken:
        allOf:
          - $ref: '#/definitions/NonEmptyClientToken'
          - description: >-
              A unique case sensitive identifier to support idempotency of
              request.
      ContentType:
        allOf:
          - $ref: '#/definitions/ContentType'
          - description: >-
              Describes the MIME file type of the attachment. For a list of
              supported file types, see <a
              href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
              specifications</a> in the <i>Amazon Connect Administrator
              Guide</i>.
    required:
      - ContentType
      - AttachmentSizeInBytes
      - AttachmentName
      - ClientToken
    title: StartAttachmentUploadRequest
    type: object
  StartAttachmentUploadResponse:
    properties:
      AttachmentId:
        allOf:
          - $ref: '#/definitions/ArtifactId'
          - description: A unique identifier for the attachment.
      UploadMetadata:
        allOf:
          - $ref: '#/definitions/UploadMetadata'
          - description: Fields to be used while uploading the attachment.
    type: object
  StartPosition:
    description: >-
      A filtering option for where to start. For example, if you sent 100
      messages, start with message 50. 
    properties:
      AbsoluteTime:
        allOf:
          - $ref: '#/definitions/Instant'
          - description: >-
              <p>The time in ISO format where to start.</p> <p>It's specified in
              ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.</p>
      Id:
        allOf:
          - $ref: '#/definitions/ChatItemId'
          - description: 'The ID of the message or event where to start. '
      MostRecent:
        allOf:
          - $ref: '#/definitions/MostRecent'
          - description: >-
              The start position of the most recent message where you want to
              start. 
    type: object
  ThrottlingException: {}
  Transcript:
    items:
      $ref: '#/definitions/Item'
    type: array
  UploadMetadata:
    description: Fields to be used while uploading the attachment.
    properties:
      HeadersToInclude:
        allOf:
          - $ref: '#/definitions/UploadMetadataSignedHeaders'
          - description: The headers to be provided while uploading the file to the URL.
      Url:
        allOf:
          - $ref: '#/definitions/UploadMetadataUrl'
          - description: >-
              The pre-signed URL using which file would be downloaded from
              Amazon S3 by the API caller.
      UrlExpiry:
        allOf:
          - $ref: '#/definitions/ISO8601Datetime'
          - description: >-
              The expiration time of the URL in ISO timestamp. It's specified in
              ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
              2019-11-08T02:41:28.172Z.
    type: object
  UploadMetadataSignedHeaders:
    additionalProperties:
      $ref: '#/definitions/UploadMetadataSignedHeadersValue'
    type: object
  UploadMetadataSignedHeadersKey:
    maxLength: 128
    minLength: 1
    type: string
  UploadMetadataSignedHeadersValue:
    maxLength: 256
    minLength: 1
    type: string
  UploadMetadataUrl:
    maxLength: 2000
    minLength: 1
    type: string
  ValidationException: {}
  Websocket:
    description: The websocket for the participant's connection.
    properties:
      ConnectionExpiry:
        allOf:
          - $ref: '#/definitions/ISO8601Datetime'
          - description: >-
              <p>The URL expiration timestamp in ISO date format.</p> <p>It's
              specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
              example, 2019-11-08T02:41:28.172Z.</p>
      Url:
        allOf:
          - $ref: '#/definitions/PreSignedConnectionUrl'
          - description: The URL of the websocket.
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/connect/'
host: participant.connect.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>Amazon Connect is a cloud-based contact center solution that makes it
    easy to set up and manage a customer contact center and provide reliable
    customer engagement at any scale.</p> <p>Amazon Connect enables customer
    contacts through voice or chat.</p> <p>The APIs described here are used by
    chat participants, such as agents and customers.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Connect Participant Service
  version: '2018-09-07'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: execute-api
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connectparticipant-2018-09-07.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: connectparticipant
paths:
  /participant/attachment#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a pre-signed URL for download of a completed attachment. This
        is an asynchronous API for use with active contacts.
      operationId: GetAttachment
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AttachmentId:
                description: A unique identifier for the attachment.
                maxLength: 256
                minLength: 1
                type: string
            required:
              - AttachmentId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAttachmentResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /participant/complete-attachment-upload#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Allows you to confirm that the attachment has been uploaded using the
        pre-signed URL provided in StartAttachmentUpload API. 
      operationId: CompleteAttachmentUpload
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AttachmentIds:
                description: A list of unique identifiers for the attachments.
                items:
                  $ref: '#/definitions/ArtifactId'
                maxItems: 1
                minItems: 1
                type: array
              ClientToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 500
                minLength: 1
                type: string
            required:
              - AttachmentIds
              - ClientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompleteAttachmentUploadResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /participant/connection#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates the participant's connection. Note that ParticipantToken is
        used for invoking this API instead of ConnectionToken.</p> <p>The
        participant token is valid for the lifetime of the participant – until
        they are part of a contact.</p> <p>The response URL for
        <code>WEBSOCKET</code> Type has a connect expiry timeout of 100s.
        Clients must manually connect to the returned websocket URL and
        subscribe to the desired topic. </p> <p>For chat, you need to publish
        the following on the established websocket connection:</p> <p>
        <code>{"topic":"aws/subscribe","content":{"topics":["aws/chat"]}}</code>
        </p> <p>Upon websocket URL expiry, as specified in the response
        ConnectionExpiry parameter, clients need to call this API again to
        obtain a new websocket URL and perform the same steps as before.</p>
        <note> <p>The Amazon Connect Participant Service APIs do not use <a
        href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4 authentication</a>.</p> </note>
      operationId: CreateParticipantConnection
      parameters:
        - description: >-
            <p>This is a header parameter.</p> <p>The Participant Token as
            obtained from <a
            href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html">StartChatContact</a>
            API response.</p>
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Type:
                description: Type of connection information required.
                items:
                  $ref: '#/definitions/ConnectionType'
                minItems: 1
                type: array
            required:
              - Type
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateParticipantConnectionResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /participant/disconnect#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Disconnects a participant. Note that ConnectionToken is used for
        invoking this API instead of ParticipantToken.</p> <p>The Amazon Connect
        Participant Service APIs do not use <a
        href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4 authentication</a>.</p>
      operationId: DisconnectParticipant
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 500
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisconnectParticipantResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /participant/event#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sends an event. Note that ConnectionToken is used for invoking this
        API instead of ParticipantToken.</p> <p>The Amazon Connect Participant
        Service APIs do not use <a
        href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4 authentication</a>.</p>
      operationId: SendEvent
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 500
                type: string
              Content:
                description: >-
                  The content of the event to be sent (for example, message
                  text). This is not yet supported.
                maxLength: 1024
                minLength: 1
                type: string
              ContentType:
                description: >-
                  <p>The content type of the request. Supported types are:</p>
                  <ul> <li>
                  <p>application/vnd.amazonaws.connect.event.typing</p> </li>
                  <li>
                  <p>application/vnd.amazonaws.connect.event.connection.acknowledged</p>
                  </li> </ul>
                maxLength: 100
                minLength: 1
                type: string
            required:
              - ContentType
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendEventResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /participant/message#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sends a message. Note that ConnectionToken is used for invoking this
        API instead of ParticipantToken.</p> <note> <p>The Amazon Connect
        Participant Service APIs do not use <a
        href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4 authentication</a>.</p> </note>
      operationId: SendMessage
      parameters:
        - description: The authentication token associated with the connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientToken:
                description: >-
                  A unique, case-sensitive identifier that you provide to ensure
                  the idempotency of the request.
                maxLength: 500
                type: string
              Content:
                description: The content of the message.
                maxLength: 1024
                minLength: 1
                type: string
              ContentType:
                description: The type of the content. Supported types are text/plain.
                maxLength: 100
                minLength: 1
                type: string
            required:
              - ContentType
              - Content
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendMessageResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /participant/start-attachment-upload#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Provides a pre-signed Amazon S3 URL in response for uploading the file
        directly to S3.
      operationId: StartAttachmentUpload
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AttachmentName:
                description: A case-sensitive name of the attachment being uploaded.
                maxLength: 256
                minLength: 1
                type: string
              AttachmentSizeInBytes:
                description: The size of the attachment in bytes.
                minimum: 1
                type: integer
              ClientToken:
                description: >-
                  A unique case sensitive identifier to support idempotency of
                  request.
                maxLength: 500
                minLength: 1
                type: string
              ContentType:
                description: >-
                  Describes the MIME file type of the attachment. For a list of
                  supported file types, see <a
                  href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
                  specifications</a> in the <i>Amazon Connect Administrator
                  Guide</i>.
                maxLength: 255
                minLength: 1
                type: string
            required:
              - ContentType
              - AttachmentSizeInBytes
              - AttachmentName
              - ClientToken
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAttachmentUploadResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
  /participant/transcript#X-Amz-Bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Retrieves a transcript of the session, including details about any
        attachments. Note that ConnectionToken is used for invoking this API
        instead of ParticipantToken.</p> <p>The Amazon Connect Participant
        Service APIs do not use <a
        href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
        Version 4 authentication</a>.</p>
      operationId: GetTranscript
      parameters:
        - description: >-
            The authentication token associated with the participant's
            connection.
          in: header
          maxLength: 1000
          minLength: 1
          name: X-Amz-Bearer
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ContactId:
                description: >-
                  The contactId from the current contact chain for which
                  transcript is needed.
                maxLength: 256
                minLength: 1
                type: string
              MaxResults:
                description: >-
                  The maximum number of results to return in the page. Default:
                  10. 
                maximum: 100
                minimum: 0
                type: integer
              NextToken:
                description: >-
                  The pagination token. Use the value returned previously in the
                  next subsequent request to retrieve the next set of results.
                maxLength: 1000
                minLength: 1
                type: string
              ScanDirection:
                description: >-
                  The direction from StartPosition from which to retrieve
                  message. Default: BACKWARD when no StartPosition is provided,
                  FORWARD with StartPosition. 
                enum:
                  - FORWARD
                  - BACKWARD
                type: string
              SortOrder:
                description: 'The sort order for the records. Default: DESCENDING.'
                enum:
                  - DESCENDING
                  - ASCENDING
                type: string
              StartPosition:
                description: >-
                  A filtering option for where to start. For example, if you
                  sent 100 messages, start with message 50. 
                properties:
                  AbsoluteTime:
                    allOf:
                      - $ref: '#/definitions/Instant'
                      - description: >-
                          <p>The time in ISO format where to start.</p> <p>It's
                          specified in ISO 8601 format:
                          yyyy-MM-ddThh:mm:ss.SSSZ. For example,
                          2019-11-08T02:41:28.172Z.</p>
                  Id:
                    allOf:
                      - $ref: '#/definitions/ChatItemId'
                      - description: 'The ID of the message or event where to start. '
                  MostRecent:
                    allOf:
                      - $ref: '#/definitions/MostRecent'
                      - description: >-
                          The start position of the most recent message where
                          you want to start. 
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTranscriptResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

