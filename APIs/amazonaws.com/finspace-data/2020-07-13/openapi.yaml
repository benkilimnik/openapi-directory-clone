basePath: /
definitions:
  AccessDeniedException: {}
  ChangeType:
    enum:
      - REPLACE
      - APPEND
      - MODIFY
    type: string
  ChangesetInfo:
    description: A changeset is unit of data in a dataset.
    properties:
      changeType:
        allOf:
          - $ref: '#/definitions/ChangeType'
          - description: >-
              <p>Change type indicates how a changeset is applied to a
              dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset is
              considered as a replacement to all prior loaded changesets.</p>
              </li> <li> <p> <code>APPEND</code> - Changeset is considered as an
              addition to the end of all prior loaded changesets.</p> </li> <li>
              <p> <code>MODIFY</code> - Changeset is considered as a replacement
              to a specific prior ingested changeset.</p> </li> </ul>
      changesetArn:
        allOf:
          - $ref: '#/definitions/arn'
          - description: The ARN identifier of the changeset.
      changesetLabels:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: Tags associated with the changeset.
      createTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The timestamp at which the changeset was created in FinSpace.
      datasetId:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: >-
              The unique identifier for the FinSpace dataset in which the
              changeset is created.
      errorInfo:
        allOf:
          - $ref: '#/definitions/ErrorInfo'
          - description: The structure with error messages.
      formatParams:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: Structure of the source file(s).
      formatType:
        allOf:
          - $ref: '#/definitions/FormatType'
          - description: Format type of the input files loaded into the changeset.
      id:
        allOf:
          - $ref: '#/definitions/IdType'
          - description: Unique identifier for a changeset.
      sourceParams:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: >-
              Source path from which the files to create the changeset are
              sourced.
      sourceType:
        allOf:
          - $ref: '#/definitions/SourceType'
          - description: >-
              <p>Type of the data source from which the files to create the
              changeset are sourced.</p> <ul> <li> <p> <code>S3</code> - Amazon
              S3.</p> </li> </ul>
      status:
        allOf:
          - $ref: '#/definitions/ChangesetStatus'
          - description: The status of changeset creation operation.
      updatedByChangesetId:
        allOf:
          - $ref: '#/definitions/stringValue'
          - description: Unique identifier of the changeset that is updated a changeset.
      updatesChangesetId:
        allOf:
          - $ref: '#/definitions/stringValue'
          - description: Unique identifier of the changeset that is updated.
    type: object
  ChangesetStatus:
    enum:
      - PENDING
      - FAILED
      - SUCCESS
      - RUNNING
      - STOP_REQUESTED
    type: string
  CreateChangesetRequest:
    properties:
      changeType:
        allOf:
          - $ref: '#/definitions/ChangeType'
          - description: >-
              <p>Option to indicate how a changeset will be applied to a
              dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset will
              be considered as a replacement to all prior loaded changesets.</p>
              </li> <li> <p> <code>APPEND</code> - Changeset will be considered
              as an addition to the end of all prior loaded changesets.</p>
              </li> </ul>
      formatParams:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: Options that define the structure of the source file(s).
      formatType:
        allOf:
          - $ref: '#/definitions/FormatType'
          - description: Format type of the input files being loaded into the changeset.
      sourceParams:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: >-
              Source path from which the files to create the changeset will be
              sourced.
      sourceType:
        allOf:
          - $ref: '#/definitions/SourceType'
          - description: >-
              <p>Type of the data source from which the files to create the
              changeset will be sourced.</p> <ul> <li> <p> <code>S3</code> -
              Amazon S3.</p> </li> </ul>
      tags:
        allOf:
          - $ref: '#/definitions/stringMap'
          - description: Metadata tags to apply to this changeset.
    required:
      - changeType
      - sourceType
      - sourceParams
    title: CreateChangesetRequest
    type: object
  CreateChangesetResponse:
    properties:
      changeset:
        allOf:
          - $ref: '#/definitions/ChangesetInfo'
          - description: Returns the changeset details.
    type: object
  Credentials:
    description: Set short term API credentials.
    properties:
      accessKeyId:
        allOf:
          - $ref: '#/definitions/stringValueLength1to255'
          - description: The access key identifier.
      secretAccessKey:
        allOf:
          - $ref: '#/definitions/stringValueMaxLength1000'
          - description: The access key.
      sessionToken:
        allOf:
          - $ref: '#/definitions/stringValueMaxLength1000'
          - description: The session token.
    type: object
  ErrorCategory:
    enum:
      - The_inputs_to_this_request_are_invalid
      - Service_limits_have_been_exceeded
      - Missing_required_permission_to_perform_this_request
      - One_or_more_inputs_to_this_request_were_not_found
      - The_system_temporarily_lacks_sufficient_resources_to_process_the_request
      - An_internal_error_has_occurred
      - Cancelled
      - A_user_recoverable_error_has_occurred
    type: string
  ErrorInfo:
    description: Error message.
    properties:
      errorCategory:
        allOf:
          - $ref: '#/definitions/ErrorCategory'
          - description: >-
              <p>The category of the error.</p> <ul> <li> <p>
              <code>VALIDATION</code> -The inputs to this request are
              invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code> -
              Service quotas have been exceeded. Please contact AWS support to
              increase quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> -
              Missing required permission to perform this request.</p> </li>
              <li> <p> <code>RESOURCE_NOT_FOUND</code> - One or more inputs to
              this request were not found.</p> </li> <li> <p>
              <code>THROTTLING</code> - The system temporarily lacks sufficient
              resources to process the request.</p> </li> <li> <p>
              <code>INTERNAL_SERVICE_EXCEPTION</code> - An internal service
              error has occurred.</p> </li> <li> <p> <code>CANCELLED</code> - A
              user recoverable error has occurred.</p> </li> </ul>
      errorMessage:
        allOf:
          - $ref: '#/definitions/stringValueMaxLength1000'
          - description: The text of the error message.
    type: object
  FormatType:
    enum:
      - CSV
      - JSON
      - PARQUET
      - XML
    type: string
  GetProgrammaticAccessCredentialsRequest:
    properties: {}
    title: GetProgrammaticAccessCredentialsRequest
    type: object
  GetProgrammaticAccessCredentialsResponse:
    properties:
      credentials:
        allOf:
          - $ref: '#/definitions/Credentials'
          - description: Returns the programmatic credentials.
      durationInMinutes:
        allOf:
          - $ref: '#/definitions/SessionDuration'
          - description: Returns the duration in which the credentials will remain valid.
    type: object
  GetWorkingLocationRequest:
    properties:
      locationType:
        allOf:
          - $ref: '#/definitions/locationType'
          - description: >-
              <p>Specify the type of the working location.</p> <ul> <li> <p>
              <code>SAGEMAKER</code> - Use the Amazon S3 location as a temporary
              location to store data content when working with FinSpace
              Notebooks that run on SageMaker studio.</p> </li> <li> <p>
              <code>INGESTION</code> - Use the Amazon S3 location as a staging
              location to copy your data content and then use the location with
              the changeset creation operation.</p> </li> </ul>
    title: GetWorkingLocationRequest
    type: object
  GetWorkingLocationResponse:
    properties:
      s3Bucket:
        allOf:
          - $ref: '#/definitions/stringValueLength1to63'
          - description: Returns the Amazon S3 bucket name for the working location.
      s3Path:
        allOf:
          - $ref: '#/definitions/stringValueLength1to1024'
          - description: Returns the Amazon S3 Path for the working location.
      s3Uri:
        allOf:
          - $ref: '#/definitions/stringValueLength1to1024'
          - description: Returns the Amazon S3 URI for the working location.
    type: object
  IdType:
    maxLength: 26
    minLength: 1
    type: string
  InternalServerException: {}
  ResourceNotFoundException: {}
  SessionDuration:
    maximum: 720
    minimum: 60
    type: integer
  SourceType:
    enum:
      - S3
    type: string
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  ValidationException: {}
  arn:
    maxLength: 2048
    minLength: 20
    type: string
  locationType:
    enum:
      - INGESTION
      - SAGEMAKER
    type: string
  stringMap:
    additionalProperties:
      $ref: '#/definitions/stringMapValue'
    type: object
  stringMapKey:
    type: string
  stringMapValue:
    type: string
  stringValue:
    type: string
  stringValueLength1to1024:
    maxLength: 1024
    minLength: 1
    pattern: .*\S.*
    type: string
  stringValueLength1to255:
    maxLength: 255
    minLength: 1
    type: string
  stringValueLength1to63:
    maxLength: 63
    minLength: 1
    pattern: .*\S.*
    type: string
  stringValueMaxLength1000:
    maxLength: 1000
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/finspace-api/'
host: finspace-api.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: ' The FinSpace APIs let you take actions inside the FinSpace environment. '
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: FinSpace Public API
  version: '2020-07-13'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: finspace-api
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/finspace-data-2020-07-13.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: finspace-data
paths:
  /credentials/programmatic#environmentId:
    get:
      description: Request programmatic credentials to use with Habanero SDK.
      operationId: GetProgrammaticAccessCredentials
      parameters:
        - description: 'The time duration in which the credentials remain valid. '
          in: query
          maximum: 720
          minimum: 60
          name: durationInMinutes
          required: false
          type: integer
        - description: The habanero environment identifier.
          in: query
          maxLength: 26
          minLength: 1
          name: environmentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProgrammaticAccessCredentialsResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/datasets/{datasetId}/changesets':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new changeset in a FinSpace dataset.
      operationId: CreateChangeset
      parameters:
        - description: >-
            The unique identifier for the FinSpace dataset in which the
            changeset will be created.
          in: path
          maxLength: 26
          minLength: 1
          name: datasetId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              changeType:
                description: >-
                  <p>Option to indicate how a changeset will be applied to a
                  dataset.</p> <ul> <li> <p> <code>REPLACE</code> - Changeset
                  will be considered as a replacement to all prior loaded
                  changesets.</p> </li> <li> <p> <code>APPEND</code> - Changeset
                  will be considered as an addition to the end of all prior
                  loaded changesets.</p> </li> </ul>
                enum:
                  - REPLACE
                  - APPEND
                  - MODIFY
                type: string
              formatParams:
                additionalProperties:
                  $ref: '#/definitions/stringMapValue'
                description: Options that define the structure of the source file(s).
                type: object
              formatType:
                description: >-
                  Format type of the input files being loaded into the
                  changeset.
                enum:
                  - CSV
                  - JSON
                  - PARQUET
                  - XML
                type: string
              sourceParams:
                additionalProperties:
                  $ref: '#/definitions/stringMapValue'
                description: >-
                  Source path from which the files to create the changeset will
                  be sourced.
                type: object
              sourceType:
                description: >-
                  <p>Type of the data source from which the files to create the
                  changeset will be sourced.</p> <ul> <li> <p> <code>S3</code> -
                  Amazon S3.</p> </li> </ul>
                enum:
                  - S3
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/stringMapValue'
                description: Metadata tags to apply to this changeset.
                type: object
            required:
              - changeType
              - sourceType
              - sourceParams
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateChangesetResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /workingLocationV1:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        A temporary Amazon S3 location to copy your files from a source location
        to stage or use as a scratch space in Habanero notebook.
      operationId: GetWorkingLocation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              locationType:
                description: >-
                  <p>Specify the type of the working location.</p> <ul> <li> <p>
                  <code>SAGEMAKER</code> - Use the Amazon S3 location as a
                  temporary location to store data content when working with
                  FinSpace Notebooks that run on SageMaker studio.</p> </li>
                  <li> <p> <code>INGESTION</code> - Use the Amazon S3 location
                  as a staging location to copy your data content and then use
                  the location with the changeset creation operation.</p> </li>
                  </ul>
                enum:
                  - INGESTION
                  - SAGEMAKER
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkingLocationResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

