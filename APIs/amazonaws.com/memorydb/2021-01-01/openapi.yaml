basePath: /
definitions:
  ACL:
    description: >-
      An Access Control List. You can authenticate users with Access Contol
      Lists. ACLs enable you to control cluster access by grouping users. These
      Access control lists are designed as a way to organize access to clusters.
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the ACL
      Clusters:
        allOf:
          - $ref: '#/definitions/ACLClusterNameList'
          - description: A list of clusters associated with the ACL.
      MinimumEngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The minimum engine version supported for the ACL
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the Access Control List
      PendingChanges:
        allOf:
          - $ref: '#/definitions/ACLPendingChanges'
          - description: A list of updates being applied to the ACL.
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Indicates ACL status. Can be "creating", "active", "modifying",
              "deleting".
      UserNames:
        allOf:
          - $ref: '#/definitions/UserNameList'
          - description: The list of user names that belong to the ACL.
    type: object
  ACLAlreadyExistsFault: {}
  ACLClusterNameList:
    items:
      $ref: '#/definitions/String'
    type: array
  ACLList:
    items:
      $ref: '#/definitions/ACL'
    type: array
  ACLName:
    minLength: 1
    pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
    type: string
  ACLNameList:
    items:
      $ref: '#/definitions/ACLName'
    type: array
  ACLNotFoundFault: {}
  ACLPendingChanges:
    description: Returns the updates being applied to the ACL.
    properties:
      UserNamesToAdd:
        allOf:
          - $ref: '#/definitions/UserNameList'
          - description: A list of users being added to the ACL
      UserNamesToRemove:
        allOf:
          - $ref: '#/definitions/UserNameList'
          - description: A list of user names being removed from the ACL
    type: object
  ACLQuotaExceededFault: {}
  ACLsUpdateStatus:
    description: The status of the ACL update
    properties:
      ACLToApply:
        allOf:
          - $ref: '#/definitions/ACLName'
          - description: A list of ACLs pending to be applied.
    type: object
  APICallRateForCustomerExceededFault: {}
  AZStatus:
    enum:
      - singleaz
      - multiaz
    type: string
  AccessString:
    pattern: .*\S.*
    type: string
  Authentication:
    description: >-
      Denotes the user's authentication properties, such as whether it requires
      a password to authenticate. Used in output responses.
    properties:
      PasswordCount:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of passwords belonging to the user. The maximum is two.
      Type:
        allOf:
          - $ref: '#/definitions/AuthenticationType'
          - description: Indicates whether the user requires a password to authenticate.
    type: object
  AuthenticationMode:
    description: >-
      Denotes the user's authentication properties, such as whether it requires
      a password to authenticate. Used in output responses.
    properties:
      Passwords:
        allOf:
          - $ref: '#/definitions/PasswordListInput'
          - description: The password(s) used for authentication
      Type:
        allOf:
          - $ref: '#/definitions/InputAuthenticationType'
          - description: >-
              Indicates whether the user requires a password to authenticate.
              All newly-created users require a password.
    type: object
  AuthenticationType:
    enum:
      - password
      - no-password
    type: string
  AvailabilityZone:
    description: >-
      Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
      (singleaz).
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the Availability Zone.
    type: object
  BatchUpdateClusterRequest:
    properties:
      ClusterNames:
        allOf:
          - $ref: '#/definitions/ClusterNameList'
          - description: The cluster names to apply the updates.
      ServiceUpdate:
        allOf:
          - $ref: '#/definitions/ServiceUpdateRequest'
          - description: The unique ID of the service update
    required:
      - ClusterNames
    title: BatchUpdateClusterRequest
    type: object
  BatchUpdateClusterResponse:
    properties:
      ProcessedClusters:
        allOf:
          - $ref: '#/definitions/ClusterList'
          - description: The list of clusters that have been updated.
      UnprocessedClusters:
        allOf:
          - $ref: '#/definitions/UnprocessedClusterList'
          - description: The list of clusters where updates have not been applied.
    type: object
  Boolean:
    type: boolean
  BooleanOptional:
    type: boolean
  Cluster:
    description: Contains all of the attributes of a specific cluster.
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/ACLName'
          - description: The name of the Access Control List associated with this cluster.
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the cluster.
      AutoMinorVersionUpgrade:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: >-
              When set to true, the cluster will automatically receive minor
              engine version upgrades after launch.
      AvailabilityMode:
        allOf:
          - $ref: '#/definitions/AZStatus'
          - description: >-
              Indicates if the cluster has a Multi-AZ configuration (multiaz) or
              not (singleaz).
      ClusterEndpoint:
        allOf:
          - $ref: '#/definitions/Endpoint'
          - description: The cluster's configuration endpoint
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description of the cluster
      EnginePatchVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Redis engine patch version used by the cluster
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Redis engine version used by the cluster
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the KMS key used to encrypt the cluster
      MaintenanceWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Specifies the weekly time range during which maintenance on the
              cluster is performed. It is specified as a range in the format
              ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
              window is a 60 minute period. 
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The user-supplied name of the cluster. This identifier is a unique
              key that identifies a cluster.
      NodeType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The cluster's node type
      NumberOfShards:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of shards in the cluster
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group used by the cluster
      ParameterGroupStatus:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The status of the parameter group used by the cluster, for example
              'active' or 'applying'.
      PendingUpdates:
        allOf:
          - $ref: '#/definitions/ClusterPendingUpdates'
          - description: A group of settings that are currently being applied.
      SecurityGroups:
        allOf:
          - $ref: '#/definitions/SecurityGroupMembershipList'
          - description: A list of security groups used by the cluster
      Shards:
        allOf:
          - $ref: '#/definitions/ShardList'
          - description: A list of shards that are members of the cluster.
      SnapshotRetentionLimit:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The number of days for which MemoryDB retains automatic snapshots
              before deleting them. For example, if you set
              SnapshotRetentionLimit to 5, a snapshot that was taken today is
              retained for 5 days before being deleted.
      SnapshotWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The daily time range (in UTC) during which MemoryDB begins taking
              a daily snapshot of your shard. Example: 05:00-09:00 If you do not
              specify this parameter, MemoryDB automatically chooses an
              appropriate time range.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the SNS notification topic
      SnsTopicStatus:
        allOf:
          - $ref: '#/definitions/String'
          - description: The SNS topic must be in Active status to receive notifications
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The status of the cluster. For example, Available, Updating,
              Creating.
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group used by the cluster
      TLSEnabled:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: A flag to indicate if In-transit encryption is enabled
    type: object
  ClusterAlreadyExistsFault: {}
  ClusterConfiguration:
    description: 'A list of cluster configuration options. '
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: The description of the cluster configuration
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Redis engine version used by the cluster
      MaintenanceWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: The specified maintenance window for the cluster
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster
      NodeType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The node type used for the cluster
      NumShards:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of shards in the cluster
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of parameter group used by the cluster
      Port:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The port used by the cluster
      Shards:
        allOf:
          - $ref: '#/definitions/ShardDetails'
          - description: The list of shards in the cluster
      SnapshotRetentionLimit:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The snapshot retention limit set by the cluster
      SnapshotWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: The snapshot window set by the cluster
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group used by the cluster
      TopicArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the SNS notification topic for
              the cluster
      VpcId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the VPC the cluster belongs to
    type: object
  ClusterList:
    items:
      $ref: '#/definitions/Cluster'
    type: array
  ClusterNameList:
    items:
      $ref: '#/definitions/String'
    maxItems: 20
    type: array
  ClusterNotFoundFault: {}
  ClusterPendingUpdates:
    description: A list of updates being applied to the cluster
    properties:
      ACLs:
        allOf:
          - $ref: '#/definitions/ACLsUpdateStatus'
          - description: A list of ACLs associated with the cluster that are being updated
      Resharding:
        allOf:
          - $ref: '#/definitions/ReshardingStatus'
          - description: The status of an online resharding operation.
      ServiceUpdates:
        allOf:
          - $ref: '#/definitions/PendingModifiedServiceUpdateList'
          - description: A list of service updates being applied to the cluster
    type: object
  ClusterQuotaForCustomerExceededFault: {}
  CopySnapshotRequest:
    properties:
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/KmsKeyId'
          - description: The ID of the KMS key used to encrypt the target snapshot.
      SourceSnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of an existing snapshot from which to make a copy.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
      TargetBucket:
        allOf:
          - $ref: '#/definitions/TargetBucket'
          - description: >-
              The Amazon S3 bucket to which the snapshot is exported. This
              parameter is used only when exporting a snapshot for external
              access. When using this parameter to export a snapshot, be sure
              MemoryDB has the needed permissions to this S3 bucket. For more
              information, see <a
              href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/snapshots-exporting.html">Step
              2: Grant MemoryDB Access to Your Amazon S3 Bucket</a>. 
      TargetSnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A name for the snapshot copy. MemoryDB does not permit overwriting
              a snapshot, therefore this name must be unique within its context
              - MemoryDB or an Amazon S3 bucket if exporting.
    required:
      - SourceSnapshotName
      - TargetSnapshotName
    title: CopySnapshotRequest
    type: object
  CopySnapshotResponse:
    properties:
      Snapshot:
        allOf:
          - $ref: '#/definitions/Snapshot'
          - description: >-
              Represents a copy of an entire cluster as of the time when the
              snapshot was taken.
    type: object
  CreateACLRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the Access Control List.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
      UserNames:
        allOf:
          - $ref: '#/definitions/UserNameListInput'
          - description: The list of users that belong to the Access Control List.
    required:
      - ACLName
    title: CreateACLRequest
    type: object
  CreateACLResponse:
    properties:
      ACL:
        allOf:
          - $ref: '#/definitions/ACL'
          - description: The newly-created Access Control List.
    type: object
  CreateClusterRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/ACLName'
          - description: The name of the Access Control List to associate with the cluster.
      AutoMinorVersionUpgrade:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: >-
              When set to true, the cluster will automatically receive minor
              engine version upgrades after launch.
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the cluster. This value must be unique as it also
              serves as the cluster identifier.
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: An optional description of the cluster.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The version number of the Redis engine to be used for the cluster.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the KMS key used to encrypt the cluster.
      MaintenanceWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Specifies the weekly time range during which maintenance on the
              cluster is performed. It is specified as a range in the format
              <code>ddd:hh24:mi-ddd:hh24:mi</code> (24H Clock UTC). The minimum
              maintenance window is a 60 minute period.
      NodeType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The compute and memory capacity of the nodes in the cluster.
      NumReplicasPerShard:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The number of replicas to apply to each shard. The default value
              is 1. The maximum is 5. 
      NumShards:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The number of shards the cluster will contain. The default value
              is 1. 
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group associated with the cluster.
      Port:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The port number on which each of the nodes accepts connections.
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIdsList'
          - description: A list of security group names to associate with this cluster.
      SnapshotArns:
        allOf:
          - $ref: '#/definitions/SnapshotArnsList'
          - description: >-
              A list of Amazon Resource Names (ARN) that uniquely identify the
              RDB snapshot files stored in Amazon S3. The snapshot files are
              used to populate the new cluster. The Amazon S3 object name in the
              ARN cannot contain any commas.
      SnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of a snapshot from which to restore data into the new
              cluster. The snapshot status changes to restoring while the new
              cluster is being created.
      SnapshotRetentionLimit:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The number of days for which MemoryDB retains automatic snapshots
              before deleting them. For example, if you set
              SnapshotRetentionLimit to 5, a snapshot that was taken today is
              retained for 5 days before being deleted.
      SnapshotWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              <p>The daily time range (in UTC) during which MemoryDB begins
              taking a daily snapshot of your shard.</p> <p> Example:
              05:00-09:00</p> <p> If you do not specify this parameter, MemoryDB
              automatically chooses an appropriate time range.</p>
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the Amazon Simple Notification
              Service (SNS) topic to which notifications are sent.
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group to be used for the cluster.
      TLSEnabled:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: A flag to enable in-transit encryption on the cluster.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. Tags are
              comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue.
              You can include multiple tags as shown following: Key=myKey,
              Value=myKeyValue Key=mySecondKey, Value=mySecondKeyValue.
    required:
      - ClusterName
      - NodeType
      - ACLName
    title: CreateClusterRequest
    type: object
  CreateClusterResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The newly-created cluster.
    type: object
  CreateParameterGroupRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: An optional description of the parameter group.
      Family:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the parameter group family that the parameter group
              can be used with.
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
    required:
      - ParameterGroupName
      - Family
    title: CreateParameterGroupRequest
    type: object
  CreateParameterGroupResponse:
    properties:
      ParameterGroup:
        allOf:
          - $ref: '#/definitions/ParameterGroup'
          - description: The newly-created parameter group.
    type: object
  CreateSnapshotRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The snapshot is created from this cluster.
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
      SnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: A name for the snapshot being created.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
    required:
      - ClusterName
      - SnapshotName
    title: CreateSnapshotRequest
    type: object
  CreateSnapshotResponse:
    properties:
      Snapshot:
        allOf:
          - $ref: '#/definitions/Snapshot'
          - description: The newly-created snapshot.
    type: object
  CreateSubnetGroupRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description for the subnet group.
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group.
      SubnetIds:
        allOf:
          - $ref: '#/definitions/SubnetIdentifierList'
          - description: A list of VPC subnet IDs for the subnet group.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
    required:
      - SubnetGroupName
      - SubnetIds
    title: CreateSubnetGroupRequest
    type: object
  CreateSubnetGroupResponse:
    properties:
      SubnetGroup:
        allOf:
          - $ref: '#/definitions/SubnetGroup'
          - description: The newly-created subnet group
    type: object
  CreateUserRequest:
    properties:
      AccessString:
        allOf:
          - $ref: '#/definitions/AccessString'
          - description: Access permissions string used for this user.
      AuthenticationMode:
        allOf:
          - $ref: '#/definitions/AuthenticationMode'
          - description: >-
              Denotes the user's authentication properties, such as whether it
              requires a password to authenticate.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
      UserName:
        allOf:
          - $ref: '#/definitions/UserName'
          - description: >-
              The name of the user. This value must be unique as it also serves
              as the user identifier.
    required:
      - UserName
      - AuthenticationMode
      - AccessString
    title: CreateUserRequest
    type: object
  CreateUserResponse:
    properties:
      User:
        allOf:
          - $ref: '#/definitions/User'
          - description: The newly-created user.
    type: object
  DefaultUserRequired: {}
  DeleteACLRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the Access Control List to delete
    required:
      - ACLName
    title: DeleteACLRequest
    type: object
  DeleteACLResponse:
    properties:
      ACL:
        allOf:
          - $ref: '#/definitions/ACL'
          - description: The Access Control List object that has been deleted.
    type: object
  DeleteClusterRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster to be deleted
      FinalSnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The user-supplied name of a final cluster snapshot. This is the
              unique name that identifies the snapshot. MemoryDB creates the
              snapshot, and then deletes the cluster immediately afterward.
    required:
      - ClusterName
    title: DeleteClusterRequest
    type: object
  DeleteClusterResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The cluster object that has been deleted
    type: object
  DeleteParameterGroupRequest:
    properties:
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group to delete.
    required:
      - ParameterGroupName
    title: DeleteParameterGroupRequest
    type: object
  DeleteParameterGroupResponse:
    properties:
      ParameterGroup:
        allOf:
          - $ref: '#/definitions/ParameterGroup'
          - description: The parameter group that has been deleted.
    type: object
  DeleteSnapshotRequest:
    properties:
      SnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the snapshot to delete
    required:
      - SnapshotName
    title: DeleteSnapshotRequest
    type: object
  DeleteSnapshotResponse:
    properties:
      Snapshot:
        allOf:
          - $ref: '#/definitions/Snapshot'
          - description: The snapshot object that has been deleted.
    type: object
  DeleteSubnetGroupRequest:
    properties:
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group to delete
    required:
      - SubnetGroupName
    title: DeleteSubnetGroupRequest
    type: object
  DeleteSubnetGroupResponse:
    properties:
      SubnetGroup:
        allOf:
          - $ref: '#/definitions/SubnetGroup'
          - description: The subnet group object that has been deleted.
    type: object
  DeleteUserRequest:
    properties:
      UserName:
        allOf:
          - $ref: '#/definitions/UserName'
          - description: The name of the user to delete
    required:
      - UserName
    title: DeleteUserRequest
    type: object
  DeleteUserResponse:
    properties:
      User:
        allOf:
          - $ref: '#/definitions/User'
          - description: The user object that has been deleted.
    type: object
  DescribeACLsRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the ACL
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
    title: DescribeACLsRequest
    type: object
  DescribeACLsResponse:
    properties:
      ACLs:
        allOf:
          - $ref: '#/definitions/ACLList'
          - description: The list of ACLs
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              If nextToken is returned, there are more results available. The
              value of nextToken is a unique pagination token for each page.
              Make the call again using the returned token to retrieve the next
              page. Keep all other arguments unchanged. 
    type: object
  DescribeClustersRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ShowShardDetails:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: >-
              An optional flag that can be included in the request to retrieve
              information about the individual shard(s).
    title: DescribeClustersRequest
    type: object
  DescribeClustersResponse:
    properties:
      Clusters:
        allOf:
          - $ref: '#/definitions/ClusterList'
          - description: A list of clusters
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
    type: object
  DescribeEngineVersionsRequest:
    properties:
      DefaultOnly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              If true, specifies that only the default version of the specified
              engine or engine and major version combination is to be returned.
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Redis engine version
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ParameterGroupFamily:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of a specific parameter group family to return details
              for.
    title: DescribeEngineVersionsRequest
    type: object
  DescribeEngineVersionsResponse:
    properties:
      EngineVersions:
        allOf:
          - $ref: '#/definitions/EngineVersionInfoList'
          - description: >-
              A list of engine version details. Each element in the list
              contains detailed information about one engine version.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
    type: object
  DescribeEventsRequest:
    properties:
      Duration:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of minutes worth of events to retrieve.
      EndTime:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: >-
              The end of the time interval for which to retrieve events,
              specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      SourceName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The identifier of the event source for which events are returned.
              If not specified, all sources are included in the response.
      SourceType:
        allOf:
          - $ref: '#/definitions/SourceType'
          - description: >-
              The event source to retrieve events for. If no value is specified,
              all events are returned.
      StartTime:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: >-
              The beginning of the time interval to retrieve events for,
              specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
    title: DescribeEventsRequest
    type: object
  DescribeEventsResponse:
    properties:
      Events:
        allOf:
          - $ref: '#/definitions/EventList'
          - description: >-
              A list of events. Each element in the list contains detailed
              information about one event.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
    type: object
  DescribeParameterGroupsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of a specific parameter group to return details for.
    title: DescribeParameterGroupsRequest
    type: object
  DescribeParameterGroupsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ParameterGroups:
        allOf:
          - $ref: '#/definitions/ParameterGroupList'
          - description: >-
              A list of parameter groups. Each element in the list contains
              detailed information about one parameter group.
    type: object
  DescribeParametersRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: he name of a specific parameter group to return details for.
    required:
      - ParameterGroupName
    title: DescribeParametersRequest
    type: object
  DescribeParametersResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      Parameters:
        allOf:
          - $ref: '#/definitions/ParametersList'
          - description: >-
              A list of parameters specific to a particular parameter group.
              Each element in the list contains detailed information about one
              parameter.
    type: object
  DescribeServiceUpdatesRequest:
    properties:
      ClusterNames:
        allOf:
          - $ref: '#/definitions/ClusterNameList'
          - description: The list of cluster names to identify service updates to apply
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ServiceUpdateName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The unique ID of the service update to describe.
      Status:
        allOf:
          - $ref: '#/definitions/ServiceUpdateStatusList'
          - description: The status(es) of the service updates to filter on
    title: DescribeServiceUpdatesRequest
    type: object
  DescribeServiceUpdatesResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ServiceUpdates:
        allOf:
          - $ref: '#/definitions/ServiceUpdateList'
          - description: A list of service updates
    type: object
  DescribeSnapshotsRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A user-supplied cluster identifier. If this parameter is
              specified, only snapshots associated with that specific cluster
              are described.
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      ShowDetail:
        allOf:
          - $ref: '#/definitions/BooleanOptional'
          - description: >-
              A Boolean value which if true, the shard configuration is included
              in the snapshot description.
      SnapshotName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A user-supplied name of the snapshot. If this parameter is
              specified, only this named snapshot is described.
      Source:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              If set to system, the output shows snapshots that were
              automatically created by MemoryDB. If set to user the output shows
              snapshots that were manually created. If omitted, the output shows
              both automatically and manually created snapshots.
    title: DescribeSnapshotsRequest
    type: object
  DescribeSnapshotsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      Snapshots:
        allOf:
          - $ref: '#/definitions/SnapshotList'
          - description: >-
              A list of snapshots. Each item in the list contains detailed
              information about one snapshot.
    type: object
  DescribeSubnetGroupsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group to return details for.
    title: DescribeSubnetGroupsRequest
    type: object
  DescribeSubnetGroupsResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      SubnetGroups:
        allOf:
          - $ref: '#/definitions/SubnetGroupList'
          - description: >-
              A list of subnet groups. Each element in the list contains
              detailed information about one group.
    type: object
  DescribeUsersRequest:
    properties:
      Filters:
        allOf:
          - $ref: '#/definitions/FilterList'
          - description: Filter to determine the list of users to return.
      MaxResults:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The maximum number of records to include in the response. If more
              records exist than the specified MaxResults value, a token is
              included in the response so that the remaining results can be
              retrieved.
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      UserName:
        allOf:
          - $ref: '#/definitions/UserName'
          - description: The name of the user
    title: DescribeUsersRequest
    type: object
  DescribeUsersResponse:
    properties:
      NextToken:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              An optional argument to pass in case the total number of records
              exceeds the value of MaxResults. If nextToken is returned, there
              are more results available. The value of nextToken is a unique
              pagination token for each page. Make the call again using the
              returned token to retrieve the next page. Keep all other arguments
              unchanged. 
      Users:
        allOf:
          - $ref: '#/definitions/UserList'
          - description: A list of users.
    type: object
  Double:
    format: double
    type: number
  DuplicateUserNameFault: {}
  Endpoint:
    description: >-
      Represents the information required for client programs to connect to the
      cluster and its nodes.
    properties:
      Address:
        allOf:
          - $ref: '#/definitions/String'
          - description: The DNS hostname of the node.
      Port:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The port number that the engine is listening on.
    type: object
  EngineVersionInfo:
    description: Provides details of the Redis engine version
    properties:
      EnginePatchVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The patched engine version
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The engine version
      ParameterGroupFamily:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Specifies the name of the parameter group family to which the
              engine default parameters apply.
    type: object
  EngineVersionInfoList:
    items:
      $ref: '#/definitions/EngineVersionInfo'
    type: array
  Event:
    description: >-
      Represents a single occurrence of something interesting within the system.
      Some examples of events are creating a cluster or adding or removing a
      node.
    properties:
      Date:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: The date and time when the event occurred.
      Message:
        allOf:
          - $ref: '#/definitions/String'
          - description: The text of the event.
      SourceName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name for the source of the event. For example, if the event
              occurred at the cluster level, the identifier would be the name of
              the cluster.
      SourceType:
        allOf:
          - $ref: '#/definitions/SourceType'
          - description: >-
              Specifies the origin of this event - a cluster, a parameter group,
              a security group, etc.
    type: object
  EventList:
    items:
      $ref: '#/definitions/Event'
    type: array
  FailoverShardRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The cluster being failed over
      ShardName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the shard
    required:
      - ClusterName
      - ShardName
    title: FailoverShardRequest
    type: object
  FailoverShardResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The cluster being failed over
    type: object
  Filter:
    description: >-
      Used to streamline results of a search based on the property being
      filtered.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/FilterName'
          - description: 'The property being filtered. For example, UserName.'
      Values:
        allOf:
          - $ref: '#/definitions/FilterValueList'
          - description: 'The property values to filter on. For example, "user-123".'
    required:
      - Name
      - Values
    type: object
  FilterList:
    items:
      $ref: '#/definitions/Filter'
    type: array
  FilterName:
    pattern: .*\S.*
    type: string
  FilterValue:
    pattern: .*\S.*
    type: string
  FilterValueList:
    items:
      $ref: '#/definitions/FilterValue'
    minItems: 1
    type: array
  InputAuthenticationType:
    enum:
      - password
    type: string
  InsufficientClusterCapacityFault: {}
  Integer:
    type: integer
  IntegerOptional:
    type: integer
  InvalidACLStateFault: {}
  InvalidARNFault: {}
  InvalidClusterStateFault: {}
  InvalidCredentialsException: {}
  InvalidKMSKeyFault: {}
  InvalidNodeStateFault: {}
  InvalidParameterCombinationException: {}
  InvalidParameterGroupStateFault: {}
  InvalidParameterValueException: {}
  InvalidSnapshotStateFault: {}
  InvalidSubnet: {}
  InvalidUserStateFault: {}
  InvalidVPCNetworkStateFault: {}
  KeyList:
    items:
      $ref: '#/definitions/String'
    type: array
  KmsKeyId:
    maxLength: 2048
    type: string
  ListAllowedNodeTypeUpdatesRequest:
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the cluster you want to scale. MemoryDB uses the
              cluster name to identify the current node type being used by this
              cluster, and from that to create a list of node types you can
              scale up to.
    required:
      - ClusterName
    title: ListAllowedNodeTypeUpdatesRequest
    type: object
  ListAllowedNodeTypeUpdatesResponse:
    properties:
      ScaleDownNodeTypes:
        allOf:
          - $ref: '#/definitions/NodeTypeList'
          - description: A list node types which you can use to scale down your cluster.
      ScaleUpNodeTypes:
        allOf:
          - $ref: '#/definitions/NodeTypeList'
          - description: A list node types which you can use to scale up your cluster.
    type: object
  ListTagsRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the resource for which you want
              the list of tags
    required:
      - ResourceArn
    title: ListTagsRequest
    type: object
  ListTagsResponse:
    properties:
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: A list of tags as key-value pairs.
    type: object
  NoOperationFault: {}
  Node:
    description: >-
      Represents an individual node within a cluster. Each node runs its own
      instance of the cluster's protocol-compliant caching software.
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Availability Zone in which the node resides
      CreateTime:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: The date and time when the node was created.
      Endpoint:
        allOf:
          - $ref: '#/definitions/Endpoint'
          - description: The hostname for connecting to this node.
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The node identifier. A node name is a numeric identifier (0001,
              0002, etc.). The combination of cluster name, shard name and node
              name uniquely identifies every node used in a customer's Amazon
              account.
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: The status of the service update on the node
    type: object
  NodeList:
    items:
      $ref: '#/definitions/Node'
    type: array
  NodeQuotaForClusterExceededFault: {}
  NodeQuotaForCustomerExceededFault: {}
  NodeTypeList:
    items:
      $ref: '#/definitions/String'
    type: array
  Parameter:
    description: >-
      Describes an individual setting that controls some aspect of MemoryDB
      behavior.
    properties:
      AllowedValues:
        allOf:
          - $ref: '#/definitions/String'
          - description: The valid range of values for the parameter.
      DataType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The parameter's data type
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description of the parameter
      MinimumEngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The earliest engine version to which the parameter can apply.
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter
      Value:
        allOf:
          - $ref: '#/definitions/String'
          - description: The value of the parameter
    type: object
  ParameterGroup:
    description: >-
      Represents the output of a CreateParameterGroup operation. A parameter
      group represents a combination of specific values for the parameters that
      are passed to the engine software during startup.
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: The Amazon Resource Name (ARN) of the parameter group
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description of the parameter group
      Family:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The name of the parameter group family that this parameter group
              is compatible with.
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group
    type: object
  ParameterGroupAlreadyExistsFault: {}
  ParameterGroupList:
    items:
      $ref: '#/definitions/ParameterGroup'
    type: array
  ParameterGroupNotFoundFault: {}
  ParameterGroupQuotaExceededFault: {}
  ParameterNameList:
    items:
      $ref: '#/definitions/String'
    type: array
  ParameterNameValue:
    description: >-
      Describes a name-value pair that is used to update the value of a
      parameter.
    properties:
      ParameterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter
      ParameterValue:
        allOf:
          - $ref: '#/definitions/String'
          - description: The value of the parameter
    type: object
  ParameterNameValueList:
    items:
      $ref: '#/definitions/ParameterNameValue'
    type: array
  ParametersList:
    items:
      $ref: '#/definitions/Parameter'
    type: array
  PasswordListInput:
    items:
      $ref: '#/definitions/String'
    minItems: 1
    type: array
  PendingModifiedServiceUpdate:
    description: >-
      Update action that has yet to be processed for the corresponding
      apply/stop request
    properties:
      ServiceUpdateName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The unique ID of the service update
      Status:
        allOf:
          - $ref: '#/definitions/ServiceUpdateStatus'
          - description: The status of the service update
    type: object
  PendingModifiedServiceUpdateList:
    items:
      $ref: '#/definitions/PendingModifiedServiceUpdate'
    type: array
  ReplicaConfigurationRequest:
    description: A request to configure the number of replicas in a shard
    properties:
      ReplicaCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of replicas to scale up or down to
    type: object
  ResetParameterGroupRequest:
    properties:
      AllParameters:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: >-
              If true, all parameters in the parameter group are reset to their
              default values. If false, only the parameters listed by
              ParameterNames are reset to their default values.
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group to reset.
      ParameterNames:
        allOf:
          - $ref: '#/definitions/ParameterNameList'
          - description: >-
              An array of parameter names to reset to their default values. If
              AllParameters is true, do not use ParameterNames. If AllParameters
              is false, you must specify the name of at least one parameter to
              reset.
    required:
      - ParameterGroupName
    title: ResetParameterGroupRequest
    type: object
  ResetParameterGroupResponse:
    properties:
      ParameterGroup:
        allOf:
          - $ref: '#/definitions/ParameterGroup'
          - description: The parameter group being reset.
    type: object
  ReshardingStatus:
    description: The status of the online resharding
    properties:
      SlotMigration:
        allOf:
          - $ref: '#/definitions/SlotMigration'
          - description: The status of the online resharding slot migration
    type: object
  SecurityGroupIdsList:
    items:
      $ref: '#/definitions/String'
    type: array
  SecurityGroupMembership:
    description: Represents a single security group and its status.
    properties:
      SecurityGroupId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The identifier of the security group.
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The status of the security group membership. The status changes
              whenever a security group is modified, or when the security groups
              assigned to a cluster are modified.
    type: object
  SecurityGroupMembershipList:
    items:
      $ref: '#/definitions/SecurityGroupMembership'
    type: array
  ServiceLinkedRoleNotFoundFault: {}
  ServiceUpdate:
    description: An update that you can apply to your MemoryDB clusters.
    properties:
      AutoUpdateStartDate:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: The date at which the service update will be automatically applied
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster to which the service update applies
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: Provides details of the service update
      NodesUpdated:
        allOf:
          - $ref: '#/definitions/String'
          - description: A list of nodes updated by the service update
      ReleaseDate:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: The date when the service update is initially available
      ServiceUpdateName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The unique ID of the service update
      Status:
        allOf:
          - $ref: '#/definitions/ServiceUpdateStatus'
          - description: The status of the service update
      Type:
        allOf:
          - $ref: '#/definitions/ServiceUpdateType'
          - description: Reflects the nature of the service update
    type: object
  ServiceUpdateList:
    items:
      $ref: '#/definitions/ServiceUpdate'
    type: array
  ServiceUpdateNotFoundFault: {}
  ServiceUpdateRequest:
    description: A request to apply a service update
    properties:
      ServiceUpdateNameToApply:
        allOf:
          - $ref: '#/definitions/String'
          - description: The unique ID of the service update
    type: object
  ServiceUpdateStatus:
    enum:
      - available
      - in-progress
      - complete
      - scheduled
    type: string
  ServiceUpdateStatusList:
    items:
      $ref: '#/definitions/ServiceUpdateStatus'
    maxItems: 4
    type: array
  ServiceUpdateType:
    enum:
      - security-update
    type: string
  Shard:
    description: >-
      Represents a collection of nodes in a cluster. One node in the node group
      is the read/write primary node. All the other nodes are read-only Replica
      nodes.
    properties:
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the shard
      Nodes:
        allOf:
          - $ref: '#/definitions/NodeList'
          - description: >-
              A list containing information about individual nodes within the
              shard
      NumberOfNodes:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of nodes in the shard
      Slots:
        allOf:
          - $ref: '#/definitions/String'
          - description: The keyspace for this shard.
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The current state of this replication group - creating, available,
              modifying, deleting.
    type: object
  ShardConfiguration:
    description: >-
      Shard configuration options. Each shard configuration has the following:
      Slots and ReplicaCount.
    properties:
      ReplicaCount:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: The number of read replica nodes in this shard.
      Slots:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A string that specifies the keyspace for a particular node group.
              Keyspaces range from 0 to 16,383. The string is in the format
              startkey-endkey.
    type: object
  ShardConfigurationRequest:
    description: A request to configure the sharding properties of a cluster
    properties:
      ShardCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of shards in the cluster
    type: object
  ShardDetail:
    description: Provides details of a shard in a snapshot
    properties:
      Configuration:
        allOf:
          - $ref: '#/definitions/ShardConfiguration'
          - description: The configuration details of the shard
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the shard
      Size:
        allOf:
          - $ref: '#/definitions/String'
          - description: The size of the shard's snapshot
      SnapshotCreationTime:
        allOf:
          - $ref: '#/definitions/TStamp'
          - description: The date and time that the shard's snapshot was created
    type: object
  ShardDetails:
    items:
      $ref: '#/definitions/ShardDetail'
    type: array
  ShardList:
    items:
      $ref: '#/definitions/Shard'
    type: array
  ShardNotFoundFault: {}
  ShardsPerClusterQuotaExceededFault: {}
  SlotMigration:
    description: Represents the progress of an online resharding operation.
    properties:
      ProgressPercentage:
        allOf:
          - $ref: '#/definitions/Double'
          - description: The percentage of the slot migration that is complete.
    type: object
  Snapshot:
    description: >-
      Represents a copy of an entire cluster as of the time when the snapshot
      was taken.
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ARN (Amazon Resource Name) of the snapshot.
      ClusterConfiguration:
        allOf:
          - $ref: '#/definitions/ClusterConfiguration'
          - description: The configuration of the cluster from which the snapshot was taken
      KmsKeyId:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the snapshot
      Source:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Indicates whether the snapshot is from an automatic backup
              (automated) or was created manually (manual).
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The status of the snapshot. Valid values: creating | available |
              restoring | copying | deleting.
    type: object
  SnapshotAlreadyExistsFault: {}
  SnapshotArnsList:
    items:
      $ref: '#/definitions/String'
    type: array
  SnapshotList:
    items:
      $ref: '#/definitions/Snapshot'
    type: array
  SnapshotNotFoundFault: {}
  SnapshotQuotaExceededFault: {}
  SourceType:
    enum:
      - node
      - parameter-group
      - subnet-group
      - cluster
      - user
      - acl
    type: string
  String:
    type: string
  Subnet:
    description: >-
      Represents the subnet associated with a cluster. This parameter refers to
      subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with
      MemoryDB.
    properties:
      AvailabilityZone:
        allOf:
          - $ref: '#/definitions/AvailabilityZone'
          - description: The Availability Zone where the subnet resides
      Identifier:
        allOf:
          - $ref: '#/definitions/String'
          - description: The unique identifier for the subnet.
    type: object
  SubnetGroup:
    description: >-
      <p>Represents the output of one of the following operations:</p> <ul> <li>
      <p>CreateSubnetGroup</p> </li> <li> <p>UpdateSubnetGroup</p> </li> </ul>
      <p>A subnet group is a collection of subnets (typically private) that you
      can designate for your clusters running in an Amazon Virtual Private Cloud
      (VPC) environment.</p>
    properties:
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: The ARN (Amazon Resource Name) of the subnet group.
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description of the subnet group
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group
      Subnets:
        allOf:
          - $ref: '#/definitions/SubnetList'
          - description: A list of subnets associated with the subnet group.
      VpcId:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
              group.
    type: object
  SubnetGroupAlreadyExistsFault: {}
  SubnetGroupInUseFault: {}
  SubnetGroupList:
    items:
      $ref: '#/definitions/SubnetGroup'
    type: array
  SubnetGroupNotFoundFault: {}
  SubnetGroupQuotaExceededFault: {}
  SubnetIdentifierList:
    items:
      $ref: '#/definitions/String'
    type: array
  SubnetInUse: {}
  SubnetList:
    items:
      $ref: '#/definitions/Subnet'
    type: array
  SubnetNotAllowedFault: {}
  SubnetQuotaExceededFault: {}
  TStamp:
    format: date-time
    type: string
  Tag:
    description: >-
      A tag that can be added to an MemoryDB resource. Tags are composed of a
      Key/Value pair. You can use tags to categorize and track all your MemoryDB
      resources. When you add or remove tags on clusters, those actions will be
      replicated to all nodes in the cluster. A tag with a null Value is
      permitted. For more information, see <a
      href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging-resources.html">Tagging
      your MemoryDB resources</a> 
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/String'
          - description: The key for the tag. May not be null.
      Value:
        allOf:
          - $ref: '#/definitions/String'
          - description: The tag's value. May be null.
    type: object
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 200
    type: array
  TagNotFoundFault: {}
  TagQuotaPerResourceExceeded: {}
  TagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to which the tags
              are to be added
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: >-
              A list of tags to be added to this resource. A tag is a key-value
              pair. A tag key must be accompanied by a tag value, although null
              is accepted.
    required:
      - ResourceArn
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties:
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: A list of tags as key-value pairs.
    type: object
  TargetBucket:
    maxLength: 255
    pattern: '^[A-Za-z0-9._-]+$'
    type: string
  TestFailoverNotAvailableFault: {}
  UnprocessedCluster:
    description: A cluster whose updates have failed
    properties:
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error message associated with the update failure
      ErrorType:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error type associated with the update failure
    type: object
  UnprocessedClusterList:
    items:
      $ref: '#/definitions/UnprocessedCluster'
    type: array
  UntagResourceRequest:
    properties:
      ResourceArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The Amazon Resource Name (ARN) of the resource to which the tags
              are to be removed
      TagKeys:
        allOf:
          - $ref: '#/definitions/KeyList'
          - description: The list of keys of the tags that are to be removed
    required:
      - ResourceArn
      - TagKeys
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties:
      TagList:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The list of tags removed
    type: object
  UpdateACLRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the Access Control List
      UserNamesToAdd:
        allOf:
          - $ref: '#/definitions/UserNameListInput'
          - description: The list of users to add to the Access Control List
      UserNamesToRemove:
        allOf:
          - $ref: '#/definitions/UserNameListInput'
          - description: The list of users to remove from the Access Control List
    required:
      - ACLName
    title: UpdateACLRequest
    type: object
  UpdateACLResponse:
    properties:
      ACL:
        allOf:
          - $ref: '#/definitions/ACL'
          - description: The updated Access Control List
    type: object
  UpdateClusterRequest:
    properties:
      ACLName:
        allOf:
          - $ref: '#/definitions/ACLName'
          - description: The Access Control List that is associated with the cluster
      ClusterName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the cluster to update
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: The description of the cluster to update
      EngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The upgraded version of the engine to be run on the nodes. You can
              upgrade to a newer engine version, but you cannot downgrade to an
              earlier engine version. If you want to use an earlier engine
              version, you must delete the existing cluster and create it anew
              with the earlier engine version.
      MaintenanceWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: The maintenance window to update
      NodeType:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              A valid node type that you want to scale this cluster up or down
              to.
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group to update
      ReplicaConfiguration:
        allOf:
          - $ref: '#/definitions/ReplicaConfigurationRequest'
          - description: The number of replicas that will reside in each shard
      SecurityGroupIds:
        allOf:
          - $ref: '#/definitions/SecurityGroupIdsList'
          - description: The SecurityGroupIds to update
      ShardConfiguration:
        allOf:
          - $ref: '#/definitions/ShardConfigurationRequest'
          - description: The number of shards in the cluster
      SnapshotRetentionLimit:
        allOf:
          - $ref: '#/definitions/IntegerOptional'
          - description: >-
              The number of days for which MemoryDB retains automatic cluster
              snapshots before deleting them. For example, if you set
              SnapshotRetentionLimit to 5, a snapshot that was taken today is
              retained for 5 days before being deleted.
      SnapshotWindow:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The daily time range (in UTC) during which MemoryDB begins taking
              a daily snapshot of your cluster.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/String'
          - description: The SNS topic ARN to update
      SnsTopicStatus:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              The status of the Amazon SNS notification topic. Notifications are
              sent only if the status is active.
    required:
      - ClusterName
    title: UpdateClusterRequest
    type: object
  UpdateClusterResponse:
    properties:
      Cluster:
        allOf:
          - $ref: '#/definitions/Cluster'
          - description: The updated cluster
    type: object
  UpdateParameterGroupRequest:
    properties:
      ParameterGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the parameter group to update.
      ParameterNameValues:
        allOf:
          - $ref: '#/definitions/ParameterNameValueList'
          - description: >-
              An array of parameter names and values for the parameter update.
              You must supply at least one parameter name and value; subsequent
              arguments are optional. A maximum of 20 parameters may be updated
              per request.
    required:
      - ParameterGroupName
      - ParameterNameValues
    title: UpdateParameterGroupRequest
    type: object
  UpdateParameterGroupResponse:
    properties:
      ParameterGroup:
        allOf:
          - $ref: '#/definitions/ParameterGroup'
          - description: The updated parameter group
    type: object
  UpdateSubnetGroupRequest:
    properties:
      Description:
        allOf:
          - $ref: '#/definitions/String'
          - description: A description of the subnet group
      SubnetGroupName:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the subnet group
      SubnetIds:
        allOf:
          - $ref: '#/definitions/SubnetIdentifierList'
          - description: The EC2 subnet IDs for the subnet group.
    required:
      - SubnetGroupName
    title: UpdateSubnetGroupRequest
    type: object
  UpdateSubnetGroupResponse:
    properties:
      SubnetGroup:
        allOf:
          - $ref: '#/definitions/SubnetGroup'
          - description: The updated subnet group
    type: object
  UpdateUserRequest:
    properties:
      AccessString:
        allOf:
          - $ref: '#/definitions/AccessString'
          - description: Access permissions string used for this user.
      AuthenticationMode:
        allOf:
          - $ref: '#/definitions/AuthenticationMode'
          - description: >-
              Denotes the user's authentication properties, such as whether it
              requires a password to authenticate.
      UserName:
        allOf:
          - $ref: '#/definitions/UserName'
          - description: The name of the user
    required:
      - UserName
    title: UpdateUserRequest
    type: object
  UpdateUserResponse:
    properties:
      User:
        allOf:
          - $ref: '#/definitions/User'
          - description: The updated user
    type: object
  User:
    description: >-
      You create users and assign them specific permissions by using an access
      string. You assign the users to Access Control Lists aligned with a
      specific role (administrators, human resources) that are then deployed to
      one or more MemoryDB clusters.
    properties:
      ACLNames:
        allOf:
          - $ref: '#/definitions/ACLNameList'
          - description: The names of the Access Control Lists to which the user belongs
      ARN:
        allOf:
          - $ref: '#/definitions/String'
          - description: 'The Amazon Resource Name (ARN) of the user. '
      AccessString:
        allOf:
          - $ref: '#/definitions/String'
          - description: Access permissions string used for this user.
      Authentication:
        allOf:
          - $ref: '#/definitions/Authentication'
          - description: Denotes whether the user requires a password to authenticate.
      MinimumEngineVersion:
        allOf:
          - $ref: '#/definitions/String'
          - description: The minimum engine version supported for the user
      Name:
        allOf:
          - $ref: '#/definitions/String'
          - description: The name of the user
      Status:
        allOf:
          - $ref: '#/definitions/String'
          - description: >-
              Indicates the user status. Can be "active", "modifying" or
              "deleting".
    type: object
  UserAlreadyExistsFault: {}
  UserList:
    items:
      $ref: '#/definitions/User'
    type: array
  UserName:
    minLength: 1
    pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
    type: string
  UserNameList:
    items:
      $ref: '#/definitions/UserName'
    type: array
  UserNameListInput:
    items:
      $ref: '#/definitions/UserName'
    minItems: 1
    type: array
  UserNotFoundFault: {}
  UserQuotaExceededFault: {}
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/memory-db/'
host: memory-db.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database
    that delivers ultra-fast performance and Multi-AZ durability for modern
    applications built using microservices architectures. MemoryDB stores the
    entire database in-memory, enabling low latency and high throughput data
    access. It is compatible with Redis, a popular open source data store,
    enabling you to leverage Redis’ flexible and friendly data structures, APIs,
    and commands.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon MemoryDB
  version: '2021-01-01'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: memorydb
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/memorydb-2021-01-01.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: memorydb
paths:
  /#X-Amz-Target=AmazonMemoryDB.BatchUpdateCluster:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Apply the service update to a list of clusters supplied. For more
        information on service updates and applying them, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/managing-updates.html#applying-updates">Applying
        the service updates</a>.
      operationId: BatchUpdateCluster
      parameters:
        - enum:
            - AmazonMemoryDB.BatchUpdateCluster
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchUpdateClusterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchUpdateClusterResponse'
        '480':
          description: ServiceUpdateNotFoundFault
          schema:
            $ref: '#/definitions/ServiceUpdateNotFoundFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=AmazonMemoryDB.CopySnapshot:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Makes a copy of an existing snapshot.
      operationId: CopySnapshot
      parameters:
        - enum:
            - AmazonMemoryDB.CopySnapshot
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CopySnapshotRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopySnapshotResponse'
        '480':
          description: SnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/SnapshotAlreadyExistsFault'
        '481':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '482':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
        '483':
          description: InvalidSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidSnapshotStateFault'
        '484':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '485':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '487':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
  /#X-Amz-Target=AmazonMemoryDB.CreateACL:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an Access Control List. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html">Authenticating
        users with Access Contol Lists (ACLs)</a>.
      operationId: CreateACL
      parameters:
        - enum:
            - AmazonMemoryDB.CreateACL
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateACLRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateACLResponse'
        '480':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '481':
          description: DuplicateUserNameFault
          schema:
            $ref: '#/definitions/DuplicateUserNameFault'
        '482':
          description: ACLAlreadyExistsFault
          schema:
            $ref: '#/definitions/ACLAlreadyExistsFault'
        '483':
          description: DefaultUserRequired
          schema:
            $ref: '#/definitions/DefaultUserRequired'
        '484':
          description: ACLQuotaExceededFault
          schema:
            $ref: '#/definitions/ACLQuotaExceededFault'
        '485':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '486':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
  /#X-Amz-Target=AmazonMemoryDB.CreateCluster:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a cluster. All nodes in the cluster run the same
        protocol-compliant engine software.
      operationId: CreateCluster
      parameters:
        - enum:
            - AmazonMemoryDB.CreateCluster
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateClusterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        '480':
          description: ClusterAlreadyExistsFault
          schema:
            $ref: '#/definitions/ClusterAlreadyExistsFault'
        '481':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '482':
          description: ClusterQuotaForCustomerExceededFault
          schema:
            $ref: '#/definitions/ClusterQuotaForCustomerExceededFault'
        '483':
          description: NodeQuotaForClusterExceededFault
          schema:
            $ref: '#/definitions/NodeQuotaForClusterExceededFault'
        '484':
          description: NodeQuotaForCustomerExceededFault
          schema:
            $ref: '#/definitions/NodeQuotaForCustomerExceededFault'
        '485':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '486':
          description: InsufficientClusterCapacityFault
          schema:
            $ref: '#/definitions/InsufficientClusterCapacityFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '489':
          description: ShardsPerClusterQuotaExceededFault
          schema:
            $ref: '#/definitions/ShardsPerClusterQuotaExceededFault'
        '490':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '491':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '492':
          description: InvalidCredentialsException
          schema:
            $ref: '#/definitions/InvalidCredentialsException'
        '493':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
        '494':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '495':
          description: InvalidACLStateFault
          schema:
            $ref: '#/definitions/InvalidACLStateFault'
  /#X-Amz-Target=AmazonMemoryDB.CreateParameterGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a new MemoryDB parameter group. A parameter group is a
        collection of parameters and their values that are applied to all of the
        nodes in any cluster. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/parametergroups.html">Configuring
        engine parameters using parameter groups</a>. 
      operationId: CreateParameterGroup
      parameters:
        - enum:
            - AmazonMemoryDB.CreateParameterGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateParameterGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateParameterGroupResponse'
        '480':
          description: ParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/ParameterGroupQuotaExceededFault'
        '481':
          description: ParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/ParameterGroupAlreadyExistsFault'
        '482':
          description: InvalidParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidParameterGroupStateFault'
        '483':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '484':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
        '485':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.CreateSnapshot:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a copy of an entire cluster at a specific moment in time.
      operationId: CreateSnapshot
      parameters:
        - enum:
            - AmazonMemoryDB.CreateSnapshot
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSnapshotRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSnapshotResponse'
        '480':
          description: SnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/SnapshotAlreadyExistsFault'
        '481':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '482':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
        '484':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '485':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '486':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '487':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
  /#X-Amz-Target=AmazonMemoryDB.CreateSubnetGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a subnet group. A subnet group is a collection of subnets
        (typically private) that you can designate for your clusters running in
        an Amazon Virtual Private Cloud (VPC) environment. When you create a
        cluster in an Amazon VPC, you must specify a subnet group. MemoryDB uses
        that subnet group to choose a subnet and IP addresses within that subnet
        to associate with your nodes. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/subnetgroups.html">Subnets
        and subnet groups</a>.
      operationId: CreateSubnetGroup
      parameters:
        - enum:
            - AmazonMemoryDB.CreateSubnetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSubnetGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSubnetGroupResponse'
        '480':
          description: SubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/SubnetGroupAlreadyExistsFault'
        '481':
          description: SubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/SubnetGroupQuotaExceededFault'
        '482':
          description: SubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/SubnetQuotaExceededFault'
        '483':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '484':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '485':
          description: SubnetNotAllowedFault
          schema:
            $ref: '#/definitions/SubnetNotAllowedFault'
        '486':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
  /#X-Amz-Target=AmazonMemoryDB.CreateUser:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates a MemoryDB user. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html">Authenticating
        users with Access Contol Lists (ACLs)</a>.
      operationId: CreateUser
      parameters:
        - enum:
            - AmazonMemoryDB.CreateUser
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '480':
          description: UserAlreadyExistsFault
          schema:
            $ref: '#/definitions/UserAlreadyExistsFault'
        '481':
          description: UserQuotaExceededFault
          schema:
            $ref: '#/definitions/UserQuotaExceededFault'
        '482':
          description: DuplicateUserNameFault
          schema:
            $ref: '#/definitions/DuplicateUserNameFault'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '485':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
  /#X-Amz-Target=AmazonMemoryDB.DeleteACL:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an Access Control List. The ACL must first be disassociated from
        the cluster before it can be deleted. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html">Authenticating
        users with Access Contol Lists (ACLs)</a>.
      operationId: DeleteACL
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteACL
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteACLRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteACLResponse'
        '480':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '481':
          description: InvalidACLStateFault
          schema:
            $ref: '#/definitions/InvalidACLStateFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=AmazonMemoryDB.DeleteCluster:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes a cluster. It also deletes all associated nodes and node
        endpoints
      operationId: DeleteCluster
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteCluster
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '482':
          description: SnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/SnapshotAlreadyExistsFault'
        '483':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DeleteParameterGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes the specified parameter group. You cannot delete a parameter
        group if it is associated with any clusters. You cannot delete the
        default parameter groups in your account.
      operationId: DeleteParameterGroup
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteParameterGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParameterGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParameterGroupResponse'
        '480':
          description: InvalidParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidParameterGroupStateFault'
        '481':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '482':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DeleteSnapshot:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes an existing snapshot. When you receive a successful response
        from this operation, MemoryDB immediately begins deleting the snapshot;
        you cannot cancel or revert this operation.
      operationId: DeleteSnapshot
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteSnapshot
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSnapshotRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSnapshotResponse'
        '480':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '481':
          description: InvalidSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidSnapshotStateFault'
        '482':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DeleteSubnetGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes a subnet group. You cannot delete a default subnet group or one
        that is associated with any clusters.
      operationId: DeleteSubnetGroup
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteSubnetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSubnetGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSubnetGroupResponse'
        '480':
          description: SubnetGroupInUseFault
          schema:
            $ref: '#/definitions/SubnetGroupInUseFault'
        '481':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '482':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
  /#X-Amz-Target=AmazonMemoryDB.DeleteUser:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes a user. The user will be removed from all ACLs and in turn
        removed from all clusters.
      operationId: DeleteUser
      parameters:
        - enum:
            - AmazonMemoryDB.DeleteUser
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        '480':
          description: InvalidUserStateFault
          schema:
            $ref: '#/definitions/InvalidUserStateFault'
        '481':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeACLs:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of ACLs
      operationId: DescribeACLs
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeACLs
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeACLsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeACLsResponse'
        '480':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeClusters:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns information about all provisioned clusters if no cluster
        identifier is specified, or about a specific cluster if a cluster name
        is supplied.
      operationId: DescribeClusters
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeClusters
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClustersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeClustersResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeEngineVersions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of the available Redis engine versions.
      operationId: DescribeEngineVersions
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeEngineVersions
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEngineVersionsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineVersionsResponse'
        '480':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeEvents:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns events related to clusters, security groups, and parameter
        groups. You can obtain events specific to a particular cluster, security
        group, or parameter group by providing the name as a parameter. By
        default, only the events occurring within the last hour are returned;
        however, you can retrieve up to 14 days' worth of events if necessary.
      operationId: DescribeEvents
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeEvents
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventsResponse'
        '480':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeParameterGroups:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of parameter group descriptions. If a parameter group
        name is specified, the list contains only the descriptions for that
        group.
      operationId: DescribeParameterGroups
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeParameterGroups
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeParameterGroupsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeParameterGroupsResponse'
        '480':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeParameters:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns the detailed parameter list for a particular parameter group.
      operationId: DescribeParameters
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeParameters
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeParametersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeParametersResponse'
        '480':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeServiceUpdates:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns details of the service updates
      operationId: DescribeServiceUpdates
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeServiceUpdates
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServiceUpdatesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeServiceUpdatesResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeSnapshots:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns information about cluster snapshots. By default,
        DescribeSnapshots lists all of your snapshots; it can optionally
        describe a single snapshot, or just the snapshots associated with a
        particular cluster.
      operationId: DescribeSnapshots
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeSnapshots
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSnapshotsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSnapshotsResponse'
        '480':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.DescribeSubnetGroups:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns a list of subnet group descriptions. If a subnet group name is
        specified, the list contains only the description of that group.
      operationId: DescribeSubnetGroups
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeSubnetGroups
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSubnetGroupsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSubnetGroupsResponse'
        '480':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
  /#X-Amz-Target=AmazonMemoryDB.DescribeUsers:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of users.
      operationId: DescribeUsers
      parameters:
        - enum:
            - AmazonMemoryDB.DescribeUsers
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeUsersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUsersResponse'
        '480':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '481':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.FailoverShard:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Used to failover a shard
      operationId: FailoverShard
      parameters:
        - enum:
            - AmazonMemoryDB.FailoverShard
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FailoverShardRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FailoverShardResponse'
        '480':
          description: APICallRateForCustomerExceededFault
          schema:
            $ref: '#/definitions/APICallRateForCustomerExceededFault'
        '481':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '482':
          description: ShardNotFoundFault
          schema:
            $ref: '#/definitions/ShardNotFoundFault'
        '483':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '484':
          description: TestFailoverNotAvailableFault
          schema:
            $ref: '#/definitions/TestFailoverNotAvailableFault'
        '485':
          description: InvalidKMSKeyFault
          schema:
            $ref: '#/definitions/InvalidKMSKeyFault'
        '486':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '487':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.ListAllowedNodeTypeUpdates:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all available node types that you can scale to from your cluster's
        current node type. When you use the UpdateCluster operation to scale
        your cluster, the value of the NodeType parameter must be one of the
        node types returned by this operation.
      operationId: ListAllowedNodeTypeUpdates
      parameters:
        - enum:
            - AmazonMemoryDB.ListAllowedNodeTypeUpdates
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAllowedNodeTypeUpdatesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAllowedNodeTypeUpdatesResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
  /#X-Amz-Target=AmazonMemoryDB.ListTags:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Lists all tags currently on a named resource. A tag is a key-value pair
        where the key and value are case-sensitive. You can use tags to
        categorize and track your MemoryDB resources. For more information, see
        <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/Tagging-Resources.html">Tagging
        your MemoryDB resources</a> 
      operationId: ListTags
      parameters:
        - enum:
            - AmazonMemoryDB.ListTags
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '482':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '483':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '484':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '485':
          description: InvalidARNFault
          schema:
            $ref: '#/definitions/InvalidARNFault'
        '486':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '487':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '488':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
  /#X-Amz-Target=AmazonMemoryDB.ResetParameterGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Modifies the parameters of a parameter group to the engine or system
        default value. You can reset specific parameters by submitting a list of
        parameter names. To reset the entire parameter group, specify the
        AllParameters and ParameterGroupName parameters.
      operationId: ResetParameterGroup
      parameters:
        - enum:
            - AmazonMemoryDB.ResetParameterGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetParameterGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetParameterGroupResponse'
        '480':
          description: InvalidParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidParameterGroupStateFault'
        '481':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '482':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.TagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>A tag is a key-value pair where the key and value are case-sensitive.
        You can use tags to categorize and track all your MemoryDB resources.
        When you add or remove tags on clusters, those actions will be
        replicated to all nodes in the cluster. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/iam.resourcelevelpermissions.html">Resource-level
        permissions</a>.</p> <p>For example, you can use cost-allocation tags to
        your MemoryDB resources, Amazon generates a cost allocation report as a
        comma-separated value (CSV) file with your usage and costs aggregated by
        your tags. You can apply tags that represent business categories (such
        as cost centers, application names, or owners) to organize your costs
        across multiple services. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging.html">Using
        Cost Allocation Tags</a>.</p>
      operationId: TagResource
      parameters:
        - enum:
            - AmazonMemoryDB.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '482':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '483':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '484':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '485':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '486':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '487':
          description: TagQuotaPerResourceExceeded
          schema:
            $ref: '#/definitions/TagQuotaPerResourceExceeded'
        '488':
          description: InvalidARNFault
          schema:
            $ref: '#/definitions/InvalidARNFault'
        '489':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
  /#X-Amz-Target=AmazonMemoryDB.UntagResource:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Use this operation to remove tags on a resource
      operationId: UntagResource
      parameters:
        - enum:
            - AmazonMemoryDB.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '482':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '483':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '484':
          description: SnapshotNotFoundFault
          schema:
            $ref: '#/definitions/SnapshotNotFoundFault'
        '485':
          description: InvalidARNFault
          schema:
            $ref: '#/definitions/InvalidARNFault'
        '486':
          description: TagNotFoundFault
          schema:
            $ref: '#/definitions/TagNotFoundFault'
        '487':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '488':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '489':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
  /#X-Amz-Target=AmazonMemoryDB.UpdateACL:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Changes the list of users that belong to the Access Control List.
      operationId: UpdateACL
      parameters:
        - enum:
            - AmazonMemoryDB.UpdateACL
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateACLRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateACLResponse'
        '480':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '481':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '482':
          description: DuplicateUserNameFault
          schema:
            $ref: '#/definitions/DuplicateUserNameFault'
        '483':
          description: DefaultUserRequired
          schema:
            $ref: '#/definitions/DefaultUserRequired'
        '484':
          description: InvalidACLStateFault
          schema:
            $ref: '#/definitions/InvalidACLStateFault'
        '485':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.UpdateCluster:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Modifies the settings for a cluster. You can use this operation to
        change one or more cluster configuration settings by specifying the
        settings and the new values.
      operationId: UpdateCluster
      parameters:
        - enum:
            - AmazonMemoryDB.UpdateCluster
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClusterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateClusterResponse'
        '480':
          description: ClusterNotFoundFault
          schema:
            $ref: '#/definitions/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          schema:
            $ref: '#/definitions/InvalidClusterStateFault'
        '482':
          description: InvalidNodeStateFault
          schema:
            $ref: '#/definitions/InvalidNodeStateFault'
        '483':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '484':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '485':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '486':
          description: InvalidKMSKeyFault
          schema:
            $ref: '#/definitions/InvalidKMSKeyFault'
        '487':
          description: NodeQuotaForClusterExceededFault
          schema:
            $ref: '#/definitions/NodeQuotaForClusterExceededFault'
        '488':
          description: ClusterQuotaForCustomerExceededFault
          schema:
            $ref: '#/definitions/ClusterQuotaForCustomerExceededFault'
        '489':
          description: ShardsPerClusterQuotaExceededFault
          schema:
            $ref: '#/definitions/ShardsPerClusterQuotaExceededFault'
        '490':
          description: NodeQuotaForCustomerExceededFault
          schema:
            $ref: '#/definitions/NodeQuotaForCustomerExceededFault'
        '491':
          description: NoOperationFault
          schema:
            $ref: '#/definitions/NoOperationFault'
        '492':
          description: InvalidACLStateFault
          schema:
            $ref: '#/definitions/InvalidACLStateFault'
        '493':
          description: ACLNotFoundFault
          schema:
            $ref: '#/definitions/ACLNotFoundFault'
        '494':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '495':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.UpdateParameterGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates the parameters of a parameter group. You can modify up to 20
        parameters in a single request by submitting a list parameter name and
        value pairs.
      operationId: UpdateParameterGroup
      parameters:
        - enum:
            - AmazonMemoryDB.UpdateParameterGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateParameterGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateParameterGroupResponse'
        '480':
          description: ParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/ParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidParameterGroupStateFault'
        '482':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  /#X-Amz-Target=AmazonMemoryDB.UpdateSubnetGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates a subnet group. For more information, see <a
        href="https://docs.aws.amazon.com/MemoryDB/latest/devguide/ubnetGroups.Modifying.html">Updating
        a subnet group</a> 
      operationId: UpdateSubnetGroup
      parameters:
        - enum:
            - AmazonMemoryDB.UpdateSubnetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubnetGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSubnetGroupResponse'
        '480':
          description: SubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/SubnetGroupNotFoundFault'
        '481':
          description: SubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/SubnetQuotaExceededFault'
        '482':
          description: SubnetInUse
          schema:
            $ref: '#/definitions/SubnetInUse'
        '483':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '484':
          description: ServiceLinkedRoleNotFoundFault
          schema:
            $ref: '#/definitions/ServiceLinkedRoleNotFoundFault'
        '485':
          description: SubnetNotAllowedFault
          schema:
            $ref: '#/definitions/SubnetNotAllowedFault'
  /#X-Amz-Target=AmazonMemoryDB.UpdateUser:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Changes user password(s) and/or access string.
      operationId: UpdateUser
      parameters:
        - enum:
            - AmazonMemoryDB.UpdateUser
          in: header
          name: X-Amz-Target
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateUserResponse'
        '480':
          description: UserNotFoundFault
          schema:
            $ref: '#/definitions/UserNotFoundFault'
        '481':
          description: InvalidUserStateFault
          schema:
            $ref: '#/definitions/InvalidUserStateFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

