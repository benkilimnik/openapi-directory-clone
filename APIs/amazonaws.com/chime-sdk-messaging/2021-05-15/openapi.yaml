basePath: /
definitions:
  AppInstanceUserMembershipSummary:
    description: Summary of the membership details of an <code>AppInstanceUser</code>.
    properties:
      ReadMarkerTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a message was last read.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMembershipType'
          - description: The type of <code>ChannelMembership</code>.
    type: object
  BadRequestException: {}
  BatchChannelMemberships:
    description: >-
      The membership information, including member ARNs, the channel ARN, and
      membership types.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel to which you're adding users.
      InvitedBy:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The identifier of the member who invited another member.
      Members:
        allOf:
          - $ref: '#/definitions/Members'
          - description: The users successfully added to the request.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMembershipType'
          - description: The membership types set for the channel users.
    type: object
  BatchCreateChannelMembershipError:
    description: 'A list of failed member ARNs, error codes, and error messages.'
    properties:
      ErrorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code.
      ErrorMessage:
        allOf:
          - $ref: '#/definitions/String'
          - description: The error message.
      MemberArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the member that the service couldn't add.
    type: object
  BatchCreateChannelMembershipErrors:
    items:
      $ref: '#/definitions/BatchCreateChannelMembershipError'
    type: array
  BatchCreateChannelMembershipRequest:
    properties:
      MemberArns:
        allOf:
          - $ref: '#/definitions/MemberArns'
          - description: The ARNs of the members you want to add to the channel.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMembershipType'
          - description: >-
              The membership type of a user, <code>DEFAULT</code> or
              <code>HIDDEN</code>. Default members are always returned as part
              of <code>ListChannelMemberships</code>. Hidden members are only
              returned if the type filter in <code>ListChannelMemberships</code>
              equals <code>HIDDEN</code>. Otherwise hidden members are not
              returned. This is only supported by moderators.
    required:
      - MemberArns
    title: BatchCreateChannelMembershipRequest
    type: object
  BatchCreateChannelMembershipResponse:
    properties:
      BatchChannelMemberships:
        allOf:
          - $ref: '#/definitions/BatchChannelMemberships'
          - description: The list of channel memberships in the response.
      Errors:
        allOf:
          - $ref: '#/definitions/BatchCreateChannelMembershipErrors'
          - description: >-
              If the action fails for one or more of the memberships in the
              request, a list of the memberships is returned, along with error
              codes and error messages.
    type: object
  Channel:
    description: The details of a channel.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of a channel.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The <code>AppInstanceUser</code> who created the channel.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: >-
              The time at which the <code>AppInstanceUser</code> created the
              channel.
      LastMessageTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a member sent the last message in the channel.
      LastUpdatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a channel was last updated.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The channel's metadata.
      Mode:
        allOf:
          - $ref: '#/definitions/ChannelMode'
          - description: The mode of the channel.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyResourceName'
          - description: The name of a channel.
      Privacy:
        allOf:
          - $ref: '#/definitions/ChannelPrivacy'
          - description: The channel's privacy setting.
    type: object
  ChannelBan:
    description: The details of a channel ban.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel from which a member is being banned.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The <code>AppInstanceUser</code> who created the ban.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the ban was created.
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The member being banned from the channel.
    type: object
  ChannelBanSummary:
    description: Summary of the details of a <code>ChannelBan</code>.
    properties:
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The member being banned from a channel.
    type: object
  ChannelBanSummaryList:
    items:
      $ref: '#/definitions/ChannelBanSummary'
    type: array
  ChannelMembership:
    description: The details of a channel member.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the member's channel.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the channel membership was created.
      InvitedBy:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The identifier of the member who invited another member.
      LastUpdatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a channel membership was last updated.
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The data of the channel member.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMembershipType'
          - description: The membership type set for the channel member.
    type: object
  ChannelMembershipForAppInstanceUserSummary:
    description: >-
      Summary of the channel membership details of an
      <code>AppInstanceUser</code>.
    properties:
      AppInstanceUserMembershipSummary:
        allOf:
          - $ref: '#/definitions/AppInstanceUserMembershipSummary'
          - description: >-
              Returns the channel membership data for an
              <code>AppInstance</code>.
      ChannelSummary:
        allOf:
          - $ref: '#/definitions/ChannelSummary'
          - description: Returns the channel data for an <code>AppInstance</code>.
    type: object
  ChannelMembershipForAppInstanceUserSummaryList:
    items:
      $ref: '#/definitions/ChannelMembershipForAppInstanceUserSummary'
    type: array
  ChannelMembershipSummary:
    description: Summary of the details of a <code>ChannelMembership</code>.
    properties:
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: A member's summary data.
    type: object
  ChannelMembershipSummaryList:
    items:
      $ref: '#/definitions/ChannelMembershipSummary'
    type: array
  ChannelMembershipType:
    enum:
      - DEFAULT
      - HIDDEN
    type: string
  ChannelMessage:
    description: The details of a message in a channel.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      Content:
        allOf:
          - $ref: '#/definitions/Content'
          - description: The message content.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the message was created.
      LastEditedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a message was edited.
      LastUpdatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a message was updated.
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID of a message.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The message metadata.
      Persistence:
        allOf:
          - $ref: '#/definitions/ChannelMessagePersistenceType'
          - description: The persistence setting for a channel message.
      Redacted:
        allOf:
          - $ref: '#/definitions/NonNullableBoolean'
          - description: Hides the content of a message.
      Sender:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The message sender.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMessageType'
          - description: The message type.
    type: object
  ChannelMessagePersistenceType:
    enum:
      - PERSISTENT
      - NON_PERSISTENT
    type: string
  ChannelMessageSummary:
    description: Summary of the messages in a <code>Channel</code>.
    properties:
      Content:
        allOf:
          - $ref: '#/definitions/Content'
          - description: The content of the message.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the message summary was created.
      LastEditedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a message was last edited.
      LastUpdatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which a message was last updated.
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID of the message.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The metadata of the message.
      Redacted:
        allOf:
          - $ref: '#/definitions/NonNullableBoolean'
          - description: Indicates whether a message was redacted.
      Sender:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The message sender.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMessageType'
          - description: The type of message.
    type: object
  ChannelMessageSummaryList:
    items:
      $ref: '#/definitions/ChannelMessageSummary'
    type: array
  ChannelMessageType:
    enum:
      - STANDARD
      - CONTROL
    type: string
  ChannelMode:
    enum:
      - UNRESTRICTED
      - RESTRICTED
    type: string
  ChannelModeratedByAppInstanceUserSummary:
    description: Summary of the details of a moderated channel.
    properties:
      ChannelSummary:
        allOf:
          - $ref: '#/definitions/ChannelSummary'
          - description: Summary of the details of a <code>Channel</code>.
    type: object
  ChannelModeratedByAppInstanceUserSummaryList:
    items:
      $ref: '#/definitions/ChannelModeratedByAppInstanceUserSummary'
    type: array
  ChannelModerator:
    description: The details of a channel moderator.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the moderator's channel.
      CreatedBy:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The <code>AppInstanceUser</code> who created the moderator.
      CreatedTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the moderator was created.
      Moderator:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The moderator's data.
    type: object
  ChannelModeratorSummary:
    description: Summary of the details of a <code>ChannelModerator</code>.
    properties:
      Moderator:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The data for a moderator.
    type: object
  ChannelModeratorSummaryList:
    items:
      $ref: '#/definitions/ChannelModeratorSummary'
    type: array
  ChannelPrivacy:
    enum:
      - PUBLIC
      - PRIVATE
    type: string
  ChannelSummary:
    description: Summary of the details of a <code>Channel</code>.
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      LastMessageTimestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the last message in a channel was sent.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The metadata of the channel.
      Mode:
        allOf:
          - $ref: '#/definitions/ChannelMode'
          - description: The mode of the channel.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyResourceName'
          - description: The name of the channel.
      Privacy:
        allOf:
          - $ref: '#/definitions/ChannelPrivacy'
          - description: The privacy setting of the channel.
    type: object
  ChannelSummaryList:
    items:
      $ref: '#/definitions/ChannelSummary'
    type: array
  ChimeArn:
    maxLength: 1600
    minLength: 5
    pattern: >-
      arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
    type: string
  ClientRequestToken:
    format: password
    maxLength: 64
    minLength: 2
    pattern: '[-_a-zA-Z0-9]*'
    type: string
  ConflictException: {}
  Content:
    format: password
    maxLength: 4096
    minLength: 0
    pattern: '[\s\S]*'
    type: string
  CreateChannelBanRequest:
    properties:
      MemberArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the member being banned.
    required:
      - MemberArn
    title: CreateChannelBanRequest
    type: object
  CreateChannelBanResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the response to the ban request.
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: >-
              The <code>ChannelArn</code> and <code>BannedIdentity</code> of the
              member in the ban response.
    type: object
  CreateChannelMembershipRequest:
    properties:
      MemberArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the member you want to add to the channel.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMembershipType'
          - description: >-
              The membership type of a user, <code>DEFAULT</code> or
              <code>HIDDEN</code>. Default members are always returned as part
              of <code>ListChannelMemberships</code>. Hidden members are only
              returned if the type filter in <code>ListChannelMemberships</code>
              equals <code>HIDDEN</code>. Otherwise hidden members are not
              returned. This is only supported by moderators.
    required:
      - MemberArn
      - Type
    title: CreateChannelMembershipRequest
    type: object
  CreateChannelMembershipResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      Member:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The ARN and metadata of the member being added.
    type: object
  CreateChannelModeratorRequest:
    properties:
      ChannelModeratorArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the moderator.
    required:
      - ChannelModeratorArn
    title: CreateChannelModeratorRequest
    type: object
  CreateChannelModeratorResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      ChannelModerator:
        allOf:
          - $ref: '#/definitions/Identity'
          - description: The ARNs of the channel and the moderator.
    type: object
  CreateChannelRequest:
    properties:
      AppInstanceArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel request.
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: >-
              The client token for the request. An <code>Idempotency</code>
              token.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The metadata of the creation request. Limited to 1KB and UTF-8.
      Mode:
        allOf:
          - $ref: '#/definitions/ChannelMode'
          - description: >-
              The channel mode: <code>UNRESTRICTED</code> or
              <code>RESTRICTED</code>. Administrators, moderators, and channel
              members can add themselves and other members to unrestricted
              channels. Only administrators and moderators can add members to
              restricted channels.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyResourceName'
          - description: The name of the channel.
      Privacy:
        allOf:
          - $ref: '#/definitions/ChannelPrivacy'
          - description: >-
              The channel's privacy level: <code>PUBLIC</code> or
              <code>PRIVATE</code>. Private channels aren't discoverable by
              users outside the channel. Public channels are discoverable by
              anyone in the <code>AppInstance</code>.
      Tags:
        allOf:
          - $ref: '#/definitions/TagList'
          - description: The tags for the creation request.
    required:
      - AppInstanceArn
      - Name
      - ClientRequestToken
    title: CreateChannelRequest
    type: object
  CreateChannelResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
    type: object
  DeleteChannelBanRequest:
    properties: {}
    title: DeleteChannelBanRequest
    type: object
  DeleteChannelMembershipRequest:
    properties: {}
    title: DeleteChannelMembershipRequest
    type: object
  DeleteChannelMessageRequest:
    properties: {}
    title: DeleteChannelMessageRequest
    type: object
  DeleteChannelModeratorRequest:
    properties: {}
    title: DeleteChannelModeratorRequest
    type: object
  DeleteChannelRequest:
    properties: {}
    title: DeleteChannelRequest
    type: object
  DescribeChannelBanRequest:
    properties: {}
    title: DescribeChannelBanRequest
    type: object
  DescribeChannelBanResponse:
    properties:
      ChannelBan:
        allOf:
          - $ref: '#/definitions/ChannelBan'
          - description: The details of the ban.
    type: object
  DescribeChannelMembershipForAppInstanceUserRequest:
    properties: {}
    title: DescribeChannelMembershipForAppInstanceUserRequest
    type: object
  DescribeChannelMembershipForAppInstanceUserResponse:
    properties:
      ChannelMembership:
        allOf:
          - $ref: '#/definitions/ChannelMembershipForAppInstanceUserSummary'
          - description: The channel to which a user belongs.
    type: object
  DescribeChannelMembershipRequest:
    properties: {}
    title: DescribeChannelMembershipRequest
    type: object
  DescribeChannelMembershipResponse:
    properties:
      ChannelMembership:
        allOf:
          - $ref: '#/definitions/ChannelMembership'
          - description: The details of the membership.
    type: object
  DescribeChannelModeratedByAppInstanceUserRequest:
    properties: {}
    title: DescribeChannelModeratedByAppInstanceUserRequest
    type: object
  DescribeChannelModeratedByAppInstanceUserResponse:
    properties:
      Channel:
        allOf:
          - $ref: '#/definitions/ChannelModeratedByAppInstanceUserSummary'
          - description: The moderated channel.
    type: object
  DescribeChannelModeratorRequest:
    properties: {}
    title: DescribeChannelModeratorRequest
    type: object
  DescribeChannelModeratorResponse:
    properties:
      ChannelModerator:
        allOf:
          - $ref: '#/definitions/ChannelModerator'
          - description: The details of the channel moderator.
    type: object
  DescribeChannelRequest:
    properties: {}
    title: DescribeChannelRequest
    type: object
  DescribeChannelResponse:
    properties:
      Channel:
        allOf:
          - $ref: '#/definitions/Channel'
          - description: The channel details.
    type: object
  ErrorCode:
    enum:
      - BadRequest
      - Conflict
      - Forbidden
      - NotFound
      - PreconditionFailed
      - ResourceLimitExceeded
      - ServiceFailure
      - AccessDenied
      - ServiceUnavailable
      - Throttled
      - Throttling
      - Unauthorized
      - Unprocessable
      - VoiceConnectorGroupAssociationsExist
      - PhoneNumberAssociationsExist
    type: string
  ForbiddenException: {}
  GetChannelMessageRequest:
    properties: {}
    title: GetChannelMessageRequest
    type: object
  GetChannelMessageResponse:
    properties:
      ChannelMessage:
        allOf:
          - $ref: '#/definitions/ChannelMessage'
          - description: The details of and content in the message.
    type: object
  GetMessagingSessionEndpointRequest:
    properties: {}
    title: GetMessagingSessionEndpointRequest
    type: object
  GetMessagingSessionEndpointResponse:
    properties:
      Endpoint:
        allOf:
          - $ref: '#/definitions/MessagingSessionEndpoint'
          - description: The endpoint returned in the response.
    type: object
  Identity:
    description: The details of a user.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN in an Identity.
      Name:
        allOf:
          - $ref: '#/definitions/ResourceName'
          - description: The name in an Identity.
    type: object
  ListChannelBansRequest:
    properties: {}
    title: ListChannelBansRequest
    type: object
  ListChannelBansResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      ChannelBans:
        allOf:
          - $ref: '#/definitions/ChannelBanSummaryList'
          - description: The information for each requested ban.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token passed by previous API calls until all requested bans
              are returned.
    type: object
  ListChannelMembershipsForAppInstanceUserRequest:
    properties: {}
    title: ListChannelMembershipsForAppInstanceUserRequest
    type: object
  ListChannelMembershipsForAppInstanceUserResponse:
    properties:
      ChannelMemberships:
        allOf:
          - $ref: '#/definitions/ChannelMembershipForAppInstanceUserSummaryList'
          - description: >-
              The token passed by previous API calls until all requested users
              are returned.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token passed by previous API calls until all requested users
              are returned.
    type: object
  ListChannelMembershipsRequest:
    properties: {}
    title: ListChannelMembershipsRequest
    type: object
  ListChannelMembershipsResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      ChannelMemberships:
        allOf:
          - $ref: '#/definitions/ChannelMembershipSummaryList'
          - description: The information for the requested channel memberships.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token passed by previous API calls until all requested channel
              memberships are returned.
    type: object
  ListChannelMessagesRequest:
    properties: {}
    title: ListChannelMessagesRequest
    type: object
  ListChannelMessagesResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel containing the requested messages.
      ChannelMessages:
        allOf:
          - $ref: '#/definitions/ChannelMessageSummaryList'
          - description: 'The information about, and content of, each requested message.'
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token passed by previous API calls until all requested
              messages are returned.
    type: object
  ListChannelModeratorsRequest:
    properties: {}
    title: ListChannelModeratorsRequest
    type: object
  ListChannelModeratorsResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      ChannelModerators:
        allOf:
          - $ref: '#/definitions/ChannelModeratorSummaryList'
          - description: The information about and names of each moderator.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token passed by previous API calls until all requested
              moderators are returned.
    type: object
  ListChannelsModeratedByAppInstanceUserRequest:
    properties: {}
    title: ListChannelsModeratedByAppInstanceUserRequest
    type: object
  ListChannelsModeratedByAppInstanceUserResponse:
    properties:
      Channels:
        allOf:
          - $ref: '#/definitions/ChannelModeratedByAppInstanceUserSummaryList'
          - description: The moderated channels in the request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token returned from previous API requests until the number of
              channels moderated by the user is reached.
    type: object
  ListChannelsRequest:
    properties: {}
    title: ListChannelsRequest
    type: object
  ListChannelsResponse:
    properties:
      Channels:
        allOf:
          - $ref: '#/definitions/ChannelSummaryList'
          - description: The information about each channel.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token returned from previous API requests until the number of
              channels is reached.
    type: object
  MaxResults:
    maximum: 50
    minimum: 1
    type: integer
  MemberArns:
    items:
      $ref: '#/definitions/ChimeArn'
    maxItems: 100
    minItems: 1
    type: array
  Members:
    items:
      $ref: '#/definitions/Identity'
    type: array
  MessageId:
    maxLength: 128
    minLength: 1
    pattern: '[-_a-zA-Z0-9]*'
    type: string
  MessagingSessionEndpoint:
    description: The websocket endpoint used to connect to Amazon Chime SDK messaging.
    properties:
      Url:
        allOf:
          - $ref: '#/definitions/UrlType'
          - description: The endpoint to which you establish a websocket connection.
    type: object
  Metadata:
    format: password
    maxLength: 1024
    minLength: 0
    pattern: .*
    type: string
  NextToken:
    format: password
    maxLength: 2048
    minLength: 0
    pattern: .*
    type: string
  NonEmptyContent:
    format: password
    minLength: 1
    pattern: '[\s\S]*'
    type: string
  NonEmptyResourceName:
    format: password
    maxLength: 256
    minLength: 1
    pattern: >-
      [\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*
    type: string
  NonNullableBoolean:
    type: boolean
  NotFoundException: {}
  RedactChannelMessageRequest:
    properties: {}
    title: RedactChannelMessageRequest
    type: object
  RedactChannelMessageResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: >-
              The ARN of the channel containing the messages that you want to
              redact.
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID of the message being redacted.
    type: object
  ResourceLimitExceededException: {}
  ResourceName:
    format: password
    maxLength: 256
    minLength: 0
    pattern: >-
      [\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*
    type: string
  SendChannelMessageRequest:
    properties:
      ClientRequestToken:
        allOf:
          - $ref: '#/definitions/ClientRequestToken'
          - description: The <code>Idempotency</code> token for each client request.
      Content:
        allOf:
          - $ref: '#/definitions/NonEmptyContent'
          - description: The content of the message.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The optional metadata for each message.
      Persistence:
        allOf:
          - $ref: '#/definitions/ChannelMessagePersistenceType'
          - description: >-
              Boolean that controls whether the message is persisted on the back
              end. Required.
      Type:
        allOf:
          - $ref: '#/definitions/ChannelMessageType'
          - description: >-
              The type of message, <code>STANDARD</code> or
              <code>CONTROL</code>.
    required:
      - Content
      - Type
      - Persistence
      - ClientRequestToken
    title: SendChannelMessageRequest
    type: object
  SendChannelMessageResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID string assigned to each message.
    type: object
  ServiceFailureException: {}
  ServiceUnavailableException: {}
  SortOrder:
    enum:
      - ASCENDING
      - DESCENDING
    type: string
  String:
    type: string
  Tag:
    description: Describes a tag applied to a resource.
    properties:
      Key:
        allOf:
          - $ref: '#/definitions/TagKey'
          - description: The key of the tag.
      Value:
        allOf:
          - $ref: '#/definitions/TagValue'
          - description: The value of the tag.
    required:
      - Key
      - Value
    type: object
  TagKey:
    format: password
    maxLength: 128
    minLength: 1
    type: string
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    minItems: 1
    type: array
  TagValue:
    format: password
    maxLength: 256
    minLength: 1
    type: string
  ThrottledClientException: {}
  Timestamp:
    format: date-time
    type: string
  UnauthorizedClientException: {}
  UpdateChannelMessageRequest:
    properties:
      Content:
        allOf:
          - $ref: '#/definitions/Content'
          - description: The content of the message being updated.
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The metadata of the message being updated.
    title: UpdateChannelMessageRequest
    type: object
  UpdateChannelMessageResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
      MessageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: The ID string of the message being updated.
    type: object
  UpdateChannelReadMarkerRequest:
    properties: {}
    title: UpdateChannelReadMarkerRequest
    type: object
  UpdateChannelReadMarkerResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
    type: object
  UpdateChannelRequest:
    properties:
      Metadata:
        allOf:
          - $ref: '#/definitions/Metadata'
          - description: The metadata for the update request.
      Mode:
        allOf:
          - $ref: '#/definitions/ChannelMode'
          - description: The mode of the update request.
      Name:
        allOf:
          - $ref: '#/definitions/NonEmptyResourceName'
          - description: The name of the channel.
    required:
      - Name
      - Mode
    title: UpdateChannelRequest
    type: object
  UpdateChannelResponse:
    properties:
      ChannelArn:
        allOf:
          - $ref: '#/definitions/ChimeArn'
          - description: The ARN of the channel.
    type: object
  UrlType:
    maxLength: 4096
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/messaging-chime/'
host: messaging-chime.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    The Amazon Chime SDK Messaging APIs in this section allow software
    developers to send and receive messages in custom messaging applications.
    These APIs depend on the frameworks provided by the Amazon Chime SDK
    Identity APIs. For more information about the messaging APIs, see <a
    href="https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging">Amazon
    Chime SDK messaging</a> 
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Chime SDK Messaging
  version: '2021-05-15'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: chime
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-sdk-messaging-2021-05-15.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: chime-sdk-messaging
paths:
  /channels#app-instance-arn&x-amz-chime-bearer:
    get:
      description: >-
        <p>Lists all Channels created under a single Chime App as a paginated
        list. You can specify filters to narrow results.</p> <p class="title">
        <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy =
        <code>PUBLIC</code> to retrieve all public channels in the account.</p>
        </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy =
        <code>PRIVATE</code> to list the private channels in an account.</p>
        </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header
        is mandatory. Use the <code>AppInstanceUserArn</code> of the user that
        makes the API call as the value in the header.</p> </note>
      operationId: ListChannels
      parameters:
        - description: The ARN of the <code>AppInstance</code>.
          in: query
          maxLength: 1600
          minLength: 5
          name: app-instance-arn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The privacy setting. <code>PUBLIC</code> retrieves all the public
            channels. <code>PRIVATE</code> retrieves private channels. Only an
            <code>AppInstanceAdmin</code> can retrieve private channels. 
          enum:
            - PUBLIC
            - PRIVATE
          in: query
          name: privacy
          required: false
          type: string
        - description: The maximum number of channels that you want to return.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token passed by previous API calls until all requested channels
            are returned.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /channels#scope=app-instance-user-memberships&x-amz-chime-bearer:
    get:
      description: >-
        <p> Lists all channels that a particular <code>AppInstanceUser</code> is
        a part of. Only an <code>AppInstanceAdmin</code> can call the API with a
        user ARN that is not their own. </p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: ListChannelMembershipsForAppInstanceUser
      parameters:
        - description: The ARN of the <code>AppInstanceUser</code>s
          in: query
          maxLength: 1600
          minLength: 5
          name: app-instance-user-arn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: false
          type: string
        - description: The maximum number of users that you want returned.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token returned from previous API requests until the number of
            channel memberships is reached.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - app-instance-user-memberships
          in: query
          name: scope
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelMembershipsForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /channels#scope=app-instance-user-moderated-channels&x-amz-chime-bearer:
    get:
      description: >-
        <p>A list of the channels moderated by an
        <code>AppInstanceUser</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: ListChannelsModeratedByAppInstanceUser
      parameters:
        - description: The ARN of the user in the moderated channel.
          in: query
          maxLength: 1600
          minLength: 5
          name: app-instance-user-arn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: false
          type: string
        - description: The maximum number of channels in the request.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token returned from previous API requests until the number of
            channels moderated by the user is reached.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - app-instance-user-moderated-channels
          in: query
          name: scope
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelsModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /channels#x-amz-chime-bearer:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a channel to which you can add users and send messages.</p>
        <p> <b>Restriction</b>: You can't change a channel's privacy.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use
        the <code>AppInstanceUserArn</code> of the user that makes the API call
        as the value in the header.</p> </note>
      operationId: CreateChannel
      parameters:
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AppInstanceArn:
                description: The ARN of the channel request.
                maxLength: 1600
                minLength: 5
                pattern: >-
                  arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
                type: string
              ClientRequestToken:
                description: >-
                  The client token for the request. An <code>Idempotency</code>
                  token.
                format: password
                maxLength: 64
                minLength: 2
                pattern: '[-_a-zA-Z0-9]*'
                type: string
              Metadata:
                description: >-
                  The metadata of the creation request. Limited to 1KB and
                  UTF-8.
                format: password
                maxLength: 1024
                minLength: 0
                pattern: .*
                type: string
              Mode:
                description: >-
                  The channel mode: <code>UNRESTRICTED</code> or
                  <code>RESTRICTED</code>. Administrators, moderators, and
                  channel members can add themselves and other members to
                  unrestricted channels. Only administrators and moderators can
                  add members to restricted channels.
                enum:
                  - UNRESTRICTED
                  - RESTRICTED
                type: string
              Name:
                description: The name of the channel.
                format: password
                maxLength: 256
                minLength: 1
                pattern: >-
                  [\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*
                type: string
              Privacy:
                description: >-
                  The channel's privacy level: <code>PUBLIC</code> or
                  <code>PRIVATE</code>. Private channels aren't discoverable by
                  users outside the channel. Public channels are discoverable by
                  anyone in the <code>AppInstance</code>.
                enum:
                  - PUBLIC
                  - PRIVATE
                type: string
              Tags:
                description: The tags for the creation request.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - AppInstanceArn
              - Name
              - ClientRequestToken
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn&x-amz-chime-bearer':
    get:
      description: >-
        <p> Returns the details of a channel based on the membership of the
        specified <code>AppInstanceUser</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DescribeChannelMembershipForAppInstanceUser
      parameters:
        - description: The ARN of the channel to which the user belongs.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the user in a channel.
          in: query
          maxLength: 1600
          minLength: 5
          name: app-instance-user-arn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - enum:
            - app-instance-user-membership
          in: query
          name: scope
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelMembershipForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn&x-amz-chime-bearer':
    get:
      description: >-
        <p>Returns the full details of a channel moderated by the specified
        <code>AppInstanceUser</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DescribeChannelModeratedByAppInstanceUser
      parameters:
        - description: The ARN of the moderated channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The ARN of the <code>AppInstanceUser</code> in the moderated
            channel.
          in: query
          maxLength: 1600
          minLength: 5
          name: app-instance-user-arn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - enum:
            - app-instance-user-moderated-channel
          in: query
          name: scope
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channels/{channelArn}#x-amz-chime-bearer':
    delete:
      description: >-
        <p>Immediately makes a channel and its memberships inaccessible and
        marks them for deletion. This is an irreversible process.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use
        the <code>AppInstanceUserArn</code> of the user that makes the API call
        as the value in the header.</p> </note>
      operationId: DeleteChannel
      parameters:
        - description: The ARN of the channel being deleted.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    get:
      description: >-
        <p>Returns the full details of a channel in an Amazon Chime
        <code>AppInstance</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DescribeChannel
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Update a channel's attributes.</p> <p> <b>Restriction</b>: You can't
        change a channel's privacy. </p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: UpdateChannel
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Metadata:
                description: The metadata for the update request.
                format: password
                maxLength: 1024
                minLength: 0
                pattern: .*
                type: string
              Mode:
                description: The mode of the update request.
                enum:
                  - UNRESTRICTED
                  - RESTRICTED
                type: string
              Name:
                description: The name of the channel.
                format: password
                maxLength: 256
                minLength: 1
                pattern: >-
                  [\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*
                type: string
            required:
              - Name
              - Mode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/bans#x-amz-chime-bearer':
    get:
      description: >-
        <p>Lists all the users banned from a particular channel.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use
        the <code>AppInstanceUserArn</code> of the user that makes the API call
        as the value in the header.</p> </note>
      operationId: ListChannelBans
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The maximum number of bans that you want returned.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token passed by previous API calls until all requested bans are
            returned.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelBansResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Permanently bans a member from a channel. Moderators can't add banned
        members to a channel. To undo a ban, you first have to
        <code>DeleteChannelBan</code>, and then
        <code>CreateChannelMembership</code>. Bans are cleaned up when you
        delete users or channels.</p> <p>If you ban a user who is already part
        of a channel, that user is automatically kicked from the channel.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is
        mandatory. Use the <code>AppInstanceUserArn</code> of the user that
        makes the API call as the value in the header.</p> </note>
      operationId: CreateChannelBan
      parameters:
        - description: The ARN of the ban request.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MemberArn:
                description: The ARN of the member being banned.
                maxLength: 1600
                minLength: 5
                pattern: >-
                  arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
                type: string
            required:
              - MemberArn
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelBanResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/bans/{memberArn}#x-amz-chime-bearer':
    delete:
      description: >-
        <p>Removes a user from a channel's ban list.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DeleteChannelBan
      parameters:
        - description: >-
            The ARN of the channel from which the <code>AppInstanceUser</code>
            was banned.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The ARN of the <code>AppInstanceUser</code> that you want to
            reinstate.
          in: path
          maxLength: 1600
          minLength: 5
          name: memberArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    get:
      description: >-
        <p>Returns the full details of a channel ban.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DescribeChannelBan
      parameters:
        - description: The ARN of the channel from which the user is banned.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the member being banned.
          in: path
          maxLength: 1600
          minLength: 5
          name: memberArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelBanResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channels/{channelArn}/memberships#operation=batch-create&x-amz-chime-bearer':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: 'Adds a specified number of users to a channel. '
      operationId: BatchCreateChannelMembership
      parameters:
        - description: The ARN of the channel to which you're adding users.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - enum:
            - batch-create
          in: query
          name: operation
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MemberArns:
                description: The ARNs of the members you want to add to the channel.
                items:
                  $ref: '#/definitions/ChimeArn'
                maxItems: 100
                minItems: 1
                type: array
              Type:
                description: >-
                  The membership type of a user, <code>DEFAULT</code> or
                  <code>HIDDEN</code>. Default members are always returned as
                  part of <code>ListChannelMemberships</code>. Hidden members
                  are only returned if the type filter in
                  <code>ListChannelMemberships</code> equals
                  <code>HIDDEN</code>. Otherwise hidden members are not
                  returned. This is only supported by moderators.
                enum:
                  - DEFAULT
                  - HIDDEN
                type: string
            required:
              - MemberArns
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchCreateChannelMembershipResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
  '/channels/{channelArn}/memberships#x-amz-chime-bearer':
    get:
      description: >-
        <p>Lists all channel memberships in a channel.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: ListChannelMemberships
      parameters:
        - description: The maximum number of channel memberships that you want returned.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The membership type of a user, <code>DEFAULT</code> or
            <code>HIDDEN</code>. Default members are always returned as part of
            <code>ListChannelMemberships</code>. Hidden members are only
            returned if the type filter in <code>ListChannelMemberships</code>
            equals <code>HIDDEN</code>. Otherwise hidden members are not
            returned.
          enum:
            - DEFAULT
            - HIDDEN
          in: query
          name: type
          required: false
          type: string
        - description: The maximum number of channel memberships that you want returned.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token passed by previous API calls until all requested channel
            memberships are returned.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelMembershipsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds a user to a channel. The <code>InvitedBy</code> response field
        is derived from the request header. A channel member can:</p> <ul> <li>
        <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li>
        <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li>
        <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact
        this action as follows:</p> <ul> <li> <p>Public Channels: You do not
        need to be a member to list messages, but you must be a member to send
        messages.</p> </li> <li> <p>Private Channels: You must be a member to
        list or send messages.</p> </li> </ul> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: CreateChannelMembership
      parameters:
        - description: The ARN of the channel to which you're adding users.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MemberArn:
                description: The ARN of the member you want to add to the channel.
                maxLength: 1600
                minLength: 5
                pattern: >-
                  arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
                type: string
              Type:
                description: >-
                  The membership type of a user, <code>DEFAULT</code> or
                  <code>HIDDEN</code>. Default members are always returned as
                  part of <code>ListChannelMemberships</code>. Hidden members
                  are only returned if the type filter in
                  <code>ListChannelMemberships</code> equals
                  <code>HIDDEN</code>. Otherwise hidden members are not
                  returned. This is only supported by moderators.
                enum:
                  - DEFAULT
                  - HIDDEN
                type: string
            required:
              - MemberArn
              - Type
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelMembershipResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/memberships/{memberArn}#x-amz-chime-bearer':
    delete:
      description: >-
        <p>Removes a member from a channel.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DeleteChannelMembership
      parameters:
        - description: The ARN of the channel from which you want to remove the user.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the member that you're removing from the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: memberArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    get:
      description: >-
        <p>Returns the full details of a user's channel membership.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use
        the <code>AppInstanceUserArn</code> of the user that makes the API call
        as the value in the header.</p> </note>
      operationId: DescribeChannelMembership
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the member.
          in: path
          maxLength: 1600
          minLength: 5
          name: memberArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelMembershipResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channels/{channelArn}/messages#x-amz-chime-bearer':
    get:
      description: >-
        <p>List all the messages in a channel. Returns a paginated list of
        <code>ChannelMessages</code>. By default, sorted by creation timestamp
        in descending order.</p> <note> <p>Redacted messages appear in the
        results as empty, since they are only redacted, not deleted. Deleted
        messages do not appear in the results. This action always returns the
        latest version of an edited message.</p> <p>Also, the x-amz-chime-bearer
        request header is mandatory. Use the <code>AppInstanceUserArn</code> of
        the user that makes the API call as the value in the header.</p> </note>
      operationId: ListChannelMessages
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The order in which you want messages sorted. Default is Descending,
            based on time created.
          enum:
            - ASCENDING
            - DESCENDING
          in: query
          name: sort-order
          required: false
          type: string
        - description: The initial or starting time stamp for your requested messages.
          format: date-time
          in: query
          name: not-before
          required: false
          type: string
        - description: The final or ending time stamp for your requested messages.
          format: date-time
          in: query
          name: not-after
          required: false
          type: string
        - description: The maximum number of messages that you want returned.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token passed by previous API calls until all requested messages
            are returned.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelMessagesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Sends a message to a particular channel that the member is a part
        of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is
        mandatory. Use the <code>AppInstanceUserArn</code> of the user that
        makes the API call as the value in the header.</p> <p>Also,
        <code>STANDARD</code> messages can contain 4KB of data and the 1KB of
        metadata. <code>CONTROL</code> messages can contain 30 bytes of data and
        no metadata.</p> </note>
      operationId: SendChannelMessage
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: The <code>Idempotency</code> token for each client request.
                format: password
                maxLength: 64
                minLength: 2
                pattern: '[-_a-zA-Z0-9]*'
                type: string
              Content:
                description: The content of the message.
                format: password
                minLength: 1
                pattern: '[\s\S]*'
                type: string
              Metadata:
                description: The optional metadata for each message.
                format: password
                maxLength: 1024
                minLength: 0
                pattern: .*
                type: string
              Persistence:
                description: >-
                  Boolean that controls whether the message is persisted on the
                  back end. Required.
                enum:
                  - PERSISTENT
                  - NON_PERSISTENT
                type: string
              Type:
                description: >-
                  The type of message, <code>STANDARD</code> or
                  <code>CONTROL</code>.
                enum:
                  - STANDARD
                  - CONTROL
                type: string
            required:
              - Content
              - Type
              - Persistence
              - ClientRequestToken
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SendChannelMessageResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/messages/{messageId}#operation=redact&x-amz-chime-bearer':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      description: >-
        <p>Redacts message content, but not metadata. The message exists in the
        back end, but the action returns null content, and the state shows as
        redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request
        header is mandatory. Use the <code>AppInstanceUserArn</code> of the user
        that makes the API call as the value in the header.</p> </note>
      operationId: RedactChannelMessage
      parameters:
        - description: >-
            The ARN of the channel containing the messages that you want to
            redact.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ID of the message being redacted.
          in: path
          maxLength: 128
          minLength: 1
          name: messageId
          pattern: '[-_a-zA-Z0-9]*'
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - enum:
            - redact
          in: query
          name: operation
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RedactChannelMessageResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/messages/{messageId}#x-amz-chime-bearer':
    delete:
      description: >-
        <p>Deletes a channel message. Only admins can perform this action.
        Deletion makes messages inaccessible immediately. A background process
        deletes any revisions created by <code>UpdateChannelMessage</code>.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is
        mandatory. Use the <code>AppInstanceUserArn</code> of the user that
        makes the API call as the value in the header.</p> </note>
      operationId: DeleteChannelMessage
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ID of the message being deleted.
          in: path
          maxLength: 128
          minLength: 1
          name: messageId
          pattern: '[-_a-zA-Z0-9]*'
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    get:
      description: >-
        <p>Gets the full details of a channel message.</p> <note> <p>The
        x-amz-chime-bearer request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: GetChannelMessage
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ID of the message.
          in: path
          maxLength: 128
          minLength: 1
          name: messageId
          pattern: '[-_a-zA-Z0-9]*'
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetChannelMessageResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: >-
        <p>Updates the content of a message.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: UpdateChannelMessage
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ID string of the message being updated.
          in: path
          maxLength: 128
          minLength: 1
          name: messageId
          pattern: '[-_a-zA-Z0-9]*'
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Content:
                description: The content of the message being updated.
                format: password
                maxLength: 4096
                minLength: 0
                pattern: '[\s\S]*'
                type: string
              Metadata:
                description: The metadata of the message being updated.
                format: password
                maxLength: 1024
                minLength: 0
                pattern: .*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateChannelMessageResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/moderators#x-amz-chime-bearer':
    get:
      description: >-
        <p>Lists all the moderators for a channel.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: ListChannelModerators
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The maximum number of moderators that you want returned.
          in: query
          maximum: 50
          minimum: 1
          name: max-results
          required: false
          type: integer
        - description: >-
            The token passed by previous API calls until all requested
            moderators are returned.
          format: password
          in: query
          maxLength: 2048
          minLength: 0
          name: next-token
          pattern: .*
          required: false
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelModeratorsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Creates a new <code>ChannelModerator</code>. A channel moderator
        can:</p> <ul> <li> <p>Add and remove other members of the channel.</p>
        </li> <li> <p>Add and remove other moderators of the channel.</p> </li>
        <li> <p>Add and remove user bans for the channel.</p> </li> <li>
        <p>Redact messages in the channel.</p> </li> <li> <p>List messages in
        the channel.</p> </li> </ul> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: CreateChannelModerator
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ChannelModeratorArn:
                description: The ARN of the moderator.
                maxLength: 1600
                minLength: 5
                pattern: >-
                  arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
                type: string
            required:
              - ChannelModeratorArn
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelModeratorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  '/channels/{channelArn}/moderators/{channelModeratorArn}#x-amz-chime-bearer':
    delete:
      description: >-
        <p>Deletes a channel moderator.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as
        the value in the header.</p> </note>
      operationId: DeleteChannelModerator
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the moderator being deleted.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelModeratorArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    get:
      description: >-
        <p>Returns the full details of a single ChannelModerator.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use
        the <code>AppInstanceUserArn</code> of the user that makes the API call
        as the value in the header.</p> </note>
      operationId: DescribeChannelModerator
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: The ARN of the channel moderator.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelModeratorArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelModeratorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channels/{channelArn}/readMarker#x-amz-chime-bearer':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      description: >-
        <p>The details of the time when a user last read messages in a
        channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request
        header is mandatory. Use the <code>AppInstanceUserArn</code> of the user
        that makes the API call as the value in the header.</p> </note>
      operationId: UpdateChannelReadMarker
      parameters:
        - description: The ARN of the channel.
          in: path
          maxLength: 1600
          minLength: 5
          name: channelArn
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
        - description: >-
            The <code>AppInstanceUserArn</code> of the user that makes the API
            call.
          in: header
          maxLength: 1600
          minLength: 5
          name: x-amz-chime-bearer
          pattern: >-
            arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateChannelReadMarkerResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  /endpoints/messaging-session:
    get:
      description: The details of the endpoint for the messaging session.
      operationId: GetMessagingSessionEndpoint
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMessagingSessionEndpointResponse'
        '480':
          description: UnauthorizedClientException
          schema:
            $ref: '#/definitions/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: ThrottledClientException
          schema:
            $ref: '#/definitions/ThrottledClientException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

