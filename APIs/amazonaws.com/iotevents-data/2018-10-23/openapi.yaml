basePath: /
definitions:
  AcknowledgeActionConfiguration:
    description: Contains the configuration information of an acknowledge action.
    properties:
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you acknowledge the alarm.
    type: object
  AcknowledgeAlarmActionRequest:
    description: Information needed to acknowledge the alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you acknowledge the alarm.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
    required:
      - requestId
      - alarmModelName
    type: object
  AcknowledgeAlarmActionRequests:
    items:
      $ref: '#/definitions/AcknowledgeAlarmActionRequest'
    minItems: 1
    type: array
  Alarm:
    description: Contains information about an alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      alarmModelVersion:
        allOf:
          - $ref: '#/definitions/AlarmModelVersion'
          - description: The version of the alarm model.
      alarmState:
        allOf:
          - $ref: '#/definitions/AlarmState'
          - description: Contains information about the current state of the alarm.
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time the alarm was created, in the Unix epoch format.'
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time the alarm was last updated, in the Unix epoch format.'
      severity:
        allOf:
          - $ref: '#/definitions/Severity'
          - description: >-
              A non-negative integer that reflects the severity level of the
              alarm.
    type: object
  AlarmModelName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  AlarmModelVersion:
    maxLength: 128
    minLength: 1
    type: string
  AlarmState:
    description: Contains information about the current state of the alarm.
    properties:
      customerAction:
        allOf:
          - $ref: '#/definitions/CustomerAction'
          - description: >-
              Contains information about the action that you can take to respond
              to the alarm.
      ruleEvaluation:
        allOf:
          - $ref: '#/definitions/RuleEvaluation'
          - description: Information needed to evaluate data.
      stateName:
        allOf:
          - $ref: '#/definitions/AlarmStateName'
          - description: >-
              <p>The name of the alarm state. The state name can be one of the
              following values:</p> <ul> <li> <p> <code>DISABLED</code> - When
              the alarm is in the <code>DISABLED</code> state, it isn't ready to
              evaluate data. To enable the alarm, you must change the alarm to
              the <code>NORMAL</code> state.</p> </li> <li> <p>
              <code>NORMAL</code> - When the alarm is in the <code>NORMAL</code>
              state, it's ready to evaluate data.</p> </li> <li> <p>
              <code>ACTIVE</code> - If the alarm is in the <code>ACTIVE</code>
              state, the alarm is invoked.</p> </li> <li> <p>
              <code>ACKNOWLEDGED</code> - When the alarm is in the
              <code>ACKNOWLEDGED</code> state, the alarm was invoked and you
              acknowledged the alarm.</p> </li> <li> <p>
              <code>SNOOZE_DISABLED</code> - When the alarm is in the
              <code>SNOOZE_DISABLED</code> state, the alarm is disabled for a
              specified period of time. After the snooze time, the alarm
              automatically changes to the <code>NORMAL</code> state. </p> </li>
              <li> <p> <code>LATCHED</code> - When the alarm is in the
              <code>LATCHED</code> state, the alarm was invoked. However, the
              data that the alarm is currently evaluating is within the
              specified range. To change the alarm to the <code>NORMAL</code>
              state, you must acknowledge the alarm.</p> </li> </ul>
      systemEvent:
        allOf:
          - $ref: '#/definitions/SystemEvent'
          - description: Contains information about alarm state changes.
    type: object
  AlarmStateName:
    enum:
      - DISABLED
      - NORMAL
      - ACTIVE
      - ACKNOWLEDGED
      - SNOOZE_DISABLED
      - LATCHED
    type: string
  AlarmSummaries:
    items:
      $ref: '#/definitions/AlarmSummary'
    type: array
  AlarmSummary:
    description: Contains a summary of an alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      alarmModelVersion:
        allOf:
          - $ref: '#/definitions/AlarmModelVersion'
          - description: The version of the alarm model.
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time the alarm was created, in the Unix epoch format.'
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: 'The time the alarm was last updated, in the Unix epoch format.'
      stateName:
        allOf:
          - $ref: '#/definitions/AlarmStateName'
          - description: >-
              <p>The name of the alarm state. The state name can be one of the
              following values:</p> <ul> <li> <p> <code>DISABLED</code> - When
              the alarm is in the <code>DISABLED</code> state, it isn't ready to
              evaluate data. To enable the alarm, you must change the alarm to
              the <code>NORMAL</code> state.</p> </li> <li> <p>
              <code>NORMAL</code> - When the alarm is in the <code>NORMAL</code>
              state, it's ready to evaluate data.</p> </li> <li> <p>
              <code>ACTIVE</code> - If the alarm is in the <code>ACTIVE</code>
              state, the alarm is invoked.</p> </li> <li> <p>
              <code>ACKNOWLEDGED</code> - When the alarm is in the
              <code>ACKNOWLEDGED</code> state, the alarm was invoked and you
              acknowledged the alarm.</p> </li> <li> <p>
              <code>SNOOZE_DISABLED</code> - When the alarm is in the
              <code>SNOOZE_DISABLED</code> state, the alarm is disabled for a
              specified period of time. After the snooze time, the alarm
              automatically changes to the <code>NORMAL</code> state. </p> </li>
              <li> <p> <code>LATCHED</code> - When the alarm is in the
              <code>LATCHED</code> state, the alarm was invoked. However, the
              data that the alarm is currently evaluating is within the
              specified range. To change the alarm to the <code>NORMAL</code>
              state, you must acknowledge the alarm.</p> </li> </ul>
    type: object
  BatchAcknowledgeAlarmRequest:
    properties:
      acknowledgeActionRequests:
        allOf:
          - $ref: '#/definitions/AcknowledgeAlarmActionRequests'
          - description: >-
              The list of acknowledge action requests. You can specify up to 10
              requests per operation.
    required:
      - acknowledgeActionRequests
    title: BatchAcknowledgeAlarmRequest
    type: object
  BatchAcknowledgeAlarmResponse:
    properties:
      errorEntries:
        allOf:
          - $ref: '#/definitions/BatchAlarmActionErrorEntries'
          - description: >-
              A list of errors associated with the request, or <code>null</code>
              if there are no errors. Each error entry contains an entry ID that
              helps you identify the entry that failed.
    type: object
  BatchAlarmActionErrorEntries:
    items:
      $ref: '#/definitions/BatchAlarmActionErrorEntry'
    type: array
  BatchAlarmActionErrorEntry:
    description: >-
      <p>Contains error messages associated with one of the following
      requests:</p> <ul> <li> <p> <a
      href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchAcknowledgeAlarm.html">BatchAcknowledgeAlarm</a>
      </p> </li> <li> <p> <a
      href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDisableAlarm.html">BatchDisableAlarm</a>
      </p> </li> <li> <p> <a
      href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchEnableAlarm.html">BatchEnableAlarm</a>
      </p> </li> <li> <p> <a
      href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchResetAlarm.html">BatchResetAlarm</a>
      </p> </li> <li> <p> <a
      href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchSnoozeAlarm.html">BatchSnoozeAlarm</a>
      </p> </li> </ul>
    properties:
      errorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code.
      errorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: A message that describes the error.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
    type: object
  BatchDisableAlarmRequest:
    properties:
      disableActionRequests:
        allOf:
          - $ref: '#/definitions/DisableAlarmActionRequests'
          - description: >-
              The list of disable action requests. You can specify up to 10
              requests per operation.
    required:
      - disableActionRequests
    title: BatchDisableAlarmRequest
    type: object
  BatchDisableAlarmResponse:
    properties:
      errorEntries:
        allOf:
          - $ref: '#/definitions/BatchAlarmActionErrorEntries'
          - description: >-
              A list of errors associated with the request, or <code>null</code>
              if there are no errors. Each error entry contains an entry ID that
              helps you identify the entry that failed.
    type: object
  BatchEnableAlarmRequest:
    properties:
      enableActionRequests:
        allOf:
          - $ref: '#/definitions/EnableAlarmActionRequests'
          - description: >-
              The list of enable action requests. You can specify up to 10
              requests per operation.
    required:
      - enableActionRequests
    title: BatchEnableAlarmRequest
    type: object
  BatchEnableAlarmResponse:
    properties:
      errorEntries:
        allOf:
          - $ref: '#/definitions/BatchAlarmActionErrorEntries'
          - description: >-
              A list of errors associated with the request, or <code>null</code>
              if there are no errors. Each error entry contains an entry ID that
              helps you identify the entry that failed.
    type: object
  BatchPutMessageErrorEntries:
    items:
      $ref: '#/definitions/BatchPutMessageErrorEntry'
    type: array
  BatchPutMessageErrorEntry:
    description: Contains information about the errors encountered.
    properties:
      errorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code.
      errorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: A message that describes the error.
      messageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: >-
              The ID of the message that caused the error. (See the value
              corresponding to the <code>"messageId"</code> key in the
              <code>"message"</code> object.)
    type: object
  BatchPutMessageRequest:
    properties:
      messages:
        allOf:
          - $ref: '#/definitions/Messages'
          - description: >-
              The list of messages to send. Each message has the following
              format: <code>'{ "messageId": "string", "inputName": "string",
              "payload": "string"}'</code> 
    required:
      - messages
    title: BatchPutMessageRequest
    type: object
  BatchPutMessageResponse:
    properties:
      BatchPutMessageErrorEntries:
        allOf:
          - $ref: '#/definitions/BatchPutMessageErrorEntries'
          - description: A list of any errors encountered when sending the messages.
    type: object
  BatchResetAlarmRequest:
    properties:
      resetActionRequests:
        allOf:
          - $ref: '#/definitions/ResetAlarmActionRequests'
          - description: >-
              The list of reset action requests. You can specify up to 10
              requests per operation.
    required:
      - resetActionRequests
    title: BatchResetAlarmRequest
    type: object
  BatchResetAlarmResponse:
    properties:
      errorEntries:
        allOf:
          - $ref: '#/definitions/BatchAlarmActionErrorEntries'
          - description: >-
              A list of errors associated with the request, or <code>null</code>
              if there are no errors. Each error entry contains an entry ID that
              helps you identify the entry that failed.
    type: object
  BatchSnoozeAlarmRequest:
    properties:
      snoozeActionRequests:
        allOf:
          - $ref: '#/definitions/SnoozeAlarmActionRequests'
          - description: >-
              The list of snooze action requests. You can specify up to 10
              requests per operation.
    required:
      - snoozeActionRequests
    title: BatchSnoozeAlarmRequest
    type: object
  BatchSnoozeAlarmResponse:
    properties:
      errorEntries:
        allOf:
          - $ref: '#/definitions/BatchAlarmActionErrorEntries'
          - description: >-
              A list of errors associated with the request, or <code>null</code>
              if there are no errors. Each error entry contains an entry ID that
              helps you identify the entry that failed.
    type: object
  BatchUpdateDetectorErrorEntries:
    items:
      $ref: '#/definitions/BatchUpdateDetectorErrorEntry'
    type: array
  BatchUpdateDetectorErrorEntry:
    description: >-
      Information about the error that occurred when attempting to update a
      detector.
    properties:
      errorCode:
        allOf:
          - $ref: '#/definitions/ErrorCode'
          - description: The error code.
      errorMessage:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: A message that describes the error.
      messageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: >-
              The <code>"messageId"</code> of the update request that caused the
              error. (The value of the <code>"messageId"</code> in the update
              request <code>"Detector"</code> object.)
    type: object
  BatchUpdateDetectorRequest:
    properties:
      detectors:
        allOf:
          - $ref: '#/definitions/UpdateDetectorRequests'
          - description: >-
              The list of detectors (instances) to update, along with the values
              to update.
    required:
      - detectors
    title: BatchUpdateDetectorRequest
    type: object
  BatchUpdateDetectorResponse:
    properties:
      batchUpdateDetectorErrorEntries:
        allOf:
          - $ref: '#/definitions/BatchUpdateDetectorErrorEntries'
          - description: >-
              A list of those detector updates that resulted in errors. (If an
              error is listed here, the specific update did not occur.)
    type: object
  ComparisonOperator:
    enum:
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - EQUAL
      - NOT_EQUAL
    type: string
  CustomerAction:
    description: >-
      Contains information about the action that you can take to respond to the
      alarm.
    properties:
      acknowledgeActionConfiguration:
        allOf:
          - $ref: '#/definitions/AcknowledgeActionConfiguration'
          - description: Contains the configuration information of an acknowledge action.
      actionName:
        allOf:
          - $ref: '#/definitions/CustomerActionName'
          - description: >-
              <p>The name of the action. The action name can be one of the
              following values:</p> <ul> <li> <p> <code>SNOOZE</code> - When you
              snooze the alarm, the alarm state changes to
              <code>SNOOZE_DISABLED</code>.</p> </li> <li> <p>
              <code>ENABLE</code> - When you enable the alarm, the alarm state
              changes to <code>NORMAL</code>.</p> </li> <li> <p>
              <code>DISABLE</code> - When you disable the alarm, the alarm state
              changes to <code>DISABLED</code>.</p> </li> <li> <p>
              <code>ACKNOWLEDGE</code> - When you acknowledge the alarm, the
              alarm state changes to <code>ACKNOWLEDGED</code>.</p> </li> <li>
              <p> <code>RESET</code> - When you reset the alarm, the alarm state
              changes to <code>NORMAL</code>.</p> </li> </ul> <p>For more
              information, see the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_AlarmState.html">AlarmState</a>
              API.</p>
      disableActionConfiguration:
        allOf:
          - $ref: '#/definitions/DisableActionConfiguration'
          - description: Contains the configuration information of a disable action.
      enableActionConfiguration:
        allOf:
          - $ref: '#/definitions/EnableActionConfiguration'
          - description: Contains the configuration information of an enable action.
      resetActionConfiguration:
        allOf:
          - $ref: '#/definitions/ResetActionConfiguration'
          - description: Contains the configuration information of a reset action.
      snoozeActionConfiguration:
        allOf:
          - $ref: '#/definitions/SnoozeActionConfiguration'
          - description: Contains the configuration information of a snooze action.
    type: object
  CustomerActionName:
    enum:
      - SNOOZE
      - ENABLE
      - DISABLE
      - ACKNOWLEDGE
      - RESET
    type: string
  DescribeAlarmRequest:
    properties: {}
    title: DescribeAlarmRequest
    type: object
  DescribeAlarmResponse:
    properties:
      alarm:
        allOf:
          - $ref: '#/definitions/Alarm'
          - description: Contains information about an alarm.
    type: object
  DescribeDetectorRequest:
    properties: {}
    title: DescribeDetectorRequest
    type: object
  DescribeDetectorResponse:
    properties:
      detector:
        allOf:
          - $ref: '#/definitions/Detector'
          - description: Information about the detector (instance).
    type: object
  Detector:
    description: Information about the detector (instance).
    properties:
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the detector (instance) was created.
      detectorModelName:
        allOf:
          - $ref: '#/definitions/DetectorModelName'
          - description: >-
              The name of the detector model that created this detector
              (instance).
      detectorModelVersion:
        allOf:
          - $ref: '#/definitions/DetectorModelVersion'
          - description: >-
              The version of the detector model that created this detector
              (instance).
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key (identifying the device or system) that
              caused the creation of this detector (instance).
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the detector (instance) was last updated.
      state:
        allOf:
          - $ref: '#/definitions/DetectorState'
          - description: The current state of the detector (instance).
    type: object
  DetectorModelName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  DetectorModelVersion:
    maxLength: 128
    minLength: 1
    type: string
  DetectorState:
    description: Information about the current state of the detector instance.
    properties:
      stateName:
        allOf:
          - $ref: '#/definitions/StateName'
          - description: The name of the state.
      timers:
        allOf:
          - $ref: '#/definitions/Timers'
          - description: The current state of the detector's timers.
      variables:
        allOf:
          - $ref: '#/definitions/Variables'
          - description: The current values of the detector's variables.
    required:
      - stateName
      - variables
      - timers
    type: object
  DetectorStateDefinition:
    description: >-
      The new state, variable values, and timer settings of the detector
      (instance).
    properties:
      stateName:
        allOf:
          - $ref: '#/definitions/StateName'
          - description: The name of the new state of the detector (instance).
      timers:
        allOf:
          - $ref: '#/definitions/TimerDefinitions'
          - description: >-
              The new values of the detector's timers. Any timer whose value
              isn't specified is cleared, and its timeout event won't occur.
      variables:
        allOf:
          - $ref: '#/definitions/VariableDefinitions'
          - description: >-
              The new values of the detector's variables. Any variable whose
              value isn't specified is cleared.
    required:
      - stateName
      - variables
      - timers
    type: object
  DetectorStateSummary:
    description: Information about the detector state.
    properties:
      stateName:
        allOf:
          - $ref: '#/definitions/StateName'
          - description: The name of the state.
    type: object
  DetectorSummaries:
    items:
      $ref: '#/definitions/DetectorSummary'
    type: array
  DetectorSummary:
    description: Information about the detector (instance).
    properties:
      creationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the detector (instance) was created.
      detectorModelName:
        allOf:
          - $ref: '#/definitions/DetectorModelName'
          - description: >-
              The name of the detector model that created this detector
              (instance).
      detectorModelVersion:
        allOf:
          - $ref: '#/definitions/DetectorModelVersion'
          - description: >-
              The version of the detector model that created this detector
              (instance).
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key (identifying the device or system) that
              caused the creation of this detector (instance).
      lastUpdateTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time the detector (instance) was last updated.
      state:
        allOf:
          - $ref: '#/definitions/DetectorStateSummary'
          - description: The current state of the detector (instance).
    type: object
  DisableActionConfiguration:
    description: Contains the configuration information of a disable action.
    properties:
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you disable the alarm.
    type: object
  DisableAlarmActionRequest:
    description: Information used to disable the alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you disable the alarm.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
    required:
      - requestId
      - alarmModelName
    type: object
  DisableAlarmActionRequests:
    items:
      $ref: '#/definitions/DisableAlarmActionRequest'
    minItems: 1
    type: array
  EnableActionConfiguration:
    description: Contains the configuration information of an enable action.
    properties:
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you enable the alarm.
    type: object
  EnableAlarmActionRequest:
    description: Information needed to enable the alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you enable the alarm.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
    required:
      - requestId
      - alarmModelName
    type: object
  EnableAlarmActionRequests:
    items:
      $ref: '#/definitions/EnableAlarmActionRequest'
    minItems: 1
    type: array
  EphemeralInputName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
    type: string
  EpochMilliTimestamp:
    maximum: 9223372036854776000
    minimum: 1
    type: integer
  ErrorCode:
    enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - InternalFailureException
      - ServiceUnavailableException
      - ThrottlingException
    type: string
  ErrorMessage:
    type: string
  EventType:
    enum:
      - STATE_CHANGE
    type: string
  InputPropertyValue:
    type: string
  InternalFailureException: {}
  InvalidRequestException: {}
  KeyValue:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9\-_:]+$'
    type: string
  ListAlarmsRequest:
    properties: {}
    title: ListAlarmsRequest
    type: object
  ListAlarmsResponse:
    properties:
      alarmSummaries:
        allOf:
          - $ref: '#/definitions/AlarmSummaries'
          - description: A list that summarizes each alarm.
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token that you can use to return the next set of results, or
              <code>null</code> if there are no more results.
    type: object
  ListDetectorsRequest:
    properties: {}
    title: ListDetectorsRequest
    type: object
  ListDetectorsResponse:
    properties:
      detectorSummaries:
        allOf:
          - $ref: '#/definitions/DetectorSummaries'
          - description: A list of summary information about the detectors (instances).
      nextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The token that you can use to return the next set of results, or
              <code>null</code> if there are no more results.
    type: object
  MaxResults:
    maximum: 250
    minimum: 1
    type: integer
  Message:
    description: Information about a message.
    properties:
      inputName:
        allOf:
          - $ref: '#/definitions/EphemeralInputName'
          - description: >-
              The name of the input into which the message payload is
              transformed.
      messageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: >-
              The ID to assign to the message. Within each batch sent, each
              <code>"messageId"</code> must be unique.
      payload:
        allOf:
          - $ref: '#/definitions/Payload'
          - description: >-
              The payload of the message. This can be a JSON string or a
              Base-64-encoded string representing binary data (in which case you
              must decode it).
      timestamp:
        allOf:
          - $ref: '#/definitions/TimestampValue'
          - description: The timestamp associated with the message.
    required:
      - messageId
      - inputName
      - payload
    type: object
  MessageId:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  Messages:
    items:
      $ref: '#/definitions/Message'
    minItems: 1
    type: array
  NextToken:
    type: string
  Note:
    maxLength: 256
    type: string
  Payload:
    type: string
  RequestId:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  ResetActionConfiguration:
    description: Contains the configuration information of a reset action.
    properties:
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you reset the alarm.
    type: object
  ResetAlarmActionRequest:
    description: Information needed to reset the alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you reset the alarm.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
    required:
      - requestId
      - alarmModelName
    type: object
  ResetAlarmActionRequests:
    items:
      $ref: '#/definitions/ResetAlarmActionRequest'
    minItems: 1
    type: array
  ResourceNotFoundException: {}
  RuleEvaluation:
    description: Information needed to evaluate data.
    properties:
      simpleRuleEvaluation:
        allOf:
          - $ref: '#/definitions/SimpleRuleEvaluation'
          - description: >-
              Information needed to compare two values with a comparison
              operator.
    type: object
  Seconds:
    type: integer
  ServiceUnavailableException: {}
  Severity:
    maximum: 2147483647
    minimum: 0
    type: integer
  SimpleRuleEvaluation:
    description: Information needed to compare two values with a comparison operator.
    properties:
      inputPropertyValue:
        allOf:
          - $ref: '#/definitions/InputPropertyValue'
          - description: >-
              The value of the input property, on the left side of the
              comparison operator.
      operator:
        allOf:
          - $ref: '#/definitions/ComparisonOperator'
          - description: The comparison operator.
      thresholdValue:
        allOf:
          - $ref: '#/definitions/ThresholdValue'
          - description: 'The threshold value, on the right side of the comparison operator.'
    type: object
  SnoozeActionConfiguration:
    description: Contains the configuration information of a snooze action.
    properties:
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you snooze the alarm.
      snoozeDuration:
        allOf:
          - $ref: '#/definitions/SnoozeDuration'
          - description: >-
              The snooze time in seconds. The alarm automatically changes to the
              <code>NORMAL</code> state after this duration.
    type: object
  SnoozeAlarmActionRequest:
    description: Information needed to snooze the alarm.
    properties:
      alarmModelName:
        allOf:
          - $ref: '#/definitions/AlarmModelName'
          - description: The name of the alarm model.
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the key used as a filter to select only the alarms
              associated with the <a
              href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
      note:
        allOf:
          - $ref: '#/definitions/Note'
          - description: The note that you can leave when you snooze the alarm.
      requestId:
        allOf:
          - $ref: '#/definitions/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
      snoozeDuration:
        allOf:
          - $ref: '#/definitions/SnoozeDuration'
          - description: >-
              The snooze time in seconds. The alarm automatically changes to the
              <code>NORMAL</code> state after this duration.
    required:
      - requestId
      - alarmModelName
      - snoozeDuration
    type: object
  SnoozeAlarmActionRequests:
    items:
      $ref: '#/definitions/SnoozeAlarmActionRequest'
    minItems: 1
    type: array
  SnoozeDuration:
    type: integer
  StateChangeConfiguration:
    description: Contains the configuration information of alarm state changes.
    properties:
      triggerType:
        allOf:
          - $ref: '#/definitions/TriggerType'
          - description: >-
              The trigger type. If the value is <code>SNOOZE_TIMEOUT</code>, the
              snooze duration ends and the alarm automatically changes to the
              <code>NORMAL</code> state.
    type: object
  StateName:
    maxLength: 128
    minLength: 1
    type: string
  SystemEvent:
    description: Contains information about alarm state changes.
    properties:
      eventType:
        allOf:
          - $ref: '#/definitions/EventType'
          - description: >-
              The event type. If the value is <code>STATE_CHANGE</code>, the
              event contains information about alarm state changes.
      stateChangeConfiguration:
        allOf:
          - $ref: '#/definitions/StateChangeConfiguration'
          - description: Contains the configuration information of alarm state changes.
    type: object
  ThresholdValue:
    type: string
  ThrottlingException: {}
  Timer:
    description: The current state of a timer.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/TimerName'
          - description: The name of the timer.
      timestamp:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The number of seconds which have elapsed on the timer.
    required:
      - name
      - timestamp
    type: object
  TimerDefinition:
    description: The new setting of a timer.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/TimerName'
          - description: The name of the timer.
      seconds:
        allOf:
          - $ref: '#/definitions/Seconds'
          - description: >-
              The new setting of the timer (the number of seconds before the
              timer elapses).
    required:
      - name
      - seconds
    type: object
  TimerDefinitions:
    items:
      $ref: '#/definitions/TimerDefinition'
    type: array
  TimerName:
    maxLength: 128
    minLength: 1
    type: string
  Timers:
    items:
      $ref: '#/definitions/Timer'
    type: array
  Timestamp:
    format: date-time
    type: string
  TimestampValue:
    description: Contains information about a timestamp.
    properties:
      timeInMillis:
        allOf:
          - $ref: '#/definitions/EpochMilliTimestamp'
          - description: 'The value of the timestamp, in the Unix epoch format.'
    type: object
  TriggerType:
    enum:
      - SNOOZE_TIMEOUT
    type: string
  UpdateDetectorRequest:
    description: Information used to update the detector (instance).
    properties:
      detectorModelName:
        allOf:
          - $ref: '#/definitions/DetectorModelName'
          - description: >-
              The name of the detector model that created the detectors
              (instances).
      keyValue:
        allOf:
          - $ref: '#/definitions/KeyValue'
          - description: >-
              The value of the input key attribute (identifying the device or
              system) that caused the creation of this detector (instance).
      messageId:
        allOf:
          - $ref: '#/definitions/MessageId'
          - description: >-
              The ID to assign to the detector update <code>"message"</code>.
              Each <code>"messageId"</code> must be unique within each batch
              sent.
      state:
        allOf:
          - $ref: '#/definitions/DetectorStateDefinition'
          - description: >-
              The new state, variable values, and timer settings of the detector
              (instance).
    required:
      - messageId
      - detectorModelName
      - state
    type: object
  UpdateDetectorRequests:
    items:
      $ref: '#/definitions/UpdateDetectorRequest'
    minItems: 1
    type: array
  Variable:
    description: The current state of the variable.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/VariableName'
          - description: The name of the variable.
      value:
        allOf:
          - $ref: '#/definitions/VariableValue'
          - description: The current value of the variable.
    required:
      - name
      - value
    type: object
  VariableDefinition:
    description: The new value of the variable.
    properties:
      name:
        allOf:
          - $ref: '#/definitions/VariableName'
          - description: The name of the variable.
      value:
        allOf:
          - $ref: '#/definitions/VariableValue'
          - description: The new value of the variable.
    required:
      - name
      - value
    type: object
  VariableDefinitions:
    items:
      $ref: '#/definitions/VariableDefinition'
    type: array
  VariableName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    type: string
  VariableValue:
    maxLength: 1024
    minLength: 1
    type: string
  Variables:
    items:
      $ref: '#/definitions/Variable'
    type: array
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotevents/'
host: data.iotevents.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>AWS IoT Events monitors your equipment or device fleets for failures or
    changes in operation, and triggers actions when such events occur. You can
    use AWS IoT Events Data API commands to send inputs to detectors, list
    detectors, and view or update a detector's status.</p> <p> For more
    information, see <a
    href="https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html">What
    is AWS IoT Events?</a> in the <i>AWS IoT Events Developer Guide</i>.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS IoT Events Data
  version: '2018-10-23'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: ioteventsdata
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iotevents-data
paths:
  /alarms/acknowledge:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Acknowledges one or more alarms. The alarms change to the
        <code>ACKNOWLEDGED</code> state after you acknowledge them.
      operationId: BatchAcknowledgeAlarm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              acknowledgeActionRequests:
                description: >-
                  The list of acknowledge action requests. You can specify up to
                  10 requests per operation.
                items:
                  $ref: '#/definitions/AcknowledgeAlarmActionRequest'
                minItems: 1
                type: array
            required:
              - acknowledgeActionRequests
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BatchAcknowledgeAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /alarms/disable:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Disables one or more alarms. The alarms change to the
        <code>DISABLED</code> state after you disable them.
      operationId: BatchDisableAlarm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              disableActionRequests:
                description: >-
                  The list of disable action requests. You can specify up to 10
                  requests per operation.
                items:
                  $ref: '#/definitions/DisableAlarmActionRequest'
                minItems: 1
                type: array
            required:
              - disableActionRequests
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BatchDisableAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /alarms/enable:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Enables one or more alarms. The alarms change to the <code>NORMAL</code>
        state after you enable them.
      operationId: BatchEnableAlarm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              enableActionRequests:
                description: >-
                  The list of enable action requests. You can specify up to 10
                  requests per operation.
                items:
                  $ref: '#/definitions/EnableAlarmActionRequest'
                minItems: 1
                type: array
            required:
              - enableActionRequests
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BatchEnableAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /alarms/reset:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Resets one or more alarms. The alarms return to the <code>NORMAL</code>
        state after you reset them.
      operationId: BatchResetAlarm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              resetActionRequests:
                description: >-
                  The list of reset action requests. You can specify up to 10
                  requests per operation.
                items:
                  $ref: '#/definitions/ResetAlarmActionRequest'
                minItems: 1
                type: array
            required:
              - resetActionRequests
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BatchResetAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /alarms/snooze:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Changes one or more alarms to the snooze mode. The alarms change to the
        <code>SNOOZE_DISABLED</code> state after you set them to the snooze
        mode.
      operationId: BatchSnoozeAlarm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              snoozeActionRequests:
                description: >-
                  The list of snooze action requests. You can specify up to 10
                  requests per operation.
                items:
                  $ref: '#/definitions/SnoozeAlarmActionRequest'
                minItems: 1
                type: array
            required:
              - snoozeActionRequests
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/BatchSnoozeAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/alarms/{alarmModelName}':
    get:
      description: >-
        Lists one or more alarms. The operation returns only the metadata
        associated with each alarm.
      operationId: ListAlarms
      parameters:
        - description: The name of the alarm model.
          in: path
          maxLength: 128
          minLength: 1
          name: alarmModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: The token that you can use to return the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAlarmsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/alarms/{alarmModelName}/keyValues/':
    get:
      description: Retrieves information about an alarm.
      operationId: DescribeAlarm
      parameters:
        - description: The name of the alarm model.
          in: path
          maxLength: 128
          minLength: 1
          name: alarmModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: >-
            The value of the key used as a filter to select only the alarms
            associated with the <a
            href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          in: query
          maxLength: 128
          minLength: 1
          name: keyValue
          pattern: '^[a-zA-Z0-9\-_:]+$'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /detectors:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates the state, variable values, and timer settings of one or more
        detectors (instances) of a specified detector model.
      operationId: BatchUpdateDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              detectors:
                description: >-
                  The list of detectors (instances) to update, along with the
                  values to update.
                items:
                  $ref: '#/definitions/UpdateDetectorRequest'
                minItems: 1
                type: array
            required:
              - detectors
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchUpdateDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/detectors/{detectorModelName}':
    get:
      description: Lists detectors (the instances of a detector model).
      operationId: ListDetectors
      parameters:
        - description: >-
            The name of the detector model whose detectors (instances) are
            listed.
          in: path
          maxLength: 128
          minLength: 1
          name: detectorModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: >-
            A filter that limits results to those detectors (instances) in the
            given state.
          in: query
          maxLength: 128
          minLength: 1
          name: stateName
          required: false
          type: string
        - description: The token that you can use to return the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to be returned per request.
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDetectorsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/detectors/{detectorModelName}/keyValues/':
    get:
      description: Returns information about the specified detector (instance).
      operationId: DescribeDetector
      parameters:
        - description: >-
            The name of the detector model whose detectors (instances) you want
            information about.
          in: path
          maxLength: 128
          minLength: 1
          name: detectorModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: >-
            A filter used to limit results to detectors (instances) created
            because of the given key ID.
          in: query
          maxLength: 128
          minLength: 1
          name: keyValue
          pattern: '^[a-zA-Z0-9\-_:]+$'
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /inputs/messages:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Sends a set of messages to the AWS IoT Events system. Each message
        payload is transformed into the input you specify
        (<code>"inputName"</code>) and ingested into any detectors that monitor
        that input. If multiple messages are sent, the order in which the
        messages are processed isn't guaranteed. To guarantee ordering, you must
        send messages one at a time and wait for a successful response.
      operationId: BatchPutMessage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              messages:
                description: >-
                  The list of messages to send. Each message has the following
                  format: <code>'{ "messageId": "string", "inputName": "string",
                  "payload": "string"}'</code> 
                items:
                  $ref: '#/definitions/Message'
                minItems: 1
                type: array
            required:
              - messages
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchPutMessageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string

