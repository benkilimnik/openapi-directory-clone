basePath: /
definitions:
  AccessConfiguration:
    description: Access configuration parameters.
    properties:
      AccessType:
        allOf:
          - $ref: '#/definitions/AccessType'
          - description: >-
              <p>The type of authentication used to access content from
              HttpConfiguration::BaseUrl on your source location. Accepted
              value: S3_SIGV4.</p> <p>S3_SIGV4 - AWS Signature Version 4
              authentication for Amazon S3 hosted virtual-style access. If your
              source location base URL is an Amazon S3 bucket, MediaTailor can
              use AWS Signature Version 4 (SigV4) authentication to access the
              bucket where your source content is stored. Your MediaTailor
              source location baseURL must follow the S3 virtual hosted-style
              request URL format. For example,
              https://bucket-name.s3.Region.amazonaws.com/key-name.</p>
              <p>Before you can use S3_SIGV4, you must meet these
              requirements:</p> <p>• You must allow MediaTailor to access your
              S3 bucket by granting mediatailor.amazonaws.com principal access
              in IAM. For information about configuring access in IAM, see
              Access management in the IAM User Guide.</p> <p>• The
              mediatailor.amazonaws.com service principal must have permissions
              to read all top level manifests referenced by the VodSource
              packaging configurations.</p> <p>• The caller of the API must have
              s3:GetObject IAM permissions to read all top level manifests
              referenced by your MediaTailor VodSource packaging
              configurations.</p>
      SecretsManagerAccessTokenConfiguration:
        allOf:
          - $ref: '#/definitions/SecretsManagerAccessTokenConfiguration'
          - description: AWS Secrets Manager access token configuration parameters.
    type: object
  AccessType:
    enum:
      - S3_SIGV4
      - SECRETS_MANAGER_ACCESS_TOKEN
    type: string
  AdBreak:
    description: Ad break configuration parameters.
    properties:
      MessageType:
        allOf:
          - $ref: '#/definitions/MessageType'
          - description: 'The SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.'
      OffsetMillis:
        allOf:
          - $ref: '#/definitions/__long'
          - description: >-
              How long (in milliseconds) after the beginning of the program that
              an ad starts. This value must fall within 100ms of a segment
              boundary, otherwise the ad break will be skipped.
      Slate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: Ad break slate configuration.
      SpliceInsertMessage:
        allOf:
          - $ref: '#/definitions/SpliceInsertMessage'
          - description: >-
              This defines the SCTE-35 splice_insert() message inserted around
              the ad. For information about using splice_insert(), see the
              SCTE-35 specficiaiton, section 9.7.3.1.
    type: object
  AdMarkerPassthrough:
    description: >-
      <p>For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN,
      EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
      manifest to the MediaTailor personalized manifest.</p> <p>No logic is
      applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of
      60, but no ads are filled for that ad break, MediaTailor will not set the
      value to 0.</p>
    properties:
      Enabled:
        allOf:
          - $ref: '#/definitions/__boolean'
          - description: Enables ad marker passthrough for your configuration.
    type: object
  Alert:
    description: Alert configuration parameters.
    properties:
      AlertCode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: 'The code for the alert. For example, NOT_PROCESSED.'
      AlertMessage:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              If an alert is generated for a resource, an explanation of the
              reason for the alert.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp when the alert was last modified.
      RelatedResourceArns:
        allOf:
          - $ref: '#/definitions/__listOf__string'
          - description: The Amazon Resource Names (ARNs) related to this alert.
      ResourceArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) of the resource.
    required:
      - ResourceArn
      - AlertCode
      - LastModifiedTime
      - RelatedResourceArns
      - AlertMessage
    type: object
  AvailSuppression:
    description: >-
      The configuration for avail suppression, also known as ad suppression. For
      more information about ad suppression, see <a
      href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
      Suppression</a>.
    properties:
      Mode:
        allOf:
          - $ref: '#/definitions/Mode'
          - description: >-
              Sets the ad suppression mode. By default, ad suppression is off
              and all ad breaks are filled with ads or slate. When Mode is set
              to BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor
              won't fill ad breaks on or behind the ad suppression Value time in
              the manifest lookback window.
      Value:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              A live edge offset time in HH:MM:SS. MediaTailor won't fill ad
              breaks on or behind this time in the manifest lookback window. If
              Value is set to 00:00:00, it is in sync with the live edge, and
              MediaTailor won't fill any ad breaks on or behind the live edge.
              If you set a Value time, MediaTailor won't fill any ad breaks on
              or behind this time in the manifest lookback window. For example,
              if you set 00:45:00, then MediaTailor will fill ad breaks that
              occur within 45 minutes behind the live edge, but won't fill ad
              breaks on or behind 45 minutes behind the live edge.
    type: object
  BadRequestException: {}
  Bumper:
    description: >-
      The configuration for bumpers. Bumpers are short audio or video clips that
      play at the start or before the end of an ad break. To learn more about
      bumpers, see <a
      href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
    properties:
      EndUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The URL for the end bumper asset.
      StartUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The URL for the start bumper asset.
    type: object
  CdnConfiguration:
    description: >-
      The configuration for using a content delivery network (CDN), like Amazon
      CloudFront, for content and ad segment management.
    properties:
      AdSegmentUrlPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              A non-default content delivery network (CDN) to serve ad segments.
              By default, AWS Elemental MediaTailor uses Amazon CloudFront with
              default cache settings as its CDN for ad segments. To set up an
              alternate CDN, create a rule in your CDN for the origin
              ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the
              rule's name in this AdSegmentUrlPrefix. When AWS Elemental
              MediaTailor serves a manifest, it reports your CDN as the source
              for ad segments.
      ContentSegmentUrlPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              A content delivery network (CDN) to cache content segments, so
              that content requests don’t always have to go to the origin
              server. First, create a rule in your CDN for the content segment
              origin server. Then specify the rule's name in this
              ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a
              manifest, it reports your CDN as the source for content segments.
    type: object
  Channel:
    description: The configuration parameters for a channel.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the channel.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel.
      ChannelState:
        allOf:
          - $ref: '#/definitions/__string'
          - description: Returns the state whether the channel is running or not.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was created.
      FillerSlate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: >-
              Contains information about the slate used to fill gaps between
              programs in the schedule. You must configure FillerSlate if your
              channel uses an LINEAR PlaybackMode.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
      Outputs:
        allOf:
          - $ref: '#/definitions/ResponseOutputs'
          - description: The channel's output properties.
      PlaybackMode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              <p>The type of playback mode for this channel.</p> <p>LINEAR -
              Programs play back-to-back only once.</p> <p>LOOP - Programs play
              back-to-back in an endless loop. When the last program in the
              schedule plays, playback loops back to the first program in the
              schedule.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the channel.
            xml:
              name: tags
    required:
      - ChannelState
      - ChannelName
      - Outputs
      - Arn
      - PlaybackMode
    type: object
  ChannelState:
    enum:
      - RUNNING
      - STOPPED
    type: string
  ConfigurationAliasesRequest:
    additionalProperties:
      $ref: '#/definitions/__mapOf__string'
    description: The predefined aliases for dynamic variables.
    type: object
  ConfigurationAliasesResponse:
    additionalProperties:
      $ref: '#/definitions/__mapOf__string'
    description: The predefined aliases for dynamic variables.
    type: object
  CreateChannelRequest:
    properties:
      FillerSlate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: >-
              The slate used to fill gaps between programs in the schedule. You
              must configure filler slate if your channel uses an LINEAR
              PlaybackMode.
      Outputs:
        allOf:
          - $ref: '#/definitions/RequestOutputs'
          - description: The channel's output properties.
      PlaybackMode:
        allOf:
          - $ref: '#/definitions/PlaybackMode'
          - description: >-
              <p>The type of playback mode to use for this channel.</p>
              <p>LINEAR - The programs in the schedule play once back-to-back in
              the schedule.</p> <p>LOOP - The programs in the schedule play
              back-to-back in an endless loop. When the last program in the
              schedule stops playing, playback loops back to the first program
              in the schedule.</p>
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the channel.
            xml:
              name: tags
    required:
      - Outputs
      - PlaybackMode
    title: CreateChannelRequest
    type: object
  CreateChannelResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the channel.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel.
      ChannelState:
        allOf:
          - $ref: '#/definitions/ChannelState'
          - description: Indicates whether the channel is in a running state or not.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was created.
      FillerSlate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: >-
              Contains information about the slate used to fill gaps between
              programs in the schedule.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
      Outputs:
        allOf:
          - $ref: '#/definitions/ResponseOutputs'
          - description: The channel's output properties.
      PlaybackMode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The channel's playback mode.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the channel.
            xml:
              name: tags
    type: object
  CreateProgramRequest:
    properties:
      AdBreaks:
        allOf:
          - $ref: '#/definitions/__listOfAdBreak'
          - description: The ad break configuration settings.
      ScheduleConfiguration:
        allOf:
          - $ref: '#/definitions/ScheduleConfiguration'
          - description: The schedule configuration settings.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name that's used to refer to a VOD source.
    required:
      - VodSourceName
      - ScheduleConfiguration
      - SourceLocationName
    title: CreateProgramRequest
    type: object
  CreateProgramResponse:
    properties:
      AdBreaks:
        allOf:
          - $ref: '#/definitions/__listOfAdBreak'
          - description: The ad break configuration settings.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the program.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel that the program belongs to.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the program was created.
      ProgramName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the program.
      ScheduledStartTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The date and time that the program is scheduled to start in ISO
              8601 format and Coordinated Universal Time (UTC). For example, the
              value 2021-03-27T17:48:16.751Z represents March 27, 2021 at
              17:48:16.751 UTC.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The source location name.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name that's used to refer to a VOD source.
    type: object
  CreateSourceLocationRequest:
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: >-
              Access configuration parameters. Configures the type of
              authentication used to access content from your source location.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: The optional configuration for the server that serves segments.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The source's HTTP package configurations.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the source location.
            xml:
              name: tags
    required:
      - HttpConfiguration
    title: CreateSourceLocationRequest
    type: object
  CreateSourceLocationResponse:
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: The access configuration for the source location.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the source location.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the source location was created.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: The default segment delivery configuration settings.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The HTTP package configuration settings for the source location.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The timestamp that indicates when the source location was last
              modified.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the source location.
            xml:
              name: tags
    type: object
  CreateVodSourceRequest:
    properties:
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: >-
              An array of HTTP package configuration parameters for this VOD
              source.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the VOD source.
            xml:
              name: tags
    required:
      - HttpPackageConfigurations
    title: CreateVodSourceRequest
    type: object
  CreateVodSourceResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the VOD source.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: The HTTP package configurations.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The ARN for the VOD source.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location associated with the VOD source.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the VOD source.
            xml:
              name: tags
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source.
    type: object
  DashConfiguration:
    description: The configuration for DASH content.
    properties:
      ManifestEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL generated by MediaTailor to initiate a playback session.
              The session uses server-side reporting. This setting is ignored in
              PUT operations.
      MpdLocation:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The setting that controls whether MediaTailor includes the
              Location tag in DASH manifests. MediaTailor populates the Location
              tag with the URL for manifest update requests, to be used by
              players that don't support sticky redirects. Disable this if you
              have CDN routing rules set up for accessing MediaTailor manifests,
              and you are either using client-side reporting or your players
              support sticky HTTP redirects. Valid values are DISABLED and
              EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the
              tag and is the default value.
      OriginManifestType:
        allOf:
          - $ref: '#/definitions/OriginManifestType'
          - description: >-
              The setting that controls whether MediaTailor handles manifests
              from the origin server as multi-period manifests or single-period
              manifests. If your origin server produces single-period manifests,
              set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD.
              For multi-period manifests, omit this setting or set it to
              MULTI_PERIOD.
    type: object
  DashConfigurationForPut:
    description: The configuration for DASH PUT operations.
    properties:
      MpdLocation:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The setting that controls whether MediaTailor includes the
              Location tag in DASH manifests. MediaTailor populates the Location
              tag with the URL for manifest update requests, to be used by
              players that don't support sticky redirects. Disable this if you
              have CDN routing rules set up for accessing MediaTailor manifests,
              and you are either using client-side reporting or your players
              support sticky HTTP redirects. Valid values are DISABLED and
              EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the
              tag and is the default value.
      OriginManifestType:
        allOf:
          - $ref: '#/definitions/OriginManifestType'
          - description: >-
              The setting that controls whether MediaTailor handles manifests
              from the origin server as multi-period manifests or single-period
              manifests. If your origin server produces single-period manifests,
              set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD.
              For multi-period manifests, omit this setting or set it to
              MULTI_PERIOD.
    type: object
  DashPlaylistSettings:
    description: Dash manifest configuration parameters.
    properties:
      ManifestWindowSeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              The total duration (in seconds) of each manifest. Minimum value:
              30 seconds. Maximum value: 3600 seconds.
      MinBufferTimeSeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              Minimum amount of content (measured in seconds) that a player must
              keep available in the buffer. Minimum value: 2 seconds. Maximum
              value: 60 seconds.
      MinUpdatePeriodSeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              Minimum amount of time (in seconds) that the player should wait
              before requesting updates to the manifest. Minimum value: 2
              seconds. Maximum value: 60 seconds.
      SuggestedPresentationDelaySeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              Amount of time (in seconds) that the player should be from the
              live point at the end of the manifest. Minimum value: 2 seconds.
              Maximum value: 60 seconds.
    type: object
  DefaultSegmentDeliveryConfiguration:
    description: >-
      The optional configuration for a server that serves segments. Use this if
      you want the segment delivery server to be different from the source
      location server. For example, you can configure your source location
      server to be an origination server, such as MediaPackage, and the segment
      delivery server to be a content delivery network (CDN), such as
      CloudFront. If you don't specify a segment delivery server, then the
      source location server is used.
    properties:
      BaseUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The hostname of the server that will be used to serve segments.
              This string must include the protocol, such as <b>https://</b>.
    type: object
  DeleteChannelPolicyRequest:
    properties: {}
    title: DeleteChannelPolicyRequest
    type: object
  DeleteChannelPolicyResponse:
    properties: {}
    type: object
  DeleteChannelRequest:
    properties: {}
    title: DeleteChannelRequest
    type: object
  DeleteChannelResponse:
    properties: {}
    type: object
  DeletePlaybackConfigurationRequest:
    properties: {}
    title: DeletePlaybackConfigurationRequest
    type: object
  DeletePlaybackConfigurationResponse:
    properties: {}
    type: object
  DeleteProgramRequest:
    properties: {}
    title: DeleteProgramRequest
    type: object
  DeleteProgramResponse:
    properties: {}
    type: object
  DeleteSourceLocationRequest:
    properties: {}
    title: DeleteSourceLocationRequest
    type: object
  DeleteSourceLocationResponse:
    properties: {}
    type: object
  DeleteVodSourceRequest:
    properties: {}
    title: DeleteVodSourceRequest
    type: object
  DeleteVodSourceResponse:
    properties: {}
    type: object
  DescribeChannelRequest:
    properties: {}
    title: DescribeChannelRequest
    type: object
  DescribeChannelResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the channel.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel.
      ChannelState:
        allOf:
          - $ref: '#/definitions/ChannelState'
          - description: Indicates whether the channel is in a running state or not.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was created.
      FillerSlate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: >-
              Contains information about the slate used to fill gaps between
              programs in the schedule.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
      Outputs:
        allOf:
          - $ref: '#/definitions/ResponseOutputs'
          - description: The channel's output properties.
      PlaybackMode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The channel's playback mode.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the channel.
            xml:
              name: tags
    type: object
  DescribeProgramRequest:
    properties: {}
    title: DescribeProgramRequest
    type: object
  DescribeProgramResponse:
    properties:
      AdBreaks:
        allOf:
          - $ref: '#/definitions/__listOfAdBreak'
          - description: The ad break configuration settings.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the program.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel that the program belongs to.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the program was created.
      ProgramName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the program.
      ScheduledStartTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The date and time that the program is scheduled to start in ISO
              8601 format and Coordinated Universal Time (UTC). For example, the
              value 2021-03-27T17:48:16.751Z represents March 27, 2021 at
              17:48:16.751 UTC.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The source location name.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name that's used to refer to a VOD source.
    type: object
  DescribeSourceLocationRequest:
    properties: {}
    title: DescribeSourceLocationRequest
    type: object
  DescribeSourceLocationResponse:
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: The access configuration for the source location.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the source location.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the source location was created.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: The default segment delivery configuration settings.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The HTTP package configuration settings for the source location.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The timestamp that indicates when the source location was last
              modified.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the source location.
            xml:
              name: tags
    type: object
  DescribeVodSourceRequest:
    properties: {}
    title: DescribeVodSourceRequest
    type: object
  DescribeVodSourceResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the VOD source.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: The HTTP package configurations.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The ARN for the VOD source.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location associated with the VOD source.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the VOD source.
            xml:
              name: tags
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source.
    type: object
  GetChannelPolicyRequest:
    properties: {}
    title: GetChannelPolicyRequest
    type: object
  GetChannelPolicyResponse:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The IAM policy for the channel.
    type: object
  GetChannelScheduleRequest:
    properties: {}
    title: GetChannelScheduleRequest
    type: object
  GetChannelScheduleResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfScheduleEntry'
          - description: An array of schedule entries for the channel.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token from the GET list request. Use the token to fetch
              the next page of results.
    type: object
  GetPlaybackConfigurationRequest:
    properties: {}
    title: GetPlaybackConfigurationRequest
    type: object
  GetPlaybackConfigurationResponse:
    properties:
      AdDecisionServerUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for the ad decision server (ADS). This includes the
              specification of static parameters and placeholders for dynamic
              parameters. AWS Elemental MediaTailor substitutes player-specific
              and session-specific parameters as needed when calling the ADS.
              Alternately, for testing, you can provide a static VAST URL. The
              maximum length is 25,000 characters.
      AvailSuppression:
        allOf:
          - $ref: '#/definitions/AvailSuppression'
          - description: >-
              The configuration for avail suppression, also known as ad
              suppression. For more information about ad suppression, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Suppression</a>.
      Bumper:
        allOf:
          - $ref: '#/definitions/Bumper'
          - description: >-
              The configuration for bumpers. Bumpers are short audio or video
              clips that play at the start or before the end of an ad break. To
              learn more about bumpers, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
      CdnConfiguration:
        allOf:
          - $ref: '#/definitions/CdnConfiguration'
          - description: >-
              The configuration for using a content delivery network (CDN), like
              Amazon CloudFront, for content and ad segment management.
      ConfigurationAliases:
        allOf:
          - $ref: '#/definitions/ConfigurationAliasesResponse'
          - description: >-
              The player parameters and aliases used as dynamic variables during
              session initialization. For more information, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain
              Variables</a>.
      DashConfiguration:
        allOf:
          - $ref: '#/definitions/DashConfiguration'
          - description: The configuration for DASH content.
      HlsConfiguration:
        allOf:
          - $ref: '#/definitions/HlsConfiguration'
          - description: The configuration for HLS content.
      LivePreRollConfiguration:
        allOf:
          - $ref: '#/definitions/LivePreRollConfiguration'
          - description: The configuration for pre-roll ad insertion.
      ManifestProcessingRules:
        allOf:
          - $ref: '#/definitions/ManifestProcessingRules'
          - description: >-
              The configuration for manifest processing rules. Manifest
              processing rules enable customization of the personalized
              manifests created by MediaTailor.
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The identifier for the playback configuration.
      PersonalizationThresholdSeconds:
        allOf:
          - $ref: '#/definitions/__integerMin1'
          - description: >-
              Defines the maximum duration of underfilled ad time (in seconds)
              allowed in an ad break. If the duration of underfilled ad time
              exceeds the personalization threshold, then the personalization of
              the ad break is abandoned and the underlying content is shown.
              This feature applies to <i>ad replacement</i> in live and VOD
              streams, rather than ad insertion, because it relies on an
              underlying content stream. For more information about ad break
              behavior, including ad replacement and insertion, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Behavior in AWS Elemental MediaTailor</a>.
      PlaybackConfigurationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) for the playback configuration.
      PlaybackEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player accesses to get a manifest from AWS
              Elemental MediaTailor. This session will use server-side
              reporting.
      SessionInitializationEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player uses to initialize a session that uses
              client-side reporting.
      SlateAdUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for a high-quality video asset to transcode and use to
              fill in time that's not used by ads. AWS Elemental MediaTailor
              shows the slate to fill in gaps in media content. Configuring the
              slate is optional for non-VPAID playback configurations. For
              VPAID, the slate is required because MediaTailor provides it in
              the slots designated for dynamic ad content. The slate must be a
              high-quality asset that contains both audio and video.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the playback configuration.
            xml:
              name: tags
      TranscodeProfileName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic
              transcoding defaults of MediaTailor. Use this only if you have
              already set up custom profiles with the help of AWS Support.
      VideoContentSourceUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL prefix for the parent manifest for the stream, minus the
              asset ID. The maximum length is 512 characters.
    type: object
  HlsConfiguration:
    description: The configuration for HLS content.
    properties:
      ManifestEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that is used to initiate a playback session for devices
              that support Apple HLS. The session uses server-side reporting.
    type: object
  HlsPlaylistSettings:
    description: HLS playlist configuration parameters.
    properties:
      ManifestWindowSeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              The total duration (in seconds) of each manifest. Minimum value:
              30 seconds. Maximum value: 3600 seconds.
    type: object
  HttpConfiguration:
    description: The HTTP configuration for the source location.
    properties:
      BaseUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The base URL for the source location host server. This string must
              include the protocol, such as <b>https://</b>.
    required:
      - BaseUrl
    type: object
  HttpPackageConfiguration:
    description: The HTTP package configuration properties for the requested VOD source.
    properties:
      Path:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The relative path to the URL for this VOD source. This is combined
              with SourceLocation::HttpConfiguration::BaseUrl to form a valid
              URL.
      SourceGroup:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the source group. This has to match one of the
              Channel::Outputs::SourceGroup.
      Type:
        allOf:
          - $ref: '#/definitions/Type'
          - description: >-
              The streaming protocol for this package configuration. Supported
              values are HLS and DASH.
    required:
      - Path
      - Type
      - SourceGroup
    type: object
  HttpPackageConfigurations:
    description: The VOD source's HTTP package configuration settings.
    items:
      $ref: '#/definitions/HttpPackageConfiguration'
    type: array
  ListAlertsRequest:
    properties: {}
    title: ListAlertsRequest
    type: object
  ListAlertsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfAlert'
          - description: An array of alerts that are associated with this resource.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token from the list request. Use the token to fetch the
              next page of results.
    type: object
  ListChannelsRequest:
    properties: {}
    title: ListChannelsRequest
    type: object
  ListChannelsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfChannel'
          - description: An array of channels that are associated with this account.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token returned by the list request when results exceed
              the maximum allowed. Use the token to fetch the next page of
              results.
    type: object
  ListPlaybackConfigurationsRequest:
    properties: {}
    title: ListPlaybackConfigurationsRequest
    type: object
  ListPlaybackConfigurationsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfPlaybackConfiguration'
          - description: >-
              Array of playback configurations. This might be all the available
              configurations or a subset, depending on the settings that you
              provide and the total number of configurations stored.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token returned by the GET list request when results
              exceed the maximum allowed. Use the token to fetch the next page
              of results.
    type: object
  ListSourceLocationsRequest:
    properties: {}
    title: ListSourceLocationsRequest
    type: object
  ListSourceLocationsResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfSourceLocation'
          - description: An array of source locations.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token from the list request. Use the token to fetch the
              next page of results.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: 'A comma-separated list of tag key:value pairs.'
            xml:
              name: tags
    type: object
  ListVodSourcesRequest:
    properties: {}
    title: ListVodSourcesRequest
    type: object
  ListVodSourcesResponse:
    properties:
      Items:
        allOf:
          - $ref: '#/definitions/__listOfVodSource'
          - description: Lists the VOD sources.
      NextToken:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              Pagination token from the list request. Use the token to fetch the
              next page of results.
    type: object
  LivePreRollConfiguration:
    description: The configuration for pre-roll ad insertion.
    properties:
      AdDecisionServerUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for the ad decision server (ADS) for pre-roll ads. This
              includes the specification of static parameters and placeholders
              for dynamic parameters. AWS Elemental MediaTailor substitutes
              player-specific and session-specific parameters as needed when
              calling the ADS. Alternately, for testing, you can provide a
              static VAST URL. The maximum length is 25,000 characters.
      MaxDurationSeconds:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              The maximum allowed duration for the pre-roll ad avail. AWS
              Elemental MediaTailor won't play pre-roll ads to exceed this
              duration, regardless of the total duration of ads that the ADS
              returns.
    type: object
  ManifestProcessingRules:
    description: >-
      The configuration for manifest processing rules. Manifest processing rules
      enable customization of the personalized manifests created by MediaTailor.
    properties:
      AdMarkerPassthrough:
        allOf:
          - $ref: '#/definitions/AdMarkerPassthrough'
          - description: >-
              <p>For HLS, when set to true, MediaTailor passes through
              EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad
              markers from the origin manifest to the MediaTailor personalized
              manifest.</p> <p>No logic is applied to these ad markers. For
              example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled
              for that ad break, MediaTailor will not set the value to 0.</p>
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MessageType:
    enum:
      - SPLICE_INSERT
    type: string
  Mode:
    enum:
      - 'OFF'
      - BEHIND_LIVE_EDGE
    type: string
  OriginManifestType:
    enum:
      - SINGLE_PERIOD
      - MULTI_PERIOD
    type: string
  PlaybackConfiguration:
    description: >-
      Creates a playback configuration. For information about MediaTailor
      configurations, see <a
      href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working
      with configurations in AWS Elemental MediaTailor</a>.
    properties:
      AdDecisionServerUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for the ad decision server (ADS). This includes the
              specification of static parameters and placeholders for dynamic
              parameters. AWS Elemental MediaTailor substitutes player-specific
              and session-specific parameters as needed when calling the ADS.
              Alternately, for testing you can provide a static VAST URL. The
              maximum length is 25,000 characters.
      AvailSuppression:
        allOf:
          - $ref: '#/definitions/AvailSuppression'
          - description: >-
              The configuration for avail suppression, also known as ad
              suppression. For more information about ad suppression, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Suppression</a>.
      Bumper:
        allOf:
          - $ref: '#/definitions/Bumper'
          - description: >-
              The configuration for bumpers. Bumpers are short audio or video
              clips that play at the start or before the end of an ad break. To
              learn more about bumpers, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
      CdnConfiguration:
        allOf:
          - $ref: '#/definitions/CdnConfiguration'
          - description: >-
              The configuration for using a content delivery network (CDN), like
              Amazon CloudFront, for content and ad segment management.
      ConfigurationAliases:
        allOf:
          - $ref: '#/definitions/ConfigurationAliasesResponse'
          - description: >-
              The player parameters and aliases used as dynamic variables during
              session initialization. For more information, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain
              Variables</a>.
      DashConfiguration:
        allOf:
          - $ref: '#/definitions/DashConfiguration'
          - description: The configuration for a DASH source.
      HlsConfiguration:
        allOf:
          - $ref: '#/definitions/HlsConfiguration'
          - description: The configuration for HLS content.
      LivePreRollConfiguration:
        allOf:
          - $ref: '#/definitions/LivePreRollConfiguration'
          - description: The configuration for pre-roll ad insertion.
      ManifestProcessingRules:
        allOf:
          - $ref: '#/definitions/ManifestProcessingRules'
          - description: >-
              The configuration for manifest processing rules. Manifest
              processing rules enable customization of the personalized
              manifests created by MediaTailor.
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The identifier for the playback configuration.
      PersonalizationThresholdSeconds:
        allOf:
          - $ref: '#/definitions/__integerMin1'
          - description: >-
              Defines the maximum duration of underfilled ad time (in seconds)
              allowed in an ad break. If the duration of underfilled ad time
              exceeds the personalization threshold, then the personalization of
              the ad break is abandoned and the underlying content is shown.
              This feature applies to <i>ad replacement</i> in live and VOD
              streams, rather than ad insertion, because it relies on an
              underlying content stream. For more information about ad break
              behavior, including ad replacement and insertion, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Behavior in AWS Elemental MediaTailor</a>.
      PlaybackConfigurationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) for the playback configuration.
      PlaybackEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player accesses to get a manifest from AWS
              Elemental MediaTailor.
      SessionInitializationEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player uses to initialize a session that uses
              client-side reporting.
      SlateAdUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for a video asset to transcode and use to fill in time
              that's not used by ads. AWS Elemental MediaTailor shows the slate
              to fill in gaps in media content. Configuring the slate is
              optional for non-VPAID playback configurations. For VPAID, the
              slate is required because MediaTailor provides it in the slots
              designated for dynamic ad content. The slate must be a
              high-quality asset that contains both audio and video.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the playback configuration.
            xml:
              name: tags
      TranscodeProfileName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic
              transcoding defaults of MediaTailor. Use this only if you have
              already set up custom profiles with the help of AWS Support.
      VideoContentSourceUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL prefix for the parent manifest for the stream, minus the
              asset ID. The maximum length is 512 characters.
    type: object
  PlaybackMode:
    enum:
      - LOOP
      - LINEAR
    type: string
  PutChannelPolicyRequest:
    properties:
      Policy:
        allOf:
          - $ref: '#/definitions/__string'
          - description: Adds an IAM role that determines the permissions of your channel.
    required:
      - Policy
    title: PutChannelPolicyRequest
    type: object
  PutChannelPolicyResponse:
    properties: {}
    type: object
  PutPlaybackConfigurationRequest:
    properties:
      AdDecisionServerUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for the ad decision server (ADS). This includes the
              specification of static parameters and placeholders for dynamic
              parameters. AWS Elemental MediaTailor substitutes player-specific
              and session-specific parameters as needed when calling the ADS.
              Alternately, for testing you can provide a static VAST URL. The
              maximum length is 25,000 characters.
      AvailSuppression:
        allOf:
          - $ref: '#/definitions/AvailSuppression'
          - description: >-
              The configuration for avail suppression, also known as ad
              suppression. For more information about ad suppression, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Suppression</a>.
      Bumper:
        allOf:
          - $ref: '#/definitions/Bumper'
          - description: >-
              The configuration for bumpers. Bumpers are short audio or video
              clips that play at the start or before the end of an ad break. To
              learn more about bumpers, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
      CdnConfiguration:
        allOf:
          - $ref: '#/definitions/CdnConfiguration'
          - description: >-
              The configuration for using a content delivery network (CDN), like
              Amazon CloudFront, for content and ad segment management.
      ConfigurationAliases:
        allOf:
          - $ref: '#/definitions/ConfigurationAliasesRequest'
          - description: >-
              <p>The player parameters and aliases used as dynamic variables
              during session initialization. For more information, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain
              Variables</a>.</p> 
      DashConfiguration:
        allOf:
          - $ref: '#/definitions/DashConfigurationForPut'
          - description: The configuration for DASH content.
      LivePreRollConfiguration:
        allOf:
          - $ref: '#/definitions/LivePreRollConfiguration'
          - description: The configuration for pre-roll ad insertion.
      ManifestProcessingRules:
        allOf:
          - $ref: '#/definitions/ManifestProcessingRules'
          - description: >-
              The configuration for manifest processing rules. Manifest
              processing rules enable customization of the personalized
              manifests created by MediaTailor.
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The identifier for the playback configuration.
      PersonalizationThresholdSeconds:
        allOf:
          - $ref: '#/definitions/__integerMin1'
          - description: >-
              Defines the maximum duration of underfilled ad time (in seconds)
              allowed in an ad break. If the duration of underfilled ad time
              exceeds the personalization threshold, then the personalization of
              the ad break is abandoned and the underlying content is shown.
              This feature applies to <i>ad replacement</i> in live and VOD
              streams, rather than ad insertion, because it relies on an
              underlying content stream. For more information about ad break
              behavior, including ad replacement and insertion, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Behavior in AWS Elemental MediaTailor</a>.
      SlateAdUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for a high-quality video asset to transcode and use to
              fill in time that's not used by ads. AWS Elemental MediaTailor
              shows the slate to fill in gaps in media content. Configuring the
              slate is optional for non-VPAID configurations. For VPAID, the
              slate is required because MediaTailor provides it in the slots
              that are designated for dynamic ad content. The slate must be a
              high-quality asset that contains both audio and video.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags to assign to the playback configuration.
            xml:
              name: tags
      TranscodeProfileName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic
              transcoding defaults of MediaTailor. Use this only if you have
              already set up custom profiles with the help of AWS Support.
      VideoContentSourceUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL prefix for the parent manifest for the stream, minus the
              asset ID. The maximum length is 512 characters.
    title: PutPlaybackConfigurationRequest
    type: object
  PutPlaybackConfigurationResponse:
    properties:
      AdDecisionServerUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for the ad decision server (ADS). This includes the
              specification of static parameters and placeholders for dynamic
              parameters. AWS Elemental MediaTailor substitutes player-specific
              and session-specific parameters as needed when calling the ADS.
              Alternately, for testing, you can provide a static VAST URL. The
              maximum length is 25,000 characters.
      AvailSuppression:
        allOf:
          - $ref: '#/definitions/AvailSuppression'
          - description: >-
              The configuration for avail suppression, also known as ad
              suppression. For more information about ad suppression, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Suppression</a>.
      Bumper:
        allOf:
          - $ref: '#/definitions/Bumper'
          - description: >-
              The configuration for bumpers. Bumpers are short audio or video
              clips that play at the start or before the end of an ad break. To
              learn more about bumpers, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
      CdnConfiguration:
        allOf:
          - $ref: '#/definitions/CdnConfiguration'
          - description: >-
              The configuration for using a content delivery network (CDN), like
              Amazon CloudFront, for content and ad segment management.
      ConfigurationAliases:
        allOf:
          - $ref: '#/definitions/ConfigurationAliasesResponse'
          - description: >-
              The player parameters and aliases used as dynamic variables during
              session initialization. For more information, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain
              Variables</a>.
      DashConfiguration:
        allOf:
          - $ref: '#/definitions/DashConfiguration'
          - description: The configuration for DASH content.
      HlsConfiguration:
        allOf:
          - $ref: '#/definitions/HlsConfiguration'
          - description: The configuration for HLS content.
      LivePreRollConfiguration:
        allOf:
          - $ref: '#/definitions/LivePreRollConfiguration'
          - description: The configuration for pre-roll ad insertion.
      ManifestProcessingRules:
        allOf:
          - $ref: '#/definitions/ManifestProcessingRules'
          - description: >-
              The configuration for manifest processing rules. Manifest
              processing rules enable customization of the personalized
              manifests created by MediaTailor.
      Name:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The identifier for the playback configuration.
      PersonalizationThresholdSeconds:
        allOf:
          - $ref: '#/definitions/__integerMin1'
          - description: >-
              Defines the maximum duration of underfilled ad time (in seconds)
              allowed in an ad break. If the duration of underfilled ad time
              exceeds the personalization threshold, then the personalization of
              the ad break is abandoned and the underlying content is shown.
              This feature applies to <i>ad replacement</i> in live and VOD
              streams, rather than ad insertion, because it relies on an
              underlying content stream. For more information about ad break
              behavior, including ad replacement and insertion, see <a
              href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
              Behavior in AWS Elemental MediaTailor</a>.
      PlaybackConfigurationArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The Amazon Resource Name (ARN) for the playback configuration.
      PlaybackEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player accesses to get a manifest from AWS
              Elemental MediaTailor. This session will use server-side
              reporting.
      SessionInitializationEndpointPrefix:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL that the player uses to initialize a session that uses
              client-side reporting.
      SlateAdUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL for a high-quality video asset to transcode and use to
              fill in time that's not used by ads. AWS Elemental MediaTailor
              shows the slate to fill in gaps in media content. Configuring the
              slate is optional for non-VPAID playback configurations. For
              VPAID, the slate is required because MediaTailor provides it in
              the slots designated for dynamic ad content. The slate must be a
              high-quality asset that contains both audio and video.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the playback configuration.
            xml:
              name: tags
      TranscodeProfileName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic
              transcoding defaults of MediaTailor. Use this only if you have
              already set up custom profiles with the help of AWS Support.
      VideoContentSourceUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The URL prefix for the parent manifest for the stream, minus the
              asset ID. The maximum length is 512 characters.
    type: object
  RelativePosition:
    enum:
      - BEFORE_PROGRAM
      - AFTER_PROGRAM
    type: string
  RequestOutputItem:
    description: The output configuration for this channel.
    properties:
      DashPlaylistSettings:
        allOf:
          - $ref: '#/definitions/DashPlaylistSettings'
          - description: DASH manifest configuration parameters.
      HlsPlaylistSettings:
        allOf:
          - $ref: '#/definitions/HlsPlaylistSettings'
          - description: HLS playlist configuration parameters.
      ManifestName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the manifest for the channel. The name appears in the
              PlaybackUrl.
      SourceGroup:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              A string used to match which HttpPackageConfiguration is used for
              each VodSource.
    required:
      - ManifestName
      - SourceGroup
    type: object
  RequestOutputs:
    description: An object that represents an object in the CreateChannel request.
    items:
      $ref: '#/definitions/RequestOutputItem'
    type: array
  ResponseOutputItem:
    description: 'This response includes only the "property" : "type" property.'
    properties:
      DashPlaylistSettings:
        allOf:
          - $ref: '#/definitions/DashPlaylistSettings'
          - description: DASH manifest configuration settings.
      HlsPlaylistSettings:
        allOf:
          - $ref: '#/definitions/HlsPlaylistSettings'
          - description: HLS manifest configuration settings.
      ManifestName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the manifest for the channel that will appear in the
              channel output's playback URL.
      PlaybackUrl:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The URL used for playback by content players.
      SourceGroup:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              A string used to associate a package configuration source group
              with a channel output.
    required:
      - ManifestName
      - PlaybackUrl
      - SourceGroup
    type: object
  ResponseOutputs:
    items:
      $ref: '#/definitions/ResponseOutputItem'
    type: array
  ScheduleAdBreak:
    description: The schedule's ad break properties.
    properties:
      ApproximateDurationSeconds:
        allOf:
          - $ref: '#/definitions/__long'
          - description: 'The approximate duration of the ad break, in seconds.'
      ApproximateStartTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The approximate time that the ad will start playing.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the source location containing the VOD source used for
              the ad break.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source used for the ad break.
    type: object
  ScheduleConfiguration:
    description: >-
      Schedule configuration parameters. A channel must be stopped before
      changes can be made to the schedule.
    properties:
      Transition:
        allOf:
          - $ref: '#/definitions/Transition'
          - description: Program transition configurations.
    required:
      - Transition
    type: object
  ScheduleEntry:
    description: The properties for a schedule.
    properties:
      ApproximateDurationSeconds:
        allOf:
          - $ref: '#/definitions/__long'
          - description: 'The approximate duration of this program, in seconds.'
      ApproximateStartTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The approximate time that the program will start playing.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the program.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel that uses this schedule.
      ProgramName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the program.
      ScheduleAdBreaks:
        allOf:
          - $ref: '#/definitions/__listOfScheduleAdBreak'
          - description: The schedule's ad break properties.
      ScheduleEntryType:
        allOf:
          - $ref: '#/definitions/ScheduleEntryType'
          - description: >-
              <p>The type of schedule entry.</p> <p>Valid values: PROGRAM or
              FILLER_SLATE.</p>
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source.
    required:
      - VodSourceName
      - ChannelName
      - SourceLocationName
      - Arn
      - ProgramName
    type: object
  ScheduleEntryType:
    enum:
      - PROGRAM
      - FILLER_SLATE
    type: string
  SecretsManagerAccessTokenConfiguration:
    description: >-
      AWS Secrets Manager access token configuration parameters. For information
      about Secrets Manager access token authentication, see <a
      href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html">Working
      with AWS Secrets Manager access token authentication</a>.
    properties:
      HeaderName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the HTTP header used to supply the access token in
              requests to the source location.
      SecretArn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The Amazon Resource Name (ARN) of the AWS Secrets Manager secret
              that contains the access token.
      SecretStringKey:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The AWS Secrets Manager <a
              href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a>
              key associated with the access token. MediaTailor uses the key to
              look up SecretString key and value pair containing the access
              token.
    type: object
  SlateSource:
    description: Slate VOD source configuration.
    properties:
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the source location where the slate VOD source is
              stored.
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The slate VOD source name. The VOD source must already exist in a
              source location before it can be used for slate.
    type: object
  SourceLocation:
    description: 'This response includes only the "type" : "object" property.'
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: The access configuration for the source location.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the SourceLocation.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the source location was created.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: The default segment delivery configuration.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The HTTP configuration for the source location.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The timestamp that indicates when the source location was last
              modified.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the source location.
            xml:
              name: tags
    required:
      - SourceLocationName
      - HttpConfiguration
      - Arn
    type: object
  SpliceInsertMessage:
    description: Splice insert message configuration.
    properties:
      AvailNum:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              This is written to splice_insert.avail_num, as defined in section
              9.7.3.1 of the SCTE-35 specification. The default value is 0.
              Values must be between 0 and 256, inclusive.
      AvailsExpected:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              This is written to splice_insert.avails_expected, as defined in
              section 9.7.3.1 of the SCTE-35 specification. The default value is
              0. Values must be between 0 and 256, inclusive.
      SpliceEventId:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              This is written to splice_insert.splice_event_id, as defined in
              section 9.7.3.1 of the SCTE-35 specification. The default value is
              1.
      UniqueProgramId:
        allOf:
          - $ref: '#/definitions/__integer'
          - description: >-
              This is written to splice_insert.unique_program_id, as defined in
              section 9.7.3.1 of the SCTE-35 specification. The default value is
              0. Values must be between 0 and 256, inclusive.
    type: object
  StartChannelRequest:
    properties: {}
    title: StartChannelRequest
    type: object
  StartChannelResponse:
    properties: {}
    type: object
  StopChannelRequest:
    properties: {}
    title: StopChannelRequest
    type: object
  StopChannelResponse:
    properties: {}
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: 'A comma-separated list of tag key:value pairs.'
            xml:
              name: tags
    required:
      - Tags
    title: TagResourceRequest
    type: object
  Transition:
    description: Program transition configuration.
    properties:
      RelativePosition:
        allOf:
          - $ref: '#/definitions/RelativePosition'
          - description: >-
              The position where this program will be inserted relative to the
              RelativePosition.
      RelativeProgram:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the program that this program will be inserted next
              to, as defined by RelativePosition.
      ScheduledStartTimeMillis:
        allOf:
          - $ref: '#/definitions/__long'
          - description: >-
              The date and time that the program is scheduled to start, in epoch
              milliseconds.
      Type:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              <p>Defines when the program plays in the schedule. You can set the
              value to ABSOLUTE or RELATIVE.</p> <p>ABSOLUTE - The program plays
              at a specific wall clock time. This setting can only be used for
              channels using the LINEAR PlaybackMode.</p> <p>Note the following
              considerations when using ABSOLUTE transitions:</p> <p>If the
              preceding program in the schedule has a duration that extends past
              the wall clock time, MediaTailor truncates the preceding program
              on a common segment boundary.</p> <p>If there are gaps in
              playback, MediaTailor plays the FillerSlate you configured for
              your linear channel.</p> <p>RELATIVE - The program is inserted
              into the schedule either before or after a program that you
              specify via RelativePosition.</p>
    required:
      - Type
      - RelativePosition
    type: object
  Type:
    enum:
      - DASH
      - HLS
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UpdateChannelRequest:
    properties:
      Outputs:
        allOf:
          - $ref: '#/definitions/RequestOutputs'
          - description: The channel's output properties.
    required:
      - Outputs
    title: UpdateChannelRequest
    type: object
  UpdateChannelResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the channel.
      ChannelName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the channel.
      ChannelState:
        allOf:
          - $ref: '#/definitions/ChannelState'
          - description: Indicates whether the channel is in a running state or not.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was created.
      FillerSlate:
        allOf:
          - $ref: '#/definitions/SlateSource'
          - description: >-
              Contains information about the slate used to fill gaps between
              programs in the schedule.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
      Outputs:
        allOf:
          - $ref: '#/definitions/ResponseOutputs'
          - description: The channel's output properties.
      PlaybackMode:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The channel's playback mode.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the channel.
            xml:
              name: tags
    type: object
  UpdateSourceLocationRequest:
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: >-
              Access configuration parameters. Configures the type of
              authentication used to access content from your source location.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: >-
              The optional configuration for the host server that serves
              segments.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The HTTP configuration for the source location.
    required:
      - HttpConfiguration
    title: UpdateSourceLocationRequest
    type: object
  UpdateSourceLocationResponse:
    properties:
      AccessConfiguration:
        allOf:
          - $ref: '#/definitions/AccessConfiguration'
          - description: The access configuration for the source location.
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the source location.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the source location was created.
      DefaultSegmentDeliveryConfiguration:
        allOf:
          - $ref: '#/definitions/DefaultSegmentDeliveryConfiguration'
          - description: The default segment delivery configuration settings.
      HttpConfiguration:
        allOf:
          - $ref: '#/definitions/HttpConfiguration'
          - description: The HTTP package configuration settings for the source location.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The timestamp that indicates when the source location was last
              modified.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the source location.
            xml:
              name: tags
    type: object
  UpdateVodSourceRequest:
    properties:
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: >-
              An array of HTTP package configurations for the VOD source on this
              account.
    required:
      - HttpPackageConfigurations
    title: UpdateVodSourceRequest
    type: object
  UpdateVodSourceResponse:
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN of the VOD source.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: The HTTP package configurations.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The ARN for the VOD source.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the source location associated with the VOD source.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the VOD source.
            xml:
              name: tags
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source.
    type: object
  VodSource:
    description: VOD source configuration parameters.
    properties:
      Arn:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The ARN for the VOD source.
      CreationTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
      HttpPackageConfigurations:
        allOf:
          - $ref: '#/definitions/HttpPackageConfigurations'
          - description: The HTTP package configurations for the VOD source.
      LastModifiedTime:
        allOf:
          - $ref: '#/definitions/__timestampUnix'
          - description: >-
              The timestamp that indicates when the VOD source was last
              modified.
      SourceLocationName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: >-
              The name of the source location that the VOD source is associated
              with.
      Tags:
        allOf:
          - $ref: '#/definitions/__mapOf__string'
          - description: The tags assigned to the VOD source.
            xml:
              name: tags
      VodSourceName:
        allOf:
          - $ref: '#/definitions/__string'
          - description: The name of the VOD source.
    required:
      - VodSourceName
      - SourceLocationName
      - HttpPackageConfigurations
      - Arn
    type: object
  __boolean:
    type: boolean
  __integer:
    type: integer
  __integerMin1:
    minimum: 1
    type: integer
  __listOfAdBreak:
    items:
      $ref: '#/definitions/AdBreak'
    type: array
  __listOfAlert:
    items:
      $ref: '#/definitions/Alert'
    type: array
  __listOfChannel:
    items:
      $ref: '#/definitions/Channel'
    type: array
  __listOfPlaybackConfiguration:
    items:
      $ref: '#/definitions/PlaybackConfiguration'
    type: array
  __listOfScheduleAdBreak:
    items:
      $ref: '#/definitions/ScheduleAdBreak'
    type: array
  __listOfScheduleEntry:
    items:
      $ref: '#/definitions/ScheduleEntry'
    type: array
  __listOfSourceLocation:
    items:
      $ref: '#/definitions/SourceLocation'
    type: array
  __listOfVodSource:
    items:
      $ref: '#/definitions/VodSource'
    type: array
  __listOf__string:
    items:
      $ref: '#/definitions/__string'
    type: array
  __long:
    type: integer
  __mapOf__string:
    additionalProperties:
      $ref: '#/definitions/__string'
    type: object
  __string:
    type: string
  __timestampUnix:
    format: date-time
    type: string
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediatailor/'
host: api.mediatailor.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad
    insertion and linear channels. With MediaTailor, you can assemble existing
    content into a linear stream and serve targeted ads to viewers while
    maintaining broadcast quality in over-the-top (OTT) video applications. For
    information about using the service, including detailed information about
    the settings covered in this guide, see the <a
    href="https://docs.aws.amazon.com/mediatailor/latest/ug/">AWS Elemental
    MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage
    AWS Elemental MediaTailor configurations and channels the same as you do
    through the console. For example, you specify ad insertion behavior and
    mapping information for the origin server and the ad decision server
    (ADS).</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS MediaTailor
  version: '2018-04-23'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: mediatailor
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediatailor-2018-04-23.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: mediatailor
paths:
  /alerts#resourceArn:
    get:
      description: Returns a list of alerts for the given resource.
      operationId: ListAlerts
      parameters:
        - description: >-
            Upper bound on number of records to return. The maximum number of
            results is 100.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Pagination token from the GET list request. Use the token to fetch
            the next page of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The Amazon Resource Name (ARN) of the resource.
          in: query
          name: resourceArn
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAlertsResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channel/{channelName}':
    delete:
      description: Deletes a channel. You must stop the channel before it can be deleted.
      operationId: DeleteChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteChannelResponse'
    get:
      description: Describes the properties of a specific channel.
      operationId: DescribeChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a channel.
      operationId: CreateChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              FillerSlate:
                description: Slate VOD source configuration.
                properties:
                  SourceLocationName:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The name of the source location where the slate VOD
                          source is stored.
                  VodSourceName:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The slate VOD source name. The VOD source must already
                          exist in a source location before it can be used for
                          slate.
                type: object
              Outputs:
                description: >-
                  An object that represents an object in the CreateChannel
                  request.
                items:
                  $ref: '#/definitions/RequestOutputItem'
                type: array
              PlaybackMode:
                description: >-
                  <p>The type of playback mode to use for this channel.</p>
                  <p>LINEAR - The programs in the schedule play once
                  back-to-back in the schedule.</p> <p>LOOP - The programs in
                  the schedule play back-to-back in an endless loop. When the
                  last program in the schedule stops playing, playback loops
                  back to the first program in the schedule.</p>
                enum:
                  - LOOP
                  - LINEAR
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: The tags to assign to the channel.
                type: object
            required:
              - Outputs
              - PlaybackMode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelResponse'
    put:
      consumes:
        - application/json
      description: Updates an existing channel.
      operationId: UpdateChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Outputs:
                description: >-
                  An object that represents an object in the CreateChannel
                  request.
                items:
                  $ref: '#/definitions/RequestOutputItem'
                type: array
            required:
              - Outputs
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateChannelResponse'
  '/channel/{channelName}/policy':
    delete:
      description: Deletes a channel's IAM policy.
      operationId: DeleteChannelPolicy
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteChannelPolicyResponse'
    get:
      description: Retrieves information about a channel's IAM policy.
      operationId: GetChannelPolicy
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetChannelPolicyResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: Creates an IAM policy for the channel.
      operationId: PutChannelPolicy
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Policy:
                description: >-
                  Adds an IAM role that determines the permissions of your
                  channel.
                type: string
            required:
              - Policy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutChannelPolicyResponse'
  '/channel/{channelName}/program/{programName}':
    delete:
      description: Deletes a specific program on a specific channel.
      operationId: DeleteProgram
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - description: The identifier for the program you are working on.
          in: path
          name: programName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProgramResponse'
    get:
      description: Retrieves the properties of the requested program.
      operationId: DescribeProgram
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - description: The identifier for the program you are working on.
          in: path
          name: programName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProgramResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a program.
      operationId: CreateProgram
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - description: The identifier for the program you are working on.
          in: path
          name: programName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AdBreaks:
                description: The ad break configuration settings.
                items:
                  $ref: '#/definitions/AdBreak'
                type: array
              ScheduleConfiguration:
                description: >-
                  Schedule configuration parameters. A channel must be stopped
                  before changes can be made to the schedule.
                properties:
                  Transition:
                    allOf:
                      - $ref: '#/definitions/Transition'
                      - description: Program transition configurations.
                type: object
              SourceLocationName:
                description: The name of the source location.
                type: string
              VodSourceName:
                description: The name that's used to refer to a VOD source.
                type: string
            required:
              - ScheduleConfiguration
              - SourceLocationName
              - VodSourceName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProgramResponse'
  '/channel/{channelName}/schedule':
    get:
      description: Retrieves information about your channel's schedule.
      operationId: GetChannelSchedule
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
        - description: >-
            The schedule duration in minutes. The maximum duration is 4320
            minutes (three days).
          in: query
          name: durationMinutes
          required: false
          type: string
        - description: >-
            Upper bound on number of records to return. The maximum number of
            results is 100.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Pagination token from the GET list request. Use the token to fetch
            the next page of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetChannelScheduleResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/channel/{channelName}/start':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      description: Starts a specific channel.
      operationId: StartChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartChannelResponse'
  '/channel/{channelName}/stop':
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      description: Stops a specific channel.
      operationId: StopChannel
      parameters:
        - description: The identifier for the channel you are working on.
          in: path
          name: channelName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopChannelResponse'
  /channels:
    get:
      description: Retrieves a list of channels that are associated with this account.
      operationId: ListChannels
      parameters:
        - description: >-
            Upper bound on number of records to return. The maximum number of
            results is 100.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Pagination token from the GET list request. Use the token to fetch
            the next page of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelsResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /playbackConfiguration:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    put:
      consumes:
        - application/json
      description: '<p>Adds a new playback configuration to AWS Elemental MediaTailor.</p>  '
      operationId: PutPlaybackConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AdDecisionServerUrl:
                description: >-
                  The URL for the ad decision server (ADS). This includes the
                  specification of static parameters and placeholders for
                  dynamic parameters. AWS Elemental MediaTailor substitutes
                  player-specific and session-specific parameters as needed when
                  calling the ADS. Alternately, for testing you can provide a
                  static VAST URL. The maximum length is 25,000 characters.
                type: string
              AvailSuppression:
                description: >-
                  The configuration for avail suppression, also known as ad
                  suppression. For more information about ad suppression, see <a
                  href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
                  Suppression</a>.
                properties:
                  Mode:
                    allOf:
                      - $ref: '#/definitions/Mode'
                      - description: >-
                          Sets the ad suppression mode. By default, ad
                          suppression is off and all ad breaks are filled with
                          ads or slate. When Mode is set to BEHIND_LIVE_EDGE, ad
                          suppression is active and MediaTailor won't fill ad
                          breaks on or behind the ad suppression Value time in
                          the manifest lookback window.
                  Value:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          A live edge offset time in HH:MM:SS. MediaTailor won't
                          fill ad breaks on or behind this time in the manifest
                          lookback window. If Value is set to 00:00:00, it is in
                          sync with the live edge, and MediaTailor won't fill
                          any ad breaks on or behind the live edge. If you set a
                          Value time, MediaTailor won't fill any ad breaks on or
                          behind this time in the manifest lookback window. For
                          example, if you set 00:45:00, then MediaTailor will
                          fill ad breaks that occur within 45 minutes behind the
                          live edge, but won't fill ad breaks on or behind 45
                          minutes behind the live edge.
                type: object
              Bumper:
                description: >-
                  The configuration for bumpers. Bumpers are short audio or
                  video clips that play at the start or before the end of an ad
                  break. To learn more about bumpers, see <a
                  href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
                properties:
                  EndUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The URL for the end bumper asset.
                  StartUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: The URL for the start bumper asset.
                type: object
              CdnConfiguration:
                description: >-
                  The configuration for using a content delivery network (CDN),
                  like Amazon CloudFront, for content and ad segment management.
                properties:
                  AdSegmentUrlPrefix:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          A non-default content delivery network (CDN) to serve
                          ad segments. By default, AWS Elemental MediaTailor
                          uses Amazon CloudFront with default cache settings as
                          its CDN for ad segments. To set up an alternate CDN,
                          create a rule in your CDN for the origin
                          ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then
                          specify the rule's name in this AdSegmentUrlPrefix.
                          When AWS Elemental MediaTailor serves a manifest, it
                          reports your CDN as the source for ad segments.
                  ContentSegmentUrlPrefix:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          A content delivery network (CDN) to cache content
                          segments, so that content requests don’t always have
                          to go to the origin server. First, create a rule in
                          your CDN for the content segment origin server. Then
                          specify the rule's name in this
                          ContentSegmentUrlPrefix. When AWS Elemental
                          MediaTailor serves a manifest, it reports your CDN as
                          the source for content segments.
                type: object
              ConfigurationAliases:
                additionalProperties:
                  $ref: '#/definitions/__mapOf__string'
                description: The predefined aliases for dynamic variables.
                type: object
              DashConfiguration:
                description: The configuration for DASH PUT operations.
                properties:
                  MpdLocation:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The setting that controls whether MediaTailor includes
                          the Location tag in DASH manifests. MediaTailor
                          populates the Location tag with the URL for manifest
                          update requests, to be used by players that don't
                          support sticky redirects. Disable this if you have CDN
                          routing rules set up for accessing MediaTailor
                          manifests, and you are either using client-side
                          reporting or your players support sticky HTTP
                          redirects. Valid values are DISABLED and EMT_DEFAULT.
                          The EMT_DEFAULT setting enables the inclusion of the
                          tag and is the default value.
                  OriginManifestType:
                    allOf:
                      - $ref: '#/definitions/OriginManifestType'
                      - description: >-
                          The setting that controls whether MediaTailor handles
                          manifests from the origin server as multi-period
                          manifests or single-period manifests. If your origin
                          server produces single-period manifests, set this to
                          SINGLE_PERIOD. The default setting is MULTI_PERIOD.
                          For multi-period manifests, omit this setting or set
                          it to MULTI_PERIOD.
                type: object
              LivePreRollConfiguration:
                description: The configuration for pre-roll ad insertion.
                properties:
                  AdDecisionServerUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The URL for the ad decision server (ADS) for pre-roll
                          ads. This includes the specification of static
                          parameters and placeholders for dynamic parameters.
                          AWS Elemental MediaTailor substitutes player-specific
                          and session-specific parameters as needed when calling
                          the ADS. Alternately, for testing, you can provide a
                          static VAST URL. The maximum length is 25,000
                          characters.
                  MaxDurationSeconds:
                    allOf:
                      - $ref: '#/definitions/__integer'
                      - description: >-
                          The maximum allowed duration for the pre-roll ad
                          avail. AWS Elemental MediaTailor won't play pre-roll
                          ads to exceed this duration, regardless of the total
                          duration of ads that the ADS returns.
                type: object
              ManifestProcessingRules:
                description: >-
                  The configuration for manifest processing rules. Manifest
                  processing rules enable customization of the personalized
                  manifests created by MediaTailor.
                properties:
                  AdMarkerPassthrough:
                    allOf:
                      - $ref: '#/definitions/AdMarkerPassthrough'
                      - description: >-
                          <p>For HLS, when set to true, MediaTailor passes
                          through EXT-X-CUE-IN, EXT-X-CUE-OUT, and
                          EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin
                          manifest to the MediaTailor personalized manifest.</p>
                          <p>No logic is applied to these ad markers. For
                          example, if EXT-X-CUE-OUT has a value of 60, but no
                          ads are filled for that ad break, MediaTailor will not
                          set the value to 0.</p>
                type: object
              Name:
                description: The identifier for the playback configuration.
                type: string
              PersonalizationThresholdSeconds:
                description: >-
                  Defines the maximum duration of underfilled ad time (in
                  seconds) allowed in an ad break. If the duration of
                  underfilled ad time exceeds the personalization threshold,
                  then the personalization of the ad break is abandoned and the
                  underlying content is shown. This feature applies to <i>ad
                  replacement</i> in live and VOD streams, rather than ad
                  insertion, because it relies on an underlying content stream.
                  For more information about ad break behavior, including ad
                  replacement and insertion, see <a
                  href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad
                  Behavior in AWS Elemental MediaTailor</a>.
                minimum: 1
                type: integer
              SlateAdUrl:
                description: >-
                  The URL for a high-quality video asset to transcode and use to
                  fill in time that's not used by ads. AWS Elemental MediaTailor
                  shows the slate to fill in gaps in media content. Configuring
                  the slate is optional for non-VPAID configurations. For VPAID,
                  the slate is required because MediaTailor provides it in the
                  slots that are designated for dynamic ad content. The slate
                  must be a high-quality asset that contains both audio and
                  video.
                type: string
              TranscodeProfileName:
                description: >-
                  The name that is used to associate this playback configuration
                  with a custom transcode profile. This overrides the dynamic
                  transcoding defaults of MediaTailor. Use this only if you have
                  already set up custom profiles with the help of AWS Support.
                type: string
              VideoContentSourceUrl:
                description: >-
                  The URL prefix for the parent manifest for the stream, minus
                  the asset ID. The maximum length is 512 characters.
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: The tags to assign to the playback configuration.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutPlaybackConfigurationResponse'
  '/playbackConfiguration/{Name}':
    delete:
      description: '<p>Deletes the playback configuration for the specified name.</p>  '
      operationId: DeletePlaybackConfiguration
      parameters:
        - description: The identifier for the playback configuration.
          in: path
          name: Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeletePlaybackConfigurationResponse'
    get:
      description: '<p>Returns the playback configuration for the specified name.</p>  '
      operationId: GetPlaybackConfiguration
      parameters:
        - description: The identifier for the playback configuration.
          in: path
          name: Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPlaybackConfigurationResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /playbackConfigurations:
    get:
      description: >-
        <p>Returns a list of the playback configurations defined in AWS
        Elemental MediaTailor. You can specify a maximum number of
        configurations to return at a time. The default maximum is 50. Results
        are returned in pagefuls. If MediaTailor has more configurations than
        the specified maximum, it provides parameters in the response that you
        can use to retrieve the next pageful.</p>  
      operationId: ListPlaybackConfigurations
      parameters:
        - description: Maximum number of records to return.
          in: query
          maximum: 100
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: >-
            Pagination token returned by the GET list request when results
            exceed the maximum allowed. Use the token to fetch the next page of
            results.
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPlaybackConfigurationsResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/sourceLocation/{sourceLocationName}':
    delete:
      description: Deletes a source location on a specific channel.
      operationId: DeleteSourceLocation
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSourceLocationResponse'
    get:
      description: Retrieves the properties of the requested source location.
      operationId: DescribeSourceLocation
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSourceLocationResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a source location on a specific channel.
      operationId: CreateSourceLocation
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccessConfiguration:
                description: Access configuration parameters.
                properties:
                  AccessType:
                    allOf:
                      - $ref: '#/definitions/AccessType'
                      - description: >-
                          <p>The type of authentication used to access content
                          from HttpConfiguration::BaseUrl on your source
                          location. Accepted value: S3_SIGV4.</p> <p>S3_SIGV4 -
                          AWS Signature Version 4 authentication for Amazon S3
                          hosted virtual-style access. If your source location
                          base URL is an Amazon S3 bucket, MediaTailor can use
                          AWS Signature Version 4 (SigV4) authentication to
                          access the bucket where your source content is stored.
                          Your MediaTailor source location baseURL must follow
                          the S3 virtual hosted-style request URL format. For
                          example,
                          https://bucket-name.s3.Region.amazonaws.com/key-name.</p>
                          <p>Before you can use S3_SIGV4, you must meet these
                          requirements:</p> <p>• You must allow MediaTailor to
                          access your S3 bucket by granting
                          mediatailor.amazonaws.com principal access in IAM. For
                          information about configuring access in IAM, see
                          Access management in the IAM User Guide.</p> <p>• The
                          mediatailor.amazonaws.com service principal must have
                          permissions to read all top level manifests referenced
                          by the VodSource packaging configurations.</p> <p>•
                          The caller of the API must have s3:GetObject IAM
                          permissions to read all top level manifests referenced
                          by your MediaTailor VodSource packaging
                          configurations.</p>
                  SecretsManagerAccessTokenConfiguration:
                    allOf:
                      - $ref: '#/definitions/SecretsManagerAccessTokenConfiguration'
                      - description: >-
                          AWS Secrets Manager access token configuration
                          parameters.
                type: object
              DefaultSegmentDeliveryConfiguration:
                description: >-
                  The optional configuration for a server that serves segments.
                  Use this if you want the segment delivery server to be
                  different from the source location server. For example, you
                  can configure your source location server to be an origination
                  server, such as MediaPackage, and the segment delivery server
                  to be a content delivery network (CDN), such as CloudFront. If
                  you don't specify a segment delivery server, then the source
                  location server is used.
                properties:
                  BaseUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The hostname of the server that will be used to serve
                          segments. This string must include the protocol, such
                          as <b>https://</b>.
                type: object
              HttpConfiguration:
                description: The HTTP configuration for the source location.
                properties:
                  BaseUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The base URL for the source location host server. This
                          string must include the protocol, such as
                          <b>https://</b>.
                type: object
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: The tags to assign to the source location.
                type: object
            required:
              - HttpConfiguration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSourceLocationResponse'
    put:
      consumes:
        - application/json
      description: Updates a source location on a specific channel.
      operationId: UpdateSourceLocation
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccessConfiguration:
                description: Access configuration parameters.
                properties:
                  AccessType:
                    allOf:
                      - $ref: '#/definitions/AccessType'
                      - description: >-
                          <p>The type of authentication used to access content
                          from HttpConfiguration::BaseUrl on your source
                          location. Accepted value: S3_SIGV4.</p> <p>S3_SIGV4 -
                          AWS Signature Version 4 authentication for Amazon S3
                          hosted virtual-style access. If your source location
                          base URL is an Amazon S3 bucket, MediaTailor can use
                          AWS Signature Version 4 (SigV4) authentication to
                          access the bucket where your source content is stored.
                          Your MediaTailor source location baseURL must follow
                          the S3 virtual hosted-style request URL format. For
                          example,
                          https://bucket-name.s3.Region.amazonaws.com/key-name.</p>
                          <p>Before you can use S3_SIGV4, you must meet these
                          requirements:</p> <p>• You must allow MediaTailor to
                          access your S3 bucket by granting
                          mediatailor.amazonaws.com principal access in IAM. For
                          information about configuring access in IAM, see
                          Access management in the IAM User Guide.</p> <p>• The
                          mediatailor.amazonaws.com service principal must have
                          permissions to read all top level manifests referenced
                          by the VodSource packaging configurations.</p> <p>•
                          The caller of the API must have s3:GetObject IAM
                          permissions to read all top level manifests referenced
                          by your MediaTailor VodSource packaging
                          configurations.</p>
                  SecretsManagerAccessTokenConfiguration:
                    allOf:
                      - $ref: '#/definitions/SecretsManagerAccessTokenConfiguration'
                      - description: >-
                          AWS Secrets Manager access token configuration
                          parameters.
                type: object
              DefaultSegmentDeliveryConfiguration:
                description: >-
                  The optional configuration for a server that serves segments.
                  Use this if you want the segment delivery server to be
                  different from the source location server. For example, you
                  can configure your source location server to be an origination
                  server, such as MediaPackage, and the segment delivery server
                  to be a content delivery network (CDN), such as CloudFront. If
                  you don't specify a segment delivery server, then the source
                  location server is used.
                properties:
                  BaseUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The hostname of the server that will be used to serve
                          segments. This string must include the protocol, such
                          as <b>https://</b>.
                type: object
              HttpConfiguration:
                description: The HTTP configuration for the source location.
                properties:
                  BaseUrl:
                    allOf:
                      - $ref: '#/definitions/__string'
                      - description: >-
                          The base URL for the source location host server. This
                          string must include the protocol, such as
                          <b>https://</b>.
                type: object
            required:
              - HttpConfiguration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSourceLocationResponse'
  '/sourceLocation/{sourceLocationName}/vodSource/{vodSourceName}':
    delete:
      description: Deletes a specific VOD source in a specific source location.
      operationId: DeleteVodSource
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - description: The identifier for the VOD source you are working on.
          in: path
          name: vodSourceName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteVodSourceResponse'
    get:
      description: >-
        Provides details about a specific VOD source in a specific source
        location.
      operationId: DescribeVodSource
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - description: The identifier for the VOD source you are working on.
          in: path
          name: vodSourceName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeVodSourceResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates name for a specific VOD source in a source location.
      operationId: CreateVodSource
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - description: The identifier for the VOD source you are working on.
          in: path
          name: vodSourceName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              HttpPackageConfigurations:
                description: The VOD source's HTTP package configuration settings.
                items:
                  $ref: '#/definitions/HttpPackageConfiguration'
                type: array
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: The tags to assign to the VOD source.
                type: object
            required:
              - HttpPackageConfigurations
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateVodSourceResponse'
    put:
      consumes:
        - application/json
      description: Updates a specific VOD source in a specific source location.
      operationId: UpdateVodSource
      parameters:
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - description: The identifier for the VOD source you are working on.
          in: path
          name: vodSourceName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              HttpPackageConfigurations:
                description: The VOD source's HTTP package configuration settings.
                items:
                  $ref: '#/definitions/HttpPackageConfiguration'
                type: array
            required:
              - HttpPackageConfigurations
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateVodSourceResponse'
  '/sourceLocation/{sourceLocationName}/vodSources':
    get:
      description: Lists all the VOD sources in a source location.
      operationId: ListVodSources
      parameters:
        - description: >-
            Upper bound on number of records to return. The maximum number of
            results is 100.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Pagination token from the GET list request. Use the token to fetch
            the next page of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The identifier for the source location you are working on.
          in: path
          name: sourceLocationName
          required: true
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListVodSourcesResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  /sourceLocations:
    get:
      description: Retrieves a list of source locations.
      operationId: ListSourceLocations
      parameters:
        - description: >-
            Upper bound on number of records to return. The maximum number of
            results is 100.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: >-
            Pagination token from the GET list request. Use the token to fetch
            the next page of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSourceLocationsResponse'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
  '/tags/{ResourceArn}':
    get:
      description: >-
        <p>Returns a list of the tags assigned to the specified playback
        configuration resource.</p>  
      operationId: ListTagsForResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) for the playback configuration. You
            can get this from the response to any playback configuration
            request.
          in: path
          name: ResourceArn
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Adds tags to the specified playback configuration resource. You can
        specify one or more tags to add.</p>  
      operationId: TagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) for the playback configuration. You
            can get this from the response to any playback configuration
            request.
          in: path
          name: ResourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/__string'
                description: 'A comma-separated list of tag key:value pairs.'
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      description: >-
        <p>Removes tags from the specified playback configuration resource. You
        can specify one or more tags to remove.</p>  
      operationId: UntagResource
      parameters:
        - description: >-
            The Amazon Resource Name (ARN) for the playback configuration. You
            can get this from the response to any playback configuration
            request.
          in: path
          name: ResourceArn
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            A comma-separated list of the tag keys to remove from the playback
            configuration.
          in: query
          items:
            $ref: '#/definitions/__string'
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

