basePath: /
definitions:
  AccessDeniedException: {}
  Action:
    description: >-
      A configuration that specifies the action to perform when anomalies are
      detected.
    properties:
      LambdaConfiguration:
        allOf:
          - $ref: '#/definitions/LambdaConfiguration'
          - description: A configuration for an AWS Lambda channel.
      SNSConfiguration:
        allOf:
          - $ref: '#/definitions/SNSConfiguration'
          - description: A configuration for an Amazon SNS channel.
    type: object
  ActivateAnomalyDetectorRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the anomaly detector.
    required:
      - AnomalyDetectorArn
    title: ActivateAnomalyDetectorRequest
    type: object
  ActivateAnomalyDetectorResponse:
    properties: {}
    type: object
  AggregationFunction:
    enum:
      - AVG
      - SUM
    type: string
  Alert:
    description: A configuration for Amazon SNS-integrated notifications.
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: Action that will be triggered when there is an alert.
      AlertArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert.
      AlertDescription:
        allOf:
          - $ref: '#/definitions/AlertDescription'
          - description: A description of the alert.
      AlertName:
        allOf:
          - $ref: '#/definitions/AlertName'
          - description: The name of the alert.
      AlertSensitivityThreshold:
        allOf:
          - $ref: '#/definitions/SensitivityThreshold'
          - description: The minimum severity for an anomaly to trigger the alert.
      AlertStatus:
        allOf:
          - $ref: '#/definitions/AlertStatus'
          - description: The status of the alert.
      AlertType:
        allOf:
          - $ref: '#/definitions/AlertType'
          - description: The type of the alert.
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to which the alert is attached.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the alert was created.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the alert was last modified.
    type: object
  AlertDescription:
    maxLength: 256
    pattern: .*\S.*
    type: string
  AlertName:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  AlertStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
  AlertSummary:
    description: Provides a summary of an alert's configuration.
    properties:
      AlertArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert.
      AlertName:
        allOf:
          - $ref: '#/definitions/AlertName'
          - description: The name of the alert.
      AlertSensitivityThreshold:
        allOf:
          - $ref: '#/definitions/SensitivityThreshold'
          - description: The minimum severity for an anomaly to trigger the alert.
      AlertStatus:
        allOf:
          - $ref: '#/definitions/AlertStatus'
          - description: The status of the alert.
      AlertType:
        allOf:
          - $ref: '#/definitions/AlertType'
          - description: The type of the alert.
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to which the alert is attached.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the alert was created.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the alert was last modified.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The alert's <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
    type: object
  AlertSummaryList:
    items:
      $ref: '#/definitions/AlertSummary'
    type: array
  AlertType:
    enum:
      - SNS
      - LAMBDA
    type: string
  AnomalyDetectionTaskStatus:
    enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - FAILED_TO_SCHEDULE
    type: string
  AnomalyDetectionTaskStatusMessage:
    maxLength: 256
    minLength: 1
    pattern: .*\S.*
    type: string
  AnomalyDetectorConfig:
    description: Contains information about a detector's configuration.
    properties:
      AnomalyDetectorFrequency:
        allOf:
          - $ref: '#/definitions/Frequency'
          - description: The frequency at which the detector analyzes its source data.
    type: object
  AnomalyDetectorConfigSummary:
    description: Contains information about a detector's configuration.
    properties:
      AnomalyDetectorFrequency:
        allOf:
          - $ref: '#/definitions/Frequency'
          - description: The interval at which the detector analyzes its source data.
    type: object
  AnomalyDetectorDescription:
    maxLength: 256
    minLength: 1
    pattern: .*\S.*
    type: string
  AnomalyDetectorName:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  AnomalyDetectorStatus:
    enum:
      - ACTIVE
      - ACTIVATING
      - DELETING
      - FAILED
      - INACTIVE
      - LEARNING
      - BACK_TEST_ACTIVATING
      - BACK_TEST_ACTIVE
      - BACK_TEST_COMPLETE
    type: string
  AnomalyDetectorSummary:
    description: Contains information about an an anomaly detector.
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector.
      AnomalyDetectorDescription:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorDescription'
          - description: A description of the detector.
      AnomalyDetectorName:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorName'
          - description: The name of the detector.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the detector was created.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the detector was last modified.
      Status:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorStatus'
          - description: The status of detector.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The detector's <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
    type: object
  AnomalyDetectorSummaryList:
    items:
      $ref: '#/definitions/AnomalyDetectorSummary'
    type: array
  AnomalyGroup:
    description: A group of anomalous metrics
    properties:
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      AnomalyGroupScore:
        allOf:
          - $ref: '#/definitions/Score'
          - description: The severity score of the group.
      EndTime:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The end time for the group.
      MetricLevelImpactList:
        allOf:
          - $ref: '#/definitions/MetricLevelImpactList'
          - description: A list of measures affected by the anomaly.
      PrimaryMetricName:
        allOf:
          - $ref: '#/definitions/MetricName'
          - description: The name of the primary affected measure for the group.
      StartTime:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The start time for the group.
    type: object
  AnomalyGroupStatistics:
    description: Aggregated statistics for a group of anomalous metrics.
    properties:
      EvaluationStartDate:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The start of the time range that was searched.
      ItemizedMetricStatsList:
        allOf:
          - $ref: '#/definitions/ItemizedMetricStatsList'
          - description: Statistics for individual metrics within the group.
      TotalCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of groups found.
    type: object
  AnomalyGroupSummary:
    description: Details about a group of anomalous metrics.
    properties:
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      AnomalyGroupScore:
        allOf:
          - $ref: '#/definitions/Score'
          - description: The severity score of the group.
      EndTime:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The end time for the group.
      PrimaryMetricName:
        allOf:
          - $ref: '#/definitions/MetricName'
          - description: The name of the primary affected measure for the group.
      StartTime:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The start time for the group.
    type: object
  AnomalyGroupSummaryList:
    items:
      $ref: '#/definitions/AnomalyGroupSummary'
    type: array
  AnomalyGroupTimeSeries:
    description: An anomalous metric in an anomaly group.
    properties:
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      TimeSeriesId:
        allOf:
          - $ref: '#/definitions/TimeSeriesId'
          - description: The ID of the metric.
    required:
      - AnomalyGroupId
    type: object
  AnomalyGroupTimeSeriesFeedback:
    description: Feedback for an anomalous metric.
    properties:
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      IsAnomaly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Feedback on whether the metric is a legitimate anomaly.
      TimeSeriesId:
        allOf:
          - $ref: '#/definitions/TimeSeriesId'
          - description: The ID of the metric.
    required:
      - AnomalyGroupId
      - TimeSeriesId
      - IsAnomaly
    type: object
  AppFlowConfig:
    description: Details about an Amazon AppFlow flow datasource.
    properties:
      FlowName:
        allOf:
          - $ref: '#/definitions/FlowName'
          - description: ' name of the flow.'
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              An IAM role that gives Amazon Lookout for Metrics permission to
              access the flow.
    required:
      - RoleArn
      - FlowName
    type: object
  Arn:
    maxLength: 256
    pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
    type: string
  BackTestAnomalyDetectorRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
    required:
      - AnomalyDetectorArn
    title: BackTestAnomalyDetectorRequest
    type: object
  BackTestAnomalyDetectorResponse:
    properties: {}
    type: object
  Boolean:
    type: boolean
  CSVFileCompression:
    enum:
      - NONE
      - GZIP
    type: string
  Charset:
    maxLength: 63
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  CloudWatchConfig:
    description: Details about an Amazon CloudWatch datasource.
    properties:
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              An IAM role that gives Amazon Lookout for Metrics permission to
              access data in Amazon CloudWatch.
    required:
      - RoleArn
    type: object
  ColumnName:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  ConflictException: {}
  ContributionMatrix:
    description: Details about dimensions that contributed to an anomaly.
    properties:
      DimensionContributionList:
        allOf:
          - $ref: '#/definitions/DimensionContributionList'
          - description: A list of contributing dimensions.
    type: object
  CreateAlertRequest:
    properties:
      Action:
        allOf:
          - $ref: '#/definitions/Action'
          - description: Action that will be triggered when there is an alert.
      AlertDescription:
        allOf:
          - $ref: '#/definitions/AlertDescription'
          - description: A description of the alert.
      AlertName:
        allOf:
          - $ref: '#/definitions/AlertName'
          - description: The name of the alert.
      AlertSensitivityThreshold:
        allOf:
          - $ref: '#/definitions/SensitivityThreshold'
          - description: >-
              An integer from 0 to 100 specifying the alert sensitivity
              threshold.
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to which the alert is attached.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the alert.
    required:
      - AlertName
      - AlertSensitivityThreshold
      - AnomalyDetectorArn
      - Action
    title: CreateAlertRequest
    type: object
  CreateAlertResponse:
    properties:
      AlertArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert.
    type: object
  CreateAnomalyDetectorRequest:
    properties:
      AnomalyDetectorConfig:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorConfig'
          - description: >-
              Contains information about the configuration of the anomaly
              detector.
      AnomalyDetectorDescription:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorDescription'
          - description: A description of the detector.
      AnomalyDetectorName:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorName'
          - description: The name of the detector.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: The ARN of the KMS key to use to encrypt your data.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the anomaly detector.
    required:
      - AnomalyDetectorName
      - AnomalyDetectorConfig
    title: CreateAnomalyDetectorRequest
    type: object
  CreateAnomalyDetectorResponse:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector.
    type: object
  CreateMetricSetRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the anomaly detector that will use the dataset.
      DimensionList:
        allOf:
          - $ref: '#/definitions/DimensionList'
          - description: A list of the fields you want to treat as dimensions.
      MetricList:
        allOf:
          - $ref: '#/definitions/MetricList'
          - description: A list of metrics that the dataset will contain.
      MetricSetDescription:
        allOf:
          - $ref: '#/definitions/MetricSetDescription'
          - description: A description of the dataset you are creating.
      MetricSetFrequency:
        allOf:
          - $ref: '#/definitions/Frequency'
          - description: >-
              The frequency with which the source data will be analyzed for
              anomalies.
      MetricSetName:
        allOf:
          - $ref: '#/definitions/MetricSetName'
          - description: The name of the dataset.
      MetricSource:
        allOf:
          - $ref: '#/definitions/MetricSource'
          - description: >-
              Contains information about how the source data should be
              interpreted.
      Offset:
        allOf:
          - $ref: '#/definitions/Offset'
          - description: >-
              After an interval ends, the amount of seconds that the detector
              waits before importing data. Offset is only supported for S3 and
              Redshift datasources.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              A list of <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the dataset.
      TimestampColumn:
        allOf:
          - $ref: '#/definitions/TimestampColumn'
          - description: >-
              Contains information about the column used for tracking time in
              your source data.
      Timezone:
        allOf:
          - $ref: '#/definitions/Timezone'
          - description: The time zone in which your source data was recorded.
    required:
      - AnomalyDetectorArn
      - MetricSetName
      - MetricList
      - MetricSource
    title: CreateMetricSetRequest
    type: object
  CreateMetricSetResponse:
    properties:
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset.
    type: object
  CsvFormatDescriptor:
    description: Contains information about how a source CSV data file should be analyzed.
    properties:
      Charset:
        allOf:
          - $ref: '#/definitions/Charset'
          - description: The character set in which the source CSV file is written.
      ContainsHeader:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Whether or not the source CSV file contains a header.
      Delimiter:
        allOf:
          - $ref: '#/definitions/Delimiter'
          - description: The character used to delimit the source CSV file.
      FileCompression:
        allOf:
          - $ref: '#/definitions/CSVFileCompression'
          - description: The level of compression of the source CSV file.
      HeaderList:
        allOf:
          - $ref: '#/definitions/HeaderList'
          - description: 'A list of the source CSV file''s headers, if any.'
      QuoteSymbol:
        allOf:
          - $ref: '#/definitions/QuoteSymbol'
          - description: The character used as a quote character.
    type: object
  DataItem:
    type: string
  DatabaseHost:
    maxLength: 253
    minLength: 1
    pattern: .*\S.*
    type: string
  DatabasePort:
    maximum: 65535
    minimum: 1
    type: integer
  DateTimeFormat:
    maxLength: 63
    pattern: .*\S.*
    type: string
  DeleteAlertRequest:
    properties:
      AlertArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert to delete.
    required:
      - AlertArn
    title: DeleteAlertRequest
    type: object
  DeleteAlertResponse:
    properties: {}
    type: object
  DeleteAnomalyDetectorRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to delete.
    required:
      - AnomalyDetectorArn
    title: DeleteAnomalyDetectorRequest
    type: object
  DeleteAnomalyDetectorResponse:
    properties: {}
    type: object
  Delimiter:
    maxLength: 1
    pattern: '[^\r\n]'
    type: string
  DescribeAlertRequest:
    properties:
      AlertArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert to describe.
    required:
      - AlertArn
    title: DescribeAlertRequest
    type: object
  DescribeAlertResponse:
    properties:
      Alert:
        allOf:
          - $ref: '#/definitions/Alert'
          - description: Contains information about an alert.
    type: object
  DescribeAnomalyDetectionExecutionsRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The number of items to return in the response.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              Specify the pagination token that's returned by a previous request
              to retrieve the next page of results.
      Timestamp:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The timestamp of the anomaly detection job.
    required:
      - AnomalyDetectorArn
    title: DescribeAnomalyDetectionExecutionsRequest
    type: object
  DescribeAnomalyDetectionExecutionsResponse:
    properties:
      ExecutionList:
        allOf:
          - $ref: '#/definitions/ExecutionList'
          - description: A list of detection jobs.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token that's included if more results are
              available.
    type: object
  DescribeAnomalyDetectorRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to describe.
    required:
      - AnomalyDetectorArn
    title: DescribeAnomalyDetectorRequest
    type: object
  DescribeAnomalyDetectorResponse:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector.
      AnomalyDetectorConfig:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorConfigSummary'
          - description: Contains information about the detector's configuration.
      AnomalyDetectorDescription:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorDescription'
          - description: A description of the detector.
      AnomalyDetectorName:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorName'
          - description: The name of the detector.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the detector was created.
      FailureReason:
        allOf:
          - $ref: '#/definitions/ErrorMessage'
          - description: 'The reason that the detector failed, if any.'
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: The ARN of the KMS key to use to encrypt your data.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the detector was last modified.
      Status:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorStatus'
          - description: The status of the detector.
    type: object
  DescribeMetricSetRequest:
    properties:
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset.
    required:
      - MetricSetArn
    title: DescribeMetricSetRequest
    type: object
  DescribeMetricSetResponse:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector that contains the dataset.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the dataset was created.
      DimensionList:
        allOf:
          - $ref: '#/definitions/DimensionList'
          - description: A list of the dimensions chosen for analysis.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the dataset was last modified.
      MetricList:
        allOf:
          - $ref: '#/definitions/MetricList'
          - description: A list of the metrics defined by the dataset.
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset.
      MetricSetDescription:
        allOf:
          - $ref: '#/definitions/MetricSetDescription'
          - description: The dataset's description.
      MetricSetFrequency:
        allOf:
          - $ref: '#/definitions/Frequency'
          - description: The interval at which the data will be analyzed for anomalies.
      MetricSetName:
        allOf:
          - $ref: '#/definitions/MetricSetName'
          - description: The name of the dataset.
      MetricSource:
        allOf:
          - $ref: '#/definitions/MetricSource'
          - description: Contains information about the dataset's source data.
      Offset:
        allOf:
          - $ref: '#/definitions/Offset'
          - description: >-
              The offset in seconds. Only supported for S3 and Redshift
              datasources.
      TimestampColumn:
        allOf:
          - $ref: '#/definitions/TimestampColumn'
          - description: >-
              Contains information about the column used for tracking time in
              your source data.
      Timezone:
        allOf:
          - $ref: '#/definitions/Timezone'
          - description: The time zone in which the dataset's data was recorded.
    type: object
  DimensionContribution:
    description: Details about a dimension that contributed to an anomaly.
    properties:
      DimensionName:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of the dimension.
      DimensionValueContributionList:
        allOf:
          - $ref: '#/definitions/DimensionValueContributionList'
          - description: A list of dimension values that contributed to the anomaly.
    type: object
  DimensionContributionList:
    items:
      $ref: '#/definitions/DimensionContribution'
    type: array
  DimensionList:
    items:
      $ref: '#/definitions/ColumnName'
    minItems: 1
    type: array
  DimensionNameValue:
    description: A dimension name and value.
    properties:
      DimensionName:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of the dimension.
      DimensionValue:
        allOf:
          - $ref: '#/definitions/DimensionValue'
          - description: The value of the dimension.
    required:
      - DimensionName
      - DimensionValue
    type: object
  DimensionNameValueList:
    items:
      $ref: '#/definitions/DimensionNameValue'
    type: array
  DimensionValue:
    type: string
  DimensionValueContribution:
    description: The severity of a value of a dimension that contributed to an anomaly.
    properties:
      ContributionScore:
        allOf:
          - $ref: '#/definitions/Score'
          - description: The severity score of the value.
      DimensionValue:
        allOf:
          - $ref: '#/definitions/DimensionValue'
          - description: The value of the dimension.
    type: object
  DimensionValueContributionList:
    items:
      $ref: '#/definitions/DimensionValueContribution'
    type: array
  ErrorMessage:
    maxLength: 256
    type: string
  ExecutionList:
    items:
      $ref: '#/definitions/ExecutionStatus'
    type: array
  ExecutionStatus:
    description: The status of an anomaly detector run.
    properties:
      FailureReason:
        allOf:
          - $ref: '#/definitions/AnomalyDetectionTaskStatusMessage'
          - description: 'The reason that the run failed, if applicable.'
      Status:
        allOf:
          - $ref: '#/definitions/AnomalyDetectionTaskStatus'
          - description: The run's status.
      Timestamp:
        allOf:
          - $ref: '#/definitions/TimestampString'
          - description: The run's timestamp.
    type: object
  FileFormatDescriptor:
    description: Contains information about a source file's formatting.
    properties:
      CsvFormatDescriptor:
        allOf:
          - $ref: '#/definitions/CsvFormatDescriptor'
          - description: >-
              Contains information about how a source CSV data file should be
              analyzed.
      JsonFormatDescriptor:
        allOf:
          - $ref: '#/definitions/JsonFormatDescriptor'
          - description: >-
              Contains information about how a source JSON data file should be
              analyzed.
    type: object
  FlowName:
    maxLength: 256
    pattern: '[a-zA-Z0-9][\w!@#.-]+'
    type: string
  Frequency:
    enum:
      - P1D
      - PT1H
      - PT10M
      - PT5M
    type: string
  GetAnomalyGroupRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
    required:
      - AnomalyGroupId
      - AnomalyDetectorArn
    title: GetAnomalyGroupRequest
    type: object
  GetAnomalyGroupResponse:
    properties:
      AnomalyGroup:
        allOf:
          - $ref: '#/definitions/AnomalyGroup'
          - description: Details about the anomaly group.
    type: object
  GetFeedbackRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      AnomalyGroupTimeSeriesFeedback:
        allOf:
          - $ref: '#/definitions/AnomalyGroupTimeSeries'
          - description: The anomalous metric and group ID.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              Specify the pagination token that's returned by a previous request
              to retrieve the next page of results.
    required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
    title: GetFeedbackRequest
    type: object
  GetFeedbackResponse:
    properties:
      AnomalyGroupTimeSeriesFeedback:
        allOf:
          - $ref: '#/definitions/TimeSeriesFeedbackList'
          - description: Feedback for an anomalous metric.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token that's included if more results are
              available.
    type: object
  GetSampleDataRequest:
    properties:
      S3SourceConfig:
        allOf:
          - $ref: '#/definitions/SampleDataS3SourceConfig'
          - description: A datasource bucket in Amazon S3.
    title: GetSampleDataRequest
    type: object
  GetSampleDataResponse:
    properties:
      HeaderValues:
        allOf:
          - $ref: '#/definitions/HeaderValueList'
          - description: A list of header labels for the records.
      SampleRows:
        allOf:
          - $ref: '#/definitions/SampleRows'
          - description: A list of records.
    type: object
  HeaderList:
    items:
      $ref: '#/definitions/ColumnName'
    type: array
  HeaderValue:
    type: string
  HeaderValueList:
    items:
      $ref: '#/definitions/HeaderValue'
    type: array
  HistoricalDataPath:
    maxLength: 1024
    pattern: '^s3://[a-z0-9].+$'
    type: string
  HistoricalDataPathList:
    items:
      $ref: '#/definitions/HistoricalDataPath'
    maxItems: 1
    minItems: 1
    type: array
  Integer:
    type: integer
  InternalServerException: {}
  ItemizedMetricStats:
    description: Aggregated statistics about a measure affected by an anomaly.
    properties:
      MetricName:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of the measure.
      OccurrenceCount:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of times that the measure appears.
    type: object
  ItemizedMetricStatsList:
    items:
      $ref: '#/definitions/ItemizedMetricStats'
    type: array
  JsonFileCompression:
    enum:
      - NONE
      - GZIP
    type: string
  JsonFormatDescriptor:
    description: Contains information about how a source JSON data file should be analyzed.
    properties:
      Charset:
        allOf:
          - $ref: '#/definitions/Charset'
          - description: The character set in which the source JSON file is written.
      FileCompression:
        allOf:
          - $ref: '#/definitions/JsonFileCompression'
          - description: The level of compression of the source CSV file.
    type: object
  KmsKeyArn:
    maxLength: 2048
    minLength: 20
    pattern: >-
      arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
    type: string
  LambdaConfiguration:
    description: Contains information about a Lambda configuration.
    properties:
      LambdaArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the Lambda function.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of an IAM role that has permission to invoke the Lambda
              function.
    required:
      - RoleArn
      - LambdaArn
    type: object
  ListAlertsRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the alert's detector.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: >-
              The maximum number of results that will be displayed by the
              request.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the result of the previous request is truncated, the response
              includes a <code>NextToken</code>. To retrieve the next set of
              results, use the token in the next request. Tokens expire after 24
              hours.
    title: ListAlertsRequest
    type: object
  ListAlertsResponse:
    properties:
      AlertSummaryList:
        allOf:
          - $ref: '#/definitions/AlertSummaryList'
          - description: Contains information about an alert.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response is truncated, the service returns this token. To
              retrieve the next set of results, use this token in the next
              request.
    type: object
  ListAnomalyDetectorsRequest:
    properties:
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the result of the previous request was truncated, the response
              includes a <code>NextToken</code>. To retrieve the next set of
              results, use the token in the next request. Tokens expire after 24
              hours.
    title: ListAnomalyDetectorsRequest
    type: object
  ListAnomalyDetectorsResponse:
    properties:
      AnomalyDetectorSummaryList:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorSummaryList'
          - description: A list of anomaly detectors in the account in the current region.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response is truncated, the service returns this token. To
              retrieve the next set of results, use the token in the next
              request.
    type: object
  ListAnomalyGroupSummariesRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              Specify the pagination token that's returned by a previous request
              to retrieve the next page of results.
      SensitivityThreshold:
        allOf:
          - $ref: '#/definitions/SensitivityThreshold'
          - description: The minimum severity score for inclusion in the output.
    required:
      - AnomalyDetectorArn
      - SensitivityThreshold
    title: ListAnomalyGroupSummariesRequest
    type: object
  ListAnomalyGroupSummariesResponse:
    properties:
      AnomalyGroupStatistics:
        allOf:
          - $ref: '#/definitions/AnomalyGroupStatistics'
          - description: Aggregated details about the anomaly groups.
      AnomalyGroupSummaryList:
        allOf:
          - $ref: '#/definitions/AnomalyGroupSummaryList'
          - description: A list of anomaly group summaries.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token that's included if more results are
              available.
    type: object
  ListAnomalyGroupTimeSeriesRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      MetricName:
        allOf:
          - $ref: '#/definitions/MetricName'
          - description: The name of the measure field.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              Specify the pagination token that's returned by a previous request
              to retrieve the next page of results.
    required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      - MetricName
    title: ListAnomalyGroupTimeSeriesRequest
    type: object
  ListAnomalyGroupTimeSeriesResponse:
    properties:
      AnomalyGroupId:
        allOf:
          - $ref: '#/definitions/UUID'
          - description: The ID of the anomaly group.
      MetricName:
        allOf:
          - $ref: '#/definitions/MetricName'
          - description: The name of the measure field.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              The pagination token that's included if more results are
              available.
      TimeSeriesList:
        allOf:
          - $ref: '#/definitions/TimeSeriesList'
          - description: A list of anomalous metrics.
      TimestampList:
        allOf:
          - $ref: '#/definitions/TimestampList'
          - description: Timestamps for the anomalous metrics.
    type: object
  ListMetricSetsRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of the anomaly detector containing the metrics sets to
              list.
      MaxResults:
        allOf:
          - $ref: '#/definitions/MaxResults'
          - description: The maximum number of results to return.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the result of the previous request was truncated, the response
              includes a <code>NextToken</code>. To retrieve the next set of
              results, use the token in the next request. Tokens expire after 24
              hours.
    title: ListMetricSetsRequest
    type: object
  ListMetricSetsResponse:
    properties:
      MetricSetSummaryList:
        allOf:
          - $ref: '#/definitions/MetricSetSummaryList'
          - description: >-
              A list of the datasets in the AWS Region, with configuration
              details for each.
      NextToken:
        allOf:
          - $ref: '#/definitions/NextToken'
          - description: >-
              If the response is truncated, the list call returns this token. To
              retrieve the next set of results, use the token in the next list
              request. 
    type: object
  ListTagsForResourceRequest:
    properties: {}
    title: ListTagsForResourceRequest
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: The resource's tags.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  Metric:
    description: >-
      A calculation made by contrasting a measure and a dimension from your
      source data.
    properties:
      AggregationFunction:
        allOf:
          - $ref: '#/definitions/AggregationFunction'
          - description: The function with which the metric is calculated.
      MetricName:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of the metric.
      Namespace:
        allOf:
          - $ref: '#/definitions/Namespace'
          - description: The namespace for the metric.
    required:
      - MetricName
      - AggregationFunction
    type: object
  MetricLevelImpact:
    description: Details about a measure affected by an anomaly.
    properties:
      ContributionMatrix:
        allOf:
          - $ref: '#/definitions/ContributionMatrix'
          - description: Details about the dimensions that contributed to the anomaly.
      MetricName:
        allOf:
          - $ref: '#/definitions/MetricName'
          - description: The name of the measure.
      NumTimeSeries:
        allOf:
          - $ref: '#/definitions/Integer'
          - description: The number of anomalous metrics for the measure.
    type: object
  MetricLevelImpactList:
    items:
      $ref: '#/definitions/MetricLevelImpact'
    type: array
  MetricList:
    items:
      $ref: '#/definitions/Metric'
    minItems: 1
    type: array
  MetricName:
    maxLength: 256
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  MetricSetDescription:
    maxLength: 256
    minLength: 1
    pattern: .*\S.*
    type: string
  MetricSetName:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  MetricSetSummary:
    description: Contains information about a dataset.
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to which the dataset belongs.
      CreationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the dataset was created.
      LastModificationTime:
        allOf:
          - $ref: '#/definitions/Timestamp'
          - description: The time at which the dataset was last modified.
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset.
      MetricSetDescription:
        allOf:
          - $ref: '#/definitions/MetricSetDescription'
          - description: The description of the dataset.
      MetricSetName:
        allOf:
          - $ref: '#/definitions/MetricSetName'
          - description: The name of the dataset.
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              The dataset's <a
              href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
    type: object
  MetricSetSummaryList:
    items:
      $ref: '#/definitions/MetricSetSummary'
    type: array
  MetricSource:
    description: Contains information about source data used to generate a metric.
    properties:
      AppFlowConfig:
        allOf:
          - $ref: '#/definitions/AppFlowConfig'
          - description: An object containing information about the AppFlow configuration.
      CloudWatchConfig:
        allOf:
          - $ref: '#/definitions/CloudWatchConfig'
          - description: >-
              An object containing information about the Amazon CloudWatch
              monitoring configuration.
      RDSSourceConfig:
        allOf:
          - $ref: '#/definitions/RDSSourceConfig'
          - description: >-
              An object containing information about the Amazon Relational
              Database Service (RDS) configuration.
      RedshiftSourceConfig:
        allOf:
          - $ref: '#/definitions/RedshiftSourceConfig'
          - description: >-
              An object containing information about the Amazon Redshift
              database configuration.
      S3SourceConfig:
        $ref: '#/definitions/S3SourceConfig'
    type: object
  MetricValue:
    format: double
    type: number
  MetricValueList:
    items:
      $ref: '#/definitions/MetricValue'
    type: array
  Namespace:
    maxLength: 255
    minLength: 1
    pattern: '[^:].*'
    type: string
  NextToken:
    maxLength: 3000
    minLength: 1
    pattern: .*\S.*
    type: string
  Offset:
    maximum: 432000
    minimum: 0
    type: integer
  PoirotSecretManagerArn:
    maxLength: 256
    pattern: 'arn:([a-z\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+'
    type: string
  PutFeedbackRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      AnomalyGroupTimeSeriesFeedback:
        allOf:
          - $ref: '#/definitions/AnomalyGroupTimeSeriesFeedback'
          - description: Feedback for an anomalous metric.
    required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
    title: PutFeedbackRequest
    type: object
  PutFeedbackResponse:
    properties: {}
    type: object
  QuoteSymbol:
    maxLength: 1
    pattern: '[^\r\n]|^$'
    type: string
  RDSDatabaseIdentifier:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\-]*$'
    type: string
  RDSDatabaseName:
    maxLength: 64
    minLength: 1
    pattern: '[a-zA-Z0-9_.]+'
    type: string
  RDSSourceConfig:
    description: >-
      Contains information about the Amazon Relational Database Service (RDS)
      configuration.
    properties:
      DBInstanceIdentifier:
        allOf:
          - $ref: '#/definitions/RDSDatabaseIdentifier'
          - description: A string identifying the database instance.
      DatabaseHost:
        allOf:
          - $ref: '#/definitions/DatabaseHost'
          - description: The host name of the database.
      DatabaseName:
        allOf:
          - $ref: '#/definitions/RDSDatabaseName'
          - description: The name of the RDS database.
      DatabasePort:
        allOf:
          - $ref: '#/definitions/DatabasePort'
          - description: The port number where the database can be accessed.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
      SecretManagerArn:
        allOf:
          - $ref: '#/definitions/PoirotSecretManagerArn'
          - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
      TableName:
        allOf:
          - $ref: '#/definitions/TableName'
          - description: The name of the table in the database.
      VpcConfiguration:
        allOf:
          - $ref: '#/definitions/VpcConfiguration'
          - description: >-
              An object containing information about the Amazon Virtual Private
              Cloud (VPC) configuration.
    required:
      - DBInstanceIdentifier
      - DatabaseHost
      - DatabasePort
      - SecretManagerArn
      - DatabaseName
      - TableName
      - RoleArn
      - VpcConfiguration
    type: object
  RedshiftClusterIdentifier:
    maxLength: 63
    minLength: 1
    pattern: '^[a-z](?!.*--)(?!.*-$)[0-9a-z\-]*$'
    type: string
  RedshiftDatabaseName:
    maxLength: 100
    minLength: 1
    pattern: '[a-zA-Z0-9_.]+'
    type: string
  RedshiftSourceConfig:
    description: Provides information about the Amazon Redshift database configuration.
    properties:
      ClusterIdentifier:
        allOf:
          - $ref: '#/definitions/RedshiftClusterIdentifier'
          - description: A string identifying the Redshift cluster.
      DatabaseHost:
        allOf:
          - $ref: '#/definitions/DatabaseHost'
          - description: The name of the database host.
      DatabaseName:
        allOf:
          - $ref: '#/definitions/RedshiftDatabaseName'
          - description: The Redshift database name.
      DatabasePort:
        allOf:
          - $ref: '#/definitions/DatabasePort'
          - description: The port number where the database can be accessed.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The Amazon Resource Name (ARN) of the role providing access to the
              database.
      SecretManagerArn:
        allOf:
          - $ref: '#/definitions/PoirotSecretManagerArn'
          - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
      TableName:
        allOf:
          - $ref: '#/definitions/TableName'
          - description: The table name of the Redshift database.
      VpcConfiguration:
        allOf:
          - $ref: '#/definitions/VpcConfiguration'
          - description: >-
              Contains information about the Amazon Virtual Private Cloud (VPC)
              configuration.
    required:
      - ClusterIdentifier
      - DatabaseHost
      - DatabasePort
      - SecretManagerArn
      - DatabaseName
      - TableName
      - RoleArn
      - VpcConfiguration
    type: object
  ResourceNotFoundException: {}
  S3SourceConfig:
    description: >-
      Contains information about the configuration of the S3 bucket that
      contains source files.
    properties:
      FileFormatDescriptor:
        allOf:
          - $ref: '#/definitions/FileFormatDescriptor'
          - description: Contains information about a source file's formatting.
      HistoricalDataPathList:
        allOf:
          - $ref: '#/definitions/HistoricalDataPathList'
          - description: A list of paths to the historical data files.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: >-
              The ARN of an IAM role that has read and write access permissions
              to the source S3 bucket.
      TemplatedPathList:
        allOf:
          - $ref: '#/definitions/TemplatedPathList'
          - description: A list of templated paths to the source files.
    required:
      - RoleArn
    type: object
  SNSConfiguration:
    description: >-
      Contains information about the SNS topic to which you want to send your
      alerts and the IAM role that has access to that topic.
    properties:
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the IAM role that has access to the target SNS topic.
      SnsTopicArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the target SNS topic.
    required:
      - RoleArn
      - SnsTopicArn
    type: object
  SampleDataS3SourceConfig:
    description: Contains information about the source configuration in Amazon S3.
    properties:
      FileFormatDescriptor:
        $ref: '#/definitions/FileFormatDescriptor'
      HistoricalDataPathList:
        allOf:
          - $ref: '#/definitions/HistoricalDataPathList'
          - description: An array of strings containing the historical set of data paths.
      RoleArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
      TemplatedPathList:
        allOf:
          - $ref: '#/definitions/TemplatedPathList'
          - description: An array of strings containing the list of templated paths.
    required:
      - RoleArn
      - FileFormatDescriptor
    type: object
  SampleRow:
    items:
      $ref: '#/definitions/DataItem'
    type: array
  SampleRows:
    items:
      $ref: '#/definitions/SampleRow'
    type: array
  Score:
    format: double
    maximum: 100
    minimum: 0
    type: number
  SecurityGroupId:
    maxLength: 255
    minLength: 1
    pattern: '[-0-9a-zA-Z]+'
    type: string
  SecurityGroupIdList:
    items:
      $ref: '#/definitions/SecurityGroupId'
    type: array
  SensitivityThreshold:
    maximum: 100
    minimum: 0
    type: integer
  ServiceQuotaExceededException: {}
  SubnetId:
    maxLength: 255
    pattern: '[\-0-9a-zA-Z]+'
    type: string
  SubnetIdList:
    items:
      $ref: '#/definitions/SubnetId'
    type: array
  TableName:
    maxLength: 100
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9_.]*$'
    type: string
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      Tags:
        allOf:
          - $ref: '#/definitions/TagMap'
          - description: >-
              Tags to apply to the resource. Tag keys and values can contain
              letters, numbers, spaces, and the following symbols:
              <code>_.:/=+@-</code> 
            xml:
              name: tags
    required:
      - Tags
    title: TagResourceRequest
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  TemplatedPath:
    maxLength: 1024
    pattern: '^s3://[a-zA-Z0-9_\-\/ {}=]+$'
    type: string
  TemplatedPathList:
    items:
      $ref: '#/definitions/TemplatedPath'
    maxItems: 1
    minItems: 1
    type: array
  TimeSeries:
    description: >-
      Details about a metric. A metric is an aggregation of the values of a
      measure for a dimension value, such as <i>availability</i> in the
      <i>us-east-1</i> Region.
    properties:
      DimensionList:
        allOf:
          - $ref: '#/definitions/DimensionNameValueList'
          - description: The dimensions of the metric.
      MetricValueList:
        allOf:
          - $ref: '#/definitions/MetricValueList'
          - description: The values for the metric.
      TimeSeriesId:
        allOf:
          - $ref: '#/definitions/TimeSeriesId'
          - description: The ID of the metric.
    required:
      - TimeSeriesId
      - DimensionList
      - MetricValueList
    type: object
  TimeSeriesFeedback:
    description: Details about feedback submitted for an anomalous metric.
    properties:
      IsAnomaly:
        allOf:
          - $ref: '#/definitions/Boolean'
          - description: Feedback on whether the metric is a legitimate anomaly.
      TimeSeriesId:
        allOf:
          - $ref: '#/definitions/TimeSeriesId'
          - description: The ID of the metric.
    type: object
  TimeSeriesFeedbackList:
    items:
      $ref: '#/definitions/TimeSeriesFeedback'
    type: array
  TimeSeriesId:
    maxLength: 520
    pattern: .*\S.*
    type: string
  TimeSeriesList:
    items:
      $ref: '#/definitions/TimeSeries'
    type: array
  Timestamp:
    format: date-time
    type: string
  TimestampColumn:
    description: >-
      Contains information about the column used to track time in a source data
      file.
    properties:
      ColumnFormat:
        allOf:
          - $ref: '#/definitions/DateTimeFormat'
          - description: The format of the timestamp column.
      ColumnName:
        allOf:
          - $ref: '#/definitions/ColumnName'
          - description: The name of the timestamp column.
    type: object
  TimestampList:
    items:
      $ref: '#/definitions/TimestampString'
    type: array
  TimestampString:
    maxLength: 60
    pattern: >-
      ^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$
    type: string
  Timezone:
    maxLength: 60
    pattern: .*\S.*
    type: string
  TooManyRequestsException: {}
  UUID:
    maxLength: 63
    pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
    type: string
  UntagResourceRequest:
    properties: {}
    title: UntagResourceRequest
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateAnomalyDetectorRequest:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the detector to update.
      AnomalyDetectorConfig:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorConfig'
          - description: >-
              Contains information about the configuration to which the detector
              will be updated.
      AnomalyDetectorDescription:
        allOf:
          - $ref: '#/definitions/AnomalyDetectorDescription'
          - description: The updated detector description.
      KmsKeyArn:
        allOf:
          - $ref: '#/definitions/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
    required:
      - AnomalyDetectorArn
    title: UpdateAnomalyDetectorRequest
    type: object
  UpdateAnomalyDetectorResponse:
    properties:
      AnomalyDetectorArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the updated detector.
    type: object
  UpdateMetricSetRequest:
    properties:
      DimensionList:
        allOf:
          - $ref: '#/definitions/DimensionList'
          - description: The dimension list.
      MetricList:
        allOf:
          - $ref: '#/definitions/MetricList'
          - description: The metric list.
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset to update.
      MetricSetDescription:
        allOf:
          - $ref: '#/definitions/MetricSetDescription'
          - description: The dataset's description.
      MetricSetFrequency:
        allOf:
          - $ref: '#/definitions/Frequency'
          - description: The dataset's interval.
      MetricSource:
        $ref: '#/definitions/MetricSource'
      Offset:
        allOf:
          - $ref: '#/definitions/Offset'
          - description: >-
              After an interval ends, the amount of seconds that the detector
              waits before importing data. Offset is only supported for S3 and
              Redshift datasources.
      TimestampColumn:
        allOf:
          - $ref: '#/definitions/TimestampColumn'
          - description: The timestamp column.
    required:
      - MetricSetArn
    title: UpdateMetricSetRequest
    type: object
  UpdateMetricSetResponse:
    properties:
      MetricSetArn:
        allOf:
          - $ref: '#/definitions/Arn'
          - description: The ARN of the dataset.
    type: object
  ValidationException: {}
  VpcConfiguration:
    description: >-
      Contains configuration information about the Amazon Virtual Private Cloud
      (VPC).
    properties:
      SecurityGroupIdList:
        allOf:
          - $ref: '#/definitions/SecurityGroupIdList'
          - description: An array of strings containing the list of security groups.
      SubnetIdList:
        allOf:
          - $ref: '#/definitions/SubnetIdList'
          - description: >-
              An array of strings containing the Amazon VPC subnet IDs (e.g.,
              <code>subnet-0bb1c79de3EXAMPLE</code>.
    required:
      - SubnetIdList
      - SecurityGroupIdList
    type: object
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/lookoutmetrics/'
host: lookoutmetrics.us-east-1.amazonaws.com
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: >-
    This is the <i>Amazon Lookout for Metrics API Reference</i>. For an
    introduction to the service with tutorials for getting started, visit <a
    href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev">Amazon Lookout
    for Metrics Developer Guide</a>.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Lookout for Metrics
  version: '2017-07-25'
  x-apiClientRegistration:
    url: >-
      https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-aws-signingName: lookoutmetrics
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: >-
        https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lookoutmetrics-2017-07-25.normal.json
      x-apisguru-driver: external
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: lookoutmetrics
paths:
  /ActivateAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Activates an anomaly detector.
      operationId: ActivateAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivateAnomalyDetectorResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /BackTestAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Runs a backtest for anomaly detection for the specified resource.
      operationId: BackTestAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BackTestAnomalyDetectorResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /CreateAlert:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates an alert for an anomaly detector.
      operationId: CreateAlert
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Action:
                description: >-
                  A configuration that specifies the action to perform when
                  anomalies are detected.
                properties:
                  LambdaConfiguration:
                    allOf:
                      - $ref: '#/definitions/LambdaConfiguration'
                      - description: A configuration for an AWS Lambda channel.
                  SNSConfiguration:
                    allOf:
                      - $ref: '#/definitions/SNSConfiguration'
                      - description: A configuration for an Amazon SNS channel.
                type: object
              AlertDescription:
                description: A description of the alert.
                maxLength: 256
                pattern: .*\S.*
                type: string
              AlertName:
                description: The name of the alert.
                maxLength: 63
                minLength: 1
                pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                type: string
              AlertSensitivityThreshold:
                description: >-
                  An integer from 0 to 100 specifying the alert sensitivity
                  threshold.
                maximum: 100
                minimum: 0
                type: integer
              AnomalyDetectorArn:
                description: The ARN of the detector to which the alert is attached.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of <a
                  href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
                  to apply to the alert.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - AlertName
              - AlertSensitivityThreshold
              - AnomalyDetectorArn
              - Action
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAlertResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /CreateAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates an anomaly detector.
      operationId: CreateAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorConfig:
                description: Contains information about a detector's configuration.
                properties:
                  AnomalyDetectorFrequency:
                    allOf:
                      - $ref: '#/definitions/Frequency'
                      - description: >-
                          The frequency at which the detector analyzes its
                          source data.
                type: object
              AnomalyDetectorDescription:
                description: A description of the detector.
                maxLength: 256
                minLength: 1
                pattern: .*\S.*
                type: string
              AnomalyDetectorName:
                description: The name of the detector.
                maxLength: 63
                minLength: 1
                pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                type: string
              KmsKeyArn:
                description: The ARN of the KMS key to use to encrypt your data.
                maxLength: 2048
                minLength: 20
                pattern: >-
                  arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of <a
                  href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
                  to apply to the anomaly detector.
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - AnomalyDetectorName
              - AnomalyDetectorConfig
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAnomalyDetectorResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /CreateMetricSet:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Creates a dataset.
      operationId: CreateMetricSet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the anomaly detector that will use the dataset.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              DimensionList:
                description: A list of the fields you want to treat as dimensions.
                items:
                  $ref: '#/definitions/ColumnName'
                minItems: 1
                type: array
              MetricList:
                description: A list of metrics that the dataset will contain.
                items:
                  $ref: '#/definitions/Metric'
                minItems: 1
                type: array
              MetricSetDescription:
                description: A description of the dataset you are creating.
                maxLength: 256
                minLength: 1
                pattern: .*\S.*
                type: string
              MetricSetFrequency:
                description: >-
                  The frequency with which the source data will be analyzed for
                  anomalies.
                enum:
                  - P1D
                  - PT1H
                  - PT10M
                  - PT5M
                type: string
              MetricSetName:
                description: The name of the dataset.
                maxLength: 63
                minLength: 1
                pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                type: string
              MetricSource:
                description: >-
                  Contains information about source data used to generate a
                  metric.
                properties:
                  AppFlowConfig:
                    allOf:
                      - $ref: '#/definitions/AppFlowConfig'
                      - description: >-
                          An object containing information about the AppFlow
                          configuration.
                  CloudWatchConfig:
                    allOf:
                      - $ref: '#/definitions/CloudWatchConfig'
                      - description: >-
                          An object containing information about the Amazon
                          CloudWatch monitoring configuration.
                  RDSSourceConfig:
                    allOf:
                      - $ref: '#/definitions/RDSSourceConfig'
                      - description: >-
                          An object containing information about the Amazon
                          Relational Database Service (RDS) configuration.
                  RedshiftSourceConfig:
                    allOf:
                      - $ref: '#/definitions/RedshiftSourceConfig'
                      - description: >-
                          An object containing information about the Amazon
                          Redshift database configuration.
                  S3SourceConfig:
                    $ref: '#/definitions/S3SourceConfig'
                type: object
              Offset:
                description: >-
                  After an interval ends, the amount of seconds that the
                  detector waits before importing data. Offset is only supported
                  for S3 and Redshift datasources.
                maximum: 432000
                minimum: 0
                type: integer
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  A list of <a
                  href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
                  to apply to the dataset.
                maxProperties: 50
                minProperties: 1
                type: object
              TimestampColumn:
                description: >-
                  Contains information about the column used to track time in a
                  source data file.
                properties:
                  ColumnFormat:
                    allOf:
                      - $ref: '#/definitions/DateTimeFormat'
                      - description: The format of the timestamp column.
                  ColumnName:
                    allOf:
                      - $ref: '#/definitions/ColumnName'
                      - description: The name of the timestamp column.
                type: object
              Timezone:
                description: The time zone in which your source data was recorded.
                maxLength: 60
                pattern: .*\S.*
                type: string
            required:
              - AnomalyDetectorArn
              - MetricSetName
              - MetricList
              - MetricSource
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMetricSetResponse'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /DeleteAlert:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Deletes an alert.
      operationId: DeleteAlert
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AlertArn:
                description: The ARN of the alert to delete.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AlertArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAlertResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /DeleteAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Deletes a detector. Deleting an anomaly detector will delete all of its
        corresponding resources including any configured datasets and alerts.
      operationId: DeleteAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the detector to delete.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /DescribeAlert:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Describes an alert.</p> <p>Amazon Lookout for Metrics API actions are
        eventually consistent. If you do a read operation on a resource
        immediately after creating or modifying it, use retries to allow time
        for the write operation to complete.</p>
      operationId: DescribeAlert
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AlertArn:
                description: The ARN of the alert to describe.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AlertArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlertResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /DescribeAnomalyDetectionExecutions:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Returns information about the status of the specified anomaly detection
        jobs.
      operationId: DescribeAnomalyDetectionExecutions
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              MaxResults:
                description: The number of items to return in the response.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  Specify the pagination token that's returned by a previous
                  request to retrieve the next page of results.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
              Timestamp:
                description: The timestamp of the anomaly detection job.
                maxLength: 60
                pattern: >-
                  ^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectionExecutionsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /DescribeAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Describes a detector.</p> <p>Amazon Lookout for Metrics API actions
        are eventually consistent. If you do a read operation on a resource
        immediately after creating or modifying it, use retries to allow time
        for the write operation to complete.</p>
      operationId: DescribeAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the detector to describe.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /DescribeMetricSet:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Describes a dataset.</p> <p>Amazon Lookout for Metrics API actions
        are eventually consistent. If you do a read operation on a resource
        immediately after creating or modifying it, use retries to allow time
        for the write operation to complete.</p>
      operationId: DescribeMetricSet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              MetricSetArn:
                description: The ARN of the dataset.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
            required:
              - MetricSetArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMetricSetResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /GetAnomalyGroup:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns details about a group of anomalous metrics.
      operationId: GetAnomalyGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              AnomalyGroupId:
                description: The ID of the anomaly group.
                maxLength: 63
                pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                type: string
            required:
              - AnomalyGroupId
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAnomalyGroupResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /GetFeedback:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Get feedback for an anomaly group.
      operationId: GetFeedback
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              AnomalyGroupTimeSeriesFeedback:
                description: An anomalous metric in an anomaly group.
                properties:
                  AnomalyGroupId:
                    allOf:
                      - $ref: '#/definitions/UUID'
                      - description: The ID of the anomaly group.
                  TimeSeriesId:
                    allOf:
                      - $ref: '#/definitions/TimeSeriesId'
                      - description: The ID of the metric.
                type: object
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  Specify the pagination token that's returned by a previous
                  request to retrieve the next page of results.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
            required:
              - AnomalyDetectorArn
              - AnomalyGroupTimeSeriesFeedback
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /GetSampleData:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a selection of sample records from an Amazon S3 datasource.
      operationId: GetSampleData
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              S3SourceConfig:
                description: >-
                  Contains information about the source configuration in Amazon
                  S3.
                properties:
                  FileFormatDescriptor:
                    $ref: '#/definitions/FileFormatDescriptor'
                  HistoricalDataPathList:
                    allOf:
                      - $ref: '#/definitions/HistoricalDataPathList'
                      - description: >-
                          An array of strings containing the historical set of
                          data paths.
                  RoleArn:
                    allOf:
                      - $ref: '#/definitions/Arn'
                      - description: The Amazon Resource Name (ARN) of the role.
                  TemplatedPathList:
                    allOf:
                      - $ref: '#/definitions/TemplatedPathList'
                      - description: >-
                          An array of strings containing the list of templated
                          paths.
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSampleDataResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /ListAlerts:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Lists the alerts attached to a detector.</p> <p>Amazon Lookout for
        Metrics API actions are eventually consistent. If you do a read
        operation on a resource immediately after creating or modifying it, use
        retries to allow time for the write operation to complete.</p>
      operationId: ListAlerts
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the alert's detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              MaxResults:
                description: >-
                  The maximum number of results that will be displayed by the
                  request.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  If the result of the previous request is truncated, the
                  response includes a <code>NextToken</code>. To retrieve the
                  next set of results, use the token in the next request. Tokens
                  expire after 24 hours.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAlertsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  /ListAnomalyDetectors:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Lists the detectors in the current AWS Region.</p> <p>Amazon Lookout
        for Metrics API actions are eventually consistent. If you do a read
        operation on a resource immediately after creating or modifying it, use
        retries to allow time for the write operation to complete.</p>
      operationId: ListAnomalyDetectors
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  If the result of the previous request was truncated, the
                  response includes a <code>NextToken</code>. To retrieve the
                  next set of results, use the token in the next request. Tokens
                  expire after 24 hours.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAnomalyDetectorsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /ListAnomalyGroupSummaries:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Returns a list of anomaly groups.
      operationId: ListAnomalyGroupSummaries
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  Specify the pagination token that's returned by a previous
                  request to retrieve the next page of results.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
              SensitivityThreshold:
                description: The minimum severity score for inclusion in the output.
                maximum: 100
                minimum: 0
                type: integer
            required:
              - AnomalyDetectorArn
              - SensitivityThreshold
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAnomalyGroupSummariesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /ListAnomalyGroupTimeSeries:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Gets a list of anomalous metrics for a measure in an anomaly group.
      operationId: ListAnomalyGroupTimeSeries
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              AnomalyGroupId:
                description: The ID of the anomaly group.
                maxLength: 63
                pattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
                type: string
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              MetricName:
                description: The name of the measure field.
                maxLength: 256
                pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
                type: string
              NextToken:
                description: >-
                  Specify the pagination token that's returned by a previous
                  request to retrieve the next page of results.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
            required:
              - AnomalyDetectorArn
              - AnomalyGroupId
              - MetricName
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAnomalyGroupTimeSeriesResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /ListMetricSets:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        <p>Lists the datasets in the current AWS Region.</p> <p>Amazon Lookout
        for Metrics API actions are eventually consistent. If you do a read
        operation on a resource immediately after creating or modifying it, use
        retries to allow time for the write operation to complete.</p>
      operationId: ListMetricSets
      parameters:
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: >-
                  The ARN of the anomaly detector containing the metrics sets to
                  list.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              MaxResults:
                description: The maximum number of results to return.
                maximum: 100
                minimum: 1
                type: integer
              NextToken:
                description: >-
                  If the result of the previous request was truncated, the
                  response includes a <code>NextToken</code>. To retrieve the
                  next set of results, use the token in the next request. Tokens
                  expire after 24 hours.
                maxLength: 3000
                minLength: 1
                pattern: .*\S.*
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMetricSetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
  /PutFeedback:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Add feedback for an anomalous metric.
      operationId: PutFeedback
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The Amazon Resource Name (ARN) of the anomaly detector.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              AnomalyGroupTimeSeriesFeedback:
                description: Feedback for an anomalous metric.
                properties:
                  AnomalyGroupId:
                    allOf:
                      - $ref: '#/definitions/UUID'
                      - description: The ID of the anomaly group.
                  IsAnomaly:
                    allOf:
                      - $ref: '#/definitions/Boolean'
                      - description: >-
                          Feedback on whether the metric is a legitimate
                          anomaly.
                  TimeSeriesId:
                    allOf:
                      - $ref: '#/definitions/TimeSeriesId'
                      - description: The ID of the metric.
                type: object
            required:
              - AnomalyDetectorArn
              - AnomalyGroupTimeSeriesFeedback
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutFeedbackResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /UpdateAnomalyDetector:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Updates a detector. After activation, you can only change a detector's
        ingestion delay and description.
      operationId: UpdateAnomalyDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnomalyDetectorArn:
                description: The ARN of the detector to update.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              AnomalyDetectorConfig:
                description: Contains information about a detector's configuration.
                properties:
                  AnomalyDetectorFrequency:
                    allOf:
                      - $ref: '#/definitions/Frequency'
                      - description: >-
                          The frequency at which the detector analyzes its
                          source data.
                type: object
              AnomalyDetectorDescription:
                description: The updated detector description.
                maxLength: 256
                minLength: 1
                pattern: .*\S.*
                type: string
              KmsKeyArn:
                description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
                maxLength: 2048
                minLength: 20
                pattern: >-
                  arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
                type: string
            required:
              - AnomalyDetectorArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAnomalyDetectorResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /UpdateMetricSet:
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: Updates a dataset.
      operationId: UpdateMetricSet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              DimensionList:
                description: The dimension list.
                items:
                  $ref: '#/definitions/ColumnName'
                minItems: 1
                type: array
              MetricList:
                description: The metric list.
                items:
                  $ref: '#/definitions/Metric'
                minItems: 1
                type: array
              MetricSetArn:
                description: The ARN of the dataset to update.
                maxLength: 256
                pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
                type: string
              MetricSetDescription:
                description: The dataset's description.
                maxLength: 256
                minLength: 1
                pattern: .*\S.*
                type: string
              MetricSetFrequency:
                description: The dataset's interval.
                enum:
                  - P1D
                  - PT1H
                  - PT10M
                  - PT5M
                type: string
              MetricSource:
                description: >-
                  Contains information about source data used to generate a
                  metric.
                properties:
                  AppFlowConfig:
                    allOf:
                      - $ref: '#/definitions/AppFlowConfig'
                      - description: >-
                          An object containing information about the AppFlow
                          configuration.
                  CloudWatchConfig:
                    allOf:
                      - $ref: '#/definitions/CloudWatchConfig'
                      - description: >-
                          An object containing information about the Amazon
                          CloudWatch monitoring configuration.
                  RDSSourceConfig:
                    allOf:
                      - $ref: '#/definitions/RDSSourceConfig'
                      - description: >-
                          An object containing information about the Amazon
                          Relational Database Service (RDS) configuration.
                  RedshiftSourceConfig:
                    allOf:
                      - $ref: '#/definitions/RedshiftSourceConfig'
                      - description: >-
                          An object containing information about the Amazon
                          Redshift database configuration.
                  S3SourceConfig:
                    $ref: '#/definitions/S3SourceConfig'
                type: object
              Offset:
                description: >-
                  After an interval ends, the amount of seconds that the
                  detector waits before importing data. Offset is only supported
                  for S3 and Redshift datasources.
                maximum: 432000
                minimum: 0
                type: integer
              TimestampColumn:
                description: >-
                  Contains information about the column used to track time in a
                  source data file.
                properties:
                  ColumnFormat:
                    allOf:
                      - $ref: '#/definitions/DateTimeFormat'
                      - description: The format of the timestamp column.
                  ColumnName:
                    allOf:
                      - $ref: '#/definitions/ColumnName'
                      - description: The name of the timestamp column.
                type: object
            required:
              - MetricSetArn
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMetricSetResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/tags/{resourceArn}':
    get:
      description: >-
        Gets a list of <a
        href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
        for a detector, dataset, or alert.
      operationId: ListTagsForResource
      parameters:
        - description: The resource's Amazon Resource Name (ARN).
          in: path
          maxLength: 256
          name: resourceArn
          pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Adds <a
        href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
        to a detector, dataset, or alert.
      operationId: TagResource
      parameters:
        - description: The resource's Amazon Resource Name (ARN).
          in: path
          maxLength: 256
          name: resourceArn
          pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: >-
                  Tags to apply to the resource. Tag keys and values can contain
                  letters, numbers, spaces, and the following symbols:
                  <code>_.:/=+@-</code> 
                maxProperties: 50
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: >-
        Removes <a
        href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
        from a detector, dataset, or alert.
      operationId: UntagResource
      parameters:
        - description: The resource's Amazon Resource Name (ARN).
          in: path
          maxLength: 256
          name: resourceArn
          pattern: 'arn:([a-z\d-]+):.*:.*:.*:.+'
          required: true
          type: string
        - collectionFormat: multi
          description: Keys to remove from the resource's tags.
          in: query
          items:
            $ref: '#/definitions/TagKey'
          maxItems: 50
          minItems: 1
          name: tagKeys
          required: true
          type: array
      produces:
        - application/json
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - in: header
        name: X-Amz-Content-Sha256
        required: false
        type: string
      - in: header
        name: X-Amz-Date
        required: false
        type: string
      - in: header
        name: X-Amz-Algorithm
        required: false
        type: string
      - in: header
        name: X-Amz-Credential
        required: false
        type: string
      - in: header
        name: X-Amz-Security-Token
        required: false
        type: string
      - in: header
        name: X-Amz-Signature
        required: false
        type: string
      - in: header
        name: X-Amz-SignedHeaders
        required: false
        type: string
schemes:
  - http
security:
  - hmac: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
swagger: '2.0'
x-components:
  parameters:
    X-Amz-Algorithm:
      in: header
      name: X-Amz-Algorithm
      required: false
      type: string
    X-Amz-Content-Sha256:
      in: header
      name: X-Amz-Content-Sha256
      required: false
      type: string
    X-Amz-Credential:
      in: header
      name: X-Amz-Credential
      required: false
      type: string
    X-Amz-Date:
      in: header
      name: X-Amz-Date
      required: false
      type: string
    X-Amz-Security-Token:
      in: header
      name: X-Amz-Security-Token
      required: false
      type: string
    X-Amz-Signature:
      in: header
      name: X-Amz-Signature
      required: false
      type: string
    X-Amz-SignedHeaders:
      in: header
      name: X-Amz-SignedHeaders
      required: false
      type: string
x-hasEquivalentPaths: true

