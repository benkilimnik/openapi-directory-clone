basePath: /
definitions:
  AllEntityType:
    enum:
      - Group
      - BaseSecurityGroup
      - BaseEvent
      - BaseVirtualMachine
      - BaseFirewallRule
      - BaseIPSet
      - BaseL2Network
      - BaseFirewall
      - BaseService
      - BaseServiceGroup
      - BaseVnic
      - VirtualMachine
      - EC2Instance
      - Host
      - Vnic
      - Vmknic
      - VxlanLayer2Network
      - VlanL2Network
      - Cluster
      - SecurityTag
      - ResourcePool
      - NSXIPSet
      - EC2IPSet
      - NSXSecurityGroup
      - EC2SecurityGroup
      - Flow
      - ProblemEvent
      - Application
      - Tier
      - NSXFirewallRule
      - EC2SGFirewallRule
      - NSXRedirectRule
      - VCenterManager
      - NSXVManager
      - BaseManager
      - BaseNSXManager
      - NSXService
      - EC2Service
      - VPC
      - NSXDistributedFirewall
      - EC2Firewall
      - NSXServiceGroup
      - DistributedVirtualSwitch
      - DistributedVirtualPortgroup
      - VCDatacenter
      - Datastore
      - Folder
    type: string
  ApiError:
    properties:
      code:
        format: int32
        type: integer
      details:
        items:
          $ref: '#/definitions/ErrorDetail'
        type: array
      message:
        type: string
    type: object
  Application:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          create_time:
            format: int64
            type: integer
          created_by:
            type: string
          last_modified_by:
            type: string
          last_modified_time:
            format: int64
            type: integer
  ApplicationRequest:
    properties:
      name:
        type: string
    type: object
  AristaSwitchDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  AristaSwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
  BaseDataSource:
    discriminator: entity_type
    properties:
      enabled:
        default: true
        type: boolean
      entity_id:
        type: string
      entity_type:
        $ref: '#/definitions/DataSourceType'
      fqdn:
        example: your.domain.com
        type: string
      ip:
        example: 192.168.10.1
        type: string
      nickname:
        example: vc1
        type: string
      notes:
        type: string
      proxy_id:
        description: proxy vm which should register this vcenter
        example: '1000:104:12313412'
        type: string
    type: object
  BaseDataSourceRequest:
    properties:
      enabled:
        default: true
        type: boolean
      fqdn:
        example: your.domain.com
        type: string
      ip:
        example: 192.168.10.1
        type: string
      nickname:
        example: vc1
        type: string
      notes:
        type: string
      proxy_id:
        description: proxy vm which should register this vcenter
        example: '1000:104:12313412'
        type: string
    required:
      - proxy_id
      - nickname
    type: object
  BaseEntity:
    discriminator: entity_type
    properties:
      entity_id:
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
      name:
        type: string
    type: object
  BaseEvent:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          admin_state:
            enum:
              - ENABLED
              - DISABLED
            type: string
          anchor_entities:
            items:
              $ref: '#/definitions/Reference'
            type: array
          archived:
            type: boolean
          event_tags:
            items:
              type: string
            type: array
          event_time_epoch_ms:
            format: int64
            type: integer
          message:
            type: string
          related_entities:
            items:
              $ref: '#/definitions/Reference'
            type: array
  BaseFirewall:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          exclusions:
            items:
              $ref: '#/definitions/Reference'
            type: array
          firewall_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
  BaseFirewallRule:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          action:
            $ref: '#/definitions/FirewallAction'
          destination_any:
            type: boolean
          destination_inversion:
            type: boolean
          destinations:
            items:
              $ref: '#/definitions/Reference'
            type: array
          disabled:
            type: boolean
          port_ranges:
            items:
              $ref: '#/definitions/PortRange'
            type: array
          rule_id:
            type: string
          section_id:
            type: string
          section_name:
            type: string
          sequence_number:
            type: integer
          service_any:
            type: boolean
          services:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_any:
            type: boolean
          source_inversion:
            type: boolean
          sources:
            items:
              $ref: '#/definitions/Reference'
            type: array
  BaseIPSet:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          direct_destination_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          direct_source_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          indirect_destination_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          indirect_source_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          ip_addresses:
            items:
              $ref: '#/definitions/IpV4Address'
            type: array
          ip_numeric_ranges:
            items:
              $ref: '#/definitions/IpNumericRange'
            type: array
          ip_ranges:
            items:
              $ref: '#/definitions/IpAddressRange'
            type: array
          parent_security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          translated_vm_count:
            format: int32
            type: integer
          vendor:
            type: string
          vendor_id:
            type: string
  BaseL2Network:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          gateways:
            items:
              type: string
            type: array
          network_addresses:
            items:
              type: string
            type: array
  BaseManager:
    allOf:
      - $ref: '#/definitions/BaseEntity'
  BaseNSXManager:
    allOf:
      - $ref: '#/definitions/BaseManager'
  BaseSecurityGroup:
    allOf:
      - $ref: '#/definitions/Group'
      - properties:
          direct_destination_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          direct_members:
            items:
              $ref: '#/definitions/Reference'
            type: array
          direct_source_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          excluded_members:
            items:
              $ref: '#/definitions/Reference'
            type: array
          indirect_destination_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          indirect_source_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          members:
            items:
              $ref: '#/definitions/Reference'
            type: array
          parents:
            items:
              $ref: '#/definitions/Reference'
            type: array
          translated_vm_count:
            type: integer
          vendor_id:
            type: string
  BaseService:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          port_ranges:
            items:
              $ref: '#/definitions/PortRange'
            type: array
          protocol:
            type: string
  BaseServiceGroup:
    allOf:
      - $ref: '#/definitions/Group'
  BaseVirtualMachine:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          default_gateway:
            type: string
          destination_firewall_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          ip_addresses:
            items:
              $ref: '#/definitions/IpV4Address'
            type: array
          ip_sets:
            items:
              $ref: '#/definitions/Reference'
            type: array
          security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_firewall_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          vnics:
            items:
              $ref: '#/definitions/Reference'
            type: array
    type: object
  BaseVnic:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          ip_addresses:
            items:
              $ref: '#/definitions/IpV4Address'
            type: array
          layer2_network:
            $ref: '#/definitions/Reference'
          vlan:
            $ref: '#/definitions/Vlan'
          vm:
            $ref: '#/definitions/Reference'
  BrocadeSwitchDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  BrocadeSwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
  CheckpointFirewallDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  CheckpointFirewallDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
  CiscoSwitchDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
      - properties:
          switch_type:
            $ref: '#/definitions/CiscoSwitchType'
  CiscoSwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
      - properties:
          switch_type:
            $ref: '#/definitions/CiscoSwitchType'
  CiscoSwitchType:
    enum:
      - CATALYST_3000
      - CATALYST_4500
      - CATALYST_6500
      - NEXUS_5K
      - NEXUS_7K
      - NEXUS_9K
    type: string
  Cluster:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          nsx_manager:
            $ref: '#/definitions/Reference'
          num_cpu_cores:
            format: int32
            type: integer
          num_datastores:
            format: int32
            type: integer
          num_hosts:
            format: int32
            type: integer
          total_cpus:
            format: int32
            type: integer
          total_memory:
            format: int64
            type: integer
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  DataSourceEntityId:
    properties:
      entity_id:
        description: Entity Identifier
        example: '1000:104:12213212'
        type: string
      entity_type:
        $ref: '#/definitions/DataSourceType'
    type: object
  DataSourceListResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/DataSourceEntityId'
        type: array
      total_count:
        example: 1
        type: integer
    type: object
  DataSourceType:
    enum:
      - CiscoSwitchDataSource
      - DellSwitchDataSource
      - AristaSwitchDataSource
      - BrocadeSwitchDataSource
      - JuniperSwitchDataSource
      - VCenterDataSource
      - NSXVManagerDataSource
      - UCSManagerDataSource
      - HPVCManagerDataSource
      - HPOneViewDataSource
      - PanFirewallDataSource
      - CheckpointFirewallDataSource
    type: string
  DatasourceHealth:
    description: Datasource Health state
    properties:
      health_error_code:
        type: string
      health_message:
        type: string
      health_status:
        enum:
          - HEALTHY
          - HEALTHY_WITH_WARNINGS
          - UNHEALTHY
        type: string
    type: object
  Datastore:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  DellSwitchDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
      - properties:
          switch_type:
            $ref: '#/definitions/DellSwitchType'
  DellSwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
      - properties:
          switch_type:
            $ref: '#/definitions/DellSwitchType'
  DellSwitchType:
    enum:
      - FORCE_10_MXL_10
      - POWERCONNECT_8024
      - S4048
      - Z9100
      - S6000
    type: string
  DistributedVirtualPortgroup:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          distributed_virtual_switch:
            $ref: '#/definitions/Reference'
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  DistributedVirtualSwitch:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          hosts:
            items:
              $ref: '#/definitions/Reference'
            type: array
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  Domain:
    properties:
      domain_type:
        enum:
          - LDAP
          - LOCAL
        example: LDAP
        type: string
      value:
        description: 'domain value, not required for LOCAL domain'
        example: example.com
        type: string
    type: object
  EC2Firewall:
    allOf:
      - $ref: '#/definitions/BaseFirewall'
  EC2FirewallDirection:
    enum:
      - INBOUND
      - OUTBOUND
    type: string
  EC2IPSet:
    allOf:
      - $ref: '#/definitions/BaseIPSet'
  EC2Instance:
    allOf:
      - $ref: '#/definitions/BaseVirtualMachine'
      - properties:
          region:
            type: string
          vpc:
            $ref: '#/definitions/Reference'
  EC2NetworkInterface:
    allOf:
      - $ref: '#/definitions/BaseVnic'
  EC2SGFirewallRule:
    allOf:
      - $ref: '#/definitions/BaseFirewallRule'
      - properties:
          direction:
            $ref: '#/definitions/EC2FirewallDirection'
          owner_security_group:
            $ref: '#/definitions/Reference'
          vpc:
            $ref: '#/definitions/Reference'
  EC2SecurityGroup:
    allOf:
      - $ref: '#/definitions/BaseSecurityGroup'
      - properties:
          region:
            type: string
          vpc:
            $ref: '#/definitions/Reference'
  EC2Service:
    allOf:
      - $ref: '#/definitions/BaseService'
  EntityId:
    properties:
      entity_id:
        description: Entity Identifier
        example: '1000:104:12213212'
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
    type: object
  EntityIdWithTime:
    properties:
      entity_id:
        description: Entity Identifier
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
      time:
        format: int64
        type: integer
    type: object
  EntityName:
    allOf:
      - $ref: '#/definitions/EntityIdWithTime'
      - properties:
          name:
            type: string
  EntityType:
    enum:
      - VirtualMachine
      - EC2Instance
      - Host
      - Vnic
      - Vmknic
      - VxlanLayer2Network
      - VlanL2Network
      - Cluster
      - SecurityTag
      - ResourcePool
      - NSXIPSet
      - EC2IPSet
      - NSXSecurityGroup
      - EC2SecurityGroup
      - Flow
      - ProblemEvent
      - Application
      - Tier
      - NSXFirewallRule
      - EC2SGFirewallRule
      - NSXRedirectRule
      - VCenterManager
      - NSXVManager
      - NSXService
      - EC2Service
      - VPC
      - NSXDistributedFirewall
      - EC2Firewall
      - NSXServiceGroup
      - DistributedVirtualSwitch
      - DistributedVirtualPortgroup
      - VCDatacenter
      - Datastore
      - Folder
    type: string
  ErrorDetail:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
      target:
        items:
          type: string
        type: array
    type: object
  FirewallAction:
    enum:
      - ALLOW
      - ACCEPT
      - DENY
      - DROP
      - REJECT
      - REDIRECT
      - DO_NOT_REDIRECT
    type: string
  FirewallDirection:
    enum:
      - IN
      - OUT
      - INOUT
    type: string
  Flow:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          destination_cluster:
            $ref: '#/definitions/Reference'
          destination_datacenter:
            $ref: '#/definitions/Reference'
          destination_folders:
            items:
              $ref: '#/definitions/Reference'
            type: array
          destination_host:
            $ref: '#/definitions/Reference'
          destination_ip:
            $ref: '#/definitions/IpV4Address'
          destination_ip_sets:
            items:
              $ref: '#/definitions/Reference'
            type: array
          destination_l2_network:
            $ref: '#/definitions/Reference'
          destination_resource_pool:
            $ref: '#/definitions/Reference'
          destination_security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          destination_security_tags:
            items:
              $ref: '#/definitions/Reference'
            type: array
          destination_vm:
            $ref: '#/definitions/Reference'
          destination_vm_tags:
            items:
              type: string
            type: array
          destination_vnic:
            $ref: '#/definitions/Reference'
          destination_vpc:
            $ref: '#/definitions/Reference'
          firewall_action:
            $ref: '#/definitions/FirewallAction'
          flow_tag:
            items:
              $ref: '#/definitions/FlowTag'
            type: array
          port:
            $ref: '#/definitions/PortRange'
          protocol:
            $ref: '#/definitions/Protocol'
          source_cluster:
            $ref: '#/definitions/Reference'
          source_datacenter:
            $ref: '#/definitions/Reference'
          source_folders:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_host:
            $ref: '#/definitions/Reference'
          source_ip:
            $ref: '#/definitions/IpV4Address'
          source_ip_sets:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_l2_network:
            $ref: '#/definitions/Reference'
          source_resource_pool:
            $ref: '#/definitions/Reference'
          source_security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_security_tags:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_vm:
            $ref: '#/definitions/Reference'
          source_vm_tags:
            items:
              type: string
            type: array
          source_vnic:
            $ref: '#/definitions/Reference'
          source_vpc:
            $ref: '#/definitions/Reference'
          traffic_type:
            $ref: '#/definitions/FlowTrafficType'
          within_host:
            type: boolean
  FlowTag:
    enum:
      - TAG_TRAFFIC_TYPE_UNKNOWN
      - TAG_INTERNET_TRAFFIC
      - TAG_EAST_WEST_TRAFFIC
      - TAG_VM_VM_TRAFFIC
      - TAG_VM_PHY_TRAFFIC
      - TAG_PHY_PHY_TRAFFIC
      - TAG_SRC_IP_VMKNIC
      - TAG_DST_IP_VMKNIC
      - TAG_SRC_IP_VM
      - TAG_DST_IP_VM
      - TAG_SRC_IP_INTERNET
      - TAG_DST_IP_INTERNET
      - TAG_SRC_IP_PHYSICAL
      - TAG_DST_IP_PHYSICAL
      - TAG_SAME_HOST
      - TAG_DIFF_HOST
      - TAG_SHARED_SERVICE
      - TAG_NOT_SHARED_SERVICE
      - TAG_NETWORK_SWITCHED
      - TAG_NETWORK_ROUTED
      - TAG_NETWORK_UNKNOWN
      - TAG_SRC_IP_VTEP
      - TAG_DST_IP_VTEP
      - TAG_UNICAST
      - TAG_BROADCAST
      - TAG_MULTICAST
      - TAG_SRC_IP_LINK_LOCAL
      - TAG_DST_IP_LINK_LOCAL
      - TAG_SRC_IP_CLASS_E
      - TAG_DST_IP_CLASS_E
      - TAG_SRC_IP_CLASS_A_RESERVED
      - TAG_DST_IP_CLASS_A_RESERVED
      - TAG_INVALID_IP_PACKETS
      - TAG_NOT_ANALYZED
      - TAG_GENERIC_INTERNET_SRC_IP
      - TAG_SNAT_DNAT_FLOW
      - TAG_MULTINICS
      - TAG_SRC_VC
      - TAG_DST_VC
      - TAG_SRC_AWS
      - TAG_DST_AWS
      - TAG_WITHIN_DC
      - TAG_DIFF_DC
      - TAG_WITHIN_VPC
      - TAG_DIFF_VPC
    type: string
  FlowTrafficType:
    enum:
      - INTERNET_TRAFFIC
      - EAST_WEST_TRAFFIC
    type: string
  Folder:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  Group:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          members:
            items:
              $ref: '#/definitions/Reference'
            type: array
  GroupMembershipCriteria:
    description: EntityType currently restricted to VirtualMachine
    properties:
      ip_address_membership_criteria:
        $ref: '#/definitions/IpAddressMembershipCriteria'
      membership_type:
        enum:
          - SearchMembershipCriteria
          - IPAddressMembershipCriteria
        type: string
      search_membership_criteria:
        $ref: '#/definitions/SearchMembershipCriteria'
    type: object
  HPOneViewManagerDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  HPOneViewManagerDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  HPVCManagerDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  HPVCManagerDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  Host:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          cluster:
            $ref: '#/definitions/Reference'
          connection_state:
            type: string
          datastores:
            items:
              $ref: '#/definitions/Reference'
            type: array
          maintenance_mode:
            type: string
          nsx_manager:
            $ref: '#/definitions/Reference'
          service_tag:
            type: string
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
          vm_count:
            format: int32
            type: integer
          vmknics:
            items:
              $ref: '#/definitions/Reference'
            type: array
  IpAddressMembershipCriteria:
    description: Ip Address membership definition
    properties:
      ip_addresses:
        items:
          type: string
        type: array
    type: object
  IpAddressRange:
    properties:
      end_ip:
        type: string
      start_ip:
        type: string
  IpNumericRange:
    properties:
      end:
        format: int64
        type: integer
      start:
        format: int64
        type: integer
  IpV4Address:
    properties:
      ip_address:
        type: string
      netmask:
        type: string
      network_address:
        type: string
    type: object
  JuniperSwitchDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  JuniperSwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
  MetaEntityType:
    enum:
      - Group
      - BaseSecurityGroup
      - BaseEvent
      - BaseVirtualMachine
      - BaseFirewallRule
      - BaseIPSet
      - BaseL2Network
      - BaseManager
      - BaseNSXManager
      - BaseFirewall
      - BaseService
      - BaseServiceGroup
      - BaseVnic
    type: string
  MicroSecGroup:
    properties:
      entity:
        $ref: '#/definitions/Reference'
    type: object
  NSXControllerDataCollection:
    properties:
      controller_password:
        type: string
      enabled:
        default: false
        type: boolean
    type: object
  NSXDistributedFirewall:
    allOf:
      - $ref: '#/definitions/BaseFirewall'
      - properties:
          vendor_id:
            type: string
  NSXFirewallRule:
    allOf:
      - $ref: '#/definitions/BaseFirewallRule'
      - properties:
          direction:
            $ref: '#/definitions/FirewallDirection'
          logging_enabled:
            type: boolean
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
  NSXIPSet:
    allOf:
      - $ref: '#/definitions/BaseIPSet'
      - properties:
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
  NSXRedirectRule:
    allOf:
      - $ref: '#/definitions/BaseFirewallRule'
      - properties:
          direction:
            $ref: '#/definitions/FirewallDirection'
          logging_enabled:
            type: boolean
          service_profile:
            type: string
  NSXSecurityGroup:
    allOf:
      - $ref: '#/definitions/BaseSecurityGroup'
      - properties:
          ip_sets:
            items:
              $ref: '#/definitions/Reference'
            type: array
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
          security_tags:
            items:
              $ref: '#/definitions/Reference'
            type: array
  NSXService:
    allOf:
      - $ref: '#/definitions/BaseService'
      - properties:
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
          vendor_id:
            type: string
  NSXServiceGroup:
    allOf:
      - $ref: '#/definitions/BaseServiceGroup'
      - properties:
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
          vendor_id:
            type: string
  NSXVManager:
    allOf:
      - $ref: '#/definitions/BaseNSXManager'
      - properties:
          fqdn:
            type: string
          ip_address:
            $ref: '#/definitions/IpV4Address'
          primary_nsx_manager:
            $ref: '#/definitions/Reference'
          role:
            type: string
          version:
            type: string
          vm:
            $ref: '#/definitions/Reference'
  NSXVManagerDataSource:
    allOf:
      - $ref: '#/definitions/BaseDataSource'
      - properties:
          central_cli_enabled:
            default: false
            type: boolean
          credentials:
            $ref: '#/definitions/PasswordCredentials'
          ipfix_enabled:
            default: false
            type: boolean
          vcenter_id:
            description: Associated vcenter data source entity Id
            type: string
  NSXVManagerDataSourceRequest:
    allOf:
      - $ref: '#/definitions/BaseDataSourceRequest'
      - properties:
          central_cli_enabled:
            default: false
            type: boolean
          credentials:
            $ref: '#/definitions/PasswordCredentials'
          ipfix_enabled:
            default: false
            type: boolean
          vcenter_id:
            description: Associated vcenter data source entity Id
            type: string
        required:
          - vcenter_id
          - credentials
  NameRequestParam:
    properties:
      entity_id:
        type: string
      time:
        format: int64
        type: integer
    type: object
  NamesRequest:
    properties:
      entities:
        items:
          $ref: '#/definitions/NameRequestParam'
        type: array
    type: object
  NamesResponse:
    properties:
      entities:
        items:
          $ref: '#/definitions/EntityName'
        type: array
    type: object
  Node:
    properties:
      entity_type:
        $ref: '#/definitions/NodeType'
      id:
        type: string
      ip_address:
        type: string
      name:
        type: string
      node_id:
        type: string
      node_type:
        enum:
          - PROXY_VM
          - PLATFORM_VM
        type: string
    type: object
  NodeId:
    properties:
      entity_type:
        $ref: '#/definitions/NodeType'
      id:
        description: Entity Identifier
        example: '1000:104:12213212'
        type: string
    type: object
  NodeListResult:
    properties:
      results:
        items:
          $ref: '#/definitions/NodeId'
        type: array
      total_count:
        example: 1
        type: integer
    type: object
  NodeType:
    enum:
      - Node
    type: string
  PagedListResponse:
    properties:
      cursor:
        type: string
      end_time:
        format: int64
        type: integer
      results:
        items:
          $ref: '#/definitions/EntityId'
        type: array
      start_time:
        format: int64
        type: integer
      total_count:
        type: integer
    type: object
  PagedListResponseWithTime:
    properties:
      cursor:
        example: ML12eu02==
        type: string
      end_time:
        example: 1504739809
        format: int64
        type: integer
      results:
        items:
          $ref: '#/definitions/EntityIdWithTime'
        type: array
      start_time:
        example: 1504739809
        format: int64
        type: integer
      total_count:
        example: 100
        type: integer
    type: object
  PanFirewallDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  PanFirewallDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSourceRequest'
  PasswordCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    required:
      - username
      - password
    type: object
  PortRange:
    properties:
      display:
        type: string
      end:
        format: int32
        type: integer
      iana_name:
        type: string
      iana_port_display:
        type: string
      start:
        format: int32
        type: integer
    type: object
  ProblemEvent:
    allOf:
      - $ref: '#/definitions/BaseEvent'
      - properties:
          event_close_time_epoch_ms:
            format: int64
            type: integer
          severity:
            enum:
              - CRITICAL
              - MODERATE
              - WARNING
              - INFO
            type: string
  Protocol:
    enum:
      - TCP
      - UDP
      - OTHER
    type: string
  RecommendedRule:
    properties:
      action:
        enum:
          - ALLOW
          - DROP
        type: string
      destinations:
        items:
          $ref: '#/definitions/Reference'
        type: array
      port_ranges:
        items:
          $ref: '#/definitions/SimplePortRange'
        type: array
      protocols:
        items:
          type: string
        type: array
      sources:
        items:
          $ref: '#/definitions/Reference'
        type: array
    type: object
  RecommendedRules:
    properties:
      results:
        items:
          $ref: '#/definitions/RecommendedRule'
        type: array
      time_range:
        $ref: '#/definitions/TimeRange'
    type: object
  RecommendedRulesRequest:
    example:
      group_1:
        entity:
          entity_id: '10000:562:1904698621'
          entity_type: Tier
      group_2:
        entity:
          entity_id: '10000:562:1780351215'
          entity_type: Tier
    properties:
      group_1:
        $ref: '#/definitions/MicroSecGroup'
      group_2:
        $ref: '#/definitions/MicroSecGroup'
      time_range:
        $ref: '#/definitions/TimeRange'
    type: object
  Reference:
    properties:
      entity_id:
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
    type: object
  ResourcePool:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
  RuleSet:
    properties:
      firewall:
        $ref: '#/definitions/Reference'
      rule_set_type:
        enum:
          - NSX_STANDARD
          - NSX_REDIRECT
          - AWS_STANDARD
        type: string
      rules:
        items:
          $ref: '#/definitions/Reference'
        type: array
    type: object
  SNMP2cConfig:
    properties:
      community_string:
        type: string
    type: object
  SNMP3Config:
    properties:
      authentication_password:
        type: string
      authentication_type:
        enum:
          - NO_AUTH
          - MD5
          - SHA
        type: string
      context_name:
        type: string
      privacy_password:
        type: string
      privacy_type:
        enum:
          - AES
          - DES
          - AES128
          - AES192
          - AES256
          - 3DES
          - NO_PRIV
        type: string
      username:
        type: string
    type: object
  SNMPConfig:
    properties:
      config_snmp_2c:
        $ref: '#/definitions/SNMP2cConfig'
      config_snmp_3:
        $ref: '#/definitions/SNMP3Config'
      snmp_enabled:
        default: false
        type: boolean
      snmp_version:
        enum:
          - v2c
          - v3
        type: string
    type: object
  ScopeEnum:
    enum:
      - UNIVERSAL
      - GLOBAL
    type: string
  SearchMembershipCriteria:
    properties:
      entity_type:
        $ref: '#/definitions/AllEntityType'
      filter:
        description: As defined in search end point
        type: string
    type: object
  SearchRequest:
    properties:
      cursor:
        type: string
      entity_type:
        $ref: '#/definitions/AllEntityType'
      filter:
        description: query filter
        type: string
      size:
        format: int32
        type: integer
      sort_by:
        $ref: '#/definitions/SortByClause'
      time_range:
        $ref: '#/definitions/TimeRange'
    type: object
  SecurityTag:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          description:
            type: string
          direct_security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          nsx_manager:
            $ref: '#/definitions/Reference'
          security_groups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          vendor_id:
            type: string
  SimpleListResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/EntityId'
        type: array
      total_count:
        type: integer
    type: object
  SimplePortRange:
    properties:
      end:
        format: int32
        type: integer
      start:
        format: int32
        type: integer
    type: object
  SortByClause:
    properties:
      field:
        type: string
      order:
        enum:
          - ASC
          - DESC
        type: string
    type: object
  SwitchDataSource:
    allOf:
      - $ref: '#/definitions/BaseDataSource'
      - properties:
          credentials:
            $ref: '#/definitions/PasswordCredentials'
  SwitchDataSourceRequest:
    allOf:
      - $ref: '#/definitions/BaseDataSourceRequest'
      - properties:
          credentials:
            $ref: '#/definitions/PasswordCredentials'
  Tier:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          application:
            $ref: '#/definitions/Reference'
          group_membership_criteria:
            items:
              $ref: '#/definitions/GroupMembershipCriteria'
            type: array
  TierListResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/Tier'
        type: array
    type: object
  TierRequest:
    example:
      group_membership_criteria:
        - membership_type: SearchMembershipCriteria
          search_membership_criteria:
            entity_type: VirtualMachine
            filter: 'security_groups.entity_id = ''18230:82:604573173'''
      name: tier-1
    properties:
      group_membership_criteria:
        items:
          $ref: '#/definitions/GroupMembershipCriteria'
        type: array
      name:
        type: string
    type: object
  TimeRange:
    properties:
      end_time:
        format: int64
        type: integer
      start_time:
        format: int64
        type: integer
    type: object
  Token:
    properties:
      expiry:
        description: expiry epoch time in secs.
        format: int64
        type: integer
      token:
        type: string
    type: object
  UCSManagerDataSource:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  UCSManagerDataSourceRequest:
    allOf:
      - $ref: '#/definitions/SwitchDataSource'
  UserCredential:
    properties:
      domain:
        $ref: '#/definitions/Domain'
      password:
        example: password
        type: string
      username:
        example: admin@vrni.com
        type: string
    type: object
  VCDatacenter:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
    type: object
  VCenterDataSource:
    allOf:
      - $ref: '#/definitions/BaseDataSource'
      - properties:
          credentials:
            $ref: '#/definitions/PasswordCredentials'
    example:
      credentials:
        password: thePassword
        username: admin@vsphere.local
      enabled: true
      entity_type: VCenterDataSource
      fqdn: go.vc.org
      id: '1000:33:12890123'
      ip: 192.168.10.1
      nickname: vc1
      notes: VC 1
      proxy_id: '1000:104:12313412'
  VCenterDataSourceRequest:
    allOf:
      - $ref: '#/definitions/BaseDataSourceRequest'
      - properties:
          credentials:
            $ref: '#/definitions/PasswordCredentials'
  VCenterManager:
    allOf:
      - $ref: '#/definitions/BaseManager'
      - properties:
          fqdn:
            type: string
          ip_address:
            $ref: '#/definitions/IpV4Address'
          nsx_manager:
            $ref: '#/definitions/Reference'
          vm:
            $ref: '#/definitions/Reference'
  VPC:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          cidr_block:
            $ref: '#/definitions/IpV4Address'
          default_vpc:
            type: boolean
          last_synched_time:
            format: int64
            type: integer
          region:
            type: string
          state:
            type: string
          vendor_id:
            type: string
  VersionResponse:
    properties:
      api_version:
        type: string
    type: object
  VirtualMachine:
    allOf:
      - $ref: '#/definitions/BaseVirtualMachine'
      - properties:
          applied_to_destination_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          applied_to_source_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          cluster:
            $ref: '#/definitions/Reference'
          datacenter:
            $ref: '#/definitions/Reference'
          datastores:
            items:
              $ref: '#/definitions/Reference'
            type: array
          destination_inversion_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          folders:
            items:
              $ref: '#/definitions/Reference'
            type: array
          host:
            $ref: '#/definitions/Reference'
          layer2_networks:
            items:
              $ref: '#/definitions/Reference'
            type: array
          nsx_manager:
            $ref: '#/definitions/Reference'
          resource_pool:
            $ref: '#/definitions/Reference'
          security_tags:
            items:
              $ref: '#/definitions/Reference'
            type: array
          source_inversion_rules:
            items:
              $ref: '#/definitions/RuleSet'
            type: array
          vcenter_manager:
            $ref: '#/definitions/Reference'
          vendor_id:
            type: string
          vlans:
            items:
              $ref: '#/definitions/Vlan'
            type: array
  Vlan:
    properties:
      begin:
        type: integer
        x-searchable: true
      end:
        type: integer
    type: object
  VlanL2Network:
    allOf:
      - $ref: '#/definitions/BaseL2Network'
      - properties:
          distributed_virtual_portgroups:
            items:
              $ref: '#/definitions/Reference'
            type: array
          distributed_virtual_switches:
            items:
              $ref: '#/definitions/Reference'
            type: array
          vlan_id:
            type: string
  Vmknic:
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties:
          host:
            $ref: '#/definitions/Reference'
          ip_addresses:
            items:
              $ref: '#/definitions/IpV4Address'
            type: array
          layer2_network:
            $ref: '#/definitions/Reference'
          vlan:
            $ref: '#/definitions/Vlan'
  Vnic:
    allOf:
      - $ref: '#/definitions/BaseVnic'
  VxlanLayer2Network:
    allOf:
      - $ref: '#/definitions/BaseL2Network'
      - properties:
          nsx_managers:
            items:
              $ref: '#/definitions/Reference'
            type: array
          scope:
            $ref: '#/definitions/ScopeEnum'
          segment_id:
            format: int32
            type: integer
          vteps:
            items:
              $ref: '#/definitions/Reference'
            type: array
host: vmware.local
info:
  description: vRealize Network Insight API Reference
  title: vRealize Network Insight API Reference
  version: 1.0.0
  x-apisguru-categories:
    - developer_tools
  x-origin:
    - format: swagger
      url: >-
        https://vdc-download.vmware.com/vmwb-repository/dcr-public/c1b5a60c-3635-4b8c-84b2-3ea54172cf31/f8595072-cedd-4f97-9b05-1720e0f41f92/vrni_api_spec.json
      version: '2.0'
  x-providerName: vmware.local
  x-serviceName: vrni
paths:
  /auth/token:
    delete:
      description: >-
        Deletes the auth token provided in Authorization header.

        Deleting an expired or invalid token will result in 401 Unauthorized
        error.
      operationId: delete
      parameters: []
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete an auth token.
      tags:
        - Authentication
    post:
      consumes:
        - application/json
      description: >-
        <html><body> vRealize Network Insight supports token based
        authentication.Tokens are non-modifiable identifiers returned by the
        system when the user has successfully authenticated using valid
        credentials. Token expires after expiry time returned in the response.
        All API requests must provide the auth token in Authorization header in
        following format.<br> Authorization &#58; NetworkInsight {token} <br> If
        a token is invalid or expired, 401-Unauthorized error gets returned in
        the response of the API request. </body></html>
      operationId: create
      parameters:
        - description: User Credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserCredential'
      produces:
        - application/json
        - expiry
        - token
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      summary: Create an auth token
      tags:
        - Authentication
  /data-sources/arista-switches:
    get:
      description: List arista switch data sources
      operationId: listAristaSwitches
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List arista switch data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add arista switch data source
      operationId: addAristaSwitch
      parameters:
        - description: Add a cisco switch as datasource
          in: body
          name: body
          schema:
            $ref: '#/definitions/AristaSwitchDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/AristaSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create an arista switch data source
      tags:
        - Data Sources
  '/data-sources/arista-switches/{id}':
    delete:
      description: Delete an arista switch data source
      operationId: deleteAristaSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete an arista switch data source
      tags:
        - Data Sources
    get:
      description: Show arista switch data source details
      operationId: getAristaSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AristaSwitchDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show arista switch data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update an switch data source
      operationId: updateAristaSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AristaSwitchDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AristaSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update an arista switch data source
      tags:
        - Data Sources
  '/data-sources/arista-switches/{id}/disable':
    post:
      description: Disable an arista switch data source
      operationId: disableAristaSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable an arista switch data source
      tags:
        - Data Sources
  '/data-sources/arista-switches/{id}/enable':
    post:
      description: Enable an arista switch data source
      operationId: enableAristaSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable an arista switch data source
      tags:
        - Data Sources
  '/data-sources/arista-switches/{id}/snmp-config':
    get:
      description: Show snmp config for arista switch data source
      operationId: getAristaSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for arista switch data source
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for arista switch data source
      operationId: updateAristaSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for arista switch data source
      tags:
        - Data Sources
  /data-sources/brocade-switches:
    get:
      description: List brocade switch data sources
      operationId: listBrocadeSwitches
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List brocade switch data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add brocade switch as a data source
      operationId: addBrocadeSwitch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BrocadeSwitchDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/BrocadeSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a brocade switch data source
      tags:
        - Data Sources
  '/data-sources/brocade-switches/{id}':
    delete:
      description: Delete a brocade switch data source
      operationId: deleteBrocadeSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a brocade switch data source
      tags:
        - Data Sources
    get:
      description: Show brocade switch data source details
      operationId: getBrocadeSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BrocadeSwitchDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show brocade switch data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: >-
        Update a brocade switch data source. Only credentials, nickname and
        notes can be updated.
      operationId: updateBrocadeSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BrocadeSwitchDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BrocadeSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a brocade switch data source
      tags:
        - Data Sources
  '/data-sources/brocade-switches/{id}/disable':
    post:
      operationId: disableBrocadeSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a brocade switch data source
      tags:
        - Data Sources
  '/data-sources/brocade-switches/{id}/enable':
    post:
      operationId: enableBrocadeSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a brocade switch data source
      tags:
        - Data Sources
  '/data-sources/brocade-switches/{id}/snmp-config':
    get:
      description: Show snmp config for brocade switch data source
      operationId: getBrocadeSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for brocade switch data source
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for brocade switch data source
      operationId: updateBrocadeSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for brocade switch data source
      tags:
        - Data Sources
  /data-sources/checkpoint-firewalls:
    get:
      description: List checkpoint firewall data sources
      operationId: listCheckpointFirewalls
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List checkpoint firewall data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add checkpoint firewall as data source
      operationId: addCheckpointFirewall
      parameters:
        - description: Add a vSec Checkpoint firewall as data source
          in: body
          name: body
          schema:
            $ref: '#/definitions/CheckpointFirewallDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/CheckpointFirewallDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a checkpoint firewall
      tags:
        - Data Sources
  '/data-sources/checkpoint-firewalls/{id}':
    delete:
      description: Delete a checkpoint firewall data source
      operationId: deleteCheckpointFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a checkpoint firewall data source
      tags:
        - Data Sources
    get:
      description: Show checkpoint firewall data source details
      operationId: getCheckpointFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckpointFirewallDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show checkpoint firewall data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a checkpoint firewall data source
      operationId: updateCheckpointFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CheckpointFirewallDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckpointFirewallDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a checkpoint firewall data source
      tags:
        - Data Sources
  '/data-sources/checkpoint-firewalls/{id}/disable':
    post:
      description: Disable a checkpoint firewall data source
      operationId: disableCheckpointFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a checkpoint firewall data source
      tags:
        - Data Sources
  '/data-sources/checkpoint-firewalls/{id}/enable':
    post:
      description: Enable a checkpoint firewall data source
      operationId: enableCheckpointFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a checkpoint firewall data source
      tags:
        - Data Sources
  /data-sources/cisco-switches:
    get:
      description: List cisco switch data sources
      operationId: listCiscoSwitches
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List cisco switch data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: >-
        Add cisco switch as data source. User must provide one of ip or fqdn
        field in the request body.

        Appropriate proxy id is retrieved from infra/nodes URL to select the
        proxy node.
      operationId: addCiscoSwitch
      parameters:
        - description: Add a cisco switch as datasource.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CiscoSwitchDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/CiscoSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a cisco switch data source
      tags:
        - Data Sources
  '/data-sources/cisco-switches/{id}':
    delete:
      description: Delete a cisco switch data source
      operationId: deleteCiscoSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a cisco switch data source
      tags:
        - Data Sources
    get:
      description: Show cisco switch data source details
      operationId: getCiscoSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CiscoSwitchDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show cisco switch data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: >-
        Update a cisco switch data source. Only credentials, nickname and notes
        can be updated.
      operationId: updateCiscoSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CiscoSwitchDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CiscoSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a cisco switch data source
      tags:
        - Data Sources
  '/data-sources/cisco-switches/{id}/disable':
    post:
      description: Disable a cisco switch data source
      operationId: disableCiscoSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a cisco switch data source
      tags:
        - Data Sources
  '/data-sources/cisco-switches/{id}/enable':
    post:
      description: Enable a cisco switch data source
      operationId: enableCiscoSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a cisco switch data source
      tags:
        - Data Sources
  '/data-sources/cisco-switches/{id}/snmp-config':
    get:
      description: Show snmp config for cisco switch data source
      operationId: getCiscoSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for cisco switch data source
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for cisco switch data source
      operationId: updateCiscoSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for cisco switch data source
      tags:
        - Data Sources
  /data-sources/dell-switches:
    get:
      description: List dell switch data sources
      operationId: listDellSwitches
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List dell switch data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add a dell switch as data source
      operationId: addDellSwitch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DellSwitchDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/DellSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a dell switch data source
      tags:
        - Data Sources
  '/data-sources/dell-switches/{id}':
    delete:
      description: Delete a data source
      operationId: deleteDellSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a dell switch data source
      tags:
        - Data Sources
    get:
      description: Get a dell switch data source details
      operationId: getDellSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DellSwitchDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show dell switch data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: >-
        Update a dell switch data source. Only credentials, nickname and notes
        can be updated
      operationId: updateDellSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DellSwitchDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DellSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a dell switch data source
      tags:
        - Data Sources
  '/data-sources/dell-switches/{id}/disable':
    post:
      description: Disable a dell switch data source
      operationId: disableDellSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a dell switch data source
      tags:
        - Data Sources
  '/data-sources/dell-switches/{id}/enable':
    post:
      description: Enable a dell switch data source
      operationId: enableDellSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a dell switch data source
      tags:
        - Data Sources
  '/data-sources/dell-switches/{id}/snmp-config':
    get:
      description: Show snmp config for dell switch data source
      operationId: getDellSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for dell switch data source
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for dell switch data source
      operationId: updateDellSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for dell switch data source
      tags:
        - Data Sources
  /data-sources/hpov-managers:
    get:
      description: List hp oneview manager data sources
      operationId: listHpovManagers
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List hp oneview manager data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add a hp oneview manager data source
      operationId: addHpovManager
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HPOneViewManagerDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/HPOneViewManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a hp oneview manager data source
      tags:
        - Data Sources
  '/data-sources/hpov-managers/{id}':
    delete:
      description: Delete a hp oneview data source
      operationId: deleteHpovManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a hp oneview data source
      tags:
        - Data Sources
    get:
      description: Show hp oneview data source details
      operationId: getHpovManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HPOneViewManagerDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show hp oneview data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a hp oneview data source
      operationId: updateHpovManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HPOneViewManagerDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HPOneViewManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a hp oneview data source
      tags:
        - Data Sources
  '/data-sources/hpov-managers/{id}/disable':
    post:
      description: Disable a hp oneview data source
      operationId: disableHpovManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a hp oneview data source
      tags:
        - Data Sources
  '/data-sources/hpov-managers/{id}/enable':
    post:
      description: Enable a hp oneview data source
      operationId: enableHpovManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a hp oneview data source
      tags:
        - Data Sources
  /data-sources/hpvc-managers:
    get:
      description: List hpvc manager data sources
      operationId: listHpvcManagers
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List hpvc manager data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add hpvc manager data source
      operationId: addHpvcManager
      parameters:
        - description: Add a switch as datasource
          in: body
          name: body
          schema:
            $ref: '#/definitions/HPVCManagerDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/HPVCManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a hpvc manager data source
      tags:
        - Data Sources
  '/data-sources/hpvc-managers/{id}':
    delete:
      description: Delete a hpvc manager data source
      operationId: deleteHpvcManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a hpvc manager data source
      tags:
        - Data Sources
    get:
      description: Show hpvc data source details
      operationId: getHpvcManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HPVCManagerDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show hpvc data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a hpvc manager data source
      operationId: updateHpvcManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HPVCManagerDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HPVCManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a hpvc manager data source
      tags:
        - Data Sources
  '/data-sources/hpvc-managers/{id}/disable':
    post:
      description: Disable a hpvc manager data source
      operationId: disableHpvcManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a hpvc manager data source
      tags:
        - Data Sources
  '/data-sources/hpvc-managers/{id}/enable':
    post:
      description: Enable a hpvc manager data source
      operationId: enableHpvcManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a hpvc manager data source
      tags:
        - Data Sources
  /data-sources/juniper-switches:
    get:
      description: List juniper switch data sources
      operationId: listJuniperSwitches
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List juniper switch data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add switch Datasource
      operationId: addJuniperSwitch
      parameters:
        - description: Add a cisco switch as datasource
          in: body
          name: body
          schema:
            $ref: '#/definitions/JuniperSwitchDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/JuniperSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Add a juniper switch as data source
      tags:
        - Data Sources
  '/data-sources/juniper-switches/{id}':
    delete:
      description: Delete a juniper switch data source
      operationId: deleteJuniperSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a juniper switch data source
      tags:
        - Data Sources
    get:
      description: Show juniper switch data source details
      operationId: getJuniperSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JuniperSwitchDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show juniper switch data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a juniper switch data source
      operationId: updateJuniperSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/JuniperSwitchDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JuniperSwitchDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a juniper switch data source
      tags:
        - Data Sources
  '/data-sources/juniper-switches/{id}/disable':
    post:
      description: Disable a juniper switch data source
      operationId: disableJuniperSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a juniper switch data source
      tags:
        - Data Sources
  '/data-sources/juniper-switches/{id}/enable':
    post:
      description: Enable a juniper switch data source
      operationId: enableJuniperSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a juniper switch data source
      tags:
        - Data Sources
  '/data-sources/juniper-switches/{id}/snmp-config':
    get:
      description: Show snmp config for juniper switch data source
      operationId: getJuniperSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for juniper switch data source
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for a juniper switch data source
      operationId: updateJuniperSwitchSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for a juniper switch data source
      tags:
        - Data Sources
  /data-sources/nsxv-managers:
    get:
      description: List nsx-v manager data sources
      operationId: listNsxvManagers
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List nsx-v manager data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add a nsx-v manager data source
      operationId: addNsxvManagerDatasource
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NSXVManagerDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/NSXVManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a nsx-v manager data source
      tags:
        - Data Sources
  '/data-sources/nsxv-managers/{id}':
    delete:
      description: Delete a nsx-v manager data source
      operationId: deleteNsxvManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a nsx-v manager data source
      tags:
        - Data Sources
    get:
      description: Show nsx-v manager data source details
      operationId: getNsxvManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NSXVManagerDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show nsx-v manager data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a nsx-v manager data source
      operationId: updateNsxvManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NSXVManagerDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NSXVManagerDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a nsx-v manager data source
      tags:
        - Data Sources
  '/data-sources/nsxv-managers/{id}/controller-cluster':
    get:
      description: Show nsx controller-cluster details
      operationId: getNsxvControllerCluster
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NSXControllerDataCollection'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show nsx controller-cluster details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update nsx controller-cluster details
      operationId: updateNsxvControllerCluster
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NSXControllerDataCollection'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NSXControllerDataCollection'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update nsx controller-cluster details
      tags:
        - Data Sources
  '/data-sources/nsxv-managers/{id}/disable':
    post:
      description: Disable a nsx-v manager data source
      operationId: disableNsxvManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a nsx-v manager data source
      tags:
        - Data Sources
  '/data-sources/nsxv-managers/{id}/enable':
    post:
      description: Enable a nsx-v manager data source
      operationId: enableNsxvManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a nsx-v manager data source
      tags:
        - Data Sources
  /data-sources/panorama-firewalls:
    get:
      description: List panorama firewall data sources
      operationId: listPanoramaFirewalls
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List panorama firewall data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add panorama firewall as data source
      operationId: addPanoramaFirewall
      parameters:
        - description: Add a panorama firewall as datasource
          in: body
          name: body
          schema:
            $ref: '#/definitions/PanFirewallDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/PanFirewallDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create panorama firewall data source
      tags:
        - Data Sources
  '/data-sources/panorama-firewalls/{id}':
    delete:
      description: Delete a panorama firewall data source
      operationId: deletePanoramaFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a panorama firewall data source
      tags:
        - Data Sources
    get:
      description: Show panorama firewall data source details
      operationId: getPanoramaFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PanFirewallDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show panorama firewall data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update a panorama firewall data source
      operationId: updatePanoramaFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PanFirewallDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PanFirewallDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a panorama firewall data source
      tags:
        - Data Sources
  '/data-sources/panorama-firewalls/{id}/disable':
    post:
      description: Disable a panorama firewall data source
      operationId: disablePanoramaFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a panorama firewall data source
      tags:
        - Data Sources
  '/data-sources/panorama-firewalls/{id}/enable':
    post:
      description: Enable a panorama firewall data source
      operationId: enablePanoramaFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a panorama firewall data source
      tags:
        - Data Sources
  /data-sources/ucs-managers:
    get:
      description: List ucs manager data sources
      operationId: listUcsManagers
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List ucs manager data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: Add an ucs manager as data source
      operationId: addUcsManager
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UCSManagerDataSourceRequest'
      produces:
        - application/json
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/UCSManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create an ucs manager data source
      tags:
        - Data Sources
  '/data-sources/ucs-managers/{id}':
    delete:
      description: Delete an ucs manager data source
      operationId: deleteUcsManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete an ucs manager data source
      tags:
        - Data Sources
    get:
      description: Show ucs manager data source details
      operationId: getUcsManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UCSManagerDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show ucs manager data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update an ucs manager data source
      operationId: updateUcsManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UCSManagerDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UCSManagerDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update an ucs manager data source
      tags:
        - Data Sources
  '/data-sources/ucs-managers/{id}/disable':
    post:
      description: Disable an ucs manager data source
      operationId: disableUcsManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable an ucs manager data source
      tags:
        - Data Sources
  '/data-sources/ucs-managers/{id}/enable':
    post:
      description: Enable an ucs manager data source
      operationId: enableUcsManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable an ucs manager data source
      tags:
        - Data Sources
  '/data-sources/ucs-managers/{id}/snmp-config':
    get:
      description: Show snmp config for ucs fabric interconnects
      operationId: getUcsSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show snmp config for ucs fabric interconnects
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: Update snmp config for ucs fabric interconnects
      operationId: updateUcsSnmpConfig
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SNMPConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SNMPConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update snmp config for ucs fabric interconnects
      tags:
        - Data Sources
  /data-sources/vcenters:
    get:
      description: List vCenter data sources
      operationId: listVcenters
      parameters: []
      produces:
        - application/json
        - results
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSourceListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vCenter data sources
      tags:
        - Data Sources
    post:
      consumes:
        - application/json
      description: >-
        Add a vcenter data source. User must provide one of ip or fqdn field in
        the request body.

        Appropriate proxy id is retrieved from infra/nodes URL to select the
        proxy node.
      operationId: addVcenterDatasource
      parameters:
        - description: VCenter Credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VCenterDataSourceRequest'
      produces:
        - application/json
        - credentials
        - enabled
        - entity_id
        - entity_type
        - fqdn
        - ip
        - nickname
        - notes
        - proxy_id
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/VCenterDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create a vCenter data source
      tags:
        - Data Sources
  '/data-sources/vcenters/{id}':
    delete:
      description: Delete a data source
      operationId: deleteVcenter
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete a vCenter data source
      tags:
        - Data Sources
    get:
      description: Show vCenter data source details
      operationId: getVcenter
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - credentials
        - enabled
        - entity_id
        - entity_type
        - fqdn
        - ip
        - nickname
        - notes
        - proxy_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VCenterDataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vCenter data source details
      tags:
        - Data Sources
    put:
      consumes:
        - application/json
      description: >-
        Update a vcenter data source. Only nickname, notes and credentials can
        be updated.
      operationId: updateVcenter
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VCenterDataSource'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VCenterDataSource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Update a vCenter data source.
      tags:
        - Data Sources
  '/data-sources/vcenters/{id}/disable':
    post:
      description: Disable a vCenter data source
      operationId: disableVcenter
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Disable a vCenter data source
      tags:
        - Data Sources
  '/data-sources/vcenters/{id}/enable':
    post:
      description: Enable a vCenter data source
      operationId: enableVcenter
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Enable a vCenter data source
      tags:
        - Data Sources
  /entities/clusters:
    get:
      description: List clusters
      operationId: listClusters
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List clusters
      tags:
        - Entities
  '/entities/clusters/{id}':
    get:
      description: Show cluster details
      operationId: getCluster
      parameters:
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - entity_id
        - entity_type
        - name
        - nsx_manager
        - num_cpu_cores
        - num_datastores
        - num_hosts
        - total_cpus
        - total_memory
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cluster'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show cluster details
      tags:
        - Entities
  /entities/datastores:
    get:
      description: List datastores
      operationId: listDatastores
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List datastores
      tags:
        - Entities
  '/entities/datastores/{id}':
    get:
      description: Show datastore details
      operationId: getDatastore
      parameters:
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - entity_id
        - entity_type
        - name
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Datastore'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show datastore details
      tags:
        - Entities
  /entities/distributed-virtual-portgroups:
    get:
      description: List distributed virtual portgroups
      operationId: listDistributedVirtualPortgroups
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List distributed virtual portgroups
      tags:
        - Entities
  '/entities/distributed-virtual-portgroups/{id}':
    get:
      description: Show distributed virtual portgroup details
      operationId: getDistributedVirtualPortgroup
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - distributed_virtual_switch
        - entity_id
        - entity_type
        - name
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DistributedVirtualPortgroup'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show distributed virtual portgroup details
      tags:
        - Entities
  /entities/distributed-virtual-switches:
    get:
      description: List distributed virtual switches
      operationId: listDistributedVirtualSwitches
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List distributed virtual switches
      tags:
        - Entities
  '/entities/distributed-virtual-switches/{id}':
    get:
      description: Show distributed virtual switch details
      operationId: getDistributedVirtualSwitch
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - hosts
        - name
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DistributedVirtualSwitch'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show distributed virtual switch details
      tags:
        - Entities
  /entities/firewall-rules:
    get:
      description: List firewall rules
      operationId: listFirewallRules
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List firewall rules
      tags:
        - Entities
  '/entities/firewall-rules/{id}':
    get:
      description: Show firewall rule details
      operationId: getFirewallRule
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - action
        - application/json
        - destination_any
        - destination_inversion
        - destinations
        - direction
        - disabled
        - entity_id
        - entity_type
        - logging_enabled
        - name
        - nsx_managers
        - port_ranges
        - rule_id
        - scope
        - section_id
        - section_name
        - sequence_number
        - service_any
        - services
        - source_any
        - source_inversion
        - sources
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseFirewallRule'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show firewall rule details
      tags:
        - Entities
  /entities/firewalls:
    get:
      description: List firewalls
      operationId: listFirewalls
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List firewalls
      tags:
        - Entities
  '/entities/firewalls/{id}':
    get:
      description: Show firewall details
      operationId: getFirewall
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - exclusions
        - firewall_rules
        - name
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseFirewallRule'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show firewall details
      tags:
        - Entities
  /entities/flows:
    get:
      description: List flows
      operationId: getFlows
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List flows
      tags:
        - Entities
  '/entities/flows/{id}':
    get:
      description: Show flow details
      operationId: getFlow
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - destination_folders
        - destination_ip
        - destination_ip_sets
        - destination_security_groups
        - destination_security_tags
        - destination_vm_tags
        - entity_id
        - entity_type
        - firewall_action
        - flow_tag
        - name
        - port
        - protocol
        - source_folders
        - source_ip
        - source_ip_sets
        - source_security_groups
        - source_security_tags
        - source_vm_tags
        - traffic_type
        - within_host
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Flow'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show flow details
      tags:
        - Entities
  /entities/folders:
    get:
      description: List folders
      operationId: listFolders
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List folders
      tags:
        - Entities
  '/entities/folders/{id}':
    get:
      description: Show folder details
      operationId: getFolder
      parameters:
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - entity_id
        - entity_type
        - name
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Folder'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show folder details
      tags:
        - Entities
  /entities/hosts:
    get:
      description: List hosts
      operationId: listHosts
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List hosts
      tags:
        - Entities
  '/entities/hosts/{id}':
    get:
      description: Show host details
      operationId: getHost
      parameters:
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - cluster
        - connection_state
        - datastores
        - entity_id
        - entity_type
        - maintenance_mode
        - name
        - nsx_manager
        - service_tag
        - vcenter_manager
        - vendor_id
        - vm_count
        - vmknics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Host'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show host details
      tags:
        - Entities
  /entities/ip-sets:
    get:
      description: List ip sets
      operationId: listIPSets
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List ip sets
      tags:
        - Entities
  '/entities/ip-sets/{id}':
    get:
      description: Show ip set details
      operationId: getIPSet
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - direct_destination_rules
        - direct_source_rules
        - entity_id
        - entity_type
        - indirect_destination_rules
        - indirect_source_rules
        - ip_addresses
        - ip_numeric_ranges
        - ip_ranges
        - name
        - nsx_managers
        - parent_security_groups
        - scope
        - translated_vm_count
        - vendor
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseIPSet'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show ip set details
      tags:
        - Entities
  /entities/layer2-networks:
    get:
      description: List layer2 networks
      operationId: listLayer2Networks
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List layer2 networks
      tags:
        - Entities
  '/entities/layer2-networks/{id}':
    get:
      description: Show layer2 network details
      operationId: getLayer2Network
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - gateways
        - name
        - network_addresses
        - nsx_managers
        - scope
        - segment_id
        - vteps
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseL2Network'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show layer2 network details
      tags:
        - Entities
  /entities/names:
    post:
      consumes:
        - application/json
      description: Get names for entities.Limit of 1000 entities in a single request.
      operationId: getNames
      parameters:
        - description: Names Request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NamesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NamesResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Get names for entities
      tags:
        - Entities
  '/entities/names/{id}':
    get:
      description: Get name of an entity
      operationId: getName
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EntityName'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Get name of an entity
      tags:
        - Entities
  /entities/nsx-managers:
    get:
      description: List nsx managers
      operationId: listNSXManagers
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List nsx managers
      tags:
        - Entities
  '/entities/nsx-managers/{id}':
    get:
      description: Show nsx manager details
      operationId: getNSXManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - ip_address
        - name
        - role
        - version
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseNSXManager'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show nsx manager details
      tags:
        - Entities
  /entities/problems:
    get:
      description: List problem events.
      operationId: listProblemEvents
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List problems
      tags:
        - Entities
  '/entities/problems/{id}':
    get:
      description: Show problem event details.
      operationId: getProblemEvent
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - admin_state
        - anchor_entities
        - application/json
        - archived
        - entity_id
        - entity_type
        - event_tags
        - event_time_epoch_ms
        - message
        - name
        - related_entities
        - severity
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProblemEvent'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show problem details
      tags:
        - Entities
  /entities/security-groups:
    get:
      description: List security groups
      operationId: listSecurityGroups
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List security groups
      tags:
        - Entities
  '/entities/security-groups/{id}':
    get:
      description: Show security group details
      operationId: getSecurityGroup
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - direct_destination_rules
        - direct_members
        - direct_source_rules
        - entity_id
        - entity_type
        - excluded_members
        - indirect_destination_rules
        - indirect_source_rules
        - ip_sets
        - members
        - name
        - nsx_managers
        - parents
        - scope
        - security_tags
        - translated_vm_count
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseSecurityGroup'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show security group details
      tags:
        - Entities
  /entities/security-tags:
    get:
      description: List security tags
      operationId: listSecurityTags
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List security tags
      tags:
        - Entities
  '/entities/security-tags/{id}':
    get:
      description: Show security tag details
      operationId: getSecurityTag
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - description
        - direct_security_groups
        - entity_id
        - entity_type
        - name
        - nsx_manager
        - security_groups
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityTag'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show security tag details
      tags:
        - Entities
  /entities/service-groups:
    get:
      description: List service groups
      operationId: listServiceGroups
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List service groups
      tags:
        - Entities
  '/entities/service-groups/{id}':
    get:
      description: Show service group details
      operationId: getServiceGroup
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - members
        - name
        - nsx_managers
        - scope
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseServiceGroup'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show service group details
      tags:
        - Entities
  /entities/services:
    get:
      description: List services
      operationId: listServices
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List services
      tags:
        - Entities
  '/entities/services/{id}':
    get:
      description: Show service details
      operationId: getService
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - name
        - nsx_managers
        - port_ranges
        - protocol
        - scope
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseService'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show service details
      tags:
        - Entities
  /entities/vc-datacenters:
    get:
      description: List vCenter datacenters
      operationId: listDatacenters
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vCenter datacenters
      tags:
        - Entities
  '/entities/vc-datacenters/{id}':
    get:
      description: Show vCenter datacenter details
      operationId: getDatacenter
      parameters:
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - entity_id
        - entity_type
        - name
        - vcenter_manager
        - vendor_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VCDatacenter'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vCenter datacenter details
      tags:
        - Entities
  /entities/vcenter-managers:
    get:
      description: List vCenter managers
      operationId: listVcenterManagers
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vCenter managers
      tags:
        - Entities
  '/entities/vcenter-managers/{id}':
    get:
      description: Show vCenter manager details
      operationId: getVcenterManager
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - ip_address
        - name
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VCenterManager'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vCenter manager details
      tags:
        - Entities
  /entities/vmknics:
    get:
      description: List vmknics
      operationId: listVmknics
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vmknics
      tags:
        - Entities
  '/entities/vmknics/{id}':
    get:
      description: Show vmknic details
      operationId: getVmknic
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - host
        - ip_addresses
        - layer2_network
        - name
        - vlan
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vmknic'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vmknic details
      tags:
        - Entities
  /entities/vms:
    get:
      description: List vms
      operationId: listVms
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vms
      tags:
        - Entities
  '/entities/vms/{id}':
    get:
      description: Show vm details
      operationId: getVm
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - applied_to_destination_rules
        - applied_to_source_rules
        - cluster
        - datacenter
        - datastores
        - default_gateway
        - destination_firewall_rules
        - destination_inversion_rules
        - entity_id
        - entity_type
        - folders
        - host
        - ip_addresses
        - ip_sets
        - layer2_networks
        - name
        - nsx_manager
        - resource_pool
        - security_groups
        - security_tags
        - source_firewall_rules
        - source_inversion_rules
        - vcenter_manager
        - vendor_id
        - vlans
        - vnics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseVirtualMachine'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vm details
      tags:
        - Entities
  /entities/vnics:
    get:
      description: List vnics
      operationId: listVnics
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - cursor
        - end_time
        - results
        - start_time
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List vnics
      tags:
        - Entities
  '/entities/vnics/{id}':
    get:
      description: Show vnic details
      operationId: getVnic
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - description: time in epoch seconds
          format: int64
          in: query
          name: time
          required: false
          type: integer
      produces:
        - application/json
        - entity_id
        - entity_type
        - ip_addresses
        - layer2_network
        - name
        - vlan
        - vm
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseVnic'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show vnic details
      tags:
        - Entities
  /groups/applications:
    get:
      description: List applications
      operationId: listApplications
      parameters:
        - default: 10
          description: page size of results
          in: query
          name: size
          required: false
          type: number
        - description: cursor from previous response
          in: query
          name: cursor
          required: false
          type: string
        - description: start time for query in epoch seconds
          in: query
          name: start_time
          required: false
          type: number
        - description: end time for query in epoch seconds
          in: query
          name: end_time
          required: false
          type: number
      produces:
        - application/json
        - results
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedListResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List applications
      tags:
        - Applications
    post:
      consumes:
        - application/json
      description: >-
        Application is a group of tiers. A tier is a group of virtual machines
        based on membership criteria. Tiers are bound to single

        application. An application name is unique and should not conflict with
        another application name.
      operationId: addApplication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationRequest'
      produces:
        - application/json
        - create_time
        - created_by
        - entity_id
        - entity_type
        - last_modified_by
        - last_modified_time
        - name
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create an application
      tags:
        - Applications
  '/groups/applications/{id}':
    delete:
      description: >-
        Deleting an application deletes all the tiers of the application along
        with the application
      operationId: deleteApplication
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete an application
      tags:
        - Applications
    get:
      description: Show application details
      operationId: getApplication
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - create_time
        - created_by
        - entity_id
        - entity_type
        - last_modified_by
        - last_modified_time
        - name
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show application details
      tags:
        - Applications
  '/groups/applications/{id}/tiers':
    get:
      description: List tiers of an application
      operationId: listApplicationTiers
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - results
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TierListResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List tiers of an application
      tags:
        - Applications
    post:
      consumes:
        - application/json
      description: >-
        Create a tier of an application by with specified membership criteria.
        The membership criteria id defined in terms of

        virtual machines or ip addresses/subnet. Please refer to API Guide on
        how to construct membership criteria.
      operationId: addTier
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TierRequest'
      produces:
        - application
        - application/json
        - entity_id
        - entity_type
        - group_membership_criteria
        - name
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Tier'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Create tier in application
      tags:
        - Applications
  '/groups/applications/{id}/tiers/{tier-id}':
    delete:
      description: Delete tier of an application
      operationId: deleteTier
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: path
          name: tier-id
          required: true
          type: string
      responses:
        '204':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Delete tier
      tags:
        - Applications
    get:
      description: Show tier details
      operationId: getApplicationTier
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
        - in: path
          name: tier-id
          required: true
          type: string
      produces:
        - application
        - application/json
        - entity_id
        - entity_type
        - group_membership_criteria
        - name
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tier'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show tier details
      tags:
        - Applications
  '/groups/tiers/{tier-id}':
    get:
      description: Show tier details
      operationId: getTier
      parameters:
        - in: path
          name: tier-id
          required: true
          type: string
        - description: Authorization Header
          format: NetworkInsight <token>
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application
        - application/json
        - entity_id
        - entity_type
        - group_membership_criteria
        - name
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tier'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show tier details
      tags:
        - Applications
  /info/version:
    get:
      description: Show version info
      operationId: getVersion
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VersionResponse'
        '401':
          description: Unauthorized
      security:
        - ApiKeyAuth: []
      summary: Show version info
      tags:
        - Info
  /infra/nodes:
    get:
      description: >-
        Get list of infrastructure nodes. Only admin users can retrieve this
        information.
      operationId: listNodes
      parameters: []
      produces:
        - application/json
        - results
        - total_count
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeListResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: List nodes
      tags:
        - Infrastructure
  '/infra/nodes/{id}':
    get:
      description: >-
        Get details of infrastructure nodes. Only admin users can get this
        information. The proxy id is

        required for adding a data source for selecting appropriate proxy node
        to add the data source.
      operationId: getNode
      parameters:
        - description: entity id
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
        - entity_type
        - id
        - ip_address
        - node_id
        - node_type
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Show node details
      tags:
        - Infrastructure
  /micro-seg/recommended-rules:
    post:
      consumes:
        - application/json
      description: >-
        Get recommended firewall rules based on the flow data gathered by
        vRealize Network Insight.

        This API provides service to retrieve recommended rules based on flow
        traffic that is observed between

        two groups OR for a single group based on all the inbound and outboud
        traffic for that group.

        In case two groups are provided, both the groups should be of same type.

        Currently supported groups are Application, Tier, NSXSecurityGroup,
        EC2SecurityGroup.
      operationId: listRecommendedRules
      parameters:
        - description: Recommended Rules Request
          in: body
          name: body
          schema:
            $ref: '#/definitions/RecommendedRulesRequest'
      produces:
        - application/json
        - results
        - time_range
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RecommendedRules'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Get logical recommended rules
      tags:
        - Microsegmentation
  /micro-seg/recommended-rules/nsx:
    post:
      consumes:
        - application/json
      description: >-
        Export recommended firewall rules based on the flow data gathered by
        vRealize Network Insight in NSX-V compatible

        format
      operationId: exportNsxRecommendedRules
      parameters:
        - description: NSX Recommended Rules Request
          in: body
          name: body
          schema:
            $ref: '#/definitions/RecommendedRulesRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Success
          schema:
            format: binary
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Export recommended rules for NSX-V
      tags:
        - Microsegmentation
  /search:
    post:
      consumes:
        - application/json
      description: >-
        Using search API you can search vRealize Network Insight entities by
        specifying entity type and filter expression.

        A filter expression is a predicate expression (similar to SQL where
        clause) used to define the search criteria.

        Please refer to API Guide on details of how to construct filter
        expression. A successful search request will return a

        list of entity ids that matches the search criteria.
      operationId: searchEntities
      parameters:
        - description: Search Request
          in: body
          name: body
          schema:
            $ref: '#/definitions/SearchRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PagedListResponseWithTime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiError'
        '401':
          description: Unauthorized
        '500':
          description: Internal Error
      security:
        - ApiKeyAuth: []
      summary: Search entities
      tags:
        - Search
schemes:
  - http
securityDefinitions:
  ApiKeyAuth:
    description: 'API Key - NetworkInsight {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: Authentication APIs
    name: Authentication
  - description: Data source APIs
    name: Data Sources
  - description: Entities APIs
    name: Entities
  - description: Search APIs
    name: Search
  - description: Infra APIs
    name: Infrastructure
  - description: Applications APIs
    name: Applications
  - description: Micro-segmentation APIs
    name: Microsegmentation
  - description: Info APIs
    name: Info
x-components:
  parameters:
    Cursor:
      description: cursor from previous response
      in: query
      name: cursor
      required: false
      type: string
    EndTime:
      description: end time for query in epoch seconds
      in: query
      name: end_time
      required: false
      type: number
    Identifier:
      description: entity id
      in: path
      name: id
      required: true
      type: string
    Size:
      default: 10
      description: page size of results
      in: query
      name: size
      required: false
      type: number
    StartTime:
      description: start time for query in epoch seconds
      in: query
      name: start_time
      required: false
      type: number
    Time:
      description: time in epoch seconds
      format: int64
      in: query
      name: time
      required: false
      type: integer
  requestBodies:
    SNMPConfig:
      content:
        application/json:
          schema:
            $ref: '#/definitions/SNMPConfig'

