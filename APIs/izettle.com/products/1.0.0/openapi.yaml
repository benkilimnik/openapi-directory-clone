basePath: /
definitions:
  BulkImportRequest:
    properties:
      products:
        items:
          $ref: '#/definitions/FullProductUpdateRequest'
        type: array
    required:
      - products
    type: object
  CategoryDTO:
    properties:
      name:
        type: string
      uuid:
        format: uuid
        type: string
    required:
      - name
      - uuid
    type: object
  CategoryRequest:
    properties:
      categories:
        items:
          $ref: '#/definitions/CategoryDTO'
        type: array
    required:
      - categories
    type: object
  CategoryResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/CategoryDTO'
        type: array
    required:
      - categories
    type: object
  ConstraintViolation:
    properties:
      constraintType:
        enum:
          - MUST_BE_FALSE
          - MUST_BE_TRUE
          - MUST_BE_LESS_THAN
          - MUST_BE_GREATER_THAN
          - DIGIT_OUT_OF_BOUNDS
          - DATE_MUST_BE_IN_THE_FUTURE
          - MUST_BE_LESS_OR_EQUAL_THAN
          - MUST_BE_GREATER_OR_EQUAL_TO
          - MUST_NOT_BE_NULL
          - MUST_BE_NULL
          - DATE_MUST_BE_IN_THE_PAST
          - MUST_MATCH_PATTERN
          - INVALID_SIZE
          - INVALID_EMAIL
          - MUST_NOT_BE_EMPTY
          - INVALID_RANGE
          - UNKNOWN
        type: string
      developerMessage:
        type: string
      expected:
        type: string
      propertyName:
        type: string
      value:
        type: string
    type: object
  CreateSlugRequest:
    properties:
      productName:
        maxLength: 256
        minLength: 1
        type: string
    required:
      - productName
    type: object
  DiscountRequest:
    properties:
      amount:
        $ref: '#/definitions/Price'
      description:
        maxLength: 128
        minLength: 0
        type: string
      externalReference:
        maxLength: 128
        minLength: 0
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      name:
        maxLength: 64
        minLength: 0
        type: string
      percentage:
        maximum: 100
        minimum: 0
        type: number
      uuid:
        format: uuid
        type: string
    required:
      - uuid
    type: object
  DiscountResponse:
    properties:
      amount:
        $ref: '#/definitions/Price'
      created:
        format: date-time
        type: string
      description:
        type: string
      etag:
        type: string
      externalReference:
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      name:
        type: string
      percentage:
        type: number
      updated:
        format: date-time
        type: string
      updatedBy:
        format: uuid
        type: string
      uuid:
        format: uuid
        type: string
    required:
      - created
      - etag
      - name
      - updated
      - uuid
    type: object
  ErrorResponse:
    properties:
      developerMessage:
        type: string
      errorType:
        type: string
      violations:
        items:
          $ref: '#/definitions/ConstraintViolation'
        type: array
        uniqueItems: true
    type: object
  FullProductUpdateRequest:
    properties:
      categories:
        items:
          type: string
        maxItems: 1
        minItems: 0
        type: array
        uniqueItems: true
      category:
        $ref: '#/definitions/CategoryDTO'
      description:
        maxLength: 1024
        minLength: 0
        type: string
      externalReference:
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      metadata:
        $ref: '#/definitions/MetadataDTO'
      name:
        maxLength: 256
        minLength: 1
        type: string
      online:
        $ref: '#/definitions/OnlineProperties'
      presentation:
        $ref: '#/definitions/PresentationDTO'
      taxCode:
        type: string
      taxExempt:
        type: boolean
      taxRates:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      unitName:
        type: string
      uuid:
        format: uuid
        type: string
      variantOptionDefinitions:
        $ref: '#/definitions/VariantOptionDefinitions'
      variants:
        items:
          $ref: '#/definitions/VariantDTO'
        type: array
      vatPercentage:
        maximum: 100
        minimum: 0
        type: number
    required:
      - name
      - uuid
    type: object
  ImportResponse:
    properties:
      created:
        format: date-time
        type: string
      errorMessage:
        type: string
      finished:
        format: date-time
        type: string
      items:
        format: int64
        type: integer
      state:
        enum:
          - IMPORTING
          - FINISHED_SUCCESS
          - FINISHED_FAILED
        type: string
      uuid:
        format: uuid
        type: string
    type: object
  LibraryImagesResponse:
    properties:
      imageUrls:
        items:
          type: string
        type: array
    type: object
  LibraryResponse:
    properties:
      deletedDiscounts:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      deletedProducts:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      discounts:
        items:
          $ref: '#/definitions/DiscountResponse'
        type: array
        uniqueItems: true
      fromEventLogUuid:
        format: uuid
        type: string
      products:
        items:
          $ref: '#/definitions/ProductResponse'
        type: array
        uniqueItems: true
      untilEventLogUuid:
        format: uuid
        type: string
    type: object
  MetadataDTO:
    properties:
      inPos:
        type: boolean
      source:
        $ref: '#/definitions/SourceDTO'
    required:
      - inPos
    type: object
  OnlineProperties:
    properties:
      description:
        maxLength: 3500
        minLength: 0
        type: string
      presentation:
        $ref: '#/definitions/Presentation'
      seo:
        $ref: '#/definitions/SearchEngineOptimization'
      shipping:
        $ref: '#/definitions/Shipping'
      status:
        enum:
          - ACTIVE
          - HIDDEN
        type: string
      title:
        maxLength: 256
        minLength: 0
        type: string
    required:
      - status
    type: object
  Option:
    properties:
      name:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  Presentation:
    properties:
      additionalImageUrls:
        items:
          format: url
          type: string
        maxItems: 25
        minItems: 0
        type: array
      displayImageUrl:
        format: url
        type: string
      mediaUrls:
        items:
          format: url
          type: string
        maxItems: 8
        minItems: 0
        type: array
    type: object
  PresentationDTO:
    properties:
      backgroundColor:
        type: string
      imageUrl:
        type: string
      textColor:
        type: string
    type: object
  Price:
    properties:
      amount:
        format: int64
        minimum: 0
        type: integer
      currencyId:
        enum:
          - AED
          - AFA
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZM
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CSD
          - CUC
          - CUP
          - CVE
          - CYP
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EEK
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHC
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MTL
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZM
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDD
          - SDG
          - SEK
          - SGD
          - SHP
          - SIT
          - SKK
          - SLL
          - SOS
          - SPL
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMM
          - TMT
          - TND
          - TOP
          - TRL
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEB
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - YER
          - ZAR
          - ZMK
          - ZMW
          - ZWD
          - ZWL
        type: string
    required:
      - amount
      - currencyId
    type: object
  ProductCountResponse:
    properties:
      productCount:
        format: int32
        type: integer
    required:
      - productCount
    type: object
  ProductCreateRequest:
    properties:
      categories:
        items:
          type: string
        type: array
        uniqueItems: true
      category:
        $ref: '#/definitions/CategoryDTO'
      createWithDefaultTax:
        type: boolean
      description:
        maxLength: 1024
        minLength: 0
        type: string
      externalReference:
        maxLength: 128
        minLength: 0
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      metadata:
        $ref: '#/definitions/MetadataDTO'
      name:
        maxLength: 256
        minLength: 1
        type: string
      online:
        $ref: '#/definitions/OnlineProperties'
      presentation:
        $ref: '#/definitions/PresentationDTO'
      taxCode:
        type: string
      taxExempt:
        type: boolean
      taxRates:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      unitName:
        maxLength: 32
        minLength: 0
        type: string
      uuid:
        format: uuid
        type: string
      variantOptionDefinitions:
        $ref: '#/definitions/VariantOptionDefinitions'
      variants:
        items:
          $ref: '#/definitions/VariantDTO'
        type: array
      vatPercentage:
        maximum: 100
        minimum: 0
        type: number
    required:
      - name
      - uuid
    type: object
  ProductResponse:
    properties:
      categories:
        items:
          type: string
        maxItems: 1
        minItems: 0
        type: array
        uniqueItems: true
      category:
        $ref: '#/definitions/CategoryDTO'
      created:
        format: date-time
        type: string
      description:
        type: string
      etag:
        type: string
      externalReference:
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      metadata:
        $ref: '#/definitions/MetadataDTO'
      name:
        type: string
      online:
        $ref: '#/definitions/OnlineProperties'
      presentation:
        $ref: '#/definitions/PresentationDTO'
      taxCode:
        type: string
      taxExempt:
        type: boolean
      taxRates:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      unitName:
        type: string
      updated:
        format: date-time
        type: string
      updatedBy:
        format: uuid
        type: string
      uuid:
        format: uuid
        type: string
      variantOptionDefinitions:
        $ref: '#/definitions/VariantOptionDefinitions'
      variants:
        items:
          $ref: '#/definitions/VariantDTO'
        maxItems: 99
        minItems: 1
        type: array
      vatPercentage:
        type: number
    required:
      - created
      - etag
      - name
      - updated
      - uuid
      - variants
    type: object
  ProductUpdateRequest:
    properties:
      categories:
        items:
          type: string
        maxItems: 1
        minItems: 0
        type: array
        uniqueItems: true
      category:
        $ref: '#/definitions/CategoryDTO'
      description:
        type: string
      externalReference:
        type: string
      imageLookupKeys:
        items:
          type: string
        type: array
        uniqueItems: true
      metadata:
        $ref: '#/definitions/MetadataDTO'
      name:
        type: string
      presentation:
        $ref: '#/definitions/PresentationDTO'
      taxCode:
        type: string
      taxExempt:
        type: boolean
      taxRates:
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      unitName:
        type: string
      uuid:
        format: uuid
        type: string
      variantUuids:
        items:
          format: uuid
          type: string
        maxItems: 2147483647
        minItems: 1
        type: array
      vatPercentage:
        maximum: 100
        minimum: 0
        type: number
    required:
      - name
      - uuid
      - variantUuids
    type: object
  SearchEngineOptimization:
    properties:
      metaDescription:
        maxLength: 320
        minLength: 0
        type: string
      slug:
        maxLength: 256
        minLength: 1
        type: string
      title:
        maxLength: 256
        minLength: 0
        type: string
    type: object
  Shipping:
    properties:
      shippingPricingModel:
        enum:
          - FREE
          - STANDARD
        type: string
      weight:
        $ref: '#/definitions/Weight'
      weightInGrams:
        format: int64
        maximum: 2147483647
        minimum: 0
        type: integer
    type: object
  SlugResponse:
    properties:
      productName:
        type: string
      slug:
        type: string
    type: object
  SourceDTO:
    properties:
      external:
        type: boolean
      name:
        type: string
    type: object
  TaxRate:
    properties:
      default:
        type: boolean
      label:
        maxLength: 512
        minLength: 0
        type: string
      percentage:
        maximum: 100
        type: number
      uuid:
        format: uuid
        type: string
    required:
      - label
      - uuid
    type: object
  TaxRateProductCount:
    properties:
      count:
        format: int32
        type: integer
      taxRateUuid:
        format: uuid
        type: string
    type: object
  TaxRateProductCountResponse:
    properties:
      counts:
        items:
          $ref: '#/definitions/TaxRateProductCount'
        type: array
    type: object
  TaxRateUpdateRequest:
    properties:
      default:
        type: boolean
      label:
        maxLength: 512
        minLength: 0
        type: string
      percentage:
        maximum: 100
        type: number
    type: object
  TaxRatesCreateRequest:
    properties:
      taxRates:
        items:
          $ref: '#/definitions/TaxRate'
        maxItems: 15
        minItems: 0
        type: array
    required:
      - taxRates
    type: object
  TaxRatesResponse:
    properties:
      taxRates:
        items:
          $ref: '#/definitions/TaxRate'
        type: array
    type: object
  TaxSettingsResponse:
    properties:
      organizationUuid:
        format: uuid
        type: string
      taxationMode:
        enum:
          - EXCLUSIVE
          - INCLUSIVE
        type: string
      taxationType:
        enum:
          - NONE
          - SALES_TAX
          - VAT
        type: string
    type: object
  TaxSettingsUpdateRequest:
    properties:
      taxationMode:
        enum:
          - EXCLUSIVE
          - INCLUSIVE
        type: string
    required:
      - taxationMode
    type: object
  VariantDTO:
    properties:
      barcode:
        maxLength: 128
        minLength: 0
        type: string
      costPrice:
        $ref: '#/definitions/Price'
      description:
        maxLength: 1024
        minLength: 0
        type: string
      name:
        maxLength: 256
        minLength: 0
        type: string
      options:
        items:
          $ref: '#/definitions/VariantOption'
        maxItems: 99
        minItems: 1
        type: array
      presentation:
        $ref: '#/definitions/PresentationDTO'
      price:
        $ref: '#/definitions/Price'
      sku:
        maxLength: 64
        minLength: 0
        type: string
      uuid:
        format: uuid
        type: string
      vatPercentage:
        maximum: 100
        minimum: 0
        type: number
    required:
      - uuid
    type: object
  VariantOption:
    properties:
      name:
        maxLength: 30
        minLength: 1
        type: string
      value:
        maxLength: 256
        minLength: 1
        type: string
    required:
      - name
      - value
    type: object
  VariantOptionDefinition:
    properties:
      name:
        maxLength: 30
        minLength: 1
        type: string
      properties:
        items:
          $ref: '#/definitions/VariantOptionProperties'
        maxItems: 99
        minItems: 1
        type: array
    required:
      - name
      - properties
    type: object
  VariantOptionDefinitions:
    properties:
      definitions:
        items:
          $ref: '#/definitions/VariantOptionDefinition'
        maxItems: 3
        minItems: 1
        type: array
    required:
      - definitions
    type: object
  VariantOptionProperties:
    properties:
      imageUrl:
        maxLength: 256
        minLength: 1
        type: string
      value:
        maxLength: 256
        minLength: 1
        type: string
    required:
      - value
    type: object
  VariantOptionsResponse:
    properties:
      options:
        items:
          $ref: '#/definitions/Option'
        type: array
    type: object
  Weight:
    properties:
      unit:
        enum:
          - kg
          - g
          - oz
          - lb
        type: string
      weight:
        exclusiveMinimum: false
        minimum: 0
        type: number
    required:
      - unit
      - weight
    type: object
externalDocs:
  url: 'https://github.com/iZettle/api-documentation'
host: products.izettle.com
info:
  contact:
    email: product-library-team-iz@izettle.com
    name: Product Library Team
  description: |-
    A product library is a representation of all the items that can be
    displayed, put in a shopping cart and sold to a customer. Items may be
    either producs or discounts.

    A product is a synthetic construct, wrapping one or more variants (which is
    the actual item being sold) Variants expresses different variations of
    properties such as for example price, size or color. A discount will reduce
    the total amount charged in a shopping cart. It can be used per item line,
    or on the whole cart. It may reduce the affected amount by a percentage, or
    by a fixed amount.

    Together, the above types of entities makes up a complete library. The
    library can be fetched as a whole through the library endpoint, where each
    consecutive change applied to the library is available. Once the full
    library is retrieved, only later events needs to be fetched to keep the
    client up to date with the server

    All path patterns "/organizations/{organizationUuid}/" can be replaced
    with "/organizations/self/" for convenience as all endpoints are for
    authorized users.
  title: Zettle Product Library API
  version: 1.0.0
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: 'https://cdn.izettle.com/favicons/favicon-32x32.png'
  x-origin:
    - format: openapi
      url: 'https://products.izettle.com/openapi.json'
      version: '3.0'
  x-providerName: izettle.com
  x-serviceName: products
paths:
  '/organizations/{organizationUuid}/categories/v2':
    get:
      operationId: getProductTypes
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of all categories
          schema:
            $ref: '#/definitions/CategoryResponse'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves all categories
      tags:
        - categories
    post:
      consumes:
        - application/json
      operationId: createCategories
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryRequest'
      responses:
        '201':
          description: Category created
        '404':
          description: Organization not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Creates a new category
      tags:
        - categories
  '/organizations/{organizationUuid}/discounts':
    get:
      operationId: getAllDiscounts
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of all discounts
          schema:
            items:
              $ref: '#/definitions/DiscountResponse'
            type: array
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves all discounts
      tags:
        - discounts
    post:
      consumes:
        - application/json
      description: >-
        Creates a single discount entity. The location of the newly created
        discount will be available in the successful response as a
        HttpHeaders.LOCATION header
      operationId: createDiscount
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DiscountRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Discount created
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
            Location:
              description: Location of newly created Discount
              style: simple
              type: string
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Creates a discount
      tags:
        - discounts
  '/organizations/{organizationUuid}/discounts/{discountUuid}':
    delete:
      operationId: deleteDiscount
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: discountUuid
          required: true
          type: string
      responses:
        '204':
          description: Discount deleted
        '404':
          description: Organization or Discount not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: 'Deletes a single discount '
      tags:
        - discounts
    get:
      description: >-
        Get the full discount with the provided UUID. The method supports
        conditional GET through providing a HttpHeaders.IF_NONE_MATCH header. If
        the conditional prerequisite is fullfilled, the full discount is
        returned: otherwise a 304 not modified will be returned with an empty
        body.
      operationId: getDiscount
      parameters:
        - in: header
          name: If-None-Match
          type: string
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: discountUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Discount
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
          schema:
            $ref: '#/definitions/DiscountResponse'
        '304':
          description: Not modified
        '404':
          description: Organization or Discount not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves a single discount
      tags:
        - discounts
    put:
      consumes:
        - application/json
      description: >-
        Updates a discount entity using JSON merge patch
        (https://tools.ietf.org/html/rfc7386). This means that only included
        fields will be changed: null values removes the field on the target
        entity, and other values updates the field. Conditional updates are
        supported through the HttpHeaders.IF_MATCH header. If the conditional
        prerequisite is fullfilled, the discount is updated: otherwise a 412
        precondition failed will be returned with an empty body.
      operationId: updateDiscount
      parameters:
        - in: header
          name: If-Match
          type: string
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: discountUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DiscountRequest'
      produces:
        - application/json
      responses:
        '204':
          description: Discount updated
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
            Location:
              description: Location of updated Discount
              style: simple
              type: string
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: 'Precondition failed: ETag did not match the expected value'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Updates a single discount
      tags:
        - discounts
  '/organizations/{organizationUuid}/images':
    get:
      description: >-
        Retrieves all library items images used by the organization, sorted by
        updated date
      operationId: getAllImageUrls
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of all image urls
          schema:
            $ref: '#/definitions/LibraryImagesResponse'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves all library item images
      tags:
        - images
  '/organizations/{organizationUuid}/import/status':
    get:
      operationId: getLatestImportStatus
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Import status
          schema:
            $ref: '#/definitions/ImportResponse'
        '404':
          description: Organization or import not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Gets status for latest import
      tags:
        - import
  '/organizations/{organizationUuid}/import/status/{importUuid}':
    get:
      operationId: getStatusByUuid
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: importUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Import status
          schema:
            $ref: '#/definitions/ImportResponse'
        '404':
          description: Organization or import not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Gets status for an import
      tags:
        - import
  '/organizations/{organizationUuid}/import/v2':
    post:
      consumes:
        - application/json
      operationId: importLibraryV2
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BulkImportRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Import status
          schema:
            $ref: '#/definitions/ImportResponse'
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Bulk import library items
      tags:
        - import
  '/organizations/{organizationUuid}/library':
    get:
      description: >
        Will return the entire library for the authenticated user. If size of
        the library exceeds server preferences (normally 500) or the value of
        the optional limit parameter, the result will be paginated. Paginated
        responses return a Link header, indicating the next URI to fetch. The
        resulting header value will look something like:


        <https://products.izettle.com/organizations/self/library?limit=X&offset=Y>;
        rel="next"


        where limit is number of items in response, and offset is the current
        position in pagination. The rel-part in the header is the links relation
        to the data previously recieved. The idea is that as long as this header
        is present there are still items remaining to be fetched. When either
        the header is not present or it's value doesn't contain any "next"
        value, all items have been sent to the client.


        Note: The client should NOT try to extract query parameters from the
        URI, but rather use it as-is for the next request. Also, clients should
        be perpared that one Link header might contain multiple other IRIs that
        are not "next" (there will never be more than one "next" though). See
        more at:

            IETF: https://tools.ietf.org/html/rfc5988
            GitHub: https://developer.github.com/guides/traversing-with-pagination/

        If eventLogUuid is provided, the response will only include events
        affecting the library since that event. Such responses are normally
        quite small and would be a preferred method for most fat clients after
        retrieving the initial full library.
      operationId: getLibrary
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: query
          name: eventLogUuid
          type: string
        - default: 500
          format: int32
          in: query
          maximum: 500
          minimum: 1
          name: limit
          type: integer
        - in: query
          name: offset
          type: string
        - in: query
          name: all
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: List of library items
          headers:
            Link:
              description: >-
                If the response is paginated this header will contain the URI
                for the next page. See more at:
                https://tools.ietf.org/html/rfc5988
              style: simple
              type: string
          schema:
            $ref: '#/definitions/LibraryResponse'
        '412':
          description: >-
            Invalid event log uuid. If the eventLogUuid query parameter was
            provided a 412 response indicates that the number of changes in the
            product exceeds the limit since that particular event (currently 500
            changes). 

            When this happens, the client should remove the eventLogUuid query
            parameters and try again.
      security:
        - ZettleOauth:
            - 'READ:PRODUCT'
        - ZettleApiKey: []
      summary: Retrieves the entire library
      tags:
        - library
  '/organizations/{organizationUuid}/products':
    delete:
      operationId: deleteProducts
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - collectionFormat: multi
          description: List of product UUIDs to be deleted
          in: query
          items:
            format: uuid
            type: string
          name: uuid
          required: true
          type: array
      responses:
        '204':
          description: Products deleted
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Deletes a list of products
      tags:
        - products
    get:
      operationId: getAllProductsInPos
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A list of products
          schema:
            items:
              $ref: '#/definitions/ProductResponse'
            type: array
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves all products visible in POS
      tags:
        - products
    post:
      consumes:
        - application/json
      operationId: createProduct
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - default: false
          in: query
          name: returnEntity
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductCreateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: >-
            Product created. It will include the Product in the response only if
            'returnEntity' is true
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
            Location:
              description: Location of newly created Product
              style: simple
              type: string
          schema:
            $ref: '#/definitions/ProductResponse'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Creates a new product
      tags:
        - products
  '/organizations/{organizationUuid}/products/online/slug':
    post:
      consumes:
        - application/json
      description: >-
        Creates a unique slug (identifier) for a product. The slug is used to
        create a product URL
      operationId: createProductSlug
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSlugRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Product slug
          schema:
            $ref: '#/definitions/SlugResponse'
      security:
        - ZettleOauth:
            - 'READ:PRODUCT'
        - ZettleApiKey: []
      summary: Creates a product identifier
      tags:
        - products/online
  '/organizations/{organizationUuid}/products/options':
    get:
      operationId: getAllOptions
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of Options
          schema:
            items:
              $ref: '#/definitions/VariantOptionsResponse'
            type: array
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves an aggregate of active Options in the library
      tags:
        - products
  '/organizations/{organizationUuid}/products/v2':
    get:
      operationId: getAllProductsV2
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - description: 'If true, sorts response by created date'
          in: query
          name: sort
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: A list of products
          schema:
            items:
              $ref: '#/definitions/ProductResponse'
            type: array
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves all products visible in POS – v2
      tags:
        - products
  '/organizations/{organizationUuid}/products/v2/count':
    get:
      operationId: countAllProducts
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Count of existing products
          schema:
            items:
              $ref: '#/definitions/ProductCountResponse'
            type: array
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves the count of existing products
      tags:
        - products
  '/organizations/{organizationUuid}/products/v2/{productUuid}':
    put:
      consumes:
        - application/json
      description: >-
        Updates a product entity using JSON merge patch
        (https://tools.ietf.org/html/rfc7386). This means that only included
        fields will be changed: null values removes the field on the target
        entity, and other values updates the field. Conditional updates are
        supported through the HttpHeaders.IF_MATCH header. If the conditional
        prerequisite is fullfilled, the product is updated: otherwise a 412
        (precondition failed) will be returned with an empty body.
      operationId: updateProduct
      parameters:
        - in: header
          name: If-Match
          type: string
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: productUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductUpdateRequest'
      produces:
        - application/json
      responses:
        '204':
          description: Product updated
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
            Location:
              description: Location of updated product
              style: simple
              type: string
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: 'Precondition failed: ETag did not match the expected value'
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Updates a single product
      tags:
        - products
  '/organizations/{organizationUuid}/products/{productUuid}':
    delete:
      operationId: deleteProduct
      parameters:
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: productUuid
          required: true
          type: string
      responses:
        '204':
          description: Product deleted
        '404':
          description: Organization or Product not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Deletes a single product
      tags:
        - products
    get:
      description: >-
        Get the full product with the provided UUID. The method supports
        conditional GET through providing a HttpHeaders.IF_NONE_MATCH header. If
        the conditional prerequisite is fullfilled, the full product is
        returned, otherwise a 304 not modified will be returned with an empty
        body.
      operationId: getProduct
      parameters:
        - in: header
          name: If-None-Match
          type: string
        - format: uuid
          in: path
          name: organizationUuid
          required: true
          type: string
        - format: uuid
          in: path
          name: productUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Product
          headers:
            ETag:
              description: ETag value
              style: simple
              type: string
          schema:
            $ref: '#/definitions/ProductResponse'
        '304':
          description: Not modified
        '400':
          description: Malformed ETag
        '404':
          description: Organization or Product not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Retrieves a single product
      tags:
        - products
  /v1/taxes:
    get:
      operationId: getTaxRates
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: List of tax rates
          schema:
            items:
              $ref: '#/definitions/TaxRatesResponse'
            type: array
        '403':
          description: Not a sales tax user
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Gets all tax rates available
      tags:
        - taxes
    post:
      consumes:
        - application/json
      operationId: createTaxRates
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxRatesCreateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Tax rates created
          schema:
            $ref: '#/definitions/TaxRatesResponse'
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Not a sales tax user
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Creates new tax rates
      tags:
        - taxes
  /v1/taxes/count:
    get:
      operationId: getProductCountForAllTaxes
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Count of products for each tax rate
          schema:
            $ref: '#/definitions/TaxRateProductCountResponse'
        '403':
          description: Not a sales tax user
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Gets all tax rates and a count of products associated with each
      tags:
        - taxes
  /v1/taxes/settings:
    get:
      operationId: getTaxSettings
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Tax settings
          schema:
            $ref: '#/definitions/TaxSettingsResponse'
        '403':
          description: Not a sales tax user
      security:
        - ZettleOauth:
            - 'READ:PRODUCT'
        - ZettleApiKey: []
      summary: 'Gets the organization tax settings '
      tags:
        - taxes
    put:
      consumes:
        - application/json
      operationId: setTaxationMode
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxSettingsUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Updated tax settings
          schema:
            $ref: '#/definitions/TaxSettingsResponse'
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Not a sales tax user
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Updates the organization tax settings
      tags:
        - taxes
  '/v1/taxes/{taxRateUuid}':
    delete:
      operationId: deleteTaxRate
      parameters:
        - format: uuid
          in: path
          name: taxRateUuid
          required: true
          type: string
      responses:
        '204':
          description: Tax rate deleted
        '403':
          description: Not a sales tax user
        '404':
          description: Tax rate not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Deletes a single tax rate
      tags:
        - taxes
    get:
      operationId: getTaxRate
      parameters:
        - format: uuid
          in: path
          name: taxRateUuid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Single tax rate
          schema:
            $ref: '#/definitions/TaxRate'
        '403':
          description: Not a sales tax user
        '404':
          description: Tax rate not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'READ:PRODUCT'
      summary: Gets a single tax rate
      tags:
        - taxes
    put:
      consumes:
        - application/json
      operationId: updateTaxRate
      parameters:
        - format: uuid
          in: path
          name: taxRateUuid
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxRateUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Updated tax rate
          schema:
            $ref: '#/definitions/TaxRate'
        '400':
          description: Invalid request body
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Not a sales tax user
        '404':
          description: Tax rate not found
      security:
        - ZettleApiKey: []
        - ZettleOauth:
            - 'WRITE:PRODUCT'
      summary: Updates a single tax rate
      tags:
        - taxes
schemes:
  - https
securityDefinitions:
  ZettleApiKey:
    description: >-
      For more information about authorization API visit:
      https://github.com/iZettle/api-documentation
    in: header
    name: Authorization
    type: apiKey
  ZettleOauth:
    authorizationUrl: 'https://oauth.izettle.com/authorize'
    description: >-
      For more information about authorization API visit:
      https://github.com/iZettle/api-documentation
    flow: implicit
    scopes:
      'READ:PRODUCT': Access to read product library data
      'WRITE:PRODUCT': Access to write product library data
    type: oauth2
swagger: '2.0'
x-components: {}

