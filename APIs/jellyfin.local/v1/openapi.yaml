basePath: /
definitions:
  AccessSchedule:
    additionalProperties: false
    description: An entity representing a user's access schedule.
    properties:
      DayOfWeek:
        $ref: '#/definitions/DynamicDayOfWeek'
      EndHour:
        description: Gets or sets the end hour.
        format: double
        type: number
      Id:
        description: Gets or sets the id of this instance.
        format: int32
        readOnly: true
        type: integer
      StartHour:
        description: Gets or sets the start hour.
        format: double
        type: number
      UserId:
        description: Gets or sets the id of the associated user.
        format: uuid
        readOnly: true
        type: string
    required:
      - DayOfWeek
      - EndHour
      - Id
      - StartHour
      - UserId
    type: object
  ActivityLogEntry:
    additionalProperties: false
    properties:
      Date:
        description: Gets or sets the date.
        format: date-time
        type: string
      Id:
        description: Gets or sets the identifier.
        format: int64
        type: integer
      ItemId:
        description: Gets or sets the item identifier.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Overview:
        description: Gets or sets the overview.
        type: string
        x-nullable: true
      Severity:
        $ref: '#/definitions/LogLevel'
      ShortOverview:
        description: Gets or sets the short overview.
        type: string
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
      UserId:
        description: Gets or sets the user identifier.
        format: uuid
        type: string
      UserPrimaryImageTag:
        description: Gets or sets the user primary image tag.
        type: string
        x-deprecated: true
        x-nullable: true
    type: object
  ActivityLogEntryQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/ActivityLogEntry'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  AddVirtualFolderDto:
    additionalProperties: false
    description: Add virtual folder dto.
    properties:
      LibraryOptions:
        $ref: '#/definitions/LibraryOptions'
    type: object
  AlbumInfo:
    additionalProperties: false
    properties:
      AlbumArtists:
        description: Gets or sets the album artist.
        items:
          type: string
        type: array
        x-nullable: true
      ArtistProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the artist provider ids.
        type: object
        x-nullable: true
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      SongInfos:
        items:
          $ref: '#/definitions/SongInfo'
        type: array
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  AlbumInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/AlbumInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  AllThemeMediaResult:
    additionalProperties: false
    properties:
      SoundtrackSongsResult:
        $ref: '#/definitions/ThemeMediaResult'
      ThemeSongsResult:
        $ref: '#/definitions/ThemeMediaResult'
      ThemeVideosResult:
        $ref: '#/definitions/ThemeMediaResult'
    type: object
  Architecture:
    enum:
      - X86
      - X64
      - Arm
      - Arm64
      - Wasm
    type: string
  ArtistInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      SongInfos:
        items:
          $ref: '#/definitions/SongInfo'
        type: array
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  ArtistInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/ArtistInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  AuthenticateUserByName:
    additionalProperties: false
    description: The authenticate user by name request body.
    properties:
      Password:
        description: Gets or sets the sha1-hashed password.
        type: string
        x-nullable: true
      Pw:
        description: Gets or sets the plain text password.
        type: string
        x-nullable: true
      Username:
        description: Gets or sets the username.
        type: string
        x-nullable: true
    type: object
  AuthenticationInfo:
    additionalProperties: false
    properties:
      AccessToken:
        description: Gets or sets the access token.
        type: string
        x-nullable: true
      AppName:
        description: Gets or sets the name of the application.
        type: string
        x-nullable: true
      AppVersion:
        description: Gets or sets the application version.
        type: string
        x-nullable: true
      DateCreated:
        description: Gets or sets the date created.
        format: date-time
        type: string
      DateLastActivity:
        format: date-time
        type: string
      DateRevoked:
        description: Gets or sets the date revoked.
        format: date-time
        type: string
        x-nullable: true
      DeviceId:
        description: Gets or sets the device identifier.
        type: string
        x-nullable: true
      DeviceName:
        description: Gets or sets the name of the device.
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the identifier.
        format: int64
        type: integer
      IsActive:
        description: Gets or sets a value indicating whether this instance is active.
        type: boolean
      UserId:
        description: Gets or sets the user identifier.
        format: uuid
        type: string
      UserName:
        type: string
        x-nullable: true
    type: object
  AuthenticationInfoQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/AuthenticationInfo'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  AuthenticationResult:
    additionalProperties: false
    properties:
      AccessToken:
        type: string
        x-nullable: true
      ServerId:
        type: string
        x-nullable: true
      SessionInfo:
        $ref: '#/definitions/SessionInfo'
      User:
        $ref: '#/definitions/UserDto'
    type: object
  BaseItem:
    additionalProperties: false
    description: Class BaseItem.
    properties:
      Container:
        type: string
        x-nullable: true
      DateLastSaved:
        format: date-time
        type: string
      ExtraIds:
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      Height:
        format: int32
        type: integer
      IsHD:
        readOnly: true
        type: boolean
      IsShortcut:
        type: boolean
      RemoteTrailers:
        description: Gets or sets the remote trailers.
        items:
          $ref: '#/definitions/MediaUrl'
        type: array
        x-nullable: true
      ShortcutPath:
        type: string
        x-nullable: true
      Size:
        format: int64
        type: integer
        x-nullable: true
      SupportsExternalTransfer:
        readOnly: true
        type: boolean
      Width:
        format: int32
        type: integer
    type: object
  BaseItemDto:
    additionalProperties: false
    description: "This is strictly used as a data transfer object from the api layer.\r\nThis holds information about a BaseItem in a format that is convenient for the client."
    properties:
      AirDays:
        description: Gets or sets the air days.
        items:
          $ref: '#/definitions/DayOfWeek'
        type: array
        x-nullable: true
      AirTime:
        description: Gets or sets the air time.
        type: string
        x-nullable: true
      AirsAfterSeasonNumber:
        format: int32
        type: integer
        x-nullable: true
      AirsBeforeEpisodeNumber:
        format: int32
        type: integer
        x-nullable: true
      AirsBeforeSeasonNumber:
        format: int32
        type: integer
        x-nullable: true
      Album:
        description: Gets or sets the album.
        type: string
        x-nullable: true
      AlbumArtist:
        description: Gets or sets the album artist.
        type: string
        x-nullable: true
      AlbumArtists:
        description: Gets or sets the album artists.
        items:
          $ref: '#/definitions/NameGuidPair'
        type: array
        x-nullable: true
      AlbumCount:
        description: Gets or sets the album count.
        format: int32
        type: integer
        x-nullable: true
      AlbumId:
        description: Gets or sets the album id.
        format: uuid
        type: string
        x-nullable: true
      AlbumPrimaryImageTag:
        description: Gets or sets the album image tag.
        type: string
        x-nullable: true
      Altitude:
        format: double
        type: number
        x-nullable: true
      Aperture:
        format: double
        type: number
        x-nullable: true
      ArtistCount:
        format: int32
        type: integer
        x-nullable: true
      ArtistItems:
        description: Gets or sets the artist items.
        items:
          $ref: '#/definitions/NameGuidPair'
        type: array
        x-nullable: true
      Artists:
        description: Gets or sets the artists.
        items:
          type: string
        type: array
        x-nullable: true
      AspectRatio:
        description: Gets or sets the aspect ratio.
        type: string
        x-nullable: true
      Audio:
        $ref: '#/definitions/ProgramAudio'
      BackdropImageTags:
        description: Gets or sets the backdrop image tags.
        items:
          type: string
        type: array
        x-nullable: true
      CameraMake:
        type: string
        x-nullable: true
      CameraModel:
        type: string
        x-nullable: true
      CanDelete:
        type: boolean
        x-nullable: true
      CanDownload:
        type: boolean
        x-nullable: true
      ChannelId:
        description: Gets or sets the channel identifier.
        format: uuid
        type: string
        x-nullable: true
      ChannelName:
        type: string
        x-nullable: true
      ChannelNumber:
        type: string
        x-nullable: true
      ChannelPrimaryImageTag:
        description: Gets or sets the channel primary image tag.
        type: string
        x-nullable: true
      ChannelType:
        $ref: '#/definitions/ChannelType'
      Chapters:
        description: Gets or sets the chapters.
        items:
          $ref: '#/definitions/ChapterInfo'
        type: array
        x-nullable: true
      ChildCount:
        description: Gets or sets the child count.
        format: int32
        type: integer
        x-nullable: true
      CollectionType:
        description: Gets or sets the type of the collection.
        type: string
        x-nullable: true
      CommunityRating:
        description: Gets or sets the community rating.
        format: float
        type: number
        x-nullable: true
      CompletionPercentage:
        description: Gets or sets the completion percentage.
        format: double
        type: number
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      CriticRating:
        description: Gets or sets the critic rating.
        format: float
        type: number
        x-nullable: true
      CumulativeRunTimeTicks:
        description: Gets or sets the cumulative run time ticks.
        format: int64
        type: integer
        x-nullable: true
      CurrentProgram:
        $ref: '#/definitions/BaseItemDto'
      CustomRating:
        description: Gets or sets the custom rating.
        type: string
        x-nullable: true
      DateCreated:
        description: Gets or sets the date created.
        format: date-time
        type: string
        x-nullable: true
      DateLastMediaAdded:
        format: date-time
        type: string
        x-nullable: true
      DisplayOrder:
        description: Gets or sets the display order.
        type: string
        x-nullable: true
      DisplayPreferencesId:
        description: Gets or sets the display preferences id.
        type: string
        x-nullable: true
      EnableMediaSourceDisplay:
        type: boolean
        x-nullable: true
      EndDate:
        description: Gets or sets the end date.
        format: date-time
        type: string
        x-nullable: true
      EpisodeCount:
        description: Gets or sets the episode count.
        format: int32
        type: integer
        x-nullable: true
      EpisodeTitle:
        description: Gets or sets the episode title.
        type: string
        x-nullable: true
      Etag:
        description: Gets or sets the etag.
        type: string
        x-nullable: true
      ExposureTime:
        format: double
        type: number
        x-nullable: true
      ExternalUrls:
        description: Gets or sets the external urls.
        items:
          $ref: '#/definitions/ExternalUrl'
        type: array
        x-nullable: true
      ExtraType:
        type: string
        x-nullable: true
      FocalLength:
        format: double
        type: number
        x-nullable: true
      ForcedSortName:
        type: string
        x-nullable: true
      GenreItems:
        items:
          $ref: '#/definitions/NameGuidPair'
        type: array
        x-nullable: true
      Genres:
        description: Gets or sets the genres.
        items:
          type: string
        type: array
        x-nullable: true
      HasSubtitles:
        type: boolean
        x-nullable: true
      Height:
        format: int32
        type: integer
        x-nullable: true
      Id:
        description: Gets or sets the id.
        format: uuid
        type: string
      ImageBlurHashes:
        description: "Gets or sets the blurhashes for the image tags.\r\nMaps image type to dictionary mapping image tag to blurhash value."
        properties:
          Art:
            additionalProperties:
              type: string
            type: object
          Backdrop:
            additionalProperties:
              type: string
            type: object
          Banner:
            additionalProperties:
              type: string
            type: object
          Box:
            additionalProperties:
              type: string
            type: object
          BoxRear:
            additionalProperties:
              type: string
            type: object
          Chapter:
            additionalProperties:
              type: string
            type: object
          Disc:
            additionalProperties:
              type: string
            type: object
          Logo:
            additionalProperties:
              type: string
            type: object
          Menu:
            additionalProperties:
              type: string
            type: object
          Primary:
            additionalProperties:
              type: string
            type: object
          Profile:
            additionalProperties:
              type: string
            type: object
          Screenshot:
            additionalProperties:
              type: string
            type: object
          Thumb:
            additionalProperties:
              type: string
            type: object
        type: object
        x-nullable: true
      ImageOrientation:
        $ref: '#/definitions/ImageOrientation'
      ImageTags:
        additionalProperties:
          type: string
        description: Gets or sets the image tags.
        type: object
        x-nullable: true
      IndexNumber:
        description: Gets or sets the index number.
        format: int32
        type: integer
        x-nullable: true
      IndexNumberEnd:
        description: Gets or sets the index number end.
        format: int32
        type: integer
        x-nullable: true
      IsFolder:
        description: Gets or sets a value indicating whether this instance is folder.
        type: boolean
        x-nullable: true
      IsHD:
        description: Gets or sets a value indicating whether this instance is HD.
        type: boolean
        x-nullable: true
      IsKids:
        description: Gets or sets a value indicating whether this instance is kids.
        type: boolean
        x-nullable: true
      IsLive:
        description: Gets or sets a value indicating whether this instance is live.
        type: boolean
        x-nullable: true
      IsMovie:
        description: Gets or sets a value indicating whether this instance is movie.
        type: boolean
        x-nullable: true
      IsNews:
        description: Gets or sets a value indicating whether this instance is news.
        type: boolean
        x-nullable: true
      IsPlaceHolder:
        description: Gets or sets a value indicating whether this instance is place holder.
        type: boolean
        x-nullable: true
      IsPremiere:
        description: Gets or sets a value indicating whether this instance is premiere.
        type: boolean
        x-nullable: true
      IsRepeat:
        description: Gets or sets a value indicating whether this instance is repeat.
        type: boolean
        x-nullable: true
      IsSeries:
        description: Gets or sets a value indicating whether this instance is series.
        type: boolean
        x-nullable: true
      IsSports:
        description: Gets or sets a value indicating whether this instance is sports.
        type: boolean
        x-nullable: true
      IsoSpeedRating:
        format: int32
        type: integer
        x-nullable: true
      IsoType:
        $ref: '#/definitions/IsoType'
      Latitude:
        format: double
        type: number
        x-nullable: true
      LocalTrailerCount:
        description: Gets or sets the local trailer count.
        format: int32
        type: integer
        x-nullable: true
      LocationType:
        $ref: '#/definitions/LocationType'
      LockData:
        description: 'Gets or sets a value indicating whether [enable internet providers].'
        type: boolean
        x-nullable: true
      LockedFields:
        description: Gets or sets the locked fields.
        items:
          $ref: '#/definitions/MetadataField'
        type: array
        x-nullable: true
      Longitude:
        format: double
        type: number
        x-nullable: true
      MediaSourceCount:
        format: int32
        type: integer
        x-nullable: true
      MediaSources:
        description: Gets or sets the media versions.
        items:
          $ref: '#/definitions/MediaSourceInfo'
        type: array
        x-nullable: true
      MediaStreams:
        description: Gets or sets the media streams.
        items:
          $ref: '#/definitions/MediaStream'
        type: array
        x-nullable: true
      MediaType:
        description: Gets or sets the type of the media.
        type: string
        x-nullable: true
      MovieCount:
        description: Gets or sets the movie count.
        format: int32
        type: integer
        x-nullable: true
      MusicVideoCount:
        description: Gets or sets the music video count.
        format: int32
        type: integer
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Number:
        description: Gets or sets the number.
        type: string
        x-nullable: true
      OfficialRating:
        description: Gets or sets the official rating.
        type: string
        x-nullable: true
      OriginalTitle:
        type: string
        x-nullable: true
      Overview:
        description: Gets or sets the overview.
        type: string
        x-nullable: true
      ParentArtImageTag:
        description: Gets or sets the parent art image tag.
        type: string
        x-nullable: true
      ParentArtItemId:
        description: >-
          If the item does not have a art, this will hold the Id of the Parent
          that has one.
        type: string
        x-nullable: true
      ParentBackdropImageTags:
        description: Gets or sets the parent backdrop image tags.
        items:
          type: string
        type: array
        x-nullable: true
      ParentBackdropItemId:
        description: >-
          If the item does not have any backdrops, this will hold the Id of the
          Parent that has one.
        type: string
        x-nullable: true
      ParentId:
        description: Gets or sets the parent id.
        format: uuid
        type: string
        x-nullable: true
      ParentIndexNumber:
        description: Gets or sets the parent index number.
        format: int32
        type: integer
        x-nullable: true
      ParentLogoImageTag:
        description: Gets or sets the parent logo image tag.
        type: string
        x-nullable: true
      ParentLogoItemId:
        description: >-
          If the item does not have a logo, this will hold the Id of the Parent
          that has one.
        type: string
        x-nullable: true
      ParentPrimaryImageItemId:
        description: Gets or sets the parent primary image item identifier.
        type: string
        x-nullable: true
      ParentPrimaryImageTag:
        description: Gets or sets the parent primary image tag.
        type: string
        x-nullable: true
      ParentThumbImageTag:
        description: Gets or sets the parent thumb image tag.
        type: string
        x-nullable: true
      ParentThumbItemId:
        description: Gets or sets the parent thumb item id.
        type: string
        x-nullable: true
      PartCount:
        description: Gets or sets the part count.
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      People:
        description: Gets or sets the people.
        items:
          $ref: '#/definitions/BaseItemPerson'
        type: array
        x-nullable: true
      PlayAccess:
        $ref: '#/definitions/PlayAccess'
      PlaylistItemId:
        description: Gets or sets the playlist item identifier.
        type: string
        x-nullable: true
      PreferredMetadataCountryCode:
        type: string
        x-nullable: true
      PreferredMetadataLanguage:
        type: string
        x-nullable: true
      PremiereDate:
        description: Gets or sets the premiere date.
        format: date-time
        type: string
        x-nullable: true
      PrimaryImageAspectRatio:
        description: 'Gets or sets the primary image aspect ratio, after image enhancements.'
        format: double
        type: number
        x-nullable: true
      ProductionLocations:
        items:
          type: string
        type: array
        x-nullable: true
      ProductionYear:
        description: Gets or sets the production year.
        format: int32
        type: integer
        x-nullable: true
      ProgramCount:
        format: int32
        type: integer
        x-nullable: true
      ProgramId:
        description: Gets or sets the program identifier.
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      RecursiveItemCount:
        description: Gets or sets the recursive item count.
        format: int32
        type: integer
        x-nullable: true
      RemoteTrailers:
        description: Gets or sets the trailer urls.
        items:
          $ref: '#/definitions/MediaUrl'
        type: array
        x-nullable: true
      RunTimeTicks:
        description: Gets or sets the run time ticks.
        format: int64
        type: integer
        x-nullable: true
      ScreenshotImageTags:
        description: Gets or sets the screenshot image tags.
        items:
          type: string
        type: array
        x-nullable: true
      SeasonId:
        description: Gets or sets the season identifier.
        format: uuid
        type: string
        x-nullable: true
      SeasonName:
        description: Gets or sets the name of the season.
        type: string
        x-nullable: true
      SeriesCount:
        description: Gets or sets the series count.
        format: int32
        type: integer
        x-nullable: true
      SeriesId:
        description: Gets or sets the series id.
        format: uuid
        type: string
        x-nullable: true
      SeriesName:
        description: Gets or sets the name of the series.
        type: string
        x-nullable: true
      SeriesPrimaryImageTag:
        description: Gets or sets the series primary image tag.
        type: string
        x-nullable: true
      SeriesStudio:
        description: Gets or sets the series studio.
        type: string
        x-nullable: true
      SeriesThumbImageTag:
        description: Gets or sets the series thumb image tag.
        type: string
        x-nullable: true
      SeriesTimerId:
        description: Gets or sets the series timer identifier.
        type: string
        x-nullable: true
      ServerId:
        description: Gets or sets the server identifier.
        type: string
        x-nullable: true
      ShutterSpeed:
        format: double
        type: number
        x-nullable: true
      Software:
        type: string
        x-nullable: true
      SongCount:
        description: Gets or sets the song count.
        format: int32
        type: integer
        x-nullable: true
      SortName:
        description: Gets or sets the name of the sort.
        type: string
        x-nullable: true
      SourceType:
        description: Gets or sets the type of the source.
        type: string
        x-nullable: true
      SpecialFeatureCount:
        description: Gets or sets the special feature count.
        format: int32
        type: integer
        x-nullable: true
      StartDate:
        description: 'The start date of the recording, in UTC.'
        format: date-time
        type: string
        x-nullable: true
      Status:
        description: Gets or sets the status.
        type: string
        x-nullable: true
      Studios:
        description: Gets or sets the studios.
        items:
          $ref: '#/definitions/NameGuidPair'
        type: array
        x-nullable: true
      SupportsSync:
        description: 'Gets or sets a value indicating whether [supports synchronize].'
        type: boolean
        x-nullable: true
      Taglines:
        description: Gets or sets the taglines.
        items:
          type: string
        type: array
        x-nullable: true
      Tags:
        description: Gets or sets the tags.
        items:
          type: string
        type: array
        x-nullable: true
      TimerId:
        description: Gets or sets the timer identifier.
        type: string
        x-nullable: true
      TrailerCount:
        description: Gets or sets the trailer count.
        format: int32
        type: integer
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
      UserData:
        $ref: '#/definitions/UserItemDataDto'
      Video3DFormat:
        $ref: '#/definitions/Video3DFormat'
      VideoType:
        $ref: '#/definitions/VideoType'
      Width:
        format: int32
        type: integer
        x-nullable: true
    type: object
  BaseItemDtoQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/BaseItemDto'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  BaseItemPerson:
    additionalProperties: false
    description: >-
      This is used by the api to get information about a Person within a
      BaseItem.
    properties:
      Id:
        description: Gets or sets the identifier.
        type: string
        x-nullable: true
      ImageBlurHashes:
        description: Gets or sets the primary image blurhash.
        properties:
          Art:
            additionalProperties:
              type: string
            type: object
          Backdrop:
            additionalProperties:
              type: string
            type: object
          Banner:
            additionalProperties:
              type: string
            type: object
          Box:
            additionalProperties:
              type: string
            type: object
          BoxRear:
            additionalProperties:
              type: string
            type: object
          Chapter:
            additionalProperties:
              type: string
            type: object
          Disc:
            additionalProperties:
              type: string
            type: object
          Logo:
            additionalProperties:
              type: string
            type: object
          Menu:
            additionalProperties:
              type: string
            type: object
          Primary:
            additionalProperties:
              type: string
            type: object
          Profile:
            additionalProperties:
              type: string
            type: object
          Screenshot:
            additionalProperties:
              type: string
            type: object
          Thumb:
            additionalProperties:
              type: string
            type: object
        type: object
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      PrimaryImageTag:
        description: Gets or sets the primary image tag.
        type: string
        x-nullable: true
      Role:
        description: Gets or sets the role.
        type: string
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
    type: object
  BasePluginConfiguration:
    additionalProperties: false
    description: Class BasePluginConfiguration.
    type: object
  BookInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      SeriesName:
        type: string
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  BookInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/BookInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  BoxSetInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  BoxSetInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/BoxSetInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  BrandingOptions:
    additionalProperties: false
    properties:
      CustomCss:
        description: Gets or sets the custom CSS.
        type: string
        x-nullable: true
      LoginDisclaimer:
        description: Gets or sets the login disclaimer.
        type: string
        x-nullable: true
    type: object
  BufferRequestDto:
    additionalProperties: false
    description: Class BufferRequestDto.
    properties:
      IsPlaying:
        description: >-
          Gets or sets a value indicating whether the client playback is
          unpaused.
        type: boolean
      PlaylistItemId:
        description: Gets or sets the playlist item identifier of the playing item.
        format: uuid
        type: string
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
      When:
        description: Gets or sets when the request has been made by the client.
        format: date-time
        type: string
    type: object
  ChannelFeatures:
    additionalProperties: false
    properties:
      AutoRefreshLevels:
        description: Gets or sets the automatic refresh levels.
        format: int32
        type: integer
        x-nullable: true
      CanFilter:
        description: Gets or sets a value indicating whether this instance can filter.
        type: boolean
      CanSearch:
        description: Gets or sets a value indicating whether this instance can search.
        type: boolean
      ContentTypes:
        description: Gets or sets the content types.
        items:
          $ref: '#/definitions/ChannelMediaContentType'
        type: array
        x-nullable: true
      DefaultSortFields:
        description: Gets or sets the default sort orders.
        items:
          $ref: '#/definitions/ChannelItemSortField'
        type: array
        x-nullable: true
      Id:
        description: Gets or sets the identifier.
        type: string
        x-nullable: true
      MaxPageSize:
        description: >-
          Represents the maximum number of records the channel allows retrieving
          at a time.
        format: int32
        type: integer
        x-nullable: true
      MediaTypes:
        description: Gets or sets the media types.
        items:
          $ref: '#/definitions/ChannelMediaType'
        type: array
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      SupportsContentDownloading:
        description: >-
          Gets or sets a value indicating whether [supports content
          downloading].
        type: boolean
      SupportsLatestMedia:
        description: 'Gets or sets a value indicating whether [supports latest media].'
        type: boolean
      SupportsSortOrderToggle:
        description: Indicates if a sort ascending/descending toggle is supported or not.
        type: boolean
    type: object
  ChannelItemSortField:
    enum:
      - Name
      - CommunityRating
      - PremiereDate
      - DateCreated
      - Runtime
      - PlayCount
      - CommunityPlayCount
    type: string
  ChannelMappingOptionsDto:
    additionalProperties: false
    description: Channel mapping options dto.
    properties:
      Mappings:
        description: Gets or sets list of mappings.
        items:
          $ref: '#/definitions/NameValuePair'
        type: array
        x-nullable: true
      ProviderChannels:
        description: Gets or sets list of provider channels.
        items:
          $ref: '#/definitions/NameIdPair'
        type: array
        x-nullable: true
      ProviderName:
        description: Gets or sets provider name.
        type: string
        x-nullable: true
      TunerChannels:
        description: Gets or sets list of tuner channels.
        items:
          $ref: '#/definitions/TunerChannelMapping'
        type: array
        x-nullable: true
    type: object
  ChannelMediaContentType:
    enum:
      - Clip
      - Podcast
      - Trailer
      - Movie
      - Episode
      - Song
      - MovieExtra
      - TvExtra
    type: string
  ChannelMediaType:
    enum:
      - Audio
      - Video
      - Photo
    type: string
  ChannelType:
    description: Enum ChannelType.
    enum:
      - TV
      - Radio
    type: string
  ChapterInfo:
    additionalProperties: false
    description: Class ChapterInfo.
    properties:
      ImageDateModified:
        format: date-time
        type: string
      ImagePath:
        description: Gets or sets the image path.
        type: string
        x-nullable: true
      ImageTag:
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      StartPositionTicks:
        description: Gets or sets the start position ticks.
        format: int64
        type: integer
    type: object
  ClientCapabilities:
    additionalProperties: false
    properties:
      AppStoreUrl:
        type: string
        x-nullable: true
      DeviceProfile:
        $ref: '#/definitions/DeviceProfile'
      IconUrl:
        type: string
        x-nullable: true
      MessageCallbackUrl:
        type: string
        x-nullable: true
      PlayableMediaTypes:
        items:
          type: string
        type: array
        x-nullable: true
      SupportedCommands:
        items:
          $ref: '#/definitions/GeneralCommandType'
        type: array
        x-nullable: true
      SupportsContentUploading:
        type: boolean
      SupportsMediaControl:
        type: boolean
      SupportsPersistentIdentifier:
        type: boolean
      SupportsSync:
        type: boolean
    type: object
  ClientCapabilitiesDto:
    additionalProperties: false
    description: Client capabilities dto.
    properties:
      AppStoreUrl:
        description: Gets or sets the app store url.
        type: string
        x-nullable: true
      DeviceProfile:
        $ref: '#/definitions/DeviceProfile'
      IconUrl:
        description: Gets or sets the icon url.
        type: string
        x-nullable: true
      MessageCallbackUrl:
        description: Gets or sets the message callback url.
        type: string
        x-nullable: true
      PlayableMediaTypes:
        description: Gets or sets the list of playable media types.
        items:
          type: string
        type: array
        x-nullable: true
      SupportedCommands:
        description: Gets or sets the list of supported commands.
        items:
          $ref: '#/definitions/GeneralCommandType'
        type: array
        x-nullable: true
      SupportsContentUploading:
        description: >-
          Gets or sets a value indicating whether session supports content
          uploading.
        type: boolean
      SupportsMediaControl:
        description: >-
          Gets or sets a value indicating whether session supports media
          control.
        type: boolean
      SupportsPersistentIdentifier:
        description: >-
          Gets or sets a value indicating whether session supports a persistent
          identifier.
        type: boolean
      SupportsSync:
        description: Gets or sets a value indicating whether session supports sync.
        type: boolean
    type: object
  CodecProfile:
    additionalProperties: false
    properties:
      ApplyConditions:
        items:
          $ref: '#/definitions/ProfileCondition'
        type: array
        x-nullable: true
      Codec:
        type: string
        x-nullable: true
      Conditions:
        items:
          $ref: '#/definitions/ProfileCondition'
        type: array
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/CodecType'
    type: object
  CodecType:
    enum:
      - Video
      - VideoAudio
      - Audio
    type: string
  CollectionCreationResult:
    additionalProperties: false
    properties:
      Id:
        format: uuid
        type: string
    type: object
  ConfigurationPageInfo:
    additionalProperties: false
    description: The configuration page info.
    properties:
      ConfigurationPageType:
        $ref: '#/definitions/ConfigurationPageType'
      DisplayName:
        description: Gets or sets the display name.
        type: string
        x-nullable: true
      EnableInMainMenu:
        description: >-
          Gets or sets a value indicating whether the configurations page is
          enabled in the main menu.
        type: boolean
      MenuIcon:
        description: Gets or sets the menu icon.
        type: string
        x-nullable: true
      MenuSection:
        description: Gets or sets the menu section.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      PluginId:
        description: Gets or sets the plugin id.
        format: uuid
        type: string
        x-nullable: true
    type: object
  ConfigurationPageType:
    description: Enum ConfigurationPageType.
    enum:
      - PluginConfiguration
      - None
    type: string
  ContainerProfile:
    additionalProperties: false
    properties:
      Conditions:
        items:
          $ref: '#/definitions/ProfileCondition'
        type: array
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/DlnaProfileType'
    type: object
  ControlResponse:
    additionalProperties: false
    properties:
      Headers:
        additionalProperties:
          type: string
        readOnly: true
        type: object
        x-nullable: true
      IsSuccessful:
        type: boolean
      Xml:
        type: string
        x-nullable: true
    type: object
  CountryInfo:
    additionalProperties: false
    description: Class CountryInfo.
    properties:
      DisplayName:
        description: Gets or sets the display name.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ThreeLetterISORegionName:
        description: Gets or sets the name of the three letter ISO region.
        type: string
        x-nullable: true
      TwoLetterISORegionName:
        description: Gets or sets the name of the two letter ISO region.
        type: string
        x-nullable: true
    type: object
  CreatePlaylistDto:
    additionalProperties: false
    description: Create new playlist dto.
    properties:
      Ids:
        description: Gets or sets item ids to add to the playlist.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      MediaType:
        description: Gets or sets the media type.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name of the new playlist.
        type: string
        x-nullable: true
      UserId:
        description: Gets or sets the user id.
        format: uuid
        type: string
        x-nullable: true
    type: object
  CreateUserByName:
    additionalProperties: false
    description: The create user by name request body.
    properties:
      Name:
        description: Gets or sets the username.
        type: string
        x-nullable: true
      Password:
        description: Gets or sets the password.
        type: string
        x-nullable: true
    type: object
  CultureDto:
    additionalProperties: false
    description: Class CultureDto.
    properties:
      DisplayName:
        description: Gets or sets the display name.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ThreeLetterISOLanguageName:
        description: Gets or sets the name of the three letter ISO language.
        readOnly: true
        type: string
        x-nullable: true
      ThreeLetterISOLanguageNames:
        items:
          type: string
        type: array
        x-nullable: true
      TwoLetterISOLanguageName:
        description: Gets or sets the name of the two letter ISO language.
        type: string
        x-nullable: true
    type: object
  DayOfWeek:
    enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    type: string
  DayPattern:
    enum:
      - Daily
      - Weekdays
      - Weekends
    type: string
  DefaultDirectoryBrowserInfoDto:
    additionalProperties: false
    description: Default directory browser info.
    properties:
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
    type: object
  DeviceIdentification:
    additionalProperties: false
    properties:
      FriendlyName:
        description: Gets or sets the name of the friendly.
        type: string
        x-nullable: true
      Headers:
        description: Gets or sets the headers.
        items:
          $ref: '#/definitions/HttpHeaderInfo'
        type: array
        x-nullable: true
      Manufacturer:
        description: Gets or sets the manufacturer.
        type: string
        x-nullable: true
      ManufacturerUrl:
        description: Gets or sets the manufacturer URL.
        type: string
        x-nullable: true
      ModelDescription:
        description: Gets or sets the model description.
        type: string
        x-nullable: true
      ModelName:
        description: Gets or sets the name of the model.
        type: string
        x-nullable: true
      ModelNumber:
        description: Gets or sets the model number.
        type: string
        x-nullable: true
      ModelUrl:
        description: Gets or sets the model URL.
        type: string
        x-nullable: true
      SerialNumber:
        description: Gets or sets the serial number.
        type: string
        x-nullable: true
    type: object
  DeviceInfo:
    additionalProperties: false
    properties:
      AppName:
        description: Gets or sets the name of the application.
        type: string
        x-nullable: true
      AppVersion:
        description: Gets or sets the application version.
        type: string
        x-nullable: true
      Capabilities:
        $ref: '#/definitions/ClientCapabilities'
      DateLastActivity:
        description: Gets or sets the date last modified.
        format: date-time
        type: string
      IconUrl:
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the identifier.
        type: string
        x-nullable: true
      LastUserId:
        description: Gets or sets the last user identifier.
        format: uuid
        type: string
      LastUserName:
        description: Gets or sets the last name of the user.
        type: string
        x-nullable: true
      Name:
        type: string
        x-nullable: true
    type: object
  DeviceInfoQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/DeviceInfo'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  DeviceOptions:
    additionalProperties: false
    properties:
      CustomName:
        type: string
        x-nullable: true
    type: object
  DeviceProfile:
    additionalProperties: false
    description: Defines the MediaBrowser.Model.Dlna.DeviceProfile.
    properties:
      AlbumArtPn:
        description: Gets or sets the AlbumArtPn.
        type: string
        x-nullable: true
      CodecProfiles:
        description: Gets or sets the CodecProfiles.
        items:
          $ref: '#/definitions/CodecProfile'
        type: array
        x-nullable: true
      ContainerProfiles:
        description: Gets or sets the ContainerProfiles.
        items:
          $ref: '#/definitions/ContainerProfile'
        type: array
        x-nullable: true
      DirectPlayProfiles:
        description: Gets or sets the direct play profiles.
        items:
          $ref: '#/definitions/DirectPlayProfile'
        type: array
        x-nullable: true
      EnableAlbumArtInDidl:
        description: Gets or sets a value indicating whether EnableAlbumArtInDidl.
        type: boolean
      EnableMSMediaReceiverRegistrar:
        description: >-
          Gets or sets a value indicating whether
          EnableMSMediaReceiverRegistrar.
        type: boolean
      EnableSingleAlbumArtLimit:
        description: Gets or sets a value indicating whether EnableSingleAlbumArtLimit.
        type: boolean
      EnableSingleSubtitleLimit:
        description: Gets or sets a value indicating whether EnableSingleSubtitleLimit.
        type: boolean
      FriendlyName:
        description: Gets or sets the FriendlyName.
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the Id.
        type: string
        x-nullable: true
      Identification:
        $ref: '#/definitions/DeviceIdentification'
      IgnoreTranscodeByteRangeRequests:
        description: >-
          Gets or sets a value indicating whether
          IgnoreTranscodeByteRangeRequests.
        type: boolean
      Manufacturer:
        description: Gets or sets the Manufacturer.
        type: string
        x-nullable: true
      ManufacturerUrl:
        description: Gets or sets the ManufacturerUrl.
        type: string
        x-nullable: true
      MaxAlbumArtHeight:
        description: Gets or sets the MaxAlbumArtHeight.
        format: int32
        type: integer
      MaxAlbumArtWidth:
        description: Gets or sets the MaxAlbumArtWidth.
        format: int32
        type: integer
      MaxIconHeight:
        description: Gets or sets the MaxIconHeight.
        format: int32
        type: integer
        x-nullable: true
      MaxIconWidth:
        description: Gets or sets the MaxIconWidth.
        format: int32
        type: integer
        x-nullable: true
      MaxStaticBitrate:
        description: Gets or sets the MaxStaticBitrate.
        format: int32
        type: integer
        x-nullable: true
      MaxStaticMusicBitrate:
        description: Gets or sets the MaxStaticMusicBitrate.
        format: int32
        type: integer
        x-nullable: true
      MaxStreamingBitrate:
        description: Gets or sets the MaxStreamingBitrate.
        format: int32
        type: integer
        x-nullable: true
      ModelDescription:
        description: Gets or sets the ModelDescription.
        type: string
        x-nullable: true
      ModelName:
        description: Gets or sets the ModelName.
        type: string
        x-nullable: true
      ModelNumber:
        description: Gets or sets the ModelNumber.
        type: string
        x-nullable: true
      ModelUrl:
        description: Gets or sets the ModelUrl.
        type: string
        x-nullable: true
      MusicStreamingTranscodingBitrate:
        description: Gets or sets the MusicStreamingTranscodingBitrate.
        format: int32
        type: integer
        x-nullable: true
      Name:
        description: Gets or sets the Name.
        type: string
        x-nullable: true
      ProtocolInfo:
        description: Gets or sets the ProtocolInfo.
        type: string
        x-nullable: true
      RequiresPlainFolders:
        description: Gets or sets a value indicating whether RequiresPlainFolders.
        type: boolean
      RequiresPlainVideoItems:
        description: Gets or sets a value indicating whether RequiresPlainVideoItems.
        type: boolean
      ResponseProfiles:
        description: Gets or sets the ResponseProfiles.
        items:
          $ref: '#/definitions/ResponseProfile'
        type: array
        x-nullable: true
      SerialNumber:
        description: Gets or sets the SerialNumber.
        type: string
        x-nullable: true
      SonyAggregationFlags:
        description: >-
          Gets or sets the content of the aggregationFlags element in the
          urn:schemas-sonycom:av namespace.
        type: string
        x-nullable: true
      SubtitleProfiles:
        description: Gets or sets the SubtitleProfiles.
        items:
          $ref: '#/definitions/SubtitleProfile'
        type: array
        x-nullable: true
      SupportedMediaTypes:
        description: Gets or sets the SupportedMediaTypes.
        type: string
        x-nullable: true
      TimelineOffsetSeconds:
        description: Gets or sets the TimelineOffsetSeconds.
        format: int32
        type: integer
      TranscodingProfiles:
        description: Gets or sets the transcoding profiles.
        items:
          $ref: '#/definitions/TranscodingProfile'
        type: array
        x-nullable: true
      UserId:
        description: Gets or sets the UserId.
        type: string
        x-nullable: true
      XmlRootAttributes:
        description: Gets or sets the XmlRootAttributes.
        items:
          $ref: '#/definitions/XmlAttribute'
        type: array
        x-nullable: true
    type: object
  DeviceProfileInfo:
    additionalProperties: false
    properties:
      Id:
        description: Gets or sets the identifier.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/DeviceProfileType'
    type: object
  DeviceProfileType:
    enum:
      - System
      - User
    type: string
  DirectPlayProfile:
    additionalProperties: false
    properties:
      AudioCodec:
        type: string
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/DlnaProfileType'
      VideoCodec:
        type: string
        x-nullable: true
    type: object
  DisplayPreferencesDto:
    additionalProperties: false
    description: >-
      Defines the display preferences for any item that supports them (usually
      Folders).
    properties:
      Client:
        description: Gets or sets the client.
        type: string
        x-nullable: true
      CustomPrefs:
        additionalProperties:
          type: string
        description: Gets or sets the custom prefs.
        type: object
        x-nullable: true
      Id:
        description: Gets or sets the user id.
        type: string
        x-nullable: true
      IndexBy:
        description: Gets or sets the index by.
        type: string
        x-nullable: true
      PrimaryImageHeight:
        description: Gets or sets the height of the primary image.
        format: int32
        type: integer
      PrimaryImageWidth:
        description: Gets or sets the width of the primary image.
        format: int32
        type: integer
      RememberIndexing:
        description: 'Gets or sets a value indicating whether [remember indexing].'
        type: boolean
      RememberSorting:
        description: 'Gets or sets a value indicating whether [remember sorting].'
        type: boolean
      ScrollDirection:
        $ref: '#/definitions/ScrollDirection'
      ShowBackdrop:
        description: >-
          Gets or sets a value indicating whether to show backdrops on this
          item.
        type: boolean
      ShowSidebar:
        description: 'Gets or sets a value indicating whether [show sidebar].'
        type: boolean
      SortBy:
        description: Gets or sets the sort by.
        type: string
        x-nullable: true
      SortOrder:
        $ref: '#/definitions/SortOrder'
      ViewType:
        description: Gets or sets the type of the view.
        type: string
        x-nullable: true
    type: object
  DlnaProfileType:
    enum:
      - Audio
      - Video
      - Photo
    type: string
  DynamicDayOfWeek:
    description: >-
      An enum that represents a day of the week, weekdays, weekends, or all
      days.
    enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Everyday
      - Weekday
      - Weekend
    type: string
  EncodingContext:
    enum:
      - Streaming
      - Static
    type: string
  EndPointInfo:
    additionalProperties: false
    properties:
      IsInNetwork:
        type: boolean
      IsLocal:
        type: boolean
    type: object
  ExternalIdInfo:
    additionalProperties: false
    description: Represents the external id information for serialization to the client.
    properties:
      Key:
        description: >-
          Gets or sets the unique key for this id. This key should be unique
          across all providers.
        type: string
        x-nullable: true
      Name:
        description: >-
          Gets or sets the display name of the external id provider (IE: IMDB,
          MusicBrainz, etc).
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/ExternalIdMediaType'
      UrlFormatString:
        description: Gets or sets the URL format string.
        type: string
        x-nullable: true
    type: object
  ExternalIdMediaType:
    description: The specific media type of an MediaBrowser.Model.Providers.ExternalIdInfo.
    enum:
      - Album
      - AlbumArtist
      - Artist
      - BoxSet
      - Episode
      - Movie
      - OtherArtist
      - Person
      - ReleaseGroup
      - Season
      - Series
      - Track
    type: string
  ExternalUrl:
    additionalProperties: false
    properties:
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Url:
        description: Gets or sets the type of the item.
        type: string
        x-nullable: true
    type: object
  FFmpegLocation:
    description: Enum describing the location of the FFmpeg tool.
    enum:
      - NotFound
      - SetByArgument
      - Custom
      - System
    type: string
  FileSystemEntryInfo:
    additionalProperties: false
    description: Class FileSystemEntryInfo.
    properties:
      Name:
        description: Gets the name.
        readOnly: true
        type: string
        x-nullable: true
      Path:
        description: Gets the path.
        readOnly: true
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/FileSystemEntryType'
    type: object
  FileSystemEntryType:
    description: Enum FileSystemEntryType.
    enum:
      - File
      - Directory
      - NetworkComputer
      - NetworkShare
    type: string
  FontFile:
    additionalProperties: false
    description: Class FontFile.
    properties:
      DateCreated:
        description: Gets or sets the date created.
        format: date-time
        type: string
      DateModified:
        description: Gets or sets the date modified.
        format: date-time
        type: string
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Size:
        description: Gets or sets the size.
        format: int64
        type: integer
    type: object
  ForgotPasswordAction:
    enum:
      - ContactAdmin
      - PinCode
      - InNetworkRequired
    type: string
  ForgotPasswordDto:
    additionalProperties: false
    description: Forgot Password request body DTO.
    properties:
      EnteredUsername:
        description: Gets or sets the entered username to have its password reset.
        type: string
    required:
      - EnteredUsername
    type: object
  ForgotPasswordResult:
    additionalProperties: false
    properties:
      Action:
        $ref: '#/definitions/ForgotPasswordAction'
      PinExpirationDate:
        description: Gets or sets the pin expiration date.
        format: date-time
        type: string
        x-nullable: true
      PinFile:
        description: Gets or sets the pin file.
        type: string
        x-nullable: true
    type: object
  GeneralCommand:
    additionalProperties: false
    properties:
      Arguments:
        additionalProperties:
          type: string
        type: object
        x-nullable: true
      ControllingUserId:
        format: uuid
        type: string
      Name:
        $ref: '#/definitions/GeneralCommandType'
    type: object
  GeneralCommandType:
    description: This exists simply to identify a set of known commands.
    enum:
      - MoveUp
      - MoveDown
      - MoveLeft
      - MoveRight
      - PageUp
      - PageDown
      - PreviousLetter
      - NextLetter
      - ToggleOsd
      - ToggleContextMenu
      - Select
      - Back
      - TakeScreenshot
      - SendKey
      - SendString
      - GoHome
      - GoToSettings
      - VolumeUp
      - VolumeDown
      - Mute
      - Unmute
      - ToggleMute
      - SetVolume
      - SetAudioStreamIndex
      - SetSubtitleStreamIndex
      - ToggleFullscreen
      - DisplayContent
      - GoToSearch
      - DisplayMessage
      - SetRepeatMode
      - ChannelUp
      - ChannelDown
      - Guide
      - ToggleStats
      - PlayMediaSource
      - PlayTrailers
      - SetShuffleQueue
      - PlayState
      - PlayNext
      - ToggleOsdMenu
      - Play
    type: string
  GetProgramsDto:
    additionalProperties: false
    description: Get programs dto.
    properties:
      ChannelIds:
        description: Gets or sets the channels to return guide information for.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      EnableImageTypes:
        description: "Gets or sets the image types to include in the output.\r\nOptional."
        items:
          $ref: '#/definitions/ImageType'
        type: array
        x-nullable: true
      EnableImages:
        description: "Gets or sets include image information in output.\r\nOptional."
        type: boolean
        x-nullable: true
      EnableTotalRecordCount:
        description: Gets or sets a value indicating whether retrieve total record count.
        type: boolean
      EnableUserData:
        description: "Gets or sets include user data.\r\nOptional."
        type: boolean
        x-nullable: true
      Fields:
        description: "Gets or sets specify additional fields of information to return in the output. This allows multiple, comma delimited. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.\r\nOptional."
        items:
          $ref: '#/definitions/ItemFields'
        type: array
        x-nullable: true
      GenreIds:
        description: Gets or sets the genre ids to return guide information for.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      Genres:
        description: Gets or sets the genres to return guide information for.
        items:
          type: string
        type: array
        x-nullable: true
      HasAired:
        description: "Gets or sets filter by programs that have completed airing, or not.\r\nOptional."
        type: boolean
        x-nullable: true
      ImageTypeLimit:
        description: "Gets or sets the max number of images to return, per image type.\r\nOptional."
        format: int32
        type: integer
        x-nullable: true
      IsAiring:
        description: "Gets or sets filter by programs that are currently airing, or not.\r\nOptional."
        type: boolean
        x-nullable: true
      IsKids:
        description: "Gets or sets filter for kids.\r\nOptional."
        type: boolean
        x-nullable: true
      IsMovie:
        description: "Gets or sets filter for movies.\r\nOptional."
        type: boolean
        x-nullable: true
      IsNews:
        description: "Gets or sets filter for news.\r\nOptional."
        type: boolean
        x-nullable: true
      IsSeries:
        description: "Gets or sets filter for series.\r\nOptional."
        type: boolean
        x-nullable: true
      IsSports:
        description: "Gets or sets filter for sports.\r\nOptional."
        type: boolean
        x-nullable: true
      LibrarySeriesId:
        description: "Gets or sets filter by library series id.\r\nOptional."
        format: uuid
        type: string
      Limit:
        description: "Gets or sets the maximum number of records to return.\r\nOptional."
        format: int32
        type: integer
        x-nullable: true
      MaxEndDate:
        description: "Gets or sets the maximum premiere end date.\r\nOptional."
        format: date-time
        type: string
        x-nullable: true
      MaxStartDate:
        description: "Gets or sets the maximum premiere start date.\r\nOptional."
        format: date-time
        type: string
        x-nullable: true
      MinEndDate:
        description: "Gets or sets the minimum premiere end date.\r\nOptional."
        format: date-time
        type: string
        x-nullable: true
      MinStartDate:
        description: "Gets or sets the minimum premiere start date.\r\nOptional."
        format: date-time
        type: string
        x-nullable: true
      SeriesTimerId:
        description: "Gets or sets filter by series timer id.\r\nOptional."
        type: string
        x-nullable: true
      SortBy:
        description: "Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.\r\nOptional."
        type: string
        x-nullable: true
      SortOrder:
        description: 'Gets or sets sort Order - Ascending,Descending.'
        type: string
        x-nullable: true
      StartIndex:
        description: "Gets or sets the record index to start at. All items with a lower index will be dropped from the results.\r\nOptional."
        format: int32
        type: integer
        x-nullable: true
      UserId:
        description: Gets or sets optional. Filter by user id.
        format: uuid
        type: string
    type: object
  GroupInfoDto:
    additionalProperties: false
    description: Class GroupInfoDto.
    properties:
      GroupId:
        description: Gets the group identifier.
        format: uuid
        readOnly: true
        type: string
      GroupName:
        description: Gets the group name.
        readOnly: true
        type: string
        x-nullable: true
      LastUpdatedAt:
        description: Gets the date when this DTO has been created.
        format: date-time
        readOnly: true
        type: string
      Participants:
        description: Gets the participants.
        items:
          type: string
        readOnly: true
        type: array
        x-nullable: true
      State:
        $ref: '#/definitions/GroupStateType'
    type: object
  GroupQueueMode:
    description: Enum GroupQueueMode.
    enum:
      - Queue
      - QueueNext
    type: string
  GroupRepeatMode:
    description: Enum GroupRepeatMode.
    enum:
      - RepeatOne
      - RepeatAll
      - RepeatNone
    type: string
  GroupShuffleMode:
    description: Enum GroupShuffleMode.
    enum:
      - Sorted
      - Shuffle
    type: string
  GroupStateType:
    description: Enum GroupState.
    enum:
      - Idle
      - Waiting
      - Paused
      - Playing
    type: string
  GroupUpdateType:
    description: Enum GroupUpdateType.
    enum:
      - UserJoined
      - UserLeft
      - GroupJoined
      - GroupLeft
      - StateUpdate
      - PlayQueue
      - NotInGroup
      - GroupDoesNotExist
      - CreateGroupDenied
      - JoinGroupDenied
      - LibraryAccessDenied
    type: string
  GuideInfo:
    additionalProperties: false
    properties:
      EndDate:
        description: Gets or sets the end date.
        format: date-time
        type: string
      StartDate:
        description: Gets or sets the start date.
        format: date-time
        type: string
    type: object
  HeaderMatchType:
    enum:
      - Equals
      - Regex
      - Substring
    type: string
  HttpHeaderInfo:
    additionalProperties: false
    properties:
      Match:
        $ref: '#/definitions/HeaderMatchType'
      Name:
        type: string
        x-nullable: true
      Value:
        type: string
        x-nullable: true
    type: object
  IPlugin:
    additionalProperties: false
    description: Defines the MediaBrowser.Common.Plugins.IPlugin.
    properties:
      AssemblyFilePath:
        description: Gets the path to the assembly file.
        readOnly: true
        type: string
        x-nullable: true
      CanUninstall:
        description: Gets a value indicating whether the plugin can be uninstalled.
        readOnly: true
        type: boolean
      DataFolderPath:
        description: >-
          Gets the full path to the data folder, where the plugin can store any
          miscellaneous files needed.
        readOnly: true
        type: string
        x-nullable: true
      Description:
        description: Gets the Description.
        readOnly: true
        type: string
        x-nullable: true
      Id:
        description: Gets the unique id.
        format: uuid
        readOnly: true
        type: string
      Name:
        description: Gets the name of the plugin.
        readOnly: true
        type: string
        x-nullable: true
      Version:
        $ref: '#/definitions/Version'
    type: object
  IgnoreWaitRequestDto:
    additionalProperties: false
    description: Class IgnoreWaitRequestDto.
    properties:
      IgnoreWait:
        description: Gets or sets a value indicating whether the client should be ignored.
        type: boolean
    type: object
  ImageByNameInfo:
    additionalProperties: false
    properties:
      Context:
        description: Gets or sets the context.
        type: string
        x-nullable: true
      FileLength:
        description: Gets or sets the length of the file.
        format: int64
        type: integer
      Format:
        description: Gets or sets the format.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Theme:
        description: Gets or sets the theme.
        type: string
        x-nullable: true
    type: object
  ImageFormat:
    description: Enum ImageOutputFormat.
    enum:
      - Bmp
      - Gif
      - Jpg
      - Png
      - Webp
    type: string
  ImageInfo:
    additionalProperties: false
    description: Class ImageInfo.
    properties:
      BlurHash:
        description: Gets or sets the blurhash.
        type: string
        x-nullable: true
      Height:
        description: Gets or sets the height.
        format: int32
        type: integer
        x-nullable: true
      ImageIndex:
        description: Gets or sets the index of the image.
        format: int32
        type: integer
        x-nullable: true
      ImageTag:
        description: Gets or sets the image tag.
        type: string
        x-nullable: true
      ImageType:
        $ref: '#/definitions/ImageType'
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      Size:
        description: Gets or sets the size.
        format: int64
        type: integer
      Width:
        description: Gets or sets the width.
        format: int32
        type: integer
        x-nullable: true
    type: object
  ImageOption:
    additionalProperties: false
    properties:
      Limit:
        description: Gets or sets the limit.
        format: int32
        type: integer
      MinWidth:
        description: Gets or sets the minimum width.
        format: int32
        type: integer
      Type:
        $ref: '#/definitions/ImageType'
    type: object
  ImageOrientation:
    enum:
      - TopLeft
      - TopRight
      - BottomRight
      - BottomLeft
      - LeftTop
      - RightTop
      - RightBottom
      - LeftBottom
    type: string
  ImageProviderInfo:
    additionalProperties: false
    description: Class ImageProviderInfo.
    properties:
      Name:
        description: Gets the name.
        readOnly: true
        type: string
        x-nullable: true
      SupportedImages:
        description: Gets the supported image types.
        items:
          $ref: '#/definitions/ImageType'
        readOnly: true
        type: array
        x-nullable: true
    type: object
  ImageSavingConvention:
    enum:
      - Legacy
      - Compatible
    type: string
  ImageType:
    description: Enum ImageType.
    enum:
      - Primary
      - Art
      - Backdrop
      - Banner
      - Logo
      - Thumb
      - Disc
      - Box
      - Screenshot
      - Menu
      - Chapter
      - BoxRear
      - Profile
    type: string
  InstallationInfo:
    additionalProperties: false
    description: Class InstallationInfo.
    properties:
      Changelog:
        description: Gets or sets the changelog for this version.
        type: string
        x-nullable: true
      Checksum:
        description: Gets or sets a checksum for the binary.
        type: string
        x-nullable: true
      Guid:
        description: Gets or sets the Id.
        format: uuid
        type: string
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      SourceUrl:
        description: Gets or sets the source URL.
        type: string
        x-nullable: true
      Version:
        $ref: '#/definitions/Version'
    type: object
  IsoType:
    description: Enum IsoType.
    enum:
      - Dvd
      - BluRay
    type: string
  ItemCounts:
    additionalProperties: false
    description: Class LibrarySummary.
    properties:
      AlbumCount:
        description: Gets or sets the album count.
        format: int32
        type: integer
      ArtistCount:
        description: Gets or sets the artist count.
        format: int32
        type: integer
      BookCount:
        description: Gets or sets the book count.
        format: int32
        type: integer
      BoxSetCount:
        description: Gets or sets the box set count.
        format: int32
        type: integer
      EpisodeCount:
        description: Gets or sets the episode count.
        format: int32
        type: integer
      ItemCount:
        description: Gets or sets the item count.
        format: int32
        type: integer
      MovieCount:
        description: Gets or sets the movie count.
        format: int32
        type: integer
      MusicVideoCount:
        description: Gets or sets the music video count.
        format: int32
        type: integer
      ProgramCount:
        description: Gets or sets the program count.
        format: int32
        type: integer
      SeriesCount:
        description: Gets or sets the series count.
        format: int32
        type: integer
      SongCount:
        description: Gets or sets the song count.
        format: int32
        type: integer
      TrailerCount:
        description: Gets or sets the trailer count.
        format: int32
        type: integer
    type: object
  ItemFields:
    description: Used to control the data that gets attached to DtoBaseItems.
    enum:
      - AirTime
      - CanDelete
      - CanDownload
      - ChannelInfo
      - Chapters
      - ChildCount
      - CumulativeRunTimeTicks
      - CustomRating
      - DateCreated
      - DateLastMediaAdded
      - DisplayPreferencesId
      - Etag
      - ExternalUrls
      - Genres
      - HomePageUrl
      - ItemCounts
      - MediaSourceCount
      - MediaSources
      - OriginalTitle
      - Overview
      - ParentId
      - Path
      - People
      - PlayAccess
      - ProductionLocations
      - ProviderIds
      - PrimaryImageAspectRatio
      - RecursiveItemCount
      - Settings
      - ScreenshotImageTags
      - SeriesPrimaryImage
      - SeriesStudio
      - SortName
      - SpecialEpisodeNumbers
      - Studios
      - BasicSyncInfo
      - SyncInfo
      - Taglines
      - Tags
      - RemoteTrailers
      - MediaStreams
      - SeasonUserData
      - ServiceName
      - ThemeSongIds
      - ThemeVideoIds
      - ExternalEtag
      - PresentationUniqueKey
      - InheritedParentalRatingValue
      - ExternalSeriesId
      - SeriesPresentationUniqueKey
      - DateLastRefreshed
      - DateLastSaved
      - RefreshState
      - ChannelImage
      - EnableMediaSourceDisplay
      - Width
      - Height
      - ExtraIds
      - LocalTrailerCount
      - IsHD
      - SpecialFeatureCount
    type: string
  ItemFilter:
    description: Enum ItemFilter.
    enum:
      - IsFolder
      - IsNotFolder
      - IsUnplayed
      - IsPlayed
      - IsFavorite
      - IsResumable
      - Likes
      - Dislikes
      - IsFavoriteOrLikes
    type: string
  JoinGroupRequestDto:
    additionalProperties: false
    description: Class JoinGroupRequestDto.
    properties:
      GroupId:
        description: Gets or sets the group identifier.
        format: uuid
        type: string
    type: object
  KeepUntil:
    enum:
      - UntilDeleted
      - UntilSpaceNeeded
      - UntilWatched
      - UntilDate
    type: string
  LibraryOptionInfoDto:
    additionalProperties: false
    description: Library option info dto.
    properties:
      DefaultEnabled:
        description: Gets or sets a value indicating whether default enabled.
        type: boolean
      Name:
        description: Gets or sets name.
        type: string
        x-nullable: true
    type: object
  LibraryOptions:
    additionalProperties: false
    properties:
      AutomaticRefreshIntervalDays:
        format: int32
        type: integer
      DisabledLocalMetadataReaders:
        items:
          type: string
        type: array
        x-nullable: true
      DisabledSubtitleFetchers:
        items:
          type: string
        type: array
        x-nullable: true
      EnableAutomaticSeriesGrouping:
        type: boolean
      EnableChapterImageExtraction:
        type: boolean
      EnableEmbeddedEpisodeInfos:
        type: boolean
      EnableEmbeddedTitles:
        type: boolean
      EnableInternetProviders:
        type: boolean
      EnablePhotos:
        type: boolean
      EnableRealtimeMonitor:
        type: boolean
      ExtractChapterImagesDuringLibraryScan:
        type: boolean
      LocalMetadataReaderOrder:
        items:
          type: string
        type: array
        x-nullable: true
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataSavers:
        items:
          type: string
        type: array
        x-nullable: true
      PathInfos:
        items:
          $ref: '#/definitions/MediaPathInfo'
        type: array
        x-nullable: true
      PreferredMetadataLanguage:
        description: Gets or sets the preferred metadata language.
        type: string
        x-nullable: true
      RequirePerfectSubtitleMatch:
        type: boolean
      SaveLocalMetadata:
        type: boolean
      SaveSubtitlesWithMedia:
        type: boolean
      SeasonZeroDisplayName:
        type: string
        x-nullable: true
      SkipSubtitlesIfAudioTrackMatches:
        type: boolean
      SkipSubtitlesIfEmbeddedSubtitlesPresent:
        type: boolean
      SubtitleDownloadLanguages:
        items:
          type: string
        type: array
        x-nullable: true
      SubtitleFetcherOrder:
        items:
          type: string
        type: array
        x-nullable: true
      TypeOptions:
        items:
          $ref: '#/definitions/TypeOptions'
        type: array
        x-nullable: true
    type: object
  LibraryOptionsResultDto:
    additionalProperties: false
    description: Library options result dto.
    properties:
      MetadataReaders:
        description: Gets or sets the metadata readers.
        items:
          $ref: '#/definitions/LibraryOptionInfoDto'
        type: array
        x-nullable: true
      MetadataSavers:
        description: Gets or sets the metadata savers.
        items:
          $ref: '#/definitions/LibraryOptionInfoDto'
        type: array
        x-nullable: true
      SubtitleFetchers:
        description: Gets or sets the subtitle fetchers.
        items:
          $ref: '#/definitions/LibraryOptionInfoDto'
        type: array
        x-nullable: true
      TypeOptions:
        description: Gets or sets the type options.
        items:
          $ref: '#/definitions/LibraryTypeOptionsDto'
        type: array
        x-nullable: true
    type: object
  LibraryTypeOptionsDto:
    additionalProperties: false
    description: Library type options dto.
    properties:
      DefaultImageOptions:
        description: Gets or sets the default image options.
        items:
          $ref: '#/definitions/ImageOption'
        type: array
        x-nullable: true
      ImageFetchers:
        description: Gets or sets the image fetchers.
        items:
          $ref: '#/definitions/LibraryOptionInfoDto'
        type: array
        x-nullable: true
      MetadataFetchers:
        description: Gets or sets the metadata fetchers.
        items:
          $ref: '#/definitions/LibraryOptionInfoDto'
        type: array
        x-nullable: true
      SupportedImageTypes:
        description: Gets or sets the supported image types.
        items:
          $ref: '#/definitions/ImageType'
        type: array
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
    type: object
  LibraryUpdateInfo:
    additionalProperties: false
    description: Class LibraryUpdateInfo.
    properties:
      CollectionFolders:
        items:
          type: string
        type: array
        x-nullable: true
      FoldersAddedTo:
        description: Gets or sets the folders added to.
        items:
          type: string
        type: array
        x-nullable: true
      FoldersRemovedFrom:
        description: Gets or sets the folders removed from.
        items:
          type: string
        type: array
        x-nullable: true
      IsEmpty:
        readOnly: true
        type: boolean
      ItemsAdded:
        description: Gets or sets the items added.
        items:
          type: string
        type: array
        x-nullable: true
      ItemsRemoved:
        description: Gets or sets the items removed.
        items:
          type: string
        type: array
        x-nullable: true
      ItemsUpdated:
        description: Gets or sets the items updated.
        items:
          type: string
        type: array
        x-nullable: true
    type: object
  ListingsProviderInfo:
    additionalProperties: false
    properties:
      ChannelMappings:
        items:
          $ref: '#/definitions/NameValuePair'
        type: array
        x-nullable: true
      Country:
        type: string
        x-nullable: true
      EnableAllTuners:
        type: boolean
      EnabledTuners:
        items:
          type: string
        type: array
        x-nullable: true
      Id:
        type: string
        x-nullable: true
      KidsCategories:
        items:
          type: string
        type: array
        x-nullable: true
      ListingsId:
        type: string
        x-nullable: true
      MovieCategories:
        items:
          type: string
        type: array
        x-nullable: true
      MoviePrefix:
        type: string
        x-nullable: true
      NewsCategories:
        items:
          type: string
        type: array
        x-nullable: true
      Password:
        type: string
        x-nullable: true
      Path:
        type: string
        x-nullable: true
      PreferredLanguage:
        type: string
        x-nullable: true
      SportsCategories:
        items:
          type: string
        type: array
        x-nullable: true
      Type:
        type: string
        x-nullable: true
      UserAgent:
        type: string
        x-nullable: true
      Username:
        type: string
        x-nullable: true
      ZipCode:
        type: string
        x-nullable: true
    type: object
  LiveStreamResponse:
    additionalProperties: false
    properties:
      MediaSource:
        $ref: '#/definitions/MediaSourceInfo'
    type: object
  LiveTvInfo:
    additionalProperties: false
    properties:
      EnabledUsers:
        description: Gets or sets the enabled users.
        items:
          type: string
        type: array
        x-nullable: true
      IsEnabled:
        description: Gets or sets a value indicating whether this instance is enabled.
        type: boolean
      Services:
        description: Gets or sets the services.
        items:
          $ref: '#/definitions/LiveTvServiceInfo'
        type: array
        x-nullable: true
    type: object
  LiveTvServiceInfo:
    additionalProperties: false
    description: Class ServiceInfo.
    properties:
      HasUpdateAvailable:
        description: >-
          Gets or sets a value indicating whether this instance has update
          available.
        type: boolean
      HomePageUrl:
        description: Gets or sets the home page URL.
        type: string
        x-nullable: true
      IsVisible:
        description: Gets or sets a value indicating whether this instance is visible.
        type: boolean
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Status:
        $ref: '#/definitions/LiveTvServiceStatus'
      StatusMessage:
        description: Gets or sets the status message.
        type: string
        x-nullable: true
      Tuners:
        items:
          type: string
        type: array
        x-nullable: true
      Version:
        description: Gets or sets the version.
        type: string
        x-nullable: true
    type: object
  LiveTvServiceStatus:
    enum:
      - Ok
      - Unavailable
    type: string
  LocalizationOption:
    additionalProperties: false
    properties:
      Name:
        type: string
        x-nullable: true
      Value:
        type: string
        x-nullable: true
    type: object
  LocationType:
    description: Enum LocationType.
    enum:
      - FileSystem
      - Remote
      - Virtual
      - Offline
    type: string
  LogFile:
    additionalProperties: false
    properties:
      DateCreated:
        description: Gets or sets the date created.
        format: date-time
        type: string
      DateModified:
        description: Gets or sets the date modified.
        format: date-time
        type: string
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Size:
        description: Gets or sets the size.
        format: int64
        type: integer
    type: object
  LogLevel:
    enum:
      - Trace
      - Debug
      - Information
      - Warning
      - Error
      - Critical
      - None
    type: string
  MediaAttachment:
    additionalProperties: false
    description: Class MediaAttachment.
    properties:
      Codec:
        description: Gets or sets the codec.
        type: string
        x-nullable: true
      CodecTag:
        description: Gets or sets the codec tag.
        type: string
        x-nullable: true
      Comment:
        description: Gets or sets the comment.
        type: string
        x-nullable: true
      DeliveryUrl:
        description: Gets or sets the delivery URL.
        type: string
        x-nullable: true
      FileName:
        description: Gets or sets the filename.
        type: string
        x-nullable: true
      Index:
        description: Gets or sets the index.
        format: int32
        type: integer
      MimeType:
        description: Gets or sets the MIME type.
        type: string
        x-nullable: true
    type: object
  MediaEncoderPathDto:
    additionalProperties: false
    description: Media Encoder Path Dto.
    properties:
      Path:
        description: Gets or sets media encoder path.
        type: string
        x-nullable: true
      PathType:
        description: Gets or sets media encoder path type.
        type: string
        x-nullable: true
    type: object
  MediaPathDto:
    additionalProperties: false
    description: Media Path dto.
    properties:
      Name:
        description: Gets or sets the name of the library.
        type: string
      Path:
        description: Gets or sets the path to add.
        type: string
        x-nullable: true
      PathInfo:
        $ref: '#/definitions/MediaPathInfo'
    required:
      - Name
    type: object
  MediaPathInfo:
    additionalProperties: false
    properties:
      NetworkPath:
        type: string
        x-nullable: true
      Path:
        type: string
        x-nullable: true
    type: object
  MediaProtocol:
    enum:
      - File
      - Http
      - Rtmp
      - Rtsp
      - Udp
      - Rtp
      - Ftp
    type: string
  MediaSourceInfo:
    additionalProperties: false
    properties:
      AnalyzeDurationMs:
        format: int32
        type: integer
        x-nullable: true
      Bitrate:
        format: int32
        type: integer
        x-nullable: true
      BufferMs:
        format: int32
        type: integer
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      DefaultAudioStreamIndex:
        format: int32
        type: integer
        x-nullable: true
      DefaultSubtitleStreamIndex:
        format: int32
        type: integer
        x-nullable: true
      ETag:
        type: string
        x-nullable: true
      EncoderPath:
        type: string
        x-nullable: true
      EncoderProtocol:
        $ref: '#/definitions/MediaProtocol'
      Formats:
        items:
          type: string
        type: array
        x-nullable: true
      GenPtsInput:
        type: boolean
      Id:
        type: string
        x-nullable: true
      IgnoreDts:
        type: boolean
      IgnoreIndex:
        type: boolean
      IsInfiniteStream:
        type: boolean
      IsRemote:
        description: Differentiate internet url vs local network.
        type: boolean
      IsoType:
        $ref: '#/definitions/IsoType'
      LiveStreamId:
        type: string
        x-nullable: true
      MediaAttachments:
        items:
          $ref: '#/definitions/MediaAttachment'
        type: array
        x-nullable: true
      MediaStreams:
        items:
          $ref: '#/definitions/MediaStream'
        type: array
        x-nullable: true
      Name:
        type: string
        x-nullable: true
      OpenToken:
        type: string
        x-nullable: true
      Path:
        type: string
        x-nullable: true
      Protocol:
        $ref: '#/definitions/MediaProtocol'
      ReadAtNativeFramerate:
        type: boolean
      RequiredHttpHeaders:
        additionalProperties:
          type: string
        type: object
        x-nullable: true
      RequiresClosing:
        type: boolean
      RequiresLooping:
        type: boolean
      RequiresOpening:
        type: boolean
      RunTimeTicks:
        format: int64
        type: integer
        x-nullable: true
      Size:
        format: int64
        type: integer
        x-nullable: true
      SupportsDirectPlay:
        type: boolean
      SupportsDirectStream:
        type: boolean
      SupportsProbing:
        type: boolean
      SupportsTranscoding:
        type: boolean
      Timestamp:
        $ref: '#/definitions/TransportStreamTimestamp'
      TranscodingContainer:
        type: string
        x-nullable: true
      TranscodingSubProtocol:
        type: string
        x-nullable: true
      TranscodingUrl:
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/MediaSourceType'
      Video3DFormat:
        $ref: '#/definitions/Video3DFormat'
      VideoType:
        $ref: '#/definitions/VideoType'
    type: object
  MediaSourceType:
    enum:
      - Default
      - Grouping
      - Placeholder
    type: string
  MediaStream:
    additionalProperties: false
    description: Class MediaStream.
    properties:
      AspectRatio:
        description: Gets or sets the aspect ratio.
        type: string
        x-nullable: true
      AverageFrameRate:
        description: Gets or sets the average frame rate.
        format: float
        type: number
        x-nullable: true
      BitDepth:
        description: Gets or sets the bit depth.
        format: int32
        type: integer
        x-nullable: true
      BitRate:
        description: Gets or sets the bit rate.
        format: int32
        type: integer
        x-nullable: true
      ChannelLayout:
        description: Gets or sets the channel layout.
        type: string
        x-nullable: true
      Channels:
        description: Gets or sets the channels.
        format: int32
        type: integer
        x-nullable: true
      Codec:
        description: Gets or sets the codec.
        type: string
        x-nullable: true
      CodecTag:
        description: Gets or sets the codec tag.
        type: string
        x-nullable: true
      CodecTimeBase:
        description: Gets or sets the codec time base.
        type: string
        x-nullable: true
      ColorPrimaries:
        description: Gets or sets the color primaries.
        type: string
        x-nullable: true
      ColorRange:
        description: Gets or sets the color range.
        type: string
        x-nullable: true
      ColorSpace:
        description: Gets or sets the color space.
        type: string
        x-nullable: true
      ColorTransfer:
        description: Gets or sets the color transfer.
        type: string
        x-nullable: true
      Comment:
        description: Gets or sets the comment.
        type: string
        x-nullable: true
      DeliveryMethod:
        $ref: '#/definitions/SubtitleDeliveryMethod'
      DeliveryUrl:
        description: Gets or sets the delivery URL.
        type: string
        x-nullable: true
      DisplayTitle:
        readOnly: true
        type: string
        x-nullable: true
      Height:
        description: Gets or sets the height.
        format: int32
        type: integer
        x-nullable: true
      Index:
        description: Gets or sets the index.
        format: int32
        type: integer
      IsAVC:
        type: boolean
        x-nullable: true
      IsAnamorphic:
        description: Gets a value indicating whether this instance is anamorphic.
        type: boolean
        x-nullable: true
      IsDefault:
        description: Gets or sets a value indicating whether this instance is default.
        type: boolean
      IsExternal:
        description: Gets or sets a value indicating whether this instance is external.
        type: boolean
      IsExternalUrl:
        description: Gets or sets a value indicating whether this instance is external URL.
        type: boolean
        x-nullable: true
      IsForced:
        description: Gets or sets a value indicating whether this instance is forced.
        type: boolean
      IsInterlaced:
        description: Gets or sets a value indicating whether this instance is interlaced.
        type: boolean
      IsTextSubtitleStream:
        readOnly: true
        type: boolean
      Language:
        description: Gets or sets the language.
        type: string
        x-nullable: true
      Level:
        description: Gets or sets the level.
        format: double
        type: number
        x-nullable: true
      NalLengthSize:
        type: string
        x-nullable: true
      PacketLength:
        description: Gets or sets the length of the packet.
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the filename.
        type: string
        x-nullable: true
      PixelFormat:
        description: Gets or sets the pixel format.
        type: string
        x-nullable: true
      Profile:
        description: Gets or sets the profile.
        type: string
        x-nullable: true
      RealFrameRate:
        description: Gets or sets the real frame rate.
        format: float
        type: number
        x-nullable: true
      RefFrames:
        description: Gets or sets the reference frames.
        format: int32
        type: integer
        x-nullable: true
      SampleRate:
        description: Gets or sets the sample rate.
        format: int32
        type: integer
        x-nullable: true
      Score:
        description: Gets or sets the score.
        format: int32
        type: integer
        x-nullable: true
      SupportsExternalStream:
        description: 'Gets or sets a value indicating whether [supports external stream].'
        type: boolean
      TimeBase:
        description: Gets or sets the time base.
        type: string
        x-nullable: true
      Title:
        description: Gets or sets the title.
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/MediaStreamType'
      VideoRange:
        description: Gets or sets the video range.
        readOnly: true
        type: string
        x-nullable: true
      Width:
        description: Gets or sets the width.
        format: int32
        type: integer
        x-nullable: true
      localizedDefault:
        type: string
        x-nullable: true
      localizedForced:
        type: string
        x-nullable: true
      localizedUndefined:
        type: string
        x-nullable: true
    type: object
  MediaStreamType:
    description: Enum MediaStreamType.
    enum:
      - Audio
      - Video
      - Subtitle
      - EmbeddedImage
    type: string
  MediaUpdateInfoDto:
    additionalProperties: false
    description: Media Update Info Dto.
    properties:
      Path:
        description: Gets or sets media path.
        type: string
        x-nullable: true
      UpdateType:
        description: "Gets or sets media update type.\r\nCreated, Modified, Deleted."
        type: string
        x-nullable: true
    type: object
  MediaUrl:
    additionalProperties: false
    properties:
      Name:
        type: string
        x-nullable: true
      Url:
        type: string
        x-nullable: true
    type: object
  MetadataEditorInfo:
    additionalProperties: false
    properties:
      ContentType:
        type: string
        x-nullable: true
      ContentTypeOptions:
        items:
          $ref: '#/definitions/NameValuePair'
        type: array
        x-nullable: true
      Countries:
        items:
          $ref: '#/definitions/CountryInfo'
        type: array
        x-nullable: true
      Cultures:
        items:
          $ref: '#/definitions/CultureDto'
        type: array
        x-nullable: true
      ExternalIdInfos:
        items:
          $ref: '#/definitions/ExternalIdInfo'
        type: array
        x-nullable: true
      ParentalRatingOptions:
        items:
          $ref: '#/definitions/ParentalRating'
        type: array
        x-nullable: true
    type: object
  MetadataField:
    description: Enum MetadataFields.
    enum:
      - Cast
      - Genres
      - ProductionLocations
      - Studios
      - Tags
      - Name
      - Overview
      - Runtime
      - OfficialRating
    type: string
  MetadataOptions:
    additionalProperties: false
    description: Class MetadataOptions.
    properties:
      DisabledImageFetchers:
        items:
          type: string
        type: array
        x-nullable: true
      DisabledMetadataFetchers:
        items:
          type: string
        type: array
        x-nullable: true
      DisabledMetadataSavers:
        items:
          type: string
        type: array
        x-nullable: true
      ImageFetcherOrder:
        items:
          type: string
        type: array
        x-nullable: true
      ItemType:
        type: string
        x-nullable: true
      LocalMetadataReaderOrder:
        items:
          type: string
        type: array
        x-nullable: true
      MetadataFetcherOrder:
        items:
          type: string
        type: array
        x-nullable: true
    type: object
  MetadataRefreshMode:
    enum:
      - None
      - ValidationOnly
      - Default
      - FullRefresh
    type: string
  MovePlaylistItemRequestDto:
    additionalProperties: false
    description: Class MovePlaylistItemRequestDto.
    properties:
      NewIndex:
        description: Gets or sets the new position.
        format: int32
        type: integer
      PlaylistItemId:
        description: Gets or sets the playlist identifier of the item.
        format: uuid
        type: string
    type: object
  MovieInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  MovieInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/MovieInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  MusicVideoInfo:
    additionalProperties: false
    properties:
      Artists:
        items:
          type: string
        type: array
        x-nullable: true
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  MusicVideoInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/MusicVideoInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  NameGuidPair:
    additionalProperties: false
    properties:
      Id:
        format: uuid
        type: string
      Name:
        type: string
        x-nullable: true
    type: object
  NameIdPair:
    additionalProperties: false
    properties:
      Id:
        description: Gets or sets the identifier.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
    type: object
  NameValuePair:
    additionalProperties: false
    properties:
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Value:
        description: Gets or sets the value.
        type: string
        x-nullable: true
    type: object
  NewGroupRequestDto:
    additionalProperties: false
    description: Class NewGroupRequestDto.
    properties:
      GroupName:
        description: Gets or sets the group name.
        type: string
        x-nullable: true
    type: object
  NextItemRequestDto:
    additionalProperties: false
    description: Class NextItemRequestDto.
    properties:
      PlaylistItemId:
        description: Gets or sets the playing item identifier.
        format: uuid
        type: string
    type: object
  NotificationDto:
    additionalProperties: false
    description: The notification DTO.
    properties:
      Date:
        description: Gets or sets the notification date.
        format: date-time
        type: string
      Description:
        description: >-
          Gets or sets the notification's description. Defaults to an empty
          string.
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the notification ID. Defaults to an empty string.
        type: string
        x-nullable: true
      IsRead:
        description: >-
          Gets or sets a value indicating whether the notification has been
          read. Defaults to false.
        type: boolean
      Level:
        $ref: '#/definitions/NotificationLevel'
      Name:
        description: Gets or sets the notification's name. Defaults to an empty string.
        type: string
        x-nullable: true
      Url:
        description: Gets or sets the notification's URL. Defaults to an empty string.
        type: string
        x-nullable: true
      UserId:
        description: Gets or sets the notification's user ID. Defaults to an empty string.
        type: string
        x-nullable: true
    type: object
  NotificationLevel:
    enum:
      - Normal
      - Warning
      - Error
    type: string
  NotificationResultDto:
    additionalProperties: false
    description: A list of notifications with the total record count for pagination.
    properties:
      Notifications:
        description: Gets or sets the current page of notifications.
        items:
          $ref: '#/definitions/NotificationDto'
        type: array
        x-nullable: true
      TotalRecordCount:
        description: Gets or sets the total number of notifications.
        format: int32
        type: integer
    type: object
  NotificationTypeInfo:
    additionalProperties: false
    properties:
      Category:
        type: string
        x-nullable: true
      Enabled:
        type: boolean
      IsBasedOnUserEvent:
        type: boolean
      Name:
        type: string
        x-nullable: true
      Type:
        type: string
        x-nullable: true
    type: object
  NotificationsSummaryDto:
    additionalProperties: false
    description: The notification summary DTO.
    properties:
      MaxUnreadNotificationLevel:
        $ref: '#/definitions/NotificationLevel'
      UnreadCount:
        description: Gets or sets the number of unread notifications.
        format: int32
        type: integer
    type: object
  ObjectGroupUpdate:
    additionalProperties: false
    description: Class GroupUpdate.
    properties:
      Data:
        description: Gets the update data.
        readOnly: true
        x-nullable: true
      GroupId:
        description: Gets the group identifier.
        format: uuid
        readOnly: true
        type: string
      Type:
        $ref: '#/definitions/GroupUpdateType'
    type: object
  OpenLiveStreamDto:
    additionalProperties: false
    description: Open live stream dto.
    properties:
      AudioStreamIndex:
        description: Gets or sets the audio stream index.
        format: int32
        type: integer
        x-nullable: true
      DeviceProfile:
        $ref: '#/definitions/DeviceProfile'
      DirectPlayProtocols:
        description: Gets or sets the device play protocols.
        items:
          $ref: '#/definitions/MediaProtocol'
        type: array
        x-nullable: true
      EnableDirectPlay:
        description: Gets or sets a value indicating whether to enable direct play.
        type: boolean
        x-nullable: true
      EnableDirectStream:
        description: Gets or sets a value indicating whether to enale direct stream.
        type: boolean
        x-nullable: true
      ItemId:
        description: Gets or sets the item id.
        format: uuid
        type: string
        x-nullable: true
      MaxAudioChannels:
        description: Gets or sets the max audio channels.
        format: int32
        type: integer
        x-nullable: true
      MaxStreamingBitrate:
        description: Gets or sets the max streaming bitrate.
        format: int32
        type: integer
        x-nullable: true
      OpenToken:
        description: Gets or sets the open token.
        type: string
        x-nullable: true
      PlaySessionId:
        description: Gets or sets the play session id.
        type: string
        x-nullable: true
      StartTimeTicks:
        description: Gets or sets the start time in ticks.
        format: int64
        type: integer
        x-nullable: true
      SubtitleStreamIndex:
        description: Gets or sets the subtitle stream index.
        format: int32
        type: integer
        x-nullable: true
      UserId:
        description: Gets or sets the user id.
        format: uuid
        type: string
        x-nullable: true
    type: object
  PackageInfo:
    additionalProperties: false
    description: Class PackageInfo.
    properties:
      category:
        description: Gets or sets the category.
        type: string
        x-nullable: true
      description:
        description: >-
          Gets or sets a long description of the plugin containing features or
          helpful explanations.
        type: string
        x-nullable: true
      guid:
        description: "Gets or sets the guid of the assembly associated with this plugin.\r\nThis is used to identify the proper item for automatic updates."
        type: string
        x-nullable: true
      imageUrl:
        description: Gets or sets the image url for the package.
        type: string
        x-nullable: true
      name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      overview:
        description: Gets or sets a short overview of what the plugin does.
        type: string
        x-nullable: true
      owner:
        description: Gets or sets the owner.
        type: string
        x-nullable: true
      versions:
        description: Gets or sets the versions.
        items:
          $ref: '#/definitions/VersionInfo'
        type: array
        x-nullable: true
    type: object
  ParentalRating:
    additionalProperties: false
    description: Class ParentalRating.
    properties:
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Value:
        description: Gets or sets the value.
        format: int32
        type: integer
    type: object
  PathSubstitution:
    additionalProperties: false
    description: Defines the MediaBrowser.Model.Configuration.PathSubstitution.
    properties:
      From:
        description: Gets or sets the value to substitute.
        type: string
        x-nullable: true
      To:
        description: Gets or sets the value to substitution with.
        type: string
        x-nullable: true
    type: object
  PersonLookupInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  PersonLookupInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/PersonLookupInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  PinRedeemResult:
    additionalProperties: false
    properties:
      Success:
        description: >-
          Gets or sets a value indicating whether this
          MediaBrowser.Model.Users.PinRedeemResult is success.
        type: boolean
      UsersReset:
        description: Gets or sets the users reset.
        items:
          type: string
        type: array
        x-nullable: true
    type: object
  PingRequestDto:
    additionalProperties: false
    description: Class PingRequestDto.
    properties:
      Ping:
        description: Gets or sets the ping time.
        format: int64
        type: integer
    type: object
  PlayAccess:
    enum:
      - Full
      - None
    type: string
  PlayCommand:
    description: Enum PlayCommand.
    enum:
      - PlayNow
      - PlayNext
      - PlayLast
      - PlayInstantMix
      - PlayShuffle
    type: string
  PlayMethod:
    enum:
      - Transcode
      - DirectStream
      - DirectPlay
    type: string
  PlayRequest:
    additionalProperties: false
    description: Class PlayRequest.
    properties:
      AudioStreamIndex:
        format: int32
        type: integer
        x-nullable: true
      ControllingUserId:
        description: Gets or sets the controlling user identifier.
        format: uuid
        type: string
      ItemIds:
        description: Gets or sets the item ids.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      MediaSourceId:
        type: string
        x-nullable: true
      PlayCommand:
        $ref: '#/definitions/PlayCommand'
      StartIndex:
        format: int32
        type: integer
        x-nullable: true
      StartPositionTicks:
        description: >-
          Gets or sets the start position ticks that the first item should be
          played at.
        format: int64
        type: integer
        x-nullable: true
      SubtitleStreamIndex:
        format: int32
        type: integer
        x-nullable: true
    type: object
  PlayRequestDto:
    additionalProperties: false
    description: Class PlayRequestDto.
    properties:
      PlayingItemPosition:
        description: Gets or sets the position of the playing item in the queue.
        format: int32
        type: integer
      PlayingQueue:
        description: Gets or sets the playing queue.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      StartPositionTicks:
        description: Gets or sets the start position ticks.
        format: int64
        type: integer
    type: object
  PlaybackErrorCode:
    enum:
      - NotAllowed
      - NoCompatibleStream
      - RateLimitExceeded
    type: string
  PlaybackInfoDto:
    additionalProperties: false
    description: Plabyback info dto.
    properties:
      AllowAudioStreamCopy:
        description: Gets or sets a value indicating whether to allow audio stream copy.
        type: boolean
        x-nullable: true
      AllowVideoStreamCopy:
        description: Gets or sets a value indicating whether to enable video stream copy.
        type: boolean
        x-nullable: true
      AudioStreamIndex:
        description: Gets or sets the audio stream index.
        format: int32
        type: integer
        x-nullable: true
      AutoOpenLiveStream:
        description: Gets or sets a value indicating whether to auto open the live stream.
        type: boolean
        x-nullable: true
      DeviceProfile:
        $ref: '#/definitions/DeviceProfile'
      EnableDirectPlay:
        description: Gets or sets a value indicating whether to enable direct play.
        type: boolean
        x-nullable: true
      EnableDirectStream:
        description: Gets or sets a value indicating whether to enable direct stream.
        type: boolean
        x-nullable: true
      EnableTranscoding:
        description: Gets or sets a value indicating whether to enable transcoding.
        type: boolean
        x-nullable: true
      LiveStreamId:
        description: Gets or sets the live stream id.
        type: string
        x-nullable: true
      MaxAudioChannels:
        description: Gets or sets the max audio channels.
        format: int32
        type: integer
        x-nullable: true
      MaxStreamingBitrate:
        description: Gets or sets the max streaming bitrate.
        format: int32
        type: integer
        x-nullable: true
      MediaSourceId:
        description: Gets or sets the media source id.
        type: string
        x-nullable: true
      StartTimeTicks:
        description: Gets or sets the start time in ticks.
        format: int64
        type: integer
        x-nullable: true
      SubtitleStreamIndex:
        description: Gets or sets the subtitle stream index.
        format: int32
        type: integer
        x-nullable: true
      UserId:
        description: Gets or sets the playback userId.
        format: uuid
        type: string
        x-nullable: true
    type: object
  PlaybackInfoResponse:
    additionalProperties: false
    description: Class PlaybackInfoResponse.
    properties:
      ErrorCode:
        $ref: '#/definitions/PlaybackErrorCode'
      MediaSources:
        description: Gets or sets the media sources.
        items:
          $ref: '#/definitions/MediaSourceInfo'
        type: array
        x-nullable: true
      PlaySessionId:
        description: Gets or sets the play session identifier.
        type: string
        x-nullable: true
    type: object
  PlaybackProgressInfo:
    additionalProperties: false
    description: Class PlaybackProgressInfo.
    properties:
      AspectRatio:
        type: string
        x-nullable: true
      AudioStreamIndex:
        description: Gets or sets the index of the audio stream.
        format: int32
        type: integer
        x-nullable: true
      Brightness:
        format: int32
        type: integer
        x-nullable: true
      CanSeek:
        description: Gets or sets a value indicating whether this instance can seek.
        type: boolean
      IsMuted:
        description: Gets or sets a value indicating whether this instance is muted.
        type: boolean
      IsPaused:
        description: Gets or sets a value indicating whether this instance is paused.
        type: boolean
      Item:
        $ref: '#/definitions/BaseItemDto'
      ItemId:
        description: Gets or sets the item identifier.
        format: uuid
        type: string
      LiveStreamId:
        description: Gets or sets the live stream identifier.
        type: string
        x-nullable: true
      MediaSourceId:
        description: Gets or sets the media version identifier.
        type: string
        x-nullable: true
      NowPlayingQueue:
        items:
          $ref: '#/definitions/QueueItem'
        type: array
        x-nullable: true
      PlayMethod:
        $ref: '#/definitions/PlayMethod'
      PlaySessionId:
        description: Gets or sets the play session identifier.
        type: string
        x-nullable: true
      PlaybackStartTimeTicks:
        format: int64
        type: integer
        x-nullable: true
      PlaylistItemId:
        type: string
        x-nullable: true
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
        x-nullable: true
      RepeatMode:
        $ref: '#/definitions/RepeatMode'
      SessionId:
        description: Gets or sets the session id.
        type: string
        x-nullable: true
      SubtitleStreamIndex:
        description: Gets or sets the index of the subtitle stream.
        format: int32
        type: integer
        x-nullable: true
      VolumeLevel:
        description: Gets or sets the volume level.
        format: int32
        type: integer
        x-nullable: true
    type: object
  PlaybackStartInfo:
    additionalProperties: false
    description: Class PlaybackStartInfo.
    properties:
      AspectRatio:
        type: string
        x-nullable: true
      AudioStreamIndex:
        description: Gets or sets the index of the audio stream.
        format: int32
        type: integer
        x-nullable: true
      Brightness:
        format: int32
        type: integer
        x-nullable: true
      CanSeek:
        description: Gets or sets a value indicating whether this instance can seek.
        type: boolean
      IsMuted:
        description: Gets or sets a value indicating whether this instance is muted.
        type: boolean
      IsPaused:
        description: Gets or sets a value indicating whether this instance is paused.
        type: boolean
      Item:
        $ref: '#/definitions/BaseItemDto'
      ItemId:
        description: Gets or sets the item identifier.
        format: uuid
        type: string
      LiveStreamId:
        description: Gets or sets the live stream identifier.
        type: string
        x-nullable: true
      MediaSourceId:
        description: Gets or sets the media version identifier.
        type: string
        x-nullable: true
      NowPlayingQueue:
        items:
          $ref: '#/definitions/QueueItem'
        type: array
        x-nullable: true
      PlayMethod:
        $ref: '#/definitions/PlayMethod'
      PlaySessionId:
        description: Gets or sets the play session identifier.
        type: string
        x-nullable: true
      PlaybackStartTimeTicks:
        format: int64
        type: integer
        x-nullable: true
      PlaylistItemId:
        type: string
        x-nullable: true
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
        x-nullable: true
      RepeatMode:
        $ref: '#/definitions/RepeatMode'
      SessionId:
        description: Gets or sets the session id.
        type: string
        x-nullable: true
      SubtitleStreamIndex:
        description: Gets or sets the index of the subtitle stream.
        format: int32
        type: integer
        x-nullable: true
      VolumeLevel:
        description: Gets or sets the volume level.
        format: int32
        type: integer
        x-nullable: true
    type: object
  PlaybackStopInfo:
    additionalProperties: false
    description: Class PlaybackStopInfo.
    properties:
      Failed:
        description: >-
          Gets or sets a value indicating whether this
          MediaBrowser.Model.Session.PlaybackStopInfo is failed.
        type: boolean
      Item:
        $ref: '#/definitions/BaseItemDto'
      ItemId:
        description: Gets or sets the item identifier.
        format: uuid
        type: string
      LiveStreamId:
        description: Gets or sets the live stream identifier.
        type: string
        x-nullable: true
      MediaSourceId:
        description: Gets or sets the media version identifier.
        type: string
        x-nullable: true
      NextMediaType:
        type: string
        x-nullable: true
      NowPlayingQueue:
        items:
          $ref: '#/definitions/QueueItem'
        type: array
        x-nullable: true
      PlaySessionId:
        description: Gets or sets the play session identifier.
        type: string
        x-nullable: true
      PlaylistItemId:
        type: string
        x-nullable: true
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
        x-nullable: true
      SessionId:
        description: Gets or sets the session id.
        type: string
        x-nullable: true
    type: object
  PlayerStateInfo:
    additionalProperties: false
    properties:
      AudioStreamIndex:
        description: Gets or sets the index of the now playing audio stream.
        format: int32
        type: integer
        x-nullable: true
      CanSeek:
        description: Gets or sets a value indicating whether this instance can seek.
        type: boolean
      IsMuted:
        description: Gets or sets a value indicating whether this instance is muted.
        type: boolean
      IsPaused:
        description: Gets or sets a value indicating whether this instance is paused.
        type: boolean
      MediaSourceId:
        description: Gets or sets the now playing media version identifier.
        type: string
        x-nullable: true
      PlayMethod:
        $ref: '#/definitions/PlayMethod'
      PositionTicks:
        description: Gets or sets the now playing position ticks.
        format: int64
        type: integer
        x-nullable: true
      RepeatMode:
        $ref: '#/definitions/RepeatMode'
      SubtitleStreamIndex:
        description: Gets or sets the index of the now playing subtitle stream.
        format: int32
        type: integer
        x-nullable: true
      VolumeLevel:
        description: Gets or sets the volume level.
        format: int32
        type: integer
        x-nullable: true
    type: object
  PlaylistCreationResult:
    additionalProperties: false
    properties:
      Id:
        readOnly: true
        type: string
        x-nullable: true
    type: object
  PlaystateCommand:
    description: Enum PlaystateCommand.
    enum:
      - Stop
      - Pause
      - Unpause
      - NextTrack
      - PreviousTrack
      - Seek
      - Rewind
      - FastForward
      - PlayPause
    type: string
  PlaystateRequest:
    additionalProperties: false
    properties:
      Command:
        $ref: '#/definitions/PlaystateCommand'
      ControllingUserId:
        description: Gets or sets the controlling user identifier.
        type: string
        x-nullable: true
      SeekPositionTicks:
        format: int64
        type: integer
        x-nullable: true
    type: object
  PluginInfo:
    additionalProperties: false
    description: >-
      This is a serializable stub class that is used by the api to provide
      information about installed plugins.
    properties:
      CanUninstall:
        description: Gets or sets a value indicating whether the plugin can be uninstalled.
        type: boolean
      ConfigurationFileName:
        description: Gets or sets the name of the configuration file.
        type: string
        x-nullable: true
      Description:
        description: Gets or sets the description.
        type: string
        x-nullable: true
      HasImage:
        description: Gets or sets a value indicating whether this plugin has a valid image.
        type: boolean
      Id:
        description: Gets or sets the unique id.
        format: uuid
        type: string
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Status:
        $ref: '#/definitions/PluginStatus'
      Version:
        $ref: '#/definitions/Version'
    type: object
  PluginSecurityInfo:
    additionalProperties: false
    description: Plugin security info.
    properties:
      IsMbSupporter:
        description: Gets or sets a value indicating whether is mb supporter.
        type: boolean
      SupporterKey:
        description: Gets or sets the supporter key.
        type: string
        x-nullable: true
    type: object
  PluginStatus:
    description: Plugin load status.
    enum:
      - Active
      - Restart
      - Deleted
      - Superceded
      - Malfunctioned
      - NotSupported
      - Disabled
    type: string
  PreviousItemRequestDto:
    additionalProperties: false
    description: Class PreviousItemRequestDto.
    properties:
      PlaylistItemId:
        description: Gets or sets the playing item identifier.
        format: uuid
        type: string
    type: object
  ProblemDetails:
    additionalProperties: {}
    properties:
      detail:
        type: string
        x-nullable: true
      instance:
        type: string
        x-nullable: true
      status:
        format: int32
        type: integer
        x-nullable: true
      title:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  ProfileCondition:
    additionalProperties: false
    properties:
      Condition:
        $ref: '#/definitions/ProfileConditionType'
      IsRequired:
        type: boolean
      Property:
        $ref: '#/definitions/ProfileConditionValue'
      Value:
        type: string
        x-nullable: true
    type: object
  ProfileConditionType:
    enum:
      - Equals
      - NotEquals
      - LessThanEqual
      - GreaterThanEqual
      - EqualsAny
    type: string
  ProfileConditionValue:
    enum:
      - AudioChannels
      - AudioBitrate
      - AudioProfile
      - Width
      - Height
      - Has64BitOffsets
      - PacketLength
      - VideoBitDepth
      - VideoBitrate
      - VideoFramerate
      - VideoLevel
      - VideoProfile
      - VideoTimestamp
      - IsAnamorphic
      - RefFrames
      - NumAudioStreams
      - NumVideoStreams
      - IsSecondaryAudio
      - VideoCodecTag
      - IsAvc
      - IsInterlaced
      - AudioSampleRate
      - AudioBitDepth
    type: string
  ProgramAudio:
    enum:
      - Mono
      - Stereo
      - Dolby
      - DolbyDigital
      - Thx
      - Atmos
    type: string
  PublicSystemInfo:
    additionalProperties: false
    properties:
      Id:
        description: Gets or sets the id.
        type: string
        x-nullable: true
      LocalAddress:
        description: Gets or sets the local address.
        type: string
        x-nullable: true
      OperatingSystem:
        description: Gets or sets the operating system.
        type: string
        x-nullable: true
      ProductName:
        description: Gets or sets the product name. This is the AssemblyProduct name.
        type: string
        x-nullable: true
      ServerName:
        description: Gets or sets the name of the server.
        type: string
        x-nullable: true
      StartupWizardCompleted:
        description: >-
          Gets or sets a value indicating whether the startup wizard is
          completed.
        type: boolean
        x-nullable: true
      Version:
        description: Gets or sets the server version.
        type: string
        x-nullable: true
    type: object
  QueryFilters:
    additionalProperties: false
    properties:
      Genres:
        items:
          $ref: '#/definitions/NameGuidPair'
        type: array
        x-nullable: true
      Tags:
        items:
          type: string
        type: array
        x-nullable: true
    type: object
  QueryFiltersLegacy:
    additionalProperties: false
    properties:
      Genres:
        items:
          type: string
        type: array
        x-nullable: true
      OfficialRatings:
        items:
          type: string
        type: array
        x-nullable: true
      Tags:
        items:
          type: string
        type: array
        x-nullable: true
      Years:
        items:
          format: int32
          type: integer
        type: array
        x-nullable: true
    type: object
  QueueItem:
    additionalProperties: false
    properties:
      Id:
        format: uuid
        type: string
      PlaylistItemId:
        type: string
        x-nullable: true
    type: object
  QueueRequestDto:
    additionalProperties: false
    description: Class QueueRequestDto.
    properties:
      ItemIds:
        description: Gets or sets the items to enqueue.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      Mode:
        $ref: '#/definitions/GroupQueueMode'
    type: object
  QuickConnectDto:
    additionalProperties: false
    description: The quick connect request body.
    properties:
      Token:
        description: Gets or sets the quick connect token.
        type: string
    required:
      - Token
    type: object
  QuickConnectResult:
    additionalProperties: false
    description: Stores the result of an incoming quick connect request.
    properties:
      Authenticated:
        description: Gets a value indicating whether this request is authorized.
        readOnly: true
        type: boolean
      Authentication:
        description: Gets or sets the private access token.
        type: string
        x-nullable: true
      Code:
        description: >-
          Gets or sets the user facing code used so the user can quickly
          differentiate this request from others.
        type: string
        x-nullable: true
      DateAdded:
        description: Gets or sets the DateTime that this request was created.
        format: date-time
        type: string
        x-nullable: true
      Error:
        description: Gets or sets an error message.
        type: string
        x-nullable: true
      Secret:
        description: >-
          Gets or sets the secret value used to uniquely identify this request.
          Can be used to retrieve authentication information.
        type: string
        x-nullable: true
    type: object
  QuickConnectState:
    description: Quick connect state.
    enum:
      - Unavailable
      - Available
      - Active
    type: string
  RatingType:
    enum:
      - Score
      - Likes
    type: string
  ReadyRequestDto:
    additionalProperties: false
    description: Class ReadyRequest.
    properties:
      IsPlaying:
        description: >-
          Gets or sets a value indicating whether the client playback is
          unpaused.
        type: boolean
      PlaylistItemId:
        description: Gets or sets the playlist item identifier of the playing item.
        format: uuid
        type: string
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
      When:
        description: Gets or sets when the request has been made by the client.
        format: date-time
        type: string
    type: object
  RecommendationDto:
    additionalProperties: false
    properties:
      BaselineItemName:
        type: string
        x-nullable: true
      CategoryId:
        format: uuid
        type: string
      Items:
        items:
          $ref: '#/definitions/BaseItemDto'
        type: array
        x-nullable: true
      RecommendationType:
        $ref: '#/definitions/RecommendationType'
    type: object
  RecommendationType:
    enum:
      - SimilarToRecentlyPlayed
      - SimilarToLikedItem
      - HasDirectorFromRecentlyPlayed
      - HasActorFromRecentlyPlayed
      - HasLikedDirector
      - HasLikedActor
    type: string
  RecordingStatus:
    enum:
      - New
      - InProgress
      - Completed
      - Cancelled
      - ConflictedOk
      - ConflictedNotOk
      - Error
    type: string
  RemoteImageInfo:
    additionalProperties: false
    description: Class RemoteImageInfo.
    properties:
      CommunityRating:
        description: Gets or sets the community rating.
        format: double
        type: number
        x-nullable: true
      Height:
        description: Gets or sets the height.
        format: int32
        type: integer
        x-nullable: true
      Language:
        description: Gets or sets the language.
        type: string
        x-nullable: true
      ProviderName:
        description: Gets or sets the name of the provider.
        type: string
        x-nullable: true
      RatingType:
        $ref: '#/definitions/RatingType'
      ThumbnailUrl:
        description: Gets a url used for previewing a smaller version.
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/ImageType'
      Url:
        description: Gets or sets the URL.
        type: string
        x-nullable: true
      VoteCount:
        description: Gets or sets the vote count.
        format: int32
        type: integer
        x-nullable: true
      Width:
        description: Gets or sets the width.
        format: int32
        type: integer
        x-nullable: true
    type: object
  RemoteImageResult:
    additionalProperties: false
    description: Class RemoteImageResult.
    properties:
      Images:
        description: Gets or sets the images.
        items:
          $ref: '#/definitions/RemoteImageInfo'
        type: array
        x-nullable: true
      Providers:
        description: Gets or sets the providers.
        items:
          type: string
        type: array
        x-nullable: true
      TotalRecordCount:
        description: Gets or sets the total record count.
        format: int32
        type: integer
    type: object
  RemoteSearchResult:
    additionalProperties: false
    properties:
      AlbumArtist:
        $ref: '#/definitions/RemoteSearchResult'
      Artists:
        items:
          $ref: '#/definitions/RemoteSearchResult'
        type: array
        x-nullable: true
      ImageUrl:
        type: string
        x-nullable: true
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IndexNumberEnd:
        format: int32
        type: integer
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Overview:
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProductionYear:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      SearchProviderName:
        type: string
        x-nullable: true
    type: object
  RemoteSubtitleInfo:
    additionalProperties: false
    properties:
      Author:
        type: string
        x-nullable: true
      Comment:
        type: string
        x-nullable: true
      CommunityRating:
        format: float
        type: number
        x-nullable: true
      DateCreated:
        format: date-time
        type: string
        x-nullable: true
      DownloadCount:
        format: int32
        type: integer
        x-nullable: true
      Format:
        type: string
        x-nullable: true
      Id:
        type: string
        x-nullable: true
      IsHashMatch:
        type: boolean
        x-nullable: true
      Name:
        type: string
        x-nullable: true
      ProviderName:
        type: string
        x-nullable: true
      ThreeLetterISOLanguageName:
        type: string
        x-nullable: true
    type: object
  RemoveFromPlaylistRequestDto:
    additionalProperties: false
    description: Class RemoveFromPlaylistRequestDto.
    properties:
      PlaylistItemIds:
        description: Gets or sets the playlist identifiers ot the items.
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
    type: object
  RepeatMode:
    enum:
      - RepeatNone
      - RepeatAll
      - RepeatOne
    type: string
  RepositoryInfo:
    additionalProperties: false
    description: Class RepositoryInfo.
    properties:
      Enabled:
        description: Gets or sets a value indicating whether the repository is enabled.
        type: boolean
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Url:
        description: Gets or sets the URL.
        type: string
        x-nullable: true
    type: object
  ResponseProfile:
    additionalProperties: false
    properties:
      AudioCodec:
        type: string
        x-nullable: true
      Conditions:
        items:
          $ref: '#/definitions/ProfileCondition'
        type: array
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      MimeType:
        type: string
        x-nullable: true
      OrgPn:
        type: string
        x-nullable: true
      Type:
        $ref: '#/definitions/DlnaProfileType'
      VideoCodec:
        type: string
        x-nullable: true
    type: object
  ScrollDirection:
    description: An enum representing the axis that should be scrolled.
    enum:
      - Horizontal
      - Vertical
    type: string
  SearchHint:
    additionalProperties: false
    description: Class SearchHintResult.
    properties:
      Album:
        description: Gets or sets the album.
        type: string
        x-nullable: true
      AlbumArtist:
        description: Gets or sets the album artist.
        type: string
        x-nullable: true
      AlbumId:
        format: uuid
        type: string
      Artists:
        description: Gets or sets the artists.
        items:
          type: string
        type: array
        x-nullable: true
      BackdropImageItemId:
        description: Gets or sets the backdrop image item identifier.
        type: string
        x-nullable: true
      BackdropImageTag:
        description: Gets or sets the backdrop image tag.
        type: string
        x-nullable: true
      ChannelId:
        description: Gets or sets the channel identifier.
        format: uuid
        type: string
      ChannelName:
        description: Gets or sets the name of the channel.
        type: string
        x-nullable: true
      EndDate:
        format: date-time
        type: string
        x-nullable: true
      EpisodeCount:
        description: Gets or sets the episode count.
        format: int32
        type: integer
        x-nullable: true
      Id:
        format: uuid
        type: string
      IndexNumber:
        description: Gets or sets the index number.
        format: int32
        type: integer
        x-nullable: true
      IsFolder:
        type: boolean
        x-nullable: true
      ItemId:
        description: Gets or sets the item id.
        format: uuid
        type: string
      MatchedTerm:
        description: Gets or sets the matched term.
        type: string
        x-nullable: true
      MediaType:
        description: Gets or sets the type of the media.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        description: Gets or sets the parent index number.
        format: int32
        type: integer
        x-nullable: true
      PrimaryImageAspectRatio:
        description: Gets or sets the primary image aspect ratio.
        format: double
        type: number
        x-nullable: true
      PrimaryImageTag:
        description: Gets or sets the image tag.
        type: string
        x-nullable: true
      ProductionYear:
        description: Gets or sets the production year.
        format: int32
        type: integer
        x-nullable: true
      RunTimeTicks:
        description: Gets or sets the run time ticks.
        format: int64
        type: integer
        x-nullable: true
      Series:
        description: Gets or sets the series.
        type: string
        x-nullable: true
      SongCount:
        description: Gets or sets the song count.
        format: int32
        type: integer
        x-nullable: true
      StartDate:
        format: date-time
        type: string
        x-nullable: true
      Status:
        type: string
        x-nullable: true
      ThumbImageItemId:
        description: Gets or sets the thumb image item identifier.
        type: string
        x-nullable: true
      ThumbImageTag:
        description: Gets or sets the thumb image tag.
        type: string
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
    type: object
  SearchHintResult:
    additionalProperties: false
    description: Class SearchHintResult.
    properties:
      SearchHints:
        description: Gets or sets the search hints.
        items:
          $ref: '#/definitions/SearchHint'
        type: array
        x-nullable: true
      TotalRecordCount:
        description: Gets or sets the total record count.
        format: int32
        type: integer
    type: object
  SeekRequestDto:
    additionalProperties: false
    description: Class SeekRequestDto.
    properties:
      PositionTicks:
        description: Gets or sets the position ticks.
        format: int64
        type: integer
    type: object
  SendCommand:
    additionalProperties: false
    description: Class SendCommand.
    properties:
      Command:
        $ref: '#/definitions/SendCommandType'
      EmittedAt:
        description: Gets the UTC time when this command has been emitted.
        format: date-time
        readOnly: true
        type: string
      GroupId:
        description: Gets the group identifier.
        format: uuid
        readOnly: true
        type: string
      PlaylistItemId:
        description: Gets the playlist identifier of the playing item.
        format: uuid
        readOnly: true
        type: string
      PositionTicks:
        description: Gets the position ticks.
        format: int64
        readOnly: true
        type: integer
        x-nullable: true
      When:
        description: Gets or sets the UTC time when to execute the command.
        format: date-time
        type: string
    type: object
  SendCommandType:
    description: Enum SendCommandType.
    enum:
      - Unpause
      - Pause
      - Stop
      - Seek
    type: string
  SeriesInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  SeriesInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/SeriesInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  SeriesStatus:
    description: Enum SeriesStatus.
    enum:
      - Continuing
      - Ended
    type: string
  SeriesTimerInfoDto:
    additionalProperties: false
    description: Class SeriesTimerInfoDto.
    properties:
      ChannelId:
        description: ChannelId of the recording.
        format: uuid
        type: string
      ChannelName:
        description: ChannelName of the recording.
        type: string
        x-nullable: true
      ChannelPrimaryImageTag:
        type: string
        x-nullable: true
      DayPattern:
        $ref: '#/definitions/DayPattern'
      Days:
        description: Gets or sets the days.
        items:
          $ref: '#/definitions/DayOfWeek'
        type: array
        x-nullable: true
      EndDate:
        description: 'The end date of the recording, in UTC.'
        format: date-time
        type: string
      ExternalChannelId:
        description: Gets or sets the external channel identifier.
        type: string
        x-nullable: true
      ExternalId:
        description: Gets or sets the external identifier.
        type: string
        x-nullable: true
      ExternalProgramId:
        description: Gets or sets the external program identifier.
        type: string
        x-nullable: true
      Id:
        description: Id of the recording.
        type: string
        x-nullable: true
      ImageTags:
        additionalProperties:
          type: string
        description: Gets or sets the image tags.
        type: object
        x-nullable: true
      IsPostPaddingRequired:
        description: >-
          Gets or sets a value indicating whether this instance is post padding
          required.
        type: boolean
      IsPrePaddingRequired:
        description: >-
          Gets or sets a value indicating whether this instance is pre padding
          required.
        type: boolean
      KeepUntil:
        $ref: '#/definitions/KeepUntil'
      KeepUpTo:
        format: int32
        type: integer
      Name:
        description: Name of the recording.
        type: string
        x-nullable: true
      Overview:
        description: Description of the recording.
        type: string
        x-nullable: true
      ParentBackdropImageTags:
        description: Gets or sets the parent backdrop image tags.
        items:
          type: string
        type: array
        x-nullable: true
      ParentBackdropItemId:
        description: >-
          If the item does not have any backdrops, this will hold the Id of the
          Parent that has one.
        type: string
        x-nullable: true
      ParentPrimaryImageItemId:
        description: Gets or sets the parent primary image item identifier.
        type: string
        x-nullable: true
      ParentPrimaryImageTag:
        description: Gets or sets the parent primary image tag.
        type: string
        x-nullable: true
      ParentThumbImageTag:
        description: Gets or sets the parent thumb image tag.
        type: string
        x-nullable: true
      ParentThumbItemId:
        description: Gets or sets the parent thumb item id.
        type: string
        x-nullable: true
      PostPaddingSeconds:
        description: Gets or sets the post padding seconds.
        format: int32
        type: integer
      PrePaddingSeconds:
        description: Gets or sets the pre padding seconds.
        format: int32
        type: integer
      Priority:
        description: Gets or sets the priority.
        format: int32
        type: integer
      ProgramId:
        description: Gets or sets the program identifier.
        type: string
        x-nullable: true
      RecordAnyChannel:
        description: 'Gets or sets a value indicating whether [record any channel].'
        type: boolean
      RecordAnyTime:
        description: 'Gets or sets a value indicating whether [record any time].'
        type: boolean
      RecordNewOnly:
        description: 'Gets or sets a value indicating whether [record new only].'
        type: boolean
      ServerId:
        description: Gets or sets the server identifier.
        type: string
        x-nullable: true
      ServiceName:
        description: Gets or sets the name of the service.
        type: string
        x-nullable: true
      SkipEpisodesInLibrary:
        type: boolean
      StartDate:
        description: 'The start date of the recording, in UTC.'
        format: date-time
        type: string
      Type:
        type: string
        x-nullable: true
    type: object
  SeriesTimerInfoDtoQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/SeriesTimerInfoDto'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  ServerConfiguration:
    additionalProperties: false
    description: Represents the server configuration.
    properties:
      ActivityLogRetentionDays:
        description: Gets or sets the number of days we should retain activity logs.
        format: int32
        type: integer
        x-nullable: true
      AutoDiscovery:
        description: Gets or sets a value indicating whether Autodiscovery is enabled.
        type: boolean
      AutoDiscoveryTracing:
        description: >-
          Gets or sets a value indicating whether Autodiscovery tracing is
          enabled.
        type: boolean
      BaseUrl:
        type: string
        x-nullable: true
      CachePath:
        description: Gets or sets the cache path.
        type: string
        x-nullable: true
      CertificatePassword:
        description: >-
          Gets or sets the password required to access the X.509 certificate
          data in the file specified by
          MediaBrowser.Model.Configuration.ServerConfiguration.CertificatePath.
        type: string
        x-nullable: true
      CertificatePath:
        description: >-
          Gets or sets the filesystem path of an X.509 certificate to use for
          SSL.
        type: string
        x-nullable: true
      CodecsUsed:
        items:
          type: string
        type: array
        x-nullable: true
      ContentTypes:
        items:
          $ref: '#/definitions/NameValuePair'
        type: array
        x-nullable: true
      CorsHosts:
        description: Gets or sets the cors hosts.
        items:
          type: string
        type: array
        x-nullable: true
      DisableLiveTvChannelUserDataName:
        type: boolean
      DisablePluginImages:
        description: >-
          Gets or sets a value indicating whether plugin image should be
          disabled.
        type: boolean
      DisplaySpecialsWithinSeasons:
        type: boolean
      EnableCaseSensitiveItemIds:
        description: >-
          Gets or sets a value indicating whether [enable case sensitive item
          ids].
        type: boolean
      EnableDashboardResponseCaching:
        description: "Gets or sets a value indicating whether [enable dashboard response caching].\r\nAllows potential contributors without visual studio to modify production dashboard code and test changes."
        type: boolean
      EnableExternalContentInSuggestions:
        type: boolean
      EnableFolderView:
        type: boolean
      EnableGroupingIntoCollections:
        type: boolean
      EnableHttps:
        description: Gets or sets a value indicating whether to use HTTPS.
        type: boolean
      EnableIPV4:
        description: Gets or sets a value indicating whether IPV4 capability is enabled.
        type: boolean
      EnableIPV6:
        description: Gets or sets a value indicating whether IPV6 capability is enabled.
        type: boolean
      EnableMetrics:
        description: >-
          Gets or sets a value indicating whether to enable prometheus metrics
          exporting.
        type: boolean
      EnableMultiSocketBinding:
        description: Gets a value indicating whether multi-socket binding is available.
        readOnly: true
        type: boolean
      EnableNewOmdbSupport:
        type: boolean
      EnableNormalizedItemByNameIds:
        type: boolean
      EnableRemoteAccess:
        description: >-
          Gets or sets a value indicating whether access outside of the LAN is
          permitted.
        type: boolean
      EnableSSDPTracing:
        description: "Gets or sets a value indicating whether detailed ssdp logs are sent to the console/log.\r\n\"Emby.Dlna\": \"Debug\" must be set in logging.default.json for this property to work."
        type: boolean
      EnableSimpleArtistDetection:
        type: boolean
      EnableSlowResponseWarning:
        description: >-
          Gets or sets a value indicating whether slow server responses should
          be logged as a warning.
        type: boolean
      EnableUPnP:
        description: >-
          Gets or sets a value indicating whether to enable automatic port
          forwarding.
        type: boolean
      GatewayMonitorPeriod:
        description: >-
          Gets or sets the time (in seconds) between the pings of SSDP gateway
          monitor.
        format: int32
        type: integer
      HDHomerunPortRange:
        description: Gets or sets the ports that HDHomerun uses.
        type: string
        x-nullable: true
      HttpServerPortNumber:
        description: Gets or sets the HTTP server port number.
        format: int32
        type: integer
      HttpsPortNumber:
        description: Gets or sets the HTTPS server port number.
        format: int32
        type: integer
      IgnoreVirtualInterfaces:
        description: >-
          Gets or sets a value indicating whether address names that match
          MediaBrowser.Model.Configuration.ServerConfiguration.VirtualInterfaceNames
          should be Ignore for the purposes of binding.
        type: boolean
      ImageExtractionTimeoutMs:
        format: int32
        type: integer
      ImageSavingConvention:
        $ref: '#/definitions/ImageSavingConvention'
      IsPortAuthorized:
        description: >-
          Gets or sets a value indicating whether this instance is port
          authorized.
        type: boolean
      IsRemoteIPFilterBlacklist:
        description: >-
          Gets or sets a value indicating whether <seealso
          cref="P:MediaBrowser.Model.Configuration.ServerConfiguration.RemoteIPFilter"
          /> contains a blacklist or a whitelist. Default is a whitelist.
        type: boolean
      IsStartupWizardCompleted:
        description: Gets or sets a value indicating whether this instance is first run.
        type: boolean
      KnownProxies:
        description: Gets or sets the known proxies.
        items:
          type: string
        type: array
        x-nullable: true
      LibraryMetadataRefreshConcurrency:
        description: Gets or sets the how many metadata refreshes can run concurrently.
        format: int32
        type: integer
      LibraryMonitorDelay:
        description: "Gets or sets the delay in seconds that we will wait after a file system change to try and discover what has been added/removed\r\nSome delay is necessary with some items because their creation is not atomic.  It involves the creation of several\r\ndifferent directories and files."
        format: int32
        type: integer
      LibraryScanFanoutConcurrency:
        description: Gets or sets the how the library scan fans out.
        format: int32
        type: integer
      LocalNetworkAddresses:
        description: >-
          Gets or sets the interface addresses which Jellyfin will bind to. If
          empty, all interfaces will be used.
        items:
          type: string
        type: array
        x-nullable: true
      LocalNetworkSubnets:
        description: Gets or sets the subnets that are deemed to make up the LAN.
        items:
          type: string
        type: array
        x-nullable: true
      LogFileRetentionDays:
        description: Gets or sets the number of days we should retain log files.
        format: int32
        type: integer
      MaxAudiobookResume:
        description: >-
          Gets or sets the remaining minutes of a book that can be played while
          still saving playstate. If this percentage is crossed playstate will
          be reset to the beginning and the item will be marked watched.
        format: int32
        type: integer
      MaxResumePct:
        description: >-
          Gets or sets the maximum percentage of an item that can be played
          while still saving playstate. If this percentage is crossed playstate
          will be reset to the beginning and the item will be marked watched.
        format: int32
        type: integer
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataNetworkPath:
        type: string
        x-nullable: true
      MetadataOptions:
        items:
          $ref: '#/definitions/MetadataOptions'
        type: array
        x-nullable: true
      MetadataPath:
        description: Gets or sets the metadata path.
        type: string
        x-nullable: true
      MinAudiobookResume:
        description: >-
          Gets or sets the minimum minutes of a book that must be played in
          order for playstate to be updated.
        format: int32
        type: integer
      MinResumeDurationSeconds:
        description: >-
          Gets or sets the minimum duration that an item must have in order to
          be eligible for playstate updates..
        format: int32
        type: integer
      MinResumePct:
        description: >-
          Gets or sets the minimum percentage of an item that must be played in
          order for playstate to be updated.
        format: int32
        type: integer
      PathSubstitutions:
        items:
          $ref: '#/definitions/PathSubstitution'
        type: array
        x-nullable: true
      PluginRepositories:
        items:
          $ref: '#/definitions/RepositoryInfo'
        type: array
        x-nullable: true
      PreferredMetadataLanguage:
        description: Gets or sets the preferred metadata language.
        type: string
        x-nullable: true
      PreviousVersion:
        $ref: '#/definitions/Version'
      PreviousVersionStr:
        description: "Gets or sets the stringified PreviousVersion to be stored/loaded,\r\nbecause System.Version itself isn't xml-serializable."
        type: string
        x-nullable: true
      PublicHttpsPort:
        description: Gets or sets the public HTTPS port.
        format: int32
        type: integer
      PublicPort:
        description: Gets or sets the public mapped port.
        format: int32
        type: integer
      PublishedServerUriBySubnet:
        description: Gets or sets PublishedServerUri to advertise for specific subnets.
        items:
          type: string
        type: array
        x-nullable: true
      QuickConnectAvailable:
        description: >-
          Gets or sets a value indicating whether quick connect is available for
          use on this server.
        type: boolean
      RemoteClientBitrateLimit:
        format: int32
        type: integer
      RemoteIPFilter:
        description: >-
          Gets or sets the filter for remote IP connectivity. Used in conjuntion
          with <seealso
          cref="P:MediaBrowser.Model.Configuration.ServerConfiguration.IsRemoteIPFilterBlacklist"
          />.
        items:
          type: string
        type: array
        x-nullable: true
      RemoveOldPlugins:
        description: >-
          Gets or sets a value indicating whether older plugins should
          automatically be deleted from the plugin folder.
        type: boolean
      RequireHttps:
        description: >-
          Gets or sets a value indicating whether the server should force
          connections over HTTPS.
        type: boolean
      SSDPTracingFilter:
        description: "Gets or sets a value indicating whether an IP address is to be used to filter the detailed ssdp logs that are being sent to the console/log.\r\nIf the setting \"Emby.Dlna\": \"Debug\" msut be set in logging.default.json for this property to work."
        type: string
        x-nullable: true
      SaveMetadataHidden:
        type: boolean
      ServerName:
        type: string
        x-nullable: true
      SkipDeserializationForBasicTypes:
        type: boolean
      SlowResponseThresholdMs:
        description: Gets or sets the threshold for the slow response time warning in ms.
        format: int64
        type: integer
      SortRemoveCharacters:
        description: >-
          Gets or sets characters to be removed from strings to create a sort
          name.
        items:
          type: string
        type: array
        x-nullable: true
      SortRemoveWords:
        description: Gets or sets words to be removed from strings to create a sort name.
        items:
          type: string
        type: array
        x-nullable: true
      SortReplaceCharacters:
        description: >-
          Gets or sets characters to be replaced with a ' ' in strings to create
          a sort name.
        items:
          type: string
        type: array
        x-nullable: true
      TrustAllIP6Interfaces:
        description: "Gets or sets a value indicating whether all IPv6 interfaces should be treated as on the internal network.\r\nDepending on the address range implemented ULA ranges might not be used."
        type: boolean
      UDPPortRange:
        description: Gets or sets client udp port range.
        type: string
        x-nullable: true
      UDPSendCount:
        description: Gets or sets the number of times SSDP UDP messages are sent.
        format: int32
        type: integer
      UDPSendDelay:
        description: Gets or sets the delay between each groups of SSDP messages (in ms).
        format: int32
        type: integer
      UICulture:
        type: string
        x-nullable: true
      UPnPCreateHttpPortMap:
        description: >-
          Gets or sets a value indicating whether the http port should be mapped
          as part of UPnP automatic port forwarding.
        type: boolean
      UninstalledPlugins:
        items:
          type: string
        type: array
        x-nullable: true
      VirtualInterfaceNames:
        description: >-
          Gets or sets a value indicating the interfaces that should be ignored.
          The list can be comma separated. <seealso
          cref="P:MediaBrowser.Model.Configuration.ServerConfiguration.IgnoreVirtualInterfaces"
          />.
        type: string
        x-nullable: true
    type: object
  SessionInfo:
    additionalProperties: false
    description: Class SessionInfo.
    properties:
      AdditionalUsers:
        items:
          $ref: '#/definitions/SessionUserInfo'
        type: array
        x-nullable: true
      ApplicationVersion:
        description: Gets or sets the application version.
        type: string
        x-nullable: true
      Capabilities:
        $ref: '#/definitions/ClientCapabilities'
      Client:
        description: Gets or sets the type of the client.
        type: string
        x-nullable: true
      DeviceId:
        description: Gets or sets the device id.
        type: string
        x-nullable: true
      DeviceName:
        description: Gets or sets the name of the device.
        type: string
        x-nullable: true
      DeviceType:
        description: Gets or sets the type of the device.
        type: string
        x-nullable: true
      FullNowPlayingItem:
        $ref: '#/definitions/BaseItem'
      HasCustomDeviceName:
        type: boolean
      Id:
        description: Gets or sets the id.
        type: string
        x-nullable: true
      IsActive:
        description: Gets a value indicating whether this instance is active.
        readOnly: true
        type: boolean
      LastActivityDate:
        description: Gets or sets the last activity date.
        format: date-time
        type: string
      LastPlaybackCheckIn:
        description: Gets or sets the last playback check in.
        format: date-time
        type: string
      NowPlayingItem:
        $ref: '#/definitions/BaseItemDto'
      NowPlayingQueue:
        items:
          $ref: '#/definitions/QueueItem'
        type: array
        x-nullable: true
      NowViewingItem:
        $ref: '#/definitions/BaseItemDto'
      PlayState:
        $ref: '#/definitions/PlayerStateInfo'
      PlayableMediaTypes:
        description: Gets or sets the playable media types.
        items:
          type: string
        readOnly: true
        type: array
        x-nullable: true
      PlaylistItemId:
        type: string
        x-nullable: true
      RemoteEndPoint:
        description: Gets or sets the remote end point.
        type: string
        x-nullable: true
      ServerId:
        type: string
        x-nullable: true
      SupportedCommands:
        description: Gets or sets the supported commands.
        items:
          $ref: '#/definitions/GeneralCommandType'
        readOnly: true
        type: array
        x-nullable: true
      SupportsMediaControl:
        readOnly: true
        type: boolean
      SupportsRemoteControl:
        readOnly: true
        type: boolean
      TranscodingInfo:
        $ref: '#/definitions/TranscodingInfo'
      UserId:
        description: Gets or sets the user id.
        format: uuid
        type: string
      UserName:
        description: Gets or sets the username.
        type: string
        x-nullable: true
      UserPrimaryImageTag:
        type: string
        x-nullable: true
    type: object
  SessionUserInfo:
    additionalProperties: false
    description: Class SessionUserInfo.
    properties:
      UserId:
        description: Gets or sets the user identifier.
        format: uuid
        type: string
      UserName:
        description: Gets or sets the name of the user.
        type: string
        x-nullable: true
    type: object
  SetChannelMappingDto:
    additionalProperties: false
    description: Set channel mapping dto.
    properties:
      ProviderChannelId:
        description: Gets or sets the provider channel id.
        type: string
      ProviderId:
        description: Gets or sets the provider id.
        type: string
      TunerChannelId:
        description: Gets or sets the tuner channel id.
        type: string
    required:
      - ProviderChannelId
      - ProviderId
      - TunerChannelId
    type: object
  SetPlaylistItemRequestDto:
    additionalProperties: false
    description: Class SetPlaylistItemRequestDto.
    properties:
      PlaylistItemId:
        description: Gets or sets the playlist identifier of the playing item.
        format: uuid
        type: string
    type: object
  SetRepeatModeRequestDto:
    additionalProperties: false
    description: Class SetRepeatModeRequestDto.
    properties:
      Mode:
        $ref: '#/definitions/GroupRepeatMode'
    type: object
  SetShuffleModeRequestDto:
    additionalProperties: false
    description: Class SetShuffleModeRequestDto.
    properties:
      Mode:
        $ref: '#/definitions/GroupShuffleMode'
    type: object
  SongInfo:
    additionalProperties: false
    properties:
      Album:
        type: string
        x-nullable: true
      AlbumArtists:
        items:
          type: string
        type: array
        x-nullable: true
      Artists:
        items:
          type: string
        type: array
        x-nullable: true
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  SortOrder:
    description: An enum representing the sorting order.
    enum:
      - Ascending
      - Descending
    type: string
  SpecialViewOptionDto:
    additionalProperties: false
    description: Special view option dto.
    properties:
      Id:
        description: Gets or sets view option id.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets view option name.
        type: string
        x-nullable: true
    type: object
  StartupConfigurationDto:
    additionalProperties: false
    description: The startup configuration DTO.
    properties:
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      PreferredMetadataLanguage:
        description: Gets or sets the preferred language for the metadata.
        type: string
        x-nullable: true
      UICulture:
        description: Gets or sets UI language culture.
        type: string
        x-nullable: true
    type: object
  StartupRemoteAccessDto:
    additionalProperties: false
    description: Startup remote access dto.
    properties:
      EnableAutomaticPortMapping:
        description: Gets or sets a value indicating whether enable automatic port mapping.
        type: boolean
      EnableRemoteAccess:
        description: Gets or sets a value indicating whether enable remote access.
        type: boolean
    required:
      - EnableAutomaticPortMapping
      - EnableRemoteAccess
    type: object
  StartupUserDto:
    additionalProperties: false
    description: The startup user DTO.
    properties:
      Name:
        description: Gets or sets the username.
        type: string
        x-nullable: true
      Password:
        description: Gets or sets the user's password.
        type: string
        x-nullable: true
    type: object
  SubtitleDeliveryMethod:
    enum:
      - Encode
      - Embed
      - External
      - Hls
    type: string
  SubtitlePlaybackMode:
    description: An enum representing a subtitle playback mode.
    enum:
      - Default
      - Always
      - OnlyForced
      - None
      - Smart
    type: string
  SubtitleProfile:
    additionalProperties: false
    properties:
      Container:
        type: string
        x-nullable: true
      DidlMode:
        type: string
        x-nullable: true
      Format:
        type: string
        x-nullable: true
      Language:
        type: string
        x-nullable: true
      Method:
        $ref: '#/definitions/SubtitleDeliveryMethod'
    type: object
  SyncPlayUserAccessType:
    description: Enum SyncPlayUserAccessType.
    enum:
      - CreateAndJoinGroups
      - JoinGroups
      - None
    type: string
  SystemInfo:
    additionalProperties: false
    description: Class SystemInfo.
    properties:
      CachePath:
        description: Gets or sets the cache path.
        type: string
        x-nullable: true
      CanLaunchWebBrowser:
        type: boolean
      CanSelfRestart:
        description: >-
          Gets or sets a value indicating whether this instance can self
          restart.
        type: boolean
      CompletedInstallations:
        description: Gets or sets the completed installations.
        items:
          $ref: '#/definitions/InstallationInfo'
        type: array
        x-nullable: true
      EncoderLocation:
        $ref: '#/definitions/FFmpegLocation'
      HasPendingRestart:
        description: >-
          Gets or sets a value indicating whether this instance has pending
          restart.
        type: boolean
      HasUpdateAvailable:
        description: >-
          Gets or sets a value indicating whether this instance has update
          available.
        type: boolean
      Id:
        description: Gets or sets the id.
        type: string
        x-nullable: true
      InternalMetadataPath:
        description: Gets or sets the internal metadata path.
        type: string
        x-nullable: true
      IsShuttingDown:
        type: boolean
      ItemsByNamePath:
        description: Gets or sets the items by name path.
        type: string
        x-nullable: true
      LocalAddress:
        description: Gets or sets the local address.
        type: string
        x-nullable: true
      LogPath:
        description: Gets or sets the log path.
        type: string
        x-nullable: true
      OperatingSystem:
        description: Gets or sets the operating system.
        type: string
        x-nullable: true
      OperatingSystemDisplayName:
        description: Gets or sets the display name of the operating system.
        type: string
        x-nullable: true
      PackageName:
        description: Get or sets the package name.
        type: string
        x-nullable: true
      ProductName:
        description: Gets or sets the product name. This is the AssemblyProduct name.
        type: string
        x-nullable: true
      ProgramDataPath:
        description: Gets or sets the program data path.
        type: string
        x-nullable: true
      ServerName:
        description: Gets or sets the name of the server.
        type: string
        x-nullable: true
      StartupWizardCompleted:
        description: >-
          Gets or sets a value indicating whether the startup wizard is
          completed.
        type: boolean
        x-nullable: true
      SupportsLibraryMonitor:
        description: 'Gets or sets a value indicating whether [supports library monitor].'
        type: boolean
      SystemArchitecture:
        $ref: '#/definitions/Architecture'
      TranscodingTempPath:
        description: Gets or sets the transcode path.
        type: string
        x-nullable: true
      Version:
        description: Gets or sets the server version.
        type: string
        x-nullable: true
      WebPath:
        description: Gets or sets the web UI resources path.
        type: string
        x-nullable: true
      WebSocketPortNumber:
        description: Gets or sets the web socket port number.
        format: int32
        type: integer
    type: object
  TaskCompletionStatus:
    description: Enum TaskCompletionStatus.
    enum:
      - Completed
      - Failed
      - Cancelled
      - Aborted
    type: string
  TaskInfo:
    additionalProperties: false
    description: Class TaskInfo.
    properties:
      Category:
        description: Gets or sets the category.
        type: string
        x-nullable: true
      CurrentProgressPercentage:
        description: Gets or sets the progress.
        format: double
        type: number
        x-nullable: true
      Description:
        description: Gets or sets the description.
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the id.
        type: string
        x-nullable: true
      IsHidden:
        description: Gets or sets a value indicating whether this instance is hidden.
        type: boolean
      Key:
        description: Gets or sets the key.
        type: string
        x-nullable: true
      LastExecutionResult:
        $ref: '#/definitions/TaskResult'
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      State:
        $ref: '#/definitions/TaskState'
      Triggers:
        description: Gets or sets the triggers.
        items:
          $ref: '#/definitions/TaskTriggerInfo'
        type: array
        x-nullable: true
    type: object
  TaskResult:
    additionalProperties: false
    description: Class TaskExecutionInfo.
    properties:
      EndTimeUtc:
        description: Gets or sets the end time UTC.
        format: date-time
        type: string
      ErrorMessage:
        description: Gets or sets the error message.
        type: string
        x-nullable: true
      Id:
        description: Gets or sets the id.
        type: string
        x-nullable: true
      Key:
        description: Gets or sets the key.
        type: string
        x-nullable: true
      LongErrorMessage:
        description: Gets or sets the long error message.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      StartTimeUtc:
        description: Gets or sets the start time UTC.
        format: date-time
        type: string
      Status:
        $ref: '#/definitions/TaskCompletionStatus'
    type: object
  TaskState:
    description: Enum TaskState.
    enum:
      - Idle
      - Cancelling
      - Running
    type: string
  TaskTriggerInfo:
    additionalProperties: false
    description: Class TaskTriggerInfo.
    properties:
      DayOfWeek:
        $ref: '#/definitions/DayOfWeek'
      IntervalTicks:
        description: Gets or sets the interval.
        format: int64
        type: integer
        x-nullable: true
      MaxRuntimeTicks:
        description: Gets or sets the maximum runtime ticks.
        format: int64
        type: integer
        x-nullable: true
      TimeOfDayTicks:
        description: Gets or sets the time of day.
        format: int64
        type: integer
        x-nullable: true
      Type:
        description: Gets or sets the type.
        type: string
        x-nullable: true
    type: object
  ThemeMediaResult:
    additionalProperties: false
    description: Class ThemeMediaResult.
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/BaseItemDto'
        type: array
        x-nullable: true
      OwnerId:
        description: Gets or sets the owner id.
        format: uuid
        type: string
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  TimerEventInfo:
    additionalProperties: false
    properties:
      Id:
        readOnly: true
        type: string
        x-nullable: true
      ProgramId:
        format: uuid
        type: string
        x-nullable: true
    type: object
  TimerInfoDto:
    additionalProperties: false
    properties:
      ChannelId:
        description: ChannelId of the recording.
        format: uuid
        type: string
      ChannelName:
        description: ChannelName of the recording.
        type: string
        x-nullable: true
      ChannelPrimaryImageTag:
        type: string
        x-nullable: true
      EndDate:
        description: 'The end date of the recording, in UTC.'
        format: date-time
        type: string
      ExternalChannelId:
        description: Gets or sets the external channel identifier.
        type: string
        x-nullable: true
      ExternalId:
        description: Gets or sets the external identifier.
        type: string
        x-nullable: true
      ExternalProgramId:
        description: Gets or sets the external program identifier.
        type: string
        x-nullable: true
      ExternalSeriesTimerId:
        description: Gets or sets the external series timer identifier.
        type: string
        x-nullable: true
      Id:
        description: Id of the recording.
        type: string
        x-nullable: true
      IsPostPaddingRequired:
        description: >-
          Gets or sets a value indicating whether this instance is post padding
          required.
        type: boolean
      IsPrePaddingRequired:
        description: >-
          Gets or sets a value indicating whether this instance is pre padding
          required.
        type: boolean
      KeepUntil:
        $ref: '#/definitions/KeepUntil'
      Name:
        description: Name of the recording.
        type: string
        x-nullable: true
      Overview:
        description: Description of the recording.
        type: string
        x-nullable: true
      ParentBackdropImageTags:
        description: Gets or sets the parent backdrop image tags.
        items:
          type: string
        type: array
        x-nullable: true
      ParentBackdropItemId:
        description: >-
          If the item does not have any backdrops, this will hold the Id of the
          Parent that has one.
        type: string
        x-nullable: true
      PostPaddingSeconds:
        description: Gets or sets the post padding seconds.
        format: int32
        type: integer
      PrePaddingSeconds:
        description: Gets or sets the pre padding seconds.
        format: int32
        type: integer
      Priority:
        description: Gets or sets the priority.
        format: int32
        type: integer
      ProgramId:
        description: Gets or sets the program identifier.
        type: string
        x-nullable: true
      ProgramInfo:
        $ref: '#/definitions/BaseItemDto'
      RunTimeTicks:
        description: Gets or sets the run time ticks.
        format: int64
        type: integer
        x-nullable: true
      SeriesTimerId:
        description: Gets or sets the series timer identifier.
        type: string
        x-nullable: true
      ServerId:
        description: Gets or sets the server identifier.
        type: string
        x-nullable: true
      ServiceName:
        description: Gets or sets the name of the service.
        type: string
        x-nullable: true
      StartDate:
        description: 'The start date of the recording, in UTC.'
        format: date-time
        type: string
      Status:
        $ref: '#/definitions/RecordingStatus'
      Type:
        type: string
        x-nullable: true
    type: object
  TimerInfoDtoQueryResult:
    additionalProperties: false
    properties:
      Items:
        description: Gets or sets the items.
        items:
          $ref: '#/definitions/TimerInfoDto'
        type: array
        x-nullable: true
      StartIndex:
        description: The index of the first record in Items.
        format: int32
        type: integer
      TotalRecordCount:
        description: The total number of records available.
        format: int32
        type: integer
    type: object
  TrailerInfo:
    additionalProperties: false
    properties:
      IndexNumber:
        format: int32
        type: integer
        x-nullable: true
      IsAutomated:
        type: boolean
      MetadataCountryCode:
        description: Gets or sets the metadata country code.
        type: string
        x-nullable: true
      MetadataLanguage:
        description: Gets or sets the metadata language.
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      ParentIndexNumber:
        format: int32
        type: integer
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      PremiereDate:
        format: date-time
        type: string
        x-nullable: true
      ProviderIds:
        additionalProperties:
          type: string
        description: Gets or sets the provider ids.
        type: object
        x-nullable: true
      Year:
        description: Gets or sets the year.
        format: int32
        type: integer
        x-nullable: true
    type: object
  TrailerInfoRemoteSearchQuery:
    additionalProperties: false
    properties:
      IncludeDisabledProviders:
        description: >-
          Gets or sets a value indicating whether disabled providers should be
          included.
        type: boolean
      ItemId:
        format: uuid
        type: string
      SearchInfo:
        $ref: '#/definitions/TrailerInfo'
      SearchProviderName:
        description: Will only search within the given provider when set.
        type: string
        x-nullable: true
    type: object
  TranscodeReason:
    enum:
      - ContainerNotSupported
      - VideoCodecNotSupported
      - AudioCodecNotSupported
      - ContainerBitrateExceedsLimit
      - AudioBitrateNotSupported
      - AudioChannelsNotSupported
      - VideoResolutionNotSupported
      - UnknownVideoStreamInfo
      - UnknownAudioStreamInfo
      - AudioProfileNotSupported
      - AudioSampleRateNotSupported
      - AnamorphicVideoNotSupported
      - InterlacedVideoNotSupported
      - SecondaryAudioNotSupported
      - RefFramesNotSupported
      - VideoBitDepthNotSupported
      - VideoBitrateNotSupported
      - VideoFramerateNotSupported
      - VideoLevelNotSupported
      - VideoProfileNotSupported
      - AudioBitDepthNotSupported
      - SubtitleCodecNotSupported
      - DirectPlayError
    type: string
  TranscodeSeekInfo:
    enum:
      - Auto
      - Bytes
    type: string
  TranscodingInfo:
    additionalProperties: false
    properties:
      AudioChannels:
        format: int32
        type: integer
        x-nullable: true
      AudioCodec:
        type: string
        x-nullable: true
      Bitrate:
        format: int32
        type: integer
        x-nullable: true
      CompletionPercentage:
        format: double
        type: number
        x-nullable: true
      Container:
        type: string
        x-nullable: true
      Framerate:
        format: float
        type: number
        x-nullable: true
      Height:
        format: int32
        type: integer
        x-nullable: true
      IsAudioDirect:
        type: boolean
      IsVideoDirect:
        type: boolean
      TranscodeReasons:
        items:
          $ref: '#/definitions/TranscodeReason'
        type: array
        x-nullable: true
      VideoCodec:
        type: string
        x-nullable: true
      Width:
        format: int32
        type: integer
        x-nullable: true
    type: object
  TranscodingProfile:
    additionalProperties: false
    properties:
      AudioCodec:
        type: string
        x-nullable: true
      BreakOnNonKeyFrames:
        type: boolean
      Container:
        type: string
        x-nullable: true
      Context:
        $ref: '#/definitions/EncodingContext'
      CopyTimestamps:
        type: boolean
      EnableMpegtsM2TsMode:
        type: boolean
      EnableSubtitlesInManifest:
        type: boolean
      EstimateContentLength:
        type: boolean
      MaxAudioChannels:
        type: string
        x-nullable: true
      MinSegments:
        format: int32
        type: integer
      Protocol:
        type: string
        x-nullable: true
      SegmentLength:
        format: int32
        type: integer
      TranscodeSeekInfo:
        $ref: '#/definitions/TranscodeSeekInfo'
      Type:
        $ref: '#/definitions/DlnaProfileType'
      VideoCodec:
        type: string
        x-nullable: true
    type: object
  TransportStreamTimestamp:
    enum:
      - None
      - Zero
      - Valid
    type: string
  TunerChannelMapping:
    additionalProperties: false
    properties:
      Id:
        type: string
        x-nullable: true
      Name:
        type: string
        x-nullable: true
      ProviderChannelId:
        type: string
        x-nullable: true
      ProviderChannelName:
        type: string
        x-nullable: true
    type: object
  TunerHostInfo:
    additionalProperties: false
    properties:
      AllowHWTranscoding:
        type: boolean
      DeviceId:
        type: string
        x-nullable: true
      EnableStreamLooping:
        type: boolean
      FriendlyName:
        type: string
        x-nullable: true
      Id:
        type: string
        x-nullable: true
      ImportFavoritesOnly:
        type: boolean
      Source:
        type: string
        x-nullable: true
      TunerCount:
        format: int32
        type: integer
      Type:
        type: string
        x-nullable: true
      Url:
        type: string
        x-nullable: true
      UserAgent:
        type: string
        x-nullable: true
    type: object
  TypeOptions:
    additionalProperties: false
    properties:
      ImageFetcherOrder:
        items:
          type: string
        type: array
        x-nullable: true
      ImageFetchers:
        items:
          type: string
        type: array
        x-nullable: true
      ImageOptions:
        items:
          $ref: '#/definitions/ImageOption'
        type: array
        x-nullable: true
      MetadataFetcherOrder:
        items:
          type: string
        type: array
        x-nullable: true
      MetadataFetchers:
        items:
          type: string
        type: array
        x-nullable: true
      Type:
        type: string
        x-nullable: true
    type: object
  UnratedItem:
    description: An enum representing an unrated item.
    enum:
      - Movie
      - Trailer
      - Series
      - Music
      - Book
      - LiveTvChannel
      - LiveTvProgram
      - ChannelContent
      - Other
    type: string
  UpdateLibraryOptionsDto:
    additionalProperties: false
    description: Update library options dto.
    properties:
      Id:
        description: Gets or sets the library item id.
        format: uuid
        type: string
      LibraryOptions:
        $ref: '#/definitions/LibraryOptions'
    type: object
  UpdateUserEasyPassword:
    additionalProperties: false
    description: The update user easy password request body.
    properties:
      NewPassword:
        description: Gets or sets the new sha1-hashed password.
        type: string
        x-nullable: true
      NewPw:
        description: Gets or sets the new password.
        type: string
        x-nullable: true
      ResetPassword:
        description: Gets or sets a value indicating whether to reset the password.
        type: boolean
    type: object
  UpdateUserPassword:
    additionalProperties: false
    description: The update user password request body.
    properties:
      CurrentPassword:
        description: Gets or sets the current sha1-hashed password.
        type: string
        x-nullable: true
      CurrentPw:
        description: Gets or sets the current plain text password.
        type: string
        x-nullable: true
      NewPw:
        description: Gets or sets the new plain text password.
        type: string
        x-nullable: true
      ResetPassword:
        description: Gets or sets a value indicating whether to reset the password.
        type: boolean
    type: object
  UploadSubtitleDto:
    additionalProperties: false
    description: Upload subtitles dto.
    properties:
      Data:
        description: Gets or sets the subtitle data.
        type: string
      Format:
        description: Gets or sets the subtitle format.
        type: string
      IsForced:
        description: Gets or sets a value indicating whether the subtitle is forced.
        type: boolean
      Language:
        description: Gets or sets the subtitle language.
        type: string
    required:
      - Data
      - Format
      - IsForced
      - Language
    type: object
  UserConfiguration:
    additionalProperties: false
    description: Class UserConfiguration.
    properties:
      AudioLanguagePreference:
        description: Gets or sets the audio language preference.
        type: string
        x-nullable: true
      DisplayCollectionsView:
        type: boolean
      DisplayMissingEpisodes:
        type: boolean
      EnableLocalPassword:
        type: boolean
      EnableNextEpisodeAutoPlay:
        type: boolean
      GroupedFolders:
        items:
          type: string
        type: array
        x-nullable: true
      HidePlayedInLatest:
        type: boolean
      LatestItemsExcludes:
        items:
          type: string
        type: array
        x-nullable: true
      MyMediaExcludes:
        items:
          type: string
        type: array
        x-nullable: true
      OrderedViews:
        items:
          type: string
        type: array
        x-nullable: true
      PlayDefaultAudioTrack:
        description: 'Gets or sets a value indicating whether [play default audio track].'
        type: boolean
      RememberAudioSelections:
        type: boolean
      RememberSubtitleSelections:
        type: boolean
      SubtitleLanguagePreference:
        description: Gets or sets the subtitle language preference.
        type: string
        x-nullable: true
      SubtitleMode:
        $ref: '#/definitions/SubtitlePlaybackMode'
    type: object
  UserDto:
    additionalProperties: false
    description: Class UserDto.
    properties:
      Configuration:
        $ref: '#/definitions/UserConfiguration'
      EnableAutoLogin:
        description: Gets or sets whether async login is enabled or not.
        type: boolean
        x-nullable: true
      HasConfiguredEasyPassword:
        description: >-
          Gets or sets a value indicating whether this instance has configured
          easy password.
        type: boolean
      HasConfiguredPassword:
        description: >-
          Gets or sets a value indicating whether this instance has configured
          password.
        type: boolean
      HasPassword:
        description: Gets or sets a value indicating whether this instance has password.
        type: boolean
      Id:
        description: Gets or sets the id.
        format: uuid
        type: string
      LastActivityDate:
        description: Gets or sets the last activity date.
        format: date-time
        type: string
        x-nullable: true
      LastLoginDate:
        description: Gets or sets the last login date.
        format: date-time
        type: string
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      Policy:
        $ref: '#/definitions/UserPolicy'
      PrimaryImageAspectRatio:
        description: Gets or sets the primary image aspect ratio.
        format: double
        type: number
        x-nullable: true
      PrimaryImageTag:
        description: Gets or sets the primary image tag.
        type: string
        x-nullable: true
      ServerId:
        description: Gets or sets the server identifier.
        type: string
        x-nullable: true
      ServerName:
        description: "Gets or sets the name of the server.\r\nThis is not used by the server and is for client-side usage only."
        type: string
        x-nullable: true
    type: object
  UserItemDataDto:
    additionalProperties: false
    description: Class UserItemDataDto.
    properties:
      IsFavorite:
        description: Gets or sets a value indicating whether this instance is favorite.
        type: boolean
      ItemId:
        description: Gets or sets the item identifier.
        type: string
        x-nullable: true
      Key:
        description: Gets or sets the key.
        type: string
        x-nullable: true
      LastPlayedDate:
        description: Gets or sets the last played date.
        format: date-time
        type: string
        x-nullable: true
      Likes:
        description: >-
          Gets or sets a value indicating whether this
          MediaBrowser.Model.Dto.UserItemDataDto is likes.
        type: boolean
        x-nullable: true
      PlayCount:
        description: Gets or sets the play count.
        format: int32
        type: integer
      PlaybackPositionTicks:
        description: Gets or sets the playback position ticks.
        format: int64
        type: integer
      Played:
        description: >-
          Gets or sets a value indicating whether this
          MediaBrowser.Model.Dto.UserItemDataDto is played.
        type: boolean
      PlayedPercentage:
        description: Gets or sets the played percentage.
        format: double
        type: number
        x-nullable: true
      Rating:
        description: Gets or sets the rating.
        format: double
        type: number
        x-nullable: true
      UnplayedItemCount:
        description: Gets or sets the unplayed item count.
        format: int32
        type: integer
        x-nullable: true
    type: object
  UserPolicy:
    additionalProperties: false
    properties:
      AccessSchedules:
        items:
          $ref: '#/definitions/AccessSchedule'
        type: array
        x-nullable: true
      AuthenticationProviderId:
        type: string
        x-nullable: true
      BlockUnratedItems:
        items:
          $ref: '#/definitions/UnratedItem'
        type: array
        x-nullable: true
      BlockedChannels:
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      BlockedMediaFolders:
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      BlockedTags:
        items:
          type: string
        type: array
        x-nullable: true
      EnableAllChannels:
        type: boolean
      EnableAllDevices:
        type: boolean
      EnableAllFolders:
        type: boolean
      EnableAudioPlaybackTranscoding:
        type: boolean
      EnableContentDeletion:
        type: boolean
      EnableContentDeletionFromFolders:
        items:
          type: string
        type: array
        x-nullable: true
      EnableContentDownloading:
        type: boolean
      EnableLiveTvAccess:
        type: boolean
      EnableLiveTvManagement:
        type: boolean
      EnableMediaConversion:
        type: boolean
      EnableMediaPlayback:
        type: boolean
      EnablePlaybackRemuxing:
        type: boolean
      EnablePublicSharing:
        type: boolean
      EnableRemoteAccess:
        type: boolean
      EnableRemoteControlOfOtherUsers:
        type: boolean
      EnableSharedDeviceControl:
        type: boolean
      EnableSyncTranscoding:
        description: 'Gets or sets a value indicating whether [enable synchronize].'
        type: boolean
      EnableUserPreferenceAccess:
        type: boolean
      EnableVideoPlaybackTranscoding:
        type: boolean
      EnabledChannels:
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      EnabledDevices:
        items:
          type: string
        type: array
        x-nullable: true
      EnabledFolders:
        items:
          format: uuid
          type: string
        type: array
        x-nullable: true
      ForceRemoteSourceTranscoding:
        type: boolean
      InvalidLoginAttemptCount:
        format: int32
        type: integer
      IsAdministrator:
        description: >-
          Gets or sets a value indicating whether this instance is
          administrator.
        type: boolean
      IsDisabled:
        description: Gets or sets a value indicating whether this instance is disabled.
        type: boolean
      IsHidden:
        description: Gets or sets a value indicating whether this instance is hidden.
        type: boolean
      LoginAttemptsBeforeLockout:
        format: int32
        type: integer
      MaxActiveSessions:
        format: int32
        type: integer
      MaxParentalRating:
        description: Gets or sets the max parental rating.
        format: int32
        type: integer
        x-nullable: true
      PasswordResetProviderId:
        type: string
        x-nullable: true
      RemoteClientBitrateLimit:
        format: int32
        type: integer
      SyncPlayAccess:
        $ref: '#/definitions/SyncPlayUserAccessType'
    type: object
  UtcTimeResponse:
    additionalProperties: false
    description: Class UtcTimeResponse.
    properties:
      RequestReceptionTime:
        description: Gets the UTC time when request has been received.
        format: date-time
        readOnly: true
        type: string
      ResponseTransmissionTime:
        description: Gets the UTC time when response has been sent.
        format: date-time
        readOnly: true
        type: string
    type: object
  ValidatePathDto:
    additionalProperties: false
    description: Validate path object.
    properties:
      IsFile:
        description: Gets or sets is path file.
        type: boolean
        x-nullable: true
      Path:
        description: Gets or sets the path.
        type: string
        x-nullable: true
      ValidateWritable:
        description: Gets or sets a value indicating whether validate if path is writable.
        type: boolean
    type: object
  Version:
    additionalProperties: false
    properties:
      Build:
        format: int32
        readOnly: true
        type: integer
      Major:
        format: int32
        readOnly: true
        type: integer
      MajorRevision:
        format: int32
        readOnly: true
        type: integer
      Minor:
        format: int32
        readOnly: true
        type: integer
      MinorRevision:
        format: int32
        readOnly: true
        type: integer
      Revision:
        format: int32
        readOnly: true
        type: integer
    type: object
  VersionInfo:
    additionalProperties: false
    description: Defines the MediaBrowser.Model.Updates.VersionInfo class.
    properties:
      VersionNumber:
        $ref: '#/definitions/Version'
      changelog:
        description: Gets or sets the changelog for this version.
        type: string
        x-nullable: true
      checksum:
        description: Gets or sets a checksum for the binary.
        type: string
        x-nullable: true
      repositoryName:
        description: Gets or sets the repository name.
        type: string
        x-nullable: true
      repositoryUrl:
        description: Gets or sets the repository url.
        type: string
        x-nullable: true
      sourceUrl:
        description: Gets or sets the source URL.
        type: string
        x-nullable: true
      targetAbi:
        description: Gets or sets the ABI that this version was built against.
        type: string
        x-nullable: true
      timestamp:
        description: Gets or sets a timestamp of when the binary was built.
        type: string
        x-nullable: true
      version:
        description: Gets or sets the version.
        type: string
        x-nullable: true
    type: object
  Video3DFormat:
    enum:
      - HalfSideBySide
      - FullSideBySide
      - FullTopAndBottom
      - HalfTopAndBottom
      - MVC
    type: string
  VideoType:
    description: Enum VideoType.
    enum:
      - VideoFile
      - Iso
      - Dvd
      - BluRay
    type: string
  VirtualFolderInfo:
    additionalProperties: false
    description: >-
      Used to hold information about a user's list of configured virtual
      folders.
    properties:
      CollectionType:
        description: Gets or sets the type of the collection.
        type: string
        x-nullable: true
      ItemId:
        description: Gets or sets the item identifier.
        type: string
        x-nullable: true
      LibraryOptions:
        $ref: '#/definitions/LibraryOptions'
      Locations:
        description: Gets or sets the locations.
        items:
          type: string
        type: array
        x-nullable: true
      Name:
        description: Gets or sets the name.
        type: string
        x-nullable: true
      PrimaryImageItemId:
        description: Gets or sets the primary image item identifier.
        type: string
        x-nullable: true
      RefreshProgress:
        format: double
        type: number
        x-nullable: true
      RefreshStatus:
        type: string
        x-nullable: true
    type: object
  WakeOnLanInfo:
    additionalProperties: false
    description: Provides the MAC address and port for wake-on-LAN functionality.
    properties:
      MacAddress:
        description: Gets the MAC address of the device.
        type: string
        x-nullable: true
      Port:
        description: Gets or sets the wake-on-LAN port.
        format: int32
        type: integer
    type: object
  XmlAttribute:
    additionalProperties: false
    description: Defines the MediaBrowser.Model.Dlna.XmlAttribute.
    properties:
      Name:
        description: Gets or sets the name of the attribute.
        type: string
        x-nullable: true
      Value:
        description: Gets or sets the value of the attribute.
        type: string
        x-nullable: true
    type: object
host: jellyfin.local
info:
  title: Jellyfin API
  version: v1
  x-apisguru-categories:
    - media
  x-jellyfin-version: 10.7.0.0
  x-origin:
    - format: openapi
      url: >-
        https://repo.jellyfin.org/releases/openapi/stable/jellyfin-openapi-10.7.0-rc2.json
      version: '3.0'
  x-providerName: jellyfin.local
paths:
  '/Albums/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromAlbum
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  '/Albums/{itemId}/Similar':
    get:
      operationId: GetSimilarAlbums
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  /Artists:
    get:
      operationId: GetArtists
      parameters:
        - description: Optional filter by minimum community rating.
          format: double
          in: query
          name: minCommunityRating
          type: number
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered out based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: Optional. Specify additional filters to apply.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            OfficialRating. This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: officialRatings
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on tag. This
            allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: tags
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on production
            year. This allows multiple, comma delimited.
          in: query
          items:
            format: int32
            type: integer
          name: years
          type: array
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person.
          in: query
          name: person
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person ids.
          in: query
          items:
            format: uuid
            type: string
          name: personIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, along with Person, results will be filtered
            to include only those containing the specified person and
            PersonType. Allows multiple, comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: studios
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: studioIds
          type: array
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - default: true
          description: Total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Artists returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets all artists from a given item, folder, or the entire library.'
      tags:
        - Artists
  /Artists/AlbumArtists:
    get:
      operationId: GetAlbumArtists
      parameters:
        - description: Optional filter by minimum community rating.
          format: double
          in: query
          name: minCommunityRating
          type: number
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered out based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: Optional. Specify additional filters to apply.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            OfficialRating. This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: officialRatings
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on tag. This
            allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: tags
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on production
            year. This allows multiple, comma delimited.
          in: query
          items:
            format: int32
            type: integer
          name: years
          type: array
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person.
          in: query
          name: person
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person ids.
          in: query
          items:
            format: uuid
            type: string
          name: personIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, along with Person, results will be filtered
            to include only those containing the specified person and
            PersonType. Allows multiple, comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: studios
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: studioIds
          type: array
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - default: true
          description: Total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Album artists returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets all album artists from a given item, folder, or the entire library.'
      tags:
        - Artists
  '/Artists/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromArtists
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  '/Artists/{itemId}/Similar':
    get:
      operationId: GetSimilarArtists
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  '/Artists/{name}':
    get:
      operationId: GetArtistByName
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Artist returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an artist by name.
      tags:
        - Artists
  '/Artists/{name}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetArtistImage
      parameters:
        - description: Artist name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get artist image by name.
      tags:
        - Image
    head:
      operationId: HeadArtistImage
      parameters:
        - description: Artist name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get artist image by name.
      tags:
        - Image
  '/Audio/{itemId}/hls/{segmentId}/stream.aac':
    get:
      operationId: GetHlsAudioSegmentLegacyAac
      parameters:
        - description: The item id.
          in: path
          name: itemId
          required: true
          type: string
        - description: The segment id.
          in: path
          name: segmentId
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Hls audio segment returned.
          schema:
            format: binary
            type: string
      summary: Gets the specified audio segment for an audio item.
      tags:
        - HlsSegment
  '/Audio/{itemId}/hls/{segmentId}/stream.mp3':
    get:
      operationId: GetHlsAudioSegmentLegacyMp3
      parameters:
        - description: The item id.
          in: path
          name: itemId
          required: true
          type: string
        - description: The segment id.
          in: path
          name: segmentId
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Hls audio segment returned.
          schema:
            format: binary
            type: string
      summary: Gets the specified audio segment for an audio item.
      tags:
        - HlsSegment
  '/Audio/{itemId}/hls1/{playlistId}/{segmentId}.{container}':
    get:
      operationId: GetHlsAudioSegment
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
        - description: The segment id.
          format: int32
          in: path
          name: segmentId
          required: true
          type: integer
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a video stream using HTTP live streaming.
      tags:
        - DynamicHls
  '/Audio/{itemId}/main.m3u8':
    get:
      operationId: GetVariantHlsAudioPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an audio stream using HTTP live streaming.
      tags:
        - DynamicHls
  '/Audio/{itemId}/master.m3u8':
    get:
      operationId: GetMasterHlsAudioPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          required: true
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - default: true
          description: Enable adaptive bitrate streaming.
          in: query
          name: enableAdaptiveBitrateStreaming
          type: boolean
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an audio hls playlist stream.
      tags:
        - DynamicHls
    head:
      operationId: HeadMasterHlsAudioPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          required: true
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - default: true
          description: Enable adaptive bitrate streaming.
          in: query
          name: enableAdaptiveBitrateStreaming
          type: boolean
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an audio hls playlist stream.
      tags:
        - DynamicHls
  '/Audio/{itemId}/stream':
    get:
      operationId: GetAudioStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The audio container.
          in: query
          name: container
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
      summary: Gets an audio stream.
      tags:
        - Audio
    head:
      operationId: HeadAudioStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The audio container.
          in: query
          name: container
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
      summary: Gets an audio stream.
      tags:
        - Audio
  '/Audio/{itemId}/stream.{container}':
    get:
      operationId: GetAudioStreamByContainer
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The audio container.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamporphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
      summary: Gets an audio stream.
      tags:
        - Audio
    head:
      operationId: HeadAudioStreamByContainer
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The audio container.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamporphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
      summary: Gets an audio stream.
      tags:
        - Audio
  '/Audio/{itemId}/universal':
    get:
      operationId: GetUniversalAudioStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Optional. The audio container.
          in: query
          items:
            type: string
          name: container
          type: array
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: Optional. The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The audio codec to transcode to.
          in: query
          name: audioCodec
          type: string
        - description: Optional. The maximum number of audio channels.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: Optional. The number of how many audio channels to transcode to.
          format: int32
          in: query
          name: transcodingAudioChannels
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The container to transcode to.
          in: query
          name: transcodingContainer
          type: string
        - description: Optional. The transcoding protocol.
          in: query
          name: transcodingProtocol
          type: string
        - description: Optional. The maximum audio sample rate.
          format: int32
          in: query
          name: maxAudioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. Whether to enable remote media.
          in: query
          name: enableRemoteMedia
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - default: true
          description: Whether to enable redirection. Defaults to true.
          in: query
          name: enableRedirection
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
        '302':
          description: Redirected to remote audio stream.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an audio stream.
      tags:
        - UniversalAudio
    head:
      operationId: HeadUniversalAudioStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Optional. The audio container.
          in: query
          items:
            type: string
          name: container
          type: array
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: Optional. The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The audio codec to transcode to.
          in: query
          name: audioCodec
          type: string
        - description: Optional. The maximum number of audio channels.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: Optional. The number of how many audio channels to transcode to.
          format: int32
          in: query
          name: transcodingAudioChannels
          type: integer
        - description: Optional. The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The container to transcode to.
          in: query
          name: transcodingContainer
          type: string
        - description: Optional. The transcoding protocol.
          in: query
          name: transcodingProtocol
          type: string
        - description: Optional. The maximum audio sample rate.
          format: int32
          in: query
          name: maxAudioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: Optional. Whether to enable remote media.
          in: query
          name: enableRemoteMedia
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - default: true
          description: Whether to enable redirection. Defaults to true.
          in: query
          name: enableRedirection
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Audio stream returned.
          schema:
            format: binary
            type: string
        '302':
          description: Redirected to remote audio stream.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an audio stream.
      tags:
        - UniversalAudio
  /Auth/Keys:
    get:
      operationId: GetKeys
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Api keys retrieved.
          schema:
            $ref: '#/definitions/AuthenticationInfoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all keys.
      tags:
        - ApiKey
    post:
      operationId: CreateKey
      parameters:
        - description: Name of the app using the authentication key.
          in: query
          name: app
          required: true
          type: string
      responses:
        '204':
          description: Api key created.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Create a new api key.
      tags:
        - ApiKey
  '/Auth/Keys/{key}':
    delete:
      operationId: RevokeKey
      parameters:
        - description: The access token to delete.
          in: path
          name: key
          required: true
          type: string
      responses:
        '204':
          description: Api key deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Remove an api key.
      tags:
        - ApiKey
  /Auth/PasswordResetProviders:
    get:
      operationId: GetPasswordResetProviders
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Password reset providers retrieved.
          schema:
            items:
              $ref: '#/definitions/NameIdPair'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all password reset providers.
      tags:
        - Session
  /Auth/Providers:
    get:
      operationId: GetAuthProviders
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Auth providers retrieved.
          schema:
            items:
              $ref: '#/definitions/NameIdPair'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all auth providers.
      tags:
        - Session
  /Branding/Configuration:
    get:
      operationId: GetBrandingOptions
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Branding configuration returned.
          schema:
            $ref: '#/definitions/BrandingOptions'
      summary: Gets branding configuration.
      tags:
        - Branding
  /Branding/Css:
    get:
      operationId: GetBrandingCss
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
        - text/css
      responses:
        '200':
          description: Branding css returned.
          schema:
            type: string
        '204':
          description: No branding css configured.
      summary: Gets branding css.
      tags:
        - Branding
  /Branding/Css.css:
    get:
      operationId: GetBrandingCss_2
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
        - text/css
      responses:
        '200':
          description: Branding css returned.
          schema:
            type: string
        '204':
          description: No branding css configured.
      summary: Gets branding css.
      tags:
        - Branding
  /Channels:
    get:
      operationId: GetChannels
      parameters:
        - description: User Id to filter by. Use System.Guid.Empty to not filter by user.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Filter by channels that support getting latest items.
          in: query
          name: supportsLatestItems
          type: boolean
        - description: Optional. Filter by channels that support media deletion.
          in: query
          name: supportsMediaDeletion
          type: boolean
        - description: Optional. Filter by channels that are favorite.
          in: query
          name: isFavorite
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Channels returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available channels.
      tags:
        - Channels
  /Channels/Features:
    get:
      operationId: GetAllChannelFeatures
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: All channel features returned.
          schema:
            items:
              $ref: '#/definitions/ChannelFeatures'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all channel features.
      tags:
        - Channels
  /Channels/Items/Latest:
    get:
      operationId: GetLatestChannelItems
      parameters:
        - description: Optional. User Id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: Optional. Specify additional filters to apply.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: 'Optional. Specify one or more channel id''s, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: channelIds
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Latest channel items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets latest channel items.
      tags:
        - Channels
  '/Channels/{channelId}/Features':
    get:
      operationId: GetChannelFeatures
      parameters:
        - description: Channel id.
          format: uuid
          in: path
          name: channelId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Channel features returned.
          schema:
            $ref: '#/definitions/ChannelFeatures'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get channel features.
      tags:
        - Channels
  '/Channels/{channelId}/Items':
    get:
      operationId: GetChannelItems
      parameters:
        - description: Channel Id.
          format: uuid
          in: path
          name: channelId
          required: true
          type: string
        - description: Optional. Folder Id.
          format: uuid
          in: query
          name: folderId
          type: string
        - description: Optional. User Id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: 'Optional. Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - collectionFormat: multi
          description: Optional. Specify additional filters to apply.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Channel items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get channel items.
      tags:
        - Channels
  /Collections:
    post:
      operationId: CreateCollection
      parameters:
        - description: The name of the collection.
          in: query
          name: name
          type: string
        - collectionFormat: multi
          description: Item Ids to add to the collection.
          in: query
          items:
            type: string
          name: ids
          type: array
        - description: Optional. Create the collection within a specific folder.
          format: uuid
          in: query
          name: parentId
          type: string
        - default: false
          description: Whether or not to lock the new collection.
          in: query
          name: isLocked
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Collection created.
          schema:
            $ref: '#/definitions/CollectionCreationResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a new collection.
      tags:
        - Collection
  '/Collections/{collectionId}/Items':
    delete:
      operationId: RemoveFromCollection
      parameters:
        - description: The collection id.
          format: uuid
          in: path
          name: collectionId
          required: true
          type: string
        - collectionFormat: multi
          description: 'Item ids, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: ids
          required: true
          type: array
      responses:
        '204':
          description: Items removed from collection.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Removes items from a collection.
      tags:
        - Collection
    post:
      operationId: AddToCollection
      parameters:
        - description: The collection id.
          format: uuid
          in: path
          name: collectionId
          required: true
          type: string
        - collectionFormat: multi
          description: 'Item ids, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: ids
          required: true
          type: array
      responses:
        '204':
          description: Items added to collection.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds items to a collection.
      tags:
        - Collection
  /Devices:
    delete:
      operationId: DeleteDevice
      parameters:
        - description: Device Id.
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Device deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Deletes a device.
      tags:
        - Devices
    get:
      operationId: GetDevices
      parameters:
        - description: 'Gets or sets a value indicating whether [supports synchronize].'
          in: query
          name: supportsSync
          type: boolean
        - description: Gets or sets the user identifier.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Devices retrieved.
          schema:
            $ref: '#/definitions/DeviceInfoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get Devices.
      tags:
        - Devices
  /Devices/Info:
    get:
      operationId: GetDeviceInfo
      parameters:
        - description: Device Id.
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Device info retrieved.
          schema:
            $ref: '#/definitions/DeviceInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get info for a device.
      tags:
        - Devices
  /Devices/Options:
    get:
      operationId: GetDeviceOptions
      parameters:
        - description: Device Id.
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Device options retrieved.
          schema:
            $ref: '#/definitions/DeviceOptions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get options for a device.
      tags:
        - Devices
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateDeviceOptions
      parameters:
        - description: Device Id.
          in: query
          name: id
          required: true
          type: string
        - description: Device Options.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceOptions'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Device options updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Update device options.
      tags:
        - Devices
  '/DisplayPreferences/{displayPreferencesId}':
    get:
      operationId: GetDisplayPreferences
      parameters:
        - description: Display preferences id.
          in: path
          name: displayPreferencesId
          required: true
          type: string
        - description: User id.
          format: uuid
          in: query
          name: userId
          required: true
          type: string
        - description: Client.
          in: query
          name: client
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Display preferences retrieved.
          schema:
            $ref: '#/definitions/DisplayPreferencesDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get Display Preferences.
      tags:
        - DisplayPreferences
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateDisplayPreferences
      parameters:
        - description: Display preferences id.
          in: path
          name: displayPreferencesId
          required: true
          type: string
        - description: User Id.
          format: uuid
          in: query
          name: userId
          required: true
          type: string
        - description: Client.
          in: query
          name: client
          required: true
          type: string
        - description: New Display Preferences object.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisplayPreferencesDto'
      responses:
        '204':
          description: Display preferences updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Update Display Preferences.
      tags:
        - DisplayPreferences
  /Dlna/ProfileInfos:
    get:
      operationId: GetProfileInfos
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Device profile infos returned.
          schema:
            items:
              $ref: '#/definitions/DeviceProfileInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get profile infos.
      tags:
        - Dlna
  /Dlna/Profiles:
    post:
      consumes:
        - application/json
        - text/json
      operationId: CreateProfile
      parameters:
        - description: Device profile.
          in: body
          name: body
          schema:
            $ref: '#/definitions/DeviceProfile'
      responses:
        '204':
          description: Device profile created.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a profile.
      tags:
        - Dlna
  /Dlna/Profiles/Default:
    get:
      operationId: GetDefaultProfile
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Default device profile returned.
          schema:
            $ref: '#/definitions/DeviceProfile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the default profile.
      tags:
        - Dlna
  '/Dlna/Profiles/{profileId}':
    delete:
      operationId: DeleteProfile
      parameters:
        - description: Profile id.
          in: path
          name: profileId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Device profile deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device profile not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Deletes a profile.
      tags:
        - Dlna
    get:
      operationId: GetProfile
      parameters:
        - description: Profile Id.
          in: path
          name: profileId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Device profile returned.
          schema:
            $ref: '#/definitions/DeviceProfile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device profile not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a single profile.
      tags:
        - Dlna
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateProfile
      parameters:
        - description: Profile id.
          in: path
          name: profileId
          required: true
          type: string
        - description: Device profile.
          in: body
          name: body
          schema:
            $ref: '#/definitions/DeviceProfile'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Device profile updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Device profile not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a profile.
      tags:
        - Dlna
  '/Dlna/icons/{fileName}':
    get:
      operationId: GetIcon
      parameters:
        - description: The icon filename.
          in: path
          name: fileName
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Request processed.
          schema:
            format: binary
            type: string
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '503':
          description: DLNA is disabled.
      summary: Gets a server icon.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ConnectionManager':
    get:
      operationId: GetConnectionManager
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ConnectionManager/ConnectionManager':
    get:
      operationId: GetConnectionManager_2
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ConnectionManager/ConnectionManager.xml':
    get:
      operationId: GetConnectionManager_3
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ConnectionManager/Control':
    post:
      operationId: ProcessConnectionManagerControlRequest
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Request processed.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Process a connection manager control request.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ContentDirectory':
    get:
      operationId: GetContentDirectory
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna content directory returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna content directory xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ContentDirectory/ContentDirectory':
    get:
      operationId: GetContentDirectory_2
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna content directory returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna content directory xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ContentDirectory/ContentDirectory.xml':
    get:
      operationId: GetContentDirectory_3
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna content directory returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna content directory xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/ContentDirectory/Control':
    post:
      operationId: ProcessContentDirectoryControlRequest
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Request processed.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Process a content directory control request.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/MediaReceiverRegistrar':
    get:
      operationId: GetMediaReceiverRegistrar
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/MediaReceiverRegistrar/Control':
    post:
      operationId: ProcessMediaReceiverRegistrarControlRequest
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Request processed.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Process a media receiver registrar control request.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/MediaReceiverRegistrar/MediaReceiverRegistrar':
    get:
      operationId: GetMediaReceiverRegistrar_2
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/MediaReceiverRegistrar/MediaReceiverRegistrar.xml':
    get:
      operationId: GetMediaReceiverRegistrar_3
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Dlna media receiver registrar xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Gets Dlna media receiver registrar xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/description':
    get:
      operationId: GetDescriptionXml
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Description xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Get Description Xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/description.xml':
    get:
      operationId: GetDescriptionXml_2
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
      produces:
        - text/xml
      responses:
        '200':
          description: Description xml returned.
          schema:
            format: binary
            type: string
        '503':
          description: DLNA is disabled.
      summary: Get Description Xml.
      tags:
        - DlnaServer
  '/Dlna/{serverId}/icons/{fileName}':
    get:
      operationId: GetIconId
      parameters:
        - description: Server UUID.
          in: path
          name: serverId
          required: true
          type: string
        - description: The icon filename.
          in: path
          name: fileName
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Request processed.
          schema:
            format: binary
            type: string
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '503':
          description: DLNA is disabled.
      summary: Gets a server icon.
      tags:
        - DlnaServer
  /Environment/DefaultDirectoryBrowser:
    get:
      operationId: GetDefaultDirectoryBrowser
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Default directory browser returned.
          schema:
            $ref: '#/definitions/DefaultDirectoryBrowserInfoDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get Default directory browser.
      tags:
        - Environment
  /Environment/DirectoryContents:
    get:
      operationId: GetDirectoryContents
      parameters:
        - description: The path.
          in: query
          name: path
          required: true
          type: string
        - default: false
          description: >-
            An optional filter to include or exclude files from the results.
            true/false.
          in: query
          name: includeFiles
          type: boolean
        - default: false
          description: >-
            An optional filter to include or exclude folders from the results.
            true/false.
          in: query
          name: includeDirectories
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Directory contents returned.
          schema:
            items:
              $ref: '#/definitions/FileSystemEntryInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the contents of a given directory in the file system.
      tags:
        - Environment
  /Environment/Drives:
    get:
      operationId: GetDrives
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: List of entries returned.
          schema:
            items:
              $ref: '#/definitions/FileSystemEntryInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available drives from the server's file system.
      tags:
        - Environment
  /Environment/NetworkShares:
    get:
      deprecated: true
      operationId: GetNetworkShares
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Empty array returned.
          schema:
            items:
              $ref: '#/definitions/FileSystemEntryInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets network paths.
      tags:
        - Environment
  /Environment/ParentPath:
    get:
      operationId: GetParentPath
      parameters:
        - description: The path.
          in: query
          name: path
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the parent path of a given path.
      tags:
        - Environment
  /Environment/ValidatePath:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ValidatePath
      parameters:
        - description: Validate request object.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ValidatePathDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Path validated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Path not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Validates path.
      tags:
        - Environment
  /FallbackFont/Fonts:
    get:
      operationId: GetFallbackFontList
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            items:
              $ref: '#/definitions/FontFile'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of available fallback font files.
      tags:
        - Subtitle
  '/FallbackFont/Fonts/{name}':
    get:
      operationId: GetFallbackFont
      parameters:
        - description: The name of the fallback font file to get.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Fallback font file retrieved.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a fallback font file.
      tags:
        - Subtitle
  /Genres:
    get:
      operationId: GetGenres
      parameters:
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: The search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered out based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered in based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - default: true
          description: Optional. Include total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Genres returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets all genres from a given item, folder, or the entire library.'
      tags:
        - Genres
  '/Genres/{genreName}':
    get:
      operationId: GetGenre
      parameters:
        - description: The genre name.
          in: path
          name: genreName
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Genres returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets a genre, by name.'
      tags:
        - Genres
  '/Genres/{name}/Images/{imageType}':
    get:
      operationId: GetGenreImage
      parameters:
        - description: Genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get genre image by name.
      tags:
        - Image
    head:
      operationId: HeadGenreImage
      parameters:
        - description: Genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get genre image by name.
      tags:
        - Image
  '/Genres/{name}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetGenreImageByIndex
      parameters:
        - description: Genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get genre image by name.
      tags:
        - Image
    head:
      operationId: HeadGenreImageByIndex
      parameters:
        - description: Genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get genre image by name.
      tags:
        - Image
  /GetUtcTime:
    get:
      operationId: GetUtcTime
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Time returned.
          schema:
            $ref: '#/definitions/UtcTimeResponse'
      summary: Gets the current UTC time.
      tags:
        - TimeSync
  /Images/General:
    get:
      operationId: GetGeneralImages
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Retrieved list of images.
          schema:
            items:
              $ref: '#/definitions/ImageByNameInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all general images.
      tags:
        - ImageByName
  '/Images/General/{name}/{type}':
    get:
      operationId: GetGeneralImage
      parameters:
        - description: The name of the image.
          in: path
          name: name
          required: true
          type: string
        - description: 'Image Type (primary, backdrop, logo, etc).'
          in: path
          name: type
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream retrieved.
          schema:
            format: binary
            type: string
        '404':
          description: Image not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get General Image.
      tags:
        - ImageByName
  /Images/MediaInfo:
    get:
      operationId: GetMediaInfoImages
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image list retrieved.
          schema:
            items:
              $ref: '#/definitions/ImageByNameInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all media info images.
      tags:
        - ImageByName
  '/Images/MediaInfo/{theme}/{name}':
    get:
      operationId: GetMediaInfoImage
      parameters:
        - description: The theme to get the image from.
          in: path
          name: theme
          required: true
          type: string
        - description: The name of the image.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream retrieved.
          schema:
            format: binary
            type: string
        '404':
          description: Image not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get media info image.
      tags:
        - ImageByName
  /Images/Ratings:
    get:
      operationId: GetRatingImages
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Retrieved list of images.
          schema:
            items:
              $ref: '#/definitions/ImageByNameInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get all general images.
      tags:
        - ImageByName
  '/Images/Ratings/{theme}/{name}':
    get:
      operationId: GetRatingImage
      parameters:
        - description: The theme to get the image from.
          in: path
          name: theme
          required: true
          type: string
        - description: The name of the image.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream retrieved.
          schema:
            format: binary
            type: string
        '404':
          description: Image not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get rating image.
      tags:
        - ImageByName
  /Images/Remote:
    get:
      operationId: GetRemoteImage
      parameters:
        - description: The image url.
          format: uri
          in: query
          name: imageUrl
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Remote image returned.
          schema:
            format: binary
            type: string
        '404':
          description: Remote image not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets a remote image.
      tags:
        - RemoteImage
  /Items:
    delete:
      operationId: DeleteItems
      parameters:
        - collectionFormat: multi
          description: The item ids.
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Items deleted.
        '401':
          description: Unauthorized access.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Deletes items from the library and filesystem.
      tags:
        - Library
    get:
      operationId: GetItems
      parameters:
        - description: The user id supplied as query parameter.
          format: uuid
          in: query
          name: userId
          type: string
        - description: 'Optional filter by maximum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: maxOfficialRating
          type: string
        - description: Optional filter by items with theme songs.
          in: query
          name: hasThemeSong
          type: boolean
        - description: Optional filter by items with theme videos.
          in: query
          name: hasThemeVideo
          type: boolean
        - description: Optional filter by items with subtitles.
          in: query
          name: hasSubtitles
          type: boolean
        - description: Optional filter by items with special features.
          in: query
          name: hasSpecialFeature
          type: boolean
        - description: Optional filter by items with trailers.
          in: query
          name: hasTrailer
          type: boolean
        - description: Optional. Return items that are siblings of a supplied item.
          in: query
          name: adjacentTo
          type: string
        - description: Optional filter by parent index number.
          format: int32
          in: query
          name: parentIndexNumber
          type: integer
        - description: Optional filter by items that have or do not have a parental rating.
          in: query
          name: hasParentalRating
          type: boolean
        - description: Optional filter by items that are HD or not.
          in: query
          name: isHd
          type: boolean
        - description: Optional filter by items that are 4K or not.
          in: query
          name: is4K
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            LocationType. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: locationTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the
            LocationType. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: excludeLocationTypes
          type: array
        - description: Optional filter by items that are missing episodes or not.
          in: query
          name: isMissing
          type: boolean
        - description: Optional filter by items that are unaired episodes or not.
          in: query
          name: isUnaired
          type: boolean
        - description: Optional filter by minimum community rating.
          format: double
          in: query
          name: minCommunityRating
          type: number
        - description: Optional filter by minimum critic rating.
          format: double
          in: query
          name: minCriticRating
          type: number
        - description: Optional. The minimum premiere date. Format = ISO.
          format: date-time
          in: query
          name: minPremiereDate
          type: string
        - description: Optional. The minimum last saved date. Format = ISO.
          format: date-time
          in: query
          name: minDateLastSaved
          type: string
        - description: >-
            Optional. The minimum last saved date for the current user. Format =
            ISO.
          format: date-time
          in: query
          name: minDateLastSavedForUser
          type: string
        - description: Optional. The maximum premiere date. Format = ISO.
          format: date-time
          in: query
          name: maxPremiereDate
          type: string
        - description: Optional filter by items that have an overview or not.
          in: query
          name: hasOverview
          type: boolean
        - description: Optional filter by items that have an imdb id or not.
          in: query
          name: hasImdbId
          type: boolean
        - description: Optional filter by items that have a tmdb id or not.
          in: query
          name: hasTmdbId
          type: boolean
        - description: Optional filter by items that have a tvdb id or not.
          in: query
          name: hasTvdbId
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered by excluding item
            ids. This allows multiple, comma delimited.
          in: query
          items:
            format: uuid
            type: string
          name: excludeItemIds
          type: array
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            When searching within folders, this determines whether or not the
            search will be recursive. true/false.
          in: query
          name: recursive
          type: boolean
        - description: Optional. Filter based on a search term.
          in: query
          name: searchTerm
          type: string
        - description: 'Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional filters to apply. This allows multiple,
            comma delimited. Options: IsFolder, IsNotFolder, IsUnplayed,
            IsPlayed, IsFavorite, IsResumable, Likes, Dislikes.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on those
            containing image types. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: imageTypes
          type: array
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
        - description: 'Optional filter by items that are played, or not.'
          in: query
          name: isPlayed
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            OfficialRating. This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: officialRatings
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on tag. This
            allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: tags
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on production
            year. This allows multiple, comma delimited.
          in: query
          items:
            format: int32
            type: integer
          name: years
          type: array
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person.
          in: query
          name: person
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person id.
          in: query
          items:
            format: uuid
            type: string
          name: personIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, along with Person, results will be filtered
            to include only those containing the specified person and
            PersonType. Allows multiple, comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: studios
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artists.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: artists
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artist id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified artist id.
          in: query
          items:
            format: uuid
            type: string
          name: artistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified album artist id.
          in: query
          items:
            format: uuid
            type: string
          name: albumArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified contributing artist id.
          in: query
          items:
            format: uuid
            type: string
          name: contributingArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: albums
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: albumIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specific items are needed, specify a list of item id's
            to retrieve. This allows multiple, comma delimited.
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
        - collectionFormat: multi
          description: >-
            Optional filter by VideoType (videofile, dvd, bluray, iso). Allows
            multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/VideoType'
          name: videoTypes
          type: array
        - description: 'Optional filter by minimum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: minOfficialRating
          type: string
        - description: Optional filter by items that are locked.
          in: query
          name: isLocked
          type: boolean
        - description: Optional filter by items that are placeholders.
          in: query
          name: isPlaceHolder
          type: boolean
        - description: Optional filter by items that have official ratings.
          in: query
          name: hasOfficialRating
          type: boolean
        - description: Whether or not to hide items behind their boxsets.
          in: query
          name: collapseBoxSetItems
          type: boolean
        - description: Optional. Filter by the minimum width of the item.
          format: int32
          in: query
          name: minWidth
          type: integer
        - description: Optional. Filter by the minimum height of the item.
          format: int32
          in: query
          name: minHeight
          type: integer
        - description: Optional. Filter by the maximum width of the item.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: Optional. Filter by the maximum height of the item.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: 'Optional filter by items that are 3D, or not.'
          in: query
          name: is3D
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by Series Status. Allows multiple, comma delimited.'
          in: query
          items:
            $ref: '#/definitions/SeriesStatus'
          name: seriesStatus
          type: array
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: studioIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - default: true
          description: Optional. Enable the total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets items based on a query.
      tags:
        - Items
  /Items/Counts:
    get:
      operationId: GetItemCounts
      parameters:
        - description: Optional. Get counts from a specific user's library.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. Get counts of favorite items.
          in: query
          name: isFavorite
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item counts returned.
          schema:
            $ref: '#/definitions/ItemCounts'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get item counts.
      tags:
        - Library
  /Items/Filters:
    get:
      operationId: GetQueryFiltersLegacy
      parameters:
        - description: Optional. User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. Parent id.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: 'Optional. Filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Legacy filters retrieved.
          schema:
            $ref: '#/definitions/QueryFiltersLegacy'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets legacy query filters.
      tags:
        - Filter
  /Items/Filters2:
    get:
      operationId: GetQueryFilters
      parameters:
        - description: Optional. User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. Specify this to localize the search to a specific item or
            folder. Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - description: Optional. Is item airing.
          in: query
          name: isAiring
          type: boolean
        - description: Optional. Is item movie.
          in: query
          name: isMovie
          type: boolean
        - description: Optional. Is item sports.
          in: query
          name: isSports
          type: boolean
        - description: Optional. Is item kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional. Is item news.
          in: query
          name: isNews
          type: boolean
        - description: Optional. Is item series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional. Search recursive.
          in: query
          name: recursive
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Filters retrieved.
          schema:
            $ref: '#/definitions/QueryFilters'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets query filters.
      tags:
        - Filter
  '/Items/RemoteSearch/Apply/{itemId}':
    post:
      consumes:
        - application/json
        - text/json
      operationId: ApplySearchCriteria
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - default: true
          description: 'Optional. Whether or not to replace all images. Default: True.'
          in: query
          name: replaceAllImages
          type: boolean
        - description: The remote search result.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoteSearchResult'
      responses:
        '204':
          description: Item metadata refreshed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Applies search criteria to an item and refreshes metadata.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Book:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetBookRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Book remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get book remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/BoxSet:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetBoxSetRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BoxSetInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Box set remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get box set remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Image:
    get:
      operationId: GetRemoteSearchImage
      parameters:
        - description: The image url.
          in: query
          name: imageUrl
          required: true
          type: string
        - description: The provider name.
          in: query
          name: providerName
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Remote image retrieved.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a remote image.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Movie:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetMovieRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovieInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Movie remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get movie remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/MusicAlbum:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetMusicAlbumRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AlbumInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Music album remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get music album remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/MusicArtist:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetMusicArtistRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ArtistInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Music artist remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get music artist remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/MusicVideo:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetMusicVideoRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MusicVideoInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Music video remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get music video remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Person:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetPersonRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PersonLookupInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Person remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get person remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Series:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetSeriesRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SeriesInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Series remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get series remote search.
      tags:
        - ItemLookup
  /Items/RemoteSearch/Trailer:
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetTrailerRemoteSearchResults
      parameters:
        - description: Remote search query.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TrailerInfoRemoteSearchQuery'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Trailer remote search executed.
          schema:
            items:
              $ref: '#/definitions/RemoteSearchResult'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get trailer remote search.
      tags:
        - ItemLookup
  '/Items/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromItem
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  '/Items/{itemId}':
    delete:
      operationId: DeleteItem
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Item deleted.
        '401':
          description: Unauthorized access.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Deletes an item from the library and filesystem.
      tags:
        - Library
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateItem
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The new item properties.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BaseItemDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Item updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates an item.
      tags:
        - ItemUpdate
  '/Items/{itemId}/Ancestors':
    get:
      operationId: GetAncestors
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item parents returned.
          schema:
            items:
              $ref: '#/definitions/BaseItemDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets all parents of an item.
      tags:
        - Library
  '/Items/{itemId}/ContentType':
    post:
      operationId: UpdateItemContentType
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The content type of the item.
          in: query
          name: contentType
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Item content type updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates an item's content type.
      tags:
        - ItemUpdate
  '/Items/{itemId}/CriticReviews':
    get:
      deprecated: true
      operationId: GetCriticReviews
      parameters:
        - in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Critic reviews returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets critic review for an item.
      tags:
        - Library
  '/Items/{itemId}/Download':
    get:
      operationId: GetDownload
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Media downloaded.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Downloads item media.
      tags:
        - Library
  '/Items/{itemId}/ExternalIdInfos':
    get:
      operationId: GetExternalIdInfos
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: External id info retrieved.
          schema:
            items:
              $ref: '#/definitions/ExternalIdInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get the item's external id info.
      tags:
        - ItemLookup
  '/Items/{itemId}/File':
    get:
      operationId: GetFile
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: File stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get the original file of an item.
      tags:
        - Library
  '/Items/{itemId}/Images':
    get:
      operationId: GetItemImageInfos
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item images returned.
          schema:
            items:
              $ref: '#/definitions/ImageInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get item image infos.
      tags:
        - Image
  '/Items/{itemId}/Images/{imageType}':
    delete:
      operationId: DeleteItemImage
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Delete an item's image.
      tags:
        - Image
    get:
      operationId: GetItemImage
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: >-
            Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
            image.
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
    head:
      operationId: HeadItemImage
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: >-
            Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
            image.
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
    post:
      operationId: SetItemImage
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image saved.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Set item image.
      tags:
        - Image
  '/Items/{itemId}/Images/{imageType}/{imageIndex}':
    delete:
      operationId: DeleteItemImageByIndex
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Delete an item's image.
      tags:
        - Image
    get:
      operationId: GetItemImageByIndex
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: >-
            Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
            image.
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
    head:
      operationId: HeadItemImageByIndex
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: >-
            Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
            image.
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
    post:
      operationId: SetItemImageByIndex
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: (Unused) Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image saved.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Set item image.
      tags:
        - Image
  '/Items/{itemId}/Images/{imageType}/{imageIndex}/Index':
    post:
      operationId: UpdateItemImageIndex
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Old image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: New image index.
          format: int32
          in: query
          name: newIndex
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image index updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates the index for an item image.
      tags:
        - Image
  '/Items/{itemId}/Images/{imageType}/{imageIndex}/{tag}/{format}/{maxWidth}/{maxHeight}/{percentPlayed}/{unplayedCount}':
    get:
      operationId: GetItemImage2
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The maximum image width to return.
          format: int32
          in: path
          name: maxWidth
          required: true
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: path
          name: maxHeight
          required: true
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: path
          name: tag
          required: true
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: path
          name: format
          required: true
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: path
          name: percentPlayed
          required: true
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: path
          name: unplayedCount
          required: true
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
    head:
      operationId: HeadItemImage2
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: The maximum image width to return.
          format: int32
          in: path
          name: maxWidth
          required: true
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: path
          name: maxHeight
          required: true
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: path
          name: tag
          required: true
          type: string
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: path
          name: format
          required: true
          type: string
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: path
          name: percentPlayed
          required: true
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: path
          name: unplayedCount
          required: true
          type: integer
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the item's image.
      tags:
        - Image
  '/Items/{itemId}/MetadataEditor':
    get:
      operationId: GetMetadataEditorInfo
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item metadata editor returned.
          schema:
            $ref: '#/definitions/MetadataEditorInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets metadata editor info for an item.
      tags:
        - ItemUpdate
  '/Items/{itemId}/PlaybackInfo':
    get:
      operationId: GetPlaybackInfo
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Playback info returned.
          schema:
            $ref: '#/definitions/PlaybackInfoResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live playback media info for an item.
      tags:
        - MediaInfo
    post:
      consumes:
        - application/json
        - text/json
      description: >-
        For backwards compatibility parameters can be sent via Query or Body,
        with Query having higher precedence.
      operationId: GetPostedPlaybackInfo
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: The start time in ticks.
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: The audio stream index.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: The subtitle stream index.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: The maximum number of audio channels.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: The media source id.
          in: query
          name: mediaSourceId
          type: string
        - description: The livestream id.
          in: query
          name: liveStreamId
          type: string
        - description: Whether to auto open the livestream.
          in: query
          name: autoOpenLiveStream
          type: boolean
        - description: 'Whether to enable direct play. Default: true.'
          in: query
          name: enableDirectPlay
          type: boolean
        - description: 'Whether to enable direct stream. Default: true.'
          in: query
          name: enableDirectStream
          type: boolean
        - description: 'Whether to enable transcoding. Default: true.'
          in: query
          name: enableTranscoding
          type: boolean
        - description: 'Whether to allow to copy the video stream. Default: true.'
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: 'Whether to allow to copy the audio stream. Default: true.'
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: The playback info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/PlaybackInfoDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Playback info returned.
          schema:
            $ref: '#/definitions/PlaybackInfoResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live playback media info for an item.
      tags:
        - MediaInfo
  '/Items/{itemId}/Refresh':
    post:
      operationId: Post
      parameters:
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: (Optional) Specifies the metadata refresh mode.
          enum:
            - None
            - ValidationOnly
            - Default
            - FullRefresh
          in: query
          name: metadataRefreshMode
          type: string
        - description: (Optional) Specifies the image refresh mode.
          enum:
            - None
            - ValidationOnly
            - Default
            - FullRefresh
          in: query
          name: imageRefreshMode
          type: string
        - default: false
          description: >-
            (Optional) Determines if metadata should be replaced. Only
            applicable if mode is FullRefresh.
          in: query
          name: replaceAllMetadata
          type: boolean
        - default: false
          description: >-
            (Optional) Determines if images should be replaced. Only applicable
            if mode is FullRefresh.
          in: query
          name: replaceAllImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Item metadata refresh queued.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item to refresh not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Refreshes metadata for an item.
      tags:
        - ItemRefresh
  '/Items/{itemId}/RemoteImages':
    get:
      operationId: GetRemoteImages
      parameters:
        - description: Item Id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: query
          name: type
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. The image provider to use.
          in: query
          name: providerName
          type: string
        - default: false
          description: Optional. Include all languages.
          in: query
          name: includeAllLanguages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Remote Images returned.
          schema:
            $ref: '#/definitions/RemoteImageResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets available remote images for an item.
      tags:
        - RemoteImage
  '/Items/{itemId}/RemoteImages/Download':
    post:
      operationId: DownloadRemoteImage
      parameters:
        - description: Item Id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: query
          name: type
          required: true
          type: string
        - description: The image url.
          in: query
          name: imageUrl
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Remote image downloaded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Remote image not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Downloads a remote image for an item.
      tags:
        - RemoteImage
  '/Items/{itemId}/RemoteImages/Providers':
    get:
      operationId: GetRemoteImageProviders
      parameters:
        - description: Item Id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Returned remote image providers.
          schema:
            items:
              $ref: '#/definitions/ImageProviderInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets available remote image providers for an item.
      tags:
        - RemoteImage
  '/Items/{itemId}/RemoteSearch/Subtitles/{language}':
    get:
      operationId: SearchRemoteSubtitles
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The language of the subtitles.
          in: path
          name: language
          required: true
          type: string
        - description: Optional. Only show subtitles which are a perfect match.
          in: query
          name: isPerfectMatch
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Subtitles retrieved.
          schema:
            items:
              $ref: '#/definitions/RemoteSubtitleInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Search remote subtitles.
      tags:
        - Subtitle
  '/Items/{itemId}/RemoteSearch/Subtitles/{subtitleId}':
    post:
      operationId: DownloadRemoteSubtitles
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The subtitle id.
          in: path
          name: subtitleId
          required: true
          type: string
      responses:
        '204':
          description: Subtitle downloaded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Downloads a remote subtitle.
      tags:
        - Subtitle
  '/Items/{itemId}/Similar':
    get:
      operationId: GetSimilarItems
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  '/Items/{itemId}/ThemeMedia':
    get:
      operationId: GetThemeMedia
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - default: false
          description: >-
            Optional. Determines whether or not parent items should be searched
            for theme media.
          in: query
          name: inheritFromParent
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Theme songs and videos returned.
          schema:
            $ref: '#/definitions/AllThemeMediaResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
      security:
        - CustomAuthentication: []
      summary: Get theme songs and videos for an item.
      tags:
        - Library
  '/Items/{itemId}/ThemeSongs':
    get:
      operationId: GetThemeSongs
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - default: false
          description: >-
            Optional. Determines whether or not parent items should be searched
            for theme media.
          in: query
          name: inheritFromParent
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Theme songs returned.
          schema:
            $ref: '#/definitions/ThemeMediaResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get theme songs for an item.
      tags:
        - Library
  '/Items/{itemId}/ThemeVideos':
    get:
      operationId: GetThemeVideos
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - default: false
          description: >-
            Optional. Determines whether or not parent items should be searched
            for theme media.
          in: query
          name: inheritFromParent
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Theme videos returned.
          schema:
            $ref: '#/definitions/ThemeMediaResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get theme videos for an item.
      tags:
        - Library
  /Libraries/AvailableOptions:
    get:
      operationId: GetLibraryOptionsInfo
      parameters:
        - description: Library content type.
          in: query
          name: libraryContentType
          type: string
        - description: Whether this is a new library.
          in: query
          name: isNewLibrary
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Library options info returned.
          schema:
            $ref: '#/definitions/LibraryOptionsResultDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the library options info.
      tags:
        - Library
  /Library/Media/Updated:
    post:
      consumes:
        - application/json
        - text/json
      operationId: PostUpdatedMedia
      parameters:
        - description: A list of updated media paths.
          in: body
          name: body
          required: true
          schema:
            description: A list of updated media paths.
            items:
              $ref: '#/definitions/MediaUpdateInfoDto'
            type: array
      responses:
        '204':
          description: Report success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that new movies have been added by an external source.
      tags:
        - Library
  /Library/MediaFolders:
    get:
      operationId: GetMediaFolders
      parameters:
        - description: 'Optional. Filter by folders that are marked hidden, or not.'
          in: query
          name: isHidden
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Media folders returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets all user media folders.
      tags:
        - Library
  /Library/Movies/Added:
    post:
      operationId: PostAddedMovies
      parameters:
        - description: The tmdbId.
          in: query
          name: tmdbId
          type: string
        - description: The imdbId.
          in: query
          name: imdbId
          type: string
      responses:
        '204':
          description: Report success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that new movies have been added by an external source.
      tags:
        - Library
  /Library/Movies/Updated:
    post:
      operationId: PostUpdatedMovies
      parameters:
        - description: The tmdbId.
          in: query
          name: tmdbId
          type: string
        - description: The imdbId.
          in: query
          name: imdbId
          type: string
      responses:
        '204':
          description: Report success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that new movies have been added by an external source.
      tags:
        - Library
  /Library/PhysicalPaths:
    get:
      operationId: GetPhysicalPaths
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Physical paths returned.
          schema:
            items:
              type: string
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of physical paths from virtual folders.
      tags:
        - Library
  /Library/Refresh:
    get:
      operationId: RefreshLibrary
      parameters: []
      responses:
        '204':
          description: Library scan started.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Starts a library scan.
      tags:
        - Library
  /Library/Series/Added:
    post:
      operationId: PostAddedSeries
      parameters:
        - description: The tvdbId.
          in: query
          name: tvdbId
          type: string
      responses:
        '204':
          description: Report success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: >-
        Reports that new episodes of a series have been added by an external
        source.
      tags:
        - Library
  /Library/Series/Updated:
    post:
      operationId: PostUpdatedSeries
      parameters:
        - description: The tvdbId.
          in: query
          name: tvdbId
          type: string
      responses:
        '204':
          description: Report success.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: >-
        Reports that new episodes of a series have been added by an external
        source.
      tags:
        - Library
  /Library/VirtualFolders:
    delete:
      operationId: RemoveVirtualFolder
      parameters:
        - description: The name of the folder.
          in: query
          name: name
          type: string
        - default: false
          description: Whether to refresh the library.
          in: query
          name: refreshLibrary
          type: boolean
      responses:
        '204':
          description: Folder removed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Removes a virtual folder.
      tags:
        - LibraryStructure
    get:
      operationId: GetVirtualFolders
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Virtual folders retrieved.
          schema:
            items:
              $ref: '#/definitions/VirtualFolderInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets all virtual folders.
      tags:
        - LibraryStructure
    post:
      consumes:
        - application/json
        - text/json
      operationId: AddVirtualFolder
      parameters:
        - description: The name of the virtual folder.
          in: query
          name: name
          type: string
        - description: The type of the collection.
          in: query
          name: collectionType
          type: string
        - collectionFormat: multi
          description: The paths of the virtual folder.
          in: query
          items:
            type: string
          name: paths
          type: array
        - default: false
          description: Whether to refresh the library.
          in: query
          name: refreshLibrary
          type: boolean
        - description: The library options.
          in: body
          name: body
          schema:
            $ref: '#/definitions/AddVirtualFolderDto'
      responses:
        '204':
          description: Folder added.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds a virtual folder.
      tags:
        - LibraryStructure
  /Library/VirtualFolders/LibraryOptions:
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateLibraryOptions
      parameters:
        - description: The library name and options.
          in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateLibraryOptionsDto'
      responses:
        '204':
          description: Library updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Update library options.
      tags:
        - LibraryStructure
  /Library/VirtualFolders/Name:
    post:
      operationId: RenameVirtualFolder
      parameters:
        - description: The name of the virtual folder.
          in: query
          name: name
          type: string
        - description: The new name.
          in: query
          name: newName
          type: string
        - default: false
          description: Whether to refresh the library.
          in: query
          name: refreshLibrary
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Folder renamed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Library doesn't exist.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '409':
          description: Library already exists.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Renames a virtual folder.
      tags:
        - LibraryStructure
  /Library/VirtualFolders/Paths:
    delete:
      operationId: RemoveMediaPath
      parameters:
        - description: The name of the library.
          in: query
          name: name
          type: string
        - description: The path to remove.
          in: query
          name: path
          type: string
        - default: false
          description: Whether to refresh the library.
          in: query
          name: refreshLibrary
          type: boolean
      responses:
        '204':
          description: Media path removed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Remove a media path.
      tags:
        - LibraryStructure
    post:
      consumes:
        - application/json
        - text/json
      operationId: AddMediaPath
      parameters:
        - default: false
          description: Whether to refresh the library.
          in: query
          name: refreshLibrary
          type: boolean
        - description: The media path dto.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MediaPathDto'
      responses:
        '204':
          description: Media path added.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Add a media path to a library.
      tags:
        - LibraryStructure
  /Library/VirtualFolders/Paths/Update:
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateMediaPath
      parameters:
        - description: The name of the library.
          in: query
          name: name
          type: string
        - description: The path info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/MediaPathInfo'
      responses:
        '204':
          description: Media path updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates a media path.
      tags:
        - LibraryStructure
  /LiveStreams/Close:
    post:
      operationId: CloseLiveStream
      parameters:
        - description: The livestream id.
          in: query
          name: liveStreamId
          required: true
          type: string
      responses:
        '204':
          description: Livestream closed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Closes a media source.
      tags:
        - MediaInfo
  /LiveStreams/Open:
    post:
      consumes:
        - application/json
        - text/json
      operationId: OpenLiveStream
      parameters:
        - description: The open token.
          in: query
          name: openToken
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The maximum streaming bitrate.
          format: int32
          in: query
          name: maxStreamingBitrate
          type: integer
        - description: The start time in ticks.
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: The audio stream index.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: The subtitle stream index.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: The maximum number of audio channels.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: The item id.
          format: uuid
          in: query
          name: itemId
          type: string
        - description: 'Whether to enable direct play. Default: true.'
          in: query
          name: enableDirectPlay
          type: boolean
        - description: 'Whether to enable direct stream. Default: true.'
          in: query
          name: enableDirectStream
          type: boolean
        - description: The open live stream dto.
          in: body
          name: body
          schema:
            $ref: '#/definitions/OpenLiveStreamDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Media source opened.
          schema:
            $ref: '#/definitions/LiveStreamResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Opens a media source.
      tags:
        - MediaInfo
  /LiveTv/ChannelMappingOptions:
    get:
      operationId: GetChannelMappingOptions
      parameters:
        - description: Provider id.
          in: query
          name: providerId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Channel mapping options returned.
          schema:
            $ref: '#/definitions/ChannelMappingOptionsDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get channel mapping options.
      tags:
        - LiveTv
  /LiveTv/ChannelMappings:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SetChannelMapping
      parameters:
        - description: The set channel mapping dto.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetChannelMappingDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Created channel mapping returned.
          schema:
            $ref: '#/definitions/TunerChannelMapping'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Set channel mappings.
      tags:
        - LiveTv
  /LiveTv/Channels:
    get:
      operationId: GetLiveTvChannels
      parameters:
        - description: Optional. Filter by channel type.
          enum:
            - TV
            - Radio
          in: query
          name: type
          type: string
        - description: Optional. Filter by user and attach user data.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. Filter for movies.
          in: query
          name: isMovie
          type: boolean
        - description: Optional. Filter for series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional. Filter for news.
          in: query
          name: isNews
          type: boolean
        - description: Optional. Filter for kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional. Filter for sports.
          in: query
          name: isSports
          type: boolean
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: 'Optional. Filter by channels that are favorites, or not.'
          in: query
          name: isFavorite
          type: boolean
        - description: 'Optional. Filter by channels that are liked, or not.'
          in: query
          name: isLiked
          type: boolean
        - description: 'Optional. Filter by channels that are disliked, or not.'
          in: query
          name: isDisliked
          type: boolean
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: '"Optional. The image types to include in the output.'
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - collectionFormat: multi
          description: Optional. Key to sort by.
          in: query
          items:
            type: string
          name: sortBy
          type: array
        - description: Optional. Sort order.
          enum:
            - Ascending
            - Descending
          in: query
          name: sortOrder
          type: string
        - default: false
          description: Optional. Incorporate favorite and like status into channel sorting.
          in: query
          name: enableFavoriteSorting
          type: boolean
        - default: true
          description: Optional. Adds current program info to each channel.
          in: query
          name: addCurrentProgram
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Available live tv channels returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available live tv channels.
      tags:
        - LiveTv
  '/LiveTv/Channels/{channelId}':
    get:
      operationId: GetChannel
      parameters:
        - description: Channel id.
          format: uuid
          in: path
          name: channelId
          required: true
          type: string
        - description: Optional. Attach user data.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Live tv channel returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a live tv channel.
      tags:
        - LiveTv
  /LiveTv/GuideInfo:
    get:
      operationId: GetGuideInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Guid info returned.
          schema:
            $ref: '#/definitions/GuideInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get guid info.
      tags:
        - LiveTv
  /LiveTv/Info:
    get:
      operationId: GetLiveTvInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Available live tv services returned.
          schema:
            $ref: '#/definitions/LiveTvInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available live tv services.
      tags:
        - LiveTv
  /LiveTv/ListingProviders:
    delete:
      operationId: DeleteListingProvider
      parameters:
        - description: Listing provider id.
          in: query
          name: id
          type: string
      responses:
        '204':
          description: Listing provider deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Delete listing provider.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: AddListingProvider
      parameters:
        - description: Password.
          in: query
          name: pw
          type: string
        - default: false
          description: Validate listings.
          in: query
          name: validateListings
          type: boolean
        - default: false
          description: Validate login.
          in: query
          name: validateLogin
          type: boolean
        - description: New listings info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ListingsProviderInfo'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Created listings provider returned.
          schema:
            $ref: '#/definitions/ListingsProviderInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds a listings provider.
      tags:
        - LiveTv
  /LiveTv/ListingProviders/Default:
    get:
      operationId: GetDefaultListingProvider
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Default listings provider info returned.
          schema:
            $ref: '#/definitions/ListingsProviderInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets default listings provider info.
      tags:
        - LiveTv
  /LiveTv/ListingProviders/Lineups:
    get:
      operationId: GetLineups
      parameters:
        - description: Provider id.
          in: query
          name: id
          type: string
        - description: Provider type.
          in: query
          name: type
          type: string
        - description: Location.
          in: query
          name: location
          type: string
        - description: Country.
          in: query
          name: country
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Available lineups returned.
          schema:
            items:
              $ref: '#/definitions/NameIdPair'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available lineups.
      tags:
        - LiveTv
  /LiveTv/ListingProviders/SchedulesDirect/Countries:
    get:
      operationId: GetSchedulesDirectCountries
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Available countries returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available countries.
      tags:
        - LiveTv
  '/LiveTv/LiveRecordings/{recordingId}/stream':
    get:
      operationId: GetLiveRecordingFile
      parameters:
        - description: Recording id.
          in: path
          name: recordingId
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Recording stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Recording not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets a live tv recording stream.
      tags:
        - LiveTv
  '/LiveTv/LiveStreamFiles/{streamId}/stream.{container}':
    get:
      operationId: GetLiveStreamFile
      parameters:
        - description: Stream id.
          in: path
          name: streamId
          required: true
          type: string
        - description: Container type.
          in: path
          name: container
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Stream not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets a live tv channel stream.
      tags:
        - LiveTv
  /LiveTv/Programs:
    get:
      operationId: GetLiveTvPrograms
      parameters:
        - collectionFormat: multi
          description: The channels to return guide information for.
          in: query
          items:
            format: uuid
            type: string
          name: channelIds
          type: array
        - description: Optional. Filter by user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The minimum premiere start date.
          format: date-time
          in: query
          name: minStartDate
          type: string
        - description: 'Optional. Filter by programs that have completed airing, or not.'
          in: query
          name: hasAired
          type: boolean
        - description: 'Optional. Filter by programs that are currently airing, or not.'
          in: query
          name: isAiring
          type: boolean
        - description: Optional. The maximum premiere start date.
          format: date-time
          in: query
          name: maxStartDate
          type: string
        - description: Optional. The minimum premiere end date.
          format: date-time
          in: query
          name: minEndDate
          type: string
        - description: Optional. The maximum premiere end date.
          format: date-time
          in: query
          name: maxEndDate
          type: string
        - description: Optional. Filter for movies.
          in: query
          name: isMovie
          type: boolean
        - description: Optional. Filter for series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional. Filter for news.
          in: query
          name: isNews
          type: boolean
        - description: Optional. Filter for kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional. Filter for sports.
          in: query
          name: isSports
          type: boolean
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Name, StartDate.
          in: query
          name: sortBy
          type: string
        - description: 'Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - collectionFormat: multi
          description: The genres to return guide information for.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: The genre ids to return guide information for.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: Optional. Filter by series timer id.
          in: query
          name: seriesTimerId
          type: string
        - description: Optional. Filter by library series id.
          format: uuid
          in: query
          name: librarySeriesId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - default: true
          description: Retrieve total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Live tv epgs returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available live tv epgs.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: GetPrograms
      parameters:
        - description: Request body.
          in: body
          name: body
          schema:
            $ref: '#/definitions/GetProgramsDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Live tv epgs returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available live tv epgs.
      tags:
        - LiveTv
  /LiveTv/Programs/Recommended:
    get:
      operationId: GetRecommendedPrograms
      parameters:
        - description: Optional. filter by user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: 'Optional. Filter by programs that are currently airing, or not.'
          in: query
          name: isAiring
          type: boolean
        - description: 'Optional. Filter by programs that have completed airing, or not.'
          in: query
          name: hasAired
          type: boolean
        - description: Optional. Filter for series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional. Filter for movies.
          in: query
          name: isMovie
          type: boolean
        - description: Optional. Filter for news.
          in: query
          name: isNews
          type: boolean
        - description: Optional. Filter for kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional. Filter for sports.
          in: query
          name: isSports
          type: boolean
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: The genres to return guide information for.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. include user data.
          in: query
          name: enableUserData
          type: boolean
        - default: true
          description: Retrieve total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Recommended epgs returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets recommended live tv epgs.
      tags:
        - LiveTv
  '/LiveTv/Programs/{programId}':
    get:
      operationId: GetProgram
      parameters:
        - description: Program id.
          in: path
          name: programId
          required: true
          type: string
        - description: Optional. Attach user data.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Program returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a live tv program.
      tags:
        - LiveTv
  /LiveTv/Recordings:
    get:
      operationId: GetRecordings
      parameters:
        - description: Optional. Filter by channel id.
          in: query
          name: channelId
          type: string
        - description: Optional. Filter by user and attach user data.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Filter by recording status.
          enum:
            - New
            - InProgress
            - Completed
            - Cancelled
            - ConflictedOk
            - ConflictedNotOk
            - Error
          in: query
          name: status
          type: string
        - description: 'Optional. Filter by recordings that are in progress, or not.'
          in: query
          name: isInProgress
          type: boolean
        - description: Optional. Filter by recordings belonging to a series timer.
          in: query
          name: seriesTimerId
          type: string
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: Optional. Filter for movies.
          in: query
          name: isMovie
          type: boolean
        - description: Optional. Filter for series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional. Filter for kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional. Filter for sports.
          in: query
          name: isSports
          type: boolean
        - description: Optional. Filter for news.
          in: query
          name: isNews
          type: boolean
        - description: Optional. Filter for is library item.
          in: query
          name: isLibraryItem
          type: boolean
        - default: true
          description: Optional. Return total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Live tv recordings returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live tv recordings.
      tags:
        - LiveTv
  /LiveTv/Recordings/Folders:
    get:
      operationId: GetRecordingFolders
      parameters:
        - description: Optional. Filter by user and attach user data.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Recording folders returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets recording folders.
      tags:
        - LiveTv
  /LiveTv/Recordings/Groups:
    get:
      deprecated: true
      operationId: GetRecordingGroups
      parameters:
        - description: Optional. Filter by user and attach user data.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Recording groups returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live tv recording groups.
      tags:
        - LiveTv
  '/LiveTv/Recordings/Groups/{groupId}':
    get:
      deprecated: true
      operationId: GetRecordingGroup
      parameters:
        - description: Group id.
          format: uuid
          in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get recording group.
      tags:
        - LiveTv
  /LiveTv/Recordings/Series:
    get:
      deprecated: true
      operationId: GetRecordingsSeries
      parameters:
        - description: Optional. Filter by channel id.
          in: query
          name: channelId
          type: string
        - description: Optional. Filter by user and attach user data.
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. Filter by recording group.
          in: query
          name: groupId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Filter by recording status.
          enum:
            - New
            - InProgress
            - Completed
            - Cancelled
            - ConflictedOk
            - ConflictedNotOk
            - Error
          in: query
          name: status
          type: string
        - description: 'Optional. Filter by recordings that are in progress, or not.'
          in: query
          name: isInProgress
          type: boolean
        - description: Optional. Filter by recordings belonging to a series timer.
          in: query
          name: seriesTimerId
          type: string
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - default: true
          description: Optional. Return total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Live tv recordings returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live tv recording series.
      tags:
        - LiveTv
  '/LiveTv/Recordings/{recordingId}':
    delete:
      operationId: DeleteRecording
      parameters:
        - description: Recording id.
          format: uuid
          in: path
          name: recordingId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Recording deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Deletes a live tv recording.
      tags:
        - LiveTv
    get:
      operationId: GetRecording
      parameters:
        - description: Recording id.
          format: uuid
          in: path
          name: recordingId
          required: true
          type: string
        - description: Optional. Attach user data.
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Recording returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a live tv recording.
      tags:
        - LiveTv
  /LiveTv/SeriesTimers:
    get:
      operationId: GetSeriesTimers
      parameters:
        - description: Optional. Sort by SortName or Priority.
          in: query
          name: sortBy
          type: string
        - description: Optional. Sort in Ascending or Descending order.
          enum:
            - Ascending
            - Descending
          in: query
          name: sortOrder
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Timers returned.
          schema:
            $ref: '#/definitions/SeriesTimerInfoDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets live tv series timers.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: CreateSeriesTimer
      parameters:
        - description: New series timer info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/SeriesTimerInfoDto'
      responses:
        '204':
          description: Series timer info created.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a live tv series timer.
      tags:
        - LiveTv
  '/LiveTv/SeriesTimers/{timerId}':
    delete:
      operationId: CancelSeriesTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
      responses:
        '204':
          description: Timer cancelled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Cancels a live tv series timer.
      tags:
        - LiveTv
    get:
      operationId: GetSeriesTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Series timer returned.
          schema:
            $ref: '#/definitions/SeriesTimerInfoDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Series timer not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a live tv series timer.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateSeriesTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
        - description: New series timer info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/SeriesTimerInfoDto'
      responses:
        '204':
          description: Series timer updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates a live tv series timer.
      tags:
        - LiveTv
  /LiveTv/Timers:
    get:
      operationId: GetTimers
      parameters:
        - description: Optional. Filter by channel id.
          in: query
          name: channelId
          type: string
        - description: Optional. Filter by timers belonging to a series timer.
          in: query
          name: seriesTimerId
          type: string
        - description: Optional. Filter by timers that are active.
          in: query
          name: isActive
          type: boolean
        - description: Optional. Filter by timers that are scheduled.
          in: query
          name: isScheduled
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimerInfoDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the live tv timers.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: CreateTimer
      parameters:
        - description: New timer info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/TimerInfoDto'
      responses:
        '204':
          description: Timer created.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a live tv timer.
      tags:
        - LiveTv
  /LiveTv/Timers/Defaults:
    get:
      operationId: GetDefaultTimer
      parameters:
        - description: Optional. To attach default values based on a program.
          in: query
          name: programId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Default values returned.
          schema:
            $ref: '#/definitions/SeriesTimerInfoDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the default values for a new timer.
      tags:
        - LiveTv
  '/LiveTv/Timers/{timerId}':
    delete:
      operationId: CancelTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
      responses:
        '204':
          description: Timer deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Cancels a live tv timer.
      tags:
        - LiveTv
    get:
      operationId: GetTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Timer returned.
          schema:
            $ref: '#/definitions/TimerInfoDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a timer.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateTimer
      parameters:
        - description: Timer id.
          in: path
          name: timerId
          required: true
          type: string
        - description: New timer info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/TimerInfoDto'
      responses:
        '204':
          description: Timer updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates a live tv timer.
      tags:
        - LiveTv
  /LiveTv/TunerHosts:
    delete:
      operationId: DeleteTunerHost
      parameters:
        - description: Tuner host id.
          in: query
          name: id
          type: string
      responses:
        '204':
          description: Tuner host deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Deletes a tuner host.
      tags:
        - LiveTv
    post:
      consumes:
        - application/json
        - text/json
      operationId: AddTunerHost
      parameters:
        - description: New tuner host.
          in: body
          name: body
          schema:
            $ref: '#/definitions/TunerHostInfo'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Created tuner host returned.
          schema:
            $ref: '#/definitions/TunerHostInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds a tuner host.
      tags:
        - LiveTv
  /LiveTv/TunerHosts/Types:
    get:
      operationId: GetTunerHostTypes
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Tuner host types returned.
          schema:
            items:
              $ref: '#/definitions/NameIdPair'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get tuner host types.
      tags:
        - LiveTv
  /LiveTv/Tuners/Discover:
    get:
      operationId: DiscoverTuners
      parameters:
        - default: false
          description: Only discover new tuners.
          in: query
          name: newDevicesOnly
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Tuners returned.
          schema:
            items:
              $ref: '#/definitions/TunerHostInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Discover tuners.
      tags:
        - LiveTv
  /LiveTv/Tuners/Discvover:
    get:
      operationId: DiscvoverTuners
      parameters:
        - default: false
          description: Only discover new tuners.
          in: query
          name: newDevicesOnly
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Tuners returned.
          schema:
            items:
              $ref: '#/definitions/TunerHostInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Discover tuners.
      tags:
        - LiveTv
  '/LiveTv/Tuners/{tunerId}/Reset':
    post:
      operationId: ResetTuner
      parameters:
        - description: Tuner id.
          in: path
          name: tunerId
          required: true
          type: string
      responses:
        '204':
          description: Tuner reset.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Resets a tv tuner.
      tags:
        - LiveTv
  /Localization/Countries:
    get:
      operationId: GetCountries
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Known countries returned.
          schema:
            items:
              $ref: '#/definitions/CountryInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets known countries.
      tags:
        - Localization
  /Localization/Cultures:
    get:
      operationId: GetCultures
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Known cultures returned.
          schema:
            items:
              $ref: '#/definitions/CultureDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets known cultures.
      tags:
        - Localization
  /Localization/Options:
    get:
      operationId: GetLocalizationOptions
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Localization options returned.
          schema:
            items:
              $ref: '#/definitions/LocalizationOption'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets localization options.
      tags:
        - Localization
  /Localization/ParentalRatings:
    get:
      operationId: GetParentalRatings
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Known parental ratings returned.
          schema:
            items:
              $ref: '#/definitions/ParentalRating'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets known parental ratings.
      tags:
        - Localization
  /Movies/Recommendations:
    get:
      operationId: GetMovieRecommendations
      parameters:
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: Optional. The fields to return.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - default: 5
          description: The max number of categories to return.
          format: int32
          in: query
          name: categoryLimit
          type: integer
        - default: 8
          description: The max number of items to return per category.
          format: int32
          in: query
          name: itemLimit
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Movie recommendations returned.
          schema:
            items:
              $ref: '#/definitions/RecommendationDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets movie recommendations.
      tags:
        - Movies
  '/Movies/{itemId}/Similar':
    get:
      operationId: GetSimilarMovies
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  /MusicGenres:
    get:
      deprecated: true
      operationId: GetMusicGenres
      parameters:
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: The search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered out based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered in based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - default: true
          description: Optional. Include total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Music genres returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets all music genres from a given item, folder, or the entire library.'
      tags:
        - MusicGenres
  '/MusicGenres/{genreName}':
    get:
      operationId: GetMusicGenre
      parameters:
        - description: The genre name.
          in: path
          name: genreName
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets a music genre, by name.'
      tags:
        - MusicGenres
  '/MusicGenres/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromMusicGenres
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  '/MusicGenres/{name}/Images/{imageType}':
    get:
      operationId: GetMusicGenreImage
      parameters:
        - description: Music genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get music genre image by name.
      tags:
        - Image
    head:
      operationId: HeadMusicGenreImage
      parameters:
        - description: Music genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get music genre image by name.
      tags:
        - Image
  '/MusicGenres/{name}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetMusicGenreImageByIndex
      parameters:
        - description: Music genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get music genre image by name.
      tags:
        - Image
    head:
      operationId: HeadMusicGenreImageByIndex
      parameters:
        - description: Music genre name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get music genre image by name.
      tags:
        - Image
  '/MusicGenres/{name}/InstantMix':
    get:
      operationId: GetInstantMixFromMusicGenre
      parameters:
        - description: The genre name.
          in: path
          name: name
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  /Notifications/Admin:
    post:
      operationId: CreateAdminNotification
      parameters:
        - description: The URL of the notification.
          in: query
          name: url
          type: string
        - description: The level of the notification.
          enum:
            - Normal
            - Warning
            - Error
          in: query
          name: level
          type: string
        - default: ''
          description: The name of the notification.
          in: query
          name: name
          type: string
        - default: ''
          description: The description of the notification.
          in: query
          name: description
          type: string
      responses:
        '204':
          description: Notification sent.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sends a notification to all admins.
      tags:
        - Notifications
  /Notifications/Services:
    get:
      operationId: GetNotificationServices
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: All notification services returned.
          schema:
            items:
              $ref: '#/definitions/NameIdPair'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets notification services.
      tags:
        - Notifications
  /Notifications/Types:
    get:
      operationId: GetNotificationTypes
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: All notification types returned.
          schema:
            items:
              $ref: '#/definitions/NotificationTypeInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets notification types.
      tags:
        - Notifications
  '/Notifications/{userId}':
    get:
      operationId: GetNotifications
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Notifications returned.
          schema:
            $ref: '#/definitions/NotificationResultDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a user's notifications.
      tags:
        - Notifications
  '/Notifications/{userId}/Read':
    post:
      operationId: SetRead
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '204':
          description: Notifications set as read.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets notifications as read.
      tags:
        - Notifications
  '/Notifications/{userId}/Summary':
    get:
      operationId: GetNotificationsSummary
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Summary of user's notifications returned.
          schema:
            $ref: '#/definitions/NotificationsSummaryDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a user's notification summary.
      tags:
        - Notifications
  '/Notifications/{userId}/Unread':
    post:
      operationId: SetUnread
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '204':
          description: Notifications set as unread.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets notifications as unread.
      tags:
        - Notifications
  /Packages:
    get:
      operationId: GetPackages
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Available packages returned.
          schema:
            items:
              $ref: '#/definitions/PackageInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets available packages.
      tags:
        - Package
  '/Packages/Installed/{name}':
    post:
      operationId: InstallPackage
      parameters:
        - description: Package name.
          in: path
          name: name
          required: true
          type: string
        - description: GUID of the associated assembly.
          format: uuid
          in: query
          name: assemblyGuid
          type: string
        - description: Optional version. Defaults to latest version.
          in: query
          name: version
          type: string
        - description: Optional. Specify the repository to install from.
          in: query
          name: repositoryUrl
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Package found.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Package not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Installs a package.
      tags:
        - Package
  '/Packages/Installing/{packageId}':
    delete:
      operationId: CancelPackageInstallation
      parameters:
        - description: Installation Id.
          format: uuid
          in: path
          name: packageId
          required: true
          type: string
      responses:
        '204':
          description: Installation cancelled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Cancels a package installation.
      tags:
        - Package
  '/Packages/{name}':
    get:
      operationId: GetPackageInfo
      parameters:
        - description: The name of the package.
          in: path
          name: name
          required: true
          type: string
        - description: The GUID of the associated assembly.
          format: uuid
          in: query
          name: assemblyGuid
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Package retrieved.
          schema:
            $ref: '#/definitions/PackageInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a package by name or assembly GUID.
      tags:
        - Package
  /Persons:
    get:
      operationId: GetPersons
      parameters:
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: The search term.
          in: query
          name: searchTerm
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: Optional. Specify additional filters to apply.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: >-
            Optional filter by items that are marked as favorite, or not. userId
            is required.
          in: query
          name: isFavorite
          type: boolean
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified results will be filtered to exclude those
            containing the specified PersonType. Allows multiple,
            comma-delimited.
          in: query
          items:
            type: string
          name: excludePersonTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified results will be filtered to include only
            those containing the specified PersonType. Allows multiple,
            comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - description: >-
            Optional. If specified, person results will be filtered on items
            related to said persons.
          format: uuid
          in: query
          name: appearsInItemId
          type: string
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Persons returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets all persons.
      tags:
        - Persons
  '/Persons/{name}':
    get:
      operationId: GetPerson
      parameters:
        - description: Person name.
          in: path
          name: name
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Person returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Person not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get person by name.
      tags:
        - Persons
  '/Persons/{name}/Images/{imageType}':
    get:
      operationId: GetPersonImage
      parameters:
        - description: Person name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get person image by name.
      tags:
        - Image
    head:
      operationId: HeadPersonImage
      parameters:
        - description: Person name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get person image by name.
      tags:
        - Image
  '/Persons/{name}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetPersonImageByIndex
      parameters:
        - description: Person name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get person image by name.
      tags:
        - Image
    head:
      operationId: HeadPersonImageByIndex
      parameters:
        - description: Person name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get person image by name.
      tags:
        - Image
  /Playback/BitrateTest:
    get:
      operationId: GetBitrateTestBytes
      parameters:
        - default: 102400
          description: The bitrate. Defaults to 102400.
          format: int32
          in: query
          name: size
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Test buffer returned.
          schema:
            format: binary
            type: string
        '400':
          description: 'Size has to be a numer between 0 and 10,000,000.'
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Tests the network with a request with the size of the bitrate.
      tags:
        - MediaInfo
  /Playlists:
    post:
      consumes:
        - application/json
        - text/json
      description: >-
        For backwards compatibility parameters can be sent via Query or Body,
        with Query having higher precedence.
      operationId: CreatePlaylist
      parameters:
        - description: The playlist name.
          in: query
          name: name
          type: string
        - collectionFormat: multi
          description: The item ids.
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: The media type.
          in: query
          name: mediaType
          type: string
        - description: The create playlist payload.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CreatePlaylistDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PlaylistCreationResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a new playlist.
      tags:
        - Playlists
  '/Playlists/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  '/Playlists/{playlistId}/Items':
    delete:
      operationId: RemoveFromPlaylist
      parameters:
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
        - collectionFormat: multi
          description: 'The item ids, comma delimited.'
          in: query
          items:
            type: string
          name: entryIds
          type: array
      responses:
        '204':
          description: Items removed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Removes items from a playlist.
      tags:
        - Playlists
    get:
      operationId: GetPlaylistItems
      parameters:
        - description: The playlist id.
          format: uuid
          in: path
          name: playlistId
          required: true
          type: string
        - description: User id.
          format: uuid
          in: query
          name: userId
          required: true
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Original playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Playlist not found.
      security:
        - CustomAuthentication: []
      summary: Gets the original items of a playlist.
      tags:
        - Playlists
    post:
      operationId: AddToPlaylist
      parameters:
        - description: The playlist id.
          format: uuid
          in: path
          name: playlistId
          required: true
          type: string
        - collectionFormat: multi
          description: 'Item id, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
        - description: The userId.
          format: uuid
          in: query
          name: userId
          type: string
      responses:
        '204':
          description: Items added to playlist.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds items to a playlist.
      tags:
        - Playlists
  '/Playlists/{playlistId}/Items/{itemId}/Move/{newIndex}':
    post:
      operationId: MoveItem
      parameters:
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
        - description: The item id.
          in: path
          name: itemId
          required: true
          type: string
        - description: The new index.
          format: int32
          in: path
          name: newIndex
          required: true
          type: integer
      responses:
        '204':
          description: Item moved to new index.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Moves a playlist item.
      tags:
        - Playlists
  /Plugins:
    get:
      operationId: GetPlugins
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Installed plugins returned.
          schema:
            items:
              $ref: '#/definitions/PluginInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of currently installed plugins.
      tags:
        - Plugins
  /Plugins/SecurityInfo:
    post:
      consumes:
        - application/json
        - text/json
      deprecated: true
      operationId: UpdatePluginSecurityInfo
      parameters:
        - description: Plugin security info.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PluginSecurityInfo'
      responses:
        '204':
          description: Plugin security info updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates plugin security info.
      tags:
        - Plugins
  '/Plugins/{pluginId}':
    delete:
      deprecated: true
      operationId: UninstallPlugin
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin uninstalled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Uninstalls a plugin.
      tags:
        - Plugins
  '/Plugins/{pluginId}/Configuration':
    get:
      operationId: GetPluginConfiguration
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Plugin configuration returned.
          schema:
            $ref: '#/definitions/BasePluginConfiguration'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found or plugin configuration not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets plugin configuration.
      tags:
        - Plugins
    post:
      description: Accepts plugin configuration as JSON body.
      operationId: UpdatePluginConfiguration
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin configuration updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found or plugin does not have configuration.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates plugin configuration.
      tags:
        - Plugins
  '/Plugins/{pluginId}/Manifest':
    post:
      operationId: GetPluginManifest
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin manifest returned.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a plugin's manifest.
      tags:
        - Plugins
  '/Plugins/{pluginId}/{version}':
    delete:
      operationId: UninstallPluginByVersion
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
        - description: Plugin version.
          in: path
          name: version
          required: true
          type: object
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin uninstalled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Uninstalls a plugin by version.
      tags:
        - Plugins
  '/Plugins/{pluginId}/{version}/Disable':
    post:
      operationId: DisablePlugin
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
        - description: Plugin version.
          in: path
          name: version
          required: true
          type: object
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin disabled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Disable a plugin.
      tags:
        - Plugins
  '/Plugins/{pluginId}/{version}/Enable':
    post:
      operationId: EnablePlugin
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
        - description: Plugin version.
          in: path
          name: version
          required: true
          type: object
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Plugin enabled.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Enables a disabled plugin.
      tags:
        - Plugins
  '/Plugins/{pluginId}/{version}/Image':
    get:
      operationId: GetPluginImage
      parameters:
        - description: Plugin id.
          format: uuid
          in: path
          name: pluginId
          required: true
          type: string
        - description: Plugin version.
          in: path
          name: version
          required: true
          type: object
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Plugin image returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a plugin's image.
      tags:
        - Plugins
  '/Providers/Subtitles/Subtitles/{id}':
    get:
      operationId: GetRemoteSubtitles
      parameters:
        - description: The item id.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: File returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the remote subtitles.
      tags:
        - Subtitle
  /QuickConnect/Activate:
    post:
      operationId: Activate
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Quick connect has been temporarily activated.
        '401':
          description: Unauthorized
        '403':
          description: Quick connect is unavailable on this server.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Temporarily activates quick connect for five minutes.
      tags:
        - QuickConnect
  /QuickConnect/Authorize:
    post:
      operationId: Authorize
      parameters:
        - description: Quick connect code to authorize.
          in: query
          name: code
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Quick connect result authorized successfully.
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Unknown user id.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Authorizes a pending quick connect request.
      tags:
        - QuickConnect
  /QuickConnect/Available:
    post:
      operationId: Available
      parameters:
        - description: New MediaBrowser.Model.QuickConnect.QuickConnectState.
          enum:
            - Unavailable
            - Available
            - Active
          in: query
          name: status
          type: string
      responses:
        '204':
          description: Quick connect state set successfully.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Enables or disables quick connect.
      tags:
        - QuickConnect
  /QuickConnect/Connect:
    get:
      operationId: Connect
      parameters:
        - description: Secret previously returned from the Initiate endpoint.
          in: query
          name: secret
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Quick connect result returned.
          schema:
            $ref: '#/definitions/QuickConnectResult'
        '404':
          description: Unknown quick connect secret.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Attempts to retrieve authentication information.
      tags:
        - QuickConnect
  /QuickConnect/Deauthorize:
    post:
      operationId: Deauthorize
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: All quick connect devices were deleted.
          schema:
            format: int32
            type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Deauthorize all quick connect devices for the current user.
      tags:
        - QuickConnect
  /QuickConnect/Initiate:
    get:
      operationId: Initiate
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Quick connect request successfully created.
          schema:
            $ref: '#/definitions/QuickConnectResult'
        '401':
          description: Quick connect is not active on this server.
      summary: Initiate a new quick connect request.
      tags:
        - QuickConnect
  /QuickConnect/Status:
    get:
      operationId: GetStatus
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Quick connect state returned.
          schema:
            $ref: '#/definitions/QuickConnectState'
      summary: Gets the current quick connect state.
      tags:
        - QuickConnect
  /Repositories:
    get:
      operationId: GetRepositories
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Package repositories returned.
          schema:
            items:
              $ref: '#/definitions/RepositoryInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets all package repositories.
      tags:
        - Package
    post:
      consumes:
        - application/json
        - text/json
      operationId: SetRepositories
      parameters:
        - description: The list of package repositories.
          in: body
          name: body
          schema:
            description: The list of package repositories.
            items:
              $ref: '#/definitions/RepositoryInfo'
            type: array
            x-nullable: true
      responses:
        '204':
          description: Package repositories saved.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets the enabled and existing package repositories.
      tags:
        - Package
  /ScheduledTasks:
    get:
      operationId: GetTasks
      parameters:
        - description: 'Optional filter tasks that are hidden, or not.'
          in: query
          name: isHidden
          type: boolean
        - description: 'Optional filter tasks that are enabled, or not.'
          in: query
          name: isEnabled
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Scheduled tasks retrieved.
          schema:
            items:
              $ref: '#/definitions/TaskInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get tasks.
      tags:
        - ScheduledTasks
  '/ScheduledTasks/Running/{taskId}':
    delete:
      operationId: StopTask
      parameters:
        - description: Task Id.
          in: path
          name: taskId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Task stopped.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Task not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Stop specified task.
      tags:
        - ScheduledTasks
    post:
      operationId: StartTask
      parameters:
        - description: Task Id.
          in: path
          name: taskId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Task started.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Task not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Start specified task.
      tags:
        - ScheduledTasks
  '/ScheduledTasks/{taskId}':
    get:
      operationId: GetTask
      parameters:
        - description: Task Id.
          in: path
          name: taskId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Task retrieved.
          schema:
            $ref: '#/definitions/TaskInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Task not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Get task by id.
      tags:
        - ScheduledTasks
  '/ScheduledTasks/{taskId}/Triggers':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateTask
      parameters:
        - description: Task Id.
          in: path
          name: taskId
          required: true
          type: string
        - description: Triggers.
          in: body
          name: body
          required: true
          schema:
            description: Triggers.
            items:
              $ref: '#/definitions/TaskTriggerInfo'
            type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Task triggers updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Task not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Update specified task triggers.
      tags:
        - ScheduledTasks
  /Search/Hints:
    get:
      operationId: Get
      parameters:
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            Optional. Supply a user id to search within a user's library or omit
            to search all.
          format: uuid
          in: query
          name: userId
          type: string
        - description: The search term to filter on.
          in: query
          name: searchTerm
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            If specified, only results with the specified item types are
            returned. This allows multiple, comma delimeted.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            If specified, results with these item types are filtered out. This
            allows multiple, comma delimeted.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            If specified, only results with the specified media types are
            returned. This allows multiple, comma delimeted.
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - description: 'If specified, only children of the parent are returned.'
          format: uuid
          in: query
          name: parentId
          type: string
        - description: Optional filter for movies.
          in: query
          name: isMovie
          type: boolean
        - description: Optional filter for series.
          in: query
          name: isSeries
          type: boolean
        - description: Optional filter for news.
          in: query
          name: isNews
          type: boolean
        - description: Optional filter for kids.
          in: query
          name: isKids
          type: boolean
        - description: Optional filter for sports.
          in: query
          name: isSports
          type: boolean
        - default: true
          description: Optional filter whether to include people.
          in: query
          name: includePeople
          type: boolean
        - default: true
          description: Optional filter whether to include media.
          in: query
          name: includeMedia
          type: boolean
        - default: true
          description: Optional filter whether to include genres.
          in: query
          name: includeGenres
          type: boolean
        - default: true
          description: Optional filter whether to include studios.
          in: query
          name: includeStudios
          type: boolean
        - default: true
          description: Optional filter whether to include artists.
          in: query
          name: includeArtists
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Search hint returned.
          schema:
            $ref: '#/definitions/SearchHintResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the search hint result.
      tags:
        - Search
  /Sessions:
    get:
      operationId: GetSessions
      parameters:
        - description: Filter by sessions that a given user is allowed to remote control.
          format: uuid
          in: query
          name: controllableByUserId
          type: string
        - description: Filter by device Id.
          in: query
          name: deviceId
          type: string
        - description: Optional. Filter by sessions that were active in the last n seconds.
          format: int32
          in: query
          name: activeWithinSeconds
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: List of sessions returned.
          schema:
            items:
              $ref: '#/definitions/SessionInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of sessions.
      tags:
        - Session
  /Sessions/Capabilities:
    post:
      operationId: PostCapabilities
      parameters:
        - description: The session id.
          in: query
          name: id
          type: string
        - collectionFormat: multi
          description: >-
            A list of playable media types, comma delimited. Audio, Video, Book,
            Photo.
          in: query
          items:
            type: string
          name: playableMediaTypes
          type: array
        - collectionFormat: multi
          description: 'A list of supported remote control commands, comma delimited.'
          in: query
          items:
            $ref: '#/definitions/GeneralCommandType'
          name: supportedCommands
          type: array
        - default: false
          description: Determines whether media can be played remotely..
          in: query
          name: supportsMediaControl
          type: boolean
        - default: false
          description: Determines whether sync is supported.
          in: query
          name: supportsSync
          type: boolean
        - default: true
          description: Determines whether the device supports a unique identifier.
          in: query
          name: supportsPersistentIdentifier
          type: boolean
      responses:
        '204':
          description: Capabilities posted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates capabilities for a device.
      tags:
        - Session
  /Sessions/Capabilities/Full:
    post:
      consumes:
        - application/json
        - text/json
      operationId: PostFullCapabilities
      parameters:
        - description: The session id.
          in: query
          name: id
          type: string
        - description: The MediaBrowser.Model.Session.ClientCapabilities.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ClientCapabilitiesDto'
      responses:
        '204':
          description: Capabilities updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates capabilities for a device.
      tags:
        - Session
  /Sessions/Logout:
    post:
      operationId: ReportSessionEnded
      parameters: []
      responses:
        '204':
          description: Session end reported to server.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that a session has ended.
      tags:
        - Session
  /Sessions/Playing:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ReportPlaybackStart
      parameters:
        - description: The playback start info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/PlaybackStartInfo'
      responses:
        '204':
          description: Playback start recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports playback has started within a session.
      tags:
        - Playstate
  /Sessions/Playing/Ping:
    post:
      operationId: PingPlaybackSession
      parameters:
        - description: Playback session id.
          in: query
          name: playSessionId
          type: string
      responses:
        '204':
          description: Playback session pinged.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Pings a playback session.
      tags:
        - Playstate
  /Sessions/Playing/Progress:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ReportPlaybackProgress
      parameters:
        - description: The playback progress info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/PlaybackProgressInfo'
      responses:
        '204':
          description: Playback progress recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports playback progress within a session.
      tags:
        - Playstate
  /Sessions/Playing/Stopped:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ReportPlaybackStopped
      parameters:
        - description: The playback stop info.
          in: body
          name: body
          schema:
            $ref: '#/definitions/PlaybackStopInfo'
      responses:
        '204':
          description: Playback stop recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports playback has stopped within a session.
      tags:
        - Playstate
  /Sessions/Viewing:
    post:
      operationId: ReportViewing
      parameters:
        - description: The session id.
          in: query
          name: sessionId
          type: string
        - description: The item id.
          in: query
          name: itemId
          required: true
          type: string
      responses:
        '204':
          description: Session reported to server.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that a session is viewing an item.
      tags:
        - Session
  '/Sessions/{sessionId}/Command':
    post:
      consumes:
        - application/json
        - text/json
      operationId: SendFullGeneralCommand
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The MediaBrowser.Model.Session.GeneralCommand.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GeneralCommand'
      responses:
        '204':
          description: Full general command sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Issues a full general command to a client.
      tags:
        - Session
  '/Sessions/{sessionId}/Command/{command}':
    post:
      operationId: SendGeneralCommand
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The command to send.
          enum:
            - MoveUp
            - MoveDown
            - MoveLeft
            - MoveRight
            - PageUp
            - PageDown
            - PreviousLetter
            - NextLetter
            - ToggleOsd
            - ToggleContextMenu
            - Select
            - Back
            - TakeScreenshot
            - SendKey
            - SendString
            - GoHome
            - GoToSettings
            - VolumeUp
            - VolumeDown
            - Mute
            - Unmute
            - ToggleMute
            - SetVolume
            - SetAudioStreamIndex
            - SetSubtitleStreamIndex
            - ToggleFullscreen
            - DisplayContent
            - GoToSearch
            - DisplayMessage
            - SetRepeatMode
            - ChannelUp
            - ChannelDown
            - Guide
            - ToggleStats
            - PlayMediaSource
            - PlayTrailers
            - SetShuffleQueue
            - PlayState
            - PlayNext
            - ToggleOsdMenu
            - Play
          in: path
          name: command
          required: true
          type: string
      responses:
        '204':
          description: General command sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Issues a general command to a client.
      tags:
        - Session
  '/Sessions/{sessionId}/Message':
    post:
      operationId: SendMessageCommand
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The message test.
          in: query
          name: text
          required: true
          type: string
        - description: The message header.
          in: query
          name: header
          type: string
        - description: >-
            The message timeout. If omitted the user will have to confirm
            viewing the message.
          format: int64
          in: query
          name: timeoutMs
          type: integer
      responses:
        '204':
          description: Message sent.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Issues a command to a client to display a message to the user.
      tags:
        - Session
  '/Sessions/{sessionId}/Playing':
    post:
      operationId: Play
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: >-
            The type of play command to issue (PlayNow, PlayNext, PlayLast).
            Clients who have not yet implemented play next and play last may
            play now.
          enum:
            - PlayNow
            - PlayNext
            - PlayLast
            - PlayInstantMix
            - PlayShuffle
          in: query
          name: playCommand
          required: true
          type: string
        - collectionFormat: multi
          description: 'The ids of the items to play, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: itemIds
          required: true
          type: array
        - description: The starting position of the first item.
          format: int64
          in: query
          name: startPositionTicks
          type: integer
      responses:
        '204':
          description: Instruction sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Instructs a session to play an item.
      tags:
        - Session
  '/Sessions/{sessionId}/Playing/{command}':
    post:
      operationId: SendPlaystateCommand
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The MediaBrowser.Model.Session.PlaystateCommand.
          enum:
            - Stop
            - Pause
            - Unpause
            - NextTrack
            - PreviousTrack
            - Seek
            - Rewind
            - FastForward
            - PlayPause
          in: path
          name: command
          required: true
          type: string
        - description: The optional position ticks.
          format: int64
          in: query
          name: seekPositionTicks
          type: integer
        - description: The optional controlling user id.
          in: query
          name: controllingUserId
          type: string
      responses:
        '204':
          description: Playstate command sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Issues a playstate command to a client.
      tags:
        - Session
  '/Sessions/{sessionId}/System/{command}':
    post:
      operationId: SendSystemCommand
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The command to send.
          enum:
            - MoveUp
            - MoveDown
            - MoveLeft
            - MoveRight
            - PageUp
            - PageDown
            - PreviousLetter
            - NextLetter
            - ToggleOsd
            - ToggleContextMenu
            - Select
            - Back
            - TakeScreenshot
            - SendKey
            - SendString
            - GoHome
            - GoToSettings
            - VolumeUp
            - VolumeDown
            - Mute
            - Unmute
            - ToggleMute
            - SetVolume
            - SetAudioStreamIndex
            - SetSubtitleStreamIndex
            - ToggleFullscreen
            - DisplayContent
            - GoToSearch
            - DisplayMessage
            - SetRepeatMode
            - ChannelUp
            - ChannelDown
            - Guide
            - ToggleStats
            - PlayMediaSource
            - PlayTrailers
            - SetShuffleQueue
            - PlayState
            - PlayNext
            - ToggleOsdMenu
            - Play
          in: path
          name: command
          required: true
          type: string
      responses:
        '204':
          description: System command sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Issues a system command to a client.
      tags:
        - Session
  '/Sessions/{sessionId}/User/{userId}':
    delete:
      operationId: RemoveUserFromSession
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      responses:
        '204':
          description: User removed from session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Removes an additional user from a session.
      tags:
        - Session
    post:
      operationId: AddUserToSession
      parameters:
        - description: The session id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      responses:
        '204':
          description: User added to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Adds an additional user to a session.
      tags:
        - Session
  '/Sessions/{sessionId}/Viewing':
    post:
      operationId: DisplayContent
      parameters:
        - description: The session Id.
          in: path
          name: sessionId
          required: true
          type: string
        - description: The type of item to browse to.
          in: query
          name: itemType
          required: true
          type: string
        - description: The Id of the item.
          in: query
          name: itemId
          required: true
          type: string
        - description: The name of the item.
          in: query
          name: itemName
          required: true
          type: string
      responses:
        '204':
          description: Instruction sent to session.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Instructs a session to browse to an item or view.
      tags:
        - Session
  /Shows/NextUp:
    get:
      operationId: GetNextUp
      parameters:
        - description: The user id of the user to get the next up episodes for.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Filter by series id.
          in: query
          name: seriesId
          type: string
        - description: >-
            Optional. Specify this to localize the search to a specific item or
            folder. Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - description: Optional. Include image information in output.
          in: query
          name: enableImges
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - default: true
          description: Whether to enable the total records count. Defaults to true.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of next up episodes.
      tags:
        - TvShows
  /Shows/Upcoming:
    get:
      operationId: GetUpcomingEpisodes
      parameters:
        - description: The user id of the user to get the upcoming episodes for.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: >-
            Optional. Specify this to localize the search to a specific item or
            folder. Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - description: Optional. Include image information in output.
          in: query
          name: enableImges
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of upcoming episodes.
      tags:
        - TvShows
  '/Shows/{itemId}/Similar':
    get:
      operationId: GetSimilarShows
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  '/Shows/{seriesId}/Episodes':
    get:
      operationId: GetEpisodes
      parameters:
        - description: The series id.
          format: uuid
          in: path
          name: seriesId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional filter by season number.
          format: int32
          in: query
          name: season
          type: integer
        - description: Optional. Filter by season id.
          format: uuid
          in: query
          name: seasonId
          type: string
        - description: Optional. Filter by items that are missing episodes or not.
          in: query
          name: isMissing
          type: boolean
        - description: Optional. Return items that are siblings of a supplied item.
          in: query
          name: adjacentTo
          type: string
        - description: Optional. Skip through the list until a given item is found.
          format: uuid
          in: query
          name: startItemId
          type: string
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets episodes for a tv season.
      tags:
        - TvShows
  '/Shows/{seriesId}/Seasons':
    get:
      operationId: GetSeasons
      parameters:
        - description: The series id.
          format: uuid
          in: path
          name: seriesId
          required: true
          type: string
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Filter by special season.
          in: query
          name: isSpecialSeason
          type: boolean
        - description: Optional. Filter by items that are missing episodes or not.
          in: query
          name: isMissing
          type: boolean
        - description: Optional. Return items that are siblings of a supplied item.
          in: query
          name: adjacentTo
          type: string
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets seasons for a tv series.
      tags:
        - TvShows
  '/Songs/{id}/InstantMix':
    get:
      operationId: GetInstantMixFromSong
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Instant playlist returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates an instant playlist based on a given song.
      tags:
        - InstantMix
  /Startup/Complete:
    post:
      operationId: CompleteWizard
      parameters: []
      responses:
        '204':
          description: Startup wizard completed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Completes the startup wizard.
      tags:
        - Startup
  /Startup/Configuration:
    get:
      operationId: GetStartupConfiguration
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Initial startup wizard configuration retrieved.
          schema:
            $ref: '#/definitions/StartupConfigurationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the initial startup wizard configuration.
      tags:
        - Startup
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateInitialConfiguration
      parameters:
        - description: The updated startup configuration.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartupConfigurationDto'
      responses:
        '204':
          description: Configuration saved.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets the initial startup wizard configuration.
      tags:
        - Startup
  /Startup/FirstUser:
    get:
      operationId: GetFirstUser_2
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Initial user retrieved.
          schema:
            $ref: '#/definitions/StartupUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the first user.
      tags:
        - Startup
  /Startup/RemoteAccess:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SetRemoteAccess
      parameters:
        - description: The startup remote access dto.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartupRemoteAccessDto'
      responses:
        '204':
          description: Configuration saved.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets remote access and UPnP.
      tags:
        - Startup
  /Startup/User:
    get:
      operationId: GetFirstUser
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Initial user retrieved.
          schema:
            $ref: '#/definitions/StartupUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the first user.
      tags:
        - Startup
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateStartupUser
      parameters:
        - description: The DTO containing username and password.
          in: body
          name: body
          schema:
            $ref: '#/definitions/StartupUserDto'
      responses:
        '204':
          description: Updated user name and password.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Sets the user name and password.
      tags:
        - Startup
  /Studios:
    get:
      operationId: GetStudios
      parameters:
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. Search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered out based on item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: User id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
        - default: true
          description: Total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Studios returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: 'Gets all studios from a given item, folder, or the entire library.'
      tags:
        - Studios
  '/Studios/{name}':
    get:
      operationId: GetStudio
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Studio returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a studio by name.
      tags:
        - Studios
  '/Studios/{name}/Images/{imageType}':
    get:
      operationId: GetStudioImage
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get studio image by name.
      tags:
        - Image
    head:
      operationId: HeadStudioImage
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get studio image by name.
      tags:
        - Image
  '/Studios/{name}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetStudioImageByIndex
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get studio image by name.
      tags:
        - Image
    head:
      operationId: HeadStudioImageByIndex
      parameters:
        - description: Studio name.
          in: path
          name: name
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get studio image by name.
      tags:
        - Image
  /SyncPlay/Buffering:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayBuffering
      parameters:
        - description: The player status.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BufferRequestDto'
      responses:
        '204':
          description: Group state update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Notify SyncPlay group that member is buffering.
      tags:
        - SyncPlay
  /SyncPlay/Join:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayJoinGroup
      parameters:
        - description: The group to join.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JoinGroupRequestDto'
      responses:
        '204':
          description: Group join successful.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Join an existing SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Leave:
    post:
      operationId: SyncPlayLeaveGroup
      parameters: []
      responses:
        '204':
          description: Group leave successful.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Leave the joined SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/List:
    get:
      operationId: SyncPlayGetGroups
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Groups returned.
          schema:
            items:
              $ref: '#/definitions/GroupInfoDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets all SyncPlay groups.
      tags:
        - SyncPlay
  /SyncPlay/MovePlaylistItem:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayMovePlaylistItem
      parameters:
        - description: The new position for the item.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MovePlaylistItemRequestDto'
      responses:
        '204':
          description: Queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to move an item in the playlist in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/New:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayCreateGroup
      parameters:
        - description: The settings of the new group.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewGroupRequestDto'
      responses:
        '204':
          description: New group created.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Create a new SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/NextItem:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayNextItem
      parameters:
        - description: The current item information.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NextItemRequestDto'
      responses:
        '204':
          description: Next item update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request next item in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Pause:
    post:
      operationId: SyncPlayPause
      parameters: []
      responses:
        '204':
          description: Pause update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request pause in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Ping:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayPing
      parameters:
        - description: The new ping.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PingRequestDto'
      responses:
        '204':
          description: Ping updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Update session ping.
      tags:
        - SyncPlay
  /SyncPlay/PreviousItem:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayPreviousItem
      parameters:
        - description: The current item information.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PreviousItemRequestDto'
      responses:
        '204':
          description: Previous item update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request previous item in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Queue:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayQueue
      parameters:
        - description: The items to add.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QueueRequestDto'
      responses:
        '204':
          description: Queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to queue items to the playlist of a SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Ready:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayReady
      parameters:
        - description: The player status.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ReadyRequestDto'
      responses:
        '204':
          description: Group state update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Notify SyncPlay group that member is ready for playback.
      tags:
        - SyncPlay
  /SyncPlay/RemoveFromPlaylist:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlayRemoveFromPlaylist
      parameters:
        - description: The items to remove.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveFromPlaylistRequestDto'
      responses:
        '204':
          description: Queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to remove items from the playlist in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Seek:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySeek
      parameters:
        - description: The new playback position.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SeekRequestDto'
      responses:
        '204':
          description: Seek update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request seek in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/SetIgnoreWait:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySetIgnoreWait
      parameters:
        - description: The settings to set.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IgnoreWaitRequestDto'
      responses:
        '204':
          description: Member state updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request SyncPlay group to ignore member during group-wait.
      tags:
        - SyncPlay
  /SyncPlay/SetNewQueue:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySetNewQueue
      parameters:
        - description: The new playlist to play in the group.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PlayRequestDto'
      responses:
        '204':
          description: Queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to set new playlist in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/SetPlaylistItem:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySetPlaylistItem
      parameters:
        - description: The new item to play.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetPlaylistItemRequestDto'
      responses:
        '204':
          description: Queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to change playlist item in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/SetRepeatMode:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySetRepeatMode
      parameters:
        - description: The new repeat mode.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetRepeatModeRequestDto'
      responses:
        '204':
          description: Play queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to set repeat mode in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/SetShuffleMode:
    post:
      consumes:
        - application/json
        - text/json
      operationId: SyncPlaySetShuffleMode
      parameters:
        - description: The new shuffle mode.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetShuffleModeRequestDto'
      responses:
        '204':
          description: Play queue update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request to set shuffle mode in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Stop:
    post:
      operationId: SyncPlayStop
      parameters: []
      responses:
        '204':
          description: Stop update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request stop in SyncPlay group.
      tags:
        - SyncPlay
  /SyncPlay/Unpause:
    post:
      operationId: SyncPlayUnpause
      parameters: []
      responses:
        '204':
          description: Unpause update sent to all group members.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Request unpause in SyncPlay group.
      tags:
        - SyncPlay
  /System/ActivityLog/Entries:
    get:
      operationId: GetLogEntries
      parameters:
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: Optional. The minimum date. Format = ISO.
          format: date-time
          in: query
          name: minDate
          type: string
        - description: 'Optional. Filter log entries if it has user id, or not.'
          in: query
          name: hasUserId
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Activity log returned.
          schema:
            $ref: '#/definitions/ActivityLogEntryQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets activity log entries.
      tags:
        - ActivityLog
  /System/Configuration:
    get:
      operationId: GetConfiguration
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Application configuration returned.
          schema:
            $ref: '#/definitions/ServerConfiguration'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets application configuration.
      tags:
        - Configuration
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateConfiguration
      parameters:
        - description: Configuration.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServerConfiguration'
      responses:
        '204':
          description: Configuration updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates application configuration.
      tags:
        - Configuration
  /System/Configuration/MetadataOptions/Default:
    get:
      operationId: GetDefaultMetadataOptions
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Metadata options returned.
          schema:
            $ref: '#/definitions/MetadataOptions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a default MetadataOptions object.
      tags:
        - Configuration
  '/System/Configuration/{key}':
    get:
      operationId: GetNamedConfiguration
      parameters:
        - description: Configuration key.
          in: path
          name: key
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Configuration returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a named configuration.
      tags:
        - Configuration
    post:
      operationId: UpdateNamedConfiguration
      parameters:
        - description: Configuration key.
          in: path
          name: key
          required: true
          type: string
      responses:
        '204':
          description: Named configuration updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates named configuration.
      tags:
        - Configuration
  /System/Endpoint:
    get:
      operationId: GetEndpointInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            $ref: '#/definitions/EndPointInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets information about the request endpoint.
      tags:
        - System
  /System/Info:
    get:
      operationId: GetSystemInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            $ref: '#/definitions/SystemInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets information about the server.
      tags:
        - System
  /System/Info/Public:
    get:
      operationId: GetPublicSystemInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            $ref: '#/definitions/PublicSystemInfo'
      summary: Gets public information about the server.
      tags:
        - System
  /System/Logs:
    get:
      operationId: GetServerLogs
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            items:
              $ref: '#/definitions/LogFile'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of available server log files.
      tags:
        - System
  /System/Logs/Log:
    get:
      operationId: GetLogFile
      parameters:
        - description: The name of the log file to get.
          in: query
          name: name
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: Log file retrieved.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a log file.
      tags:
        - System
  /System/MediaEncoder/Path:
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateMediaEncoderPath
      parameters:
        - description: Media encoder path form body.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MediaEncoderPathDto'
      responses:
        '204':
          description: Media encoder path updated.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates the path to the media encoder.
      tags:
        - Configuration
  /System/Ping:
    get:
      operationId: GetPingSystem
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            type: string
      summary: Pings the system.
      tags:
        - System
    post:
      operationId: PostPingSystem
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            type: string
      summary: Pings the system.
      tags:
        - System
  /System/Restart:
    post:
      operationId: RestartApplication
      parameters: []
      responses:
        '204':
          description: Server restarted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Restarts the application.
      tags:
        - System
  /System/Shutdown:
    post:
      operationId: ShutdownApplication
      parameters: []
      responses:
        '204':
          description: Server shut down.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Shuts down the application.
      tags:
        - System
  /System/WakeOnLanInfo:
    get:
      operationId: GetWakeOnLanInfo
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Information retrieved.
          schema:
            items:
              $ref: '#/definitions/WakeOnLanInfo'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets wake on lan information.
      tags:
        - System
  /Trailers:
    get:
      operationId: GetTrailers
      parameters:
        - description: The user id.
          format: uuid
          in: query
          name: userId
          type: string
        - description: 'Optional filter by maximum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: maxOfficialRating
          type: string
        - description: Optional filter by items with theme songs.
          in: query
          name: hasThemeSong
          type: boolean
        - description: Optional filter by items with theme videos.
          in: query
          name: hasThemeVideo
          type: boolean
        - description: Optional filter by items with subtitles.
          in: query
          name: hasSubtitles
          type: boolean
        - description: Optional filter by items with special features.
          in: query
          name: hasSpecialFeature
          type: boolean
        - description: Optional filter by items with trailers.
          in: query
          name: hasTrailer
          type: boolean
        - description: Optional. Return items that are siblings of a supplied item.
          in: query
          name: adjacentTo
          type: string
        - description: Optional filter by parent index number.
          format: int32
          in: query
          name: parentIndexNumber
          type: integer
        - description: Optional filter by items that have or do not have a parental rating.
          in: query
          name: hasParentalRating
          type: boolean
        - description: Optional filter by items that are HD or not.
          in: query
          name: isHd
          type: boolean
        - description: Optional filter by items that are 4K or not.
          in: query
          name: is4K
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            LocationType. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: locationTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the
            LocationType. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: excludeLocationTypes
          type: array
        - description: Optional filter by items that are missing episodes or not.
          in: query
          name: isMissing
          type: boolean
        - description: Optional filter by items that are unaired episodes or not.
          in: query
          name: isUnaired
          type: boolean
        - description: Optional filter by minimum community rating.
          format: double
          in: query
          name: minCommunityRating
          type: number
        - description: Optional filter by minimum critic rating.
          format: double
          in: query
          name: minCriticRating
          type: number
        - description: Optional. The minimum premiere date. Format = ISO.
          format: date-time
          in: query
          name: minPremiereDate
          type: string
        - description: Optional. The minimum last saved date. Format = ISO.
          format: date-time
          in: query
          name: minDateLastSaved
          type: string
        - description: >-
            Optional. The minimum last saved date for the current user. Format =
            ISO.
          format: date-time
          in: query
          name: minDateLastSavedForUser
          type: string
        - description: Optional. The maximum premiere date. Format = ISO.
          format: date-time
          in: query
          name: maxPremiereDate
          type: string
        - description: Optional filter by items that have an overview or not.
          in: query
          name: hasOverview
          type: boolean
        - description: Optional filter by items that have an imdb id or not.
          in: query
          name: hasImdbId
          type: boolean
        - description: Optional filter by items that have a tmdb id or not.
          in: query
          name: hasTmdbId
          type: boolean
        - description: Optional filter by items that have a tvdb id or not.
          in: query
          name: hasTvdbId
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered by excluding item
            ids. This allows multiple, comma delimited.
          in: query
          items:
            format: uuid
            type: string
          name: excludeItemIds
          type: array
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            When searching within folders, this determines whether or not the
            search will be recursive. true/false.
          in: query
          name: recursive
          type: boolean
        - description: Optional. Filter based on a search term.
          in: query
          name: searchTerm
          type: string
        - description: 'Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional filters to apply. This allows multiple,
            comma delimited. Options: IsFolder, IsNotFolder, IsUnplayed,
            IsPlayed, IsFavorite, IsResumable, Likes, Dislikes.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on those
            containing image types. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: imageTypes
          type: array
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
        - description: 'Optional filter by items that are played, or not.'
          in: query
          name: isPlayed
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            OfficialRating. This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: officialRatings
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on tag. This
            allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: tags
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on production
            year. This allows multiple, comma delimited.
          in: query
          items:
            format: int32
            type: integer
          name: years
          type: array
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person.
          in: query
          name: person
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person id.
          in: query
          items:
            format: uuid
            type: string
          name: personIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, along with Person, results will be filtered
            to include only those containing the specified person and
            PersonType. Allows multiple, comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: studios
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artists.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: artists
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artist id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified artist id.
          in: query
          items:
            format: uuid
            type: string
          name: artistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified album artist id.
          in: query
          items:
            format: uuid
            type: string
          name: albumArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified contributing artist id.
          in: query
          items:
            format: uuid
            type: string
          name: contributingArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album.
            This allows multiple, pipe delimited.
          in: query
          items:
            type: string
          name: albums
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: albumIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specific items are needed, specify a list of item id's
            to retrieve. This allows multiple, comma delimited.
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
        - collectionFormat: multi
          description: >-
            Optional filter by VideoType (videofile, dvd, bluray, iso). Allows
            multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/VideoType'
          name: videoTypes
          type: array
        - description: 'Optional filter by minimum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: minOfficialRating
          type: string
        - description: Optional filter by items that are locked.
          in: query
          name: isLocked
          type: boolean
        - description: Optional filter by items that are placeholders.
          in: query
          name: isPlaceHolder
          type: boolean
        - description: Optional filter by items that have official ratings.
          in: query
          name: hasOfficialRating
          type: boolean
        - description: Whether or not to hide items behind their boxsets.
          in: query
          name: collapseBoxSetItems
          type: boolean
        - description: Optional. Filter by the minimum width of the item.
          format: int32
          in: query
          name: minWidth
          type: integer
        - description: Optional. Filter by the minimum height of the item.
          format: int32
          in: query
          name: minHeight
          type: integer
        - description: Optional. Filter by the maximum width of the item.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: Optional. Filter by the maximum height of the item.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: 'Optional filter by items that are 3D, or not.'
          in: query
          name: is3D
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by Series Status. Allows multiple, comma delimited.'
          in: query
          items:
            $ref: '#/definitions/SeriesStatus'
          name: seriesStatus
          type: array
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: studioIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre id.
            This allows multiple, pipe delimited.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - default: true
          description: Optional. Enable the total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Finds movies and trailers similar to a given trailer.
      tags:
        - Trailers
  '/Trailers/{itemId}/Similar':
    get:
      operationId: GetSimilarTrailers
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - collectionFormat: multi
          description: Exclude artist ids.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines,
            TrailerUrls.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Similar items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets similar items.
      tags:
        - Library
  /Users:
    get:
      operationId: GetUsers
      parameters:
        - description: Optional filter by IsHidden=true or false.
          in: query
          name: isHidden
          type: boolean
        - description: Optional filter by IsDisabled=true or false.
          in: query
          name: isDisabled
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Users returned.
          schema:
            items:
              $ref: '#/definitions/UserDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a list of users.
      tags:
        - User
  /Users/AuthenticateByName:
    post:
      consumes:
        - application/json
        - text/json
      operationId: AuthenticateUserByName
      parameters:
        - description: >-
            The
            M:Jellyfin.Api.Controllers.UserController.AuthenticateUserByName(Jellyfin.Api.Models.UserDtos.AuthenticateUserByName)
            request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticateUserByName'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User authenticated.
          schema:
            $ref: '#/definitions/AuthenticationResult'
      summary: Authenticates a user by name.
      tags:
        - User
  /Users/AuthenticateWithQuickConnect:
    post:
      consumes:
        - application/json
        - text/json
      operationId: AuthenticateWithQuickConnect
      parameters:
        - description: The Jellyfin.Api.Models.UserDtos.QuickConnectDto request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/QuickConnectDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User authenticated.
          schema:
            $ref: '#/definitions/AuthenticationResult'
        '400':
          description: Missing token.
      summary: Authenticates a user with quick connect.
      tags:
        - User
  /Users/ForgotPassword:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ForgotPassword
      parameters:
        - description: The forgot password request containing the entered username.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ForgotPasswordDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Password reset process started.
          schema:
            $ref: '#/definitions/ForgotPasswordResult'
      summary: Initiates the forgot password process for a local user.
      tags:
        - User
  /Users/ForgotPassword/Pin:
    post:
      consumes:
        - application/json
        - text/json
      operationId: ForgotPasswordPin
      parameters:
        - description: The pin.
          in: body
          name: body
          schema:
            description: The pin.
            type: string
            x-nullable: true
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Pin reset process started.
          schema:
            $ref: '#/definitions/PinRedeemResult'
      summary: Redeems a forgot password pin.
      tags:
        - User
  /Users/Me:
    get:
      operationId: GetCurrentUser
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User returned.
          schema:
            $ref: '#/definitions/UserDto'
        '400':
          description: Token is not owned by a user.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the user based on auth token.
      tags:
        - User
  /Users/New:
    post:
      consumes:
        - application/json
        - text/json
      operationId: CreateUserByName
      parameters:
        - description: The create user by name request body.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserByName'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User created.
          schema:
            $ref: '#/definitions/UserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Creates a user.
      tags:
        - User
  /Users/Public:
    get:
      operationId: GetPublicUsers
      parameters: []
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Public users returned.
          schema:
            items:
              $ref: '#/definitions/UserDto'
            type: array
      summary: Gets a list of publicly visible users for display on a login screen.
      tags:
        - User
  '/Users/{userId}':
    delete:
      operationId: DeleteUser
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: User deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Deletes a user.
      tags:
        - User
    get:
      operationId: GetUserById
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User returned.
          schema:
            $ref: '#/definitions/UserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a user by Id.
      tags:
        - User
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateUser
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: The updated user model.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserDto'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: User updated.
        '400':
          description: User information was not supplied.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: User update forbidden.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a user.
      tags:
        - User
  '/Users/{userId}/Authenticate':
    post:
      operationId: AuthenticateUser
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: The password as plain text.
          in: query
          name: pw
          required: true
          type: string
        - description: The password sha1-hash.
          in: query
          name: password
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User authenticated.
          schema:
            $ref: '#/definitions/AuthenticationResult'
        '403':
          description: Sha1-hashed password only is not allowed.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Authenticates a user.
      tags:
        - User
  '/Users/{userId}/Configuration':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateUserConfiguration
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: The new user configuration.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserConfiguration'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: User configuration updated.
        '401':
          description: Unauthorized
        '403':
          description: User configuration update forbidden.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a user configuration.
      tags:
        - User
  '/Users/{userId}/EasyPassword':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateUserEasyPassword
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            The
            M:Jellyfin.Api.Controllers.UserController.UpdateUserEasyPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserEasyPassword)
            request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserEasyPassword'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Password successfully reset.
        '401':
          description: Unauthorized
        '403':
          description: User is not allowed to update the password.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a user's easy password.
      tags:
        - User
  '/Users/{userId}/FavoriteItems/{itemId}':
    delete:
      operationId: UnmarkFavoriteItem
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item unmarked as favorite.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Unmarks item as a favorite.
      tags:
        - UserLibrary
    post:
      operationId: MarkFavoriteItem
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item marked as favorite.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Marks an item as a favorite.
      tags:
        - UserLibrary
  '/Users/{userId}/GroupingOptions':
    get:
      operationId: GetGroupingOptions
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User view grouping options returned.
          schema:
            items:
              $ref: '#/definitions/SpecialViewOptionDto'
            type: array
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get user view grouping options.
      tags:
        - UserViews
  '/Users/{userId}/Images/{imageType}':
    delete:
      operationId: DeleteUserImage
      parameters:
        - description: User Id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: (Unused) Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: (Unused) Image index.
          format: int32
          in: query
          name: index
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image deleted.
        '401':
          description: Unauthorized
        '403':
          description: User does not have permission to delete the image.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Delete the user's image.
      tags:
        - Image
    get:
      operationId: GetUserImage
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get user profile image.
      tags:
        - Image
    head:
      operationId: HeadUserImage
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
        - description: Image index.
          format: int32
          in: query
          name: imageIndex
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get user profile image.
      tags:
        - Image
    post:
      operationId: PostUserImage
      parameters:
        - description: User Id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: (Unused) Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: (Unused) Image index.
          format: int32
          in: query
          name: index
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image updated.
        '401':
          description: Unauthorized
        '403':
          description: User does not have permission to delete the image.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Sets the user image.
      tags:
        - Image
  '/Users/{userId}/Images/{imageType}/{imageIndex}':
    get:
      operationId: GetUserImageByIndex
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get user profile image.
      tags:
        - Image
    head:
      operationId: HeadUserImageByIndex
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: Image index.
          format: int32
          in: path
          name: imageIndex
          required: true
          type: integer
        - description: >-
            Optional. Supply the cache tag from the item object to receive
            strong caching headers.
          in: query
          name: tag
          type: string
        - description: 'Determines the output format of the image - original,gif,jpg,png.'
          enum:
            - Bmp
            - Gif
            - Jpg
            - Png
            - Webp
          in: query
          name: format
          type: string
        - description: The maximum image width to return.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: The maximum image height to return.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Percent to render for the percent played overlay.
          format: double
          in: query
          name: percentPlayed
          type: number
        - description: Optional. Unplayed count overlay to render.
          format: int32
          in: query
          name: unplayedCount
          type: integer
        - description: The fixed image width to return.
          format: int32
          in: query
          name: width
          type: integer
        - description: The fixed image height to return.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Quality setting, from 0-100. Defaults to 90 and should
            suffice in most cases.
          format: int32
          in: query
          name: quality
          type: integer
        - description: >-
            Optional. Specify if whitespace should be cropped out of the image.
            True/False. If unspecified, whitespace will be cropped from logos
            and clear art.
          in: query
          name: cropWhitespace
          type: boolean
        - description: Optional. Add a played indicator.
          in: query
          name: addPlayedIndicator
          type: boolean
        - description: Optional. Blur image.
          format: int32
          in: query
          name: blur
          type: integer
        - description: Optional. Apply a background color for transparent images.
          in: query
          name: backgroundColor
          type: string
        - description: Optional. Apply a foreground layer on top of the image.
          in: query
          name: foregroundLayer
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Image stream returned.
          schema:
            format: binary
            type: string
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get user profile image.
      tags:
        - Image
  '/Users/{userId}/Images/{imageType}/{index}':
    delete:
      operationId: DeleteUserImageByIndex
      parameters:
        - description: User Id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: (Unused) Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: (Unused) Image index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image deleted.
        '401':
          description: Unauthorized
        '403':
          description: User does not have permission to delete the image.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Delete the user's image.
      tags:
        - Image
    post:
      operationId: PostUserImageByIndex
      parameters:
        - description: User Id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: (Unused) Image type.
          enum:
            - Primary
            - Art
            - Backdrop
            - Banner
            - Logo
            - Thumb
            - Disc
            - Box
            - Screenshot
            - Menu
            - Chapter
            - BoxRear
            - Profile
          in: path
          name: imageType
          required: true
          type: string
        - description: (Unused) Image index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Image updated.
        '401':
          description: Unauthorized
        '403':
          description: User does not have permission to delete the image.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Sets the user image.
      tags:
        - Image
  '/Users/{userId}/Items':
    get:
      operationId: GetItemsByUserId
      parameters:
        - description: The user id supplied as query parameter.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: 'Optional filter by maximum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: maxOfficialRating
          type: string
        - description: Optional filter by items with theme songs.
          in: query
          name: hasThemeSong
          type: boolean
        - description: Optional filter by items with theme videos.
          in: query
          name: hasThemeVideo
          type: boolean
        - description: Optional filter by items with subtitles.
          in: query
          name: hasSubtitles
          type: boolean
        - description: Optional filter by items with special features.
          in: query
          name: hasSpecialFeature
          type: boolean
        - description: Optional filter by items with trailers.
          in: query
          name: hasTrailer
          type: boolean
        - description: Optional. Return items that are siblings of a supplied item.
          in: query
          name: adjacentTo
          type: string
        - description: Optional filter by parent index number.
          format: int32
          in: query
          name: parentIndexNumber
          type: integer
        - description: Optional filter by items that have or do not have a parental rating.
          in: query
          name: hasParentalRating
          type: boolean
        - description: Optional filter by items that are HD or not.
          in: query
          name: isHd
          type: boolean
        - description: Optional filter by items that are 4K or not.
          in: query
          name: is4K
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            LocationType. This allows multiple, comma delimeted.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: locationTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the
            LocationType. This allows multiple, comma delimeted.
          in: query
          items:
            $ref: '#/definitions/LocationType'
          name: excludeLocationTypes
          type: array
        - description: Optional filter by items that are missing episodes or not.
          in: query
          name: isMissing
          type: boolean
        - description: Optional filter by items that are unaired episodes or not.
          in: query
          name: isUnaired
          type: boolean
        - description: Optional filter by minimum community rating.
          format: double
          in: query
          name: minCommunityRating
          type: number
        - description: Optional filter by minimum critic rating.
          format: double
          in: query
          name: minCriticRating
          type: number
        - description: Optional. The minimum premiere date. Format = ISO.
          format: date-time
          in: query
          name: minPremiereDate
          type: string
        - description: Optional. The minimum last saved date. Format = ISO.
          format: date-time
          in: query
          name: minDateLastSaved
          type: string
        - description: >-
            Optional. The minimum last saved date for the current user. Format =
            ISO.
          format: date-time
          in: query
          name: minDateLastSavedForUser
          type: string
        - description: Optional. The maximum premiere date. Format = ISO.
          format: date-time
          in: query
          name: maxPremiereDate
          type: string
        - description: Optional filter by items that have an overview or not.
          in: query
          name: hasOverview
          type: boolean
        - description: Optional filter by items that have an imdb id or not.
          in: query
          name: hasImdbId
          type: boolean
        - description: Optional filter by items that have a tmdb id or not.
          in: query
          name: hasTmdbId
          type: boolean
        - description: Optional filter by items that have a tvdb id or not.
          in: query
          name: hasTvdbId
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered by exxcluding item
            ids. This allows multiple, comma delimeted.
          in: query
          items:
            format: uuid
            type: string
          name: excludeItemIds
          type: array
        - description: >-
            Optional. The record index to start at. All items with a lower index
            will be dropped from the results.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            When searching within folders, this determines whether or not the
            search will be recursive. true/false.
          in: query
          name: recursive
          type: boolean
        - description: Optional. Filter based on a search term.
          in: query
          name: searchTerm
          type: string
        - description: 'Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimeted. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimeted.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the item
            type. This allows multiple, comma delimeted.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. Specify additional filters to apply. This allows multiple,
            comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed,
            IsPlayed, IsFavorite, IsResumable, Likes, Dislikes.
          in: query
          items:
            $ref: '#/definitions/ItemFilter'
          name: filters
          type: array
        - description: 'Optional filter by items that are marked as favorite, or not.'
          in: query
          name: isFavorite
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on those
            containing image types. This allows multiple, comma delimited.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: imageTypes
          type: array
        - description: >-
            Optional. Specify one or more sort orders, comma delimeted. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
        - description: 'Optional filter by items that are played, or not.'
          in: query
          name: isPlayed
          type: boolean
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre.
            This allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: genres
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on
            OfficialRating. This allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: officialRatings
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on tag. This
            allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: tags
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on production
            year. This allows multiple, comma delimeted.
          in: query
          items:
            format: int32
            type: integer
          name: years
          type: array
        - description: 'Optional, include user data.'
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional, the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person.
          in: query
          name: person
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified person id.
          in: query
          items:
            format: uuid
            type: string
          name: personIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, along with Person, results will be filtered
            to include only those containing the specified person and
            PersonType. Allows multiple, comma-delimited.
          in: query
          items:
            type: string
          name: personTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio.
            This allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: studios
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artists.
            This allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: artists
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on artist id.
            This allows multiple, pipe delimeted.
          in: query
          items:
            format: uuid
            type: string
          name: excludeArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified artist id.
          in: query
          items:
            format: uuid
            type: string
          name: artistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified album artist id.
          in: query
          items:
            format: uuid
            type: string
          name: albumArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered to include only
            those containing the specified contributing artist id.
          in: query
          items:
            format: uuid
            type: string
          name: contributingArtistIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album.
            This allows multiple, pipe delimeted.
          in: query
          items:
            type: string
          name: albums
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on album id.
            This allows multiple, pipe delimeted.
          in: query
          items:
            format: uuid
            type: string
          name: albumIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specific items are needed, specify a list of item id's
            to retrieve. This allows multiple, comma delimited.
          in: query
          items:
            format: uuid
            type: string
          name: ids
          type: array
        - collectionFormat: multi
          description: >-
            Optional filter by VideoType (videofile, dvd, bluray, iso). Allows
            multiple, comma delimeted.
          in: query
          items:
            $ref: '#/definitions/VideoType'
          name: videoTypes
          type: array
        - description: 'Optional filter by minimum official rating (PG, PG-13, TV-MA, etc).'
          in: query
          name: minOfficialRating
          type: string
        - description: Optional filter by items that are locked.
          in: query
          name: isLocked
          type: boolean
        - description: Optional filter by items that are placeholders.
          in: query
          name: isPlaceHolder
          type: boolean
        - description: Optional filter by items that have official ratings.
          in: query
          name: hasOfficialRating
          type: boolean
        - description: Whether or not to hide items behind their boxsets.
          in: query
          name: collapseBoxSetItems
          type: boolean
        - description: Optional. Filter by the minimum width of the item.
          format: int32
          in: query
          name: minWidth
          type: integer
        - description: Optional. Filter by the minimum height of the item.
          format: int32
          in: query
          name: minHeight
          type: integer
        - description: Optional. Filter by the maximum width of the item.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: Optional. Filter by the maximum height of the item.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: 'Optional filter by items that are 3D, or not.'
          in: query
          name: is3D
          type: boolean
        - collectionFormat: multi
          description: 'Optional filter by Series Status. Allows multiple, comma delimeted.'
          in: query
          items:
            $ref: '#/definitions/SeriesStatus'
          name: seriesStatus
          type: array
        - description: >-
            Optional filter by items whose name is sorted equally or greater
            than a given input string.
          in: query
          name: nameStartsWithOrGreater
          type: string
        - description: >-
            Optional filter by items whose name is sorted equally than a given
            input string.
          in: query
          name: nameStartsWith
          type: string
        - description: >-
            Optional filter by items whose name is equally or lesser than a
            given input string.
          in: query
          name: nameLessThan
          type: string
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on studio id.
            This allows multiple, pipe delimeted.
          in: query
          items:
            format: uuid
            type: string
          name: studioIds
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on genre id.
            This allows multiple, pipe delimeted.
          in: query
          items:
            format: uuid
            type: string
          name: genreIds
          type: array
        - default: true
          description: Optional. Enable the total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
        - default: true
          description: 'Optional, include image information in output.'
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets items based on a query.
      tags:
        - Items
  '/Users/{userId}/Items/Latest':
    get:
      operationId: GetLatestMedia
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - description: 'Filter by items that are played, or not.'
          in: query
          name: isPlayed
          type: boolean
        - description: Optional. include image information in output.
          in: query
          name: enableImages
          type: boolean
        - description: 'Optional. the max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: Optional. include user data.
          in: query
          name: enableUserData
          type: boolean
        - default: 20
          description: Return item limit.
          format: int32
          in: query
          name: limit
          type: integer
        - default: true
          description: Whether or not to group items into a parent container.
          in: query
          name: groupItems
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Latest media returned.
          schema:
            items:
              $ref: '#/definitions/BaseItemDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets latest media.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/Resume':
    get:
      operationId: GetResumeItems
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: The start index.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: The item limit.
          format: int32
          in: query
          name: limit
          type: integer
        - description: The search term.
          in: query
          name: searchTerm
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output. This allows multiple, comma delimited. Options: Budget,
            Chapters, DateCreated, Genres, HomePageUrl, IndexOptions,
            MediaStreams, Overview, ParentId, Path, People, ProviderIds,
            PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: 'Optional. Filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be filtered based on the item
            type. This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - default: true
          description: Optional. Enable the total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
        - default: true
          description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Items returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets items based on a query.
      tags:
        - Items
  '/Users/{userId}/Items/Root':
    get:
      operationId: GetRootFolder
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Root folder returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets the root folder from a user's library.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/{itemId}':
    get:
      operationId: GetItem
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an item from a user's library.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/{itemId}/Intros':
    get:
      operationId: GetIntros
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Intros returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets intros to play before the main media item plays.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/{itemId}/LocalTrailers':
    get:
      operationId: GetLocalTrailers
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: >-
            An Microsoft.AspNetCore.Mvc.OkResult containing the item's local
            trailers.
          schema:
            items:
              $ref: '#/definitions/BaseItemDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets local trailers for an item.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/{itemId}/Rating':
    delete:
      operationId: DeleteUserItemRating
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Personal rating removed.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Deletes a user's saved personal rating for an item.
      tags:
        - UserLibrary
    post:
      operationId: UpdateUserItemRating
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Whether this
            M:Jellyfin.Api.Controllers.UserLibraryController.UpdateUserItemRating(System.Guid,System.Guid,System.Nullable{System.Boolean})
            is likes.
          in: query
          name: likes
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item rating updated.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Updates a user's rating for an item.
      tags:
        - UserLibrary
  '/Users/{userId}/Items/{itemId}/SpecialFeatures':
    get:
      operationId: GetSpecialFeatures
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Special features returned.
          schema:
            items:
              $ref: '#/definitions/BaseItemDto'
            type: array
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets special features for an item.
      tags:
        - UserLibrary
  '/Users/{userId}/Password':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateUserPassword
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            The
            M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Guid,Jellyfin.Api.Models.UserDtos.UpdateUserPassword)
            request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserPassword'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Password successfully reset.
        '401':
          description: Unauthorized
        '403':
          description: User is not allowed to update the password.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: User not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a user's password.
      tags:
        - User
  '/Users/{userId}/PlayedItems/{itemId}':
    delete:
      operationId: MarkUnplayedItem
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item marked as unplayed.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Marks an item as unplayed for user.
      tags:
        - Playstate
    post:
      operationId: MarkPlayedItem
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: Optional. The date the item was played.
          format: date-time
          in: query
          name: datePlayed
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Item marked as played.
          schema:
            $ref: '#/definitions/UserItemDataDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Marks an item as played for user.
      tags:
        - Playstate
  '/Users/{userId}/PlayingItems/{itemId}':
    delete:
      operationId: OnPlaybackStopped
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The id of the MediaSource.
          in: query
          name: mediaSourceId
          type: string
        - description: The next media type that will play.
          in: query
          name: nextMediaType
          type: string
        - description: >-
            Optional. The position, in ticks, where playback stopped. 1 tick =
            10000 ms.
          format: int64
          in: query
          name: positionTicks
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
      responses:
        '204':
          description: Playback stop recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that a user has stopped playing an item.
      tags:
        - Playstate
    post:
      operationId: OnPlaybackStart
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The id of the MediaSource.
          in: query
          name: mediaSourceId
          type: string
        - description: The audio stream index.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: The subtitle stream index.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: The play method.
          enum:
            - Transcode
            - DirectStream
            - DirectPlay
          in: query
          name: playMethod
          type: string
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - default: false
          description: Indicates if the client can seek.
          in: query
          name: canSeek
          type: boolean
      responses:
        '204':
          description: Play start recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports that a user has begun playing an item.
      tags:
        - Playstate
  '/Users/{userId}/PlayingItems/{itemId}/Progress':
    post:
      operationId: OnPlaybackProgress
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: Item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The id of the MediaSource.
          in: query
          name: mediaSourceId
          type: string
        - description: 'Optional. The current position, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: positionTicks
          type: integer
        - description: The audio stream index.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: The subtitle stream index.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Scale of 0-100.
          format: int32
          in: query
          name: volumeLevel
          type: integer
        - description: The play method.
          enum:
            - Transcode
            - DirectStream
            - DirectPlay
          in: query
          name: playMethod
          type: string
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The repeat mode.
          enum:
            - RepeatNone
            - RepeatAll
            - RepeatOne
          in: query
          name: repeatMode
          type: string
        - default: false
          description: Indicates if the player is paused.
          in: query
          name: isPaused
          type: boolean
        - default: false
          description: Indicates if the player is muted.
          in: query
          name: isMuted
          type: boolean
      responses:
        '204':
          description: Play progress recorded.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Reports a user's playback progress.
      tags:
        - Playstate
  '/Users/{userId}/Policy':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UpdateUserPolicy
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: The new user policy.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserPolicy'
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: User policy updated.
        '400':
          description: User policy was not supplied.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: User policy update forbidden.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Updates a user policy.
      tags:
        - User
  '/Users/{userId}/Suggestions':
    get:
      operationId: GetSuggestions
      parameters:
        - description: The user id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - collectionFormat: multi
          description: The media types.
          in: query
          items:
            type: string
          name: mediaType
          type: array
        - collectionFormat: multi
          description: The type.
          in: query
          items:
            type: string
          name: type
          type: array
        - description: Optional. The start index.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The limit.
          format: int32
          in: query
          name: limit
          type: integer
        - default: false
          description: Whether to enable the total record count.
          in: query
          name: enableTotalRecordCount
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Suggestions returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets suggestions.
      tags:
        - Suggestions
  '/Users/{userId}/Views':
    get:
      operationId: GetUserViews
      parameters:
        - description: User id.
          format: uuid
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            Whether or not to include external views such as channels or live
            tv.
          in: query
          name: includeExternalContent
          type: boolean
        - collectionFormat: multi
          description: Preset views.
          in: query
          items:
            type: string
          name: presetViews
          type: array
        - default: false
          description: Whether or not to include hidden content.
          in: query
          name: includeHidden
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: User views returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
      summary: Get user views.
      tags:
        - UserViews
  /Videos/ActiveEncodings:
    delete:
      operationId: StopEncodingProcess
      parameters:
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
      responses:
        '204':
          description: Encoding stopped successfully.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Stops an active encoding.
      tags:
        - HlsSegment
  /Videos/MergeVersions:
    post:
      operationId: MergeVersions
      parameters:
        - collectionFormat: multi
          description: 'Item id list. This allows multiple, comma delimited.'
          in: query
          items:
            format: uuid
            type: string
          name: ids
          required: true
          type: array
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Videos merged.
        '400':
          description: Supply at least 2 video ids.
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Merges videos into a single record.
      tags:
        - Videos
  '/Videos/{itemId}/AdditionalParts':
    get:
      operationId: GetAdditionalPart
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Additional parts returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets additional parts for a video.
      tags:
        - Videos
  '/Videos/{itemId}/AlternateSources':
    delete:
      operationId: DeleteAlternateSources
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Alternate sources deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Video not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Removes alternate video sources.
      tags:
        - Videos
  '/Videos/{itemId}/Subtitles':
    post:
      consumes:
        - application/json
        - text/json
      operationId: UploadSubtitle
      parameters:
        - description: The item the subtitle belongs to.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The request body.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UploadSubtitleDto'
      responses:
        '204':
          description: Subtitle uploaded.
      summary: Upload an external subtitle file.
      tags:
        - Subtitle
  '/Videos/{itemId}/Subtitles/{index}':
    delete:
      operationId: DeleteSubtitle
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The index of the subtitle file.
          format: int32
          in: path
          name: index
          required: true
          type: integer
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '204':
          description: Subtitle deleted.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Item not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Deletes an external subtitle file.
      tags:
        - Subtitle
  '/Videos/{itemId}/hls/{playlistId}/stream.m3u8':
    get:
      operationId: GetHlsPlaylistLegacy
      parameters:
        - description: The video id.
          in: path
          name: itemId
          required: true
          type: string
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Hls video playlist returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a hls video playlist.
      tags:
        - HlsSegment
  '/Videos/{itemId}/hls/{playlistId}/{segmentId}.{segmentContainer}':
    get:
      operationId: GetHlsVideoSegmentLegacy
      parameters:
        - description: The item id.
          in: path
          name: itemId
          required: true
          type: string
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
        - description: The segment id.
          in: path
          name: segmentId
          required: true
          type: string
        - description: The segment container.
          in: path
          name: segmentContainer
          required: true
          type: string
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Hls video segment returned.
          schema:
            format: binary
            type: string
        '404':
          description: Hls segment not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets a hls video segment.
      tags:
        - HlsSegment
  '/Videos/{itemId}/hls1/{playlistId}/{segmentId}.{container}':
    get:
      operationId: GetHlsVideoSegment
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The playlist id.
          in: path
          name: playlistId
          required: true
          type: string
        - description: The segment id.
          format: int32
          in: path
          name: segmentId
          required: true
          type: integer
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a video stream using HTTP live streaming.
      tags:
        - DynamicHls
  '/Videos/{itemId}/live.m3u8':
    get:
      operationId: GetLiveHlsStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The audio container.
          in: query
          name: container
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - description: Optional. The max width.
          format: int32
          in: query
          name: maxWidth
          type: integer
        - description: Optional. The max height.
          format: int32
          in: query
          name: maxHeight
          type: integer
        - description: Optional. Whether to enable subtitles in the manifest.
          in: query
          name: enableSubtitlesInManifest
          type: boolean
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Hls live stream retrieved.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a hls live stream.
      tags:
        - VideoHls
  '/Videos/{itemId}/main.m3u8':
    get:
      operationId: GetVariantHlsVideoPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a video stream using HTTP live streaming.
      tags:
        - DynamicHls
  '/Videos/{itemId}/master.m3u8':
    get:
      operationId: GetMasterHlsVideoPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          required: true
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - default: true
          description: Enable adaptive bitrate streaming.
          in: query
          name: enableAdaptiveBitrateStreaming
          type: boolean
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a video hls playlist stream.
      tags:
        - DynamicHls
    head:
      operationId: HeadMasterHlsVideoPlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          required: true
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - default: true
          description: Enable adaptive bitrate streaming.
          in: query
          name: enableAdaptiveBitrateStreaming
          type: boolean
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets a video hls playlist stream.
      tags:
        - DynamicHls
  '/Videos/{itemId}/stream':
    get:
      operationId: GetVideoStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: query
          name: container
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
      summary: Gets a video stream.
      tags:
        - Videos
    head:
      operationId: HeadVideoStream
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: query
          name: container
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment length.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamorphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
      summary: Gets a video stream.
      tags:
        - Videos
  '/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/Stream.{format}':
    get:
      operationId: GetSubtitle
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The media source id.
          in: path
          name: mediaSourceId
          required: true
          type: string
        - description: The subtitle stream index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
        - description: The format of the returned subtitle.
          in: path
          name: format
          required: true
          type: string
        - description: Optional. The end position of the subtitle in ticks.
          format: int64
          in: query
          name: endPositionTicks
          type: integer
        - default: false
          description: Optional. Whether to copy the timestamps.
          in: query
          name: copyTimestamps
          type: boolean
        - default: false
          description: Optional. Whether to add a VTT time map.
          in: query
          name: addVttTimeMap
          type: boolean
        - default: 0
          description: Optional. The start position of the subtitle in ticks.
          format: int64
          in: query
          name: startPositionTicks
          type: integer
      produces:
        - application/octet-stream
      responses:
        '200':
          description: File returned.
          schema:
            format: binary
            type: string
      summary: Gets subtitles in a specified format.
      tags:
        - Subtitle
  '/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/subtitles.m3u8':
    get:
      operationId: GetSubtitlePlaylist
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The subtitle stream index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
        - description: The media source id.
          in: path
          name: mediaSourceId
          required: true
          type: string
        - description: The subtitle segment length.
          format: int32
          in: query
          name: segmentLength
          required: true
          type: integer
      produces:
        - application/x-mpegURL
      responses:
        '200':
          description: Subtitle playlist retrieved.
          schema:
            format: binary
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Gets an HLS subtitle playlist.
      tags:
        - Subtitle
  '/Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/{startPositionTicks}/Stream.{format}':
    get:
      operationId: GetSubtitleWithTicks
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: The media source id.
          in: path
          name: mediaSourceId
          required: true
          type: string
        - description: The subtitle stream index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
        - description: Optional. The start position of the subtitle in ticks.
          format: int64
          in: path
          name: startPositionTicks
          required: true
          type: integer
        - description: The format of the returned subtitle.
          in: path
          name: format
          required: true
          type: string
        - description: Optional. The end position of the subtitle in ticks.
          format: int64
          in: query
          name: endPositionTicks
          type: integer
        - default: false
          description: Optional. Whether to copy the timestamps.
          in: query
          name: copyTimestamps
          type: boolean
        - default: false
          description: Optional. Whether to add a VTT time map.
          in: query
          name: addVttTimeMap
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: File returned.
          schema:
            format: binary
            type: string
      summary: Gets subtitles in a specified format.
      tags:
        - Subtitle
  '/Videos/{itemId}/{stream}.{container}':
    get:
      operationId: GetVideoStreamByContainer
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamporphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - in: path
          name: stream
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
      summary: Gets a video stream.
      tags:
        - Videos
    head:
      operationId: HeadVideoStreamByContainer
      parameters:
        - description: The item id.
          format: uuid
          in: path
          name: itemId
          required: true
          type: string
        - description: >-
            The video container. Possible values are: ts, webm, asf, wmv, ogv,
            mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv.
          in: path
          name: container
          required: true
          type: string
        - description: >-
            Optional. If true, the original file will be streamed statically
            without any encoding. Use either no url extension or the original
            file extension. true/false.
          in: query
          name: static
          type: boolean
        - description: The streaming parameters.
          in: query
          name: params
          type: string
        - description: The tag.
          in: query
          name: tag
          type: string
        - description: Optional. The dlna device profile id to utilize.
          in: query
          name: deviceProfileId
          type: string
        - description: The play session id.
          in: query
          name: playSessionId
          type: string
        - description: The segment container.
          in: query
          name: segmentContainer
          type: string
        - description: The segment lenght.
          format: int32
          in: query
          name: segmentLength
          type: integer
        - description: The minimum number of segments.
          format: int32
          in: query
          name: minSegments
          type: integer
        - description: 'The media version id, if playing an alternate version.'
          in: query
          name: mediaSourceId
          type: string
        - description: >-
            The device id of the client requesting. Used to stop encoding
            processes when needed.
          in: query
          name: deviceId
          type: string
        - description: >-
            Optional. Specify a audio codec to encode to, e.g. mp3. If omitted
            the server will auto-select using the url's extension. Options: aac,
            mp3, vorbis, wma.
          in: query
          name: audioCodec
          type: string
        - description: >-
            Whether or not to allow automatic stream copy if requested values
            match the original source. Defaults to true.
          in: query
          name: enableAutoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the video stream url.
          in: query
          name: allowVideoStreamCopy
          type: boolean
        - description: Whether or not to allow copying of the audio stream url.
          in: query
          name: allowAudioStreamCopy
          type: boolean
        - description: Optional. Whether to break on non key frames.
          in: query
          name: breakOnNonKeyFrames
          type: boolean
        - description: 'Optional. Specify a specific audio sample rate, e.g. 44100.'
          format: int32
          in: query
          name: audioSampleRate
          type: integer
        - description: Optional. The maximum audio bit depth.
          format: int32
          in: query
          name: maxAudioBitDepth
          type: integer
        - description: >-
            Optional. Specify an audio bitrate to encode to, e.g. 128000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: audioBitRate
          type: integer
        - description: >-
            Optional. Specify a specific number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: audioChannels
          type: integer
        - description: >-
            Optional. Specify a maximum number of audio channels to encode to,
            e.g. 2.
          format: int32
          in: query
          name: maxAudioChannels
          type: integer
        - description: >-
            Optional. Specify a specific an encoder profile (varies by encoder),
            e.g. main, baseline, high.
          in: query
          name: profile
          type: string
        - description: >-
            Optional. Specify a level for the encoder profile (varies by
            encoder), e.g. 3, 3.1.
          in: query
          name: level
          type: string
        - description: >-
            Optional. A specific video framerate to encode to, e.g. 23.976.
            Generally this should be omitted unless the device has specific
            requirements.
          format: float
          in: query
          name: framerate
          type: number
        - description: >-
            Optional. A specific maximum video framerate to encode to, e.g.
            23.976. Generally this should be omitted unless the device has
            specific requirements.
          format: float
          in: query
          name: maxFramerate
          type: number
        - description: >-
            Whether or not to copy timestamps when transcoding with an offset.
            Defaults to false.
          in: query
          name: copyTimestamps
          type: boolean
        - description: 'Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms.'
          format: int64
          in: query
          name: startTimeTicks
          type: integer
        - description: Optional. The fixed horizontal resolution of the encoded video.
          format: int32
          in: query
          name: width
          type: integer
        - description: Optional. The fixed vertical resolution of the encoded video.
          format: int32
          in: query
          name: height
          type: integer
        - description: >-
            Optional. Specify a video bitrate to encode to, e.g. 500000. If
            omitted this will be left to encoder defaults.
          format: int32
          in: query
          name: videoBitRate
          type: integer
        - description: >-
            Optional. The index of the subtitle stream to use. If omitted no
            subtitles will be used.
          format: int32
          in: query
          name: subtitleStreamIndex
          type: integer
        - description: Optional. Specify the subtitle delivery method.
          enum:
            - Encode
            - Embed
            - External
            - Hls
          in: query
          name: subtitleMethod
          type: string
        - description: Optional.
          format: int32
          in: query
          name: maxRefFrames
          type: integer
        - description: Optional. The maximum video bit depth.
          format: int32
          in: query
          name: maxVideoBitDepth
          type: integer
        - description: Optional. Whether to require avc.
          in: query
          name: requireAvc
          type: boolean
        - description: Optional. Whether to deinterlace the video.
          in: query
          name: deInterlace
          type: boolean
        - description: Optional. Whether to require a non anamporphic stream.
          in: query
          name: requireNonAnamorphic
          type: boolean
        - description: Optional. The maximum number of audio channels to transcode.
          format: int32
          in: query
          name: transcodingMaxAudioChannels
          type: integer
        - description: Optional. The limit of how many cpu cores to use.
          format: int32
          in: query
          name: cpuCoreLimit
          type: integer
        - description: The live stream id.
          in: query
          name: liveStreamId
          type: string
        - description: Optional. Whether to enable the MpegtsM2Ts mode.
          in: query
          name: enableMpegtsM2TsMode
          type: boolean
        - description: >-
            Optional. Specify a video codec to encode to, e.g. h264. If omitted
            the server will auto-select using the url's extension. Options:
            h265, h264, mpeg4, theora, vpx, wmv.
          in: query
          name: videoCodec
          type: string
        - description: Optional. Specify a subtitle codec to encode to.
          in: query
          name: subtitleCodec
          type: string
        - description: Optional. The transcoding reason.
          in: query
          name: transcodeReasons
          type: string
        - description: >-
            Optional. The index of the audio stream to use. If omitted the first
            audio stream will be used.
          format: int32
          in: query
          name: audioStreamIndex
          type: integer
        - description: >-
            Optional. The index of the video stream to use. If omitted the first
            video stream will be used.
          format: int32
          in: query
          name: videoStreamIndex
          type: integer
        - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
          enum:
            - Streaming
            - Static
          in: query
          name: context
          type: string
        - additionalProperties:
            type: string
          description: Optional. The streaming options.
          in: query
          name: streamOptions
          type: object
        - in: path
          name: stream
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Video stream returned.
          schema:
            format: binary
            type: string
      summary: Gets a video stream.
      tags:
        - Videos
  '/Videos/{videoId}/{mediaSourceId}/Attachments/{index}':
    get:
      operationId: GetAttachment
      parameters:
        - description: Video ID.
          format: uuid
          in: path
          name: videoId
          required: true
          type: string
        - description: Media Source ID.
          in: path
          name: mediaSourceId
          required: true
          type: string
        - description: Attachment Index.
          format: int32
          in: path
          name: index
          required: true
          type: integer
      produces:
        - application/octet-stream
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Attachment retrieved.
          schema:
            format: binary
            type: string
        '404':
          description: Video or attachment not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Get video attachment.
      tags:
        - VideoAttachments
  /Years:
    get:
      operationId: GetYears
      parameters:
        - description: >-
            Skips over a given number of items within the results. Use for
            paging.
          format: int32
          in: query
          name: startIndex
          type: integer
        - description: Optional. The maximum number of records to return.
          format: int32
          in: query
          name: limit
          type: integer
        - description: 'Sort Order - Ascending,Descending.'
          in: query
          name: sortOrder
          type: string
        - description: >-
            Specify this to localize the search to a specific item or folder.
            Omit to use the root.
          format: uuid
          in: query
          name: parentId
          type: string
        - collectionFormat: multi
          description: >-
            Optional. Specify additional fields of information to return in the
            output.
          in: query
          items:
            $ref: '#/definitions/ItemFields'
          name: fields
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be excluded based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: excludeItemTypes
          type: array
        - collectionFormat: multi
          description: >-
            Optional. If specified, results will be included based on item type.
            This allows multiple, comma delimited.
          in: query
          items:
            type: string
          name: includeItemTypes
          type: array
        - collectionFormat: multi
          description: 'Optional. Filter by MediaType. Allows multiple, comma delimited.'
          in: query
          items:
            type: string
          name: mediaTypes
          type: array
        - description: >-
            Optional. Specify one or more sort orders, comma delimited. Options:
            Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,
            DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear,
            SortName, Random, Revenue, Runtime.
          in: query
          name: sortBy
          type: string
        - description: Optional. Include user data.
          in: query
          name: enableUserData
          type: boolean
        - description: 'Optional. The max number of images to return, per image type.'
          format: int32
          in: query
          name: imageTypeLimit
          type: integer
        - collectionFormat: multi
          description: Optional. The image types to include in the output.
          in: query
          items:
            $ref: '#/definitions/ImageType'
          name: enableImageTypes
          type: array
        - description: User Id.
          format: uuid
          in: query
          name: userId
          type: string
        - default: true
          description: Search recursively.
          in: query
          name: recursive
          type: boolean
        - default: true
          description: Optional. Include image information in output.
          in: query
          name: enableImages
          type: boolean
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Year query returned.
          schema:
            $ref: '#/definitions/BaseItemDtoQueryResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - CustomAuthentication: []
      summary: Get years.
      tags:
        - Years
  '/Years/{year}':
    get:
      operationId: GetYear
      parameters:
        - description: The year.
          format: int32
          in: path
          name: year
          required: true
          type: integer
        - description: 'Optional. Filter by user id, and attach user data.'
          format: uuid
          in: query
          name: userId
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: Year returned.
          schema:
            $ref: '#/definitions/BaseItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Year not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      security:
        - CustomAuthentication: []
      summary: Gets a year.
      tags:
        - Years
  /web/ConfigurationPage:
    get:
      operationId: GetDashboardConfigurationPage
      parameters:
        - description: The name of the page.
          in: query
          name: name
          type: string
      produces:
        - application/x-javascript
        - text/html
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: ConfigurationPage returned.
          schema:
            format: binary
            type: string
        '404':
          description: Plugin configuration page not found.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets a dashboard configuration page.
      tags:
        - Dashboard
  /web/ConfigurationPages:
    get:
      operationId: GetConfigurationPages
      parameters:
        - description: Whether to enable in the main menu.
          in: query
          name: enableInMainMenu
          type: boolean
        - description: The Jellyfin.Api.Models.ConfigurationPageInfo.
          enum:
            - PluginConfiguration
            - None
          in: query
          name: pageType
          type: string
      produces:
        - application/json
        - application/json; profile="CamelCase"
        - application/json; profile="PascalCase"
      responses:
        '200':
          description: ConfigurationPages returned.
          schema:
            items:
              $ref: '#/definitions/ConfigurationPageInfo'
            type: array
        '404':
          description: Server still loading.
          schema:
            $ref: '#/definitions/ProblemDetails'
      summary: Gets the configuration pages.
      tags:
        - Dashboard
schemes:
  - http
securityDefinitions:
  CustomAuthentication:
    description: API key header parameter
    in: header
    name: X-Emby-Authorization
    type: apiKey
swagger: '2.0'
x-components: {}
x-hasEquivalentPaths: true

