basePath: /
definitions:
  GoogleCloudServicebrokerV1beta1__Binding:
    description: Describes the binding.
    properties:
      bind_resource:
        additionalProperties:
          description: Properties of the object.
        description: >-
          A JSON object that contains data for platform resources associated
          with

          the binding to be created.
        type: object
      binding_id:
        description: |-
          The id of the binding. Must be unique within GCP project.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
      createTime:
        description: Output only. Timestamp for when the binding was created.
        format: google-datetime
        type: string
      deploymentName:
        description: >-
          Output only. String containing the Deployment Manager deployment name
          that was created

          for this binding,
        type: string
      parameters:
        additionalProperties:
          description: Properties of the object.
        description: Configuration options for the service binding.
        type: object
      plan_id:
        description: |-
          The ID of the plan. See `Service` and `Plan` resources for details.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
      resourceName:
        description: >-
          Output only. The resource name of the binding, e.g.

          projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
        type: string
      service_id:
        description: |-
          The id of the service. Must be a valid identifier of a service
          contained in the list from a `ListServices()` call.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__Broker:
    description: |-
      Broker represents a consumable collection of Service Registry catalogs
      exposed as an OSB Broker.
    properties:
      createTime:
        description: Output only. Timestamp for when the broker was created.
        format: google-datetime
        type: string
      name:
        description: |-
          Name of the broker in the format:
          <projects>/<project-id>/brokers/<broker>.
          This allows for multiple brokers per project which can be used to
          enable having custom brokers per GKE cluster, for example.
        type: string
      title:
        description: >-
          User friendly title of the broker.

          Limited to 1024 characters. Requests with longer titles will be
          rejected.
        type: string
      url:
        description: >-
          Output only. URL of the broker OSB-compliant endpoint, for example:

          https://servicebroker.googleapis.com/projects/<project>/brokers/<broker>
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__CreateBindingResponse:
    description: Response for the `CreateBinding()` method.
    properties:
      credentials:
        additionalProperties:
          description: Properties of the object.
        description: Credentials to use the binding.
        type: object
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      operation:
        description: >-
          If broker executes operation asynchronously, this is the operation ID
          that

          can be polled to check the completion status of said operation.

          This broker always executes all create/delete operations
          asynchronously.
        type: string
      route_service_url:
        description: >-
          A URL to which the platform may proxy requests for the address sent
          with

          bind_resource.route
        type: string
      syslog_drain_url:
        description: From where to read system logs.
        type: string
      volume_mounts:
        description: An array of configuration for mounting volumes.
        items:
          additionalProperties:
            description: Properties of the object.
          type: object
        type: array
    type: object
  GoogleCloudServicebrokerV1beta1__CreateServiceInstanceResponse:
    description: Response for the `CreateServiceInstance()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      operation:
        description: >-
          If broker executes operation asynchronously, this is the operation ID
          that

          can be polled to check the completion status of said operation.

          This broker always will return a non-empty operation on success.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__DashboardClient:
    description: Message containing information required to activate Dashboard SSO feature.
    properties:
      id:
        description: The id of the Oauth client that the dashboard will use.
        type: string
      redirect_uri:
        description: >-
          A URI for the service dashboard.

          Validated by the OAuth token server when the dashboard requests a
          token.
        type: string
      secret:
        description: A secret for the dashboard client.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__DeleteBindingResponse:
    description: Response for the `DeleteBinding()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      operation:
        description: >-
          If broker executes operation asynchronously, this is the operation ID
          that

          can be polled to check the completion status of said operation.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__DeleteServiceInstanceResponse:
    description: Response for the `DeleteServiceInstance()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      operation:
        description: >-
          If broker executes operation asynchronously, this is the operation ID
          that

          can be polled to check the completion status of said operation.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__GetBindingResponse:
    description: Response for the `GetBinding()` method.
    properties:
      credentials:
        additionalProperties:
          description: Properties of the object.
        description: Credentials to use the binding.
        type: object
      deploymentName:
        description: >-
          String containing the Deployment Manager deployment name that was
          created

          for this binding,
        type: string
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      resourceName:
        description: >-
          Output only. The resource name of the binding, e.g.

          projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
        type: string
      route_service_url:
        description: >-
          A URL to which the platform may proxy requests for the address sent
          with

          bind_resource.route
        type: string
      syslog_drain_url:
        description: From where to read system logs.
        type: string
      volume_mounts:
        description: An array of configurations for mounting volumes.
        items:
          additionalProperties:
            description: Properties of the object.
          type: object
        type: array
    type: object
  GoogleCloudServicebrokerV1beta1__ListBindingsResponse:
    description: The response for the `ListBindings()` method.
    properties:
      bindings:
        description: The list of bindings in the instance.
        items:
          $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Binding'
        type: array
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      nextPageToken:
        description: >-
          This token allows you to get the next page of results for list
          requests.

          If the number of results is larger than `pageSize`, use the
          `nextPageToken`

          as a value for the query parameter `pageToken` in the next list
          request.

          Subsequent list requests will have their own `nextPageToken` to
          continue

          paging through the results
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__ListBrokersResponse:
    description: The response for the `ListBrokers()` method.
    properties:
      brokers:
        description: The list of brokers in the container.
        items:
          $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Broker'
        type: array
      nextPageToken:
        description: >-
          This token allows you to get the next page of results for list
          requests.

          If the number of results is larger than `pageSize`, use the
          `nextPageToken`

          as a value for the query parameter `pageToken` in the next list
          request.

          Subsequent list requests will have their own `nextPageToken` to
          continue

          paging through the results
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__ListCatalogResponse:
    description: Response message for the `ListCatalog()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      nextPageToken:
        description: >-
          This token allows you to get the next page of results for list
          requests.

          If the number of results is larger than `pageSize`, use the
          `nextPageToken`

          as a value for the query parameter `pageToken` in the next list
          request.

          Subsequent list requests will have their own `nextPageToken` to
          continue

          paging through the results
        type: string
      services:
        description: The services available for the requested GCP project.
        items:
          $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Service'
        type: array
    type: object
  GoogleCloudServicebrokerV1beta1__ListServiceInstancesResponse:
    description: The response for the `ListServiceInstances()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      instances:
        description: The list of instances in the broker.
        items:
          $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ServiceInstance'
        type: array
      nextPageToken:
        description: >-
          This token allows you to get the next page of results for list
          requests.

          If the number of results is larger than `pageSize`, use the
          `nextPageToken`

          as a value for the query parameter `pageToken` in the next list
          request.

          Subsequent list requests will have their own `nextPageToken` to
          continue

          paging through the results
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__Operation:
    description: 'Describes a long running operation, which conforms to OpenService API.'
    properties:
      description:
        description: Optional description of the Operation state.
        type: string
      state:
        description: |-
          The state of the operation.
          Valid values are: "in progress", "succeeded", and "failed".
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__Plan:
    description: Plan message describes a Service Plan.
    properties:
      bindable:
        description: >-
          Specifies whether instances of the service can be bound to
          applications.

          If not specified, `Service.bindable` will be presumed.
        type: boolean
      description:
        description: Textual description of the plan. Optional.
        type: string
      free:
        description: Whether the service is free.
        type: boolean
      id:
        description: |-
          ID is a globally unique identifier used to uniquely identify the plan.
          User must make no presumption about the format of this field.
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object.
        description: |-
          A list of metadata for a service offering.
          Metadata is an arbitrary JSON object.
        type: object
      name:
        description: |-
          User friendly name of the plan.
          The name must be globally unique within GCP project.
          Note, which is different from ("This must be globally unique within a
          platform marketplace").
        type: string
      schemas:
        additionalProperties:
          description: Properties of the object.
        description: Schema definitions for service instances and bindings for the plan.
        type: object
    type: object
  GoogleCloudServicebrokerV1beta1__Service:
    description: |-
      The resource model mostly follows the Open Service Broker API, as
      described here:
      https://github.com/openservicebrokerapi/servicebroker/blob/master/_spec.md
      Though due to Google Specifics it has additional optional fields.
    properties:
      bindable:
        description: >-
          Specifies whether instances of the service can be bound to
          applications.

          Required.
        type: boolean
      binding_retrievable:
        description: Whether the service provides an endpoint to get service bindings.
        type: boolean
      bindings_retrievable:
        description: Whether the service provides an endpoint to get service bindings.
        type: boolean
      dashboard_client:
        $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__DashboardClient'
        description: Information to activate Dashboard SSO feature.
      description:
        description: Textual description of the service. Required.
        type: string
      id:
        description: >-
          ID is a globally unique identifier used to uniquely identify the
          service.

          ID is an opaque string.
        type: string
      instances_retrievable:
        description: Whether the service provides an endpoint to get service instances.
        type: boolean
      metadata:
        additionalProperties:
          description: Properties of the object.
        description: |-
          A list of metadata for a service offering.
          Metadata is an arbitrary JSON object.
        type: object
      name:
        description: |-
          User friendly service name.
          Name must match [a-z0-9]+ regexp.
          The name must be globally unique within GCP project.
          Note, which is different from ("This must be globally unique within a
          platform marketplace").
          Required.
        type: string
      plan_updateable:
        description: Whether the service supports upgrade/downgrade for some plans.
        type: boolean
      plans:
        description: |-
          A list of plans for this service.
          At least one plan is required.
        items:
          $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Plan'
        type: array
      tags:
        description: >-
          Tags provide a flexible mechanism to expose a classification,
          attribute, or

          base technology of a service.
        items:
          type: string
        type: array
    type: object
  GoogleCloudServicebrokerV1beta1__ServiceInstance:
    description: >-
      Message describing inputs to Provision and Update Service instance
      requests.
    properties:
      context:
        additionalProperties:
          description: Properties of the object.
        description: >-
          Platform specific contextual information under which the service
          instance

          is to be provisioned. This replaces organization_guid and space_guid.

          But can also contain anything.

          Currently only used for logging context information.
        type: object
      createTime:
        description: Output only. Timestamp for when the instance was created.
        format: google-datetime
        type: string
      deploymentName:
        description: >-
          Output only. String containing the Deployment Manager deployment name
          that was created

          for this instance,
        type: string
      description:
        description: >-
          To return errors when GetInstance call is done via HTTP to be unified
          with

          other methods.
        type: string
      instance_id:
        description: |-
          The id of the service instance. Must be unique within GCP project.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
      organization_guid:
        description: >-
          The platform GUID for the organization under which the service is to
          be

          provisioned.

          Required.
        type: string
      parameters:
        additionalProperties:
          description: Properties of the object.
        description: |-
          Configuration options for the service instance.
          Parameters is JSON object serialized to string.
        type: object
      plan_id:
        description: |-
          The ID of the plan. See `Service` and `Plan` resources for details.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
      previous_values:
        additionalProperties:
          description: Properties of the object.
        description: >-
          Used only in UpdateServiceInstance request to optionally specify
          previous

          fields.
        type: object
      resourceName:
        description: |-
          Output only. The resource name of the instance, e.g.
          projects/project_id/brokers/broker_id/service_instances/instance_id
        type: string
      service_id:
        description: |-
          The id of the service. Must be a valid identifier of a service
          contained in the list from a `ListServices()` call.
          Maximum length is 64, GUID recommended.
          Required.
        type: string
      space_guid:
        description: |-
          The identifier for the project space within the platform organization.
          Required.
        type: string
    type: object
  GoogleCloudServicebrokerV1beta1__UpdateServiceInstanceResponse:
    description: Response for the `UpdateServiceInstance()` method.
    properties:
      description:
        description: >-
          Used to communicate description of the response. Usually for
          non-standard

          error codes.

          https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
        type: string
      operation:
        description: >-
          If broker executes operation asynchronously, this is the operation ID
          that

          can be polled to check the completion status of said operation.
        type: string
    type: object
  GoogleIamV1__Binding:
    description: Associates `members` with a `role`.
    properties:
      condition:
        $ref: '#/definitions/GoogleType__Expr'
        description: |-
          The condition that is associated with this binding.
          NOTE: An unsatisfied condition will not allow user access via current
          binding. Different bindings, including their conditions, are examined
          independently.
      members:
        description: >+
          Specifies the identities requesting access for a Cloud Platform
          resource.

          `members` can have the following values:


          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@example.com` .


          * `serviceAccount:{emailid}`: An email address that represents a
          service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.

          * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
          unique
             identifier) representing a user that has been recently deleted. For
             example, `alice@example.com?uid=123456789012345678901`. If the user is
             recovered, this value reverts to `user:{emailid}` and the recovered user
             retains the role in the binding.

          * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
          (plus
             unique identifier) representing a service account that has been recently
             deleted. For example,
             `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
             If the service account is undeleted, this value reverts to
             `serviceAccount:{emailid}` and the undeleted service account retains the
             role in the binding.

          * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus
          unique
             identifier) representing a Google group that has been recently
             deleted. For example, `admins@example.com?uid=123456789012345678901`. If
             the group is recovered, this value reverts to `group:{emailid}` and the
             recovered group retains the role in the binding.


          * `domain:{domain}`: The G Suite domain (primary) that represents all
          the    users of that domain. For example, `google.com` or
          `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        type: string
    type: object
  GoogleIamV1__Policy:
    description: >-
      An Identity and Access Management (IAM) policy, which specifies access

      controls for Google Cloud resources.



      A `Policy` is a collection of `bindings`. A `binding` binds one or more

      `members` to a single `role`. Members can be user accounts, service
      accounts,

      Google groups, and domains (such as G Suite). A `role` is a named list of

      permissions; each `role` can be an IAM predefined role or a user-created

      custom role.


      Optionally, a `binding` can specify a `condition`, which is a logical

      expression that allows access to a resource only if the expression
      evaluates

      to `true`. A condition can add constraints based on attributes of the

      request, the resource, or both.


      **JSON example:**

          {
            "bindings": [
              {
                "role": "roles/resourcemanager.organizationAdmin",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                ]
              },
              {
                "role": "roles/resourcemanager.organizationViewer",
                "members": ["user:eve@example.com"],
                "condition": {
                  "title": "expirable access",
                  "description": "Does not grant access after Sep 2020",
                  "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
                }
              }
            ],
            "etag": "BwWWja0YfJA=",
            "version": 3
          }

      **YAML example:**

          bindings:
          - members:
            - user:mike@example.com
            - group:admins@example.com
            - domain:google.com
            - serviceAccount:my-project-id@appspot.gserviceaccount.com
            role: roles/resourcemanager.organizationAdmin
          - members:
            - user:eve@example.com
            role: roles/resourcemanager.organizationViewer
            condition:
              title: expirable access
              description: Does not grant access after Sep 2020
              expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
          - etag: BwWWja0YfJA=
          - version: 3

      For a description of IAM and its features, see the

      [IAM documentation](https://cloud.google.com/iam/docs/).
    properties:
      bindings:
        description: >-
          Associates a list of `members` to a `role`. Optionally, may specify a

          `condition` that determines how and when the `bindings` are applied.
          Each

          of the `bindings` must contain at least one member.
        items:
          $ref: '#/definitions/GoogleIamV1__Binding'
        type: array
      etag:
        description: >-
          `etag` is used for optimistic concurrency control as a way to help

          prevent simultaneous updates of a policy from overwriting each other.

          It is strongly suggested that systems make use of the `etag` in the

          read-modify-write cycle to perform policy updates in order to avoid
          race

          conditions: An `etag` is returned in the response to `getIamPolicy`,
          and

          systems are expected to put that etag in the request to `setIamPolicy`
          to

          ensure that their change will be applied to the same version of the
          policy.


          **Important:** If you use IAM Conditions, you must include the `etag`
          field

          whenever you call `setIamPolicy`. If you omit this field, then IAM
          allows

          you to overwrite a version `3` policy with a version `1` policy, and
          all of

          the conditions in the version `3` policy are lost.
        format: byte
        type: string
      version:
        description: >-
          Specifies the format of the policy.


          Valid values are `0`, `1`, and `3`. Requests that specify an invalid
          value

          are rejected.


          Any operation that affects conditional role bindings must specify
          version

          `3`. This requirement applies to the following operations:


          * Getting a policy that includes a conditional role binding

          * Adding a conditional role binding to a policy

          * Changing a conditional role binding in a policy

          * Removing any role binding, with or without a condition, from a
          policy
            that includes conditions

          **Important:** If you use IAM Conditions, you must include the `etag`
          field

          whenever you call `setIamPolicy`. If you omit this field, then IAM
          allows

          you to overwrite a version `3` policy with a version `1` policy, and
          all of

          the conditions in the version `3` policy are lost.


          If a policy does not include any conditions, operations on that policy
          may

          specify any valid version or leave the field unset.
        format: int32
        type: integer
    type: object
  GoogleIamV1__SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/GoogleIamV1__Policy'
        description: >-
          REQUIRED: The complete policy to be applied to the `resource`. The
          size of

          the policy is limited to a few 10s of KB. An empty policy is a

          valid policy but certain Cloud Platform services (such as Projects)

          might reject them.
    type: object
  GoogleIamV1__TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: >-
          The set of permissions to check for the `resource`. Permissions with

          wildcards (such as '*' or 'storage.*') are not allowed. For more

          information see

          [IAM
          Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
        type: array
    type: object
  GoogleIamV1__TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  GoogleProtobuf__Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  GoogleType__Expr:
    description: |-
      Represents an expression text. Example:

          title: "User account presence"
          description: "Determines whether the request has a user account"
          expression: "size(request.user) > 0"
    properties:
      description:
        description: |-
          An optional description of the expression. This is a longer text which
          describes the expression, e.g. when hovered over it in a UI.
        type: string
      expression:
        description: |-
          Textual representation of an expression in
          Common Expression Language syntax.

          The application context of the containing message determines which
          well-known feature set of CEL is supported.
        type: string
      location:
        description: |-
          An optional string indicating the location of the expression for error
          reporting, e.g. a file name and a position in the file.
        type: string
      title:
        description: |-
          An optional title for the expression, i.e. a short string describing
          its purpose. This can be used e.g. in UIs which allow to enter the
          expression.
        type: string
    type: object
externalDocs:
  url: >-
    https://cloud.google.com/kubernetes-engine/docs/concepts/add-on/service-broker
host: servicebroker.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: |
    The Google Cloud Platform Service Broker API provides Google hosted
    implementation of the Open Service Broker API
    (https://www.openservicebrokerapi.org/).
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Service Broker
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: >-
      https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://servicebroker.googleapis.com/$discovery/rest?version=v1beta1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: servicebroker
paths:
  '/v1beta1/{name}':
    delete:
      description: |-
        Unbinds from a service instance.
        For synchronous/asynchronous request details see CreateServiceInstance
        method.
        If binding does not exist HTTP 410 status will be returned.
      operationId: >-
        servicebroker.projects.brokers.v2.service_instances.service_bindings.delete
      parameters:
        - description: |-
            Name must match
            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/`
            `v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]`
            or
            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/`
            `/instances/[INSTANCE_ID]/bindings/[BINDING_ID]`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: See CreateServiceInstanceRequest for details.
          in: query
          name: acceptsIncomplete
          type: boolean
        - description: The plan id of the service instance.
          in: query
          name: planId
          type: string
        - description: |-
            Additional query parameter hints.
            The service id of the service instance.
          in: query
          name: serviceId
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__DeleteBindingResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: GetBinding returns the binding information.
      operationId: servicebroker.projects.brokers.v2.service_instances.service_bindings.get
      parameters:
        - description: >-
            Name must match

            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: Plan id.
          in: query
          name: planId
          type: string
        - description: Service id.
          in: query
          name: serviceId
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__GetBindingResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    patch:
      consumes:
        - application/json
      description: |-
        Updates an existing service instance.
        See CreateServiceInstance for possible response codes.
      operationId: servicebroker.projects.brokers.v2.service_instances.patch
      parameters:
        - description: >-
            Name must match

            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: See CreateServiceInstanceRequest for details.
          in: query
          name: acceptsIncomplete
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ServiceInstance'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__UpdateServiceInstanceResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{name}/last_operation':
    get:
      description: |-
        Returns the state of the last operation for the binding.
        Only last (or current) operation can be polled.
      operationId: >-
        servicebroker.projects.brokers.v2.service_instances.service_bindings.getLast_operation
      parameters:
        - description: >-
            Name must match

            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            If `operation` was returned during mutation operation, this field
            must be

            populated with the provided value.
          in: query
          name: operation
          type: string
        - description: Plan id.
          in: query
          name: planId
          type: string
        - description: Service id.
          in: query
          name: serviceId
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
  '/v1beta1/{parent}/bindings':
    get:
      description: Lists all the bindings in the instance.
      operationId: servicebroker.projects.brokers.instances.bindings.list
      parameters:
        - description: |-
            Parent must match
            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/` +
            `v2/service_instances/[INSTANCE_ID]`
            or
            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.

            Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__ListBindingsResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
  '/v1beta1/{parent}/brokers':
    get:
      description: ListBrokers lists brokers.
      operationId: servicebroker.projects.brokers.list
      parameters:
        - description: 'Parent must match `projects/[PROJECT_ID]/brokers`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.

            Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ListBrokersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    post:
      consumes:
        - application/json
      description: CreateBroker creates a Broker.
      operationId: servicebroker.projects.brokers.create
      parameters:
        - description: The project in which to create broker.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Broker'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Broker'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{parent}/instances':
    get:
      description: |-
        Lists all the instances in the brokers
        This API is an extension and not part of the OSB spec.
        Hence the path is a standard Google API URL.
      operationId: servicebroker.projects.brokers.instances.list
      parameters:
        - description: 'Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.

            Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__ListServiceInstancesResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
  '/v1beta1/{parent}/service_bindings/{binding_id}':
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    put:
      consumes:
        - application/json
      description: >-
        CreateBinding generates a service binding to an existing service
        instance.

        See ProviServiceInstance for async operation details.
      operationId: >-
        servicebroker.projects.brokers.v2.service_instances.service_bindings.create
      parameters:
        - description: >-
            The GCP container.

            Must match

            `projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The id of the binding. Must be unique within GCP project.
            Maximum length is 64, GUID recommended.
            Required.
          in: path
          name: binding_id
          required: true
          type: string
          x-reservedExpansion: true
        - description: See CreateServiceInstanceRequest for details.
          in: query
          name: acceptsIncomplete
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__Binding'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__CreateBindingResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{parent}/v2/catalog':
    get:
      description: |-
        Lists all the Services registered with this broker for consumption for
        given service registry broker, which contains an set of services.
        Note, that Service producer API is separate from Broker API.
      operationId: servicebroker.projects.brokers.v2.catalog.list
      parameters:
        - description: 'Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Specifies the number of results to return per page. If there are
            fewer

            elements than the specified number, returns all elements.

            Optional. If unset or 0, all the results will be returned.
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ListCatalogResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
  '/v1beta1/{parent}/v2/service_instances/{instance_id}':
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    put:
      consumes:
        - application/json
      description: >-
        Provisions a service instance.

        If `request.accepts_incomplete` is false and Broker cannot execute
        request

        synchronously HTTP 422 error will be returned along with

        FAILED_PRECONDITION status.

        If `request.accepts_incomplete` is true and the Broker decides to
        execute

        resource asynchronously then HTTP 202 response code will be returned and
        a

        valid polling operation in the response will be included.

        If Broker executes the request synchronously and it succeeds HTTP 201

        response will be furnished.

        If identical instance exists, then HTTP 200 response will be returned.

        If an instance with identical ID but mismatching parameters exists, then

        HTTP 409 status code will be returned.
      operationId: servicebroker.projects.brokers.v2.service_instances.create
      parameters:
        - description: 'Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The id of the service instance. Must be unique within GCP project.
            Maximum length is 64, GUID recommended.
            Required.
          in: path
          name: instance_id
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Value indicating that API client supports asynchronous operations.
            If

            Broker cannot execute the request synchronously HTTP 422 code will
            be

            returned to HTTP clients along with FAILED_PRECONDITION error.

            If true and broker will execute request asynchronously 202 HTTP code
            will

            be returned.

            This broker always requires this to be true as all mutator
            operations are

            asynchronous.
          in: query
          name: acceptsIncomplete
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ServiceInstance'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleCloudServicebrokerV1beta1__CreateServiceInstanceResponse
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{resource}:getIamPolicy':
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a
        policy

        set.
      operationId: servicebroker.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this
            field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value
            will be

            rejected.


            Requests for policies with any conditional bindings must specify
            version 3.

            Policies without any conditional bindings may specify any valid
            value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          type: integer
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleIamV1__Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - v1beta1
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
  '/v1beta1/{resource}:setIamPolicy':
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    post:
      consumes:
        - application/json
      description: >-
        Sets the access control policy on the specified resource. Replaces any

        existing policy.


        Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
        PERMISSION_DENIED
      operationId: servicebroker.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this
            field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleIamV1__SetIamPolicyRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleIamV1__Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - v1beta1
  '/v1beta1/{resource}:testIamPermissions':
    parameters:
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - default: json
        description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - default: true
        description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
    post:
      consumes:
        - application/json
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building
        permission-aware

        UIs and command-line tools, not for authorization checking. This
        operation

        may "fail open" without warning.
      operationId: servicebroker.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this
            field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleIamV1__TestIamPermissionsRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleIamV1__TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - v1beta1
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 accessCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
swagger: '2.0'
tags:
  - name: projects
  - name: v1beta1
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      default: json
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      default: true
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string
  requestBodies:
    GoogleCloudServicebrokerV1beta1__ServiceInstance:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GoogleCloudServicebrokerV1beta1__ServiceInstance'

