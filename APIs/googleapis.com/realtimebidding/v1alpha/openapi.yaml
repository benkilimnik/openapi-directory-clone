basePath: /
definitions:
  ActivateBiddingFunctionRequest:
    description: The request to activate a bidding function.
    properties: {}
    type: object
  ArchiveBiddingFunctionRequest:
    description: A request to archive a bidding function.
    properties: {}
    type: object
  BiddingFunction:
    description: >-
      The bidding function to be executed as part of the TURTLEDOVE simulation
      experiment bidding flow.
    properties:
      biddingFunction:
        description: The raw Javascript source code of the bidding function.
        type: string
      name:
        description: >-
          The name of the bidding function that must follow the pattern:
          `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`.
        type: string
      state:
        description: Output only. The state of the bidding function.
        enum:
          - STATE_UNSPECIFIED
          - ACTIVE
          - ARCHIVED
        readOnly: true
        type: string
      type:
        description: The type of the bidding function to be created.
        enum:
          - FUNCTION_TYPE_UNSPECIFIED
          - TURTLEDOVE_SIMULATION_BIDDING_FUNCTION
          - FLEDGE_BIDDING_FUNCTION
        type: string
    type: object
  ListBiddingFunctionsResponse:
    description: A response containing a list of a bidder's bidding functions.
    properties:
      biddingFunctions:
        description: A list of a bidder's bidding functions.
        items:
          $ref: '#/definitions/BiddingFunction'
        type: array
      nextPageToken:
        description: >-
          A token which can be passed to a subsequent call to the
          `ListBiddingFunctions` method to retrieve the next page of results in
          ListBiddingFunctionsRequest.pageToken.
        type: string
    type: object
externalDocs:
  url: >-
    https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/
host: realtimebidding.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: >-
    Allows external bidders to manage their RTB integration with Google. This
    includes managing bidder endpoints, QPS quotas, configuring what ad
    inventory to receive via pretargeting, submitting creatives for
    verification, and accessing creative metadata such as approval status.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Real-time Bidding API
  version: v1alpha
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: openapi
      url: 'https://realtimebidding.googleapis.com/$discovery/rest?version=v1alpha'
      version: '3.0'
  x-providerName: googleapis.com
  x-serviceName: realtimebidding
paths:
  '/v1alpha/{name}:activate':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Activates an existing bidding function. An activated function is
        available for invocation for the server-side TURTLEDOVE simulations.
      operationId: realtimebidding.bidders.biddingFunctions.activate
      parameters:
        - description: >-
            Required. The name of the bidding function to activate. Format:
            `bidders/{bidder_account_id}/biddingFunction/{bidding_function_name}`
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ActivateBiddingFunctionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BiddingFunction'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/realtime-bidding'
          Oauth2c:
            - 'https://www.googleapis.com/auth/realtime-bidding'
      tags:
        - bidders
  '/v1alpha/{name}:archive':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Archives an existing bidding function. An archived function will not be
        available for function invocation for the server-side TURTLEDOVE
        simulations unless it is activated.
      operationId: realtimebidding.bidders.biddingFunctions.archive
      parameters:
        - description: >-
            Required. The name of the bidding function to archive. Format:
            `bidders/{bidder_account_id}/biddingFunction/{bidding_function_name}`
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ArchiveBiddingFunctionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BiddingFunction'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/realtime-bidding'
          Oauth2c:
            - 'https://www.googleapis.com/auth/realtime-bidding'
      tags:
        - bidders
  '/v1alpha/{parent}/biddingFunctions':
    get:
      description: Lists the bidding functions that a bidder currently has registered.
      operationId: realtimebidding.bidders.biddingFunctions.list
      parameters:
        - description: >-
            Required. Name of the bidder whose bidding functions will be listed.
            Format: `bidders/{bidder_account_id}`
          in: path
          name: parent
          required: true
          type: string
        - description: The maximum number of bidding functions to return.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A token identifying a page of results the server should return. This
            value is received from a previous `ListBiddingFunctions` call in
            ListBiddingFunctionsResponse.nextPageToken.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBiddingFunctionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/realtime-bidding'
          Oauth2c:
            - 'https://www.googleapis.com/auth/realtime-bidding'
      tags:
        - bidders
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new bidding function.
      operationId: realtimebidding.bidders.biddingFunctions.create
      parameters:
        - description: >-
            Required. The name of the bidder for which to create the bidding
            function. Format: `bidders/{bidderAccountId}`
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BiddingFunction'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BiddingFunction'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/realtime-bidding'
          Oauth2c:
            - 'https://www.googleapis.com/auth/realtime-bidding'
      tags:
        - bidders
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/realtime-bidding': >-
        See, create, edit, and delete your Authorized Buyers and Open Bidding
        account entities
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/realtime-bidding': >-
        See, create, edit, and delete your Authorized Buyers and Open Bidding
        account entities
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
swagger: '2.0'
tags:
  - name: bidders
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

