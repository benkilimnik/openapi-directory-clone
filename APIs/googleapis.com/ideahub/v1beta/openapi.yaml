basePath: /
definitions:
  GoogleSearchIdeahubV1betaAvailableLocale:
    description: Represents locales that are available for a web property.
    properties:
      locale:
        description: 'A string in BCP 47 format, without a resource prefix.'
        type: string
      name:
        description: >-
          A string in BCP 47 format, prefixed with the platform and property
          name, and "locales/". Format:
          platforms/{platform}/properties/{property}/locales/{locale}
        type: string
    type: object
  GoogleSearchIdeahubV1betaIdea:
    description: A single Idea that we want to show the end user.
    properties:
      name:
        description: 'Unique identifier for the idea. Format: ideas/{ideaId}'
        type: string
      text:
        description: The ideaâ€™s text.
        type: string
      topics:
        description: The Topics that match the idea.
        items:
          $ref: '#/definitions/GoogleSearchIdeahubV1betaTopic'
        type: array
    type: object
  GoogleSearchIdeahubV1betaIdeaActivity:
    description: An idea activity entry.
    properties:
      ideas:
        description: 'The Idea IDs for this entry. If empty, topics should be set.'
        items:
          type: string
        type: array
      name:
        description: >-
          Unique identifier for the idea activity. The name is ignored when
          creating an idea activity. Format:
          platforms/{platform}/properties/{property}/ideaActivities/{idea_activity}
        type: string
      topics:
        description: 'The Topic IDs for this entry. If empty, ideas should be set.'
        items:
          type: string
        type: array
      type:
        description: The type of activity performed.
        enum:
          - TYPE_UNSPECIFIED
          - POST_DRAFTED
          - POST_PUBLISHED
          - POST_DELETED
          - POST_UNPUBLISHED
        type: string
      uri:
        description: The uri the activity relates to.
        type: string
    type: object
  GoogleSearchIdeahubV1betaIdeaState:
    description: Represents idea state specific to a web property.
    properties:
      dismissed:
        description: Whether the idea is dismissed.
        type: boolean
      name:
        description: >-
          Unique identifier for the idea state. Format:
          platforms/{platform}/properties/{property}/ideaStates/{idea_state}
        type: string
      saved:
        description: Whether the idea is saved.
        type: boolean
    type: object
  GoogleSearchIdeahubV1betaListAvailableLocalesResponse:
    description: >-
      Response for whether ideas are available for a given web property on a
      platform, for the currently logged-in user.
    properties:
      availableLocales:
        description: Locales for which ideas are available for the given Creator.
        items:
          $ref: '#/definitions/GoogleSearchIdeahubV1betaAvailableLocale'
        type: array
      nextPageToken:
        description: >-
          A token that can be sent as `page_token` to retrieve the next page. If
          this field is omitted, there are no subsequent pages.
        type: string
    type: object
  GoogleSearchIdeahubV1betaListIdeasResponse:
    properties:
      ideas:
        description: Results for the ListIdeasRequest.
        items:
          $ref: '#/definitions/GoogleSearchIdeahubV1betaIdea'
        type: array
      nextPageToken:
        description: Used to fetch the next page in a subsequent request.
        type: string
    type: object
  GoogleSearchIdeahubV1betaTopic:
    description: >-
      Represents a Topic umbrella for a list of questions that a Creator may
      want to respond to.
    properties:
      displayName:
        description: String displayed to the creator indicating the name of the Topic.
        type: string
      mid:
        description: The mID of the topic.
        type: string
      name:
        description: 'Unique identifier for the topic. Format: topics/{topic}'
        type: string
    type: object
  GoogleSearchIdeahubV1betaTopicState:
    description: Represents topic state specific to a web property.
    properties:
      dismissed:
        description: Whether the topic is dismissed.
        type: boolean
      name:
        description: >-
          Unique identifier for the topic state. Format:
          platforms/{platform}/properties/{property}/topicStates/{topic_state}
        type: string
      saved:
        description: Whether the topic is saved.
        type: boolean
    type: object
externalDocs:
  url: 'https://console.cloud.google.com/apis/library/ideahub.googleapis.com'
host: ideahub.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: This is an invitation-only API.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Idea Hub API
  version: v1beta
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: openapi
      url: 'https://ideahub.googleapis.com/$discovery/rest?version=v1beta'
      version: '3.0'
  x-providerName: googleapis.com
  x-serviceName: ideahub
paths:
  '/v1beta/{name}':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    patch:
      consumes:
        - application/json
      description: Update a topic state resource.
      operationId: ideahub.platforms.properties.topicStates.patch
      parameters:
        - description: >-
            Unique identifier for the topic state. Format:
            platforms/{platform}/properties/{property}/topicStates/{topic_state}
          in: path
          name: name
          required: true
          type: string
        - description: The list of fields to be updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleSearchIdeahubV1betaTopicState'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleSearchIdeahubV1betaTopicState'
      tags:
        - platforms
  '/v1beta/{parent}/ideaActivities':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Creates an idea activity entry.
      operationId: ideahub.platforms.properties.ideaActivities.create
      parameters:
        - description: >-
            Required. The parent resource where this idea activity will be
            created. Format: platforms/{platform}/property/{property}
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleSearchIdeahubV1betaIdeaActivity'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleSearchIdeahubV1betaIdeaActivity'
      tags:
        - platforms
  '/v1beta/{parent}/ideas':
    get:
      description: List ideas for a given Creator and filter and sort options.
      operationId: ideahub.platforms.properties.ideas.list
      parameters:
        - description: >-
            Required. If defined, specifies the creator for which to filter by.
            Format: publishers/{publisher}/properties/{property}
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Allows filtering. Supported syntax: * Filter expressions are made up
            of one or more restrictions. * Restrictions are implicitly combined,
            as if the `AND` operator was always used. The `OR` operator is
            currently unsupported. * Supported functions: - `saved(bool)`: If
            set to true, fetches only saved ideas. If set to false, fetches all
            except saved ideas. Can't be simultaneously used with
            `dismissed(bool)`. - `dismissed(bool)`: If set to true, fetches only
            dismissed ideas. Can't be simultaneously used with `saved(bool)`.
            The `false` value is currently unsupported. Examples: *
            `saved(true)` * `saved(false)` * `dismissed(true)` The length of
            this field should be no more than 500 characters.
          in: query
          name: filter
          type: string
        - description: Order semantics described below.
          in: query
          name: orderBy
          type: string
        - description: >-
            The maximum number of ideas per page. If unspecified, at most 10
            ideas will be returned. The maximum value is 2000; values above 2000
            will be coerced to 2000.
          in: query
          name: pageSize
          type: integer
        - description: Used to fetch next page.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleSearchIdeahubV1betaListIdeasResponse'
      tags:
        - platforms
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1beta/{parent}/locales':
    get:
      description: Returns which locales ideas are available in for a given Creator.
      operationId: ideahub.platforms.properties.locales.list
      parameters:
        - description: >-
            Required. The web property to check idea availability for Format:
            platforms/{platform}/property/{property}
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            The maximum number of locales to return. The service may return
            fewer than this value. If unspecified, at most 100 locales will be
            returned. The maximum value is 100; values above 100 will be coerced
            to 100.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token, received from a previous `ListAvailableLocales` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListAvailableLocales` must match the
            call that provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: >-
              #/definitions/GoogleSearchIdeahubV1betaListAvailableLocalesResponse
      tags:
        - platforms
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
schemes:
  - https
source:
  url: {}
swagger: '2.0'
tags:
  - name: platforms
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

