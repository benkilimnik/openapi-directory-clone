basePath: /
definitions:
  AddFirebaseRequest:
    description: >-
      The request used to link a Google Cloud Storage bucket to a Firebase
      project.
    properties: {}
    type: object
  Bucket:
    description: A storage bucket and its relation to a parent Firebase project.
    properties:
      location:
        description: Output only. Location of the storage bucket.
        readOnly: true
        type: string
      name:
        description: Resource name of the bucket.
        type: string
      reconciling:
        description: >-
          Output only. Represents whether a bucket is being moved to a new
          location, in which case reconciling is set to true.
        readOnly: true
        type: boolean
    type: object
  Empty:
    description: >-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance: service Foo { rpc
      Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    properties: {}
    type: object
  GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata:
    description: Metadata for MigrateLocationDestructively LRO.
    properties:
      createTime:
        description: The time the LRO was created.
        format: google-datetime
        type: string
      lastUpdateTime:
        description: The time the LRO was last updated.
        format: google-datetime
        type: string
      state:
        description: The current state of the migration.
        enum:
          - STATE_UNSPECIFIED
          - PENDING
          - CREATING_TEMP_BUCKET
          - TRANSFERRING_TO_TEMP
          - DELETING_SOURCE_BUCKET
          - CREATING_DESTINATION_BUCKET
          - TRANSFERRING_TO_DESTINATION
          - DELETING_TEMP_BUCKET
          - SUCCEEDED
          - FAILED
          - ROLLING_BACK
          - ROLLED_BACK
        type: string
    type: object
  GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata:
    description: Metadata for MigrateLocationDestructively LRO.
    properties:
      createTime:
        description: The time the LRO was created.
        format: google-datetime
        type: string
      lastUpdateTime:
        description: The time the LRO was last updated.
        format: google-datetime
        type: string
      state:
        description: The current state of the migration.
        enum:
          - STATE_UNSPECIFIED
          - PENDING
          - CREATING_TEMP_BUCKET
          - TRANSFERRING_TO_TEMP
          - DELETING_SOURCE_BUCKET
          - CREATING_DESTINATION_BUCKET
          - TRANSFERRING_TO_DESTINATION
          - DELETING_TEMP_BUCKET
          - SUCCEEDED
          - FAILED
          - ROLLING_BACK
          - ROLLED_BACK
        type: string
    type: object
  ListBucketsResponse:
    description: The response returned by `ListBuckets`.
    properties:
      buckets:
        description: The list of linked buckets.
        items:
          $ref: '#/definitions/Bucket'
        type: array
      nextPageToken:
        description: >-
          A token that can be sent as `page_token` to retrieve the next page. If
          this field is omitted, there are no subsequent pages.
        type: string
    type: object
  RemoveFirebaseRequest:
    description: >-
      The request used to unlink a Google Cloud Storage bucket from a Firebase
      project.
    properties: {}
    type: object
externalDocs:
  url: 'https://firebase.google.com/docs/storage'
host: firebasestorage.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: >-
    The Cloud Storage for Firebase API enables programmatic management of Cloud
    Storage buckets for use in Firebase projects
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Cloud Storage for Firebase API
  version: v1beta
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: 'https://firebasestorage.googleapis.com/$discovery/rest?version=v1beta'
      version: v1
  x-providerName: googleapis.com
  x-serviceName: firebasestorage
paths:
  '/v1beta/{bucket}:addFirebase':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Links a Google Cloud Storage bucket to a Firebase project.
      operationId: firebasestorage.projects.buckets.addFirebase
      parameters:
        - description: >-
            Required. Resource name of the bucket, mirrors the ID of the
            underlying Google Cloud Storage bucket,
            `projects/{project_number}/buckets/{bucket_id}`.
          in: path
          name: bucket
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AddFirebaseRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Bucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - projects
  '/v1beta/{bucket}:removeFirebase':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Unlinks a linked Google Cloud Storage bucket from a Firebase project.
      operationId: firebasestorage.projects.buckets.removeFirebase
      parameters:
        - description: >-
            Required. Resource name of the bucket, mirrors the ID of the
            underlying Google Cloud Storage bucket,
            `projects/{project_number}/buckets/{bucket_id}`.
          in: path
          name: bucket
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RemoveFirebaseRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - projects
  '/v1beta/{name}':
    get:
      description: Gets a single linked storage bucket.
      operationId: firebasestorage.projects.buckets.get
      parameters:
        - description: >-
            Required. Resource name of the bucket, mirrors the ID of the
            underlying Google Cloud Storage bucket,
            `projects/{project_number}/buckets/{bucket_id}`.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Bucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1beta/{parent}/buckets':
    get:
      description: Lists the linked storage buckets for a project.
      operationId: firebasestorage.projects.buckets.list
      parameters:
        - description: >-
            Required. Resource name of the parent Firebase project,
            `projects/{project_number}`.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            The maximum number of buckets to return. If not set, the server will
            use a reasonable default.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token, received from a previous `ListBuckets` call. Provide
            this to retrieve the subsequent page. When paginating, all other
            parameters provided to `ListBuckets` must match the call that
            provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBucketsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
          Oauth2c:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
      'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
      'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
swagger: '2.0'
tags:
  - name: projects
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

