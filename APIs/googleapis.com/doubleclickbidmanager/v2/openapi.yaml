basePath: /v2
definitions:
  ChannelGrouping:
    description: >-
      A channel grouping defines a set of rules that can be used to categorize
      events in a path report.
    properties:
      fallbackName:
        description: >-
          The name to apply to an event that does not match any of the rules in
          the channel grouping.
        type: string
      name:
        description: Channel Grouping name.
        type: string
      rules:
        description: >-
          Rules within Channel Grouping. There is a limit of 100 rules that can
          be set per channel grouping.
        items:
          $ref: '#/definitions/Rule'
        type: array
    type: object
  DataRange:
    description: Report data range.
    properties:
      customEndDate:
        $ref: '#/definitions/Date'
        description: >-
          The ending date for the data that is shown in the report. Note,
          `customEndDate` is required if `range` is `CUSTOM_DATES` and ignored
          otherwise.
      customStartDate:
        $ref: '#/definitions/Date'
        description: >-
          The starting data for the data that is shown in the report. Note,
          `customStartDate` is required if `range` is `CUSTOM_DATES` and ignored
          otherwise.
      range:
        description: Report data range used to generate the report.
        enum:
          - RANGE_UNSPECIFIED
          - CUSTOM_DATES
          - CURRENT_DAY
          - PREVIOUS_DAY
          - WEEK_TO_DATE
          - MONTH_TO_DATE
          - QUARTER_TO_DATE
          - YEAR_TO_DATE
          - PREVIOUS_WEEK
          - PREVIOUS_MONTH
          - PREVIOUS_QUARTER
          - PREVIOUS_YEAR
          - LAST_7_DAYS
          - LAST_30_DAYS
          - LAST_90_DAYS
          - LAST_365_DAYS
          - ALL_TIME
          - LAST_14_DAYS
          - LAST_60_DAYS
        type: string
    type: object
  Date:
    description: >-
      Represents a whole or partial calendar date, such as a birthday. The time
      of day and time zone are either specified elsewhere or are insignificant.
      The date is relative to the Gregorian Calendar. This can represent one of
      the following: * A full date, with non-zero year, month, and day values. *
      A month and day, with a zero year (for example, an anniversary). * A year
      on its own, with a zero month and a zero day. * A year and month, with a
      zero day (for example, a credit card expiration date). Related types: *
      google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
    properties:
      day:
        description: >-
          Day of a month. Must be from 1 to 31 and valid for the year and month,
          or 0 to specify a year by itself or a year and month where the day
          isn't significant.
        format: int32
        type: integer
      month:
        description: >-
          Month of a year. Must be from 1 to 12, or 0 to specify a year without
          a month and day.
        format: int32
        type: integer
      year:
        description: >-
          Year of the date. Must be from 1 to 9999, or 0 to specify a date
          without a year.
        format: int32
        type: integer
    type: object
  DisjunctiveMatchStatement:
    description: DisjunctiveMatchStatement that OR's all contained filters.
    properties:
      eventFilters:
        description: >-
          Filters. There is a limit of 100 filters that can be set per
          disjunctive match statement.
        items:
          $ref: '#/definitions/EventFilter'
        type: array
    type: object
  EventFilter:
    description: >-
      Defines the type of filter to be applied to the path, a DV360 event
      dimension filter.
    properties:
      dimensionFilter:
        $ref: '#/definitions/PathQueryOptionsFilter'
        description: Filter on a dimension.
    type: object
  FilterPair:
    description: Filter used to match traffic data in your report.
    properties:
      type:
        description: Filter type.
        type: string
      value:
        description: Filter value.
        type: string
    type: object
  ListQueriesResponse:
    description: Represents a list of queries.
    properties:
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page
          of queries. If this field is omitted, there are no subsequent pages.
        type: string
      queries:
        description: Retrieved queries.
        items:
          $ref: '#/definitions/Query'
        type: array
    type: object
  ListReportsResponse:
    description: Represents a list of reports.
    properties:
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page
          of reports. If this field is omitted, there are no subsequent pages.
        type: string
      reports:
        description: Retrieved reports.
        items:
          $ref: '#/definitions/Report'
        type: array
    type: object
  Options:
    description: Additional query options.
    properties:
      includeOnlyTargetedUserLists:
        description: >-
          Set to true and filter your report by `FILTER_INSERTION_ORDER` or
          `FILTER_LINE_ITEM` to include data for audience lists specifically
          targeted by those items.
        type: boolean
      pathQueryOptions:
        $ref: '#/definitions/PathQueryOptions'
        description: Options that contain Path Filters and Custom Channel Groupings.
    type: object
  Parameters:
    description: Parameters of a query or report.
    properties:
      filters:
        description: Filters used to match traffic data in your report.
        items:
          $ref: '#/definitions/FilterPair'
        type: array
      groupBys:
        description: Data is grouped by the filters listed in this field.
        items:
          type: string
        type: array
      metrics:
        description: Metrics to include as columns in your report.
        items:
          type: string
        type: array
      options:
        $ref: '#/definitions/Options'
        description: Additional query options.
      type:
        description: Report type.
        enum:
          - REPORT_TYPE_UNSPECIFIED
          - STANDARD
          - INVENTORY_AVAILABILITY
          - AUDIENCE_COMPOSITION
          - FLOODLIGHT
          - YOUTUBE
          - GRP
          - YOUTUBE_PROGRAMMATIC_GUARANTEED
          - REACH
          - UNIQUE_REACH_AUDIENCE
          - FULL_PATH
          - PATH_ATTRIBUTION
        type: string
    type: object
  PathFilter:
    description: >-
      Path filters specify which paths to include in a report. A path is the
      result of combining DV360 events based on User ID to create a workflow of
      users' actions. When a path filter is set, the resulting report will only
      include paths that match the specified event at the specified position.
      All other paths will be excluded.
    properties:
      eventFilters:
        description: Filter on an event to be applied to some part of the path.
        items:
          $ref: '#/definitions/EventFilter'
        type: array
      pathMatchPosition:
        description: >-
          Indicates the position of the path the filter should match to (first,
          last, or any event in path).
        enum:
          - PATH_MATCH_POSITION_UNSPECIFIED
          - ANY
          - FIRST
          - LAST
        type: string
    type: object
  PathQueryOptions:
    description: Path Query Options for Report Options.
    properties:
      channelGrouping:
        $ref: '#/definitions/ChannelGrouping'
        description: Custom Channel Groupings.
      pathFilters:
        description: >-
          Path Filters. There is a limit of 100 path filters that can be set per
          report.
        items:
          $ref: '#/definitions/PathFilter'
        type: array
    type: object
  PathQueryOptionsFilter:
    description: Dimension Filter on path events.
    properties:
      filter:
        description: Dimension the filter is applied to.
        type: string
      match:
        description: Indicates how the filter should be matched to the value.
        enum:
          - UNKNOWN
          - EXACT
          - PARTIAL
          - BEGINS_WITH
          - WILDCARD_EXPRESSION
        type: string
      values:
        description: Value to filter on.
        items:
          type: string
        type: array
    type: object
  Query:
    description: Represents a query.
    properties:
      metadata:
        $ref: '#/definitions/QueryMetadata'
        description: Query metadata.
      params:
        $ref: '#/definitions/Parameters'
        description: Query parameters.
      queryId:
        description: Output only. Query ID.
        format: int64
        readOnly: true
        type: string
      schedule:
        $ref: '#/definitions/QuerySchedule'
        description: Information on how often and when to run a query.
    type: object
  QueryMetadata:
    description: Query metadata.
    properties:
      dataRange:
        $ref: '#/definitions/DataRange'
        description: Range of report data.
      format:
        description: Format of the generated report.
        enum:
          - FORMAT_UNSPECIFIED
          - CSV
          - XLSX
        type: string
      sendNotification:
        description: >-
          Whether to send an email notification when a report is ready. Defaults
          to false.
        type: boolean
      shareEmailAddress:
        description: >-
          List of email addresses which are sent email notifications when the
          report is finished. Separate from `sendNotification`.
        items:
          type: string
        type: array
      title:
        description: Query title. It is used to name the reports generated from this query.
        type: string
    type: object
  QuerySchedule:
    description: Information on how frequently and when to run a query.
    properties:
      endDate:
        $ref: '#/definitions/Date'
        description: >-
          Date to periodically run the query until. Not applicable to `ONE_TIME`
          frequency.
      frequency:
        description: How often the query is run.
        enum:
          - FREQUENCY_UNSPECIFIED
          - ONE_TIME
          - DAILY
          - WEEKLY
          - SEMI_MONTHLY
          - MONTHLY
          - QUARTERLY
          - YEARLY
        type: string
      nextRunTimezoneCode:
        description: >-
          Canonical timezone code for report generation time. Defaults to
          `America/New_York`.
        type: string
      startDate:
        $ref: '#/definitions/Date'
        description: >-
          When to start running the query. Not applicable to `ONE_TIME`
          frequency.
    type: object
  Report:
    description: Represents a report.
    properties:
      key:
        $ref: '#/definitions/ReportKey'
        description: Key used to identify a report.
      metadata:
        $ref: '#/definitions/ReportMetadata'
        description: Report metadata.
      params:
        $ref: '#/definitions/Parameters'
        description: Report parameters.
    type: object
  ReportKey:
    description: Key used to identify a report.
    properties:
      queryId:
        description: Output only. Query ID.
        format: int64
        readOnly: true
        type: string
      reportId:
        description: Output only. Report ID.
        format: int64
        readOnly: true
        type: string
    type: object
  ReportMetadata:
    description: Report metadata.
    properties:
      googleCloudStoragePath:
        description: >-
          Output only. The path to the location in Google Cloud Storage where
          the report is stored.
        readOnly: true
        type: string
      reportDataEndDate:
        $ref: '#/definitions/Date'
        description: The ending time for the data that is shown in the report.
      reportDataStartDate:
        $ref: '#/definitions/Date'
        description: The starting time for the data that is shown in the report.
      status:
        $ref: '#/definitions/ReportStatus'
        description: Report status.
    type: object
  ReportStatus:
    description: Report status.
    properties:
      finishTime:
        description: >-
          Output only. The time when this report either completed successfully
          or failed.
        format: google-datetime
        readOnly: true
        type: string
      format:
        description: The file type of the report.
        enum:
          - FORMAT_UNSPECIFIED
          - CSV
          - XLSX
        type: string
      state:
        description: Output only. The state of the report.
        enum:
          - STATE_UNSPECIFIED
          - QUEUED
          - RUNNING
          - DONE
          - FAILED
        readOnly: true
        type: string
    type: object
  Rule:
    description: >-
      A Rule defines a name, and a boolean expression in [conjunctive normal
      form] (http://mathworld.wolfram.com/ConjunctiveNormalForm.html){.external}
      that can be applied to a path event to determine if that name should be
      applied.
    properties:
      disjunctiveMatchStatements:
        description: >-
          DisjunctiveMatchStatements within a Rule. DisjunctiveMatchStatement
          OR's all contained filters.
        items:
          $ref: '#/definitions/DisjunctiveMatchStatement'
        type: array
      name:
        description: Rule name.
        type: string
    type: object
  RunQueryRequest:
    description: Request to run a stored query to generate a report.
    properties:
      dataRange:
        $ref: '#/definitions/DataRange'
        description: >-
          Report data range used to generate the report. If unspecified, the
          original parent query's data range is used.
    type: object
externalDocs:
  url: 'https://developers.google.com/bid-manager/'
host: doubleclickbidmanager.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: >-
    DoubleClick Bid Manager API allows users to manage and create campaigns and
    reports.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: DoubleClick Bid Manager API
  version: v2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: 'https://doubleclickbidmanager.googleapis.com/$discovery/rest?version=v2'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: doubleclickbidmanager
paths:
  /queries:
    get:
      description: Retrieves stored queries.
      operationId: doubleclickbidmanager.queries.list
      parameters:
        - description: >-
            Name of a field used to order results. The default sorting order is
            ascending. To specify descending order for a field, append a " desc"
            suffix. For example "metadata.title desc". Sorting is only supported
            for the following fields: * queryId * metadata.title
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of results per page. Must be between `1` and `100`.
            Defaults to `100` if unspecified.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token, received from a previous list call. Provide this to
            retrieve the subsequent page of queries.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListQueriesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Creates a query.
      operationId: doubleclickbidmanager.queries.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Query'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Query'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
  '/queries/{queryId}':
    delete:
      description: Deletes a stored query as well as the associated stored reports.
      operationId: doubleclickbidmanager.queries.delete
      parameters:
        - description: Required. Query ID to delete.
          in: path
          name: queryId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
    get:
      description: Retrieves a stored query.
      operationId: doubleclickbidmanager.queries.get
      parameters:
        - description: Required. Query ID to retrieve.
          in: path
          name: queryId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Query'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/queries/{queryId}/reports':
    get:
      description: Lists reports.
      operationId: doubleclickbidmanager.queries.reports.list
      parameters:
        - description: Required. Query ID with which the reports are associated.
          in: path
          name: queryId
          required: true
          type: string
        - description: >-
            Name of a field used to order results. The default sorting order is
            ascending. To specify descending order for a field, append a " desc"
            suffix. For example "key.reportId desc". Sorting is only supported
            for the following fields: * key.reportId
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of results per page. Must be between `1` and `100`.
            Defaults to `100` if unspecified.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token, received from a previous list call. Provide this to
            retrieve the subsequent page of reports.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListReportsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/queries/{queryId}/reports/{reportId}':
    get:
      description: Retrieves a stored report.
      operationId: doubleclickbidmanager.queries.reports.get
      parameters:
        - description: Required. ID of the query the report is associated with.
          in: path
          name: queryId
          required: true
          type: string
        - description: Required. ID of the report to retrieve.
          in: path
          name: reportId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Report'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/queries/{queryId}:run':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Runs a stored query to generate a report.
      operationId: doubleclickbidmanager.queries.run
      parameters:
        - description: Required. Query ID to run.
          in: path
          name: queryId
          required: true
          type: string
        - description: >-
            Whether the query should be run synchronously. When true, this
            method will not return until the query has finished running. When
            false or not specified, this method will return immediately.
          in: query
          name: synchronous
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RunQueryRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Report'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
          Oauth2c:
            - 'https://www.googleapis.com/auth/doubleclickbidmanager'
      tags:
        - queries
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/doubleclickbidmanager': View and manage your reports in DoubleClick Bid Manager
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/doubleclickbidmanager': View and manage your reports in DoubleClick Bid Manager
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
source:
  url: {}
swagger: '2.0'
tags:
  - name: queries
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

