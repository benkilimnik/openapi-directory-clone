basePath: /
definitions:
  AvroFileFormat:
    description: AVRO file format configuration.
    properties: {}
    type: object
  BackfillAllStrategy:
    description: >-
      Backfill strategy to automatically backfill the Stream's objects. Specific
      objects can be excluded.
    properties:
      mysqlExcludedObjects:
        $ref: '#/definitions/MysqlRdbms'
        description: MySQL data source objects to avoid backfilling.
      oracleExcludedObjects:
        $ref: '#/definitions/OracleRdbms'
        description: Oracle data source objects to avoid backfilling.
    type: object
  BackfillJob:
    description: Represents a backfill job on a specific stream object.
    properties:
      errors:
        description: Output only. Errors which caused the backfill job to fail.
        items:
          $ref: '#/definitions/Error'
        readOnly: true
        type: array
      lastEndTime:
        description: Output only. Backfill job's end time.
        format: google-datetime
        readOnly: true
        type: string
      lastStartTime:
        description: Output only. Backfill job's start time.
        format: google-datetime
        readOnly: true
        type: string
      state:
        description: Backfill job state.
        enum:
          - STATE_UNSPECIFIED
          - NOT_STARTED
          - PENDING
          - ACTIVE
          - STOPPED
          - FAILED
          - COMPLETED
          - UNSUPPORTED
        type: string
      trigger:
        description: Backfill job's triggering reason.
        enum:
          - TRIGGER_UNSPECIFIED
          - AUTOMATIC
          - MANUAL
        type: string
    type: object
  BackfillNoneStrategy:
    description: Backfill strategy to disable automatic backfill for the Stream's objects.
    properties: {}
    type: object
  CancelOperationRequest:
    description: The request message for Operations.CancelOperation.
    properties: {}
    type: object
  ConnectionProfile:
    description: >-
      A set of reusable connection configurations to be used as a source or
      destination for a stream.
    properties:
      createTime:
        description: Output only. The create time of the resource.
        format: google-datetime
        readOnly: true
        type: string
      displayName:
        description: Required. Display name.
        type: string
      forwardSshConnectivity:
        $ref: '#/definitions/ForwardSshTunnelConnectivity'
        description: Forward SSH tunnel connectivity.
      gcsProfile:
        $ref: '#/definitions/GcsProfile'
        description: Cloud Storage ConnectionProfile configuration.
      labels:
        additionalProperties:
          type: string
        description: Labels.
        type: object
      mysqlProfile:
        $ref: '#/definitions/MysqlProfile'
        description: MySQL ConnectionProfile configuration.
      name:
        description: Output only. The resource's name.
        readOnly: true
        type: string
      oracleProfile:
        $ref: '#/definitions/OracleProfile'
        description: Oracle ConnectionProfile configuration.
      privateConnectivity:
        $ref: '#/definitions/PrivateConnectivity'
        description: Private connectivity.
      staticServiceIpConnectivity:
        $ref: '#/definitions/StaticServiceIpConnectivity'
        description: Static Service IP connectivity.
      updateTime:
        description: Output only. The update time of the resource.
        format: google-datetime
        readOnly: true
        type: string
    type: object
  DestinationConfig:
    description: The configuration of the stream destination.
    properties:
      destinationConnectionProfile:
        description: >-
          Required. Destination connection profile resource. Format:
          `projects/{project}/locations/{location}/connectionProfiles/{name}`
        type: string
      gcsDestinationConfig:
        $ref: '#/definitions/GcsDestinationConfig'
        description: A configuration for how data should be loaded to Cloud Storage.
    type: object
  DiscoverConnectionProfileRequest:
    description: Request message for 'discover' ConnectionProfile request.
    properties:
      connectionProfile:
        $ref: '#/definitions/ConnectionProfile'
        description: An ad-hoc connection profile configuration.
      connectionProfileName:
        description: A reference to an existing connection profile.
        type: string
      fullHierarchy:
        description: >-
          Whether to retrieve the full hierarchy of data objects (TRUE) or only
          the current level (FALSE).
        type: boolean
      hierarchyDepth:
        description: >-
          The number of hierarchy levels below the current level to be
          retrieved.
        format: int32
        type: integer
      mysqlRdbms:
        $ref: '#/definitions/MysqlRdbms'
        description: MySQL RDBMS to enrich with child data objects and metadata.
      oracleRdbms:
        $ref: '#/definitions/OracleRdbms'
        description: Oracle RDBMS to enrich with child data objects and metadata.
    type: object
  DiscoverConnectionProfileResponse:
    description: Response from a discover request.
    properties:
      mysqlRdbms:
        $ref: '#/definitions/MysqlRdbms'
        description: Enriched MySQL RDBMS object.
      oracleRdbms:
        $ref: '#/definitions/OracleRdbms'
        description: Enriched Oracle RDBMS object.
    type: object
  DropLargeObjects:
    description: Configuration to drop large object values.
    properties: {}
    type: object
  Empty:
    description: >-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance: service Foo { rpc
      Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    properties: {}
    type: object
  Error:
    description: Represent a user-facing Error.
    properties:
      details:
        additionalProperties:
          type: string
        description: Additional information about the error.
        type: object
      errorTime:
        description: The time when the error occurred.
        format: google-datetime
        type: string
      errorUuid:
        description: >-
          A unique identifier for this specific error, allowing it to be traced
          throughout the system in logs and API responses.
        type: string
      message:
        description: A message containing more information about the error that occurred.
        type: string
      reason:
        description: A title that explains the reason for the error.
        type: string
    type: object
  FetchStaticIpsResponse:
    description: Response message for a 'FetchStaticIps' response.
    properties:
      nextPageToken:
        description: >-
          A token that can be sent as `page_token` to retrieve the next page. If
          this field is omitted, there are no subsequent pages.
        type: string
      staticIps:
        description: list of static ips by account
        items:
          type: string
        type: array
    type: object
  ForwardSshTunnelConnectivity:
    description: Forward SSH Tunnel connectivity.
    properties:
      hostname:
        description: Required. Hostname for the SSH tunnel.
        type: string
      password:
        description: Input only. SSH password.
        type: string
      port:
        description: 'Port for the SSH tunnel, default value is 22.'
        format: int32
        type: integer
      privateKey:
        description: Input only. SSH private key.
        type: string
      username:
        description: Required. Username for the SSH tunnel.
        type: string
    type: object
  GcsDestinationConfig:
    description: Google Cloud Storage destination configuration
    properties:
      avroFileFormat:
        $ref: '#/definitions/AvroFileFormat'
        description: AVRO file format configuration.
      fileRotationInterval:
        description: >-
          The maximum duration for which new events are added before a file is
          closed and a new file is created.
        format: google-duration
        type: string
      fileRotationMb:
        description: The maximum file size to be saved in the bucket.
        format: int32
        type: integer
      jsonFileFormat:
        $ref: '#/definitions/JsonFileFormat'
        description: JSON file format configuration.
      path:
        description: Path inside the Cloud Storage bucket to write data to.
        type: string
    type: object
  GcsProfile:
    description: Cloud Storage bucket profile.
    properties:
      bucket:
        description: Required. The Cloud Storage bucket name.
        type: string
      rootPath:
        description: The root path inside the Cloud Storage bucket.
        type: string
    type: object
  JsonFileFormat:
    description: JSON file format configuration.
    properties:
      compression:
        description: Compression of the loaded JSON file.
        enum:
          - JSON_COMPRESSION_UNSPECIFIED
          - NO_COMPRESSION
          - GZIP
        type: string
      schemaFileFormat:
        description: The schema file format along JSON data files.
        enum:
          - SCHEMA_FILE_FORMAT_UNSPECIFIED
          - NO_SCHEMA_FILE
          - AVRO_SCHEMA_FILE
        type: string
    type: object
  ListConnectionProfilesResponse:
    description: Response message for listing connection profiles.
    properties:
      connectionProfiles:
        description: List of connection profiles.
        items:
          $ref: '#/definitions/ConnectionProfile'
        type: array
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
        type: string
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  ListPrivateConnectionsResponse:
    description: Response containing a list of private connection configurations.
    properties:
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
        type: string
      privateConnections:
        description: List of private connectivity configurations.
        items:
          $ref: '#/definitions/PrivateConnection'
        type: array
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListRoutesResponse:
    description: Route list response.
    properties:
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
        type: string
      routes:
        description: List of Routes.
        items:
          $ref: '#/definitions/Route'
        type: array
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListStreamObjectsResponse:
    description: Response containing the objects for a stream.
    properties:
      nextPageToken:
        description: 'A token, which can be sent as `page_token` to retrieve the next page.'
        type: string
      streamObjects:
        description: List of stream objects.
        items:
          $ref: '#/definitions/StreamObject'
        type: array
    type: object
  ListStreamsResponse:
    description: Response message for listing streams.
    properties:
      nextPageToken:
        description: >-
          A token, which can be sent as `page_token` to retrieve the next page.
          If this field is omitted, there are no subsequent pages.
        type: string
      streams:
        description: List of streams
        items:
          $ref: '#/definitions/Stream'
        type: array
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      displayName:
        description: >-
          The friendly name for this location, typically a nearby city name. For
          example, "Tokyo".
        type: string
      labels:
        additionalProperties:
          type: string
        description: >-
          Cross-service attributes for the location. For example
          {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'The canonical id for this location. For example: `"us-east1"`.'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: >-
          Service-specific metadata. For example the available capacity at the
          given location.
        type: object
      name:
        description: >-
          Resource name for the location, which may vary between
          implementations. For example:
          `"projects/example-project/locations/us-east1"`
        type: string
    type: object
  LookupStreamObjectRequest:
    description: >-
      Request for looking up a specific stream object by its source object
      identifier.
    properties:
      sourceObjectIdentifier:
        $ref: '#/definitions/SourceObjectIdentifier'
        description: >-
          Required. The source object identifier which maps to the stream
          object.
    type: object
  MysqlColumn:
    description: MySQL Column.
    properties:
      collation:
        description: Column collation.
        type: string
      column:
        description: Column name.
        type: string
      dataType:
        description: >-
          The MySQL data type. Full data types list can be found here:
          https://dev.mysql.com/doc/refman/8.0/en/data-types.html
        type: string
      length:
        description: Column length.
        format: int32
        type: integer
      nullable:
        description: Whether or not the column can accept a null value.
        type: boolean
      ordinalPosition:
        description: The ordinal position of the column in the table.
        format: int32
        type: integer
      primaryKey:
        description: Whether or not the column represents a primary key.
        type: boolean
    type: object
  MysqlDatabase:
    description: MySQL database.
    properties:
      database:
        description: Database name.
        type: string
      mysqlTables:
        description: Tables in the database.
        items:
          $ref: '#/definitions/MysqlTable'
        type: array
    type: object
  MysqlObjectIdentifier:
    description: Mysql data source object identifier.
    properties:
      database:
        description: Required. The database name.
        type: string
      table:
        description: Required. The table name.
        type: string
    type: object
  MysqlProfile:
    description: MySQL database profile.
    properties:
      hostname:
        description: Required. Hostname for the MySQL connection.
        type: string
      password:
        description: Required. Input only. Password for the MySQL connection.
        type: string
      port:
        description: 'Port for the MySQL connection, default value is 3306.'
        format: int32
        type: integer
      sslConfig:
        $ref: '#/definitions/MysqlSslConfig'
        description: SSL configuration for the MySQL connection.
      username:
        description: Required. Username for the MySQL connection.
        type: string
    type: object
  MysqlRdbms:
    description: MySQL database structure
    properties:
      mysqlDatabases:
        description: Mysql databases on the server
        items:
          $ref: '#/definitions/MysqlDatabase'
        type: array
    type: object
  MysqlSourceConfig:
    description: MySQL source configuration
    properties:
      excludeObjects:
        $ref: '#/definitions/MysqlRdbms'
        description: MySQL objects to exclude from the stream.
      includeObjects:
        $ref: '#/definitions/MysqlRdbms'
        description: MySQL objects to retrieve from the source.
    type: object
  MysqlSslConfig:
    description: MySQL SSL configuration information.
    properties:
      caCertificate:
        description: >-
          Input only. PEM-encoded certificate of the CA that signed the source
          database server's certificate.
        type: string
      caCertificateSet:
        description: Output only. Indicates whether the ca_certificate field is set.
        readOnly: true
        type: boolean
      clientCertificate:
        description: >-
          Input only. PEM-encoded certificate that will be used by the replica
          to authenticate against the source database server. If this field is
          used then the 'client_key' and the 'ca_certificate' fields are
          mandatory.
        type: string
      clientCertificateSet:
        description: Output only. Indicates whether the client_certificate field is set.
        readOnly: true
        type: boolean
      clientKey:
        description: >-
          Input only. PEM-encoded private key associated with the Client
          Certificate. If this field is used then the 'client_certificate' and
          the 'ca_certificate' fields are mandatory.
        type: string
      clientKeySet:
        description: Output only. Indicates whether the client_key field is set.
        readOnly: true
        type: boolean
    type: object
  MysqlTable:
    description: MySQL table.
    properties:
      mysqlColumns:
        description: >-
          MySQL columns in the database. When unspecified as part of
          include/exclude objects, includes/excludes everything.
        items:
          $ref: '#/definitions/MysqlColumn'
        type: array
      table:
        description: Table name.
        type: string
    type: object
  Operation:
    description: >-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: >-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or
          `response` is available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: >-
          Service-specific metadata associated with the operation. It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata. Any method that returns
          a long-running operation should document the metadata type, if any.
        type: object
      name:
        description: >-
          The server-assigned name, which is only unique within the same service
          that originally returns it. If you use the default HTTP mapping, the
          `name` should be a resource name ending with `operations/{unique_id}`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: >-
          The normal response of the operation in case of success. If the
          original method returns no data on success, such as `Delete`, the
          response is `google.protobuf.Empty`. If the original method is
          standard `Get`/`Create`/`Update`, the response should be the resource.
          For other methods, the response should have the type `XxxResponse`,
          where `Xxx` is the original method name. For example, if the original
          method name is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  OperationMetadata:
    description: Represents the metadata of the long-running operation.
    properties:
      apiVersion:
        description: Output only. API version used to start the operation.
        readOnly: true
        type: string
      createTime:
        description: Output only. The time the operation was created.
        format: google-datetime
        readOnly: true
        type: string
      endTime:
        description: Output only. The time the operation finished running.
        format: google-datetime
        readOnly: true
        type: string
      requestedCancellation:
        description: >-
          Output only. Identifies whether the user has requested cancellation of
          the operation. Operations that have successfully been cancelled have
          Operation.error value with a google.rpc.Status.code of 1,
          corresponding to `Code.CANCELLED`.
        readOnly: true
        type: boolean
      statusMessage:
        description: 'Output only. Human-readable status of the operation, if any.'
        readOnly: true
        type: string
      target:
        description: >-
          Output only. Server-defined resource path for the target of the
          operation.
        readOnly: true
        type: string
      validationResult:
        $ref: '#/definitions/ValidationResult'
        description: Output only. Results of executed validations if there are any.
        readOnly: true
      verb:
        description: Output only. Name of the verb executed by the operation.
        readOnly: true
        type: string
    type: object
  OracleColumn:
    description: Oracle Column.
    properties:
      column:
        description: Column name.
        type: string
      dataType:
        description: The Oracle data type.
        type: string
      encoding:
        description: Column encoding.
        type: string
      length:
        description: Column length.
        format: int32
        type: integer
      nullable:
        description: Whether or not the column can accept a null value.
        type: boolean
      ordinalPosition:
        description: The ordinal position of the column in the table.
        format: int32
        type: integer
      precision:
        description: Column precision.
        format: int32
        type: integer
      primaryKey:
        description: Whether or not the column represents a primary key.
        type: boolean
      scale:
        description: Column scale.
        format: int32
        type: integer
    type: object
  OracleObjectIdentifier:
    description: Oracle data source object identifier.
    properties:
      schema:
        description: Required. The schema name.
        type: string
      table:
        description: Required. The table name.
        type: string
    type: object
  OracleProfile:
    description: Oracle database profile.
    properties:
      connectionAttributes:
        additionalProperties:
          type: string
        description: Connection string attributes
        type: object
      databaseService:
        description: Required. Database for the Oracle connection.
        type: string
      hostname:
        description: Required. Hostname for the Oracle connection.
        type: string
      password:
        description: Required. Password for the Oracle connection.
        type: string
      port:
        description: 'Port for the Oracle connection, default value is 1521.'
        format: int32
        type: integer
      username:
        description: Required. Username for the Oracle connection.
        type: string
    type: object
  OracleRdbms:
    description: Oracle database structure.
    properties:
      oracleSchemas:
        description: Oracle schemas/databases in the database server.
        items:
          $ref: '#/definitions/OracleSchema'
        type: array
    type: object
  OracleSchema:
    description: Oracle schema.
    properties:
      oracleTables:
        description: Tables in the schema.
        items:
          $ref: '#/definitions/OracleTable'
        type: array
      schema:
        description: Schema name.
        type: string
    type: object
  OracleSourceConfig:
    description: Oracle data source configuration
    properties:
      dropLargeObjects:
        $ref: '#/definitions/DropLargeObjects'
        description: Drop large object values.
      excludeObjects:
        $ref: '#/definitions/OracleRdbms'
        description: Oracle objects to exclude from the stream.
      includeObjects:
        $ref: '#/definitions/OracleRdbms'
        description: Oracle objects to include in the stream.
    type: object
  OracleTable:
    description: Oracle table.
    properties:
      oracleColumns:
        description: >-
          Oracle columns in the schema. When unspecified as part of
          include/exclude objects, includes/excludes everything.
        items:
          $ref: '#/definitions/OracleColumn'
        type: array
      table:
        description: Table name.
        type: string
    type: object
  PrivateConnection:
    description: >-
      The PrivateConnection resource is used to establish private connectivity
      between Datastream and a customer's network.
    properties:
      createTime:
        description: Output only. The create time of the resource.
        format: google-datetime
        readOnly: true
        type: string
      displayName:
        description: Required. Display name.
        type: string
      error:
        $ref: '#/definitions/Error'
        description: >-
          Output only. In case of error, the details of the error in a
          user-friendly format.
        readOnly: true
      labels:
        additionalProperties:
          type: string
        description: Labels.
        type: object
      name:
        description: Output only. The resource's name.
        readOnly: true
        type: string
      state:
        description: Output only. The state of the Private Connection.
        enum:
          - STATE_UNSPECIFIED
          - CREATING
          - CREATED
          - FAILED
          - DELETING
          - FAILED_TO_DELETE
        readOnly: true
        type: string
      updateTime:
        description: Output only. The update time of the resource.
        format: google-datetime
        readOnly: true
        type: string
      vpcPeeringConfig:
        $ref: '#/definitions/VpcPeeringConfig'
        description: VPC Peering Config.
    type: object
  PrivateConnectivity:
    description: Private Connectivity
    properties:
      privateConnection:
        description: >-
          Required. A reference to a private connection resource. Format:
          `projects/{project}/locations/{location}/privateConnections/{name}`
        type: string
    type: object
  Route:
    description: >-
      The route resource is the child of the private connection resource, used
      for defining a route for a private connection.
    properties:
      createTime:
        description: Output only. The create time of the resource.
        format: google-datetime
        readOnly: true
        type: string
      destinationAddress:
        description: Required. Destination address for connection
        type: string
      destinationPort:
        description: Destination port for connection
        format: int32
        type: integer
      displayName:
        description: Required. Display name.
        type: string
      labels:
        additionalProperties:
          type: string
        description: Labels.
        type: object
      name:
        description: Output only. The resource's name.
        readOnly: true
        type: string
      updateTime:
        description: Output only. The update time of the resource.
        format: google-datetime
        readOnly: true
        type: string
    type: object
  SourceConfig:
    description: The configuration of the stream source.
    properties:
      mysqlSourceConfig:
        $ref: '#/definitions/MysqlSourceConfig'
        description: MySQL data source configuration.
      oracleSourceConfig:
        $ref: '#/definitions/OracleSourceConfig'
        description: Oracle data source configuration.
      sourceConnectionProfile:
        description: >-
          Required. Source connection profile resoource. Format:
          `projects/{project}/locations/{location}/connectionProfiles/{name}`
        type: string
    type: object
  SourceObjectIdentifier:
    description: Represents an identifier of an object in the data source.
    properties:
      mysqlIdentifier:
        $ref: '#/definitions/MysqlObjectIdentifier'
        description: Mysql data source object identifier.
      oracleIdentifier:
        $ref: '#/definitions/OracleObjectIdentifier'
        description: Oracle data source object identifier.
    type: object
  StartBackfillJobRequest:
    description: >-
      Request for manually initiating a backfill job for a specific stream
      object.
    properties: {}
    type: object
  StartBackfillJobResponse:
    description: >-
      Response for manually initiating a backfill job for a specific stream
      object.
    properties:
      object:
        $ref: '#/definitions/StreamObject'
        description: The stream object resource a backfill job was started for.
    type: object
  StaticServiceIpConnectivity:
    description: Static IP address connectivity.
    properties: {}
    type: object
  Status:
    description: >-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It
      is used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details. You
      can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: >-
          A list of messages that carry the error details. There is a common set
          of message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: >-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  StopBackfillJobRequest:
    description: >-
      Request for manually stopping a running backfill job for a specific stream
      object.
    properties: {}
    type: object
  StopBackfillJobResponse:
    description: Response for manually stop a backfill job for a specific stream object.
    properties:
      object:
        $ref: '#/definitions/StreamObject'
        description: The stream object resource the backfill job was stopped for.
    type: object
  Stream:
    description: A resource representing streaming data from a source to a destination.
    properties:
      backfillAll:
        $ref: '#/definitions/BackfillAllStrategy'
        description: >-
          Automatically backfill objects included in the stream source
          configuration. Specific objects can be excluded.
      backfillNone:
        $ref: '#/definitions/BackfillNoneStrategy'
        description: Do not automatically backfill any objects.
      createTime:
        description: Output only. The creation time of the stream.
        format: google-datetime
        readOnly: true
        type: string
      customerManagedEncryptionKey:
        description: >-
          Immutable. A reference to a KMS encryption key. If provided, it will
          be used to encrypt the data. If left blank, data will be encrypted
          using an internal Stream-specific encryption key provisioned through
          KMS.
        type: string
      destinationConfig:
        $ref: '#/definitions/DestinationConfig'
        description: Required. Destination connection profile configuration.
      displayName:
        description: Required. Display name.
        type: string
      errors:
        description: Output only. Errors on the Stream.
        items:
          $ref: '#/definitions/Error'
        readOnly: true
        type: array
      labels:
        additionalProperties:
          type: string
        description: Labels.
        type: object
      name:
        description: Output only. The stream's name.
        readOnly: true
        type: string
      sourceConfig:
        $ref: '#/definitions/SourceConfig'
        description: Required. Source connection profile configuration.
      state:
        description: The state of the stream.
        enum:
          - STATE_UNSPECIFIED
          - NOT_STARTED
          - RUNNING
          - PAUSED
          - MAINTENANCE
          - FAILED
          - FAILED_PERMANENTLY
          - STARTING
          - DRAINING
        type: string
      updateTime:
        description: Output only. The last update time of the stream.
        format: google-datetime
        readOnly: true
        type: string
    type: object
  StreamObject:
    description: A specific stream object (e.g a specific DB table).
    properties:
      backfillJob:
        $ref: '#/definitions/BackfillJob'
        description: The latest backfill job that was initiated for the stream object.
      createTime:
        description: Output only. The creation time of the object.
        format: google-datetime
        readOnly: true
        type: string
      displayName:
        description: Required. Display name.
        type: string
      errors:
        description: Output only. Active errors on the object.
        items:
          $ref: '#/definitions/Error'
        readOnly: true
        type: array
      name:
        description: Output only. The object resource's name.
        readOnly: true
        type: string
      sourceObject:
        $ref: '#/definitions/SourceObjectIdentifier'
        description: The object identifier in the data source.
      updateTime:
        description: Output only. The last update time of the object.
        format: google-datetime
        readOnly: true
        type: string
    type: object
  Validation:
    description: A validation to perform on a stream.
    properties:
      code:
        description: A custom code identifying this validation.
        type: string
      description:
        description: A short description of the validation.
        type: string
      message:
        description: Messages reflecting the validation results.
        items:
          $ref: '#/definitions/ValidationMessage'
        type: array
      state:
        description: Validation execution status.
        enum:
          - STATE_UNSPECIFIED
          - NOT_EXECUTED
          - FAILED
          - PASSED
        type: string
    type: object
  ValidationMessage:
    description: Represent user-facing validation result message.
    properties:
      code:
        description: A custom code identifying this specific message.
        type: string
      level:
        description: Message severity level (warning or error).
        enum:
          - LEVEL_UNSPECIFIED
          - WARNING
          - ERROR
        type: string
      message:
        description: The result of the validation.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Additional metadata related to the result.
        type: object
    type: object
  ValidationResult:
    description: Contains the current validation results.
    properties:
      validations:
        description: >-
          A list of validations (includes both executed as well as not executed
          validations).
        items:
          $ref: '#/definitions/Validation'
        type: array
    type: object
  VpcPeeringConfig:
    description: >-
      The VPC Peering configuration is used to create VPC peering between
      Datastream and the consumer's VPC.
    properties:
      subnet:
        description: >-
          Required. A free subnet for peering. (CIDR of /29) TODO(b/172995841)
          add validators.
        type: string
      vpc:
        description: >-
          Required. Fully qualified name of the VPC that Datastream will peer
          to. Format: `projects/{project}/global/{networks}/{name}`
        type: string
    type: object
externalDocs:
  url: 'https://cloud.google.com/datastream/'
host: datastream.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: ''
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Datastream API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: 'https://datastream.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: datastream
paths:
  '/v1/{name}':
    delete:
      description: Use this method to delete a stream.
      operationId: datastream.projects.locations.streams.delete
      parameters:
        - description: Required. The name of the stream resource to delete.
          in: path
          name: name
          required: true
          type: string
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes after the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Use this method to get details about a stream object.
      operationId: datastream.projects.locations.streams.objects.get
      parameters:
        - description: Required. The name of the stream object resource to get.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/StreamObject'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    patch:
      consumes:
        - application/json
      description: Use this method to update the configuration of a stream.
      operationId: datastream.projects.locations.streams.patch
      parameters:
        - description: Output only. The stream's name.
          in: path
          name: name
          required: true
          type: string
        - description: Optional. Update the stream without validating it.
          in: query
          name: force
          type: boolean
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes since the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: >-
            Optional. Field mask is used to specify the fields to be overwritten
            in the stream resource by the update. The fields specified in the
            update_mask are relative to the resource, not the full request. A
            field will be overwritten if it is in the mask. If the user does not
            provide a mask then all fields will be overwritten.
          in: query
          name: updateMask
          type: string
        - description: >-
            Optional. Only validate the stream with the changes, without
            actually updating it. The default is false.
          in: query
          name: validateOnly
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Stream'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: datastream.projects.locations.list
      parameters:
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
        - description: >-
            A filter to narrow down results to a preferred subset. The filtering
            language accepts strings like `"displayName=tokyo"`, and is
            documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          type: string
        - description: >-
            The maximum number of results to return. If not set, the service
            selects a default.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token received from the `next_page_token` field in the
            response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{name}/operations':
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE:
        the `name` binding allows API services to override the binding to use
        different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration. For
        backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding is
        the parent resource, without the operations collection id.
      operationId: datastream.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{name}:cancel':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: datastream.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelOperationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}:fetchStaticIps':
    get:
      description: >-
        The FetchStaticIps API call exposes the static IP addresses used by
        Datastream.
      operationId: datastream.projects.locations.fetchStaticIps
      parameters:
        - description: >-
            Required. The resource name for the location for which static IPs
            should be returned. Must be in the format `projects/*/locations/*`.
          in: path
          name: name
          required: true
          type: string
        - description: 'Maximum number of Ips to return, will likely not be specified.'
          in: query
          name: pageSize
          type: integer
        - description: >-
            A page token, received from a previous `ListStaticIps` call. will
            likely not be specified.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/FetchStaticIpsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{object}:startBackfillJob':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Use this method to start a backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.startBackfillJob
      parameters:
        - description: >-
            Required. The name of the stream object resource to start a backfill
            job for.
          in: path
          name: object
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StartBackfillJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/StartBackfillJobResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{object}:stopBackfillJob':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Use this method to stop a backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.stopBackfillJob
      parameters:
        - description: >-
            Required. The name of the stream object resource to stop the
            backfill job for.
          in: path
          name: object
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StopBackfillJobRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/StopBackfillJobResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/connectionProfiles':
    get:
      description: >-
        Use this method to list connection profiles created in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.list
      parameters:
        - description: >-
            Required. The parent that owns the collection of connection
            profiles.
          in: path
          name: parent
          required: true
          type: string
        - description: Filter request.
          in: query
          name: filter
          type: string
        - description: Order by fields for the result.
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of connection profiles to return. If unspecified, at
            most 50 connection profiles will be returned. The maximum value is
            1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          type: integer
        - description: >-
            Page token received from a previous `ListConnectionProfiles` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListConnectionProfiles` must match the
            call that provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListConnectionProfilesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Use this method to create a connection profile in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.create
      parameters:
        - description: Required. The parent that owns the collection of ConnectionProfiles.
          in: path
          name: parent
          required: true
          type: string
        - description: Required. The connection profile identifier.
          in: query
          name: connectionProfileId
          type: string
        - description: Optional. Create the connection profile without validating it.
          in: query
          name: force
          type: boolean
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes since the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: >-
            Optional. Only validate the connection profile, but don't create any
            resources. The default is false.
          in: query
          name: validateOnly
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectionProfile'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/connectionProfiles:discover':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Use this method to discover a connection profile. The discover API call
        exposes the data objects and metadata belonging to the profile.
        Typically, a request returns children data objects of a parent data
        object that's optionally supplied in the request.
      operationId: datastream.projects.locations.connectionProfiles.discover
      parameters:
        - description: >-
            Required. The parent resource of the connection profile type. Must
            be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DiscoverConnectionProfileRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiscoverConnectionProfileResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/objects':
    get:
      description: Use this method to list the objects of a specific stream.
      operationId: datastream.projects.locations.streams.objects.list
      parameters:
        - description: Required. The parent stream that owns the collection of objects.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Maximum number of objects to return. Default is 50. The maximum
            value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          type: integer
        - description: >-
            Page token received from a previous `ListStreamObjectsRequest` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListStreamObjectsRequest` must match
            the call that provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListStreamObjectsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{parent}/objects:lookup':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Use this method to look up a stream object by its source object
        identifier.
      operationId: datastream.projects.locations.streams.objects.lookup
      parameters:
        - description: Required. The parent stream that owns the collection of objects.
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LookupStreamObjectRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/StreamObject'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/privateConnections':
    get:
      description: >-
        Use this method to list private connectivity configurations in a project
        and location.
      operationId: datastream.projects.locations.privateConnections.list
      parameters:
        - description: >-
            Required. The parent that owns the collection of private
            connectivity configurations.
          in: path
          name: parent
          required: true
          type: string
        - description: Filter request.
          in: query
          name: filter
          type: string
        - description: Order by fields for the result.
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of private connectivity configurations to return. If
            unspecified, at most 50 private connectivity configurations that
            will be returned. The maximum value is 1000; values above 1000 will
            be coerced to 1000.
          in: query
          name: pageSize
          type: integer
        - description: >-
            Page token received from a previous `ListPrivateConnections` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListPrivateConnections` must match the
            call that provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListPrivateConnectionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Use this method to create a private connectivity configuration.
      operationId: datastream.projects.locations.privateConnections.create
      parameters:
        - description: Required. The parent that owns the collection of PrivateConnections.
          in: path
          name: parent
          required: true
          type: string
        - description: Required. The private connectivity identifier.
          in: query
          name: privateConnectionId
          type: string
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes since the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PrivateConnection'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/routes':
    get:
      description: >-
        Use this method to list routes created for a private connectivity
        configuration in a project and location.
      operationId: datastream.projects.locations.privateConnections.routes.list
      parameters:
        - description: Required. The parent that owns the collection of Routess.
          in: path
          name: parent
          required: true
          type: string
        - description: Filter request.
          in: query
          name: filter
          type: string
        - description: Order by fields for the result.
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of Routes to return. The service may return fewer
            than this value. If unspecified, at most 50 Routes will be returned.
            The maximum value is 1000; values above 1000 will be coerced to
            1000.
          in: query
          name: pageSize
          type: integer
        - description: >-
            Page token received from a previous `ListRoutes` call. Provide this
            to retrieve the subsequent page. When paginating, all other
            parameters provided to `ListRoutes` must match the call that
            provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListRoutesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Use this method to create a route for a private connectivity
        configuration in a project and location.
      operationId: datastream.projects.locations.privateConnections.routes.create
      parameters:
        - description: Required. The parent that owns the collection of Routes.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes since the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Required. The Route identifier.
          in: query
          name: routeId
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Route'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/streams':
    get:
      description: Use this method to list streams in a project and location.
      operationId: datastream.projects.locations.streams.list
      parameters:
        - description: Required. The parent that owns the collection of streams.
          in: path
          name: parent
          required: true
          type: string
        - description: Filter request.
          in: query
          name: filter
          type: string
        - description: Order by fields for the result.
          in: query
          name: orderBy
          type: string
        - description: >-
            Maximum number of streams to return. If unspecified, at most 50
            streams will be returned. The maximum value is 1000; values above
            1000 will be coerced to 1000.
          in: query
          name: pageSize
          type: integer
        - description: >-
            Page token received from a previous `ListStreams` call. Provide this
            to retrieve the subsequent page. When paginating, all other
            parameters provided to `ListStreams` must match the call that
            provided the page token.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListStreamsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Use this method to create a stream.
      operationId: datastream.projects.locations.streams.create
      parameters:
        - description: Required. The parent that owns the collection of streams.
          in: path
          name: parent
          required: true
          type: string
        - description: Optional. Create the stream without validating it.
          in: query
          name: force
          type: boolean
        - description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server will guarantee that for at least 60 minutes since the first
            request. For example, consider a situation where you make an initial
            request and the request times out. If you make the request again
            with the same request ID, the server can check if original operation
            with the same request ID was received, and if so, will ignore the
            second request. This prevents clients from accidentally creating
            duplicate commitments. The request ID must be a valid UUID with the
            exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Required. The stream identifier.
          in: query
          name: streamId
          type: string
        - description: >-
            Optional. Only validate the stream, but don't create any resources.
            The default is false.
          in: query
          name: validateOnly
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Stream'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
swagger: '2.0'
tags:
  - name: projects
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

