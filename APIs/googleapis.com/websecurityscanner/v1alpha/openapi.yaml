basePath: /
definitions:
  Authentication:
    description: Scan authentication configuration.
    properties:
      customAccount:
        $ref: '#/definitions/CustomAccount'
        description: Authentication using a custom account.
      googleAccount:
        $ref: '#/definitions/GoogleAccount'
        description: Authentication using a Google account.
    type: object
  CrawledUrl:
    description: >-
      A CrawledUrl resource represents a URL that was crawled during a ScanRun.
      Web Security Scanner Service crawls the web applications, following all
      links within the scope of sites, to find the URLs to test against.
    properties:
      body:
        description: Output only. The body of the request that was used to visit the URL.
        type: string
      httpMethod:
        description: >-
          Output only. The http method of the request that was used to visit the
          URL, in uppercase.
        type: string
      url:
        description: Output only. The URL that was crawled.
        type: string
    type: object
  CustomAccount:
    description: Describes authentication configuration that uses a custom account.
    properties:
      loginUrl:
        description: Required. The login form URL of the website.
        type: string
      password:
        description: >-
          Required. Input only. The password of the custom account. The
          credential is stored encrypted and not returned in any response nor
          included in audit logs.
        type: string
      username:
        description: Required. The user name of the custom account.
        type: string
    type: object
  Empty:
    description: >-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance: service Foo { rpc
      Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    properties: {}
    type: object
  Finding:
    description: >-
      A Finding resource represents a vulnerability instance identified during a
      ScanRun.
    properties:
      body:
        description: The body of the request that triggered the vulnerability.
        type: string
      description:
        description: The description of the vulnerability.
        type: string
      finalUrl:
        description: The URL where the browser lands when the vulnerability is detected.
        type: string
      findingType:
        description: The type of the Finding.
        enum:
          - FINDING_TYPE_UNSPECIFIED
          - MIXED_CONTENT
          - OUTDATED_LIBRARY
          - ROSETTA_FLASH
          - XSS_CALLBACK
          - XSS_ERROR
          - CLEAR_TEXT_PASSWORD
          - INVALID_CONTENT_TYPE
          - XSS_ANGULAR_CALLBACK
          - INVALID_HEADER
          - MISSPELLED_SECURITY_HEADER_NAME
          - MISMATCHING_SECURITY_HEADER_VALUES
        type: string
      frameUrl:
        description: >-
          If the vulnerability was originated from nested IFrame, the immediate
          parent IFrame is reported.
        type: string
      fuzzedUrl:
        description: >-
          The URL produced by the server-side fuzzer and used in the request
          that triggered the vulnerability.
        type: string
      httpMethod:
        description: >-
          The http method of the request that triggered the vulnerability, in
          uppercase.
        type: string
      name:
        description: >-
          The resource name of the Finding. The name follows the format of
          'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'.
          The finding IDs are generated by the system.
        type: string
      outdatedLibrary:
        $ref: '#/definitions/OutdatedLibrary'
        description: An addon containing information about outdated libraries.
      reproductionUrl:
        description: >-
          The URL containing human-readable payload that user can leverage to
          reproduce the vulnerability.
        type: string
      trackingId:
        description: >-
          The tracking ID uniquely identifies a vulnerability instance across
          multiple ScanRuns.
        type: string
      violatingResource:
        $ref: '#/definitions/ViolatingResource'
        description: >-
          An addon containing detailed information regarding any resource
          causing the vulnerability such as JavaScript sources, image, audio
          files, etc.
      vulnerableHeaders:
        $ref: '#/definitions/VulnerableHeaders'
        description: >-
          An addon containing information about vulnerable or missing HTTP
          headers.
      vulnerableParameters:
        $ref: '#/definitions/VulnerableParameters'
        description: >-
          An addon containing information about request parameters which were
          found to be vulnerable.
      xss:
        $ref: '#/definitions/Xss'
        description: 'An addon containing information reported for an XSS, if any.'
    type: object
  FindingTypeStats:
    description: >-
      A FindingTypeStats resource represents stats regarding a specific
      FindingType of Findings under a given ScanRun.
    properties:
      findingCount:
        description: The count of findings belonging to this finding type.
        format: int32
        type: integer
      findingType:
        description: The finding type associated with the stats.
        enum:
          - FINDING_TYPE_UNSPECIFIED
          - MIXED_CONTENT
          - OUTDATED_LIBRARY
          - ROSETTA_FLASH
          - XSS_CALLBACK
          - XSS_ERROR
          - CLEAR_TEXT_PASSWORD
          - INVALID_CONTENT_TYPE
          - XSS_ANGULAR_CALLBACK
          - INVALID_HEADER
          - MISSPELLED_SECURITY_HEADER_NAME
          - MISMATCHING_SECURITY_HEADER_VALUES
        type: string
    type: object
  GoogleAccount:
    description: Describes authentication configuration that uses a Google account.
    properties:
      password:
        description: >-
          Required. Input only. The password of the Google account. The
          credential is stored encrypted and not returned in any response nor
          included in audit logs.
        type: string
      username:
        description: Required. The user name of the Google account.
        type: string
    type: object
  Header:
    description: Describes a HTTP Header.
    properties:
      name:
        description: Header name.
        type: string
      value:
        description: Header value.
        type: string
    type: object
  ListCrawledUrlsResponse:
    description: Response for the `ListCrawledUrls` method.
    properties:
      crawledUrls:
        description: The list of CrawledUrls returned.
        items:
          $ref: '#/definitions/CrawledUrl'
        type: array
      nextPageToken:
        description: >-
          Token to retrieve the next page of results, or empty if there are no
          more results in the list.
        type: string
    type: object
  ListFindingTypeStatsResponse:
    description: Response for the `ListFindingTypeStats` method.
    properties:
      findingTypeStats:
        description: The list of FindingTypeStats returned.
        items:
          $ref: '#/definitions/FindingTypeStats'
        type: array
    type: object
  ListFindingsResponse:
    description: Response for the `ListFindings` method.
    properties:
      findings:
        description: The list of Findings returned.
        items:
          $ref: '#/definitions/Finding'
        type: array
      nextPageToken:
        description: >-
          Token to retrieve the next page of results, or empty if there are no
          more results in the list.
        type: string
    type: object
  ListScanConfigsResponse:
    description: Response for the `ListScanConfigs` method.
    properties:
      nextPageToken:
        description: >-
          Token to retrieve the next page of results, or empty if there are no
          more results in the list.
        type: string
      scanConfigs:
        description: The list of ScanConfigs returned.
        items:
          $ref: '#/definitions/ScanConfig'
        type: array
    type: object
  ListScanRunsResponse:
    description: Response for the `ListScanRuns` method.
    properties:
      nextPageToken:
        description: >-
          Token to retrieve the next page of results, or empty if there are no
          more results in the list.
        type: string
      scanRuns:
        description: The list of ScanRuns returned.
        items:
          $ref: '#/definitions/ScanRun'
        type: array
    type: object
  OutdatedLibrary:
    description: Information reported for an outdated library.
    properties:
      learnMoreUrls:
        description: >-
          URLs to learn more information about the vulnerabilities in the
          library.
        items:
          type: string
        type: array
      libraryName:
        description: The name of the outdated library.
        type: string
      version:
        description: The version number.
        type: string
    type: object
  ScanConfig:
    description: >-
      A ScanConfig resource contains the configurations to launch a scan. next
      id: 12
    properties:
      authentication:
        $ref: '#/definitions/Authentication'
        description: >-
          The authentication configuration. If specified, service will use the
          authentication configuration during scanning.
      blacklistPatterns:
        description: >-
          The excluded URL patterns as described in
          https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
        items:
          type: string
        type: array
      displayName:
        description: Required. The user provided display name of the ScanConfig.
        type: string
      latestRun:
        $ref: '#/definitions/ScanRun'
        description: Latest ScanRun if available.
      maxQps:
        description: >-
          The maximum QPS during scanning. A valid value ranges from 5 to 20
          inclusively. If the field is unspecified or its value is set 0, server
          will default to 15. Other values outside of [5, 20] range will be
          rejected with INVALID_ARGUMENT error.
        format: int32
        type: integer
      name:
        description: >-
          The resource name of the ScanConfig. The name follows the format of
          'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs
          are generated by the system.
        type: string
      schedule:
        $ref: '#/definitions/Schedule'
        description: The schedule of the ScanConfig.
      startingUrls:
        description: Required. The starting URLs from which the scanner finds site pages.
        items:
          type: string
        type: array
      targetPlatforms:
        description: >-
          Set of Google Cloud platforms targeted by the scan. If empty,
          APP_ENGINE will be used as a default.
        items:
          enum:
            - TARGET_PLATFORM_UNSPECIFIED
            - APP_ENGINE
            - COMPUTE
            - CLOUD_RUN
            - CLOUD_FUNCTIONS
          type: string
        type: array
      userAgent:
        description: The user agent used during scanning.
        enum:
          - USER_AGENT_UNSPECIFIED
          - CHROME_LINUX
          - CHROME_ANDROID
          - SAFARI_IPHONE
        type: string
    type: object
  ScanRun:
    description: >-
      A ScanRun is a output-only resource representing an actual run of the
      scan.
    properties:
      endTime:
        description: >-
          The time at which the ScanRun reached termination state - that the
          ScanRun is either finished or stopped by user.
        format: google-datetime
        type: string
      executionState:
        description: The execution state of the ScanRun.
        enum:
          - EXECUTION_STATE_UNSPECIFIED
          - QUEUED
          - SCANNING
          - FINISHED
        type: string
      hasVulnerabilities:
        description: Whether the scan run has found any vulnerabilities.
        type: boolean
      name:
        description: >-
          The resource name of the ScanRun. The name follows the format of
          'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
          The ScanRun IDs are generated by the system.
        type: string
      progressPercent:
        description: >-
          The percentage of total completion ranging from 0 to 100. If the scan
          is in queue, the value is 0. If the scan is running, the value ranges
          from 0 to 100. If the scan is finished, the value is 100.
        format: int32
        type: integer
      resultState:
        description: >-
          The result state of the ScanRun. This field is only available after
          the execution state reaches "FINISHED".
        enum:
          - RESULT_STATE_UNSPECIFIED
          - SUCCESS
          - ERROR
          - KILLED
        type: string
      startTime:
        description: The time at which the ScanRun started.
        format: google-datetime
        type: string
      urlsCrawledCount:
        description: >-
          The number of URLs crawled during this ScanRun. If the scan is in
          progress, the value represents the number of URLs crawled up to now.
        format: int64
        type: string
      urlsTestedCount:
        description: >-
          The number of URLs tested during this ScanRun. If the scan is in
          progress, the value represents the number of URLs tested up to now.
          The number of URLs tested is usually larger than the number URLS
          crawled because typically a crawled URL is tested with multiple test
          payloads.
        format: int64
        type: string
    type: object
  Schedule:
    description: Scan schedule configuration.
    properties:
      intervalDurationDays:
        description: Required. The duration of time between executions in days.
        format: int32
        type: integer
      scheduleTime:
        description: >-
          A timestamp indicates when the next run will be scheduled. The value
          is refreshed by the server after each run. If unspecified, it will
          default to current server time, which means the scan will be scheduled
          to start immediately.
        format: google-datetime
        type: string
    type: object
  StartScanRunRequest:
    description: Request for the `StartScanRun` method.
    properties: {}
    type: object
  StopScanRunRequest:
    description: Request for the `StopScanRun` method.
    properties: {}
    type: object
  ViolatingResource:
    description: >-
      Information regarding any resource causing the vulnerability such as
      JavaScript sources, image, audio files, etc.
    properties:
      contentType:
        description: The MIME type of this resource.
        type: string
      resourceUrl:
        description: URL of this violating resource.
        type: string
    type: object
  VulnerableHeaders:
    description: Information about vulnerable or missing HTTP Headers.
    properties:
      headers:
        description: List of vulnerable headers.
        items:
          $ref: '#/definitions/Header'
        type: array
      missingHeaders:
        description: List of missing headers.
        items:
          $ref: '#/definitions/Header'
        type: array
    type: object
  VulnerableParameters:
    description: Information about vulnerable request parameters.
    properties:
      parameterNames:
        description: The vulnerable parameter names.
        items:
          type: string
        type: array
    type: object
  Xss:
    description: Information reported for an XSS.
    properties:
      errorMessage:
        description: An error message generated by a javascript breakage.
        type: string
      stackTraces:
        description: Stack traces leading to the point where the XSS occurred.
        items:
          type: string
        type: array
    type: object
externalDocs:
  url: >-
    https://cloud.google.com/security-command-center/docs/concepts-web-security-scanner-overview/
host: websecurityscanner.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: Scans your Compute and App Engine apps for common web vulnerabilities.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Web Security Scanner API
  version: v1alpha
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: >-
        https://websecurityscanner.googleapis.com/$discovery/rest?version=v1alpha
      version: v1
  x-providerName: googleapis.com
  x-serviceName: websecurityscanner
paths:
  '/v1alpha/{name}':
    delete:
      description: Deletes an existing ScanConfig and its child resources.
      operationId: websecurityscanner.projects.scanConfigs.delete
      parameters:
        - description: >-
            Required. The resource name of the ScanConfig to be deleted. The
            name follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}'.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets a Finding.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.get
      parameters:
        - description: >-
            Required. The resource name of the Finding to be returned. The name
            follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}/findings/{findingId}'.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Finding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    patch:
      consumes:
        - application/json
      description: >-
        Updates a ScanConfig. This method support partial update of a
        ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.patch
      parameters:
        - description: >-
            The resource name of the ScanConfig. The name follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig
            IDs are generated by the system.
          in: path
          name: name
          required: true
          type: string
        - description: >-
            Required. The update mask applies to the resource. For the
            `FieldMask` definition, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScanConfig'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ScanConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha/{name}:start':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Start a ScanRun according to the given ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.start
      parameters:
        - description: >-
            Required. The resource name of the ScanConfig to be used. The name
            follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}'.
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StartScanRunRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ScanRun'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha/{name}:stop':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Stops a ScanRun. The stopped ScanRun is returned.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.stop
      parameters:
        - description: >-
            Required. The resource name of the ScanRun to be stopped. The name
            follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StopScanRunRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ScanRun'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha/{parent}/crawledUrls':
    get:
      description: List CrawledUrls under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.crawledUrls.list
      parameters:
        - description: >-
            Required. The parent resource name, which should be a scan run
            resource name in the format
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            The maximum number of CrawledUrls to return, can be limited by
            server. If not specified or not positive, the implementation will
            select a reasonable value.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A token identifying a page of results to be returned. This should be
            a `next_page_token` value returned from a previous List request. If
            unspecified, the first page of results is returned.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListCrawledUrlsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1alpha/{parent}/findingTypeStats':
    get:
      description: List all FindingTypeStats under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findingTypeStats.list
      parameters:
        - description: >-
            Required. The parent resource name, which should be a scan run
            resource name in the format
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
          in: path
          name: parent
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListFindingTypeStatsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1alpha/{parent}/findings':
    get:
      description: List Findings under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.list
      parameters:
        - description: >-
            Required. The parent resource name, which should be a scan run
            resource name in the format
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Required. The filter expression. The expression must be in the
            format: . Supported field: 'finding_type'. Supported operator: '='.
          in: query
          name: filter
          type: string
        - description: >-
            The maximum number of Findings to return, can be limited by server.
            If not specified or not positive, the implementation will select a
            reasonable value.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A token identifying a page of results to be returned. This should be
            a `next_page_token` value returned from a previous List request. If
            unspecified, the first page of results is returned.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListFindingsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1alpha/{parent}/scanConfigs':
    get:
      description: Lists ScanConfigs under a given project.
      operationId: websecurityscanner.projects.scanConfigs.list
      parameters:
        - description: >-
            Required. The parent resource name, which should be a project
            resource name in the format 'projects/{projectId}'.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            The maximum number of ScanConfigs to return, can be limited by
            server. If not specified or not positive, the implementation will
            select a reasonable value.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A token identifying a page of results to be returned. This should be
            a `next_page_token` value returned from a previous List request. If
            unspecified, the first page of results is returned.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListScanConfigsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Creates a new ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.create
      parameters:
        - description: >-
            Required. The parent resource name where the scan is created, which
            should be a project resource name in the format
            'projects/{projectId}'.
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScanConfig'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ScanConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha/{parent}/scanRuns':
    get:
      description: >-
        Lists ScanRuns under a given ScanConfig, in descending order of ScanRun
        stop time.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.list
      parameters:
        - description: >-
            Required. The parent resource name, which should be a scan resource
            name in the format
            'projects/{projectId}/scanConfigs/{scanConfigId}'.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            The maximum number of ScanRuns to return, can be limited by server.
            If not specified or not positive, the implementation will select a
            reasonable value.
          in: query
          name: pageSize
          type: integer
        - description: >-
            A token identifying a page of results to be returned. This should be
            a `next_page_token` value returned from a previous List request. If
            unspecified, the first page of results is returned.
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListScanRunsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': >-
        See, edit, configure, and delete your Google Cloud data and see the
        email address for your Google Account.
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
swagger: '2.0'
tags:
  - name: projects
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

