basePath: /
definitions:
  Answer:
    description: Represents an answer to a question
    properties:
      author:
        $ref: '#/definitions/Author'
        description: >-
          Output only. The author of the answer. Will only be set during list
          operations.
        readOnly: true
      createTime:
        description: >-
          Output only. The timestamp for when the answer was written. Only
          retrieved during ListResponse fetching.
        format: google-datetime
        readOnly: true
        type: string
      name:
        description: >-
          Output only. The unique name for the answer
          locations/*/questions/*/answers/*
        readOnly: true
        type: string
      text:
        description: >-
          Required. The text of the answer. It should contain at least one
          non-whitespace character. The maximum length is 4096 characters.
        type: string
      updateTime:
        description: Output only. The timestamp for when the answer was last modified.
        format: google-datetime
        readOnly: true
        type: string
      upvoteCount:
        description: Output only. The number of upvotes for the answer.
        format: int32
        readOnly: true
        type: integer
    type: object
  Author:
    description: Represents the author of a question or answer
    properties:
      displayName:
        description: The display name of the user
        type: string
      profilePhotoUri:
        description: The profile photo URI of the user.
        type: string
      type:
        description: The type of user the author is.
        enum:
          - AUTHOR_TYPE_UNSPECIFIED
          - REGULAR_USER
          - LOCAL_GUIDE
          - MERCHANT
        type: string
    type: object
  Empty:
    description: >-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance: service Foo { rpc
      Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    properties: {}
    type: object
  ListAnswersResponse:
    description: Response message for QuestionsAndAnswers.ListAnswers
    properties:
      answers:
        description: The requested answers.
        items:
          $ref: '#/definitions/Answer'
        type: array
      nextPageToken:
        description: >-
          If the number of answers exceeds the requested max page size, this
          field is populated with a token to fetch the next page of answers on a
          subsequent call. If there are no more answers, this field is not
          present in the response.
        type: string
      totalSize:
        description: The total number of answers posted for this question across all pages.
        format: int32
        type: integer
    type: object
  ListQuestionsResponse:
    description: Response message for QuestionsAndAnswers.ListQuestions
    properties:
      nextPageToken:
        description: >-
          If the number of questions exceeds the requested max page size, this
          field is populated with a token to fetch the next page of questions on
          a subsequent call. If there are no more questions, this field is not
          present in the response.
        type: string
      questions:
        description: 'The requested questions,'
        items:
          $ref: '#/definitions/Question'
        type: array
      totalSize:
        description: >-
          The total number of questions posted for this location across all
          pages.
        format: int32
        type: integer
    type: object
  Question:
    description: Represents a single question and some of its answers.
    properties:
      author:
        $ref: '#/definitions/Author'
        description: Output only. The author of the question.
        readOnly: true
      createTime:
        description: Output only. The timestamp for when the question was written.
        format: google-datetime
        readOnly: true
        type: string
      name:
        description: >-
          Immutable. The unique name for the question. locations/*/questions/*
          This field will be ignored if set during question creation.
        type: string
      text:
        description: >-
          Required. The text of the question. It should contain at least three
          words and the total length should be greater than or equal to 10
          characters. The maximum length is 4096 characters.
        type: string
      topAnswers:
        description: >-
          Output only. A list of answers to the question, sorted by upvotes.
          This may not be a complete list of answers depending on the request
          parameters (answers_per_question)
        items:
          $ref: '#/definitions/Answer'
        readOnly: true
        type: array
      totalAnswerCount:
        description: Output only. The total number of answers posted for this question.
        format: int32
        readOnly: true
        type: integer
      updateTime:
        description: Output only. The timestamp for when the question was last modified.
        format: google-datetime
        readOnly: true
        type: string
      upvoteCount:
        description: Output only. The number of upvotes for the question.
        format: int32
        readOnly: true
        type: integer
    type: object
  UpsertAnswerRequest:
    description: Request message for QuestionsAndAnswers.UpsertAnswer
    properties:
      answer:
        $ref: '#/definitions/Answer'
        description: Required. The new answer.
    type: object
externalDocs:
  url: 'https://developers.google.com/my-business/'
host: mybusinessqanda.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: >-
    The My Business Q&A API allows questions and answers to be posted for
    specific listings.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: My Business Q&A API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: 'https://mybusinessqanda.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-providerName: googleapis.com
  x-serviceName: mybusinessqanda
paths:
  '/v1/{name}':
    delete:
      description: Deletes a specific question written by the current user.
      operationId: mybusinessqanda.locations.questions.delete
      parameters:
        - description: Required. The name of the question to delete.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - locations
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    patch:
      consumes:
        - application/json
      description: Updates a specific question written by the current user.
      operationId: mybusinessqanda.locations.questions.patch
      parameters:
        - description: >-
            Immutable. The unique name for the question. locations/*/questions/*
            This field will be ignored if set during question creation.
          in: path
          name: name
          required: true
          type: string
        - description: >-
            Required. The specific fields to update. Only question text can be
            updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Question'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Question'
      tags:
        - locations
  '/v1/{name}/answers:delete':
    delete:
      description: Deletes the answer written by the current user to a question.
      operationId: mybusinessqanda.locations.questions.answers.delete
      parameters:
        - description: Required. The name of the question to delete an answer for.
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - locations
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{parent}':
    get:
      description: >-
        Returns the paginated list of questions and some of its answers for a
        specified location. This operation is only valid if the specified
        location is verified.
      operationId: mybusinessqanda.locations.questions.list
      parameters:
        - description: Required. The name of the location to fetch questions for.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Optional. How many answers to fetch per question. The default and
            maximum `answers_per_question` values are 10.
          in: query
          name: answersPerQuestion
          type: integer
        - description: >-
            Optional. A filter constraining the questions to return. The only
            filter currently supported is "ignore_answered=true"
          in: query
          name: filter
          type: string
        - description: >-
            Optional. The order to return the questions. Valid options include
            'update_time desc' and 'upvote_count desc', which will return the
            questions sorted descendingly by the requested field. The default
            sort order is 'update_time desc'.
          in: query
          name: orderBy
          type: string
        - description: >-
            Optional. How many questions to fetch per page. The default and
            maximum `page_size` values are 10.
          in: query
          name: pageSize
          type: integer
        - description: 'Optional. If specified, the next page of questions is retrieved.'
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListQuestionsResponse'
      tags:
        - locations
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Adds a question for the specified location.
      operationId: mybusinessqanda.locations.questions.create
      parameters:
        - description: Required. The name of the location to write a question for.
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Question'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Question'
      tags:
        - locations
  '/v1/{parent}/answers':
    get:
      description: Returns the paginated list of answers for a specified question.
      operationId: mybusinessqanda.locations.questions.answers.list
      parameters:
        - description: Required. The name of the question to fetch answers for.
          in: path
          name: parent
          required: true
          type: string
        - description: >-
            Optional. The order to return the answers. Valid options include
            'update_time desc' and 'upvote_count desc', which will return the
            answers sorted descendingly by the requested field. The default sort
            order is 'update_time desc'.
          in: query
          name: orderBy
          type: string
        - description: >-
            Optional. How many answers to fetch per page. The default and
            maximum `page_size` values are 10.
          in: query
          name: pageSize
          type: integer
        - description: 'Optional. If specified, the next page of answers is retrieved.'
          in: query
          name: pageToken
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListAnswersResponse'
      tags:
        - locations
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
  '/v1/{parent}/answers:upsert':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: >-
        Creates an answer or updates the existing answer written by the user for
        the specified question. A user can only create one answer per question.
      operationId: mybusinessqanda.locations.questions.answers.upsert
      parameters:
        - description: Required. The name of the question to write an answer for.
          in: path
          name: parent
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpsertAnswerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Answer'
      tags:
        - locations
schemes:
  - https
swagger: '2.0'
tags:
  - name: locations
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string
x-hasEquivalentPaths: true

