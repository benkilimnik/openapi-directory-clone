basePath: /
definitions:
  Challenge:
    description: Result message for VerifiedAccess.CreateChallenge.
    properties:
      alternativeChallenge:
        description: >-
          Challenge generated with the old signing key, the bytes representation
          of SignedData (this will only be present during key rotation).
        format: byte
        type: string
      challenge:
        description: 'Generated challenge, the bytes representation of SignedData.'
        format: byte
        type: string
    type: object
  Empty:
    description: >-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance: service Foo { rpc
      Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
      representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  VerifyChallengeResponseRequest:
    description: Signed ChallengeResponse.
    properties:
      challengeResponse:
        description: >-
          Required. The generated response to the challenge, the bytes
          representation of SignedData.
        format: byte
        type: string
      expectedIdentity:
        description: >-
          Optional. Service can optionally provide identity information about
          the device or user associated with the key. For an EMK, this value is
          the enrolled domain. For an EUK, this value is the user's email
          address. If present, this value will be checked against contents of
          the response, and verification will fail if there is no match.
        type: string
    type: object
  VerifyChallengeResponseResult:
    description: Result message for VerifiedAccess.VerifyChallengeResponse.
    properties:
      devicePermanentId:
        description: >-
          Device permanent id is returned in this field (for the machine
          response only).
        type: string
      deviceSignal:
        description: Device signal in json string representation.
        type: string
      keyTrustLevel:
        description: Device attested key trust level.
        enum:
          - KEY_TRUST_LEVEL_UNSPECIFIED
          - CHROME_OS_VERIFIED_MODE
          - CHROME_OS_DEVELOPER_MODE
          - CHROME_BROWSER_TPM_KEY
          - CHROME_BROWSER_OS_KEY
        type: string
      signedPublicKeyAndChallenge:
        description: >-
          Certificate Signing Request (in the SPKAC format, base64 encoded) is
          returned in this field. This field will be set only if device has
          included CSR in its challenge response. (the option to include CSR is
          now available for both user and machine responses)
        type: string
    type: object
externalDocs:
  url: 'https://developers.google.com/chrome/verified-access'
host: verifiedaccess.googleapis.com
info:
  contact:
    name: Google
    url: 'https://google.com'
    x-twitter: youtube
  description: >-
    API for Verified Access chrome extension to provide credential verification
    for chrome devices connecting to an enterprise network
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Chrome Verified Access API
  version: v2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: >-
      https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: 'https://verifiedaccess.googleapis.com/$discovery/rest?version=v2'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: verifiedaccess
paths:
  '/v2/challenge:generate':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Generates a new challenge.
      operationId: verifiedaccess.challenge.generate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Empty'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Challenge'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/verifiedaccess'
          Oauth2c:
            - 'https://www.googleapis.com/auth/verifiedaccess'
      tags:
        - challenge
  '/v2/challenge:verify':
    parameters:
      - description: V1 error format.
        enum:
          - '1'
          - '2'
        in: query
        name: $.xgafv
        type: string
      - description: OAuth access token.
        in: query
        name: access_token
        type: string
      - description: Data format for response.
        enum:
          - json
          - media
          - proto
        in: query
        name: alt
        type: string
      - description: JSONP
        in: query
        name: callback
        type: string
      - description: Selector specifying which fields to include in a partial response.
        in: query
        name: fields
        type: string
      - description: >-
          API key. Your API key identifies your project and provides you with
          API access, quota, and reports. Required unless you provide an OAuth
          2.0 token.
        in: query
        name: key
        type: string
      - description: OAuth 2.0 token for the current user.
        in: query
        name: oauth_token
        type: string
      - description: Returns response with indentations and line breaks.
        in: query
        name: prettyPrint
        type: boolean
      - description: >-
          Available to use for quota purposes for server-side applications. Can
          be any arbitrary string assigned to a user, but should not exceed 40
          characters.
        in: query
        name: quotaUser
        type: string
      - description: 'Upload protocol for media (e.g. "raw", "multipart").'
        in: query
        name: upload_protocol
        type: string
      - description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
        in: query
        name: uploadType
        type: string
    post:
      consumes:
        - application/json
      description: Verifies the challenge response.
      operationId: verifiedaccess.challenge.verify
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VerifyChallengeResponseRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VerifyChallengeResponseResult'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/verifiedaccess'
          Oauth2c:
            - 'https://www.googleapis.com/auth/verifiedaccess'
      tags:
        - challenge
schemes:
  - https
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/verifiedaccess': Verify your enterprise credentials
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authorizationCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/verifiedaccess': Verify your enterprise credentials
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
source:
  url: {}
swagger: '2.0'
tags:
  - name: challenge
x-components:
  parameters:
    _.xgafv:
      description: V1 error format.
      enum:
        - '1'
        - '2'
      in: query
      name: $.xgafv
      type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      type: string
    alt:
      description: Data format for response.
      enum:
        - json
        - media
        - proto
      in: query
      name: alt
      type: string
    callback:
      description: JSONP
      in: query
      name: callback
      type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      type: string

