basePath: /api/catalog-inventory/v1.0
definitions:
  AppliedInventoriesParametersServicePlan:
    additionalProperties: false
    properties:
      service_parameters:
        description: >-
          The provider specific parameters needed to compute list of used
          service inventories
        type: object
    type: object
  CheckAvailabilityTask:
    $ref: '#/definitions/Task'
  CollectionLinks:
    properties:
      first:
        type: string
      last:
        type: string
      next:
        type: string
      prev:
        type: string
    type: object
  CollectionMetadata:
    properties:
      count:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
    type: object
  ErrorNotFound:
    properties:
      errors:
        items:
          properties:
            detail:
              example: Record not found
              type: string
            status:
              example: '404'
              type: string
          type: object
        type: array
    type: object
  FullRefreshPersisterTask:
    $ref: '#/definitions/Task'
  FullRefreshUploadTask:
    $ref: '#/definitions/Task'
  GraphQLRequest:
    properties:
      operationName:
        default: ''
        description: >-
          If the Query contains several named operations, the operationName
          controls which one should be executed
        type: string
      query:
        default: '{}'
        description: The GraphQL query
        type: string
      variables:
        description: Optional Query variables
        type: object
        x-nullable: true
    required:
      - query
    type: object
  GraphQLResponse:
    properties:
      data:
        description: Results from the GraphQL query
        type: object
      errors:
        description: Errors resulting from the GraphQL query
        items:
          type: object
        type: array
    type: object
  ID:
    description: ID of the resource
    pattern: ^\d+$
    readOnly: true
    type: string
  IncrementalRefreshUploadTask:
    $ref: '#/definitions/Task'
  LaunchJobTask:
    $ref: '#/definitions/Task'
  OrderParametersServiceOffering:
    additionalProperties: false
    properties:
      provider_control_parameters:
        description: >-
          The provider specific parameters needed to provision this service.
          This might include namespaces, special keys
        type: object
      service_parameters:
        description: JSON object with provisioning parameters
        type: object
      service_plan_id:
        $ref: '#/definitions/ID'
    type: object
  OrderParametersServicePlan:
    additionalProperties: false
    properties:
      provider_control_parameters:
        description: >-
          The provider specific parameters needed to provision this service.
          This might include namespaces, special keys
        type: object
      service_parameters:
        description: JSON object with provisioning parameters
        type: object
    type: object
  ServiceCredential:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      description:
        readOnly: true
        type: string
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        readOnly: true
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      service_credential_type_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        readOnly: true
        type: string
      source_updated_at:
        format: date-time
        readOnly: true
        type: string
      type_name:
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceCredentialType:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      description:
        readOnly: true
        type: string
      id:
        $ref: '#/definitions/ID'
      kind:
        readOnly: true
        type: string
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        readOnly: true
        type: string
      namespace:
        readOnly: true
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_deleted_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceCredentialTypesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceCredentialType'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceCredentialsCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceCredential'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceInstance:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      external_url:
        readOnly: true
        type: string
      extra:
        description: Extra information about this object in JSON format
        readOnly: true
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        example: Sample ServiceInstance
        readOnly: true
        title: Name
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      root_service_instance_id:
        $ref: '#/definitions/ID'
      service_inventory_id:
        $ref: '#/definitions/ID'
      service_offering_id:
        $ref: '#/definitions/ID'
      service_plan_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_deleted_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        format: uuid
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceInstanceNode:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      extra:
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      root_service_instance_id:
        $ref: '#/definitions/ID'
      service_instance_id:
        $ref: '#/definitions/ID'
      service_inventory_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        type: string
      source_updated_at:
        format: date-time
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceInstanceNodesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceInstanceNode'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceInstancesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceInstance'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceInventoriesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceInventory'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceInventory:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      description:
        readOnly: true
        type: string
      extra:
        readOnly: true
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        readOnly: true
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        readOnly: true
        type: string
      source_updated_at:
        format: date-time
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceOffering:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      description:
        example: This is a short description
        readOnly: true
        title: Description
        type: string
      display_name:
        example: MariaDB (Ephemeral)
        readOnly: true
        title: Display Name
        type: string
      distributor:
        example: 'Red Hat, Inc.'
        readOnly: true
        title: Distributor
        type: string
      documentation_url:
        example: >-
          https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md
        readOnly: true
        title: Documentation URL
        type: string
      extra:
        description: Extra information about this object in JSON format
        readOnly: true
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      long_description:
        example: >-
          This template provides a standalone MariaDB server with a database
          created...
        readOnly: true
        title: Long Description
        type: string
      name:
        example: Sample Service Offering
        readOnly: true
        title: Name
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      service_inventory_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_deleted_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        description: The native reference used by the Source to refer to this object
        example: object-12345_67890
        readOnly: true
        title: Source reference
        type: string
      support_url:
        example: 'https://access.redhat.com'
        readOnly: true
        title: Support URL
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceOfferingIcon:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      data:
        description: Raw icon data
        readOnly: true
        title: Icon Data
        type: string
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        example: icon-mariadb
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceOfferingIconsCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceOfferingIcon'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceOfferingNode:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      extra:
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      root_service_offering_id:
        $ref: '#/definitions/ID'
      service_inventory_id:
        $ref: '#/definitions/ID'
      service_offering_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        type: string
      source_updated_at:
        format: date-time
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServiceOfferingNodesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceOfferingNode'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServiceOfferingsCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServiceOffering'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  ServicePlan:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      create_json_schema:
        readOnly: true
        type: object
      created_at:
        format: date-time
        readOnly: true
        type: string
      description:
        example: This is a sample description for a provider
        readOnly: true
        title: Description
        type: string
      extra:
        description: Extra information about this object in JSON format
        readOnly: true
        type: object
      id:
        $ref: '#/definitions/ID'
      last_seen_at:
        format: date-time
        readOnly: true
        type: string
      name:
        example: Sample Provider
        readOnly: true
        title: Name
        type: string
      refresh_state_part_id:
        $ref: '#/definitions/ID'
      resource_version:
        readOnly: true
        type: string
      service_offering_id:
        $ref: '#/definitions/ID'
      source_created_at:
        format: date-time
        readOnly: true
        type: string
      source_deleted_at:
        format: date-time
        readOnly: true
        type: string
      source_id:
        $ref: '#/definitions/ID'
      source_ref:
        format: uuid
        readOnly: true
        type: string
      update_json_schema:
        readOnly: true
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  ServicePlansCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/ServicePlan'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  Source:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        title: Archived
        type: string
      availability_message:
        readOnly: true
        title: Availability Message
        type: string
      availability_status:
        example: The availability status of source
        title: Availability Status
        type: string
      cloud_connector_id:
        example: The GUID of the RedHat connect client being used
        readOnly: true
        title: RedHat Connect Client Id
        type: string
      created_at:
        format: date-time
        readOnly: true
        title: Created
        type: string
      enabled:
        default: false
        readOnly: true
        title: Enabled
        type: boolean
      id:
        $ref: '#/definitions/ID'
      info:
        example: The version of Tower being used
        readOnly: true
        title: Info
        type: object
      last_available_at:
        format: date-time
        readOnly: true
        title: Last available
        type: string
      last_checked_at:
        format: date-time
        readOnly: true
        title: Last checked
        type: string
      last_refresh_message:
        readOnly: true
        title: Last refresh message
        type: string
      last_successful_refresh_at:
        format: date-time
        readOnly: true
        title: Last successful refresh
        type: string
      name:
        example: The Source Name
        readOnly: true
        title: Name
        type: string
      previous_sha:
        readOnly: true
        title: SHA of previous uploaded files
        type: string
      previous_size:
        readOnly: true
        title: Size of previous uploaded files
        type: integer
      refresh_finished_at:
        format: date-time
        readOnly: true
        title: Refresh finished
        type: string
      refresh_started_at:
        format: date-time
        readOnly: true
        title: Refresh started
        type: string
      refresh_state:
        title: Refresh state
        type: string
      refresh_task_id:
        format: uuid
        readOnly: true
        title: Refresh task
        type: string
      uid:
        readOnly: true
        title: Unique ID of the inventory source installation
        type: string
      updated_at:
        format: date-time
        readOnly: true
        title: Updated
        type: string
    type: object
  SourcesCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/Source'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  Tag:
    additionalProperties: false
    properties:
      tag:
        example: /namespace/architecture=x86_64
        type: string
    type: object
  TagsCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/Tag'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  Task:
    additionalProperties: false
    properties:
      archived_at:
        format: date-time
        readOnly: true
        type: string
      child_task_id:
        format: uuid
        readOnly: true
        type: string
      completed_at:
        format: date-time
        type: string
      controller_message_id:
        format: uuid
        readOnly: true
        type: string
      created_at:
        format: date-time
        readOnly: true
        type: string
      id:
        $ref: '#/definitions/UUID'
      input:
        example: Task payload input content
        readOnly: true
        title: Content
        type: object
      message:
        example: received message starting inventory collection
        title: Message
        type: string
      name:
        example: Order Service Plan
        title: Name
        type: string
      output:
        example: Result of Task Execution
        title: Result
        type: object
      owner:
        example: jdoe
        readOnly: true
        title: Owner
        type: string
      source_id:
        $ref: '#/definitions/ID'
      state:
        enum:
          - pending
          - queued
          - running
          - timedout
          - completed
        example: running
        title: State
        type: string
      status:
        enum:
          - ok
          - warn
          - unchanged
          - error
        example: error
        title: Status
        type: string
      target_source_ref:
        type: string
      target_type:
        type: string
      type:
        example: CloudConnectorTask
        title: Type
        type: string
      updated_at:
        format: date-time
        readOnly: true
        type: string
    type: object
  TasksCollection:
    properties:
      data:
        items:
          $ref: '#/definitions/Task'
        type: array
      links:
        $ref: '#/definitions/CollectionLinks'
      meta:
        $ref: '#/definitions/CollectionMetadata'
    type: object
  Tenant:
    properties:
      description:
        example: Description of the Tenant
        readOnly: true
        type: string
      external_tenant:
        example: External tenant identifier
        readOnly: true
        type: string
      id:
        $ref: '#/definitions/ID'
      name:
        example: Sample Tenant
        readOnly: true
        type: string
    type: object
  TowingTask:
    $ref: '#/definitions/Task'
  UUID:
    description: UUID of task
    format: uuid
    readOnly: true
    type: string
host: cloud.redhat.com
info:
  contact:
    email: support@redhat.com
  description: Catalog Inventory
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  title: Catalog Inventory
  version: 1.0.0
  x-apisguru-categories:
    - developer_tools
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/RedHatInsights/catalog_inventory-api/master/public/doc/openapi-3-v1.0.json
      version: '3.0'
  x-providerName: redhat.com
  x-serviceName: catalog_inventory
paths:
  /graphql:
    post:
      consumes:
        - application/json
      description: Performs a GraphQL Query
      operationId: postGraphQL
      parameters:
        - description: GraphQL Query Request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GraphQLRequest'
      produces:
        - application/json
      responses:
        '200':
          description: GraphQL Query Response
          schema:
            $ref: '#/definitions/GraphQLResponse'
      summary: Perform a GraphQL Query
  /openapi.json:
    get:
      operationId: getDocumentation
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: The API document for this version of the API
          schema:
            type: object
      summary: Return this API document in JSON format
  /service_credential_types:
    get:
      description: Returns an array of ServiceCredentialType objects
      operationId: listServiceCredentialTypes
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceCredentialTypes collection
          schema:
            $ref: '#/definitions/ServiceCredentialTypesCollection'
      summary: List ServiceCredentialTypes
      tags:
        - ServiceCredentialType
  '/service_credential_types/{id}':
    get:
      description: Returns a ServiceCredentialType object
      operationId: showServiceCredentialType
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceCredentialType info
          schema:
            $ref: '#/definitions/ServiceCredentialType'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceCredentialType
      tags:
        - ServiceCredentialType
  /service_credentials:
    get:
      description: Returns an array of ServiceCredential objects
      operationId: listServiceCredentials
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceCredentials collection
          schema:
            $ref: '#/definitions/ServiceCredentialsCollection'
      summary: List ServiceCredentials
      tags:
        - ServiceCredential
  '/service_credentials/{id}':
    get:
      description: Returns a ServiceCredential object
      operationId: showServiceCredential
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceCredential info
          schema:
            $ref: '#/definitions/ServiceCredential'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceCredential
      tags:
        - ServiceCredential
  /service_instances:
    get:
      description: Returns an array of ServiceInstance objects
      operationId: listServiceInstances
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInstances collection
          schema:
            $ref: '#/definitions/ServiceInstancesCollection'
      summary: List ServiceInstances
      tags:
        - ServiceInstance
  '/service_instances/{id}':
    get:
      description: Returns a ServiceInstance object
      operationId: showServiceInstance
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInstance info
          schema:
            $ref: '#/definitions/ServiceInstance'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceInstance
      tags:
        - ServiceInstance
  /service_inventories:
    get:
      description: Returns an array of ServiceInventory objects
      operationId: listServiceInventories
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInventories collection
          schema:
            $ref: '#/definitions/ServiceInventoriesCollection'
      summary: List ServiceInventories
      tags:
        - ServiceInventory
  '/service_inventories/{id}':
    get:
      description: Returns a ServiceInventory object
      operationId: showServiceInventory
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInventory info
          schema:
            $ref: '#/definitions/ServiceInventory'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceInventory
      tags:
        - ServiceInventory
  '/service_inventories/{id}/tag':
    post:
      consumes:
        - application/json
      description: Tags a ServiceInventory object
      operationId: tagServiceInventory
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
        - description: Tag attributes to add
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
      produces:
        - application/json
      responses:
        '201':
          description: ServiceInventory tagged successful
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
        '304':
          description: Not modified
      summary: Tag a ServiceInventory
      tags:
        - ServiceInventory
  '/service_inventories/{id}/tags':
    get:
      description: Returns an array of Tag objects
      operationId: listServiceInventoryTags
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Tags collection
          schema:
            $ref: '#/definitions/TagsCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List Tags for ServiceInventory
      tags:
        - ServiceInventory
  '/service_inventories/{id}/untag':
    post:
      consumes:
        - application/json
      description: Untags a ServiceInventory object
      operationId: untagServiceInventory
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
        - description: Tag attributes to removed
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
      responses:
        '204':
          description: ServiceInventory untagged successfully
      summary: Untag a ServiceInventory
      tags:
        - ServiceInventory
  /service_offering_nodes:
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: listServiceOfferingNodes
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferingNodes collection
          schema:
            $ref: '#/definitions/ServiceOfferingNodesCollection'
      summary: List ServiceOfferingNodes
      tags:
        - ServiceOfferingNode
  '/service_offering_nodes/{id}':
    get:
      description: Returns a ServiceOfferingNode object
      operationId: showServiceOfferingNode
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferingNode info
          schema:
            $ref: '#/definitions/ServiceOfferingNode'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceOfferingNode
      tags:
        - ServiceOfferingNode
  /service_offerings:
    get:
      description: Returns an array of ServiceOffering objects
      operationId: listServiceOfferings
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferings collection
          schema:
            $ref: '#/definitions/ServiceOfferingsCollection'
      summary: List ServiceOfferings
      tags:
        - ServiceOffering
  '/service_offerings/{id}':
    get:
      description: Returns a ServiceOffering object
      operationId: showServiceOffering
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOffering info
          schema:
            $ref: '#/definitions/ServiceOffering'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServiceOffering
      tags:
        - ServiceOffering
  '/service_offerings/{id}/applied_inventories_tags':
    post:
      consumes:
        - application/json
      description: Returns an array of inventories tags
      operationId: appliedInventoriesTagsForServiceOffering
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
        - description: Parameters defining input data for computing inventories
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AppliedInventoriesParametersServicePlan'
      produces:
        - application/json
      responses:
        '200':
          description: Returns an array of inventories tags for the computing result
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
        '400':
          description: BadRequest
      summary: Invokes computing of ServiceInventories tags for given ServiceOffering
      tags:
        - ServiceOffering
  '/service_offerings/{id}/order':
    post:
      consumes:
        - application/json
      description: Returns a Task id
      operationId: orderServiceOffering
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
        - description: Order parameters defining the service and provider control
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderParametersServiceOffering'
      produces:
        - application/json
      responses:
        '200':
          description: Returns a task ID for the order
          schema:
            properties:
              task_id:
                type: string
            type: object
        '400':
          description: BadRequest
      summary: Order an existing ServiceOffering
      tags:
        - ServiceOffering
  '/service_offerings/{id}/service_instances':
    get:
      description: Returns an array of ServiceInstance objects
      operationId: listServiceOfferingServiceInstances
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInstances collection
          schema:
            $ref: '#/definitions/ServiceInstancesCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceInstances for ServiceOffering
      tags:
        - ServiceOffering
  '/service_offerings/{id}/service_offering_nodes':
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: listServiceOfferingServiceOfferingNodes
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferingNodes collection
          schema:
            $ref: '#/definitions/ServiceOfferingNodesCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceOfferingNodes for ServiceOffering
      tags:
        - ServiceOffering
  '/service_offerings/{id}/service_plans':
    get:
      description: Returns an array of ServicePlan objects
      operationId: listServiceOfferingServicePlans
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServicePlans collection
          schema:
            $ref: '#/definitions/ServicePlansCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServicePlans for ServiceOffering
      tags:
        - ServiceOffering
  /service_plans:
    get:
      description: Returns an array of ServicePlan objects
      operationId: listServicePlans
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: ServicePlans collection
          schema:
            $ref: '#/definitions/ServicePlansCollection'
      summary: List ServicePlans
      tags:
        - ServicePlan
  '/service_plans/{id}':
    get:
      description: Returns a ServicePlan object
      operationId: showServicePlan
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServicePlan info
          schema:
            $ref: '#/definitions/ServicePlan'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing ServicePlan
      tags:
        - ServicePlan
  /sources:
    get:
      description: Returns an array of Source objects
      operationId: listSources
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: Sources collection
          schema:
            $ref: '#/definitions/SourcesCollection'
      summary: List Sources
      tags:
        - Source
  '/sources/{id}':
    get:
      description: Returns a Source object
      operationId: showSource
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Source info
          schema:
            $ref: '#/definitions/Source'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing Source
      tags:
        - Source
  '/sources/{id}/incremental_refresh':
    patch:
      description: Incremental Refresh a source object
      operationId: incrementalRefreshSource
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      responses:
        '204':
          description: 'Updated, no content'
        '400':
          description: Bad request
        '404':
          description: Not found
        '429':
          description: Too many requests
      summary: Incremental Refresh an existing Source
      tags:
        - Source
  '/sources/{id}/refresh':
    patch:
      description: Refresh a source object
      operationId: refreshSource
      parameters:
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      responses:
        '204':
          description: 'Updated, no content'
        '400':
          description: Bad request
        '404':
          description: Not found
        '429':
          description: Too many requests
      summary: ' Refresh an existing Source'
      tags:
        - Source
  '/sources/{id}/service_instances':
    get:
      description: Returns an array of ServiceInstance objects
      operationId: listSourceServiceInstances
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInstances collection
          schema:
            $ref: '#/definitions/ServiceInstancesCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceInstances for Source
      tags:
        - Source
  '/sources/{id}/service_inventories':
    get:
      description: Returns an array of ServiceInventory objects
      operationId: listSourceServiceInventories
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceInventories collection
          schema:
            $ref: '#/definitions/ServiceInventoriesCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceInventories for Source
      tags:
        - Source
  '/sources/{id}/service_offering_nodes':
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: listSourceServiceOfferingNodes
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferingNodes collection
          schema:
            $ref: '#/definitions/ServiceOfferingNodesCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceOfferingNodes for Source
      tags:
        - Source
  '/sources/{id}/service_offerings':
    get:
      description: Returns an array of ServiceOffering objects
      operationId: listSourceServiceOfferings
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServiceOfferings collection
          schema:
            $ref: '#/definitions/ServiceOfferingsCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServiceOfferings for Source
      tags:
        - Source
  '/sources/{id}/service_plans':
    get:
      description: Returns an array of ServicePlan objects
      operationId: listSourceServicePlans
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ServicePlans collection
          schema:
            $ref: '#/definitions/ServicePlansCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List ServicePlans for Source
      tags:
        - Source
  '/sources/{id}/tasks':
    get:
      description: Returns an array of Task objects
      operationId: listSourceTasks
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
        - description: ID of the resource
          in: path
          name: id
          pattern: ^\d+$
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Tasks collection
          schema:
            $ref: '#/definitions/TasksCollection'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: List Tasks for Source
      tags:
        - Source
  /tags:
    get:
      description: Returns an array of Tag objects
      operationId: listTags
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: Tags collection
          schema:
            $ref: '#/definitions/TagsCollection'
      summary: List Tags
      tags:
        - Tags
  /tasks:
    get:
      description: Returns an array of Task objects
      operationId: listTasks
      parameters:
        - default: 100
          description: The numbers of items to return per page.
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - description: Filter for querying collections.
          in: query
          name: filter
          required: false
          type: object
        - description: The list of attribute and order to sort the result set by.
          in: query
          name: sort_by
          required: false
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: Tasks collection
          schema:
            $ref: '#/definitions/TasksCollection'
      summary: List Tasks
      tags:
        - Task
  '/tasks/{id}':
    get:
      description: Returns a Task object
      operationId: showTask
      parameters:
        - description: UUID of task
          in: path
          name: id
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Task info
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Show an existing Task
      tags:
        - Task
    patch:
      consumes:
        - application/json
      description: Updates a Task object
      operationId: updateTask
      parameters:
        - description: UUID of task
          in: path
          name: id
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          required: true
          type: string
        - description: Task attributes to update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Task'
      produces:
        - application/json
      responses:
        '204':
          description: 'Updated, no content'
        '400':
          description: Bad request
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorNotFound'
      summary: Update an existing Task
      tags:
        - Task
schemes:
  - https
security:
  - UserSecurity: []
securityDefinitions:
  UserSecurity:
    type: basic
swagger: '2.0'
x-components:
  parameters:
    ID:
      description: ID of the resource
      in: path
      name: id
      pattern: ^\d+$
      required: true
      type: string
    QueryFilter:
      description: Filter for querying collections.
      in: query
      name: filter
      required: false
      type: object
    QueryLimit:
      default: 100
      description: The numbers of items to return per page.
      in: query
      maximum: 1000
      minimum: 1
      name: limit
      required: false
      type: integer
    QueryOffset:
      default: 0
      description: The number of items to skip before starting to collect the result set.
      in: query
      minimum: 0
      name: offset
      required: false
      type: integer
    QuerySortBy:
      description: The list of attribute and order to sort the result set by.
      in: query
      name: sort_by
      required: false
      type: object
    UUID:
      description: UUID of task
      in: path
      name: id
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      required: true
      type: string

