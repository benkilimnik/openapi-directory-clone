basePath: /
host: api.nowpayments.io
info:
  contact: {}
  description: "NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple â€“ no excess.\n\n# Sandbox\nBefore production usage, you can test our API using the Sandbox. Details can be found [here](https://documenter.getpostman.com/view/7907941/T1LSCRHC)\n\n# Authentication\nTo use the NOWPayments API you should do the following:\n\n  * Sign up at [nowpayments.io](https://nowpayments.io)\n  * Specify your outcome wallet\n  * Generate an API key\n\n# Standard e-commerce flow for NOWPayments API:\n1. API - Check API availability with the [\"GET API status\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#9998079f-dcc8-4e07-9ac7-3d52f0fd733a) method. If required, check the list of available payment currencies with the [\"GET available currencies\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#1c268f89-4fe7-471e-81b4-5a3153577b73) method. \n2. UI - Ask a customer to select item/items for purchase to determine the total sum;\n3. UI - Ask a customer to select payment currency\n4. API - Get the minimum payment amount for the selected currency pair (payment currency to your Outcome Wallet currency) with the [\"GET Minimum payment amount\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#41b02221-2d58-4fcf-9529-59d3763d6434) method; \n5. API - Get the estimate of the total amount in crypto with [\"GET Estimated price\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#7025cacf-7040-4c7b-a83f-f9ff0a22a822) and check that it is larger than the minimum payment amount from step 4;\n6. API - Call the [\"POST Create payment\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#5e37f3ad-0fa1-4292-af51-5c7f95730486) method to create a payment and get the deposit address (in our example, the generated BTC wallet address is returned from this method);\n7. UI - Ask a customer to send the payment to the generated deposit address (in our example, user has to send BTC coins);\n8. UI - A customer sends coins, NOWPayments processes and exchanges them (if required), and settles the payment to your Outcome Wallet (in our example, to your ETH address);\n9. API - You can get the payment status either via our IPN callbacks or manually, using [\"GET Payment Status\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#0b77a8e3-2344-4760-a0bd-247da067db6d) and display it to a customer so that they know when their payment has been processed.\n10. API - you call the list of payments made to your account via the [\"GET List of payments\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#c8399c0e-d798-4f01-83ae-ddaa6905c2da) method. Additionally, you can see all of this information in your [Account](https://account.nowpayments.io/payments) on NOWPayments website.\n\n## Alternative flow\n1. API - Check API availability with the [\"GET API status\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#9998079f-dcc8-4e07-9ac7-3d52f0fd733a) method. If required, check the list of available payment currencies with the [\"GET available currencies\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#1c268f89-4fe7-471e-81b4-5a3153577b73) method. \n2. UI - Ask a customer to select item/items for purchase to determine the total sum;\n3. UI - Ask a customer to select payment currency\n4. API - Get the minimum payment amount for the selected currency pair (payment currency to your Outcome Wallet currency) with the [\"GET Minimum payment amount\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#41b02221-2d58-4fcf-9529-59d3763d6434) method; \n5. API - Get the estimate of the total amount in crypto with [\"GET Estimated price\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#7025cacf-7040-4c7b-a83f-f9ff0a22a822) and check that it is larger than the minimum payment amount from step 4;\n6. API - Call the [\"POST Create Invoice](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#3e3ce25e-f43f-4636-bbd9-11560e46048b) method to create an invoice. Set \"success_url\" - parameter so that the user will be redirected to your website after successful payment.\n7. UI - display the invoice url or redirect the user to the generated link.\n8. NOWPayments - the customer completes the payment and is redirected back to your website (only if \"success_url\" parameter is configured correctly!).\n9. API - You can get the payment status either via our IPN callbacks or manually, using [\"GET Payment Status\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#0b77a8e3-2344-4760-a0bd-247da067db6d) and display it to a customer so that they know when their payment has been processed.\n10. API - you call the list of payments made to your account via the [\"GET List of payments\"](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#c8399c0e-d798-4f01-83ae-ddaa6905c2da) method. Additionally, you can see all of this information in your [Account](https://account.nowpayments.io/invoices) on NOWPayments website.\n\n\n# API Documentation\n\n\n## Instant Payments Notifications\nIPN (Instant payment notifications, or callbacks) are used to notify you when transaction status is changed.\nTo use them, you should complete the following steps:\n\n1. Generate and save the IPN Secret key in Store Settings tab at the Dashboard.\n\n2. Insert your URL address where you want to get callbacks in create_payment request. The parameter name is ipn\\_callback\\_url. You will receive payment updates (statuses) to this URL address.\n\n3. You will receive all the parameters at  the URL address you specified in (2) by POST request.\nThe POST request will contain the *x-nowpayments-sig* parameter in the header.\nThe body of the request is similiar to a [get payment status](https://documenter.getpostman.com/view/7907941/S1a32n38?version=latest#0b77a8e3-2344-4760-a0bd-247da067db6d) response body.\nExample:\n{\"payment_id\":5077125051,\"payment_status\":\"waiting\",\"pay_address\":\"0xd1cDE08A07cD25adEbEd35c3867a59228C09B606\",\"price_amount\":170,\"price_currency\":\"usd\",\"pay_amount\":155.38559757,\"actually_paid\":0,\"pay_currency\":\"mana\",\"order_id\":\"2\",\"order_description\":\"Apple Macbook Pro 2019 x 1\",\"purchase_id\":\"6084744717\",\"created_at\":\"2021-04-12T14:22:54.942Z\",\"updated_at\":\"2021-04-12T14:23:06.244Z\",\"outcome_amount\":1131.7812095,\"outcome_currency\":\"trx\"}\n\n4. Sort all the parameters from the POST request in alphabetical order.\n\n5. Convert them to string using\n[JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) (params, Object.keys(params).sort()) or the same function.\n\n6. Sign a string with an IPN-secret key with HMAC and sha-512 key\n\n7. Compare the signed string from the previous step with the x-nowpayments-sig , which is stored in the header of the callback request.\nIf these strings are similar it is a success.\nOtherwise, contact us on support@nowpayments.io to solve the problem.\n\nExample of creating a signed string at Node.JS\n\n    const hmac = crypto.createHmac('sha512', notificationsKey);\n    hmac.update(JSON.stringify(params, Object.keys(params).sort()));\n    const signature = hmac.digest('hex');\n\nExample of comparing signed strings in PHP\n\n    function check_ipn_request_is_valid()\n        {\n            $error_msg = \"Unknown error\";\n            $auth_ok = false;\n            $request_data = null;\n            \n \n            if (isset($_SERVER['HTTP_X_NOWPAYMENTS_SIG']) && !empty($_SERVER['HTTP_X_NOWPAYMENTS_SIG'])) {\n                $recived_hmac = $_SERVER['HTTP_X_NOWPAYMENTS_SIG'];\n \n                $request_json = file_get_contents('php://input');\n                $request_data = json_decode($request_json, true);\n                ksort($request_data);\n                $sorted_request_json = json_encode($request_data);\n \n                if ($request_json !== false && !empty($request_json)) {\n                    $hmac = hash_hmac(\"sha512\", $sorted_request_json, trim($this->ipn_secret));\n \n                    if ($hmac == $recived_hmac) {\n                        $auth_ok = true;\n                    } else {\n                        $error_msg = 'HMAC signature does not match';\n                    }\n                } else {\n                    $error_msg = 'Error reading POST data';\n                }\n            } else {\n                $error_msg = 'No HMAC signature sent.';\n            }\n    \n        }\n    \n## Recurrent payment notifications\nIf an error is detected, the payment is flagged and will receive additional recurrent notifications (number of recurrent notifications can be changed in your Store Settings-> Instant Payment Notifications).\n\nIf an error is received again during processing of the payment, recurrent notifications will be initiated again.\n\nExample: \"Timeout\" is set to 1 minute and \"Number of recurrent notifications\" is set to 3.\n\nOnce an error is detected, you will receive 3 notifications at 1 minute intervals.\n\n## Several payments for one order\nIf you want to create several payments for one Order you should do the following:\n\n\_ * Create a payment for the full order amount.\n\_ * Save \"purchase_id\" which will be in \"create_payment\" response\n\_ * Create next payment or payments with this \"purchase_id\" in \"create_payment\" request.\n  * **Only works for partially_paid payments**\n\nIt may be useful if you want to give your customers opportunity to pay a full order with several payments, for example, one part in BTC and one part in ETH. Also, if your customer accidentally paid you only part of a full amount, you can automatically ask them to make another payment.\n\n## Packages\n\nPlease find our out-of-the box packages for easy integration below:\n\n[JavaScript package](https://www.npmjs.com/package/@nowpaymentsio/nowpayments-api-js)\n\nMore coming soon!\n\n## Payments"
  title: NOWPayments API
  version: 1.0.0
  x-apisguru-categories:
    - financial
  x-logo:
    url: >-
      https://pbs.twimg.com/profile_images/1351091723833909248/9Jqk2Tiu_400x400.jpg
  x-origin:
    - format: postman
      url: >-
        https://www.postman.com/collections/7907941-9f217404-4263-42ad-b6b1-03a3d95b7d22-S1a32n38
      version: 2.x
  x-providerName: nowpayments.io
paths:
  /v1/estimate:
    get:
      description: >-
        This is a method for calculating the approximate price in cryptocurrency
        for a given value in Fiat currency. You will need to provide the initial
        cost in the Fiat currency (amount, currency_from) and the necessary
        cryptocurrency (currency_to)

        Currently following fiat currencies are available: usd, eur, nzd, brl,
        gbp.
      operationId: 3.GetEstimatedPrice
      parameters:
        - in: query
          name: amount
          type: string
        - in: query
          name: currency_from
          type: string
        - in: query
          name: currency_to
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 3. Get estimated price
          headers:
            CF-Cache-Status:
              type: string
            CF-RAY:
              type: string
            Connection:
              type: string
            Content-Encoding:
              type: string
            Date:
              type: string
            Expect-CT:
              type: string
            NEL:
              type: string
            Report-To:
              type: string
            Server:
              type: string
            Strict-Transport-Security:
              type: string
            Transfer-Encoding:
              type: string
            Vary:
              type: string
            X-Content-Type-Options:
              type: string
            X-DNS-Prefetch-Control:
              type: string
            X-Download-Options:
              type: string
            X-Frame-Options:
              type: string
            X-XSS-Protection:
              type: string
            cf-request-id:
              type: string
          schema:
            properties:
              amount_from:
                example: 3999.5
                type: number
              currency_from:
                example: usd
                type: string
              currency_to:
                example: btc
                type: string
              estimated_amount:
                example: 0.17061637
                type: number
            type: object
      summary: 3. Get estimated price
  /v1/min-amount:
    get:
      description: >-
        Get the minimum payment amount for a specific pair.


        You can provide both currencies in the pair or just currency_from, and
        we will calculate the minimum payment amount for currency_from and
        currency which you have specified as the outcome in the Store Settings.


        In the case of several outcome wallets we will calculate the minimum
        amount in the same way we route your payment to a specific wallet.
      operationId: 6.GetTheMinimumPaymentAmount
      parameters:
        - in: query
          name: currency_from
          type: string
        - in: query
          name: currency_to
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 6. Get the minimum payment amount
          headers:
            CF-Cache-Status:
              type: string
            CF-RAY:
              type: string
            Connection:
              type: string
            Content-Encoding:
              type: string
            Date:
              type: string
            Expect-CT:
              type: string
            NEL:
              type: string
            Report-To:
              type: string
            Server:
              type: string
            Strict-Transport-Security:
              type: string
            Transfer-Encoding:
              type: string
            Vary:
              type: string
            X-Content-Type-Options:
              type: string
            X-DNS-Prefetch-Control:
              type: string
            X-Download-Options:
              type: string
            X-Frame-Options:
              type: string
            X-XSS-Protection:
              type: string
            cf-request-id:
              type: string
          schema:
            properties:
              currency_from:
                example: eth
                type: string
              currency_to:
                example: trx
                type: string
              min_amount:
                example: 0.0098927
                type: number
            type: object
      summary: 6. Get the minimum payment amount
  /v1/payment/:
    get:
      description: >-
        Returns the entire list of all transactions, created with certain API
        key.

        The list of optional parameters:

        - limit - number of records in one page. (possible values: from 1 to
        500)

        - page - the page number you want to get (possible values: from 0 to
        **page count - 1**)

        - sortBy - sort the received list by a paramenter. Set to **created_at**
        by default (possible values: payment_id, payment_status, pay_address,
        price_amount, price_currency, pay_amount, actually_paid, pay_currency,
        order_id, order_description, purchase_id, outcome_amount,
        outcome_currency)

        - orderBy - display the list in ascending or descending order. Set to
        **asc** by default (possible values: asc, desc)

        - dateFrom - select the displayed period start date (date format:
        YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).

        - dateTo - select the displayed period end date (date format: YYYY-MM-DD
        or yy-MM-ddTHH:mm:ss.SSSZ).
      operationId: 7.GetListOfPayments
      parameters:
        - in: query
          name: limit
          type: string
        - in: query
          name: page
          type: string
        - in: query
          name: sortBy
          type: string
        - in: query
          name: orderBy
          type: string
        - in: query
          name: dateFrom
          type: string
        - in: query
          name: dateTo
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 7.Get list of payments
          headers:
            CF-Cache-Status:
              type: string
            CF-RAY:
              type: string
            Connection:
              type: string
            Content-Encoding:
              type: string
            Date:
              type: string
            Expect-CT:
              type: string
            NEL:
              type: string
            Report-To:
              type: string
            Server:
              type: string
            Strict-Transport-Security:
              type: string
            Transfer-Encoding:
              type: string
            Vary:
              type: string
            X-Content-Type-Options:
              type: string
            X-DNS-Prefetch-Control:
              type: string
            X-Download-Options:
              type: string
            X-Frame-Options:
              type: string
            X-XSS-Protection:
              type: string
            cf-request-id:
              type: string
          schema:
            properties:
              data:
                items:
                  properties:
                    actually_paid:
                      example: 180
                      type: number
                    order_description:
                      example: Apple Macbook Pro 2019 x 1
                      type: string
                    order_id:
                      example: RGDBP-21314
                      type: string
                    outcome_amount:
                      example: 178.9005
                      type: number
                    outcome_currency:
                      example: trx
                      type: string
                    pay_address:
                      example: TNDFkiSmBQorNFacb3735q8MnT29sn8BLn
                      type: string
                    pay_amount:
                      example: 165.652609
                      type: number
                    pay_currency:
                      example: trx
                      type: string
                    payment_id:
                      example: 5524759814
                      type: number
                    payment_status:
                      example: finished
                      type: string
                    price_amount:
                      example: 5
                      type: number
                    price_currency:
                      example: usd
                      type: string
                    purchase_id:
                      example: '4944856743'
                      type: string
                  type: object
                type: array
              limit:
                example: 10
                type: number
              page:
                example: 0
                type: number
              pagesCount:
                example: 6
                type: number
              total:
                example: 59
                type: number
            type: object
      summary: 7. Get list of payments
schemes:
  - https
swagger: '2.0'
tags: []

